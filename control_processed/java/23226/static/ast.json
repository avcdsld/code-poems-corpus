{
  "type": "program",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 15,
    "column": 2
  },
  "text": "public static int findRandomAvailablePort(int minPort, int maxPort) {\n\t\tint portRange = maxPort - minPort;\n\t\tint candidatePort;\n\t\tint searchCounter = 0;\n\n\t\tdo {\n\t\t\tif (++searchCounter > portRange) {\n\t\t\t\tthrow new IllegalStateException(\n\t\t\t\t\t\tString.format(\"Could not find an available tcp port in the range [%d, %d] after %d attempts\",\n\t\t\t\t\t\t\t\tminPort, maxPort, searchCounter));\n\t\t\t}\n\t\t\tcandidatePort = minPort + random.nextInt(portRange + 1);\n\t\t} while (!isPortAvailable(candidatePort));\n\n\t\treturn candidatePort;\n\t}",
  "children": [
    {
      "type": "method_declaration",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 15,
        "column": 2
      },
      "text": "public static int findRandomAvailablePort(int minPort, int maxPort) {\n\t\tint portRange = maxPort - minPort;\n\t\tint candidatePort;\n\t\tint searchCounter = 0;\n\n\t\tdo {\n\t\t\tif (++searchCounter > portRange) {\n\t\t\t\tthrow new IllegalStateException(\n\t\t\t\t\t\tString.format(\"Could not find an available tcp port in the range [%d, %d] after %d attempts\",\n\t\t\t\t\t\t\t\tminPort, maxPort, searchCounter));\n\t\t\t}\n\t\t\tcandidatePort = minPort + random.nextInt(portRange + 1);\n\t\t} while (!isPortAvailable(candidatePort));\n\n\t\treturn candidatePort;\n\t}",
      "children": [
        {
          "type": "modifiers",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 13
          },
          "text": "public static",
          "children": [
            {
              "type": "public",
              "start": {
                "row": 0,
                "column": 0
              },
              "end": {
                "row": 0,
                "column": 6
              },
              "text": "public"
            },
            {
              "type": "static",
              "start": {
                "row": 0,
                "column": 7
              },
              "end": {
                "row": 0,
                "column": 13
              },
              "text": "static"
            }
          ]
        },
        {
          "type": "integral_type",
          "start": {
            "row": 0,
            "column": 14
          },
          "end": {
            "row": 0,
            "column": 17
          },
          "text": "int",
          "children": [
            {
              "type": "int",
              "start": {
                "row": 0,
                "column": 14
              },
              "end": {
                "row": 0,
                "column": 17
              },
              "text": "int"
            }
          ]
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 18
          },
          "end": {
            "row": 0,
            "column": 41
          },
          "text": "findRandomAvailablePort"
        },
        {
          "type": "formal_parameters",
          "start": {
            "row": 0,
            "column": 41
          },
          "end": {
            "row": 0,
            "column": 67
          },
          "text": "(int minPort, int maxPort)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 41
              },
              "end": {
                "row": 0,
                "column": 42
              },
              "text": "("
            },
            {
              "type": "formal_parameter",
              "start": {
                "row": 0,
                "column": 42
              },
              "end": {
                "row": 0,
                "column": 53
              },
              "text": "int minPort",
              "children": [
                {
                  "type": "integral_type",
                  "start": {
                    "row": 0,
                    "column": 42
                  },
                  "end": {
                    "row": 0,
                    "column": 45
                  },
                  "text": "int",
                  "children": [
                    {
                      "type": "int",
                      "start": {
                        "row": 0,
                        "column": 42
                      },
                      "end": {
                        "row": 0,
                        "column": 45
                      },
                      "text": "int"
                    }
                  ]
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 46
                  },
                  "end": {
                    "row": 0,
                    "column": 53
                  },
                  "text": "minPort"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 53
              },
              "end": {
                "row": 0,
                "column": 54
              },
              "text": ","
            },
            {
              "type": "formal_parameter",
              "start": {
                "row": 0,
                "column": 55
              },
              "end": {
                "row": 0,
                "column": 66
              },
              "text": "int maxPort",
              "children": [
                {
                  "type": "integral_type",
                  "start": {
                    "row": 0,
                    "column": 55
                  },
                  "end": {
                    "row": 0,
                    "column": 58
                  },
                  "text": "int",
                  "children": [
                    {
                      "type": "int",
                      "start": {
                        "row": 0,
                        "column": 55
                      },
                      "end": {
                        "row": 0,
                        "column": 58
                      },
                      "text": "int"
                    }
                  ]
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 59
                  },
                  "end": {
                    "row": 0,
                    "column": 66
                  },
                  "text": "maxPort"
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 66
              },
              "end": {
                "row": 0,
                "column": 67
              },
              "text": ")"
            }
          ]
        },
        {
          "type": "block",
          "start": {
            "row": 0,
            "column": 68
          },
          "end": {
            "row": 15,
            "column": 2
          },
          "text": "{\n\t\tint portRange = maxPort - minPort;\n\t\tint candidatePort;\n\t\tint searchCounter = 0;\n\n\t\tdo {\n\t\t\tif (++searchCounter > portRange) {\n\t\t\t\tthrow new IllegalStateException(\n\t\t\t\t\t\tString.format(\"Could not find an available tcp port in the range [%d, %d] after %d attempts\",\n\t\t\t\t\t\t\t\tminPort, maxPort, searchCounter));\n\t\t\t}\n\t\t\tcandidatePort = minPort + random.nextInt(portRange + 1);\n\t\t} while (!isPortAvailable(candidatePort));\n\n\t\treturn candidatePort;\n\t}",
          "children": [
            {
              "type": "{",
              "start": {
                "row": 0,
                "column": 68
              },
              "end": {
                "row": 0,
                "column": 69
              },
              "text": "{"
            },
            {
              "type": "local_variable_declaration",
              "start": {
                "row": 1,
                "column": 2
              },
              "end": {
                "row": 1,
                "column": 36
              },
              "text": "int portRange = maxPort - minPort;",
              "children": [
                {
                  "type": "integral_type",
                  "start": {
                    "row": 1,
                    "column": 2
                  },
                  "end": {
                    "row": 1,
                    "column": 5
                  },
                  "text": "int",
                  "children": [
                    {
                      "type": "int",
                      "start": {
                        "row": 1,
                        "column": 2
                      },
                      "end": {
                        "row": 1,
                        "column": 5
                      },
                      "text": "int"
                    }
                  ]
                },
                {
                  "type": "variable_declarator",
                  "start": {
                    "row": 1,
                    "column": 6
                  },
                  "end": {
                    "row": 1,
                    "column": 35
                  },
                  "text": "portRange = maxPort - minPort",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 1,
                        "column": 6
                      },
                      "end": {
                        "row": 1,
                        "column": 15
                      },
                      "text": "portRange"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 1,
                        "column": 16
                      },
                      "end": {
                        "row": 1,
                        "column": 17
                      },
                      "text": "="
                    },
                    {
                      "type": "binary_expression",
                      "start": {
                        "row": 1,
                        "column": 18
                      },
                      "end": {
                        "row": 1,
                        "column": 35
                      },
                      "text": "maxPort - minPort",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 1,
                            "column": 18
                          },
                          "end": {
                            "row": 1,
                            "column": 25
                          },
                          "text": "maxPort"
                        },
                        {
                          "type": "-",
                          "start": {
                            "row": 1,
                            "column": 26
                          },
                          "end": {
                            "row": 1,
                            "column": 27
                          },
                          "text": "-"
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 1,
                            "column": 28
                          },
                          "end": {
                            "row": 1,
                            "column": 35
                          },
                          "text": "minPort"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 1,
                    "column": 35
                  },
                  "end": {
                    "row": 1,
                    "column": 36
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "local_variable_declaration",
              "start": {
                "row": 2,
                "column": 2
              },
              "end": {
                "row": 2,
                "column": 20
              },
              "text": "int candidatePort;",
              "children": [
                {
                  "type": "integral_type",
                  "start": {
                    "row": 2,
                    "column": 2
                  },
                  "end": {
                    "row": 2,
                    "column": 5
                  },
                  "text": "int",
                  "children": [
                    {
                      "type": "int",
                      "start": {
                        "row": 2,
                        "column": 2
                      },
                      "end": {
                        "row": 2,
                        "column": 5
                      },
                      "text": "int"
                    }
                  ]
                },
                {
                  "type": "variable_declarator",
                  "start": {
                    "row": 2,
                    "column": 6
                  },
                  "end": {
                    "row": 2,
                    "column": 19
                  },
                  "text": "candidatePort",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 2,
                        "column": 6
                      },
                      "end": {
                        "row": 2,
                        "column": 19
                      },
                      "text": "candidatePort"
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 2,
                    "column": 19
                  },
                  "end": {
                    "row": 2,
                    "column": 20
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "local_variable_declaration",
              "start": {
                "row": 3,
                "column": 2
              },
              "end": {
                "row": 3,
                "column": 24
              },
              "text": "int searchCounter = 0;",
              "children": [
                {
                  "type": "integral_type",
                  "start": {
                    "row": 3,
                    "column": 2
                  },
                  "end": {
                    "row": 3,
                    "column": 5
                  },
                  "text": "int",
                  "children": [
                    {
                      "type": "int",
                      "start": {
                        "row": 3,
                        "column": 2
                      },
                      "end": {
                        "row": 3,
                        "column": 5
                      },
                      "text": "int"
                    }
                  ]
                },
                {
                  "type": "variable_declarator",
                  "start": {
                    "row": 3,
                    "column": 6
                  },
                  "end": {
                    "row": 3,
                    "column": 23
                  },
                  "text": "searchCounter = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 3,
                        "column": 6
                      },
                      "end": {
                        "row": 3,
                        "column": 19
                      },
                      "text": "searchCounter"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 3,
                        "column": 20
                      },
                      "end": {
                        "row": 3,
                        "column": 21
                      },
                      "text": "="
                    },
                    {
                      "type": "decimal_integer_literal",
                      "start": {
                        "row": 3,
                        "column": 22
                      },
                      "end": {
                        "row": 3,
                        "column": 23
                      },
                      "text": "0"
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 3,
                    "column": 23
                  },
                  "end": {
                    "row": 3,
                    "column": 24
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "do_statement",
              "start": {
                "row": 5,
                "column": 2
              },
              "end": {
                "row": 12,
                "column": 44
              },
              "text": "do {\n\t\t\tif (++searchCounter > portRange) {\n\t\t\t\tthrow new IllegalStateException(\n\t\t\t\t\t\tString.format(\"Could not find an available tcp port in the range [%d, %d] after %d attempts\",\n\t\t\t\t\t\t\t\tminPort, maxPort, searchCounter));\n\t\t\t}\n\t\t\tcandidatePort = minPort + random.nextInt(portRange + 1);\n\t\t} while (!isPortAvailable(candidatePort));",
              "children": [
                {
                  "type": "do",
                  "start": {
                    "row": 5,
                    "column": 2
                  },
                  "end": {
                    "row": 5,
                    "column": 4
                  },
                  "text": "do"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 5,
                    "column": 5
                  },
                  "end": {
                    "row": 12,
                    "column": 3
                  },
                  "text": "{\n\t\t\tif (++searchCounter > portRange) {\n\t\t\t\tthrow new IllegalStateException(\n\t\t\t\t\t\tString.format(\"Could not find an available tcp port in the range [%d, %d] after %d attempts\",\n\t\t\t\t\t\t\t\tminPort, maxPort, searchCounter));\n\t\t\t}\n\t\t\tcandidatePort = minPort + random.nextInt(portRange + 1);\n\t\t}",
                  "children": [
                    {
                      "type": "{",
                      "start": {
                        "row": 5,
                        "column": 5
                      },
                      "end": {
                        "row": 5,
                        "column": 6
                      },
                      "text": "{"
                    },
                    {
                      "type": "if_statement",
                      "start": {
                        "row": 6,
                        "column": 3
                      },
                      "end": {
                        "row": 10,
                        "column": 4
                      },
                      "text": "if (++searchCounter > portRange) {\n\t\t\t\tthrow new IllegalStateException(\n\t\t\t\t\t\tString.format(\"Could not find an available tcp port in the range [%d, %d] after %d attempts\",\n\t\t\t\t\t\t\t\tminPort, maxPort, searchCounter));\n\t\t\t}",
                      "children": [
                        {
                          "type": "if",
                          "start": {
                            "row": 6,
                            "column": 3
                          },
                          "end": {
                            "row": 6,
                            "column": 5
                          },
                          "text": "if"
                        },
                        {
                          "type": "condition",
                          "start": {
                            "row": 6,
                            "column": 6
                          },
                          "end": {
                            "row": 6,
                            "column": 35
                          },
                          "text": "(++searchCounter > portRange)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 6,
                                "column": 6
                              },
                              "end": {
                                "row": 6,
                                "column": 7
                              },
                              "text": "("
                            },
                            {
                              "type": "binary_expression",
                              "start": {
                                "row": 6,
                                "column": 7
                              },
                              "end": {
                                "row": 6,
                                "column": 34
                              },
                              "text": "++searchCounter > portRange",
                              "children": [
                                {
                                  "type": "update_expression",
                                  "start": {
                                    "row": 6,
                                    "column": 7
                                  },
                                  "end": {
                                    "row": 6,
                                    "column": 22
                                  },
                                  "text": "++searchCounter",
                                  "children": [
                                    {
                                      "type": "++",
                                      "start": {
                                        "row": 6,
                                        "column": 7
                                      },
                                      "end": {
                                        "row": 6,
                                        "column": 9
                                      },
                                      "text": "++"
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 6,
                                        "column": 9
                                      },
                                      "end": {
                                        "row": 6,
                                        "column": 22
                                      },
                                      "text": "searchCounter"
                                    }
                                  ]
                                },
                                {
                                  "type": ">",
                                  "start": {
                                    "row": 6,
                                    "column": 23
                                  },
                                  "end": {
                                    "row": 6,
                                    "column": 24
                                  },
                                  "text": ">"
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 6,
                                    "column": 25
                                  },
                                  "end": {
                                    "row": 6,
                                    "column": 34
                                  },
                                  "text": "portRange"
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 6,
                                "column": 34
                              },
                              "end": {
                                "row": 6,
                                "column": 35
                              },
                              "text": ")"
                            }
                          ]
                        },
                        {
                          "type": "block",
                          "start": {
                            "row": 6,
                            "column": 36
                          },
                          "end": {
                            "row": 10,
                            "column": 4
                          },
                          "text": "{\n\t\t\t\tthrow new IllegalStateException(\n\t\t\t\t\t\tString.format(\"Could not find an available tcp port in the range [%d, %d] after %d attempts\",\n\t\t\t\t\t\t\t\tminPort, maxPort, searchCounter));\n\t\t\t}",
                          "children": [
                            {
                              "type": "{",
                              "start": {
                                "row": 6,
                                "column": 36
                              },
                              "end": {
                                "row": 6,
                                "column": 37
                              },
                              "text": "{"
                            },
                            {
                              "type": "throw_statement",
                              "start": {
                                "row": 7,
                                "column": 4
                              },
                              "end": {
                                "row": 9,
                                "column": 42
                              },
                              "text": "throw new IllegalStateException(\n\t\t\t\t\t\tString.format(\"Could not find an available tcp port in the range [%d, %d] after %d attempts\",\n\t\t\t\t\t\t\t\tminPort, maxPort, searchCounter));",
                              "children": [
                                {
                                  "type": "throw",
                                  "start": {
                                    "row": 7,
                                    "column": 4
                                  },
                                  "end": {
                                    "row": 7,
                                    "column": 9
                                  },
                                  "text": "throw"
                                },
                                {
                                  "type": "object_creation_expression",
                                  "start": {
                                    "row": 7,
                                    "column": 10
                                  },
                                  "end": {
                                    "row": 9,
                                    "column": 41
                                  },
                                  "text": "new IllegalStateException(\n\t\t\t\t\t\tString.format(\"Could not find an available tcp port in the range [%d, %d] after %d attempts\",\n\t\t\t\t\t\t\t\tminPort, maxPort, searchCounter))",
                                  "children": [
                                    {
                                      "type": "new",
                                      "start": {
                                        "row": 7,
                                        "column": 10
                                      },
                                      "end": {
                                        "row": 7,
                                        "column": 13
                                      },
                                      "text": "new"
                                    },
                                    {
                                      "type": "type_identifier",
                                      "start": {
                                        "row": 7,
                                        "column": 14
                                      },
                                      "end": {
                                        "row": 7,
                                        "column": 35
                                      },
                                      "text": "IllegalStateException"
                                    },
                                    {
                                      "type": "argument_list",
                                      "start": {
                                        "row": 7,
                                        "column": 35
                                      },
                                      "end": {
                                        "row": 9,
                                        "column": 41
                                      },
                                      "text": "(\n\t\t\t\t\t\tString.format(\"Could not find an available tcp port in the range [%d, %d] after %d attempts\",\n\t\t\t\t\t\t\t\tminPort, maxPort, searchCounter))",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 7,
                                            "column": 35
                                          },
                                          "end": {
                                            "row": 7,
                                            "column": 36
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "method_invocation",
                                          "start": {
                                            "row": 8,
                                            "column": 6
                                          },
                                          "end": {
                                            "row": 9,
                                            "column": 40
                                          },
                                          "text": "String.format(\"Could not find an available tcp port in the range [%d, %d] after %d attempts\",\n\t\t\t\t\t\t\t\tminPort, maxPort, searchCounter)",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 8,
                                                "column": 6
                                              },
                                              "end": {
                                                "row": 8,
                                                "column": 12
                                              },
                                              "text": "String"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 8,
                                                "column": 12
                                              },
                                              "end": {
                                                "row": 8,
                                                "column": 13
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 8,
                                                "column": 13
                                              },
                                              "end": {
                                                "row": 8,
                                                "column": 19
                                              },
                                              "text": "format"
                                            },
                                            {
                                              "type": "argument_list",
                                              "start": {
                                                "row": 8,
                                                "column": 19
                                              },
                                              "end": {
                                                "row": 9,
                                                "column": 40
                                              },
                                              "text": "(\"Could not find an available tcp port in the range [%d, %d] after %d attempts\",\n\t\t\t\t\t\t\t\tminPort, maxPort, searchCounter)",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 8,
                                                    "column": 19
                                                  },
                                                  "end": {
                                                    "row": 8,
                                                    "column": 20
                                                  },
                                                  "text": "("
                                                },
                                                {
                                                  "type": "string_literal",
                                                  "start": {
                                                    "row": 8,
                                                    "column": 20
                                                  },
                                                  "end": {
                                                    "row": 8,
                                                    "column": 98
                                                  },
                                                  "text": "\"Could not find an available tcp port in the range [%d, %d] after %d attempts\"",
                                                  "children": [
                                                    {
                                                      "type": "\"",
                                                      "start": {
                                                        "row": 8,
                                                        "column": 20
                                                      },
                                                      "end": {
                                                        "row": 8,
                                                        "column": 21
                                                      },
                                                      "text": "\""
                                                    },
                                                    {
                                                      "type": "string_fragment",
                                                      "start": {
                                                        "row": 8,
                                                        "column": 21
                                                      },
                                                      "end": {
                                                        "row": 8,
                                                        "column": 97
                                                      },
                                                      "text": "Could not find an available tcp port in the range [%d, %d] after %d attempts"
                                                    },
                                                    {
                                                      "type": "\"",
                                                      "start": {
                                                        "row": 8,
                                                        "column": 97
                                                      },
                                                      "end": {
                                                        "row": 8,
                                                        "column": 98
                                                      },
                                                      "text": "\""
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ",",
                                                  "start": {
                                                    "row": 8,
                                                    "column": 98
                                                  },
                                                  "end": {
                                                    "row": 8,
                                                    "column": 99
                                                  },
                                                  "text": ","
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 9,
                                                    "column": 8
                                                  },
                                                  "end": {
                                                    "row": 9,
                                                    "column": 15
                                                  },
                                                  "text": "minPort"
                                                },
                                                {
                                                  "type": ",",
                                                  "start": {
                                                    "row": 9,
                                                    "column": 15
                                                  },
                                                  "end": {
                                                    "row": 9,
                                                    "column": 16
                                                  },
                                                  "text": ","
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 9,
                                                    "column": 17
                                                  },
                                                  "end": {
                                                    "row": 9,
                                                    "column": 24
                                                  },
                                                  "text": "maxPort"
                                                },
                                                {
                                                  "type": ",",
                                                  "start": {
                                                    "row": 9,
                                                    "column": 24
                                                  },
                                                  "end": {
                                                    "row": 9,
                                                    "column": 25
                                                  },
                                                  "text": ","
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 9,
                                                    "column": 26
                                                  },
                                                  "end": {
                                                    "row": 9,
                                                    "column": 39
                                                  },
                                                  "text": "searchCounter"
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 9,
                                                    "column": 39
                                                  },
                                                  "end": {
                                                    "row": 9,
                                                    "column": 40
                                                  },
                                                  "text": ")"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 9,
                                            "column": 40
                                          },
                                          "end": {
                                            "row": 9,
                                            "column": 41
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start": {
                                    "row": 9,
                                    "column": 41
                                  },
                                  "end": {
                                    "row": 9,
                                    "column": 42
                                  },
                                  "text": ";"
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start": {
                                "row": 10,
                                "column": 3
                              },
                              "end": {
                                "row": 10,
                                "column": 4
                              },
                              "text": "}"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 11,
                        "column": 3
                      },
                      "end": {
                        "row": 11,
                        "column": 59
                      },
                      "text": "candidatePort = minPort + random.nextInt(portRange + 1);",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start": {
                            "row": 11,
                            "column": 3
                          },
                          "end": {
                            "row": 11,
                            "column": 58
                          },
                          "text": "candidatePort = minPort + random.nextInt(portRange + 1)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 11,
                                "column": 3
                              },
                              "end": {
                                "row": 11,
                                "column": 16
                              },
                              "text": "candidatePort"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 11,
                                "column": 17
                              },
                              "end": {
                                "row": 11,
                                "column": 18
                              },
                              "text": "="
                            },
                            {
                              "type": "binary_expression",
                              "start": {
                                "row": 11,
                                "column": 19
                              },
                              "end": {
                                "row": 11,
                                "column": 58
                              },
                              "text": "minPort + random.nextInt(portRange + 1)",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 11,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 26
                                  },
                                  "text": "minPort"
                                },
                                {
                                  "type": "+",
                                  "start": {
                                    "row": 11,
                                    "column": 27
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 28
                                  },
                                  "text": "+"
                                },
                                {
                                  "type": "method_invocation",
                                  "start": {
                                    "row": 11,
                                    "column": 29
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 58
                                  },
                                  "text": "random.nextInt(portRange + 1)",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 11,
                                        "column": 29
                                      },
                                      "end": {
                                        "row": 11,
                                        "column": 35
                                      },
                                      "text": "random"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 11,
                                        "column": 35
                                      },
                                      "end": {
                                        "row": 11,
                                        "column": 36
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 11,
                                        "column": 36
                                      },
                                      "end": {
                                        "row": 11,
                                        "column": 43
                                      },
                                      "text": "nextInt"
                                    },
                                    {
                                      "type": "argument_list",
                                      "start": {
                                        "row": 11,
                                        "column": 43
                                      },
                                      "end": {
                                        "row": 11,
                                        "column": 58
                                      },
                                      "text": "(portRange + 1)",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 11,
                                            "column": 43
                                          },
                                          "end": {
                                            "row": 11,
                                            "column": 44
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start": {
                                            "row": 11,
                                            "column": 44
                                          },
                                          "end": {
                                            "row": 11,
                                            "column": 57
                                          },
                                          "text": "portRange + 1",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 11,
                                                "column": 44
                                              },
                                              "end": {
                                                "row": 11,
                                                "column": 53
                                              },
                                              "text": "portRange"
                                            },
                                            {
                                              "type": "+",
                                              "start": {
                                                "row": 11,
                                                "column": 54
                                              },
                                              "end": {
                                                "row": 11,
                                                "column": 55
                                              },
                                              "text": "+"
                                            },
                                            {
                                              "type": "decimal_integer_literal",
                                              "start": {
                                                "row": 11,
                                                "column": 56
                                              },
                                              "end": {
                                                "row": 11,
                                                "column": 57
                                              },
                                              "text": "1"
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 11,
                                            "column": 57
                                          },
                                          "end": {
                                            "row": 11,
                                            "column": 58
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start": {
                            "row": 11,
                            "column": 58
                          },
                          "end": {
                            "row": 11,
                            "column": 59
                          },
                          "text": ";"
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start": {
                        "row": 12,
                        "column": 2
                      },
                      "end": {
                        "row": 12,
                        "column": 3
                      },
                      "text": "}"
                    }
                  ]
                },
                {
                  "type": "while",
                  "start": {
                    "row": 12,
                    "column": 4
                  },
                  "end": {
                    "row": 12,
                    "column": 9
                  },
                  "text": "while"
                },
                {
                  "type": "parenthesized_expression",
                  "start": {
                    "row": 12,
                    "column": 10
                  },
                  "end": {
                    "row": 12,
                    "column": 43
                  },
                  "text": "(!isPortAvailable(candidatePort))",
                  "children": [
                    {
                      "type": "(",
                      "start": {
                        "row": 12,
                        "column": 10
                      },
                      "end": {
                        "row": 12,
                        "column": 11
                      },
                      "text": "("
                    },
                    {
                      "type": "unary_expression",
                      "start": {
                        "row": 12,
                        "column": 11
                      },
                      "end": {
                        "row": 12,
                        "column": 42
                      },
                      "text": "!isPortAvailable(candidatePort)",
                      "children": [
                        {
                          "type": "!",
                          "start": {
                            "row": 12,
                            "column": 11
                          },
                          "end": {
                            "row": 12,
                            "column": 12
                          },
                          "text": "!"
                        },
                        {
                          "type": "method_invocation",
                          "start": {
                            "row": 12,
                            "column": 12
                          },
                          "end": {
                            "row": 12,
                            "column": 42
                          },
                          "text": "isPortAvailable(candidatePort)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 12,
                                "column": 12
                              },
                              "end": {
                                "row": 12,
                                "column": 27
                              },
                              "text": "isPortAvailable"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 12,
                                "column": 27
                              },
                              "end": {
                                "row": 12,
                                "column": 42
                              },
                              "text": "(candidatePort)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 12,
                                    "column": 27
                                  },
                                  "end": {
                                    "row": 12,
                                    "column": 28
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 12,
                                    "column": 28
                                  },
                                  "end": {
                                    "row": 12,
                                    "column": 41
                                  },
                                  "text": "candidatePort"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 12,
                                    "column": 41
                                  },
                                  "end": {
                                    "row": 12,
                                    "column": 42
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start": {
                        "row": 12,
                        "column": 42
                      },
                      "end": {
                        "row": 12,
                        "column": 43
                      },
                      "text": ")"
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 12,
                    "column": 43
                  },
                  "end": {
                    "row": 12,
                    "column": 44
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 14,
                "column": 2
              },
              "end": {
                "row": 14,
                "column": 23
              },
              "text": "return candidatePort;",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 14,
                    "column": 2
                  },
                  "end": {
                    "row": 14,
                    "column": 8
                  },
                  "text": "return"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 14,
                    "column": 9
                  },
                  "end": {
                    "row": 14,
                    "column": 22
                  },
                  "text": "candidatePort"
                },
                {
                  "type": ";",
                  "start": {
                    "row": 14,
                    "column": 22
                  },
                  "end": {
                    "row": 14,
                    "column": 23
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "}",
              "start": {
                "row": 15,
                "column": 1
              },
              "end": {
                "row": 15,
                "column": 2
              },
              "text": "}"
            }
          ]
        }
      ]
    }
  ]
}