{
  "type": "program",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 8,
    "column": 5
  },
  "text": "public FunctionHandle resolveFunction(Session session, QualifiedName name, List<TypeSignatureProvider> parameterTypes)\n    {\n        // TODO Actually use session\n        // Session will be used to provide information about the order of function namespaces to through resolving the function.\n        // This is likely to be in terms of SQL path. Currently we still don't have support multiple function namespaces, nor\n        // SQL path. As a result, session is not used here. We still add this to distinguish the two versions of resolveFunction\n        // while the refactoring is on-going.\n        return staticFunctionNamespace.resolveFunction(name, parameterTypes);\n    }",
  "children": [
    {
      "type": "method_declaration",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 8,
        "column": 5
      },
      "text": "public FunctionHandle resolveFunction(Session session, QualifiedName name, List<TypeSignatureProvider> parameterTypes)\n    {\n        // TODO Actually use session\n        // Session will be used to provide information about the order of function namespaces to through resolving the function.\n        // This is likely to be in terms of SQL path. Currently we still don't have support multiple function namespaces, nor\n        // SQL path. As a result, session is not used here. We still add this to distinguish the two versions of resolveFunction\n        // while the refactoring is on-going.\n        return staticFunctionNamespace.resolveFunction(name, parameterTypes);\n    }",
      "children": [
        {
          "type": "modifiers",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 6
          },
          "text": "public",
          "children": [
            {
              "type": "public",
              "start": {
                "row": 0,
                "column": 0
              },
              "end": {
                "row": 0,
                "column": 6
              },
              "text": "public"
            }
          ]
        },
        {
          "type": "type_identifier",
          "start": {
            "row": 0,
            "column": 7
          },
          "end": {
            "row": 0,
            "column": 21
          },
          "text": "FunctionHandle"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 22
          },
          "end": {
            "row": 0,
            "column": 37
          },
          "text": "resolveFunction"
        },
        {
          "type": "formal_parameters",
          "start": {
            "row": 0,
            "column": 37
          },
          "end": {
            "row": 0,
            "column": 118
          },
          "text": "(Session session, QualifiedName name, List<TypeSignatureProvider> parameterTypes)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 37
              },
              "end": {
                "row": 0,
                "column": 38
              },
              "text": "("
            },
            {
              "type": "formal_parameter",
              "start": {
                "row": 0,
                "column": 38
              },
              "end": {
                "row": 0,
                "column": 53
              },
              "text": "Session session",
              "children": [
                {
                  "type": "type_identifier",
                  "start": {
                    "row": 0,
                    "column": 38
                  },
                  "end": {
                    "row": 0,
                    "column": 45
                  },
                  "text": "Session"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 46
                  },
                  "end": {
                    "row": 0,
                    "column": 53
                  },
                  "text": "session"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 53
              },
              "end": {
                "row": 0,
                "column": 54
              },
              "text": ","
            },
            {
              "type": "formal_parameter",
              "start": {
                "row": 0,
                "column": 55
              },
              "end": {
                "row": 0,
                "column": 73
              },
              "text": "QualifiedName name",
              "children": [
                {
                  "type": "type_identifier",
                  "start": {
                    "row": 0,
                    "column": 55
                  },
                  "end": {
                    "row": 0,
                    "column": 68
                  },
                  "text": "QualifiedName"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 69
                  },
                  "end": {
                    "row": 0,
                    "column": 73
                  },
                  "text": "name"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 73
              },
              "end": {
                "row": 0,
                "column": 74
              },
              "text": ","
            },
            {
              "type": "formal_parameter",
              "start": {
                "row": 0,
                "column": 75
              },
              "end": {
                "row": 0,
                "column": 117
              },
              "text": "List<TypeSignatureProvider> parameterTypes",
              "children": [
                {
                  "type": "generic_type",
                  "start": {
                    "row": 0,
                    "column": 75
                  },
                  "end": {
                    "row": 0,
                    "column": 102
                  },
                  "text": "List<TypeSignatureProvider>",
                  "children": [
                    {
                      "type": "type_identifier",
                      "start": {
                        "row": 0,
                        "column": 75
                      },
                      "end": {
                        "row": 0,
                        "column": 79
                      },
                      "text": "List"
                    },
                    {
                      "type": "type_arguments",
                      "start": {
                        "row": 0,
                        "column": 79
                      },
                      "end": {
                        "row": 0,
                        "column": 102
                      },
                      "text": "<TypeSignatureProvider>",
                      "children": [
                        {
                          "type": "<",
                          "start": {
                            "row": 0,
                            "column": 79
                          },
                          "end": {
                            "row": 0,
                            "column": 80
                          },
                          "text": "<"
                        },
                        {
                          "type": "type_identifier",
                          "start": {
                            "row": 0,
                            "column": 80
                          },
                          "end": {
                            "row": 0,
                            "column": 101
                          },
                          "text": "TypeSignatureProvider"
                        },
                        {
                          "type": ">",
                          "start": {
                            "row": 0,
                            "column": 101
                          },
                          "end": {
                            "row": 0,
                            "column": 102
                          },
                          "text": ">"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 103
                  },
                  "end": {
                    "row": 0,
                    "column": 117
                  },
                  "text": "parameterTypes"
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 117
              },
              "end": {
                "row": 0,
                "column": 118
              },
              "text": ")"
            }
          ]
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 4
          },
          "end": {
            "row": 8,
            "column": 5
          },
          "text": "{\n        // TODO Actually use session\n        // Session will be used to provide information about the order of function namespaces to through resolving the function.\n        // This is likely to be in terms of SQL path. Currently we still don't have support multiple function namespaces, nor\n        // SQL path. As a result, session is not used here. We still add this to distinguish the two versions of resolveFunction\n        // while the refactoring is on-going.\n        return staticFunctionNamespace.resolveFunction(name, parameterTypes);\n    }",
          "children": [
            {
              "type": "{",
              "start": {
                "row": 1,
                "column": 4
              },
              "end": {
                "row": 1,
                "column": 5
              },
              "text": "{"
            },
            {
              "type": "line_comment",
              "start": {
                "row": 2,
                "column": 8
              },
              "end": {
                "row": 2,
                "column": 36
              },
              "text": "// TODO Actually use session"
            },
            {
              "type": "line_comment",
              "start": {
                "row": 3,
                "column": 8
              },
              "end": {
                "row": 3,
                "column": 128
              },
              "text": "// Session will be used to provide information about the order of function namespaces to through resolving the function."
            },
            {
              "type": "line_comment",
              "start": {
                "row": 4,
                "column": 8
              },
              "end": {
                "row": 4,
                "column": 125
              },
              "text": "// This is likely to be in terms of SQL path. Currently we still don't have support multiple function namespaces, nor"
            },
            {
              "type": "line_comment",
              "start": {
                "row": 5,
                "column": 8
              },
              "end": {
                "row": 5,
                "column": 128
              },
              "text": "// SQL path. As a result, session is not used here. We still add this to distinguish the two versions of resolveFunction"
            },
            {
              "type": "line_comment",
              "start": {
                "row": 6,
                "column": 8
              },
              "end": {
                "row": 6,
                "column": 45
              },
              "text": "// while the refactoring is on-going."
            },
            {
              "type": "return_statement",
              "start": {
                "row": 7,
                "column": 8
              },
              "end": {
                "row": 7,
                "column": 77
              },
              "text": "return staticFunctionNamespace.resolveFunction(name, parameterTypes);",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 7,
                    "column": 8
                  },
                  "end": {
                    "row": 7,
                    "column": 14
                  },
                  "text": "return"
                },
                {
                  "type": "method_invocation",
                  "start": {
                    "row": 7,
                    "column": 15
                  },
                  "end": {
                    "row": 7,
                    "column": 76
                  },
                  "text": "staticFunctionNamespace.resolveFunction(name, parameterTypes)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 7,
                        "column": 15
                      },
                      "end": {
                        "row": 7,
                        "column": 38
                      },
                      "text": "staticFunctionNamespace"
                    },
                    {
                      "type": ".",
                      "start": {
                        "row": 7,
                        "column": 38
                      },
                      "end": {
                        "row": 7,
                        "column": 39
                      },
                      "text": "."
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 7,
                        "column": 39
                      },
                      "end": {
                        "row": 7,
                        "column": 54
                      },
                      "text": "resolveFunction"
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 7,
                        "column": 54
                      },
                      "end": {
                        "row": 7,
                        "column": 76
                      },
                      "text": "(name, parameterTypes)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 7,
                            "column": 54
                          },
                          "end": {
                            "row": 7,
                            "column": 55
                          },
                          "text": "("
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 7,
                            "column": 55
                          },
                          "end": {
                            "row": 7,
                            "column": 59
                          },
                          "text": "name"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 7,
                            "column": 59
                          },
                          "end": {
                            "row": 7,
                            "column": 60
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 7,
                            "column": 61
                          },
                          "end": {
                            "row": 7,
                            "column": 75
                          },
                          "text": "parameterTypes"
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 7,
                            "column": 75
                          },
                          "end": {
                            "row": 7,
                            "column": 76
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 7,
                    "column": 76
                  },
                  "end": {
                    "row": 7,
                    "column": 77
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "}",
              "start": {
                "row": 8,
                "column": 4
              },
              "end": {
                "row": 8,
                "column": 5
              },
              "text": "}"
            }
          ]
        }
      ]
    }
  ]
}