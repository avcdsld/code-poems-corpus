{
  "type": "program",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 24,
    "column": 3
  },
  "text": "private StreamInfo readOneFile(final InputStream is, final StreamParseWriter dout, InputStream bvs,\n                                 StreamParseWriter nextChunk, int zidx, int fileIndex) throws IOException {\n    int cidx = 0;\n    StreamData din = new StreamData(is);\n    // only check header for 2nd file onward since guess setup is already done on first file.\n    if ((fileIndex > 0) && (!checkFileNHeader(is, dout, din, cidx))) // cidx should be the actual column index\n      return new StreamInfo(zidx, nextChunk);  // header is bad, quit now\n    int streamAvailable = is.available();\n    while (streamAvailable > 0) {\n      parseChunk(cidx++, din, nextChunk); // cidx here actually goes and get the right column chunk.\n      streamAvailable = is.available(); // Can (also!) rollover to the next input chunk\n      int xidx = bvs.read(null, 0, 0); // Back-channel read of chunk index\n      if (xidx > zidx) {  // Advanced chunk index of underlying ByteVec stream?\n        zidx = xidx;       // Record advancing of chunk\n        nextChunk.close(); // Match output chunks to input zipfile chunks\n        if (dout != nextChunk) {\n          dout.reduce(nextChunk);\n          if (_jobKey != null && _jobKey.get().stop_requested()) break;\n        }\n        nextChunk = nextChunk.nextChunk();\n      }\n    }\n    parseChunk(cidx, din, nextChunk);\n    return new StreamInfo(zidx, nextChunk);\n  }",
  "children": [
    {
      "type": "method_declaration",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 24,
        "column": 3
      },
      "text": "private StreamInfo readOneFile(final InputStream is, final StreamParseWriter dout, InputStream bvs,\n                                 StreamParseWriter nextChunk, int zidx, int fileIndex) throws IOException {\n    int cidx = 0;\n    StreamData din = new StreamData(is);\n    // only check header for 2nd file onward since guess setup is already done on first file.\n    if ((fileIndex > 0) && (!checkFileNHeader(is, dout, din, cidx))) // cidx should be the actual column index\n      return new StreamInfo(zidx, nextChunk);  // header is bad, quit now\n    int streamAvailable = is.available();\n    while (streamAvailable > 0) {\n      parseChunk(cidx++, din, nextChunk); // cidx here actually goes and get the right column chunk.\n      streamAvailable = is.available(); // Can (also!) rollover to the next input chunk\n      int xidx = bvs.read(null, 0, 0); // Back-channel read of chunk index\n      if (xidx > zidx) {  // Advanced chunk index of underlying ByteVec stream?\n        zidx = xidx;       // Record advancing of chunk\n        nextChunk.close(); // Match output chunks to input zipfile chunks\n        if (dout != nextChunk) {\n          dout.reduce(nextChunk);\n          if (_jobKey != null && _jobKey.get().stop_requested()) break;\n        }\n        nextChunk = nextChunk.nextChunk();\n      }\n    }\n    parseChunk(cidx, din, nextChunk);\n    return new StreamInfo(zidx, nextChunk);\n  }",
      "children": [
        {
          "type": "modifiers",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 7
          },
          "text": "private",
          "children": [
            {
              "type": "private",
              "start": {
                "row": 0,
                "column": 0
              },
              "end": {
                "row": 0,
                "column": 7
              },
              "text": "private"
            }
          ]
        },
        {
          "type": "type_identifier",
          "start": {
            "row": 0,
            "column": 8
          },
          "end": {
            "row": 0,
            "column": 18
          },
          "text": "StreamInfo"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 19
          },
          "end": {
            "row": 0,
            "column": 30
          },
          "text": "readOneFile"
        },
        {
          "type": "formal_parameters",
          "start": {
            "row": 0,
            "column": 30
          },
          "end": {
            "row": 1,
            "column": 86
          },
          "text": "(final InputStream is, final StreamParseWriter dout, InputStream bvs,\n                                 StreamParseWriter nextChunk, int zidx, int fileIndex)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 30
              },
              "end": {
                "row": 0,
                "column": 31
              },
              "text": "("
            },
            {
              "type": "formal_parameter",
              "start": {
                "row": 0,
                "column": 31
              },
              "end": {
                "row": 0,
                "column": 51
              },
              "text": "final InputStream is",
              "children": [
                {
                  "type": "modifiers",
                  "start": {
                    "row": 0,
                    "column": 31
                  },
                  "end": {
                    "row": 0,
                    "column": 36
                  },
                  "text": "final",
                  "children": [
                    {
                      "type": "final",
                      "start": {
                        "row": 0,
                        "column": 31
                      },
                      "end": {
                        "row": 0,
                        "column": 36
                      },
                      "text": "final"
                    }
                  ]
                },
                {
                  "type": "type_identifier",
                  "start": {
                    "row": 0,
                    "column": 37
                  },
                  "end": {
                    "row": 0,
                    "column": 48
                  },
                  "text": "InputStream"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 49
                  },
                  "end": {
                    "row": 0,
                    "column": 51
                  },
                  "text": "is"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 51
              },
              "end": {
                "row": 0,
                "column": 52
              },
              "text": ","
            },
            {
              "type": "formal_parameter",
              "start": {
                "row": 0,
                "column": 53
              },
              "end": {
                "row": 0,
                "column": 81
              },
              "text": "final StreamParseWriter dout",
              "children": [
                {
                  "type": "modifiers",
                  "start": {
                    "row": 0,
                    "column": 53
                  },
                  "end": {
                    "row": 0,
                    "column": 58
                  },
                  "text": "final",
                  "children": [
                    {
                      "type": "final",
                      "start": {
                        "row": 0,
                        "column": 53
                      },
                      "end": {
                        "row": 0,
                        "column": 58
                      },
                      "text": "final"
                    }
                  ]
                },
                {
                  "type": "type_identifier",
                  "start": {
                    "row": 0,
                    "column": 59
                  },
                  "end": {
                    "row": 0,
                    "column": 76
                  },
                  "text": "StreamParseWriter"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 77
                  },
                  "end": {
                    "row": 0,
                    "column": 81
                  },
                  "text": "dout"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 81
              },
              "end": {
                "row": 0,
                "column": 82
              },
              "text": ","
            },
            {
              "type": "formal_parameter",
              "start": {
                "row": 0,
                "column": 83
              },
              "end": {
                "row": 0,
                "column": 98
              },
              "text": "InputStream bvs",
              "children": [
                {
                  "type": "type_identifier",
                  "start": {
                    "row": 0,
                    "column": 83
                  },
                  "end": {
                    "row": 0,
                    "column": 94
                  },
                  "text": "InputStream"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 95
                  },
                  "end": {
                    "row": 0,
                    "column": 98
                  },
                  "text": "bvs"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 98
              },
              "end": {
                "row": 0,
                "column": 99
              },
              "text": ","
            },
            {
              "type": "formal_parameter",
              "start": {
                "row": 1,
                "column": 33
              },
              "end": {
                "row": 1,
                "column": 60
              },
              "text": "StreamParseWriter nextChunk",
              "children": [
                {
                  "type": "type_identifier",
                  "start": {
                    "row": 1,
                    "column": 33
                  },
                  "end": {
                    "row": 1,
                    "column": 50
                  },
                  "text": "StreamParseWriter"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 1,
                    "column": 51
                  },
                  "end": {
                    "row": 1,
                    "column": 60
                  },
                  "text": "nextChunk"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 1,
                "column": 60
              },
              "end": {
                "row": 1,
                "column": 61
              },
              "text": ","
            },
            {
              "type": "formal_parameter",
              "start": {
                "row": 1,
                "column": 62
              },
              "end": {
                "row": 1,
                "column": 70
              },
              "text": "int zidx",
              "children": [
                {
                  "type": "integral_type",
                  "start": {
                    "row": 1,
                    "column": 62
                  },
                  "end": {
                    "row": 1,
                    "column": 65
                  },
                  "text": "int",
                  "children": [
                    {
                      "type": "int",
                      "start": {
                        "row": 1,
                        "column": 62
                      },
                      "end": {
                        "row": 1,
                        "column": 65
                      },
                      "text": "int"
                    }
                  ]
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 1,
                    "column": 66
                  },
                  "end": {
                    "row": 1,
                    "column": 70
                  },
                  "text": "zidx"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 1,
                "column": 70
              },
              "end": {
                "row": 1,
                "column": 71
              },
              "text": ","
            },
            {
              "type": "formal_parameter",
              "start": {
                "row": 1,
                "column": 72
              },
              "end": {
                "row": 1,
                "column": 85
              },
              "text": "int fileIndex",
              "children": [
                {
                  "type": "integral_type",
                  "start": {
                    "row": 1,
                    "column": 72
                  },
                  "end": {
                    "row": 1,
                    "column": 75
                  },
                  "text": "int",
                  "children": [
                    {
                      "type": "int",
                      "start": {
                        "row": 1,
                        "column": 72
                      },
                      "end": {
                        "row": 1,
                        "column": 75
                      },
                      "text": "int"
                    }
                  ]
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 1,
                    "column": 76
                  },
                  "end": {
                    "row": 1,
                    "column": 85
                  },
                  "text": "fileIndex"
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 1,
                "column": 85
              },
              "end": {
                "row": 1,
                "column": 86
              },
              "text": ")"
            }
          ]
        },
        {
          "type": "throws",
          "start": {
            "row": 1,
            "column": 87
          },
          "end": {
            "row": 1,
            "column": 105
          },
          "text": "throws IOException",
          "children": [
            {
              "type": "throws",
              "start": {
                "row": 1,
                "column": 87
              },
              "end": {
                "row": 1,
                "column": 93
              },
              "text": "throws"
            },
            {
              "type": "type_identifier",
              "start": {
                "row": 1,
                "column": 94
              },
              "end": {
                "row": 1,
                "column": 105
              },
              "text": "IOException"
            }
          ]
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 106
          },
          "end": {
            "row": 24,
            "column": 3
          },
          "text": "{\n    int cidx = 0;\n    StreamData din = new StreamData(is);\n    // only check header for 2nd file onward since guess setup is already done on first file.\n    if ((fileIndex > 0) && (!checkFileNHeader(is, dout, din, cidx))) // cidx should be the actual column index\n      return new StreamInfo(zidx, nextChunk);  // header is bad, quit now\n    int streamAvailable = is.available();\n    while (streamAvailable > 0) {\n      parseChunk(cidx++, din, nextChunk); // cidx here actually goes and get the right column chunk.\n      streamAvailable = is.available(); // Can (also!) rollover to the next input chunk\n      int xidx = bvs.read(null, 0, 0); // Back-channel read of chunk index\n      if (xidx > zidx) {  // Advanced chunk index of underlying ByteVec stream?\n        zidx = xidx;       // Record advancing of chunk\n        nextChunk.close(); // Match output chunks to input zipfile chunks\n        if (dout != nextChunk) {\n          dout.reduce(nextChunk);\n          if (_jobKey != null && _jobKey.get().stop_requested()) break;\n        }\n        nextChunk = nextChunk.nextChunk();\n      }\n    }\n    parseChunk(cidx, din, nextChunk);\n    return new StreamInfo(zidx, nextChunk);\n  }",
          "children": [
            {
              "type": "{",
              "start": {
                "row": 1,
                "column": 106
              },
              "end": {
                "row": 1,
                "column": 107
              },
              "text": "{"
            },
            {
              "type": "local_variable_declaration",
              "start": {
                "row": 2,
                "column": 4
              },
              "end": {
                "row": 2,
                "column": 17
              },
              "text": "int cidx = 0;",
              "children": [
                {
                  "type": "integral_type",
                  "start": {
                    "row": 2,
                    "column": 4
                  },
                  "end": {
                    "row": 2,
                    "column": 7
                  },
                  "text": "int",
                  "children": [
                    {
                      "type": "int",
                      "start": {
                        "row": 2,
                        "column": 4
                      },
                      "end": {
                        "row": 2,
                        "column": 7
                      },
                      "text": "int"
                    }
                  ]
                },
                {
                  "type": "variable_declarator",
                  "start": {
                    "row": 2,
                    "column": 8
                  },
                  "end": {
                    "row": 2,
                    "column": 16
                  },
                  "text": "cidx = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 2,
                        "column": 8
                      },
                      "end": {
                        "row": 2,
                        "column": 12
                      },
                      "text": "cidx"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 2,
                        "column": 13
                      },
                      "end": {
                        "row": 2,
                        "column": 14
                      },
                      "text": "="
                    },
                    {
                      "type": "decimal_integer_literal",
                      "start": {
                        "row": 2,
                        "column": 15
                      },
                      "end": {
                        "row": 2,
                        "column": 16
                      },
                      "text": "0"
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 2,
                    "column": 16
                  },
                  "end": {
                    "row": 2,
                    "column": 17
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "local_variable_declaration",
              "start": {
                "row": 3,
                "column": 4
              },
              "end": {
                "row": 3,
                "column": 40
              },
              "text": "StreamData din = new StreamData(is);",
              "children": [
                {
                  "type": "type_identifier",
                  "start": {
                    "row": 3,
                    "column": 4
                  },
                  "end": {
                    "row": 3,
                    "column": 14
                  },
                  "text": "StreamData"
                },
                {
                  "type": "variable_declarator",
                  "start": {
                    "row": 3,
                    "column": 15
                  },
                  "end": {
                    "row": 3,
                    "column": 39
                  },
                  "text": "din = new StreamData(is)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 3,
                        "column": 15
                      },
                      "end": {
                        "row": 3,
                        "column": 18
                      },
                      "text": "din"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 3,
                        "column": 19
                      },
                      "end": {
                        "row": 3,
                        "column": 20
                      },
                      "text": "="
                    },
                    {
                      "type": "object_creation_expression",
                      "start": {
                        "row": 3,
                        "column": 21
                      },
                      "end": {
                        "row": 3,
                        "column": 39
                      },
                      "text": "new StreamData(is)",
                      "children": [
                        {
                          "type": "new",
                          "start": {
                            "row": 3,
                            "column": 21
                          },
                          "end": {
                            "row": 3,
                            "column": 24
                          },
                          "text": "new"
                        },
                        {
                          "type": "type_identifier",
                          "start": {
                            "row": 3,
                            "column": 25
                          },
                          "end": {
                            "row": 3,
                            "column": 35
                          },
                          "text": "StreamData"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 3,
                            "column": 35
                          },
                          "end": {
                            "row": 3,
                            "column": 39
                          },
                          "text": "(is)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 3,
                                "column": 35
                              },
                              "end": {
                                "row": 3,
                                "column": 36
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 3,
                                "column": 36
                              },
                              "end": {
                                "row": 3,
                                "column": 38
                              },
                              "text": "is"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 3,
                                "column": 38
                              },
                              "end": {
                                "row": 3,
                                "column": 39
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 3,
                    "column": 39
                  },
                  "end": {
                    "row": 3,
                    "column": 40
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "line_comment",
              "start": {
                "row": 4,
                "column": 4
              },
              "end": {
                "row": 4,
                "column": 93
              },
              "text": "// only check header for 2nd file onward since guess setup is already done on first file."
            },
            {
              "type": "if_statement",
              "start": {
                "row": 5,
                "column": 4
              },
              "end": {
                "row": 6,
                "column": 45
              },
              "text": "if ((fileIndex > 0) && (!checkFileNHeader(is, dout, din, cidx))) // cidx should be the actual column index\n      return new StreamInfo(zidx, nextChunk);",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 5,
                    "column": 4
                  },
                  "end": {
                    "row": 5,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "condition",
                  "start": {
                    "row": 5,
                    "column": 7
                  },
                  "end": {
                    "row": 5,
                    "column": 68
                  },
                  "text": "((fileIndex > 0) && (!checkFileNHeader(is, dout, din, cidx)))",
                  "children": [
                    {
                      "type": "(",
                      "start": {
                        "row": 5,
                        "column": 7
                      },
                      "end": {
                        "row": 5,
                        "column": 8
                      },
                      "text": "("
                    },
                    {
                      "type": "binary_expression",
                      "start": {
                        "row": 5,
                        "column": 8
                      },
                      "end": {
                        "row": 5,
                        "column": 67
                      },
                      "text": "(fileIndex > 0) && (!checkFileNHeader(is, dout, din, cidx))",
                      "children": [
                        {
                          "type": "parenthesized_expression",
                          "start": {
                            "row": 5,
                            "column": 8
                          },
                          "end": {
                            "row": 5,
                            "column": 23
                          },
                          "text": "(fileIndex > 0)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 5,
                                "column": 8
                              },
                              "end": {
                                "row": 5,
                                "column": 9
                              },
                              "text": "("
                            },
                            {
                              "type": "binary_expression",
                              "start": {
                                "row": 5,
                                "column": 9
                              },
                              "end": {
                                "row": 5,
                                "column": 22
                              },
                              "text": "fileIndex > 0",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 5,
                                    "column": 9
                                  },
                                  "end": {
                                    "row": 5,
                                    "column": 18
                                  },
                                  "text": "fileIndex"
                                },
                                {
                                  "type": ">",
                                  "start": {
                                    "row": 5,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 5,
                                    "column": 20
                                  },
                                  "text": ">"
                                },
                                {
                                  "type": "decimal_integer_literal",
                                  "start": {
                                    "row": 5,
                                    "column": 21
                                  },
                                  "end": {
                                    "row": 5,
                                    "column": 22
                                  },
                                  "text": "0"
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 5,
                                "column": 22
                              },
                              "end": {
                                "row": 5,
                                "column": 23
                              },
                              "text": ")"
                            }
                          ]
                        },
                        {
                          "type": "&&",
                          "start": {
                            "row": 5,
                            "column": 24
                          },
                          "end": {
                            "row": 5,
                            "column": 26
                          },
                          "text": "&&"
                        },
                        {
                          "type": "parenthesized_expression",
                          "start": {
                            "row": 5,
                            "column": 27
                          },
                          "end": {
                            "row": 5,
                            "column": 67
                          },
                          "text": "(!checkFileNHeader(is, dout, din, cidx))",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 5,
                                "column": 27
                              },
                              "end": {
                                "row": 5,
                                "column": 28
                              },
                              "text": "("
                            },
                            {
                              "type": "unary_expression",
                              "start": {
                                "row": 5,
                                "column": 28
                              },
                              "end": {
                                "row": 5,
                                "column": 66
                              },
                              "text": "!checkFileNHeader(is, dout, din, cidx)",
                              "children": [
                                {
                                  "type": "!",
                                  "start": {
                                    "row": 5,
                                    "column": 28
                                  },
                                  "end": {
                                    "row": 5,
                                    "column": 29
                                  },
                                  "text": "!"
                                },
                                {
                                  "type": "method_invocation",
                                  "start": {
                                    "row": 5,
                                    "column": 29
                                  },
                                  "end": {
                                    "row": 5,
                                    "column": 66
                                  },
                                  "text": "checkFileNHeader(is, dout, din, cidx)",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 5,
                                        "column": 29
                                      },
                                      "end": {
                                        "row": 5,
                                        "column": 45
                                      },
                                      "text": "checkFileNHeader"
                                    },
                                    {
                                      "type": "argument_list",
                                      "start": {
                                        "row": 5,
                                        "column": 45
                                      },
                                      "end": {
                                        "row": 5,
                                        "column": 66
                                      },
                                      "text": "(is, dout, din, cidx)",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 5,
                                            "column": 45
                                          },
                                          "end": {
                                            "row": 5,
                                            "column": 46
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 5,
                                            "column": 46
                                          },
                                          "end": {
                                            "row": 5,
                                            "column": 48
                                          },
                                          "text": "is"
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 5,
                                            "column": 48
                                          },
                                          "end": {
                                            "row": 5,
                                            "column": 49
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 5,
                                            "column": 50
                                          },
                                          "end": {
                                            "row": 5,
                                            "column": 54
                                          },
                                          "text": "dout"
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 5,
                                            "column": 54
                                          },
                                          "end": {
                                            "row": 5,
                                            "column": 55
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 5,
                                            "column": 56
                                          },
                                          "end": {
                                            "row": 5,
                                            "column": 59
                                          },
                                          "text": "din"
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 5,
                                            "column": 59
                                          },
                                          "end": {
                                            "row": 5,
                                            "column": 60
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 5,
                                            "column": 61
                                          },
                                          "end": {
                                            "row": 5,
                                            "column": 65
                                          },
                                          "text": "cidx"
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 5,
                                            "column": 65
                                          },
                                          "end": {
                                            "row": 5,
                                            "column": 66
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 5,
                                "column": 66
                              },
                              "end": {
                                "row": 5,
                                "column": 67
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start": {
                        "row": 5,
                        "column": 67
                      },
                      "end": {
                        "row": 5,
                        "column": 68
                      },
                      "text": ")"
                    }
                  ]
                },
                {
                  "type": "line_comment",
                  "start": {
                    "row": 5,
                    "column": 69
                  },
                  "end": {
                    "row": 5,
                    "column": 110
                  },
                  "text": "// cidx should be the actual column index"
                },
                {
                  "type": "return_statement",
                  "start": {
                    "row": 6,
                    "column": 6
                  },
                  "end": {
                    "row": 6,
                    "column": 45
                  },
                  "text": "return new StreamInfo(zidx, nextChunk);",
                  "children": [
                    {
                      "type": "return",
                      "start": {
                        "row": 6,
                        "column": 6
                      },
                      "end": {
                        "row": 6,
                        "column": 12
                      },
                      "text": "return"
                    },
                    {
                      "type": "object_creation_expression",
                      "start": {
                        "row": 6,
                        "column": 13
                      },
                      "end": {
                        "row": 6,
                        "column": 44
                      },
                      "text": "new StreamInfo(zidx, nextChunk)",
                      "children": [
                        {
                          "type": "new",
                          "start": {
                            "row": 6,
                            "column": 13
                          },
                          "end": {
                            "row": 6,
                            "column": 16
                          },
                          "text": "new"
                        },
                        {
                          "type": "type_identifier",
                          "start": {
                            "row": 6,
                            "column": 17
                          },
                          "end": {
                            "row": 6,
                            "column": 27
                          },
                          "text": "StreamInfo"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 6,
                            "column": 27
                          },
                          "end": {
                            "row": 6,
                            "column": 44
                          },
                          "text": "(zidx, nextChunk)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 6,
                                "column": 27
                              },
                              "end": {
                                "row": 6,
                                "column": 28
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 6,
                                "column": 28
                              },
                              "end": {
                                "row": 6,
                                "column": 32
                              },
                              "text": "zidx"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 6,
                                "column": 32
                              },
                              "end": {
                                "row": 6,
                                "column": 33
                              },
                              "text": ","
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 6,
                                "column": 34
                              },
                              "end": {
                                "row": 6,
                                "column": 43
                              },
                              "text": "nextChunk"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 6,
                                "column": 43
                              },
                              "end": {
                                "row": 6,
                                "column": 44
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start": {
                        "row": 6,
                        "column": 44
                      },
                      "end": {
                        "row": 6,
                        "column": 45
                      },
                      "text": ";"
                    }
                  ]
                }
              ]
            },
            {
              "type": "line_comment",
              "start": {
                "row": 6,
                "column": 47
              },
              "end": {
                "row": 6,
                "column": 73
              },
              "text": "// header is bad, quit now"
            },
            {
              "type": "local_variable_declaration",
              "start": {
                "row": 7,
                "column": 4
              },
              "end": {
                "row": 7,
                "column": 41
              },
              "text": "int streamAvailable = is.available();",
              "children": [
                {
                  "type": "integral_type",
                  "start": {
                    "row": 7,
                    "column": 4
                  },
                  "end": {
                    "row": 7,
                    "column": 7
                  },
                  "text": "int",
                  "children": [
                    {
                      "type": "int",
                      "start": {
                        "row": 7,
                        "column": 4
                      },
                      "end": {
                        "row": 7,
                        "column": 7
                      },
                      "text": "int"
                    }
                  ]
                },
                {
                  "type": "variable_declarator",
                  "start": {
                    "row": 7,
                    "column": 8
                  },
                  "end": {
                    "row": 7,
                    "column": 40
                  },
                  "text": "streamAvailable = is.available()",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 7,
                        "column": 8
                      },
                      "end": {
                        "row": 7,
                        "column": 23
                      },
                      "text": "streamAvailable"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 7,
                        "column": 24
                      },
                      "end": {
                        "row": 7,
                        "column": 25
                      },
                      "text": "="
                    },
                    {
                      "type": "method_invocation",
                      "start": {
                        "row": 7,
                        "column": 26
                      },
                      "end": {
                        "row": 7,
                        "column": 40
                      },
                      "text": "is.available()",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 7,
                            "column": 26
                          },
                          "end": {
                            "row": 7,
                            "column": 28
                          },
                          "text": "is"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 7,
                            "column": 28
                          },
                          "end": {
                            "row": 7,
                            "column": 29
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 7,
                            "column": 29
                          },
                          "end": {
                            "row": 7,
                            "column": 38
                          },
                          "text": "available"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 7,
                            "column": 38
                          },
                          "end": {
                            "row": 7,
                            "column": 40
                          },
                          "text": "()",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 7,
                                "column": 38
                              },
                              "end": {
                                "row": 7,
                                "column": 39
                              },
                              "text": "("
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 7,
                                "column": 39
                              },
                              "end": {
                                "row": 7,
                                "column": 40
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 7,
                    "column": 40
                  },
                  "end": {
                    "row": 7,
                    "column": 41
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "while_statement",
              "start": {
                "row": 8,
                "column": 4
              },
              "end": {
                "row": 21,
                "column": 5
              },
              "text": "while (streamAvailable > 0) {\n      parseChunk(cidx++, din, nextChunk); // cidx here actually goes and get the right column chunk.\n      streamAvailable = is.available(); // Can (also!) rollover to the next input chunk\n      int xidx = bvs.read(null, 0, 0); // Back-channel read of chunk index\n      if (xidx > zidx) {  // Advanced chunk index of underlying ByteVec stream?\n        zidx = xidx;       // Record advancing of chunk\n        nextChunk.close(); // Match output chunks to input zipfile chunks\n        if (dout != nextChunk) {\n          dout.reduce(nextChunk);\n          if (_jobKey != null && _jobKey.get().stop_requested()) break;\n        }\n        nextChunk = nextChunk.nextChunk();\n      }\n    }",
              "children": [
                {
                  "type": "while",
                  "start": {
                    "row": 8,
                    "column": 4
                  },
                  "end": {
                    "row": 8,
                    "column": 9
                  },
                  "text": "while"
                },
                {
                  "type": "condition",
                  "start": {
                    "row": 8,
                    "column": 10
                  },
                  "end": {
                    "row": 8,
                    "column": 31
                  },
                  "text": "(streamAvailable > 0)",
                  "children": [
                    {
                      "type": "(",
                      "start": {
                        "row": 8,
                        "column": 10
                      },
                      "end": {
                        "row": 8,
                        "column": 11
                      },
                      "text": "("
                    },
                    {
                      "type": "binary_expression",
                      "start": {
                        "row": 8,
                        "column": 11
                      },
                      "end": {
                        "row": 8,
                        "column": 30
                      },
                      "text": "streamAvailable > 0",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 8,
                            "column": 11
                          },
                          "end": {
                            "row": 8,
                            "column": 26
                          },
                          "text": "streamAvailable"
                        },
                        {
                          "type": ">",
                          "start": {
                            "row": 8,
                            "column": 27
                          },
                          "end": {
                            "row": 8,
                            "column": 28
                          },
                          "text": ">"
                        },
                        {
                          "type": "decimal_integer_literal",
                          "start": {
                            "row": 8,
                            "column": 29
                          },
                          "end": {
                            "row": 8,
                            "column": 30
                          },
                          "text": "0"
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start": {
                        "row": 8,
                        "column": 30
                      },
                      "end": {
                        "row": 8,
                        "column": 31
                      },
                      "text": ")"
                    }
                  ]
                },
                {
                  "type": "block",
                  "start": {
                    "row": 8,
                    "column": 32
                  },
                  "end": {
                    "row": 21,
                    "column": 5
                  },
                  "text": "{\n      parseChunk(cidx++, din, nextChunk); // cidx here actually goes and get the right column chunk.\n      streamAvailable = is.available(); // Can (also!) rollover to the next input chunk\n      int xidx = bvs.read(null, 0, 0); // Back-channel read of chunk index\n      if (xidx > zidx) {  // Advanced chunk index of underlying ByteVec stream?\n        zidx = xidx;       // Record advancing of chunk\n        nextChunk.close(); // Match output chunks to input zipfile chunks\n        if (dout != nextChunk) {\n          dout.reduce(nextChunk);\n          if (_jobKey != null && _jobKey.get().stop_requested()) break;\n        }\n        nextChunk = nextChunk.nextChunk();\n      }\n    }",
                  "children": [
                    {
                      "type": "{",
                      "start": {
                        "row": 8,
                        "column": 32
                      },
                      "end": {
                        "row": 8,
                        "column": 33
                      },
                      "text": "{"
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 9,
                        "column": 6
                      },
                      "end": {
                        "row": 9,
                        "column": 41
                      },
                      "text": "parseChunk(cidx++, din, nextChunk);",
                      "children": [
                        {
                          "type": "method_invocation",
                          "start": {
                            "row": 9,
                            "column": 6
                          },
                          "end": {
                            "row": 9,
                            "column": 40
                          },
                          "text": "parseChunk(cidx++, din, nextChunk)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 9,
                                "column": 6
                              },
                              "end": {
                                "row": 9,
                                "column": 16
                              },
                              "text": "parseChunk"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 9,
                                "column": 16
                              },
                              "end": {
                                "row": 9,
                                "column": 40
                              },
                              "text": "(cidx++, din, nextChunk)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 9,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 9,
                                    "column": 17
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "update_expression",
                                  "start": {
                                    "row": 9,
                                    "column": 17
                                  },
                                  "end": {
                                    "row": 9,
                                    "column": 23
                                  },
                                  "text": "cidx++",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 9,
                                        "column": 17
                                      },
                                      "end": {
                                        "row": 9,
                                        "column": 21
                                      },
                                      "text": "cidx"
                                    },
                                    {
                                      "type": "++",
                                      "start": {
                                        "row": 9,
                                        "column": 21
                                      },
                                      "end": {
                                        "row": 9,
                                        "column": 23
                                      },
                                      "text": "++"
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 9,
                                    "column": 23
                                  },
                                  "end": {
                                    "row": 9,
                                    "column": 24
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 9,
                                    "column": 25
                                  },
                                  "end": {
                                    "row": 9,
                                    "column": 28
                                  },
                                  "text": "din"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 9,
                                    "column": 28
                                  },
                                  "end": {
                                    "row": 9,
                                    "column": 29
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 9,
                                    "column": 30
                                  },
                                  "end": {
                                    "row": 9,
                                    "column": 39
                                  },
                                  "text": "nextChunk"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 9,
                                    "column": 39
                                  },
                                  "end": {
                                    "row": 9,
                                    "column": 40
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start": {
                            "row": 9,
                            "column": 40
                          },
                          "end": {
                            "row": 9,
                            "column": 41
                          },
                          "text": ";"
                        }
                      ]
                    },
                    {
                      "type": "line_comment",
                      "start": {
                        "row": 9,
                        "column": 42
                      },
                      "end": {
                        "row": 9,
                        "column": 100
                      },
                      "text": "// cidx here actually goes and get the right column chunk."
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 10,
                        "column": 6
                      },
                      "end": {
                        "row": 10,
                        "column": 39
                      },
                      "text": "streamAvailable = is.available();",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start": {
                            "row": 10,
                            "column": 6
                          },
                          "end": {
                            "row": 10,
                            "column": 38
                          },
                          "text": "streamAvailable = is.available()",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 10,
                                "column": 6
                              },
                              "end": {
                                "row": 10,
                                "column": 21
                              },
                              "text": "streamAvailable"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 10,
                                "column": 22
                              },
                              "end": {
                                "row": 10,
                                "column": 23
                              },
                              "text": "="
                            },
                            {
                              "type": "method_invocation",
                              "start": {
                                "row": 10,
                                "column": 24
                              },
                              "end": {
                                "row": 10,
                                "column": 38
                              },
                              "text": "is.available()",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 10,
                                    "column": 24
                                  },
                                  "end": {
                                    "row": 10,
                                    "column": 26
                                  },
                                  "text": "is"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 10,
                                    "column": 26
                                  },
                                  "end": {
                                    "row": 10,
                                    "column": 27
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 10,
                                    "column": 27
                                  },
                                  "end": {
                                    "row": 10,
                                    "column": 36
                                  },
                                  "text": "available"
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 10,
                                    "column": 36
                                  },
                                  "end": {
                                    "row": 10,
                                    "column": 38
                                  },
                                  "text": "()",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 10,
                                        "column": 36
                                      },
                                      "end": {
                                        "row": 10,
                                        "column": 37
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 10,
                                        "column": 37
                                      },
                                      "end": {
                                        "row": 10,
                                        "column": 38
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start": {
                            "row": 10,
                            "column": 38
                          },
                          "end": {
                            "row": 10,
                            "column": 39
                          },
                          "text": ";"
                        }
                      ]
                    },
                    {
                      "type": "line_comment",
                      "start": {
                        "row": 10,
                        "column": 40
                      },
                      "end": {
                        "row": 10,
                        "column": 87
                      },
                      "text": "// Can (also!) rollover to the next input chunk"
                    },
                    {
                      "type": "local_variable_declaration",
                      "start": {
                        "row": 11,
                        "column": 6
                      },
                      "end": {
                        "row": 11,
                        "column": 38
                      },
                      "text": "int xidx = bvs.read(null, 0, 0);",
                      "children": [
                        {
                          "type": "integral_type",
                          "start": {
                            "row": 11,
                            "column": 6
                          },
                          "end": {
                            "row": 11,
                            "column": 9
                          },
                          "text": "int",
                          "children": [
                            {
                              "type": "int",
                              "start": {
                                "row": 11,
                                "column": 6
                              },
                              "end": {
                                "row": 11,
                                "column": 9
                              },
                              "text": "int"
                            }
                          ]
                        },
                        {
                          "type": "variable_declarator",
                          "start": {
                            "row": 11,
                            "column": 10
                          },
                          "end": {
                            "row": 11,
                            "column": 37
                          },
                          "text": "xidx = bvs.read(null, 0, 0)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 11,
                                "column": 10
                              },
                              "end": {
                                "row": 11,
                                "column": 14
                              },
                              "text": "xidx"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 11,
                                "column": 15
                              },
                              "end": {
                                "row": 11,
                                "column": 16
                              },
                              "text": "="
                            },
                            {
                              "type": "method_invocation",
                              "start": {
                                "row": 11,
                                "column": 17
                              },
                              "end": {
                                "row": 11,
                                "column": 37
                              },
                              "text": "bvs.read(null, 0, 0)",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 11,
                                    "column": 17
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 20
                                  },
                                  "text": "bvs"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 11,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 21
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 11,
                                    "column": 21
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 25
                                  },
                                  "text": "read"
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 11,
                                    "column": 25
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 37
                                  },
                                  "text": "(null, 0, 0)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 11,
                                        "column": 25
                                      },
                                      "end": {
                                        "row": 11,
                                        "column": 26
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "null_literal",
                                      "start": {
                                        "row": 11,
                                        "column": 26
                                      },
                                      "end": {
                                        "row": 11,
                                        "column": 30
                                      },
                                      "text": "null"
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 11,
                                        "column": 30
                                      },
                                      "end": {
                                        "row": 11,
                                        "column": 31
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "decimal_integer_literal",
                                      "start": {
                                        "row": 11,
                                        "column": 32
                                      },
                                      "end": {
                                        "row": 11,
                                        "column": 33
                                      },
                                      "text": "0"
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 11,
                                        "column": 33
                                      },
                                      "end": {
                                        "row": 11,
                                        "column": 34
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "decimal_integer_literal",
                                      "start": {
                                        "row": 11,
                                        "column": 35
                                      },
                                      "end": {
                                        "row": 11,
                                        "column": 36
                                      },
                                      "text": "0"
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 11,
                                        "column": 36
                                      },
                                      "end": {
                                        "row": 11,
                                        "column": 37
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start": {
                            "row": 11,
                            "column": 37
                          },
                          "end": {
                            "row": 11,
                            "column": 38
                          },
                          "text": ";"
                        }
                      ]
                    },
                    {
                      "type": "line_comment",
                      "start": {
                        "row": 11,
                        "column": 39
                      },
                      "end": {
                        "row": 11,
                        "column": 74
                      },
                      "text": "// Back-channel read of chunk index"
                    },
                    {
                      "type": "if_statement",
                      "start": {
                        "row": 12,
                        "column": 6
                      },
                      "end": {
                        "row": 20,
                        "column": 7
                      },
                      "text": "if (xidx > zidx) {  // Advanced chunk index of underlying ByteVec stream?\n        zidx = xidx;       // Record advancing of chunk\n        nextChunk.close(); // Match output chunks to input zipfile chunks\n        if (dout != nextChunk) {\n          dout.reduce(nextChunk);\n          if (_jobKey != null && _jobKey.get().stop_requested()) break;\n        }\n        nextChunk = nextChunk.nextChunk();\n      }",
                      "children": [
                        {
                          "type": "if",
                          "start": {
                            "row": 12,
                            "column": 6
                          },
                          "end": {
                            "row": 12,
                            "column": 8
                          },
                          "text": "if"
                        },
                        {
                          "type": "condition",
                          "start": {
                            "row": 12,
                            "column": 9
                          },
                          "end": {
                            "row": 12,
                            "column": 22
                          },
                          "text": "(xidx > zidx)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 12,
                                "column": 9
                              },
                              "end": {
                                "row": 12,
                                "column": 10
                              },
                              "text": "("
                            },
                            {
                              "type": "binary_expression",
                              "start": {
                                "row": 12,
                                "column": 10
                              },
                              "end": {
                                "row": 12,
                                "column": 21
                              },
                              "text": "xidx > zidx",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 12,
                                    "column": 10
                                  },
                                  "end": {
                                    "row": 12,
                                    "column": 14
                                  },
                                  "text": "xidx"
                                },
                                {
                                  "type": ">",
                                  "start": {
                                    "row": 12,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 12,
                                    "column": 16
                                  },
                                  "text": ">"
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 12,
                                    "column": 17
                                  },
                                  "end": {
                                    "row": 12,
                                    "column": 21
                                  },
                                  "text": "zidx"
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 12,
                                "column": 21
                              },
                              "end": {
                                "row": 12,
                                "column": 22
                              },
                              "text": ")"
                            }
                          ]
                        },
                        {
                          "type": "block",
                          "start": {
                            "row": 12,
                            "column": 23
                          },
                          "end": {
                            "row": 20,
                            "column": 7
                          },
                          "text": "{  // Advanced chunk index of underlying ByteVec stream?\n        zidx = xidx;       // Record advancing of chunk\n        nextChunk.close(); // Match output chunks to input zipfile chunks\n        if (dout != nextChunk) {\n          dout.reduce(nextChunk);\n          if (_jobKey != null && _jobKey.get().stop_requested()) break;\n        }\n        nextChunk = nextChunk.nextChunk();\n      }",
                          "children": [
                            {
                              "type": "{",
                              "start": {
                                "row": 12,
                                "column": 23
                              },
                              "end": {
                                "row": 12,
                                "column": 24
                              },
                              "text": "{"
                            },
                            {
                              "type": "line_comment",
                              "start": {
                                "row": 12,
                                "column": 26
                              },
                              "end": {
                                "row": 12,
                                "column": 79
                              },
                              "text": "// Advanced chunk index of underlying ByteVec stream?"
                            },
                            {
                              "type": "expression_statement",
                              "start": {
                                "row": 13,
                                "column": 8
                              },
                              "end": {
                                "row": 13,
                                "column": 20
                              },
                              "text": "zidx = xidx;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start": {
                                    "row": 13,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 19
                                  },
                                  "text": "zidx = xidx",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 13,
                                        "column": 8
                                      },
                                      "end": {
                                        "row": 13,
                                        "column": 12
                                      },
                                      "text": "zidx"
                                    },
                                    {
                                      "type": "=",
                                      "start": {
                                        "row": 13,
                                        "column": 13
                                      },
                                      "end": {
                                        "row": 13,
                                        "column": 14
                                      },
                                      "text": "="
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 13,
                                        "column": 15
                                      },
                                      "end": {
                                        "row": 13,
                                        "column": 19
                                      },
                                      "text": "xidx"
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start": {
                                    "row": 13,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 20
                                  },
                                  "text": ";"
                                }
                              ]
                            },
                            {
                              "type": "line_comment",
                              "start": {
                                "row": 13,
                                "column": 27
                              },
                              "end": {
                                "row": 13,
                                "column": 55
                              },
                              "text": "// Record advancing of chunk"
                            },
                            {
                              "type": "expression_statement",
                              "start": {
                                "row": 14,
                                "column": 8
                              },
                              "end": {
                                "row": 14,
                                "column": 26
                              },
                              "text": "nextChunk.close();",
                              "children": [
                                {
                                  "type": "method_invocation",
                                  "start": {
                                    "row": 14,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 14,
                                    "column": 25
                                  },
                                  "text": "nextChunk.close()",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 14,
                                        "column": 8
                                      },
                                      "end": {
                                        "row": 14,
                                        "column": 17
                                      },
                                      "text": "nextChunk"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 14,
                                        "column": 17
                                      },
                                      "end": {
                                        "row": 14,
                                        "column": 18
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 14,
                                        "column": 18
                                      },
                                      "end": {
                                        "row": 14,
                                        "column": 23
                                      },
                                      "text": "close"
                                    },
                                    {
                                      "type": "argument_list",
                                      "start": {
                                        "row": 14,
                                        "column": 23
                                      },
                                      "end": {
                                        "row": 14,
                                        "column": 25
                                      },
                                      "text": "()",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 14,
                                            "column": 23
                                          },
                                          "end": {
                                            "row": 14,
                                            "column": 24
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 14,
                                            "column": 24
                                          },
                                          "end": {
                                            "row": 14,
                                            "column": 25
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start": {
                                    "row": 14,
                                    "column": 25
                                  },
                                  "end": {
                                    "row": 14,
                                    "column": 26
                                  },
                                  "text": ";"
                                }
                              ]
                            },
                            {
                              "type": "line_comment",
                              "start": {
                                "row": 14,
                                "column": 27
                              },
                              "end": {
                                "row": 14,
                                "column": 73
                              },
                              "text": "// Match output chunks to input zipfile chunks"
                            },
                            {
                              "type": "if_statement",
                              "start": {
                                "row": 15,
                                "column": 8
                              },
                              "end": {
                                "row": 18,
                                "column": 9
                              },
                              "text": "if (dout != nextChunk) {\n          dout.reduce(nextChunk);\n          if (_jobKey != null && _jobKey.get().stop_requested()) break;\n        }",
                              "children": [
                                {
                                  "type": "if",
                                  "start": {
                                    "row": 15,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 15,
                                    "column": 10
                                  },
                                  "text": "if"
                                },
                                {
                                  "type": "condition",
                                  "start": {
                                    "row": 15,
                                    "column": 11
                                  },
                                  "end": {
                                    "row": 15,
                                    "column": 30
                                  },
                                  "text": "(dout != nextChunk)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 15,
                                        "column": 11
                                      },
                                      "end": {
                                        "row": 15,
                                        "column": 12
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start": {
                                        "row": 15,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 15,
                                        "column": 29
                                      },
                                      "text": "dout != nextChunk",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 15,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 15,
                                            "column": 16
                                          },
                                          "text": "dout"
                                        },
                                        {
                                          "type": "!=",
                                          "start": {
                                            "row": 15,
                                            "column": 17
                                          },
                                          "end": {
                                            "row": 15,
                                            "column": 19
                                          },
                                          "text": "!="
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 15,
                                            "column": 20
                                          },
                                          "end": {
                                            "row": 15,
                                            "column": 29
                                          },
                                          "text": "nextChunk"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 15,
                                        "column": 29
                                      },
                                      "end": {
                                        "row": 15,
                                        "column": 30
                                      },
                                      "text": ")"
                                    }
                                  ]
                                },
                                {
                                  "type": "block",
                                  "start": {
                                    "row": 15,
                                    "column": 31
                                  },
                                  "end": {
                                    "row": 18,
                                    "column": 9
                                  },
                                  "text": "{\n          dout.reduce(nextChunk);\n          if (_jobKey != null && _jobKey.get().stop_requested()) break;\n        }",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start": {
                                        "row": 15,
                                        "column": 31
                                      },
                                      "end": {
                                        "row": 15,
                                        "column": 32
                                      },
                                      "text": "{"
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start": {
                                        "row": 16,
                                        "column": 10
                                      },
                                      "end": {
                                        "row": 16,
                                        "column": 33
                                      },
                                      "text": "dout.reduce(nextChunk);",
                                      "children": [
                                        {
                                          "type": "method_invocation",
                                          "start": {
                                            "row": 16,
                                            "column": 10
                                          },
                                          "end": {
                                            "row": 16,
                                            "column": 32
                                          },
                                          "text": "dout.reduce(nextChunk)",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 16,
                                                "column": 10
                                              },
                                              "end": {
                                                "row": 16,
                                                "column": 14
                                              },
                                              "text": "dout"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 16,
                                                "column": 14
                                              },
                                              "end": {
                                                "row": 16,
                                                "column": 15
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 16,
                                                "column": 15
                                              },
                                              "end": {
                                                "row": 16,
                                                "column": 21
                                              },
                                              "text": "reduce"
                                            },
                                            {
                                              "type": "argument_list",
                                              "start": {
                                                "row": 16,
                                                "column": 21
                                              },
                                              "end": {
                                                "row": 16,
                                                "column": 32
                                              },
                                              "text": "(nextChunk)",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 16,
                                                    "column": 21
                                                  },
                                                  "end": {
                                                    "row": 16,
                                                    "column": 22
                                                  },
                                                  "text": "("
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 16,
                                                    "column": 22
                                                  },
                                                  "end": {
                                                    "row": 16,
                                                    "column": 31
                                                  },
                                                  "text": "nextChunk"
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 16,
                                                    "column": 31
                                                  },
                                                  "end": {
                                                    "row": 16,
                                                    "column": 32
                                                  },
                                                  "text": ")"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start": {
                                            "row": 16,
                                            "column": 32
                                          },
                                          "end": {
                                            "row": 16,
                                            "column": 33
                                          },
                                          "text": ";"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "if_statement",
                                      "start": {
                                        "row": 17,
                                        "column": 10
                                      },
                                      "end": {
                                        "row": 17,
                                        "column": 71
                                      },
                                      "text": "if (_jobKey != null && _jobKey.get().stop_requested()) break;",
                                      "children": [
                                        {
                                          "type": "if",
                                          "start": {
                                            "row": 17,
                                            "column": 10
                                          },
                                          "end": {
                                            "row": 17,
                                            "column": 12
                                          },
                                          "text": "if"
                                        },
                                        {
                                          "type": "condition",
                                          "start": {
                                            "row": 17,
                                            "column": 13
                                          },
                                          "end": {
                                            "row": 17,
                                            "column": 64
                                          },
                                          "text": "(_jobKey != null && _jobKey.get().stop_requested())",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 17,
                                                "column": 13
                                              },
                                              "end": {
                                                "row": 17,
                                                "column": 14
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start": {
                                                "row": 17,
                                                "column": 14
                                              },
                                              "end": {
                                                "row": 17,
                                                "column": 63
                                              },
                                              "text": "_jobKey != null && _jobKey.get().stop_requested()",
                                              "children": [
                                                {
                                                  "type": "binary_expression",
                                                  "start": {
                                                    "row": 17,
                                                    "column": 14
                                                  },
                                                  "end": {
                                                    "row": 17,
                                                    "column": 29
                                                  },
                                                  "text": "_jobKey != null",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 17,
                                                        "column": 14
                                                      },
                                                      "end": {
                                                        "row": 17,
                                                        "column": 21
                                                      },
                                                      "text": "_jobKey"
                                                    },
                                                    {
                                                      "type": "!=",
                                                      "start": {
                                                        "row": 17,
                                                        "column": 22
                                                      },
                                                      "end": {
                                                        "row": 17,
                                                        "column": 24
                                                      },
                                                      "text": "!="
                                                    },
                                                    {
                                                      "type": "null_literal",
                                                      "start": {
                                                        "row": 17,
                                                        "column": 25
                                                      },
                                                      "end": {
                                                        "row": 17,
                                                        "column": 29
                                                      },
                                                      "text": "null"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "&&",
                                                  "start": {
                                                    "row": 17,
                                                    "column": 30
                                                  },
                                                  "end": {
                                                    "row": 17,
                                                    "column": 32
                                                  },
                                                  "text": "&&"
                                                },
                                                {
                                                  "type": "method_invocation",
                                                  "start": {
                                                    "row": 17,
                                                    "column": 33
                                                  },
                                                  "end": {
                                                    "row": 17,
                                                    "column": 63
                                                  },
                                                  "text": "_jobKey.get().stop_requested()",
                                                  "children": [
                                                    {
                                                      "type": "method_invocation",
                                                      "start": {
                                                        "row": 17,
                                                        "column": 33
                                                      },
                                                      "end": {
                                                        "row": 17,
                                                        "column": 46
                                                      },
                                                      "text": "_jobKey.get()",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 17,
                                                            "column": 33
                                                          },
                                                          "end": {
                                                            "row": 17,
                                                            "column": 40
                                                          },
                                                          "text": "_jobKey"
                                                        },
                                                        {
                                                          "type": ".",
                                                          "start": {
                                                            "row": 17,
                                                            "column": 40
                                                          },
                                                          "end": {
                                                            "row": 17,
                                                            "column": 41
                                                          },
                                                          "text": "."
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 17,
                                                            "column": 41
                                                          },
                                                          "end": {
                                                            "row": 17,
                                                            "column": 44
                                                          },
                                                          "text": "get"
                                                        },
                                                        {
                                                          "type": "argument_list",
                                                          "start": {
                                                            "row": 17,
                                                            "column": 44
                                                          },
                                                          "end": {
                                                            "row": 17,
                                                            "column": 46
                                                          },
                                                          "text": "()",
                                                          "children": [
                                                            {
                                                              "type": "(",
                                                              "start": {
                                                                "row": 17,
                                                                "column": 44
                                                              },
                                                              "end": {
                                                                "row": 17,
                                                                "column": 45
                                                              },
                                                              "text": "("
                                                            },
                                                            {
                                                              "type": ")",
                                                              "start": {
                                                                "row": 17,
                                                                "column": 45
                                                              },
                                                              "end": {
                                                                "row": 17,
                                                                "column": 46
                                                              },
                                                              "text": ")"
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ".",
                                                      "start": {
                                                        "row": 17,
                                                        "column": 46
                                                      },
                                                      "end": {
                                                        "row": 17,
                                                        "column": 47
                                                      },
                                                      "text": "."
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 17,
                                                        "column": 47
                                                      },
                                                      "end": {
                                                        "row": 17,
                                                        "column": 61
                                                      },
                                                      "text": "stop_requested"
                                                    },
                                                    {
                                                      "type": "argument_list",
                                                      "start": {
                                                        "row": 17,
                                                        "column": 61
                                                      },
                                                      "end": {
                                                        "row": 17,
                                                        "column": 63
                                                      },
                                                      "text": "()",
                                                      "children": [
                                                        {
                                                          "type": "(",
                                                          "start": {
                                                            "row": 17,
                                                            "column": 61
                                                          },
                                                          "end": {
                                                            "row": 17,
                                                            "column": 62
                                                          },
                                                          "text": "("
                                                        },
                                                        {
                                                          "type": ")",
                                                          "start": {
                                                            "row": 17,
                                                            "column": 62
                                                          },
                                                          "end": {
                                                            "row": 17,
                                                            "column": 63
                                                          },
                                                          "text": ")"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 17,
                                                "column": 63
                                              },
                                              "end": {
                                                "row": 17,
                                                "column": 64
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "break_statement",
                                          "start": {
                                            "row": 17,
                                            "column": 65
                                          },
                                          "end": {
                                            "row": 17,
                                            "column": 71
                                          },
                                          "text": "break;",
                                          "children": [
                                            {
                                              "type": "break",
                                              "start": {
                                                "row": 17,
                                                "column": 65
                                              },
                                              "end": {
                                                "row": 17,
                                                "column": 70
                                              },
                                              "text": "break"
                                            },
                                            {
                                              "type": ";",
                                              "start": {
                                                "row": 17,
                                                "column": 70
                                              },
                                              "end": {
                                                "row": 17,
                                                "column": 71
                                              },
                                              "text": ";"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start": {
                                        "row": 18,
                                        "column": 8
                                      },
                                      "end": {
                                        "row": 18,
                                        "column": 9
                                      },
                                      "text": "}"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start": {
                                "row": 19,
                                "column": 8
                              },
                              "end": {
                                "row": 19,
                                "column": 42
                              },
                              "text": "nextChunk = nextChunk.nextChunk();",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start": {
                                    "row": 19,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 19,
                                    "column": 41
                                  },
                                  "text": "nextChunk = nextChunk.nextChunk()",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 19,
                                        "column": 8
                                      },
                                      "end": {
                                        "row": 19,
                                        "column": 17
                                      },
                                      "text": "nextChunk"
                                    },
                                    {
                                      "type": "=",
                                      "start": {
                                        "row": 19,
                                        "column": 18
                                      },
                                      "end": {
                                        "row": 19,
                                        "column": 19
                                      },
                                      "text": "="
                                    },
                                    {
                                      "type": "method_invocation",
                                      "start": {
                                        "row": 19,
                                        "column": 20
                                      },
                                      "end": {
                                        "row": 19,
                                        "column": 41
                                      },
                                      "text": "nextChunk.nextChunk()",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 19,
                                            "column": 20
                                          },
                                          "end": {
                                            "row": 19,
                                            "column": 29
                                          },
                                          "text": "nextChunk"
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 19,
                                            "column": 29
                                          },
                                          "end": {
                                            "row": 19,
                                            "column": 30
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 19,
                                            "column": 30
                                          },
                                          "end": {
                                            "row": 19,
                                            "column": 39
                                          },
                                          "text": "nextChunk"
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 19,
                                            "column": 39
                                          },
                                          "end": {
                                            "row": 19,
                                            "column": 41
                                          },
                                          "text": "()",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 19,
                                                "column": 39
                                              },
                                              "end": {
                                                "row": 19,
                                                "column": 40
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 19,
                                                "column": 40
                                              },
                                              "end": {
                                                "row": 19,
                                                "column": 41
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start": {
                                    "row": 19,
                                    "column": 41
                                  },
                                  "end": {
                                    "row": 19,
                                    "column": 42
                                  },
                                  "text": ";"
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start": {
                                "row": 20,
                                "column": 6
                              },
                              "end": {
                                "row": 20,
                                "column": 7
                              },
                              "text": "}"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start": {
                        "row": 21,
                        "column": 4
                      },
                      "end": {
                        "row": 21,
                        "column": 5
                      },
                      "text": "}"
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 22,
                "column": 4
              },
              "end": {
                "row": 22,
                "column": 37
              },
              "text": "parseChunk(cidx, din, nextChunk);",
              "children": [
                {
                  "type": "method_invocation",
                  "start": {
                    "row": 22,
                    "column": 4
                  },
                  "end": {
                    "row": 22,
                    "column": 36
                  },
                  "text": "parseChunk(cidx, din, nextChunk)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 22,
                        "column": 4
                      },
                      "end": {
                        "row": 22,
                        "column": 14
                      },
                      "text": "parseChunk"
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 22,
                        "column": 14
                      },
                      "end": {
                        "row": 22,
                        "column": 36
                      },
                      "text": "(cidx, din, nextChunk)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 22,
                            "column": 14
                          },
                          "end": {
                            "row": 22,
                            "column": 15
                          },
                          "text": "("
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 22,
                            "column": 15
                          },
                          "end": {
                            "row": 22,
                            "column": 19
                          },
                          "text": "cidx"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 22,
                            "column": 19
                          },
                          "end": {
                            "row": 22,
                            "column": 20
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 22,
                            "column": 21
                          },
                          "end": {
                            "row": 22,
                            "column": 24
                          },
                          "text": "din"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 22,
                            "column": 24
                          },
                          "end": {
                            "row": 22,
                            "column": 25
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 22,
                            "column": 26
                          },
                          "end": {
                            "row": 22,
                            "column": 35
                          },
                          "text": "nextChunk"
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 22,
                            "column": 35
                          },
                          "end": {
                            "row": 22,
                            "column": 36
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 22,
                    "column": 36
                  },
                  "end": {
                    "row": 22,
                    "column": 37
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 23,
                "column": 4
              },
              "end": {
                "row": 23,
                "column": 43
              },
              "text": "return new StreamInfo(zidx, nextChunk);",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 23,
                    "column": 4
                  },
                  "end": {
                    "row": 23,
                    "column": 10
                  },
                  "text": "return"
                },
                {
                  "type": "object_creation_expression",
                  "start": {
                    "row": 23,
                    "column": 11
                  },
                  "end": {
                    "row": 23,
                    "column": 42
                  },
                  "text": "new StreamInfo(zidx, nextChunk)",
                  "children": [
                    {
                      "type": "new",
                      "start": {
                        "row": 23,
                        "column": 11
                      },
                      "end": {
                        "row": 23,
                        "column": 14
                      },
                      "text": "new"
                    },
                    {
                      "type": "type_identifier",
                      "start": {
                        "row": 23,
                        "column": 15
                      },
                      "end": {
                        "row": 23,
                        "column": 25
                      },
                      "text": "StreamInfo"
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 23,
                        "column": 25
                      },
                      "end": {
                        "row": 23,
                        "column": 42
                      },
                      "text": "(zidx, nextChunk)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 23,
                            "column": 25
                          },
                          "end": {
                            "row": 23,
                            "column": 26
                          },
                          "text": "("
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 23,
                            "column": 26
                          },
                          "end": {
                            "row": 23,
                            "column": 30
                          },
                          "text": "zidx"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 23,
                            "column": 30
                          },
                          "end": {
                            "row": 23,
                            "column": 31
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 23,
                            "column": 32
                          },
                          "end": {
                            "row": 23,
                            "column": 41
                          },
                          "text": "nextChunk"
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 23,
                            "column": 41
                          },
                          "end": {
                            "row": 23,
                            "column": 42
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 23,
                    "column": 42
                  },
                  "end": {
                    "row": 23,
                    "column": 43
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "}",
              "start": {
                "row": 24,
                "column": 2
              },
              "end": {
                "row": 24,
                "column": 3
              },
              "text": "}"
            }
          ]
        }
      ]
    }
  ]
}