{
  "type": "program",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 6,
    "column": 3
  },
  "text": "@Override\n  public void setupLocal() {\n    super.setupLocal();\n    _res = new DeepLearningTask(_jobKey, _sharedmodel, _sync_fraction, _iteration, this);\n    addToPendingCount(1);\n    _res.dfork(null, _fr, true /*run_local*/);\n  }",
  "children": [
    {
      "type": "method_declaration",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 6,
        "column": 3
      },
      "text": "@Override\n  public void setupLocal() {\n    super.setupLocal();\n    _res = new DeepLearningTask(_jobKey, _sharedmodel, _sync_fraction, _iteration, this);\n    addToPendingCount(1);\n    _res.dfork(null, _fr, true /*run_local*/);\n  }",
      "children": [
        {
          "type": "modifiers",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 1,
            "column": 8
          },
          "text": "@Override\n  public",
          "children": [
            {
              "type": "marker_annotation",
              "start": {
                "row": 0,
                "column": 0
              },
              "end": {
                "row": 0,
                "column": 9
              },
              "text": "@Override",
              "children": [
                {
                  "type": "@",
                  "start": {
                    "row": 0,
                    "column": 0
                  },
                  "end": {
                    "row": 0,
                    "column": 1
                  },
                  "text": "@"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 1
                  },
                  "end": {
                    "row": 0,
                    "column": 9
                  },
                  "text": "Override"
                }
              ]
            },
            {
              "type": "public",
              "start": {
                "row": 1,
                "column": 2
              },
              "end": {
                "row": 1,
                "column": 8
              },
              "text": "public"
            }
          ]
        },
        {
          "type": "void_type",
          "start": {
            "row": 1,
            "column": 9
          },
          "end": {
            "row": 1,
            "column": 13
          },
          "text": "void"
        },
        {
          "type": "identifier",
          "start": {
            "row": 1,
            "column": 14
          },
          "end": {
            "row": 1,
            "column": 24
          },
          "text": "setupLocal"
        },
        {
          "type": "formal_parameters",
          "start": {
            "row": 1,
            "column": 24
          },
          "end": {
            "row": 1,
            "column": 26
          },
          "text": "()",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 1,
                "column": 24
              },
              "end": {
                "row": 1,
                "column": 25
              },
              "text": "("
            },
            {
              "type": ")",
              "start": {
                "row": 1,
                "column": 25
              },
              "end": {
                "row": 1,
                "column": 26
              },
              "text": ")"
            }
          ]
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 27
          },
          "end": {
            "row": 6,
            "column": 3
          },
          "text": "{\n    super.setupLocal();\n    _res = new DeepLearningTask(_jobKey, _sharedmodel, _sync_fraction, _iteration, this);\n    addToPendingCount(1);\n    _res.dfork(null, _fr, true /*run_local*/);\n  }",
          "children": [
            {
              "type": "{",
              "start": {
                "row": 1,
                "column": 27
              },
              "end": {
                "row": 1,
                "column": 28
              },
              "text": "{"
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 2,
                "column": 4
              },
              "end": {
                "row": 2,
                "column": 23
              },
              "text": "super.setupLocal();",
              "children": [
                {
                  "type": "method_invocation",
                  "start": {
                    "row": 2,
                    "column": 4
                  },
                  "end": {
                    "row": 2,
                    "column": 22
                  },
                  "text": "super.setupLocal()",
                  "children": [
                    {
                      "type": "super",
                      "start": {
                        "row": 2,
                        "column": 4
                      },
                      "end": {
                        "row": 2,
                        "column": 9
                      },
                      "text": "super"
                    },
                    {
                      "type": ".",
                      "start": {
                        "row": 2,
                        "column": 9
                      },
                      "end": {
                        "row": 2,
                        "column": 10
                      },
                      "text": "."
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 2,
                        "column": 10
                      },
                      "end": {
                        "row": 2,
                        "column": 20
                      },
                      "text": "setupLocal"
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 2,
                        "column": 20
                      },
                      "end": {
                        "row": 2,
                        "column": 22
                      },
                      "text": "()",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 2,
                            "column": 20
                          },
                          "end": {
                            "row": 2,
                            "column": 21
                          },
                          "text": "("
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 2,
                            "column": 21
                          },
                          "end": {
                            "row": 2,
                            "column": 22
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 2,
                    "column": 22
                  },
                  "end": {
                    "row": 2,
                    "column": 23
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 3,
                "column": 4
              },
              "end": {
                "row": 3,
                "column": 89
              },
              "text": "_res = new DeepLearningTask(_jobKey, _sharedmodel, _sync_fraction, _iteration, this);",
              "children": [
                {
                  "type": "assignment_expression",
                  "start": {
                    "row": 3,
                    "column": 4
                  },
                  "end": {
                    "row": 3,
                    "column": 88
                  },
                  "text": "_res = new DeepLearningTask(_jobKey, _sharedmodel, _sync_fraction, _iteration, this)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 3,
                        "column": 4
                      },
                      "end": {
                        "row": 3,
                        "column": 8
                      },
                      "text": "_res"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 3,
                        "column": 9
                      },
                      "end": {
                        "row": 3,
                        "column": 10
                      },
                      "text": "="
                    },
                    {
                      "type": "object_creation_expression",
                      "start": {
                        "row": 3,
                        "column": 11
                      },
                      "end": {
                        "row": 3,
                        "column": 88
                      },
                      "text": "new DeepLearningTask(_jobKey, _sharedmodel, _sync_fraction, _iteration, this)",
                      "children": [
                        {
                          "type": "new",
                          "start": {
                            "row": 3,
                            "column": 11
                          },
                          "end": {
                            "row": 3,
                            "column": 14
                          },
                          "text": "new"
                        },
                        {
                          "type": "type_identifier",
                          "start": {
                            "row": 3,
                            "column": 15
                          },
                          "end": {
                            "row": 3,
                            "column": 31
                          },
                          "text": "DeepLearningTask"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 3,
                            "column": 31
                          },
                          "end": {
                            "row": 3,
                            "column": 88
                          },
                          "text": "(_jobKey, _sharedmodel, _sync_fraction, _iteration, this)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 3,
                                "column": 31
                              },
                              "end": {
                                "row": 3,
                                "column": 32
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 3,
                                "column": 32
                              },
                              "end": {
                                "row": 3,
                                "column": 39
                              },
                              "text": "_jobKey"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 3,
                                "column": 39
                              },
                              "end": {
                                "row": 3,
                                "column": 40
                              },
                              "text": ","
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 3,
                                "column": 41
                              },
                              "end": {
                                "row": 3,
                                "column": 53
                              },
                              "text": "_sharedmodel"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 3,
                                "column": 53
                              },
                              "end": {
                                "row": 3,
                                "column": 54
                              },
                              "text": ","
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 3,
                                "column": 55
                              },
                              "end": {
                                "row": 3,
                                "column": 69
                              },
                              "text": "_sync_fraction"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 3,
                                "column": 69
                              },
                              "end": {
                                "row": 3,
                                "column": 70
                              },
                              "text": ","
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 3,
                                "column": 71
                              },
                              "end": {
                                "row": 3,
                                "column": 81
                              },
                              "text": "_iteration"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 3,
                                "column": 81
                              },
                              "end": {
                                "row": 3,
                                "column": 82
                              },
                              "text": ","
                            },
                            {
                              "type": "this",
                              "start": {
                                "row": 3,
                                "column": 83
                              },
                              "end": {
                                "row": 3,
                                "column": 87
                              },
                              "text": "this"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 3,
                                "column": 87
                              },
                              "end": {
                                "row": 3,
                                "column": 88
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 3,
                    "column": 88
                  },
                  "end": {
                    "row": 3,
                    "column": 89
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 4,
                "column": 4
              },
              "end": {
                "row": 4,
                "column": 25
              },
              "text": "addToPendingCount(1);",
              "children": [
                {
                  "type": "method_invocation",
                  "start": {
                    "row": 4,
                    "column": 4
                  },
                  "end": {
                    "row": 4,
                    "column": 24
                  },
                  "text": "addToPendingCount(1)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 4,
                        "column": 4
                      },
                      "end": {
                        "row": 4,
                        "column": 21
                      },
                      "text": "addToPendingCount"
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 4,
                        "column": 21
                      },
                      "end": {
                        "row": 4,
                        "column": 24
                      },
                      "text": "(1)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 4,
                            "column": 21
                          },
                          "end": {
                            "row": 4,
                            "column": 22
                          },
                          "text": "("
                        },
                        {
                          "type": "decimal_integer_literal",
                          "start": {
                            "row": 4,
                            "column": 22
                          },
                          "end": {
                            "row": 4,
                            "column": 23
                          },
                          "text": "1"
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 4,
                            "column": 23
                          },
                          "end": {
                            "row": 4,
                            "column": 24
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 4,
                    "column": 24
                  },
                  "end": {
                    "row": 4,
                    "column": 25
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 5,
                "column": 4
              },
              "end": {
                "row": 5,
                "column": 46
              },
              "text": "_res.dfork(null, _fr, true /*run_local*/);",
              "children": [
                {
                  "type": "method_invocation",
                  "start": {
                    "row": 5,
                    "column": 4
                  },
                  "end": {
                    "row": 5,
                    "column": 45
                  },
                  "text": "_res.dfork(null, _fr, true /*run_local*/)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 5,
                        "column": 4
                      },
                      "end": {
                        "row": 5,
                        "column": 8
                      },
                      "text": "_res"
                    },
                    {
                      "type": ".",
                      "start": {
                        "row": 5,
                        "column": 8
                      },
                      "end": {
                        "row": 5,
                        "column": 9
                      },
                      "text": "."
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 5,
                        "column": 9
                      },
                      "end": {
                        "row": 5,
                        "column": 14
                      },
                      "text": "dfork"
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 5,
                        "column": 14
                      },
                      "end": {
                        "row": 5,
                        "column": 45
                      },
                      "text": "(null, _fr, true /*run_local*/)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 5,
                            "column": 14
                          },
                          "end": {
                            "row": 5,
                            "column": 15
                          },
                          "text": "("
                        },
                        {
                          "type": "null_literal",
                          "start": {
                            "row": 5,
                            "column": 15
                          },
                          "end": {
                            "row": 5,
                            "column": 19
                          },
                          "text": "null"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 5,
                            "column": 19
                          },
                          "end": {
                            "row": 5,
                            "column": 20
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 5,
                            "column": 21
                          },
                          "end": {
                            "row": 5,
                            "column": 24
                          },
                          "text": "_fr"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 5,
                            "column": 24
                          },
                          "end": {
                            "row": 5,
                            "column": 25
                          },
                          "text": ","
                        },
                        {
                          "type": "true",
                          "start": {
                            "row": 5,
                            "column": 26
                          },
                          "end": {
                            "row": 5,
                            "column": 30
                          },
                          "text": "true"
                        },
                        {
                          "type": "block_comment",
                          "start": {
                            "row": 5,
                            "column": 31
                          },
                          "end": {
                            "row": 5,
                            "column": 44
                          },
                          "text": "/*run_local*/"
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 5,
                            "column": 44
                          },
                          "end": {
                            "row": 5,
                            "column": 45
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 5,
                    "column": 45
                  },
                  "end": {
                    "row": 5,
                    "column": 46
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "}",
              "start": {
                "row": 6,
                "column": 2
              },
              "end": {
                "row": 6,
                "column": 3
              },
              "text": "}"
            }
          ]
        }
      ]
    }
  ]
}