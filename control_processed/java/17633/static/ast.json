{
  "type": "program",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 29,
    "column": 5
  },
  "text": "public void computeNonEdgeForces(int pointIndex, double theta, INDArray negativeForce, AtomicDouble sumQ) {\n        // Make sure that we spend no time on empty nodes or self-interactions\n        if (cumSize == 0 || (isLeaf() && size == 1 && index[0] == pointIndex))\n            return;\n\n\n        // Compute distance between point and center-of-mass\n        buf.assign(data.slice(pointIndex)).subi(centerOfMass);\n\n        double D = Nd4j.getBlasWrapper().dot(buf, buf);\n\n        // Check whether we can use this node as a \"summary\"\n        if (isLeaf || FastMath.max(boundary.getHh(), boundary.getHw()) / FastMath.sqrt(D) < theta) {\n\n            // Compute and add t-SNE force between point and current node\n            double Q = 1.0 / (1.0 + D);\n            double mult = cumSize * Q;\n            sumQ.addAndGet(mult);\n            mult *= Q;\n            negativeForce.addi(buf.mul(mult));\n\n        } else {\n\n            // Recursively apply Barnes-Hut to children\n            northWest.computeNonEdgeForces(pointIndex, theta, negativeForce, sumQ);\n            northEast.computeNonEdgeForces(pointIndex, theta, negativeForce, sumQ);\n            southWest.computeNonEdgeForces(pointIndex, theta, negativeForce, sumQ);\n            southEast.computeNonEdgeForces(pointIndex, theta, negativeForce, sumQ);\n        }\n    }",
  "children": [
    {
      "type": "method_declaration",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 29,
        "column": 5
      },
      "text": "public void computeNonEdgeForces(int pointIndex, double theta, INDArray negativeForce, AtomicDouble sumQ) {\n        // Make sure that we spend no time on empty nodes or self-interactions\n        if (cumSize == 0 || (isLeaf() && size == 1 && index[0] == pointIndex))\n            return;\n\n\n        // Compute distance between point and center-of-mass\n        buf.assign(data.slice(pointIndex)).subi(centerOfMass);\n\n        double D = Nd4j.getBlasWrapper().dot(buf, buf);\n\n        // Check whether we can use this node as a \"summary\"\n        if (isLeaf || FastMath.max(boundary.getHh(), boundary.getHw()) / FastMath.sqrt(D) < theta) {\n\n            // Compute and add t-SNE force between point and current node\n            double Q = 1.0 / (1.0 + D);\n            double mult = cumSize * Q;\n            sumQ.addAndGet(mult);\n            mult *= Q;\n            negativeForce.addi(buf.mul(mult));\n\n        } else {\n\n            // Recursively apply Barnes-Hut to children\n            northWest.computeNonEdgeForces(pointIndex, theta, negativeForce, sumQ);\n            northEast.computeNonEdgeForces(pointIndex, theta, negativeForce, sumQ);\n            southWest.computeNonEdgeForces(pointIndex, theta, negativeForce, sumQ);\n            southEast.computeNonEdgeForces(pointIndex, theta, negativeForce, sumQ);\n        }\n    }",
      "children": [
        {
          "type": "modifiers",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 6
          },
          "text": "public",
          "children": [
            {
              "type": "public",
              "start": {
                "row": 0,
                "column": 0
              },
              "end": {
                "row": 0,
                "column": 6
              },
              "text": "public"
            }
          ]
        },
        {
          "type": "void_type",
          "start": {
            "row": 0,
            "column": 7
          },
          "end": {
            "row": 0,
            "column": 11
          },
          "text": "void"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 12
          },
          "end": {
            "row": 0,
            "column": 32
          },
          "text": "computeNonEdgeForces"
        },
        {
          "type": "formal_parameters",
          "start": {
            "row": 0,
            "column": 32
          },
          "end": {
            "row": 0,
            "column": 105
          },
          "text": "(int pointIndex, double theta, INDArray negativeForce, AtomicDouble sumQ)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 32
              },
              "end": {
                "row": 0,
                "column": 33
              },
              "text": "("
            },
            {
              "type": "formal_parameter",
              "start": {
                "row": 0,
                "column": 33
              },
              "end": {
                "row": 0,
                "column": 47
              },
              "text": "int pointIndex",
              "children": [
                {
                  "type": "integral_type",
                  "start": {
                    "row": 0,
                    "column": 33
                  },
                  "end": {
                    "row": 0,
                    "column": 36
                  },
                  "text": "int",
                  "children": [
                    {
                      "type": "int",
                      "start": {
                        "row": 0,
                        "column": 33
                      },
                      "end": {
                        "row": 0,
                        "column": 36
                      },
                      "text": "int"
                    }
                  ]
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 37
                  },
                  "end": {
                    "row": 0,
                    "column": 47
                  },
                  "text": "pointIndex"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 47
              },
              "end": {
                "row": 0,
                "column": 48
              },
              "text": ","
            },
            {
              "type": "formal_parameter",
              "start": {
                "row": 0,
                "column": 49
              },
              "end": {
                "row": 0,
                "column": 61
              },
              "text": "double theta",
              "children": [
                {
                  "type": "floating_point_type",
                  "start": {
                    "row": 0,
                    "column": 49
                  },
                  "end": {
                    "row": 0,
                    "column": 55
                  },
                  "text": "double",
                  "children": [
                    {
                      "type": "double",
                      "start": {
                        "row": 0,
                        "column": 49
                      },
                      "end": {
                        "row": 0,
                        "column": 55
                      },
                      "text": "double"
                    }
                  ]
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 56
                  },
                  "end": {
                    "row": 0,
                    "column": 61
                  },
                  "text": "theta"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 61
              },
              "end": {
                "row": 0,
                "column": 62
              },
              "text": ","
            },
            {
              "type": "formal_parameter",
              "start": {
                "row": 0,
                "column": 63
              },
              "end": {
                "row": 0,
                "column": 85
              },
              "text": "INDArray negativeForce",
              "children": [
                {
                  "type": "type_identifier",
                  "start": {
                    "row": 0,
                    "column": 63
                  },
                  "end": {
                    "row": 0,
                    "column": 71
                  },
                  "text": "INDArray"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 72
                  },
                  "end": {
                    "row": 0,
                    "column": 85
                  },
                  "text": "negativeForce"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 85
              },
              "end": {
                "row": 0,
                "column": 86
              },
              "text": ","
            },
            {
              "type": "formal_parameter",
              "start": {
                "row": 0,
                "column": 87
              },
              "end": {
                "row": 0,
                "column": 104
              },
              "text": "AtomicDouble sumQ",
              "children": [
                {
                  "type": "type_identifier",
                  "start": {
                    "row": 0,
                    "column": 87
                  },
                  "end": {
                    "row": 0,
                    "column": 99
                  },
                  "text": "AtomicDouble"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 100
                  },
                  "end": {
                    "row": 0,
                    "column": 104
                  },
                  "text": "sumQ"
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 104
              },
              "end": {
                "row": 0,
                "column": 105
              },
              "text": ")"
            }
          ]
        },
        {
          "type": "block",
          "start": {
            "row": 0,
            "column": 106
          },
          "end": {
            "row": 29,
            "column": 5
          },
          "text": "{\n        // Make sure that we spend no time on empty nodes or self-interactions\n        if (cumSize == 0 || (isLeaf() && size == 1 && index[0] == pointIndex))\n            return;\n\n\n        // Compute distance between point and center-of-mass\n        buf.assign(data.slice(pointIndex)).subi(centerOfMass);\n\n        double D = Nd4j.getBlasWrapper().dot(buf, buf);\n\n        // Check whether we can use this node as a \"summary\"\n        if (isLeaf || FastMath.max(boundary.getHh(), boundary.getHw()) / FastMath.sqrt(D) < theta) {\n\n            // Compute and add t-SNE force between point and current node\n            double Q = 1.0 / (1.0 + D);\n            double mult = cumSize * Q;\n            sumQ.addAndGet(mult);\n            mult *= Q;\n            negativeForce.addi(buf.mul(mult));\n\n        } else {\n\n            // Recursively apply Barnes-Hut to children\n            northWest.computeNonEdgeForces(pointIndex, theta, negativeForce, sumQ);\n            northEast.computeNonEdgeForces(pointIndex, theta, negativeForce, sumQ);\n            southWest.computeNonEdgeForces(pointIndex, theta, negativeForce, sumQ);\n            southEast.computeNonEdgeForces(pointIndex, theta, negativeForce, sumQ);\n        }\n    }",
          "children": [
            {
              "type": "{",
              "start": {
                "row": 0,
                "column": 106
              },
              "end": {
                "row": 0,
                "column": 107
              },
              "text": "{"
            },
            {
              "type": "line_comment",
              "start": {
                "row": 1,
                "column": 8
              },
              "end": {
                "row": 1,
                "column": 78
              },
              "text": "// Make sure that we spend no time on empty nodes or self-interactions"
            },
            {
              "type": "if_statement",
              "start": {
                "row": 2,
                "column": 8
              },
              "end": {
                "row": 3,
                "column": 19
              },
              "text": "if (cumSize == 0 || (isLeaf() && size == 1 && index[0] == pointIndex))\n            return;",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 2,
                    "column": 8
                  },
                  "end": {
                    "row": 2,
                    "column": 10
                  },
                  "text": "if"
                },
                {
                  "type": "condition",
                  "start": {
                    "row": 2,
                    "column": 11
                  },
                  "end": {
                    "row": 2,
                    "column": 78
                  },
                  "text": "(cumSize == 0 || (isLeaf() && size == 1 && index[0] == pointIndex))",
                  "children": [
                    {
                      "type": "(",
                      "start": {
                        "row": 2,
                        "column": 11
                      },
                      "end": {
                        "row": 2,
                        "column": 12
                      },
                      "text": "("
                    },
                    {
                      "type": "binary_expression",
                      "start": {
                        "row": 2,
                        "column": 12
                      },
                      "end": {
                        "row": 2,
                        "column": 77
                      },
                      "text": "cumSize == 0 || (isLeaf() && size == 1 && index[0] == pointIndex)",
                      "children": [
                        {
                          "type": "binary_expression",
                          "start": {
                            "row": 2,
                            "column": 12
                          },
                          "end": {
                            "row": 2,
                            "column": 24
                          },
                          "text": "cumSize == 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 2,
                                "column": 12
                              },
                              "end": {
                                "row": 2,
                                "column": 19
                              },
                              "text": "cumSize"
                            },
                            {
                              "type": "==",
                              "start": {
                                "row": 2,
                                "column": 20
                              },
                              "end": {
                                "row": 2,
                                "column": 22
                              },
                              "text": "=="
                            },
                            {
                              "type": "decimal_integer_literal",
                              "start": {
                                "row": 2,
                                "column": 23
                              },
                              "end": {
                                "row": 2,
                                "column": 24
                              },
                              "text": "0"
                            }
                          ]
                        },
                        {
                          "type": "||",
                          "start": {
                            "row": 2,
                            "column": 25
                          },
                          "end": {
                            "row": 2,
                            "column": 27
                          },
                          "text": "||"
                        },
                        {
                          "type": "parenthesized_expression",
                          "start": {
                            "row": 2,
                            "column": 28
                          },
                          "end": {
                            "row": 2,
                            "column": 77
                          },
                          "text": "(isLeaf() && size == 1 && index[0] == pointIndex)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 2,
                                "column": 28
                              },
                              "end": {
                                "row": 2,
                                "column": 29
                              },
                              "text": "("
                            },
                            {
                              "type": "binary_expression",
                              "start": {
                                "row": 2,
                                "column": 29
                              },
                              "end": {
                                "row": 2,
                                "column": 76
                              },
                              "text": "isLeaf() && size == 1 && index[0] == pointIndex",
                              "children": [
                                {
                                  "type": "binary_expression",
                                  "start": {
                                    "row": 2,
                                    "column": 29
                                  },
                                  "end": {
                                    "row": 2,
                                    "column": 50
                                  },
                                  "text": "isLeaf() && size == 1",
                                  "children": [
                                    {
                                      "type": "method_invocation",
                                      "start": {
                                        "row": 2,
                                        "column": 29
                                      },
                                      "end": {
                                        "row": 2,
                                        "column": 37
                                      },
                                      "text": "isLeaf()",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 2,
                                            "column": 29
                                          },
                                          "end": {
                                            "row": 2,
                                            "column": 35
                                          },
                                          "text": "isLeaf"
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 2,
                                            "column": 35
                                          },
                                          "end": {
                                            "row": 2,
                                            "column": 37
                                          },
                                          "text": "()",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 2,
                                                "column": 35
                                              },
                                              "end": {
                                                "row": 2,
                                                "column": 36
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 2,
                                                "column": 36
                                              },
                                              "end": {
                                                "row": 2,
                                                "column": 37
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "&&",
                                      "start": {
                                        "row": 2,
                                        "column": 38
                                      },
                                      "end": {
                                        "row": 2,
                                        "column": 40
                                      },
                                      "text": "&&"
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start": {
                                        "row": 2,
                                        "column": 41
                                      },
                                      "end": {
                                        "row": 2,
                                        "column": 50
                                      },
                                      "text": "size == 1",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 2,
                                            "column": 41
                                          },
                                          "end": {
                                            "row": 2,
                                            "column": 45
                                          },
                                          "text": "size"
                                        },
                                        {
                                          "type": "==",
                                          "start": {
                                            "row": 2,
                                            "column": 46
                                          },
                                          "end": {
                                            "row": 2,
                                            "column": 48
                                          },
                                          "text": "=="
                                        },
                                        {
                                          "type": "decimal_integer_literal",
                                          "start": {
                                            "row": 2,
                                            "column": 49
                                          },
                                          "end": {
                                            "row": 2,
                                            "column": 50
                                          },
                                          "text": "1"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "&&",
                                  "start": {
                                    "row": 2,
                                    "column": 51
                                  },
                                  "end": {
                                    "row": 2,
                                    "column": 53
                                  },
                                  "text": "&&"
                                },
                                {
                                  "type": "binary_expression",
                                  "start": {
                                    "row": 2,
                                    "column": 54
                                  },
                                  "end": {
                                    "row": 2,
                                    "column": 76
                                  },
                                  "text": "index[0] == pointIndex",
                                  "children": [
                                    {
                                      "type": "array_access",
                                      "start": {
                                        "row": 2,
                                        "column": 54
                                      },
                                      "end": {
                                        "row": 2,
                                        "column": 62
                                      },
                                      "text": "index[0]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 2,
                                            "column": 54
                                          },
                                          "end": {
                                            "row": 2,
                                            "column": 59
                                          },
                                          "text": "index"
                                        },
                                        {
                                          "type": "[",
                                          "start": {
                                            "row": 2,
                                            "column": 59
                                          },
                                          "end": {
                                            "row": 2,
                                            "column": 60
                                          },
                                          "text": "["
                                        },
                                        {
                                          "type": "decimal_integer_literal",
                                          "start": {
                                            "row": 2,
                                            "column": 60
                                          },
                                          "end": {
                                            "row": 2,
                                            "column": 61
                                          },
                                          "text": "0"
                                        },
                                        {
                                          "type": "]",
                                          "start": {
                                            "row": 2,
                                            "column": 61
                                          },
                                          "end": {
                                            "row": 2,
                                            "column": 62
                                          },
                                          "text": "]"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "==",
                                      "start": {
                                        "row": 2,
                                        "column": 63
                                      },
                                      "end": {
                                        "row": 2,
                                        "column": 65
                                      },
                                      "text": "=="
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 2,
                                        "column": 66
                                      },
                                      "end": {
                                        "row": 2,
                                        "column": 76
                                      },
                                      "text": "pointIndex"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 2,
                                "column": 76
                              },
                              "end": {
                                "row": 2,
                                "column": 77
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start": {
                        "row": 2,
                        "column": 77
                      },
                      "end": {
                        "row": 2,
                        "column": 78
                      },
                      "text": ")"
                    }
                  ]
                },
                {
                  "type": "return_statement",
                  "start": {
                    "row": 3,
                    "column": 12
                  },
                  "end": {
                    "row": 3,
                    "column": 19
                  },
                  "text": "return;",
                  "children": [
                    {
                      "type": "return",
                      "start": {
                        "row": 3,
                        "column": 12
                      },
                      "end": {
                        "row": 3,
                        "column": 18
                      },
                      "text": "return"
                    },
                    {
                      "type": ";",
                      "start": {
                        "row": 3,
                        "column": 18
                      },
                      "end": {
                        "row": 3,
                        "column": 19
                      },
                      "text": ";"
                    }
                  ]
                }
              ]
            },
            {
              "type": "line_comment",
              "start": {
                "row": 6,
                "column": 8
              },
              "end": {
                "row": 6,
                "column": 60
              },
              "text": "// Compute distance between point and center-of-mass"
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 7,
                "column": 8
              },
              "end": {
                "row": 7,
                "column": 62
              },
              "text": "buf.assign(data.slice(pointIndex)).subi(centerOfMass);",
              "children": [
                {
                  "type": "method_invocation",
                  "start": {
                    "row": 7,
                    "column": 8
                  },
                  "end": {
                    "row": 7,
                    "column": 61
                  },
                  "text": "buf.assign(data.slice(pointIndex)).subi(centerOfMass)",
                  "children": [
                    {
                      "type": "method_invocation",
                      "start": {
                        "row": 7,
                        "column": 8
                      },
                      "end": {
                        "row": 7,
                        "column": 42
                      },
                      "text": "buf.assign(data.slice(pointIndex))",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 7,
                            "column": 8
                          },
                          "end": {
                            "row": 7,
                            "column": 11
                          },
                          "text": "buf"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 7,
                            "column": 11
                          },
                          "end": {
                            "row": 7,
                            "column": 12
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 7,
                            "column": 12
                          },
                          "end": {
                            "row": 7,
                            "column": 18
                          },
                          "text": "assign"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 7,
                            "column": 18
                          },
                          "end": {
                            "row": 7,
                            "column": 42
                          },
                          "text": "(data.slice(pointIndex))",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 7,
                                "column": 18
                              },
                              "end": {
                                "row": 7,
                                "column": 19
                              },
                              "text": "("
                            },
                            {
                              "type": "method_invocation",
                              "start": {
                                "row": 7,
                                "column": 19
                              },
                              "end": {
                                "row": 7,
                                "column": 41
                              },
                              "text": "data.slice(pointIndex)",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 7,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 7,
                                    "column": 23
                                  },
                                  "text": "data"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 7,
                                    "column": 23
                                  },
                                  "end": {
                                    "row": 7,
                                    "column": 24
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 7,
                                    "column": 24
                                  },
                                  "end": {
                                    "row": 7,
                                    "column": 29
                                  },
                                  "text": "slice"
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 7,
                                    "column": 29
                                  },
                                  "end": {
                                    "row": 7,
                                    "column": 41
                                  },
                                  "text": "(pointIndex)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 7,
                                        "column": 29
                                      },
                                      "end": {
                                        "row": 7,
                                        "column": 30
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 7,
                                        "column": 30
                                      },
                                      "end": {
                                        "row": 7,
                                        "column": 40
                                      },
                                      "text": "pointIndex"
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 7,
                                        "column": 40
                                      },
                                      "end": {
                                        "row": 7,
                                        "column": 41
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 7,
                                "column": 41
                              },
                              "end": {
                                "row": 7,
                                "column": 42
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ".",
                      "start": {
                        "row": 7,
                        "column": 42
                      },
                      "end": {
                        "row": 7,
                        "column": 43
                      },
                      "text": "."
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 7,
                        "column": 43
                      },
                      "end": {
                        "row": 7,
                        "column": 47
                      },
                      "text": "subi"
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 7,
                        "column": 47
                      },
                      "end": {
                        "row": 7,
                        "column": 61
                      },
                      "text": "(centerOfMass)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 7,
                            "column": 47
                          },
                          "end": {
                            "row": 7,
                            "column": 48
                          },
                          "text": "("
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 7,
                            "column": 48
                          },
                          "end": {
                            "row": 7,
                            "column": 60
                          },
                          "text": "centerOfMass"
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 7,
                            "column": 60
                          },
                          "end": {
                            "row": 7,
                            "column": 61
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 7,
                    "column": 61
                  },
                  "end": {
                    "row": 7,
                    "column": 62
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "local_variable_declaration",
              "start": {
                "row": 9,
                "column": 8
              },
              "end": {
                "row": 9,
                "column": 55
              },
              "text": "double D = Nd4j.getBlasWrapper().dot(buf, buf);",
              "children": [
                {
                  "type": "floating_point_type",
                  "start": {
                    "row": 9,
                    "column": 8
                  },
                  "end": {
                    "row": 9,
                    "column": 14
                  },
                  "text": "double",
                  "children": [
                    {
                      "type": "double",
                      "start": {
                        "row": 9,
                        "column": 8
                      },
                      "end": {
                        "row": 9,
                        "column": 14
                      },
                      "text": "double"
                    }
                  ]
                },
                {
                  "type": "variable_declarator",
                  "start": {
                    "row": 9,
                    "column": 15
                  },
                  "end": {
                    "row": 9,
                    "column": 54
                  },
                  "text": "D = Nd4j.getBlasWrapper().dot(buf, buf)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 9,
                        "column": 15
                      },
                      "end": {
                        "row": 9,
                        "column": 16
                      },
                      "text": "D"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 9,
                        "column": 17
                      },
                      "end": {
                        "row": 9,
                        "column": 18
                      },
                      "text": "="
                    },
                    {
                      "type": "method_invocation",
                      "start": {
                        "row": 9,
                        "column": 19
                      },
                      "end": {
                        "row": 9,
                        "column": 54
                      },
                      "text": "Nd4j.getBlasWrapper().dot(buf, buf)",
                      "children": [
                        {
                          "type": "method_invocation",
                          "start": {
                            "row": 9,
                            "column": 19
                          },
                          "end": {
                            "row": 9,
                            "column": 40
                          },
                          "text": "Nd4j.getBlasWrapper()",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 9,
                                "column": 19
                              },
                              "end": {
                                "row": 9,
                                "column": 23
                              },
                              "text": "Nd4j"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 9,
                                "column": 23
                              },
                              "end": {
                                "row": 9,
                                "column": 24
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 9,
                                "column": 24
                              },
                              "end": {
                                "row": 9,
                                "column": 38
                              },
                              "text": "getBlasWrapper"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 9,
                                "column": 38
                              },
                              "end": {
                                "row": 9,
                                "column": 40
                              },
                              "text": "()",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 9,
                                    "column": 38
                                  },
                                  "end": {
                                    "row": 9,
                                    "column": 39
                                  },
                                  "text": "("
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 9,
                                    "column": 39
                                  },
                                  "end": {
                                    "row": 9,
                                    "column": 40
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 9,
                            "column": 40
                          },
                          "end": {
                            "row": 9,
                            "column": 41
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 9,
                            "column": 41
                          },
                          "end": {
                            "row": 9,
                            "column": 44
                          },
                          "text": "dot"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 9,
                            "column": 44
                          },
                          "end": {
                            "row": 9,
                            "column": 54
                          },
                          "text": "(buf, buf)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 9,
                                "column": 44
                              },
                              "end": {
                                "row": 9,
                                "column": 45
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 9,
                                "column": 45
                              },
                              "end": {
                                "row": 9,
                                "column": 48
                              },
                              "text": "buf"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 9,
                                "column": 48
                              },
                              "end": {
                                "row": 9,
                                "column": 49
                              },
                              "text": ","
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 9,
                                "column": 50
                              },
                              "end": {
                                "row": 9,
                                "column": 53
                              },
                              "text": "buf"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 9,
                                "column": 53
                              },
                              "end": {
                                "row": 9,
                                "column": 54
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 9,
                    "column": 54
                  },
                  "end": {
                    "row": 9,
                    "column": 55
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "line_comment",
              "start": {
                "row": 11,
                "column": 8
              },
              "end": {
                "row": 11,
                "column": 60
              },
              "text": "// Check whether we can use this node as a \"summary\""
            },
            {
              "type": "if_statement",
              "start": {
                "row": 12,
                "column": 8
              },
              "end": {
                "row": 28,
                "column": 9
              },
              "text": "if (isLeaf || FastMath.max(boundary.getHh(), boundary.getHw()) / FastMath.sqrt(D) < theta) {\n\n            // Compute and add t-SNE force between point and current node\n            double Q = 1.0 / (1.0 + D);\n            double mult = cumSize * Q;\n            sumQ.addAndGet(mult);\n            mult *= Q;\n            negativeForce.addi(buf.mul(mult));\n\n        } else {\n\n            // Recursively apply Barnes-Hut to children\n            northWest.computeNonEdgeForces(pointIndex, theta, negativeForce, sumQ);\n            northEast.computeNonEdgeForces(pointIndex, theta, negativeForce, sumQ);\n            southWest.computeNonEdgeForces(pointIndex, theta, negativeForce, sumQ);\n            southEast.computeNonEdgeForces(pointIndex, theta, negativeForce, sumQ);\n        }",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 12,
                    "column": 8
                  },
                  "end": {
                    "row": 12,
                    "column": 10
                  },
                  "text": "if"
                },
                {
                  "type": "condition",
                  "start": {
                    "row": 12,
                    "column": 11
                  },
                  "end": {
                    "row": 12,
                    "column": 98
                  },
                  "text": "(isLeaf || FastMath.max(boundary.getHh(), boundary.getHw()) / FastMath.sqrt(D) < theta)",
                  "children": [
                    {
                      "type": "(",
                      "start": {
                        "row": 12,
                        "column": 11
                      },
                      "end": {
                        "row": 12,
                        "column": 12
                      },
                      "text": "("
                    },
                    {
                      "type": "binary_expression",
                      "start": {
                        "row": 12,
                        "column": 12
                      },
                      "end": {
                        "row": 12,
                        "column": 97
                      },
                      "text": "isLeaf || FastMath.max(boundary.getHh(), boundary.getHw()) / FastMath.sqrt(D) < theta",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 12,
                            "column": 12
                          },
                          "end": {
                            "row": 12,
                            "column": 18
                          },
                          "text": "isLeaf"
                        },
                        {
                          "type": "||",
                          "start": {
                            "row": 12,
                            "column": 19
                          },
                          "end": {
                            "row": 12,
                            "column": 21
                          },
                          "text": "||"
                        },
                        {
                          "type": "binary_expression",
                          "start": {
                            "row": 12,
                            "column": 22
                          },
                          "end": {
                            "row": 12,
                            "column": 97
                          },
                          "text": "FastMath.max(boundary.getHh(), boundary.getHw()) / FastMath.sqrt(D) < theta",
                          "children": [
                            {
                              "type": "binary_expression",
                              "start": {
                                "row": 12,
                                "column": 22
                              },
                              "end": {
                                "row": 12,
                                "column": 89
                              },
                              "text": "FastMath.max(boundary.getHh(), boundary.getHw()) / FastMath.sqrt(D)",
                              "children": [
                                {
                                  "type": "method_invocation",
                                  "start": {
                                    "row": 12,
                                    "column": 22
                                  },
                                  "end": {
                                    "row": 12,
                                    "column": 70
                                  },
                                  "text": "FastMath.max(boundary.getHh(), boundary.getHw())",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 12,
                                        "column": 22
                                      },
                                      "end": {
                                        "row": 12,
                                        "column": 30
                                      },
                                      "text": "FastMath"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 12,
                                        "column": 30
                                      },
                                      "end": {
                                        "row": 12,
                                        "column": 31
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 12,
                                        "column": 31
                                      },
                                      "end": {
                                        "row": 12,
                                        "column": 34
                                      },
                                      "text": "max"
                                    },
                                    {
                                      "type": "argument_list",
                                      "start": {
                                        "row": 12,
                                        "column": 34
                                      },
                                      "end": {
                                        "row": 12,
                                        "column": 70
                                      },
                                      "text": "(boundary.getHh(), boundary.getHw())",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 12,
                                            "column": 34
                                          },
                                          "end": {
                                            "row": 12,
                                            "column": 35
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "method_invocation",
                                          "start": {
                                            "row": 12,
                                            "column": 35
                                          },
                                          "end": {
                                            "row": 12,
                                            "column": 51
                                          },
                                          "text": "boundary.getHh()",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 12,
                                                "column": 35
                                              },
                                              "end": {
                                                "row": 12,
                                                "column": 43
                                              },
                                              "text": "boundary"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 12,
                                                "column": 43
                                              },
                                              "end": {
                                                "row": 12,
                                                "column": 44
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 12,
                                                "column": 44
                                              },
                                              "end": {
                                                "row": 12,
                                                "column": 49
                                              },
                                              "text": "getHh"
                                            },
                                            {
                                              "type": "argument_list",
                                              "start": {
                                                "row": 12,
                                                "column": 49
                                              },
                                              "end": {
                                                "row": 12,
                                                "column": 51
                                              },
                                              "text": "()",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 12,
                                                    "column": 49
                                                  },
                                                  "end": {
                                                    "row": 12,
                                                    "column": 50
                                                  },
                                                  "text": "("
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 12,
                                                    "column": 50
                                                  },
                                                  "end": {
                                                    "row": 12,
                                                    "column": 51
                                                  },
                                                  "text": ")"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 12,
                                            "column": 51
                                          },
                                          "end": {
                                            "row": 12,
                                            "column": 52
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "method_invocation",
                                          "start": {
                                            "row": 12,
                                            "column": 53
                                          },
                                          "end": {
                                            "row": 12,
                                            "column": 69
                                          },
                                          "text": "boundary.getHw()",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 12,
                                                "column": 53
                                              },
                                              "end": {
                                                "row": 12,
                                                "column": 61
                                              },
                                              "text": "boundary"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 12,
                                                "column": 61
                                              },
                                              "end": {
                                                "row": 12,
                                                "column": 62
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 12,
                                                "column": 62
                                              },
                                              "end": {
                                                "row": 12,
                                                "column": 67
                                              },
                                              "text": "getHw"
                                            },
                                            {
                                              "type": "argument_list",
                                              "start": {
                                                "row": 12,
                                                "column": 67
                                              },
                                              "end": {
                                                "row": 12,
                                                "column": 69
                                              },
                                              "text": "()",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 12,
                                                    "column": 67
                                                  },
                                                  "end": {
                                                    "row": 12,
                                                    "column": 68
                                                  },
                                                  "text": "("
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 12,
                                                    "column": 68
                                                  },
                                                  "end": {
                                                    "row": 12,
                                                    "column": 69
                                                  },
                                                  "text": ")"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 12,
                                            "column": 69
                                          },
                                          "end": {
                                            "row": 12,
                                            "column": 70
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "/",
                                  "start": {
                                    "row": 12,
                                    "column": 71
                                  },
                                  "end": {
                                    "row": 12,
                                    "column": 72
                                  },
                                  "text": "/"
                                },
                                {
                                  "type": "method_invocation",
                                  "start": {
                                    "row": 12,
                                    "column": 73
                                  },
                                  "end": {
                                    "row": 12,
                                    "column": 89
                                  },
                                  "text": "FastMath.sqrt(D)",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 12,
                                        "column": 73
                                      },
                                      "end": {
                                        "row": 12,
                                        "column": 81
                                      },
                                      "text": "FastMath"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 12,
                                        "column": 81
                                      },
                                      "end": {
                                        "row": 12,
                                        "column": 82
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 12,
                                        "column": 82
                                      },
                                      "end": {
                                        "row": 12,
                                        "column": 86
                                      },
                                      "text": "sqrt"
                                    },
                                    {
                                      "type": "argument_list",
                                      "start": {
                                        "row": 12,
                                        "column": 86
                                      },
                                      "end": {
                                        "row": 12,
                                        "column": 89
                                      },
                                      "text": "(D)",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 12,
                                            "column": 86
                                          },
                                          "end": {
                                            "row": 12,
                                            "column": 87
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 12,
                                            "column": 87
                                          },
                                          "end": {
                                            "row": 12,
                                            "column": 88
                                          },
                                          "text": "D"
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 12,
                                            "column": 88
                                          },
                                          "end": {
                                            "row": 12,
                                            "column": 89
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "<",
                              "start": {
                                "row": 12,
                                "column": 90
                              },
                              "end": {
                                "row": 12,
                                "column": 91
                              },
                              "text": "<"
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 12,
                                "column": 92
                              },
                              "end": {
                                "row": 12,
                                "column": 97
                              },
                              "text": "theta"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start": {
                        "row": 12,
                        "column": 97
                      },
                      "end": {
                        "row": 12,
                        "column": 98
                      },
                      "text": ")"
                    }
                  ]
                },
                {
                  "type": "block",
                  "start": {
                    "row": 12,
                    "column": 99
                  },
                  "end": {
                    "row": 21,
                    "column": 9
                  },
                  "text": "{\n\n            // Compute and add t-SNE force between point and current node\n            double Q = 1.0 / (1.0 + D);\n            double mult = cumSize * Q;\n            sumQ.addAndGet(mult);\n            mult *= Q;\n            negativeForce.addi(buf.mul(mult));\n\n        }",
                  "children": [
                    {
                      "type": "{",
                      "start": {
                        "row": 12,
                        "column": 99
                      },
                      "end": {
                        "row": 12,
                        "column": 100
                      },
                      "text": "{"
                    },
                    {
                      "type": "line_comment",
                      "start": {
                        "row": 14,
                        "column": 12
                      },
                      "end": {
                        "row": 14,
                        "column": 73
                      },
                      "text": "// Compute and add t-SNE force between point and current node"
                    },
                    {
                      "type": "local_variable_declaration",
                      "start": {
                        "row": 15,
                        "column": 12
                      },
                      "end": {
                        "row": 15,
                        "column": 39
                      },
                      "text": "double Q = 1.0 / (1.0 + D);",
                      "children": [
                        {
                          "type": "floating_point_type",
                          "start": {
                            "row": 15,
                            "column": 12
                          },
                          "end": {
                            "row": 15,
                            "column": 18
                          },
                          "text": "double",
                          "children": [
                            {
                              "type": "double",
                              "start": {
                                "row": 15,
                                "column": 12
                              },
                              "end": {
                                "row": 15,
                                "column": 18
                              },
                              "text": "double"
                            }
                          ]
                        },
                        {
                          "type": "variable_declarator",
                          "start": {
                            "row": 15,
                            "column": 19
                          },
                          "end": {
                            "row": 15,
                            "column": 38
                          },
                          "text": "Q = 1.0 / (1.0 + D)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 15,
                                "column": 19
                              },
                              "end": {
                                "row": 15,
                                "column": 20
                              },
                              "text": "Q"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 15,
                                "column": 21
                              },
                              "end": {
                                "row": 15,
                                "column": 22
                              },
                              "text": "="
                            },
                            {
                              "type": "binary_expression",
                              "start": {
                                "row": 15,
                                "column": 23
                              },
                              "end": {
                                "row": 15,
                                "column": 38
                              },
                              "text": "1.0 / (1.0 + D)",
                              "children": [
                                {
                                  "type": "decimal_floating_point_literal",
                                  "start": {
                                    "row": 15,
                                    "column": 23
                                  },
                                  "end": {
                                    "row": 15,
                                    "column": 26
                                  },
                                  "text": "1.0"
                                },
                                {
                                  "type": "/",
                                  "start": {
                                    "row": 15,
                                    "column": 27
                                  },
                                  "end": {
                                    "row": 15,
                                    "column": 28
                                  },
                                  "text": "/"
                                },
                                {
                                  "type": "parenthesized_expression",
                                  "start": {
                                    "row": 15,
                                    "column": 29
                                  },
                                  "end": {
                                    "row": 15,
                                    "column": 38
                                  },
                                  "text": "(1.0 + D)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 15,
                                        "column": 29
                                      },
                                      "end": {
                                        "row": 15,
                                        "column": 30
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start": {
                                        "row": 15,
                                        "column": 30
                                      },
                                      "end": {
                                        "row": 15,
                                        "column": 37
                                      },
                                      "text": "1.0 + D",
                                      "children": [
                                        {
                                          "type": "decimal_floating_point_literal",
                                          "start": {
                                            "row": 15,
                                            "column": 30
                                          },
                                          "end": {
                                            "row": 15,
                                            "column": 33
                                          },
                                          "text": "1.0"
                                        },
                                        {
                                          "type": "+",
                                          "start": {
                                            "row": 15,
                                            "column": 34
                                          },
                                          "end": {
                                            "row": 15,
                                            "column": 35
                                          },
                                          "text": "+"
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 15,
                                            "column": 36
                                          },
                                          "end": {
                                            "row": 15,
                                            "column": 37
                                          },
                                          "text": "D"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 15,
                                        "column": 37
                                      },
                                      "end": {
                                        "row": 15,
                                        "column": 38
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start": {
                            "row": 15,
                            "column": 38
                          },
                          "end": {
                            "row": 15,
                            "column": 39
                          },
                          "text": ";"
                        }
                      ]
                    },
                    {
                      "type": "local_variable_declaration",
                      "start": {
                        "row": 16,
                        "column": 12
                      },
                      "end": {
                        "row": 16,
                        "column": 38
                      },
                      "text": "double mult = cumSize * Q;",
                      "children": [
                        {
                          "type": "floating_point_type",
                          "start": {
                            "row": 16,
                            "column": 12
                          },
                          "end": {
                            "row": 16,
                            "column": 18
                          },
                          "text": "double",
                          "children": [
                            {
                              "type": "double",
                              "start": {
                                "row": 16,
                                "column": 12
                              },
                              "end": {
                                "row": 16,
                                "column": 18
                              },
                              "text": "double"
                            }
                          ]
                        },
                        {
                          "type": "variable_declarator",
                          "start": {
                            "row": 16,
                            "column": 19
                          },
                          "end": {
                            "row": 16,
                            "column": 37
                          },
                          "text": "mult = cumSize * Q",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 16,
                                "column": 19
                              },
                              "end": {
                                "row": 16,
                                "column": 23
                              },
                              "text": "mult"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 16,
                                "column": 24
                              },
                              "end": {
                                "row": 16,
                                "column": 25
                              },
                              "text": "="
                            },
                            {
                              "type": "binary_expression",
                              "start": {
                                "row": 16,
                                "column": 26
                              },
                              "end": {
                                "row": 16,
                                "column": 37
                              },
                              "text": "cumSize * Q",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 16,
                                    "column": 26
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 33
                                  },
                                  "text": "cumSize"
                                },
                                {
                                  "type": "*",
                                  "start": {
                                    "row": 16,
                                    "column": 34
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 35
                                  },
                                  "text": "*"
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 16,
                                    "column": 36
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 37
                                  },
                                  "text": "Q"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start": {
                            "row": 16,
                            "column": 37
                          },
                          "end": {
                            "row": 16,
                            "column": 38
                          },
                          "text": ";"
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 17,
                        "column": 12
                      },
                      "end": {
                        "row": 17,
                        "column": 33
                      },
                      "text": "sumQ.addAndGet(mult);",
                      "children": [
                        {
                          "type": "method_invocation",
                          "start": {
                            "row": 17,
                            "column": 12
                          },
                          "end": {
                            "row": 17,
                            "column": 32
                          },
                          "text": "sumQ.addAndGet(mult)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 17,
                                "column": 12
                              },
                              "end": {
                                "row": 17,
                                "column": 16
                              },
                              "text": "sumQ"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 17,
                                "column": 16
                              },
                              "end": {
                                "row": 17,
                                "column": 17
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 17,
                                "column": 17
                              },
                              "end": {
                                "row": 17,
                                "column": 26
                              },
                              "text": "addAndGet"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 17,
                                "column": 26
                              },
                              "end": {
                                "row": 17,
                                "column": 32
                              },
                              "text": "(mult)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 17,
                                    "column": 26
                                  },
                                  "end": {
                                    "row": 17,
                                    "column": 27
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 17,
                                    "column": 27
                                  },
                                  "end": {
                                    "row": 17,
                                    "column": 31
                                  },
                                  "text": "mult"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 17,
                                    "column": 31
                                  },
                                  "end": {
                                    "row": 17,
                                    "column": 32
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start": {
                            "row": 17,
                            "column": 32
                          },
                          "end": {
                            "row": 17,
                            "column": 33
                          },
                          "text": ";"
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 18,
                        "column": 12
                      },
                      "end": {
                        "row": 18,
                        "column": 22
                      },
                      "text": "mult *= Q;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start": {
                            "row": 18,
                            "column": 12
                          },
                          "end": {
                            "row": 18,
                            "column": 21
                          },
                          "text": "mult *= Q",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 18,
                                "column": 12
                              },
                              "end": {
                                "row": 18,
                                "column": 16
                              },
                              "text": "mult"
                            },
                            {
                              "type": "*=",
                              "start": {
                                "row": 18,
                                "column": 17
                              },
                              "end": {
                                "row": 18,
                                "column": 19
                              },
                              "text": "*="
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 18,
                                "column": 20
                              },
                              "end": {
                                "row": 18,
                                "column": 21
                              },
                              "text": "Q"
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start": {
                            "row": 18,
                            "column": 21
                          },
                          "end": {
                            "row": 18,
                            "column": 22
                          },
                          "text": ";"
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 19,
                        "column": 12
                      },
                      "end": {
                        "row": 19,
                        "column": 46
                      },
                      "text": "negativeForce.addi(buf.mul(mult));",
                      "children": [
                        {
                          "type": "method_invocation",
                          "start": {
                            "row": 19,
                            "column": 12
                          },
                          "end": {
                            "row": 19,
                            "column": 45
                          },
                          "text": "negativeForce.addi(buf.mul(mult))",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 19,
                                "column": 12
                              },
                              "end": {
                                "row": 19,
                                "column": 25
                              },
                              "text": "negativeForce"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 19,
                                "column": 25
                              },
                              "end": {
                                "row": 19,
                                "column": 26
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 19,
                                "column": 26
                              },
                              "end": {
                                "row": 19,
                                "column": 30
                              },
                              "text": "addi"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 19,
                                "column": 30
                              },
                              "end": {
                                "row": 19,
                                "column": 45
                              },
                              "text": "(buf.mul(mult))",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 19,
                                    "column": 30
                                  },
                                  "end": {
                                    "row": 19,
                                    "column": 31
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "method_invocation",
                                  "start": {
                                    "row": 19,
                                    "column": 31
                                  },
                                  "end": {
                                    "row": 19,
                                    "column": 44
                                  },
                                  "text": "buf.mul(mult)",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 19,
                                        "column": 31
                                      },
                                      "end": {
                                        "row": 19,
                                        "column": 34
                                      },
                                      "text": "buf"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 19,
                                        "column": 34
                                      },
                                      "end": {
                                        "row": 19,
                                        "column": 35
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 19,
                                        "column": 35
                                      },
                                      "end": {
                                        "row": 19,
                                        "column": 38
                                      },
                                      "text": "mul"
                                    },
                                    {
                                      "type": "argument_list",
                                      "start": {
                                        "row": 19,
                                        "column": 38
                                      },
                                      "end": {
                                        "row": 19,
                                        "column": 44
                                      },
                                      "text": "(mult)",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 19,
                                            "column": 38
                                          },
                                          "end": {
                                            "row": 19,
                                            "column": 39
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 19,
                                            "column": 39
                                          },
                                          "end": {
                                            "row": 19,
                                            "column": 43
                                          },
                                          "text": "mult"
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 19,
                                            "column": 43
                                          },
                                          "end": {
                                            "row": 19,
                                            "column": 44
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 19,
                                    "column": 44
                                  },
                                  "end": {
                                    "row": 19,
                                    "column": 45
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start": {
                            "row": 19,
                            "column": 45
                          },
                          "end": {
                            "row": 19,
                            "column": 46
                          },
                          "text": ";"
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start": {
                        "row": 21,
                        "column": 8
                      },
                      "end": {
                        "row": 21,
                        "column": 9
                      },
                      "text": "}"
                    }
                  ]
                },
                {
                  "type": "else",
                  "start": {
                    "row": 21,
                    "column": 10
                  },
                  "end": {
                    "row": 21,
                    "column": 14
                  },
                  "text": "else"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 21,
                    "column": 15
                  },
                  "end": {
                    "row": 28,
                    "column": 9
                  },
                  "text": "{\n\n            // Recursively apply Barnes-Hut to children\n            northWest.computeNonEdgeForces(pointIndex, theta, negativeForce, sumQ);\n            northEast.computeNonEdgeForces(pointIndex, theta, negativeForce, sumQ);\n            southWest.computeNonEdgeForces(pointIndex, theta, negativeForce, sumQ);\n            southEast.computeNonEdgeForces(pointIndex, theta, negativeForce, sumQ);\n        }",
                  "children": [
                    {
                      "type": "{",
                      "start": {
                        "row": 21,
                        "column": 15
                      },
                      "end": {
                        "row": 21,
                        "column": 16
                      },
                      "text": "{"
                    },
                    {
                      "type": "line_comment",
                      "start": {
                        "row": 23,
                        "column": 12
                      },
                      "end": {
                        "row": 23,
                        "column": 55
                      },
                      "text": "// Recursively apply Barnes-Hut to children"
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 24,
                        "column": 12
                      },
                      "end": {
                        "row": 24,
                        "column": 83
                      },
                      "text": "northWest.computeNonEdgeForces(pointIndex, theta, negativeForce, sumQ);",
                      "children": [
                        {
                          "type": "method_invocation",
                          "start": {
                            "row": 24,
                            "column": 12
                          },
                          "end": {
                            "row": 24,
                            "column": 82
                          },
                          "text": "northWest.computeNonEdgeForces(pointIndex, theta, negativeForce, sumQ)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 24,
                                "column": 12
                              },
                              "end": {
                                "row": 24,
                                "column": 21
                              },
                              "text": "northWest"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 24,
                                "column": 21
                              },
                              "end": {
                                "row": 24,
                                "column": 22
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 24,
                                "column": 22
                              },
                              "end": {
                                "row": 24,
                                "column": 42
                              },
                              "text": "computeNonEdgeForces"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 24,
                                "column": 42
                              },
                              "end": {
                                "row": 24,
                                "column": 82
                              },
                              "text": "(pointIndex, theta, negativeForce, sumQ)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 24,
                                    "column": 42
                                  },
                                  "end": {
                                    "row": 24,
                                    "column": 43
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 24,
                                    "column": 43
                                  },
                                  "end": {
                                    "row": 24,
                                    "column": 53
                                  },
                                  "text": "pointIndex"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 24,
                                    "column": 53
                                  },
                                  "end": {
                                    "row": 24,
                                    "column": 54
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 24,
                                    "column": 55
                                  },
                                  "end": {
                                    "row": 24,
                                    "column": 60
                                  },
                                  "text": "theta"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 24,
                                    "column": 60
                                  },
                                  "end": {
                                    "row": 24,
                                    "column": 61
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 24,
                                    "column": 62
                                  },
                                  "end": {
                                    "row": 24,
                                    "column": 75
                                  },
                                  "text": "negativeForce"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 24,
                                    "column": 75
                                  },
                                  "end": {
                                    "row": 24,
                                    "column": 76
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 24,
                                    "column": 77
                                  },
                                  "end": {
                                    "row": 24,
                                    "column": 81
                                  },
                                  "text": "sumQ"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 24,
                                    "column": 81
                                  },
                                  "end": {
                                    "row": 24,
                                    "column": 82
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start": {
                            "row": 24,
                            "column": 82
                          },
                          "end": {
                            "row": 24,
                            "column": 83
                          },
                          "text": ";"
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 25,
                        "column": 12
                      },
                      "end": {
                        "row": 25,
                        "column": 83
                      },
                      "text": "northEast.computeNonEdgeForces(pointIndex, theta, negativeForce, sumQ);",
                      "children": [
                        {
                          "type": "method_invocation",
                          "start": {
                            "row": 25,
                            "column": 12
                          },
                          "end": {
                            "row": 25,
                            "column": 82
                          },
                          "text": "northEast.computeNonEdgeForces(pointIndex, theta, negativeForce, sumQ)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 25,
                                "column": 12
                              },
                              "end": {
                                "row": 25,
                                "column": 21
                              },
                              "text": "northEast"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 25,
                                "column": 21
                              },
                              "end": {
                                "row": 25,
                                "column": 22
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 25,
                                "column": 22
                              },
                              "end": {
                                "row": 25,
                                "column": 42
                              },
                              "text": "computeNonEdgeForces"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 25,
                                "column": 42
                              },
                              "end": {
                                "row": 25,
                                "column": 82
                              },
                              "text": "(pointIndex, theta, negativeForce, sumQ)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 25,
                                    "column": 42
                                  },
                                  "end": {
                                    "row": 25,
                                    "column": 43
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 25,
                                    "column": 43
                                  },
                                  "end": {
                                    "row": 25,
                                    "column": 53
                                  },
                                  "text": "pointIndex"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 25,
                                    "column": 53
                                  },
                                  "end": {
                                    "row": 25,
                                    "column": 54
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 25,
                                    "column": 55
                                  },
                                  "end": {
                                    "row": 25,
                                    "column": 60
                                  },
                                  "text": "theta"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 25,
                                    "column": 60
                                  },
                                  "end": {
                                    "row": 25,
                                    "column": 61
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 25,
                                    "column": 62
                                  },
                                  "end": {
                                    "row": 25,
                                    "column": 75
                                  },
                                  "text": "negativeForce"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 25,
                                    "column": 75
                                  },
                                  "end": {
                                    "row": 25,
                                    "column": 76
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 25,
                                    "column": 77
                                  },
                                  "end": {
                                    "row": 25,
                                    "column": 81
                                  },
                                  "text": "sumQ"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 25,
                                    "column": 81
                                  },
                                  "end": {
                                    "row": 25,
                                    "column": 82
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start": {
                            "row": 25,
                            "column": 82
                          },
                          "end": {
                            "row": 25,
                            "column": 83
                          },
                          "text": ";"
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 26,
                        "column": 12
                      },
                      "end": {
                        "row": 26,
                        "column": 83
                      },
                      "text": "southWest.computeNonEdgeForces(pointIndex, theta, negativeForce, sumQ);",
                      "children": [
                        {
                          "type": "method_invocation",
                          "start": {
                            "row": 26,
                            "column": 12
                          },
                          "end": {
                            "row": 26,
                            "column": 82
                          },
                          "text": "southWest.computeNonEdgeForces(pointIndex, theta, negativeForce, sumQ)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 26,
                                "column": 12
                              },
                              "end": {
                                "row": 26,
                                "column": 21
                              },
                              "text": "southWest"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 26,
                                "column": 21
                              },
                              "end": {
                                "row": 26,
                                "column": 22
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 26,
                                "column": 22
                              },
                              "end": {
                                "row": 26,
                                "column": 42
                              },
                              "text": "computeNonEdgeForces"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 26,
                                "column": 42
                              },
                              "end": {
                                "row": 26,
                                "column": 82
                              },
                              "text": "(pointIndex, theta, negativeForce, sumQ)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 26,
                                    "column": 42
                                  },
                                  "end": {
                                    "row": 26,
                                    "column": 43
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 26,
                                    "column": 43
                                  },
                                  "end": {
                                    "row": 26,
                                    "column": 53
                                  },
                                  "text": "pointIndex"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 26,
                                    "column": 53
                                  },
                                  "end": {
                                    "row": 26,
                                    "column": 54
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 26,
                                    "column": 55
                                  },
                                  "end": {
                                    "row": 26,
                                    "column": 60
                                  },
                                  "text": "theta"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 26,
                                    "column": 60
                                  },
                                  "end": {
                                    "row": 26,
                                    "column": 61
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 26,
                                    "column": 62
                                  },
                                  "end": {
                                    "row": 26,
                                    "column": 75
                                  },
                                  "text": "negativeForce"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 26,
                                    "column": 75
                                  },
                                  "end": {
                                    "row": 26,
                                    "column": 76
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 26,
                                    "column": 77
                                  },
                                  "end": {
                                    "row": 26,
                                    "column": 81
                                  },
                                  "text": "sumQ"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 26,
                                    "column": 81
                                  },
                                  "end": {
                                    "row": 26,
                                    "column": 82
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start": {
                            "row": 26,
                            "column": 82
                          },
                          "end": {
                            "row": 26,
                            "column": 83
                          },
                          "text": ";"
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 27,
                        "column": 12
                      },
                      "end": {
                        "row": 27,
                        "column": 83
                      },
                      "text": "southEast.computeNonEdgeForces(pointIndex, theta, negativeForce, sumQ);",
                      "children": [
                        {
                          "type": "method_invocation",
                          "start": {
                            "row": 27,
                            "column": 12
                          },
                          "end": {
                            "row": 27,
                            "column": 82
                          },
                          "text": "southEast.computeNonEdgeForces(pointIndex, theta, negativeForce, sumQ)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 27,
                                "column": 12
                              },
                              "end": {
                                "row": 27,
                                "column": 21
                              },
                              "text": "southEast"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 27,
                                "column": 21
                              },
                              "end": {
                                "row": 27,
                                "column": 22
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 27,
                                "column": 22
                              },
                              "end": {
                                "row": 27,
                                "column": 42
                              },
                              "text": "computeNonEdgeForces"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 27,
                                "column": 42
                              },
                              "end": {
                                "row": 27,
                                "column": 82
                              },
                              "text": "(pointIndex, theta, negativeForce, sumQ)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 27,
                                    "column": 42
                                  },
                                  "end": {
                                    "row": 27,
                                    "column": 43
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 27,
                                    "column": 43
                                  },
                                  "end": {
                                    "row": 27,
                                    "column": 53
                                  },
                                  "text": "pointIndex"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 27,
                                    "column": 53
                                  },
                                  "end": {
                                    "row": 27,
                                    "column": 54
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 27,
                                    "column": 55
                                  },
                                  "end": {
                                    "row": 27,
                                    "column": 60
                                  },
                                  "text": "theta"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 27,
                                    "column": 60
                                  },
                                  "end": {
                                    "row": 27,
                                    "column": 61
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 27,
                                    "column": 62
                                  },
                                  "end": {
                                    "row": 27,
                                    "column": 75
                                  },
                                  "text": "negativeForce"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 27,
                                    "column": 75
                                  },
                                  "end": {
                                    "row": 27,
                                    "column": 76
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 27,
                                    "column": 77
                                  },
                                  "end": {
                                    "row": 27,
                                    "column": 81
                                  },
                                  "text": "sumQ"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 27,
                                    "column": 81
                                  },
                                  "end": {
                                    "row": 27,
                                    "column": 82
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start": {
                            "row": 27,
                            "column": 82
                          },
                          "end": {
                            "row": 27,
                            "column": 83
                          },
                          "text": ";"
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start": {
                        "row": 28,
                        "column": 8
                      },
                      "end": {
                        "row": 28,
                        "column": 9
                      },
                      "text": "}"
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start": {
                "row": 29,
                "column": 4
              },
              "end": {
                "row": 29,
                "column": 5
              },
              "text": "}"
            }
          ]
        }
      ]
    }
  ]
}