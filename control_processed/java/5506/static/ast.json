{
  "type": "program",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 57,
    "column": 2
  },
  "text": "private void updateIndex(\n\t\t\tlong key,\n\t\t\tint hashCode,\n\t\t\tlong address,\n\t\t\tint size,\n\t\t\tMemorySegment dataSegment,\n\t\t\tint currentPositionInSegment) throws IOException {\n\t\tassert (numKeys <= numBuckets / 2);\n\t\tint bucketId = hashCode & numBucketsMask;\n\n\t\t// each bucket occupied 16 bytes (long key + long pointer to data address)\n\t\tint bucketOffset = bucketId * SPARSE_BUCKET_ELEMENT_SIZE_IN_BYTES;\n\t\tMemorySegment segment = buckets[bucketOffset >>> segmentSizeBits];\n\t\tint segOffset = bucketOffset & segmentSizeMask;\n\t\tlong currAddress;\n\n\t\twhile (true) {\n\t\t\tcurrAddress = segment.getLong(segOffset + 8);\n\t\t\tif (segment.getLong(segOffset) != key && currAddress != INVALID_ADDRESS) {\n\t\t\t\t// hash conflicts, the bucket is occupied by another key\n\n\t\t\t\t// TODO test Conflict resolution:\n\t\t\t\t// now:    +1 +1 +1... cache friendly but more conflict, so we set factor to 0.5\n\t\t\t\t// other1: +1 +2 +3... less conflict, factor can be 0.75\n\t\t\t\t// other2: Secondary hashCode... less and less conflict, but need compute hash again\n\t\t\t\tbucketId = (bucketId + 1) & numBucketsMask;\n\t\t\t\tif (segOffset + SPARSE_BUCKET_ELEMENT_SIZE_IN_BYTES < segmentSize) {\n\t\t\t\t\t// if the new bucket still in current segment, we only need to update offset\n\t\t\t\t\t// within this segment\n\t\t\t\t\tsegOffset += SPARSE_BUCKET_ELEMENT_SIZE_IN_BYTES;\n\t\t\t\t} else {\n\t\t\t\t\t// otherwise, we should re-calculate segment and offset\n\t\t\t\t\tbucketOffset = bucketId * 16;\n\t\t\t\t\tsegment = buckets[bucketOffset >>> segmentSizeBits];\n\t\t\t\t\tsegOffset = bucketOffset & segmentSizeMask;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (currAddress == INVALID_ADDRESS) {\n\t\t\t// this is the first value for this key, put the address in array.\n\t\t\tsegment.putLong(segOffset, key);\n\t\t\tsegment.putLong(segOffset + 8, address);\n\t\t\tnumKeys += 1;\n\t\t\t// dataSegment may be null if we only have to rehash bucket area\n\t\t\tif (dataSegment != null) {\n\t\t\t\tdataSegment.putLong(currentPositionInSegment, toAddrAndLen(INVALID_ADDRESS, size));\n\t\t\t}\n\t\t\tif (numKeys * 2 > numBuckets) {\n\t\t\t\tresize();\n\t\t\t}\n\t\t} else {\n\t\t\t// there are some values for this key, put the address in the front of them.\n\t\t\tdataSegment.putLong(currentPositionInSegment, toAddrAndLen(currAddress, size));\n\t\t\tsegment.putLong(segOffset + 8, address);\n\t\t}\n\t}",
  "children": [
    {
      "type": "method_declaration",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 57,
        "column": 2
      },
      "text": "private void updateIndex(\n\t\t\tlong key,\n\t\t\tint hashCode,\n\t\t\tlong address,\n\t\t\tint size,\n\t\t\tMemorySegment dataSegment,\n\t\t\tint currentPositionInSegment) throws IOException {\n\t\tassert (numKeys <= numBuckets / 2);\n\t\tint bucketId = hashCode & numBucketsMask;\n\n\t\t// each bucket occupied 16 bytes (long key + long pointer to data address)\n\t\tint bucketOffset = bucketId * SPARSE_BUCKET_ELEMENT_SIZE_IN_BYTES;\n\t\tMemorySegment segment = buckets[bucketOffset >>> segmentSizeBits];\n\t\tint segOffset = bucketOffset & segmentSizeMask;\n\t\tlong currAddress;\n\n\t\twhile (true) {\n\t\t\tcurrAddress = segment.getLong(segOffset + 8);\n\t\t\tif (segment.getLong(segOffset) != key && currAddress != INVALID_ADDRESS) {\n\t\t\t\t// hash conflicts, the bucket is occupied by another key\n\n\t\t\t\t// TODO test Conflict resolution:\n\t\t\t\t// now:    +1 +1 +1... cache friendly but more conflict, so we set factor to 0.5\n\t\t\t\t// other1: +1 +2 +3... less conflict, factor can be 0.75\n\t\t\t\t// other2: Secondary hashCode... less and less conflict, but need compute hash again\n\t\t\t\tbucketId = (bucketId + 1) & numBucketsMask;\n\t\t\t\tif (segOffset + SPARSE_BUCKET_ELEMENT_SIZE_IN_BYTES < segmentSize) {\n\t\t\t\t\t// if the new bucket still in current segment, we only need to update offset\n\t\t\t\t\t// within this segment\n\t\t\t\t\tsegOffset += SPARSE_BUCKET_ELEMENT_SIZE_IN_BYTES;\n\t\t\t\t} else {\n\t\t\t\t\t// otherwise, we should re-calculate segment and offset\n\t\t\t\t\tbucketOffset = bucketId * 16;\n\t\t\t\t\tsegment = buckets[bucketOffset >>> segmentSizeBits];\n\t\t\t\t\tsegOffset = bucketOffset & segmentSizeMask;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (currAddress == INVALID_ADDRESS) {\n\t\t\t// this is the first value for this key, put the address in array.\n\t\t\tsegment.putLong(segOffset, key);\n\t\t\tsegment.putLong(segOffset + 8, address);\n\t\t\tnumKeys += 1;\n\t\t\t// dataSegment may be null if we only have to rehash bucket area\n\t\t\tif (dataSegment != null) {\n\t\t\t\tdataSegment.putLong(currentPositionInSegment, toAddrAndLen(INVALID_ADDRESS, size));\n\t\t\t}\n\t\t\tif (numKeys * 2 > numBuckets) {\n\t\t\t\tresize();\n\t\t\t}\n\t\t} else {\n\t\t\t// there are some values for this key, put the address in the front of them.\n\t\t\tdataSegment.putLong(currentPositionInSegment, toAddrAndLen(currAddress, size));\n\t\t\tsegment.putLong(segOffset + 8, address);\n\t\t}\n\t}",
      "children": [
        {
          "type": "modifiers",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 7
          },
          "text": "private",
          "children": [
            {
              "type": "private",
              "start": {
                "row": 0,
                "column": 0
              },
              "end": {
                "row": 0,
                "column": 7
              },
              "text": "private"
            }
          ]
        },
        {
          "type": "void_type",
          "start": {
            "row": 0,
            "column": 8
          },
          "end": {
            "row": 0,
            "column": 12
          },
          "text": "void"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 13
          },
          "end": {
            "row": 0,
            "column": 24
          },
          "text": "updateIndex"
        },
        {
          "type": "formal_parameters",
          "start": {
            "row": 0,
            "column": 24
          },
          "end": {
            "row": 6,
            "column": 32
          },
          "text": "(\n\t\t\tlong key,\n\t\t\tint hashCode,\n\t\t\tlong address,\n\t\t\tint size,\n\t\t\tMemorySegment dataSegment,\n\t\t\tint currentPositionInSegment)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 24
              },
              "end": {
                "row": 0,
                "column": 25
              },
              "text": "("
            },
            {
              "type": "formal_parameter",
              "start": {
                "row": 1,
                "column": 3
              },
              "end": {
                "row": 1,
                "column": 11
              },
              "text": "long key",
              "children": [
                {
                  "type": "integral_type",
                  "start": {
                    "row": 1,
                    "column": 3
                  },
                  "end": {
                    "row": 1,
                    "column": 7
                  },
                  "text": "long",
                  "children": [
                    {
                      "type": "long",
                      "start": {
                        "row": 1,
                        "column": 3
                      },
                      "end": {
                        "row": 1,
                        "column": 7
                      },
                      "text": "long"
                    }
                  ]
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 1,
                    "column": 8
                  },
                  "end": {
                    "row": 1,
                    "column": 11
                  },
                  "text": "key"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 1,
                "column": 11
              },
              "end": {
                "row": 1,
                "column": 12
              },
              "text": ","
            },
            {
              "type": "formal_parameter",
              "start": {
                "row": 2,
                "column": 3
              },
              "end": {
                "row": 2,
                "column": 15
              },
              "text": "int hashCode",
              "children": [
                {
                  "type": "integral_type",
                  "start": {
                    "row": 2,
                    "column": 3
                  },
                  "end": {
                    "row": 2,
                    "column": 6
                  },
                  "text": "int",
                  "children": [
                    {
                      "type": "int",
                      "start": {
                        "row": 2,
                        "column": 3
                      },
                      "end": {
                        "row": 2,
                        "column": 6
                      },
                      "text": "int"
                    }
                  ]
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 2,
                    "column": 7
                  },
                  "end": {
                    "row": 2,
                    "column": 15
                  },
                  "text": "hashCode"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 2,
                "column": 15
              },
              "end": {
                "row": 2,
                "column": 16
              },
              "text": ","
            },
            {
              "type": "formal_parameter",
              "start": {
                "row": 3,
                "column": 3
              },
              "end": {
                "row": 3,
                "column": 15
              },
              "text": "long address",
              "children": [
                {
                  "type": "integral_type",
                  "start": {
                    "row": 3,
                    "column": 3
                  },
                  "end": {
                    "row": 3,
                    "column": 7
                  },
                  "text": "long",
                  "children": [
                    {
                      "type": "long",
                      "start": {
                        "row": 3,
                        "column": 3
                      },
                      "end": {
                        "row": 3,
                        "column": 7
                      },
                      "text": "long"
                    }
                  ]
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 3,
                    "column": 8
                  },
                  "end": {
                    "row": 3,
                    "column": 15
                  },
                  "text": "address"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 3,
                "column": 15
              },
              "end": {
                "row": 3,
                "column": 16
              },
              "text": ","
            },
            {
              "type": "formal_parameter",
              "start": {
                "row": 4,
                "column": 3
              },
              "end": {
                "row": 4,
                "column": 11
              },
              "text": "int size",
              "children": [
                {
                  "type": "integral_type",
                  "start": {
                    "row": 4,
                    "column": 3
                  },
                  "end": {
                    "row": 4,
                    "column": 6
                  },
                  "text": "int",
                  "children": [
                    {
                      "type": "int",
                      "start": {
                        "row": 4,
                        "column": 3
                      },
                      "end": {
                        "row": 4,
                        "column": 6
                      },
                      "text": "int"
                    }
                  ]
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 4,
                    "column": 7
                  },
                  "end": {
                    "row": 4,
                    "column": 11
                  },
                  "text": "size"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 4,
                "column": 11
              },
              "end": {
                "row": 4,
                "column": 12
              },
              "text": ","
            },
            {
              "type": "formal_parameter",
              "start": {
                "row": 5,
                "column": 3
              },
              "end": {
                "row": 5,
                "column": 28
              },
              "text": "MemorySegment dataSegment",
              "children": [
                {
                  "type": "type_identifier",
                  "start": {
                    "row": 5,
                    "column": 3
                  },
                  "end": {
                    "row": 5,
                    "column": 16
                  },
                  "text": "MemorySegment"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 5,
                    "column": 17
                  },
                  "end": {
                    "row": 5,
                    "column": 28
                  },
                  "text": "dataSegment"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 5,
                "column": 28
              },
              "end": {
                "row": 5,
                "column": 29
              },
              "text": ","
            },
            {
              "type": "formal_parameter",
              "start": {
                "row": 6,
                "column": 3
              },
              "end": {
                "row": 6,
                "column": 31
              },
              "text": "int currentPositionInSegment",
              "children": [
                {
                  "type": "integral_type",
                  "start": {
                    "row": 6,
                    "column": 3
                  },
                  "end": {
                    "row": 6,
                    "column": 6
                  },
                  "text": "int",
                  "children": [
                    {
                      "type": "int",
                      "start": {
                        "row": 6,
                        "column": 3
                      },
                      "end": {
                        "row": 6,
                        "column": 6
                      },
                      "text": "int"
                    }
                  ]
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 6,
                    "column": 7
                  },
                  "end": {
                    "row": 6,
                    "column": 31
                  },
                  "text": "currentPositionInSegment"
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 6,
                "column": 31
              },
              "end": {
                "row": 6,
                "column": 32
              },
              "text": ")"
            }
          ]
        },
        {
          "type": "throws",
          "start": {
            "row": 6,
            "column": 33
          },
          "end": {
            "row": 6,
            "column": 51
          },
          "text": "throws IOException",
          "children": [
            {
              "type": "throws",
              "start": {
                "row": 6,
                "column": 33
              },
              "end": {
                "row": 6,
                "column": 39
              },
              "text": "throws"
            },
            {
              "type": "type_identifier",
              "start": {
                "row": 6,
                "column": 40
              },
              "end": {
                "row": 6,
                "column": 51
              },
              "text": "IOException"
            }
          ]
        },
        {
          "type": "block",
          "start": {
            "row": 6,
            "column": 52
          },
          "end": {
            "row": 57,
            "column": 2
          },
          "text": "{\n\t\tassert (numKeys <= numBuckets / 2);\n\t\tint bucketId = hashCode & numBucketsMask;\n\n\t\t// each bucket occupied 16 bytes (long key + long pointer to data address)\n\t\tint bucketOffset = bucketId * SPARSE_BUCKET_ELEMENT_SIZE_IN_BYTES;\n\t\tMemorySegment segment = buckets[bucketOffset >>> segmentSizeBits];\n\t\tint segOffset = bucketOffset & segmentSizeMask;\n\t\tlong currAddress;\n\n\t\twhile (true) {\n\t\t\tcurrAddress = segment.getLong(segOffset + 8);\n\t\t\tif (segment.getLong(segOffset) != key && currAddress != INVALID_ADDRESS) {\n\t\t\t\t// hash conflicts, the bucket is occupied by another key\n\n\t\t\t\t// TODO test Conflict resolution:\n\t\t\t\t// now:    +1 +1 +1... cache friendly but more conflict, so we set factor to 0.5\n\t\t\t\t// other1: +1 +2 +3... less conflict, factor can be 0.75\n\t\t\t\t// other2: Secondary hashCode... less and less conflict, but need compute hash again\n\t\t\t\tbucketId = (bucketId + 1) & numBucketsMask;\n\t\t\t\tif (segOffset + SPARSE_BUCKET_ELEMENT_SIZE_IN_BYTES < segmentSize) {\n\t\t\t\t\t// if the new bucket still in current segment, we only need to update offset\n\t\t\t\t\t// within this segment\n\t\t\t\t\tsegOffset += SPARSE_BUCKET_ELEMENT_SIZE_IN_BYTES;\n\t\t\t\t} else {\n\t\t\t\t\t// otherwise, we should re-calculate segment and offset\n\t\t\t\t\tbucketOffset = bucketId * 16;\n\t\t\t\t\tsegment = buckets[bucketOffset >>> segmentSizeBits];\n\t\t\t\t\tsegOffset = bucketOffset & segmentSizeMask;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (currAddress == INVALID_ADDRESS) {\n\t\t\t// this is the first value for this key, put the address in array.\n\t\t\tsegment.putLong(segOffset, key);\n\t\t\tsegment.putLong(segOffset + 8, address);\n\t\t\tnumKeys += 1;\n\t\t\t// dataSegment may be null if we only have to rehash bucket area\n\t\t\tif (dataSegment != null) {\n\t\t\t\tdataSegment.putLong(currentPositionInSegment, toAddrAndLen(INVALID_ADDRESS, size));\n\t\t\t}\n\t\t\tif (numKeys * 2 > numBuckets) {\n\t\t\t\tresize();\n\t\t\t}\n\t\t} else {\n\t\t\t// there are some values for this key, put the address in the front of them.\n\t\t\tdataSegment.putLong(currentPositionInSegment, toAddrAndLen(currAddress, size));\n\t\t\tsegment.putLong(segOffset + 8, address);\n\t\t}\n\t}",
          "children": [
            {
              "type": "{",
              "start": {
                "row": 6,
                "column": 52
              },
              "end": {
                "row": 6,
                "column": 53
              },
              "text": "{"
            },
            {
              "type": "assert_statement",
              "start": {
                "row": 7,
                "column": 2
              },
              "end": {
                "row": 7,
                "column": 37
              },
              "text": "assert (numKeys <= numBuckets / 2);",
              "children": [
                {
                  "type": "assert",
                  "start": {
                    "row": 7,
                    "column": 2
                  },
                  "end": {
                    "row": 7,
                    "column": 8
                  },
                  "text": "assert"
                },
                {
                  "type": "parenthesized_expression",
                  "start": {
                    "row": 7,
                    "column": 9
                  },
                  "end": {
                    "row": 7,
                    "column": 36
                  },
                  "text": "(numKeys <= numBuckets / 2)",
                  "children": [
                    {
                      "type": "(",
                      "start": {
                        "row": 7,
                        "column": 9
                      },
                      "end": {
                        "row": 7,
                        "column": 10
                      },
                      "text": "("
                    },
                    {
                      "type": "binary_expression",
                      "start": {
                        "row": 7,
                        "column": 10
                      },
                      "end": {
                        "row": 7,
                        "column": 35
                      },
                      "text": "numKeys <= numBuckets / 2",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 7,
                            "column": 10
                          },
                          "end": {
                            "row": 7,
                            "column": 17
                          },
                          "text": "numKeys"
                        },
                        {
                          "type": "<=",
                          "start": {
                            "row": 7,
                            "column": 18
                          },
                          "end": {
                            "row": 7,
                            "column": 20
                          },
                          "text": "<="
                        },
                        {
                          "type": "binary_expression",
                          "start": {
                            "row": 7,
                            "column": 21
                          },
                          "end": {
                            "row": 7,
                            "column": 35
                          },
                          "text": "numBuckets / 2",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 7,
                                "column": 21
                              },
                              "end": {
                                "row": 7,
                                "column": 31
                              },
                              "text": "numBuckets"
                            },
                            {
                              "type": "/",
                              "start": {
                                "row": 7,
                                "column": 32
                              },
                              "end": {
                                "row": 7,
                                "column": 33
                              },
                              "text": "/"
                            },
                            {
                              "type": "decimal_integer_literal",
                              "start": {
                                "row": 7,
                                "column": 34
                              },
                              "end": {
                                "row": 7,
                                "column": 35
                              },
                              "text": "2"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start": {
                        "row": 7,
                        "column": 35
                      },
                      "end": {
                        "row": 7,
                        "column": 36
                      },
                      "text": ")"
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 7,
                    "column": 36
                  },
                  "end": {
                    "row": 7,
                    "column": 37
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "local_variable_declaration",
              "start": {
                "row": 8,
                "column": 2
              },
              "end": {
                "row": 8,
                "column": 43
              },
              "text": "int bucketId = hashCode & numBucketsMask;",
              "children": [
                {
                  "type": "integral_type",
                  "start": {
                    "row": 8,
                    "column": 2
                  },
                  "end": {
                    "row": 8,
                    "column": 5
                  },
                  "text": "int",
                  "children": [
                    {
                      "type": "int",
                      "start": {
                        "row": 8,
                        "column": 2
                      },
                      "end": {
                        "row": 8,
                        "column": 5
                      },
                      "text": "int"
                    }
                  ]
                },
                {
                  "type": "variable_declarator",
                  "start": {
                    "row": 8,
                    "column": 6
                  },
                  "end": {
                    "row": 8,
                    "column": 42
                  },
                  "text": "bucketId = hashCode & numBucketsMask",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 8,
                        "column": 6
                      },
                      "end": {
                        "row": 8,
                        "column": 14
                      },
                      "text": "bucketId"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 8,
                        "column": 15
                      },
                      "end": {
                        "row": 8,
                        "column": 16
                      },
                      "text": "="
                    },
                    {
                      "type": "binary_expression",
                      "start": {
                        "row": 8,
                        "column": 17
                      },
                      "end": {
                        "row": 8,
                        "column": 42
                      },
                      "text": "hashCode & numBucketsMask",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 8,
                            "column": 17
                          },
                          "end": {
                            "row": 8,
                            "column": 25
                          },
                          "text": "hashCode"
                        },
                        {
                          "type": "&",
                          "start": {
                            "row": 8,
                            "column": 26
                          },
                          "end": {
                            "row": 8,
                            "column": 27
                          },
                          "text": "&"
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 8,
                            "column": 28
                          },
                          "end": {
                            "row": 8,
                            "column": 42
                          },
                          "text": "numBucketsMask"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 8,
                    "column": 42
                  },
                  "end": {
                    "row": 8,
                    "column": 43
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "line_comment",
              "start": {
                "row": 10,
                "column": 2
              },
              "end": {
                "row": 10,
                "column": 76
              },
              "text": "// each bucket occupied 16 bytes (long key + long pointer to data address)"
            },
            {
              "type": "local_variable_declaration",
              "start": {
                "row": 11,
                "column": 2
              },
              "end": {
                "row": 11,
                "column": 68
              },
              "text": "int bucketOffset = bucketId * SPARSE_BUCKET_ELEMENT_SIZE_IN_BYTES;",
              "children": [
                {
                  "type": "integral_type",
                  "start": {
                    "row": 11,
                    "column": 2
                  },
                  "end": {
                    "row": 11,
                    "column": 5
                  },
                  "text": "int",
                  "children": [
                    {
                      "type": "int",
                      "start": {
                        "row": 11,
                        "column": 2
                      },
                      "end": {
                        "row": 11,
                        "column": 5
                      },
                      "text": "int"
                    }
                  ]
                },
                {
                  "type": "variable_declarator",
                  "start": {
                    "row": 11,
                    "column": 6
                  },
                  "end": {
                    "row": 11,
                    "column": 67
                  },
                  "text": "bucketOffset = bucketId * SPARSE_BUCKET_ELEMENT_SIZE_IN_BYTES",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 11,
                        "column": 6
                      },
                      "end": {
                        "row": 11,
                        "column": 18
                      },
                      "text": "bucketOffset"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 11,
                        "column": 19
                      },
                      "end": {
                        "row": 11,
                        "column": 20
                      },
                      "text": "="
                    },
                    {
                      "type": "binary_expression",
                      "start": {
                        "row": 11,
                        "column": 21
                      },
                      "end": {
                        "row": 11,
                        "column": 67
                      },
                      "text": "bucketId * SPARSE_BUCKET_ELEMENT_SIZE_IN_BYTES",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 11,
                            "column": 21
                          },
                          "end": {
                            "row": 11,
                            "column": 29
                          },
                          "text": "bucketId"
                        },
                        {
                          "type": "*",
                          "start": {
                            "row": 11,
                            "column": 30
                          },
                          "end": {
                            "row": 11,
                            "column": 31
                          },
                          "text": "*"
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 11,
                            "column": 32
                          },
                          "end": {
                            "row": 11,
                            "column": 67
                          },
                          "text": "SPARSE_BUCKET_ELEMENT_SIZE_IN_BYTES"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 11,
                    "column": 67
                  },
                  "end": {
                    "row": 11,
                    "column": 68
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "local_variable_declaration",
              "start": {
                "row": 12,
                "column": 2
              },
              "end": {
                "row": 12,
                "column": 68
              },
              "text": "MemorySegment segment = buckets[bucketOffset >>> segmentSizeBits];",
              "children": [
                {
                  "type": "type_identifier",
                  "start": {
                    "row": 12,
                    "column": 2
                  },
                  "end": {
                    "row": 12,
                    "column": 15
                  },
                  "text": "MemorySegment"
                },
                {
                  "type": "variable_declarator",
                  "start": {
                    "row": 12,
                    "column": 16
                  },
                  "end": {
                    "row": 12,
                    "column": 67
                  },
                  "text": "segment = buckets[bucketOffset >>> segmentSizeBits]",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 12,
                        "column": 16
                      },
                      "end": {
                        "row": 12,
                        "column": 23
                      },
                      "text": "segment"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 12,
                        "column": 24
                      },
                      "end": {
                        "row": 12,
                        "column": 25
                      },
                      "text": "="
                    },
                    {
                      "type": "array_access",
                      "start": {
                        "row": 12,
                        "column": 26
                      },
                      "end": {
                        "row": 12,
                        "column": 67
                      },
                      "text": "buckets[bucketOffset >>> segmentSizeBits]",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 12,
                            "column": 26
                          },
                          "end": {
                            "row": 12,
                            "column": 33
                          },
                          "text": "buckets"
                        },
                        {
                          "type": "[",
                          "start": {
                            "row": 12,
                            "column": 33
                          },
                          "end": {
                            "row": 12,
                            "column": 34
                          },
                          "text": "["
                        },
                        {
                          "type": "binary_expression",
                          "start": {
                            "row": 12,
                            "column": 34
                          },
                          "end": {
                            "row": 12,
                            "column": 66
                          },
                          "text": "bucketOffset >>> segmentSizeBits",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 12,
                                "column": 34
                              },
                              "end": {
                                "row": 12,
                                "column": 46
                              },
                              "text": "bucketOffset"
                            },
                            {
                              "type": ">>>",
                              "start": {
                                "row": 12,
                                "column": 47
                              },
                              "end": {
                                "row": 12,
                                "column": 50
                              },
                              "text": ">>>"
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 12,
                                "column": 51
                              },
                              "end": {
                                "row": 12,
                                "column": 66
                              },
                              "text": "segmentSizeBits"
                            }
                          ]
                        },
                        {
                          "type": "]",
                          "start": {
                            "row": 12,
                            "column": 66
                          },
                          "end": {
                            "row": 12,
                            "column": 67
                          },
                          "text": "]"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 12,
                    "column": 67
                  },
                  "end": {
                    "row": 12,
                    "column": 68
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "local_variable_declaration",
              "start": {
                "row": 13,
                "column": 2
              },
              "end": {
                "row": 13,
                "column": 49
              },
              "text": "int segOffset = bucketOffset & segmentSizeMask;",
              "children": [
                {
                  "type": "integral_type",
                  "start": {
                    "row": 13,
                    "column": 2
                  },
                  "end": {
                    "row": 13,
                    "column": 5
                  },
                  "text": "int",
                  "children": [
                    {
                      "type": "int",
                      "start": {
                        "row": 13,
                        "column": 2
                      },
                      "end": {
                        "row": 13,
                        "column": 5
                      },
                      "text": "int"
                    }
                  ]
                },
                {
                  "type": "variable_declarator",
                  "start": {
                    "row": 13,
                    "column": 6
                  },
                  "end": {
                    "row": 13,
                    "column": 48
                  },
                  "text": "segOffset = bucketOffset & segmentSizeMask",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 13,
                        "column": 6
                      },
                      "end": {
                        "row": 13,
                        "column": 15
                      },
                      "text": "segOffset"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 13,
                        "column": 16
                      },
                      "end": {
                        "row": 13,
                        "column": 17
                      },
                      "text": "="
                    },
                    {
                      "type": "binary_expression",
                      "start": {
                        "row": 13,
                        "column": 18
                      },
                      "end": {
                        "row": 13,
                        "column": 48
                      },
                      "text": "bucketOffset & segmentSizeMask",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 13,
                            "column": 18
                          },
                          "end": {
                            "row": 13,
                            "column": 30
                          },
                          "text": "bucketOffset"
                        },
                        {
                          "type": "&",
                          "start": {
                            "row": 13,
                            "column": 31
                          },
                          "end": {
                            "row": 13,
                            "column": 32
                          },
                          "text": "&"
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 13,
                            "column": 33
                          },
                          "end": {
                            "row": 13,
                            "column": 48
                          },
                          "text": "segmentSizeMask"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 13,
                    "column": 48
                  },
                  "end": {
                    "row": 13,
                    "column": 49
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "local_variable_declaration",
              "start": {
                "row": 14,
                "column": 2
              },
              "end": {
                "row": 14,
                "column": 19
              },
              "text": "long currAddress;",
              "children": [
                {
                  "type": "integral_type",
                  "start": {
                    "row": 14,
                    "column": 2
                  },
                  "end": {
                    "row": 14,
                    "column": 6
                  },
                  "text": "long",
                  "children": [
                    {
                      "type": "long",
                      "start": {
                        "row": 14,
                        "column": 2
                      },
                      "end": {
                        "row": 14,
                        "column": 6
                      },
                      "text": "long"
                    }
                  ]
                },
                {
                  "type": "variable_declarator",
                  "start": {
                    "row": 14,
                    "column": 7
                  },
                  "end": {
                    "row": 14,
                    "column": 18
                  },
                  "text": "currAddress",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 14,
                        "column": 7
                      },
                      "end": {
                        "row": 14,
                        "column": 18
                      },
                      "text": "currAddress"
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 14,
                    "column": 18
                  },
                  "end": {
                    "row": 14,
                    "column": 19
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "while_statement",
              "start": {
                "row": 16,
                "column": 2
              },
              "end": {
                "row": 39,
                "column": 3
              },
              "text": "while (true) {\n\t\t\tcurrAddress = segment.getLong(segOffset + 8);\n\t\t\tif (segment.getLong(segOffset) != key && currAddress != INVALID_ADDRESS) {\n\t\t\t\t// hash conflicts, the bucket is occupied by another key\n\n\t\t\t\t// TODO test Conflict resolution:\n\t\t\t\t// now:    +1 +1 +1... cache friendly but more conflict, so we set factor to 0.5\n\t\t\t\t// other1: +1 +2 +3... less conflict, factor can be 0.75\n\t\t\t\t// other2: Secondary hashCode... less and less conflict, but need compute hash again\n\t\t\t\tbucketId = (bucketId + 1) & numBucketsMask;\n\t\t\t\tif (segOffset + SPARSE_BUCKET_ELEMENT_SIZE_IN_BYTES < segmentSize) {\n\t\t\t\t\t// if the new bucket still in current segment, we only need to update offset\n\t\t\t\t\t// within this segment\n\t\t\t\t\tsegOffset += SPARSE_BUCKET_ELEMENT_SIZE_IN_BYTES;\n\t\t\t\t} else {\n\t\t\t\t\t// otherwise, we should re-calculate segment and offset\n\t\t\t\t\tbucketOffset = bucketId * 16;\n\t\t\t\t\tsegment = buckets[bucketOffset >>> segmentSizeBits];\n\t\t\t\t\tsegOffset = bucketOffset & segmentSizeMask;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}",
              "children": [
                {
                  "type": "while",
                  "start": {
                    "row": 16,
                    "column": 2
                  },
                  "end": {
                    "row": 16,
                    "column": 7
                  },
                  "text": "while"
                },
                {
                  "type": "condition",
                  "start": {
                    "row": 16,
                    "column": 8
                  },
                  "end": {
                    "row": 16,
                    "column": 14
                  },
                  "text": "(true)",
                  "children": [
                    {
                      "type": "(",
                      "start": {
                        "row": 16,
                        "column": 8
                      },
                      "end": {
                        "row": 16,
                        "column": 9
                      },
                      "text": "("
                    },
                    {
                      "type": "true",
                      "start": {
                        "row": 16,
                        "column": 9
                      },
                      "end": {
                        "row": 16,
                        "column": 13
                      },
                      "text": "true"
                    },
                    {
                      "type": ")",
                      "start": {
                        "row": 16,
                        "column": 13
                      },
                      "end": {
                        "row": 16,
                        "column": 14
                      },
                      "text": ")"
                    }
                  ]
                },
                {
                  "type": "block",
                  "start": {
                    "row": 16,
                    "column": 15
                  },
                  "end": {
                    "row": 39,
                    "column": 3
                  },
                  "text": "{\n\t\t\tcurrAddress = segment.getLong(segOffset + 8);\n\t\t\tif (segment.getLong(segOffset) != key && currAddress != INVALID_ADDRESS) {\n\t\t\t\t// hash conflicts, the bucket is occupied by another key\n\n\t\t\t\t// TODO test Conflict resolution:\n\t\t\t\t// now:    +1 +1 +1... cache friendly but more conflict, so we set factor to 0.5\n\t\t\t\t// other1: +1 +2 +3... less conflict, factor can be 0.75\n\t\t\t\t// other2: Secondary hashCode... less and less conflict, but need compute hash again\n\t\t\t\tbucketId = (bucketId + 1) & numBucketsMask;\n\t\t\t\tif (segOffset + SPARSE_BUCKET_ELEMENT_SIZE_IN_BYTES < segmentSize) {\n\t\t\t\t\t// if the new bucket still in current segment, we only need to update offset\n\t\t\t\t\t// within this segment\n\t\t\t\t\tsegOffset += SPARSE_BUCKET_ELEMENT_SIZE_IN_BYTES;\n\t\t\t\t} else {\n\t\t\t\t\t// otherwise, we should re-calculate segment and offset\n\t\t\t\t\tbucketOffset = bucketId * 16;\n\t\t\t\t\tsegment = buckets[bucketOffset >>> segmentSizeBits];\n\t\t\t\t\tsegOffset = bucketOffset & segmentSizeMask;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}",
                  "children": [
                    {
                      "type": "{",
                      "start": {
                        "row": 16,
                        "column": 15
                      },
                      "end": {
                        "row": 16,
                        "column": 16
                      },
                      "text": "{"
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 17,
                        "column": 3
                      },
                      "end": {
                        "row": 17,
                        "column": 48
                      },
                      "text": "currAddress = segment.getLong(segOffset + 8);",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start": {
                            "row": 17,
                            "column": 3
                          },
                          "end": {
                            "row": 17,
                            "column": 47
                          },
                          "text": "currAddress = segment.getLong(segOffset + 8)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 17,
                                "column": 3
                              },
                              "end": {
                                "row": 17,
                                "column": 14
                              },
                              "text": "currAddress"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 17,
                                "column": 15
                              },
                              "end": {
                                "row": 17,
                                "column": 16
                              },
                              "text": "="
                            },
                            {
                              "type": "method_invocation",
                              "start": {
                                "row": 17,
                                "column": 17
                              },
                              "end": {
                                "row": 17,
                                "column": 47
                              },
                              "text": "segment.getLong(segOffset + 8)",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 17,
                                    "column": 17
                                  },
                                  "end": {
                                    "row": 17,
                                    "column": 24
                                  },
                                  "text": "segment"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 17,
                                    "column": 24
                                  },
                                  "end": {
                                    "row": 17,
                                    "column": 25
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 17,
                                    "column": 25
                                  },
                                  "end": {
                                    "row": 17,
                                    "column": 32
                                  },
                                  "text": "getLong"
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 17,
                                    "column": 32
                                  },
                                  "end": {
                                    "row": 17,
                                    "column": 47
                                  },
                                  "text": "(segOffset + 8)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 17,
                                        "column": 32
                                      },
                                      "end": {
                                        "row": 17,
                                        "column": 33
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start": {
                                        "row": 17,
                                        "column": 33
                                      },
                                      "end": {
                                        "row": 17,
                                        "column": 46
                                      },
                                      "text": "segOffset + 8",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 17,
                                            "column": 33
                                          },
                                          "end": {
                                            "row": 17,
                                            "column": 42
                                          },
                                          "text": "segOffset"
                                        },
                                        {
                                          "type": "+",
                                          "start": {
                                            "row": 17,
                                            "column": 43
                                          },
                                          "end": {
                                            "row": 17,
                                            "column": 44
                                          },
                                          "text": "+"
                                        },
                                        {
                                          "type": "decimal_integer_literal",
                                          "start": {
                                            "row": 17,
                                            "column": 45
                                          },
                                          "end": {
                                            "row": 17,
                                            "column": 46
                                          },
                                          "text": "8"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 17,
                                        "column": 46
                                      },
                                      "end": {
                                        "row": 17,
                                        "column": 47
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start": {
                            "row": 17,
                            "column": 47
                          },
                          "end": {
                            "row": 17,
                            "column": 48
                          },
                          "text": ";"
                        }
                      ]
                    },
                    {
                      "type": "if_statement",
                      "start": {
                        "row": 18,
                        "column": 3
                      },
                      "end": {
                        "row": 38,
                        "column": 4
                      },
                      "text": "if (segment.getLong(segOffset) != key && currAddress != INVALID_ADDRESS) {\n\t\t\t\t// hash conflicts, the bucket is occupied by another key\n\n\t\t\t\t// TODO test Conflict resolution:\n\t\t\t\t// now:    +1 +1 +1... cache friendly but more conflict, so we set factor to 0.5\n\t\t\t\t// other1: +1 +2 +3... less conflict, factor can be 0.75\n\t\t\t\t// other2: Secondary hashCode... less and less conflict, but need compute hash again\n\t\t\t\tbucketId = (bucketId + 1) & numBucketsMask;\n\t\t\t\tif (segOffset + SPARSE_BUCKET_ELEMENT_SIZE_IN_BYTES < segmentSize) {\n\t\t\t\t\t// if the new bucket still in current segment, we only need to update offset\n\t\t\t\t\t// within this segment\n\t\t\t\t\tsegOffset += SPARSE_BUCKET_ELEMENT_SIZE_IN_BYTES;\n\t\t\t\t} else {\n\t\t\t\t\t// otherwise, we should re-calculate segment and offset\n\t\t\t\t\tbucketOffset = bucketId * 16;\n\t\t\t\t\tsegment = buckets[bucketOffset >>> segmentSizeBits];\n\t\t\t\t\tsegOffset = bucketOffset & segmentSizeMask;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}",
                      "children": [
                        {
                          "type": "if",
                          "start": {
                            "row": 18,
                            "column": 3
                          },
                          "end": {
                            "row": 18,
                            "column": 5
                          },
                          "text": "if"
                        },
                        {
                          "type": "condition",
                          "start": {
                            "row": 18,
                            "column": 6
                          },
                          "end": {
                            "row": 18,
                            "column": 75
                          },
                          "text": "(segment.getLong(segOffset) != key && currAddress != INVALID_ADDRESS)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 18,
                                "column": 6
                              },
                              "end": {
                                "row": 18,
                                "column": 7
                              },
                              "text": "("
                            },
                            {
                              "type": "binary_expression",
                              "start": {
                                "row": 18,
                                "column": 7
                              },
                              "end": {
                                "row": 18,
                                "column": 74
                              },
                              "text": "segment.getLong(segOffset) != key && currAddress != INVALID_ADDRESS",
                              "children": [
                                {
                                  "type": "binary_expression",
                                  "start": {
                                    "row": 18,
                                    "column": 7
                                  },
                                  "end": {
                                    "row": 18,
                                    "column": 40
                                  },
                                  "text": "segment.getLong(segOffset) != key",
                                  "children": [
                                    {
                                      "type": "method_invocation",
                                      "start": {
                                        "row": 18,
                                        "column": 7
                                      },
                                      "end": {
                                        "row": 18,
                                        "column": 33
                                      },
                                      "text": "segment.getLong(segOffset)",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 18,
                                            "column": 7
                                          },
                                          "end": {
                                            "row": 18,
                                            "column": 14
                                          },
                                          "text": "segment"
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 18,
                                            "column": 14
                                          },
                                          "end": {
                                            "row": 18,
                                            "column": 15
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 18,
                                            "column": 15
                                          },
                                          "end": {
                                            "row": 18,
                                            "column": 22
                                          },
                                          "text": "getLong"
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 18,
                                            "column": 22
                                          },
                                          "end": {
                                            "row": 18,
                                            "column": 33
                                          },
                                          "text": "(segOffset)",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 18,
                                                "column": 22
                                              },
                                              "end": {
                                                "row": 18,
                                                "column": 23
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 18,
                                                "column": 23
                                              },
                                              "end": {
                                                "row": 18,
                                                "column": 32
                                              },
                                              "text": "segOffset"
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 18,
                                                "column": 32
                                              },
                                              "end": {
                                                "row": 18,
                                                "column": 33
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "!=",
                                      "start": {
                                        "row": 18,
                                        "column": 34
                                      },
                                      "end": {
                                        "row": 18,
                                        "column": 36
                                      },
                                      "text": "!="
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 18,
                                        "column": 37
                                      },
                                      "end": {
                                        "row": 18,
                                        "column": 40
                                      },
                                      "text": "key"
                                    }
                                  ]
                                },
                                {
                                  "type": "&&",
                                  "start": {
                                    "row": 18,
                                    "column": 41
                                  },
                                  "end": {
                                    "row": 18,
                                    "column": 43
                                  },
                                  "text": "&&"
                                },
                                {
                                  "type": "binary_expression",
                                  "start": {
                                    "row": 18,
                                    "column": 44
                                  },
                                  "end": {
                                    "row": 18,
                                    "column": 74
                                  },
                                  "text": "currAddress != INVALID_ADDRESS",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 18,
                                        "column": 44
                                      },
                                      "end": {
                                        "row": 18,
                                        "column": 55
                                      },
                                      "text": "currAddress"
                                    },
                                    {
                                      "type": "!=",
                                      "start": {
                                        "row": 18,
                                        "column": 56
                                      },
                                      "end": {
                                        "row": 18,
                                        "column": 58
                                      },
                                      "text": "!="
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 18,
                                        "column": 59
                                      },
                                      "end": {
                                        "row": 18,
                                        "column": 74
                                      },
                                      "text": "INVALID_ADDRESS"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 18,
                                "column": 74
                              },
                              "end": {
                                "row": 18,
                                "column": 75
                              },
                              "text": ")"
                            }
                          ]
                        },
                        {
                          "type": "block",
                          "start": {
                            "row": 18,
                            "column": 76
                          },
                          "end": {
                            "row": 36,
                            "column": 4
                          },
                          "text": "{\n\t\t\t\t// hash conflicts, the bucket is occupied by another key\n\n\t\t\t\t// TODO test Conflict resolution:\n\t\t\t\t// now:    +1 +1 +1... cache friendly but more conflict, so we set factor to 0.5\n\t\t\t\t// other1: +1 +2 +3... less conflict, factor can be 0.75\n\t\t\t\t// other2: Secondary hashCode... less and less conflict, but need compute hash again\n\t\t\t\tbucketId = (bucketId + 1) & numBucketsMask;\n\t\t\t\tif (segOffset + SPARSE_BUCKET_ELEMENT_SIZE_IN_BYTES < segmentSize) {\n\t\t\t\t\t// if the new bucket still in current segment, we only need to update offset\n\t\t\t\t\t// within this segment\n\t\t\t\t\tsegOffset += SPARSE_BUCKET_ELEMENT_SIZE_IN_BYTES;\n\t\t\t\t} else {\n\t\t\t\t\t// otherwise, we should re-calculate segment and offset\n\t\t\t\t\tbucketOffset = bucketId * 16;\n\t\t\t\t\tsegment = buckets[bucketOffset >>> segmentSizeBits];\n\t\t\t\t\tsegOffset = bucketOffset & segmentSizeMask;\n\t\t\t\t}\n\t\t\t}",
                          "children": [
                            {
                              "type": "{",
                              "start": {
                                "row": 18,
                                "column": 76
                              },
                              "end": {
                                "row": 18,
                                "column": 77
                              },
                              "text": "{"
                            },
                            {
                              "type": "line_comment",
                              "start": {
                                "row": 19,
                                "column": 4
                              },
                              "end": {
                                "row": 19,
                                "column": 60
                              },
                              "text": "// hash conflicts, the bucket is occupied by another key"
                            },
                            {
                              "type": "line_comment",
                              "start": {
                                "row": 21,
                                "column": 4
                              },
                              "end": {
                                "row": 21,
                                "column": 37
                              },
                              "text": "// TODO test Conflict resolution:"
                            },
                            {
                              "type": "line_comment",
                              "start": {
                                "row": 22,
                                "column": 4
                              },
                              "end": {
                                "row": 22,
                                "column": 84
                              },
                              "text": "// now:    +1 +1 +1... cache friendly but more conflict, so we set factor to 0.5"
                            },
                            {
                              "type": "line_comment",
                              "start": {
                                "row": 23,
                                "column": 4
                              },
                              "end": {
                                "row": 23,
                                "column": 60
                              },
                              "text": "// other1: +1 +2 +3... less conflict, factor can be 0.75"
                            },
                            {
                              "type": "line_comment",
                              "start": {
                                "row": 24,
                                "column": 4
                              },
                              "end": {
                                "row": 24,
                                "column": 88
                              },
                              "text": "// other2: Secondary hashCode... less and less conflict, but need compute hash again"
                            },
                            {
                              "type": "expression_statement",
                              "start": {
                                "row": 25,
                                "column": 4
                              },
                              "end": {
                                "row": 25,
                                "column": 47
                              },
                              "text": "bucketId = (bucketId + 1) & numBucketsMask;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start": {
                                    "row": 25,
                                    "column": 4
                                  },
                                  "end": {
                                    "row": 25,
                                    "column": 46
                                  },
                                  "text": "bucketId = (bucketId + 1) & numBucketsMask",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 25,
                                        "column": 4
                                      },
                                      "end": {
                                        "row": 25,
                                        "column": 12
                                      },
                                      "text": "bucketId"
                                    },
                                    {
                                      "type": "=",
                                      "start": {
                                        "row": 25,
                                        "column": 13
                                      },
                                      "end": {
                                        "row": 25,
                                        "column": 14
                                      },
                                      "text": "="
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start": {
                                        "row": 25,
                                        "column": 15
                                      },
                                      "end": {
                                        "row": 25,
                                        "column": 46
                                      },
                                      "text": "(bucketId + 1) & numBucketsMask",
                                      "children": [
                                        {
                                          "type": "parenthesized_expression",
                                          "start": {
                                            "row": 25,
                                            "column": 15
                                          },
                                          "end": {
                                            "row": 25,
                                            "column": 29
                                          },
                                          "text": "(bucketId + 1)",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 25,
                                                "column": 15
                                              },
                                              "end": {
                                                "row": 25,
                                                "column": 16
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start": {
                                                "row": 25,
                                                "column": 16
                                              },
                                              "end": {
                                                "row": 25,
                                                "column": 28
                                              },
                                              "text": "bucketId + 1",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 25,
                                                    "column": 16
                                                  },
                                                  "end": {
                                                    "row": 25,
                                                    "column": 24
                                                  },
                                                  "text": "bucketId"
                                                },
                                                {
                                                  "type": "+",
                                                  "start": {
                                                    "row": 25,
                                                    "column": 25
                                                  },
                                                  "end": {
                                                    "row": 25,
                                                    "column": 26
                                                  },
                                                  "text": "+"
                                                },
                                                {
                                                  "type": "decimal_integer_literal",
                                                  "start": {
                                                    "row": 25,
                                                    "column": 27
                                                  },
                                                  "end": {
                                                    "row": 25,
                                                    "column": 28
                                                  },
                                                  "text": "1"
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 25,
                                                "column": 28
                                              },
                                              "end": {
                                                "row": 25,
                                                "column": 29
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "&",
                                          "start": {
                                            "row": 25,
                                            "column": 30
                                          },
                                          "end": {
                                            "row": 25,
                                            "column": 31
                                          },
                                          "text": "&"
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 25,
                                            "column": 32
                                          },
                                          "end": {
                                            "row": 25,
                                            "column": 46
                                          },
                                          "text": "numBucketsMask"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start": {
                                    "row": 25,
                                    "column": 46
                                  },
                                  "end": {
                                    "row": 25,
                                    "column": 47
                                  },
                                  "text": ";"
                                }
                              ]
                            },
                            {
                              "type": "if_statement",
                              "start": {
                                "row": 26,
                                "column": 4
                              },
                              "end": {
                                "row": 35,
                                "column": 5
                              },
                              "text": "if (segOffset + SPARSE_BUCKET_ELEMENT_SIZE_IN_BYTES < segmentSize) {\n\t\t\t\t\t// if the new bucket still in current segment, we only need to update offset\n\t\t\t\t\t// within this segment\n\t\t\t\t\tsegOffset += SPARSE_BUCKET_ELEMENT_SIZE_IN_BYTES;\n\t\t\t\t} else {\n\t\t\t\t\t// otherwise, we should re-calculate segment and offset\n\t\t\t\t\tbucketOffset = bucketId * 16;\n\t\t\t\t\tsegment = buckets[bucketOffset >>> segmentSizeBits];\n\t\t\t\t\tsegOffset = bucketOffset & segmentSizeMask;\n\t\t\t\t}",
                              "children": [
                                {
                                  "type": "if",
                                  "start": {
                                    "row": 26,
                                    "column": 4
                                  },
                                  "end": {
                                    "row": 26,
                                    "column": 6
                                  },
                                  "text": "if"
                                },
                                {
                                  "type": "condition",
                                  "start": {
                                    "row": 26,
                                    "column": 7
                                  },
                                  "end": {
                                    "row": 26,
                                    "column": 70
                                  },
                                  "text": "(segOffset + SPARSE_BUCKET_ELEMENT_SIZE_IN_BYTES < segmentSize)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 26,
                                        "column": 7
                                      },
                                      "end": {
                                        "row": 26,
                                        "column": 8
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start": {
                                        "row": 26,
                                        "column": 8
                                      },
                                      "end": {
                                        "row": 26,
                                        "column": 69
                                      },
                                      "text": "segOffset + SPARSE_BUCKET_ELEMENT_SIZE_IN_BYTES < segmentSize",
                                      "children": [
                                        {
                                          "type": "binary_expression",
                                          "start": {
                                            "row": 26,
                                            "column": 8
                                          },
                                          "end": {
                                            "row": 26,
                                            "column": 55
                                          },
                                          "text": "segOffset + SPARSE_BUCKET_ELEMENT_SIZE_IN_BYTES",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 26,
                                                "column": 8
                                              },
                                              "end": {
                                                "row": 26,
                                                "column": 17
                                              },
                                              "text": "segOffset"
                                            },
                                            {
                                              "type": "+",
                                              "start": {
                                                "row": 26,
                                                "column": 18
                                              },
                                              "end": {
                                                "row": 26,
                                                "column": 19
                                              },
                                              "text": "+"
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 26,
                                                "column": 20
                                              },
                                              "end": {
                                                "row": 26,
                                                "column": 55
                                              },
                                              "text": "SPARSE_BUCKET_ELEMENT_SIZE_IN_BYTES"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "<",
                                          "start": {
                                            "row": 26,
                                            "column": 56
                                          },
                                          "end": {
                                            "row": 26,
                                            "column": 57
                                          },
                                          "text": "<"
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 26,
                                            "column": 58
                                          },
                                          "end": {
                                            "row": 26,
                                            "column": 69
                                          },
                                          "text": "segmentSize"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 26,
                                        "column": 69
                                      },
                                      "end": {
                                        "row": 26,
                                        "column": 70
                                      },
                                      "text": ")"
                                    }
                                  ]
                                },
                                {
                                  "type": "block",
                                  "start": {
                                    "row": 26,
                                    "column": 71
                                  },
                                  "end": {
                                    "row": 30,
                                    "column": 5
                                  },
                                  "text": "{\n\t\t\t\t\t// if the new bucket still in current segment, we only need to update offset\n\t\t\t\t\t// within this segment\n\t\t\t\t\tsegOffset += SPARSE_BUCKET_ELEMENT_SIZE_IN_BYTES;\n\t\t\t\t}",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start": {
                                        "row": 26,
                                        "column": 71
                                      },
                                      "end": {
                                        "row": 26,
                                        "column": 72
                                      },
                                      "text": "{"
                                    },
                                    {
                                      "type": "line_comment",
                                      "start": {
                                        "row": 27,
                                        "column": 5
                                      },
                                      "end": {
                                        "row": 27,
                                        "column": 81
                                      },
                                      "text": "// if the new bucket still in current segment, we only need to update offset"
                                    },
                                    {
                                      "type": "line_comment",
                                      "start": {
                                        "row": 28,
                                        "column": 5
                                      },
                                      "end": {
                                        "row": 28,
                                        "column": 27
                                      },
                                      "text": "// within this segment"
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start": {
                                        "row": 29,
                                        "column": 5
                                      },
                                      "end": {
                                        "row": 29,
                                        "column": 54
                                      },
                                      "text": "segOffset += SPARSE_BUCKET_ELEMENT_SIZE_IN_BYTES;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start": {
                                            "row": 29,
                                            "column": 5
                                          },
                                          "end": {
                                            "row": 29,
                                            "column": 53
                                          },
                                          "text": "segOffset += SPARSE_BUCKET_ELEMENT_SIZE_IN_BYTES",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 29,
                                                "column": 5
                                              },
                                              "end": {
                                                "row": 29,
                                                "column": 14
                                              },
                                              "text": "segOffset"
                                            },
                                            {
                                              "type": "+=",
                                              "start": {
                                                "row": 29,
                                                "column": 15
                                              },
                                              "end": {
                                                "row": 29,
                                                "column": 17
                                              },
                                              "text": "+="
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 29,
                                                "column": 18
                                              },
                                              "end": {
                                                "row": 29,
                                                "column": 53
                                              },
                                              "text": "SPARSE_BUCKET_ELEMENT_SIZE_IN_BYTES"
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start": {
                                            "row": 29,
                                            "column": 53
                                          },
                                          "end": {
                                            "row": 29,
                                            "column": 54
                                          },
                                          "text": ";"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start": {
                                        "row": 30,
                                        "column": 4
                                      },
                                      "end": {
                                        "row": 30,
                                        "column": 5
                                      },
                                      "text": "}"
                                    }
                                  ]
                                },
                                {
                                  "type": "else",
                                  "start": {
                                    "row": 30,
                                    "column": 6
                                  },
                                  "end": {
                                    "row": 30,
                                    "column": 10
                                  },
                                  "text": "else"
                                },
                                {
                                  "type": "block",
                                  "start": {
                                    "row": 30,
                                    "column": 11
                                  },
                                  "end": {
                                    "row": 35,
                                    "column": 5
                                  },
                                  "text": "{\n\t\t\t\t\t// otherwise, we should re-calculate segment and offset\n\t\t\t\t\tbucketOffset = bucketId * 16;\n\t\t\t\t\tsegment = buckets[bucketOffset >>> segmentSizeBits];\n\t\t\t\t\tsegOffset = bucketOffset & segmentSizeMask;\n\t\t\t\t}",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start": {
                                        "row": 30,
                                        "column": 11
                                      },
                                      "end": {
                                        "row": 30,
                                        "column": 12
                                      },
                                      "text": "{"
                                    },
                                    {
                                      "type": "line_comment",
                                      "start": {
                                        "row": 31,
                                        "column": 5
                                      },
                                      "end": {
                                        "row": 31,
                                        "column": 60
                                      },
                                      "text": "// otherwise, we should re-calculate segment and offset"
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start": {
                                        "row": 32,
                                        "column": 5
                                      },
                                      "end": {
                                        "row": 32,
                                        "column": 34
                                      },
                                      "text": "bucketOffset = bucketId * 16;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start": {
                                            "row": 32,
                                            "column": 5
                                          },
                                          "end": {
                                            "row": 32,
                                            "column": 33
                                          },
                                          "text": "bucketOffset = bucketId * 16",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 32,
                                                "column": 5
                                              },
                                              "end": {
                                                "row": 32,
                                                "column": 17
                                              },
                                              "text": "bucketOffset"
                                            },
                                            {
                                              "type": "=",
                                              "start": {
                                                "row": 32,
                                                "column": 18
                                              },
                                              "end": {
                                                "row": 32,
                                                "column": 19
                                              },
                                              "text": "="
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start": {
                                                "row": 32,
                                                "column": 20
                                              },
                                              "end": {
                                                "row": 32,
                                                "column": 33
                                              },
                                              "text": "bucketId * 16",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 32,
                                                    "column": 20
                                                  },
                                                  "end": {
                                                    "row": 32,
                                                    "column": 28
                                                  },
                                                  "text": "bucketId"
                                                },
                                                {
                                                  "type": "*",
                                                  "start": {
                                                    "row": 32,
                                                    "column": 29
                                                  },
                                                  "end": {
                                                    "row": 32,
                                                    "column": 30
                                                  },
                                                  "text": "*"
                                                },
                                                {
                                                  "type": "decimal_integer_literal",
                                                  "start": {
                                                    "row": 32,
                                                    "column": 31
                                                  },
                                                  "end": {
                                                    "row": 32,
                                                    "column": 33
                                                  },
                                                  "text": "16"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start": {
                                            "row": 32,
                                            "column": 33
                                          },
                                          "end": {
                                            "row": 32,
                                            "column": 34
                                          },
                                          "text": ";"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start": {
                                        "row": 33,
                                        "column": 5
                                      },
                                      "end": {
                                        "row": 33,
                                        "column": 57
                                      },
                                      "text": "segment = buckets[bucketOffset >>> segmentSizeBits];",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start": {
                                            "row": 33,
                                            "column": 5
                                          },
                                          "end": {
                                            "row": 33,
                                            "column": 56
                                          },
                                          "text": "segment = buckets[bucketOffset >>> segmentSizeBits]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 33,
                                                "column": 5
                                              },
                                              "end": {
                                                "row": 33,
                                                "column": 12
                                              },
                                              "text": "segment"
                                            },
                                            {
                                              "type": "=",
                                              "start": {
                                                "row": 33,
                                                "column": 13
                                              },
                                              "end": {
                                                "row": 33,
                                                "column": 14
                                              },
                                              "text": "="
                                            },
                                            {
                                              "type": "array_access",
                                              "start": {
                                                "row": 33,
                                                "column": 15
                                              },
                                              "end": {
                                                "row": 33,
                                                "column": 56
                                              },
                                              "text": "buckets[bucketOffset >>> segmentSizeBits]",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 33,
                                                    "column": 15
                                                  },
                                                  "end": {
                                                    "row": 33,
                                                    "column": 22
                                                  },
                                                  "text": "buckets"
                                                },
                                                {
                                                  "type": "[",
                                                  "start": {
                                                    "row": 33,
                                                    "column": 22
                                                  },
                                                  "end": {
                                                    "row": 33,
                                                    "column": 23
                                                  },
                                                  "text": "["
                                                },
                                                {
                                                  "type": "binary_expression",
                                                  "start": {
                                                    "row": 33,
                                                    "column": 23
                                                  },
                                                  "end": {
                                                    "row": 33,
                                                    "column": 55
                                                  },
                                                  "text": "bucketOffset >>> segmentSizeBits",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 33,
                                                        "column": 23
                                                      },
                                                      "end": {
                                                        "row": 33,
                                                        "column": 35
                                                      },
                                                      "text": "bucketOffset"
                                                    },
                                                    {
                                                      "type": ">>>",
                                                      "start": {
                                                        "row": 33,
                                                        "column": 36
                                                      },
                                                      "end": {
                                                        "row": 33,
                                                        "column": 39
                                                      },
                                                      "text": ">>>"
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 33,
                                                        "column": 40
                                                      },
                                                      "end": {
                                                        "row": 33,
                                                        "column": 55
                                                      },
                                                      "text": "segmentSizeBits"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "]",
                                                  "start": {
                                                    "row": 33,
                                                    "column": 55
                                                  },
                                                  "end": {
                                                    "row": 33,
                                                    "column": 56
                                                  },
                                                  "text": "]"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start": {
                                            "row": 33,
                                            "column": 56
                                          },
                                          "end": {
                                            "row": 33,
                                            "column": 57
                                          },
                                          "text": ";"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start": {
                                        "row": 34,
                                        "column": 5
                                      },
                                      "end": {
                                        "row": 34,
                                        "column": 48
                                      },
                                      "text": "segOffset = bucketOffset & segmentSizeMask;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start": {
                                            "row": 34,
                                            "column": 5
                                          },
                                          "end": {
                                            "row": 34,
                                            "column": 47
                                          },
                                          "text": "segOffset = bucketOffset & segmentSizeMask",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 34,
                                                "column": 5
                                              },
                                              "end": {
                                                "row": 34,
                                                "column": 14
                                              },
                                              "text": "segOffset"
                                            },
                                            {
                                              "type": "=",
                                              "start": {
                                                "row": 34,
                                                "column": 15
                                              },
                                              "end": {
                                                "row": 34,
                                                "column": 16
                                              },
                                              "text": "="
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start": {
                                                "row": 34,
                                                "column": 17
                                              },
                                              "end": {
                                                "row": 34,
                                                "column": 47
                                              },
                                              "text": "bucketOffset & segmentSizeMask",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 34,
                                                    "column": 17
                                                  },
                                                  "end": {
                                                    "row": 34,
                                                    "column": 29
                                                  },
                                                  "text": "bucketOffset"
                                                },
                                                {
                                                  "type": "&",
                                                  "start": {
                                                    "row": 34,
                                                    "column": 30
                                                  },
                                                  "end": {
                                                    "row": 34,
                                                    "column": 31
                                                  },
                                                  "text": "&"
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 34,
                                                    "column": 32
                                                  },
                                                  "end": {
                                                    "row": 34,
                                                    "column": 47
                                                  },
                                                  "text": "segmentSizeMask"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start": {
                                            "row": 34,
                                            "column": 47
                                          },
                                          "end": {
                                            "row": 34,
                                            "column": 48
                                          },
                                          "text": ";"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start": {
                                        "row": 35,
                                        "column": 4
                                      },
                                      "end": {
                                        "row": 35,
                                        "column": 5
                                      },
                                      "text": "}"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start": {
                                "row": 36,
                                "column": 3
                              },
                              "end": {
                                "row": 36,
                                "column": 4
                              },
                              "text": "}"
                            }
                          ]
                        },
                        {
                          "type": "else",
                          "start": {
                            "row": 36,
                            "column": 5
                          },
                          "end": {
                            "row": 36,
                            "column": 9
                          },
                          "text": "else"
                        },
                        {
                          "type": "block",
                          "start": {
                            "row": 36,
                            "column": 10
                          },
                          "end": {
                            "row": 38,
                            "column": 4
                          },
                          "text": "{\n\t\t\t\tbreak;\n\t\t\t}",
                          "children": [
                            {
                              "type": "{",
                              "start": {
                                "row": 36,
                                "column": 10
                              },
                              "end": {
                                "row": 36,
                                "column": 11
                              },
                              "text": "{"
                            },
                            {
                              "type": "break_statement",
                              "start": {
                                "row": 37,
                                "column": 4
                              },
                              "end": {
                                "row": 37,
                                "column": 10
                              },
                              "text": "break;",
                              "children": [
                                {
                                  "type": "break",
                                  "start": {
                                    "row": 37,
                                    "column": 4
                                  },
                                  "end": {
                                    "row": 37,
                                    "column": 9
                                  },
                                  "text": "break"
                                },
                                {
                                  "type": ";",
                                  "start": {
                                    "row": 37,
                                    "column": 9
                                  },
                                  "end": {
                                    "row": 37,
                                    "column": 10
                                  },
                                  "text": ";"
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start": {
                                "row": 38,
                                "column": 3
                              },
                              "end": {
                                "row": 38,
                                "column": 4
                              },
                              "text": "}"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start": {
                        "row": 39,
                        "column": 2
                      },
                      "end": {
                        "row": 39,
                        "column": 3
                      },
                      "text": "}"
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 40,
                "column": 2
              },
              "end": {
                "row": 56,
                "column": 3
              },
              "text": "if (currAddress == INVALID_ADDRESS) {\n\t\t\t// this is the first value for this key, put the address in array.\n\t\t\tsegment.putLong(segOffset, key);\n\t\t\tsegment.putLong(segOffset + 8, address);\n\t\t\tnumKeys += 1;\n\t\t\t// dataSegment may be null if we only have to rehash bucket area\n\t\t\tif (dataSegment != null) {\n\t\t\t\tdataSegment.putLong(currentPositionInSegment, toAddrAndLen(INVALID_ADDRESS, size));\n\t\t\t}\n\t\t\tif (numKeys * 2 > numBuckets) {\n\t\t\t\tresize();\n\t\t\t}\n\t\t} else {\n\t\t\t// there are some values for this key, put the address in the front of them.\n\t\t\tdataSegment.putLong(currentPositionInSegment, toAddrAndLen(currAddress, size));\n\t\t\tsegment.putLong(segOffset + 8, address);\n\t\t}",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 40,
                    "column": 2
                  },
                  "end": {
                    "row": 40,
                    "column": 4
                  },
                  "text": "if"
                },
                {
                  "type": "condition",
                  "start": {
                    "row": 40,
                    "column": 5
                  },
                  "end": {
                    "row": 40,
                    "column": 37
                  },
                  "text": "(currAddress == INVALID_ADDRESS)",
                  "children": [
                    {
                      "type": "(",
                      "start": {
                        "row": 40,
                        "column": 5
                      },
                      "end": {
                        "row": 40,
                        "column": 6
                      },
                      "text": "("
                    },
                    {
                      "type": "binary_expression",
                      "start": {
                        "row": 40,
                        "column": 6
                      },
                      "end": {
                        "row": 40,
                        "column": 36
                      },
                      "text": "currAddress == INVALID_ADDRESS",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 40,
                            "column": 6
                          },
                          "end": {
                            "row": 40,
                            "column": 17
                          },
                          "text": "currAddress"
                        },
                        {
                          "type": "==",
                          "start": {
                            "row": 40,
                            "column": 18
                          },
                          "end": {
                            "row": 40,
                            "column": 20
                          },
                          "text": "=="
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 40,
                            "column": 21
                          },
                          "end": {
                            "row": 40,
                            "column": 36
                          },
                          "text": "INVALID_ADDRESS"
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start": {
                        "row": 40,
                        "column": 36
                      },
                      "end": {
                        "row": 40,
                        "column": 37
                      },
                      "text": ")"
                    }
                  ]
                },
                {
                  "type": "block",
                  "start": {
                    "row": 40,
                    "column": 38
                  },
                  "end": {
                    "row": 52,
                    "column": 3
                  },
                  "text": "{\n\t\t\t// this is the first value for this key, put the address in array.\n\t\t\tsegment.putLong(segOffset, key);\n\t\t\tsegment.putLong(segOffset + 8, address);\n\t\t\tnumKeys += 1;\n\t\t\t// dataSegment may be null if we only have to rehash bucket area\n\t\t\tif (dataSegment != null) {\n\t\t\t\tdataSegment.putLong(currentPositionInSegment, toAddrAndLen(INVALID_ADDRESS, size));\n\t\t\t}\n\t\t\tif (numKeys * 2 > numBuckets) {\n\t\t\t\tresize();\n\t\t\t}\n\t\t}",
                  "children": [
                    {
                      "type": "{",
                      "start": {
                        "row": 40,
                        "column": 38
                      },
                      "end": {
                        "row": 40,
                        "column": 39
                      },
                      "text": "{"
                    },
                    {
                      "type": "line_comment",
                      "start": {
                        "row": 41,
                        "column": 3
                      },
                      "end": {
                        "row": 41,
                        "column": 69
                      },
                      "text": "// this is the first value for this key, put the address in array."
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 42,
                        "column": 3
                      },
                      "end": {
                        "row": 42,
                        "column": 35
                      },
                      "text": "segment.putLong(segOffset, key);",
                      "children": [
                        {
                          "type": "method_invocation",
                          "start": {
                            "row": 42,
                            "column": 3
                          },
                          "end": {
                            "row": 42,
                            "column": 34
                          },
                          "text": "segment.putLong(segOffset, key)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 42,
                                "column": 3
                              },
                              "end": {
                                "row": 42,
                                "column": 10
                              },
                              "text": "segment"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 42,
                                "column": 10
                              },
                              "end": {
                                "row": 42,
                                "column": 11
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 42,
                                "column": 11
                              },
                              "end": {
                                "row": 42,
                                "column": 18
                              },
                              "text": "putLong"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 42,
                                "column": 18
                              },
                              "end": {
                                "row": 42,
                                "column": 34
                              },
                              "text": "(segOffset, key)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 42,
                                    "column": 18
                                  },
                                  "end": {
                                    "row": 42,
                                    "column": 19
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 42,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 42,
                                    "column": 28
                                  },
                                  "text": "segOffset"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 42,
                                    "column": 28
                                  },
                                  "end": {
                                    "row": 42,
                                    "column": 29
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 42,
                                    "column": 30
                                  },
                                  "end": {
                                    "row": 42,
                                    "column": 33
                                  },
                                  "text": "key"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 42,
                                    "column": 33
                                  },
                                  "end": {
                                    "row": 42,
                                    "column": 34
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start": {
                            "row": 42,
                            "column": 34
                          },
                          "end": {
                            "row": 42,
                            "column": 35
                          },
                          "text": ";"
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 43,
                        "column": 3
                      },
                      "end": {
                        "row": 43,
                        "column": 43
                      },
                      "text": "segment.putLong(segOffset + 8, address);",
                      "children": [
                        {
                          "type": "method_invocation",
                          "start": {
                            "row": 43,
                            "column": 3
                          },
                          "end": {
                            "row": 43,
                            "column": 42
                          },
                          "text": "segment.putLong(segOffset + 8, address)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 43,
                                "column": 3
                              },
                              "end": {
                                "row": 43,
                                "column": 10
                              },
                              "text": "segment"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 43,
                                "column": 10
                              },
                              "end": {
                                "row": 43,
                                "column": 11
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 43,
                                "column": 11
                              },
                              "end": {
                                "row": 43,
                                "column": 18
                              },
                              "text": "putLong"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 43,
                                "column": 18
                              },
                              "end": {
                                "row": 43,
                                "column": 42
                              },
                              "text": "(segOffset + 8, address)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 43,
                                    "column": 18
                                  },
                                  "end": {
                                    "row": 43,
                                    "column": 19
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "binary_expression",
                                  "start": {
                                    "row": 43,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 43,
                                    "column": 32
                                  },
                                  "text": "segOffset + 8",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 43,
                                        "column": 19
                                      },
                                      "end": {
                                        "row": 43,
                                        "column": 28
                                      },
                                      "text": "segOffset"
                                    },
                                    {
                                      "type": "+",
                                      "start": {
                                        "row": 43,
                                        "column": 29
                                      },
                                      "end": {
                                        "row": 43,
                                        "column": 30
                                      },
                                      "text": "+"
                                    },
                                    {
                                      "type": "decimal_integer_literal",
                                      "start": {
                                        "row": 43,
                                        "column": 31
                                      },
                                      "end": {
                                        "row": 43,
                                        "column": 32
                                      },
                                      "text": "8"
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 43,
                                    "column": 32
                                  },
                                  "end": {
                                    "row": 43,
                                    "column": 33
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 43,
                                    "column": 34
                                  },
                                  "end": {
                                    "row": 43,
                                    "column": 41
                                  },
                                  "text": "address"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 43,
                                    "column": 41
                                  },
                                  "end": {
                                    "row": 43,
                                    "column": 42
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start": {
                            "row": 43,
                            "column": 42
                          },
                          "end": {
                            "row": 43,
                            "column": 43
                          },
                          "text": ";"
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 44,
                        "column": 3
                      },
                      "end": {
                        "row": 44,
                        "column": 16
                      },
                      "text": "numKeys += 1;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start": {
                            "row": 44,
                            "column": 3
                          },
                          "end": {
                            "row": 44,
                            "column": 15
                          },
                          "text": "numKeys += 1",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 44,
                                "column": 3
                              },
                              "end": {
                                "row": 44,
                                "column": 10
                              },
                              "text": "numKeys"
                            },
                            {
                              "type": "+=",
                              "start": {
                                "row": 44,
                                "column": 11
                              },
                              "end": {
                                "row": 44,
                                "column": 13
                              },
                              "text": "+="
                            },
                            {
                              "type": "decimal_integer_literal",
                              "start": {
                                "row": 44,
                                "column": 14
                              },
                              "end": {
                                "row": 44,
                                "column": 15
                              },
                              "text": "1"
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start": {
                            "row": 44,
                            "column": 15
                          },
                          "end": {
                            "row": 44,
                            "column": 16
                          },
                          "text": ";"
                        }
                      ]
                    },
                    {
                      "type": "line_comment",
                      "start": {
                        "row": 45,
                        "column": 3
                      },
                      "end": {
                        "row": 45,
                        "column": 67
                      },
                      "text": "// dataSegment may be null if we only have to rehash bucket area"
                    },
                    {
                      "type": "if_statement",
                      "start": {
                        "row": 46,
                        "column": 3
                      },
                      "end": {
                        "row": 48,
                        "column": 4
                      },
                      "text": "if (dataSegment != null) {\n\t\t\t\tdataSegment.putLong(currentPositionInSegment, toAddrAndLen(INVALID_ADDRESS, size));\n\t\t\t}",
                      "children": [
                        {
                          "type": "if",
                          "start": {
                            "row": 46,
                            "column": 3
                          },
                          "end": {
                            "row": 46,
                            "column": 5
                          },
                          "text": "if"
                        },
                        {
                          "type": "condition",
                          "start": {
                            "row": 46,
                            "column": 6
                          },
                          "end": {
                            "row": 46,
                            "column": 27
                          },
                          "text": "(dataSegment != null)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 46,
                                "column": 6
                              },
                              "end": {
                                "row": 46,
                                "column": 7
                              },
                              "text": "("
                            },
                            {
                              "type": "binary_expression",
                              "start": {
                                "row": 46,
                                "column": 7
                              },
                              "end": {
                                "row": 46,
                                "column": 26
                              },
                              "text": "dataSegment != null",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 46,
                                    "column": 7
                                  },
                                  "end": {
                                    "row": 46,
                                    "column": 18
                                  },
                                  "text": "dataSegment"
                                },
                                {
                                  "type": "!=",
                                  "start": {
                                    "row": 46,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 46,
                                    "column": 21
                                  },
                                  "text": "!="
                                },
                                {
                                  "type": "null_literal",
                                  "start": {
                                    "row": 46,
                                    "column": 22
                                  },
                                  "end": {
                                    "row": 46,
                                    "column": 26
                                  },
                                  "text": "null"
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 46,
                                "column": 26
                              },
                              "end": {
                                "row": 46,
                                "column": 27
                              },
                              "text": ")"
                            }
                          ]
                        },
                        {
                          "type": "block",
                          "start": {
                            "row": 46,
                            "column": 28
                          },
                          "end": {
                            "row": 48,
                            "column": 4
                          },
                          "text": "{\n\t\t\t\tdataSegment.putLong(currentPositionInSegment, toAddrAndLen(INVALID_ADDRESS, size));\n\t\t\t}",
                          "children": [
                            {
                              "type": "{",
                              "start": {
                                "row": 46,
                                "column": 28
                              },
                              "end": {
                                "row": 46,
                                "column": 29
                              },
                              "text": "{"
                            },
                            {
                              "type": "expression_statement",
                              "start": {
                                "row": 47,
                                "column": 4
                              },
                              "end": {
                                "row": 47,
                                "column": 87
                              },
                              "text": "dataSegment.putLong(currentPositionInSegment, toAddrAndLen(INVALID_ADDRESS, size));",
                              "children": [
                                {
                                  "type": "method_invocation",
                                  "start": {
                                    "row": 47,
                                    "column": 4
                                  },
                                  "end": {
                                    "row": 47,
                                    "column": 86
                                  },
                                  "text": "dataSegment.putLong(currentPositionInSegment, toAddrAndLen(INVALID_ADDRESS, size))",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 47,
                                        "column": 4
                                      },
                                      "end": {
                                        "row": 47,
                                        "column": 15
                                      },
                                      "text": "dataSegment"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 47,
                                        "column": 15
                                      },
                                      "end": {
                                        "row": 47,
                                        "column": 16
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 47,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 47,
                                        "column": 23
                                      },
                                      "text": "putLong"
                                    },
                                    {
                                      "type": "argument_list",
                                      "start": {
                                        "row": 47,
                                        "column": 23
                                      },
                                      "end": {
                                        "row": 47,
                                        "column": 86
                                      },
                                      "text": "(currentPositionInSegment, toAddrAndLen(INVALID_ADDRESS, size))",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 47,
                                            "column": 23
                                          },
                                          "end": {
                                            "row": 47,
                                            "column": 24
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 47,
                                            "column": 24
                                          },
                                          "end": {
                                            "row": 47,
                                            "column": 48
                                          },
                                          "text": "currentPositionInSegment"
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 47,
                                            "column": 48
                                          },
                                          "end": {
                                            "row": 47,
                                            "column": 49
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "method_invocation",
                                          "start": {
                                            "row": 47,
                                            "column": 50
                                          },
                                          "end": {
                                            "row": 47,
                                            "column": 85
                                          },
                                          "text": "toAddrAndLen(INVALID_ADDRESS, size)",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 47,
                                                "column": 50
                                              },
                                              "end": {
                                                "row": 47,
                                                "column": 62
                                              },
                                              "text": "toAddrAndLen"
                                            },
                                            {
                                              "type": "argument_list",
                                              "start": {
                                                "row": 47,
                                                "column": 62
                                              },
                                              "end": {
                                                "row": 47,
                                                "column": 85
                                              },
                                              "text": "(INVALID_ADDRESS, size)",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 47,
                                                    "column": 62
                                                  },
                                                  "end": {
                                                    "row": 47,
                                                    "column": 63
                                                  },
                                                  "text": "("
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 47,
                                                    "column": 63
                                                  },
                                                  "end": {
                                                    "row": 47,
                                                    "column": 78
                                                  },
                                                  "text": "INVALID_ADDRESS"
                                                },
                                                {
                                                  "type": ",",
                                                  "start": {
                                                    "row": 47,
                                                    "column": 78
                                                  },
                                                  "end": {
                                                    "row": 47,
                                                    "column": 79
                                                  },
                                                  "text": ","
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 47,
                                                    "column": 80
                                                  },
                                                  "end": {
                                                    "row": 47,
                                                    "column": 84
                                                  },
                                                  "text": "size"
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 47,
                                                    "column": 84
                                                  },
                                                  "end": {
                                                    "row": 47,
                                                    "column": 85
                                                  },
                                                  "text": ")"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 47,
                                            "column": 85
                                          },
                                          "end": {
                                            "row": 47,
                                            "column": 86
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start": {
                                    "row": 47,
                                    "column": 86
                                  },
                                  "end": {
                                    "row": 47,
                                    "column": 87
                                  },
                                  "text": ";"
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start": {
                                "row": 48,
                                "column": 3
                              },
                              "end": {
                                "row": 48,
                                "column": 4
                              },
                              "text": "}"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "if_statement",
                      "start": {
                        "row": 49,
                        "column": 3
                      },
                      "end": {
                        "row": 51,
                        "column": 4
                      },
                      "text": "if (numKeys * 2 > numBuckets) {\n\t\t\t\tresize();\n\t\t\t}",
                      "children": [
                        {
                          "type": "if",
                          "start": {
                            "row": 49,
                            "column": 3
                          },
                          "end": {
                            "row": 49,
                            "column": 5
                          },
                          "text": "if"
                        },
                        {
                          "type": "condition",
                          "start": {
                            "row": 49,
                            "column": 6
                          },
                          "end": {
                            "row": 49,
                            "column": 32
                          },
                          "text": "(numKeys * 2 > numBuckets)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 49,
                                "column": 6
                              },
                              "end": {
                                "row": 49,
                                "column": 7
                              },
                              "text": "("
                            },
                            {
                              "type": "binary_expression",
                              "start": {
                                "row": 49,
                                "column": 7
                              },
                              "end": {
                                "row": 49,
                                "column": 31
                              },
                              "text": "numKeys * 2 > numBuckets",
                              "children": [
                                {
                                  "type": "binary_expression",
                                  "start": {
                                    "row": 49,
                                    "column": 7
                                  },
                                  "end": {
                                    "row": 49,
                                    "column": 18
                                  },
                                  "text": "numKeys * 2",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 49,
                                        "column": 7
                                      },
                                      "end": {
                                        "row": 49,
                                        "column": 14
                                      },
                                      "text": "numKeys"
                                    },
                                    {
                                      "type": "*",
                                      "start": {
                                        "row": 49,
                                        "column": 15
                                      },
                                      "end": {
                                        "row": 49,
                                        "column": 16
                                      },
                                      "text": "*"
                                    },
                                    {
                                      "type": "decimal_integer_literal",
                                      "start": {
                                        "row": 49,
                                        "column": 17
                                      },
                                      "end": {
                                        "row": 49,
                                        "column": 18
                                      },
                                      "text": "2"
                                    }
                                  ]
                                },
                                {
                                  "type": ">",
                                  "start": {
                                    "row": 49,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 49,
                                    "column": 20
                                  },
                                  "text": ">"
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 49,
                                    "column": 21
                                  },
                                  "end": {
                                    "row": 49,
                                    "column": 31
                                  },
                                  "text": "numBuckets"
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 49,
                                "column": 31
                              },
                              "end": {
                                "row": 49,
                                "column": 32
                              },
                              "text": ")"
                            }
                          ]
                        },
                        {
                          "type": "block",
                          "start": {
                            "row": 49,
                            "column": 33
                          },
                          "end": {
                            "row": 51,
                            "column": 4
                          },
                          "text": "{\n\t\t\t\tresize();\n\t\t\t}",
                          "children": [
                            {
                              "type": "{",
                              "start": {
                                "row": 49,
                                "column": 33
                              },
                              "end": {
                                "row": 49,
                                "column": 34
                              },
                              "text": "{"
                            },
                            {
                              "type": "expression_statement",
                              "start": {
                                "row": 50,
                                "column": 4
                              },
                              "end": {
                                "row": 50,
                                "column": 13
                              },
                              "text": "resize();",
                              "children": [
                                {
                                  "type": "method_invocation",
                                  "start": {
                                    "row": 50,
                                    "column": 4
                                  },
                                  "end": {
                                    "row": 50,
                                    "column": 12
                                  },
                                  "text": "resize()",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 50,
                                        "column": 4
                                      },
                                      "end": {
                                        "row": 50,
                                        "column": 10
                                      },
                                      "text": "resize"
                                    },
                                    {
                                      "type": "argument_list",
                                      "start": {
                                        "row": 50,
                                        "column": 10
                                      },
                                      "end": {
                                        "row": 50,
                                        "column": 12
                                      },
                                      "text": "()",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 50,
                                            "column": 10
                                          },
                                          "end": {
                                            "row": 50,
                                            "column": 11
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 50,
                                            "column": 11
                                          },
                                          "end": {
                                            "row": 50,
                                            "column": 12
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start": {
                                    "row": 50,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 50,
                                    "column": 13
                                  },
                                  "text": ";"
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start": {
                                "row": 51,
                                "column": 3
                              },
                              "end": {
                                "row": 51,
                                "column": 4
                              },
                              "text": "}"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start": {
                        "row": 52,
                        "column": 2
                      },
                      "end": {
                        "row": 52,
                        "column": 3
                      },
                      "text": "}"
                    }
                  ]
                },
                {
                  "type": "else",
                  "start": {
                    "row": 52,
                    "column": 4
                  },
                  "end": {
                    "row": 52,
                    "column": 8
                  },
                  "text": "else"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 52,
                    "column": 9
                  },
                  "end": {
                    "row": 56,
                    "column": 3
                  },
                  "text": "{\n\t\t\t// there are some values for this key, put the address in the front of them.\n\t\t\tdataSegment.putLong(currentPositionInSegment, toAddrAndLen(currAddress, size));\n\t\t\tsegment.putLong(segOffset + 8, address);\n\t\t}",
                  "children": [
                    {
                      "type": "{",
                      "start": {
                        "row": 52,
                        "column": 9
                      },
                      "end": {
                        "row": 52,
                        "column": 10
                      },
                      "text": "{"
                    },
                    {
                      "type": "line_comment",
                      "start": {
                        "row": 53,
                        "column": 3
                      },
                      "end": {
                        "row": 53,
                        "column": 79
                      },
                      "text": "// there are some values for this key, put the address in the front of them."
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 54,
                        "column": 3
                      },
                      "end": {
                        "row": 54,
                        "column": 82
                      },
                      "text": "dataSegment.putLong(currentPositionInSegment, toAddrAndLen(currAddress, size));",
                      "children": [
                        {
                          "type": "method_invocation",
                          "start": {
                            "row": 54,
                            "column": 3
                          },
                          "end": {
                            "row": 54,
                            "column": 81
                          },
                          "text": "dataSegment.putLong(currentPositionInSegment, toAddrAndLen(currAddress, size))",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 54,
                                "column": 3
                              },
                              "end": {
                                "row": 54,
                                "column": 14
                              },
                              "text": "dataSegment"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 54,
                                "column": 14
                              },
                              "end": {
                                "row": 54,
                                "column": 15
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 54,
                                "column": 15
                              },
                              "end": {
                                "row": 54,
                                "column": 22
                              },
                              "text": "putLong"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 54,
                                "column": 22
                              },
                              "end": {
                                "row": 54,
                                "column": 81
                              },
                              "text": "(currentPositionInSegment, toAddrAndLen(currAddress, size))",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 54,
                                    "column": 22
                                  },
                                  "end": {
                                    "row": 54,
                                    "column": 23
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 54,
                                    "column": 23
                                  },
                                  "end": {
                                    "row": 54,
                                    "column": 47
                                  },
                                  "text": "currentPositionInSegment"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 54,
                                    "column": 47
                                  },
                                  "end": {
                                    "row": 54,
                                    "column": 48
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "method_invocation",
                                  "start": {
                                    "row": 54,
                                    "column": 49
                                  },
                                  "end": {
                                    "row": 54,
                                    "column": 80
                                  },
                                  "text": "toAddrAndLen(currAddress, size)",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 54,
                                        "column": 49
                                      },
                                      "end": {
                                        "row": 54,
                                        "column": 61
                                      },
                                      "text": "toAddrAndLen"
                                    },
                                    {
                                      "type": "argument_list",
                                      "start": {
                                        "row": 54,
                                        "column": 61
                                      },
                                      "end": {
                                        "row": 54,
                                        "column": 80
                                      },
                                      "text": "(currAddress, size)",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 54,
                                            "column": 61
                                          },
                                          "end": {
                                            "row": 54,
                                            "column": 62
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 54,
                                            "column": 62
                                          },
                                          "end": {
                                            "row": 54,
                                            "column": 73
                                          },
                                          "text": "currAddress"
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 54,
                                            "column": 73
                                          },
                                          "end": {
                                            "row": 54,
                                            "column": 74
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 54,
                                            "column": 75
                                          },
                                          "end": {
                                            "row": 54,
                                            "column": 79
                                          },
                                          "text": "size"
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 54,
                                            "column": 79
                                          },
                                          "end": {
                                            "row": 54,
                                            "column": 80
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 54,
                                    "column": 80
                                  },
                                  "end": {
                                    "row": 54,
                                    "column": 81
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start": {
                            "row": 54,
                            "column": 81
                          },
                          "end": {
                            "row": 54,
                            "column": 82
                          },
                          "text": ";"
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 55,
                        "column": 3
                      },
                      "end": {
                        "row": 55,
                        "column": 43
                      },
                      "text": "segment.putLong(segOffset + 8, address);",
                      "children": [
                        {
                          "type": "method_invocation",
                          "start": {
                            "row": 55,
                            "column": 3
                          },
                          "end": {
                            "row": 55,
                            "column": 42
                          },
                          "text": "segment.putLong(segOffset + 8, address)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 55,
                                "column": 3
                              },
                              "end": {
                                "row": 55,
                                "column": 10
                              },
                              "text": "segment"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 55,
                                "column": 10
                              },
                              "end": {
                                "row": 55,
                                "column": 11
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 55,
                                "column": 11
                              },
                              "end": {
                                "row": 55,
                                "column": 18
                              },
                              "text": "putLong"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 55,
                                "column": 18
                              },
                              "end": {
                                "row": 55,
                                "column": 42
                              },
                              "text": "(segOffset + 8, address)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 55,
                                    "column": 18
                                  },
                                  "end": {
                                    "row": 55,
                                    "column": 19
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "binary_expression",
                                  "start": {
                                    "row": 55,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 55,
                                    "column": 32
                                  },
                                  "text": "segOffset + 8",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 55,
                                        "column": 19
                                      },
                                      "end": {
                                        "row": 55,
                                        "column": 28
                                      },
                                      "text": "segOffset"
                                    },
                                    {
                                      "type": "+",
                                      "start": {
                                        "row": 55,
                                        "column": 29
                                      },
                                      "end": {
                                        "row": 55,
                                        "column": 30
                                      },
                                      "text": "+"
                                    },
                                    {
                                      "type": "decimal_integer_literal",
                                      "start": {
                                        "row": 55,
                                        "column": 31
                                      },
                                      "end": {
                                        "row": 55,
                                        "column": 32
                                      },
                                      "text": "8"
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 55,
                                    "column": 32
                                  },
                                  "end": {
                                    "row": 55,
                                    "column": 33
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 55,
                                    "column": 34
                                  },
                                  "end": {
                                    "row": 55,
                                    "column": 41
                                  },
                                  "text": "address"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 55,
                                    "column": 41
                                  },
                                  "end": {
                                    "row": 55,
                                    "column": 42
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start": {
                            "row": 55,
                            "column": 42
                          },
                          "end": {
                            "row": 55,
                            "column": 43
                          },
                          "text": ";"
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start": {
                        "row": 56,
                        "column": 2
                      },
                      "end": {
                        "row": 56,
                        "column": 3
                      },
                      "text": "}"
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start": {
                "row": 57,
                "column": 1
              },
              "end": {
                "row": 57,
                "column": 2
              },
              "text": "}"
            }
          ]
        }
      ]
    }
  ]
}