{
  "type": "program",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 8,
    "column": 5
  },
  "text": "protected boolean ipPatternMatches(final String remoteIp) {\n        val matcher = this.ipsToCheckPattern.matcher(remoteIp);\n        if (matcher.find()) {\n            LOGGER.debug(\"Remote IP address [{}] should be checked based on the defined pattern [{}]\", remoteIp, this.ipsToCheckPattern.pattern());\n            return true;\n        }\n        LOGGER.debug(\"No pattern or remote IP defined, or pattern does not match remote IP [{}]\", remoteIp);\n        return false;\n    }",
  "children": [
    {
      "type": "method_declaration",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 8,
        "column": 5
      },
      "text": "protected boolean ipPatternMatches(final String remoteIp) {\n        val matcher = this.ipsToCheckPattern.matcher(remoteIp);\n        if (matcher.find()) {\n            LOGGER.debug(\"Remote IP address [{}] should be checked based on the defined pattern [{}]\", remoteIp, this.ipsToCheckPattern.pattern());\n            return true;\n        }\n        LOGGER.debug(\"No pattern or remote IP defined, or pattern does not match remote IP [{}]\", remoteIp);\n        return false;\n    }",
      "children": [
        {
          "type": "modifiers",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 9
          },
          "text": "protected",
          "children": [
            {
              "type": "protected",
              "start": {
                "row": 0,
                "column": 0
              },
              "end": {
                "row": 0,
                "column": 9
              },
              "text": "protected"
            }
          ]
        },
        {
          "type": "boolean_type",
          "start": {
            "row": 0,
            "column": 10
          },
          "end": {
            "row": 0,
            "column": 17
          },
          "text": "boolean"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 18
          },
          "end": {
            "row": 0,
            "column": 34
          },
          "text": "ipPatternMatches"
        },
        {
          "type": "formal_parameters",
          "start": {
            "row": 0,
            "column": 34
          },
          "end": {
            "row": 0,
            "column": 57
          },
          "text": "(final String remoteIp)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 34
              },
              "end": {
                "row": 0,
                "column": 35
              },
              "text": "("
            },
            {
              "type": "formal_parameter",
              "start": {
                "row": 0,
                "column": 35
              },
              "end": {
                "row": 0,
                "column": 56
              },
              "text": "final String remoteIp",
              "children": [
                {
                  "type": "modifiers",
                  "start": {
                    "row": 0,
                    "column": 35
                  },
                  "end": {
                    "row": 0,
                    "column": 40
                  },
                  "text": "final",
                  "children": [
                    {
                      "type": "final",
                      "start": {
                        "row": 0,
                        "column": 35
                      },
                      "end": {
                        "row": 0,
                        "column": 40
                      },
                      "text": "final"
                    }
                  ]
                },
                {
                  "type": "type_identifier",
                  "start": {
                    "row": 0,
                    "column": 41
                  },
                  "end": {
                    "row": 0,
                    "column": 47
                  },
                  "text": "String"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 48
                  },
                  "end": {
                    "row": 0,
                    "column": 56
                  },
                  "text": "remoteIp"
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 56
              },
              "end": {
                "row": 0,
                "column": 57
              },
              "text": ")"
            }
          ]
        },
        {
          "type": "block",
          "start": {
            "row": 0,
            "column": 58
          },
          "end": {
            "row": 8,
            "column": 5
          },
          "text": "{\n        val matcher = this.ipsToCheckPattern.matcher(remoteIp);\n        if (matcher.find()) {\n            LOGGER.debug(\"Remote IP address [{}] should be checked based on the defined pattern [{}]\", remoteIp, this.ipsToCheckPattern.pattern());\n            return true;\n        }\n        LOGGER.debug(\"No pattern or remote IP defined, or pattern does not match remote IP [{}]\", remoteIp);\n        return false;\n    }",
          "children": [
            {
              "type": "{",
              "start": {
                "row": 0,
                "column": 58
              },
              "end": {
                "row": 0,
                "column": 59
              },
              "text": "{"
            },
            {
              "type": "local_variable_declaration",
              "start": {
                "row": 1,
                "column": 8
              },
              "end": {
                "row": 1,
                "column": 63
              },
              "text": "val matcher = this.ipsToCheckPattern.matcher(remoteIp);",
              "children": [
                {
                  "type": "type_identifier",
                  "start": {
                    "row": 1,
                    "column": 8
                  },
                  "end": {
                    "row": 1,
                    "column": 11
                  },
                  "text": "val"
                },
                {
                  "type": "variable_declarator",
                  "start": {
                    "row": 1,
                    "column": 12
                  },
                  "end": {
                    "row": 1,
                    "column": 62
                  },
                  "text": "matcher = this.ipsToCheckPattern.matcher(remoteIp)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 1,
                        "column": 12
                      },
                      "end": {
                        "row": 1,
                        "column": 19
                      },
                      "text": "matcher"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 1,
                        "column": 20
                      },
                      "end": {
                        "row": 1,
                        "column": 21
                      },
                      "text": "="
                    },
                    {
                      "type": "method_invocation",
                      "start": {
                        "row": 1,
                        "column": 22
                      },
                      "end": {
                        "row": 1,
                        "column": 62
                      },
                      "text": "this.ipsToCheckPattern.matcher(remoteIp)",
                      "children": [
                        {
                          "type": "field_access",
                          "start": {
                            "row": 1,
                            "column": 22
                          },
                          "end": {
                            "row": 1,
                            "column": 44
                          },
                          "text": "this.ipsToCheckPattern",
                          "children": [
                            {
                              "type": "this",
                              "start": {
                                "row": 1,
                                "column": 22
                              },
                              "end": {
                                "row": 1,
                                "column": 26
                              },
                              "text": "this"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 1,
                                "column": 26
                              },
                              "end": {
                                "row": 1,
                                "column": 27
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 1,
                                "column": 27
                              },
                              "end": {
                                "row": 1,
                                "column": 44
                              },
                              "text": "ipsToCheckPattern"
                            }
                          ]
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 1,
                            "column": 44
                          },
                          "end": {
                            "row": 1,
                            "column": 45
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 1,
                            "column": 45
                          },
                          "end": {
                            "row": 1,
                            "column": 52
                          },
                          "text": "matcher"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 1,
                            "column": 52
                          },
                          "end": {
                            "row": 1,
                            "column": 62
                          },
                          "text": "(remoteIp)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 1,
                                "column": 52
                              },
                              "end": {
                                "row": 1,
                                "column": 53
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 1,
                                "column": 53
                              },
                              "end": {
                                "row": 1,
                                "column": 61
                              },
                              "text": "remoteIp"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 1,
                                "column": 61
                              },
                              "end": {
                                "row": 1,
                                "column": 62
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 1,
                    "column": 62
                  },
                  "end": {
                    "row": 1,
                    "column": 63
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 2,
                "column": 8
              },
              "end": {
                "row": 5,
                "column": 9
              },
              "text": "if (matcher.find()) {\n            LOGGER.debug(\"Remote IP address [{}] should be checked based on the defined pattern [{}]\", remoteIp, this.ipsToCheckPattern.pattern());\n            return true;\n        }",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 2,
                    "column": 8
                  },
                  "end": {
                    "row": 2,
                    "column": 10
                  },
                  "text": "if"
                },
                {
                  "type": "condition",
                  "start": {
                    "row": 2,
                    "column": 11
                  },
                  "end": {
                    "row": 2,
                    "column": 27
                  },
                  "text": "(matcher.find())",
                  "children": [
                    {
                      "type": "(",
                      "start": {
                        "row": 2,
                        "column": 11
                      },
                      "end": {
                        "row": 2,
                        "column": 12
                      },
                      "text": "("
                    },
                    {
                      "type": "method_invocation",
                      "start": {
                        "row": 2,
                        "column": 12
                      },
                      "end": {
                        "row": 2,
                        "column": 26
                      },
                      "text": "matcher.find()",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 2,
                            "column": 12
                          },
                          "end": {
                            "row": 2,
                            "column": 19
                          },
                          "text": "matcher"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 2,
                            "column": 19
                          },
                          "end": {
                            "row": 2,
                            "column": 20
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 2,
                            "column": 20
                          },
                          "end": {
                            "row": 2,
                            "column": 24
                          },
                          "text": "find"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 2,
                            "column": 24
                          },
                          "end": {
                            "row": 2,
                            "column": 26
                          },
                          "text": "()",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 2,
                                "column": 24
                              },
                              "end": {
                                "row": 2,
                                "column": 25
                              },
                              "text": "("
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 2,
                                "column": 25
                              },
                              "end": {
                                "row": 2,
                                "column": 26
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start": {
                        "row": 2,
                        "column": 26
                      },
                      "end": {
                        "row": 2,
                        "column": 27
                      },
                      "text": ")"
                    }
                  ]
                },
                {
                  "type": "block",
                  "start": {
                    "row": 2,
                    "column": 28
                  },
                  "end": {
                    "row": 5,
                    "column": 9
                  },
                  "text": "{\n            LOGGER.debug(\"Remote IP address [{}] should be checked based on the defined pattern [{}]\", remoteIp, this.ipsToCheckPattern.pattern());\n            return true;\n        }",
                  "children": [
                    {
                      "type": "{",
                      "start": {
                        "row": 2,
                        "column": 28
                      },
                      "end": {
                        "row": 2,
                        "column": 29
                      },
                      "text": "{"
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 3,
                        "column": 12
                      },
                      "end": {
                        "row": 3,
                        "column": 147
                      },
                      "text": "LOGGER.debug(\"Remote IP address [{}] should be checked based on the defined pattern [{}]\", remoteIp, this.ipsToCheckPattern.pattern());",
                      "children": [
                        {
                          "type": "method_invocation",
                          "start": {
                            "row": 3,
                            "column": 12
                          },
                          "end": {
                            "row": 3,
                            "column": 146
                          },
                          "text": "LOGGER.debug(\"Remote IP address [{}] should be checked based on the defined pattern [{}]\", remoteIp, this.ipsToCheckPattern.pattern())",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 3,
                                "column": 12
                              },
                              "end": {
                                "row": 3,
                                "column": 18
                              },
                              "text": "LOGGER"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 3,
                                "column": 18
                              },
                              "end": {
                                "row": 3,
                                "column": 19
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 3,
                                "column": 19
                              },
                              "end": {
                                "row": 3,
                                "column": 24
                              },
                              "text": "debug"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 3,
                                "column": 24
                              },
                              "end": {
                                "row": 3,
                                "column": 146
                              },
                              "text": "(\"Remote IP address [{}] should be checked based on the defined pattern [{}]\", remoteIp, this.ipsToCheckPattern.pattern())",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 3,
                                    "column": 24
                                  },
                                  "end": {
                                    "row": 3,
                                    "column": 25
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "string_literal",
                                  "start": {
                                    "row": 3,
                                    "column": 25
                                  },
                                  "end": {
                                    "row": 3,
                                    "column": 101
                                  },
                                  "text": "\"Remote IP address [{}] should be checked based on the defined pattern [{}]\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start": {
                                        "row": 3,
                                        "column": 25
                                      },
                                      "end": {
                                        "row": 3,
                                        "column": 26
                                      },
                                      "text": "\""
                                    },
                                    {
                                      "type": "string_fragment",
                                      "start": {
                                        "row": 3,
                                        "column": 26
                                      },
                                      "end": {
                                        "row": 3,
                                        "column": 100
                                      },
                                      "text": "Remote IP address [{}] should be checked based on the defined pattern [{}]"
                                    },
                                    {
                                      "type": "\"",
                                      "start": {
                                        "row": 3,
                                        "column": 100
                                      },
                                      "end": {
                                        "row": 3,
                                        "column": 101
                                      },
                                      "text": "\""
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 3,
                                    "column": 101
                                  },
                                  "end": {
                                    "row": 3,
                                    "column": 102
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 3,
                                    "column": 103
                                  },
                                  "end": {
                                    "row": 3,
                                    "column": 111
                                  },
                                  "text": "remoteIp"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 3,
                                    "column": 111
                                  },
                                  "end": {
                                    "row": 3,
                                    "column": 112
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "method_invocation",
                                  "start": {
                                    "row": 3,
                                    "column": 113
                                  },
                                  "end": {
                                    "row": 3,
                                    "column": 145
                                  },
                                  "text": "this.ipsToCheckPattern.pattern()",
                                  "children": [
                                    {
                                      "type": "field_access",
                                      "start": {
                                        "row": 3,
                                        "column": 113
                                      },
                                      "end": {
                                        "row": 3,
                                        "column": 135
                                      },
                                      "text": "this.ipsToCheckPattern",
                                      "children": [
                                        {
                                          "type": "this",
                                          "start": {
                                            "row": 3,
                                            "column": 113
                                          },
                                          "end": {
                                            "row": 3,
                                            "column": 117
                                          },
                                          "text": "this"
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 3,
                                            "column": 117
                                          },
                                          "end": {
                                            "row": 3,
                                            "column": 118
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 3,
                                            "column": 118
                                          },
                                          "end": {
                                            "row": 3,
                                            "column": 135
                                          },
                                          "text": "ipsToCheckPattern"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 3,
                                        "column": 135
                                      },
                                      "end": {
                                        "row": 3,
                                        "column": 136
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 3,
                                        "column": 136
                                      },
                                      "end": {
                                        "row": 3,
                                        "column": 143
                                      },
                                      "text": "pattern"
                                    },
                                    {
                                      "type": "argument_list",
                                      "start": {
                                        "row": 3,
                                        "column": 143
                                      },
                                      "end": {
                                        "row": 3,
                                        "column": 145
                                      },
                                      "text": "()",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 3,
                                            "column": 143
                                          },
                                          "end": {
                                            "row": 3,
                                            "column": 144
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 3,
                                            "column": 144
                                          },
                                          "end": {
                                            "row": 3,
                                            "column": 145
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 3,
                                    "column": 145
                                  },
                                  "end": {
                                    "row": 3,
                                    "column": 146
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start": {
                            "row": 3,
                            "column": 146
                          },
                          "end": {
                            "row": 3,
                            "column": 147
                          },
                          "text": ";"
                        }
                      ]
                    },
                    {
                      "type": "return_statement",
                      "start": {
                        "row": 4,
                        "column": 12
                      },
                      "end": {
                        "row": 4,
                        "column": 24
                      },
                      "text": "return true;",
                      "children": [
                        {
                          "type": "return",
                          "start": {
                            "row": 4,
                            "column": 12
                          },
                          "end": {
                            "row": 4,
                            "column": 18
                          },
                          "text": "return"
                        },
                        {
                          "type": "true",
                          "start": {
                            "row": 4,
                            "column": 19
                          },
                          "end": {
                            "row": 4,
                            "column": 23
                          },
                          "text": "true"
                        },
                        {
                          "type": ";",
                          "start": {
                            "row": 4,
                            "column": 23
                          },
                          "end": {
                            "row": 4,
                            "column": 24
                          },
                          "text": ";"
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start": {
                        "row": 5,
                        "column": 8
                      },
                      "end": {
                        "row": 5,
                        "column": 9
                      },
                      "text": "}"
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 6,
                "column": 8
              },
              "end": {
                "row": 6,
                "column": 108
              },
              "text": "LOGGER.debug(\"No pattern or remote IP defined, or pattern does not match remote IP [{}]\", remoteIp);",
              "children": [
                {
                  "type": "method_invocation",
                  "start": {
                    "row": 6,
                    "column": 8
                  },
                  "end": {
                    "row": 6,
                    "column": 107
                  },
                  "text": "LOGGER.debug(\"No pattern or remote IP defined, or pattern does not match remote IP [{}]\", remoteIp)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 6,
                        "column": 8
                      },
                      "end": {
                        "row": 6,
                        "column": 14
                      },
                      "text": "LOGGER"
                    },
                    {
                      "type": ".",
                      "start": {
                        "row": 6,
                        "column": 14
                      },
                      "end": {
                        "row": 6,
                        "column": 15
                      },
                      "text": "."
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 6,
                        "column": 15
                      },
                      "end": {
                        "row": 6,
                        "column": 20
                      },
                      "text": "debug"
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 6,
                        "column": 20
                      },
                      "end": {
                        "row": 6,
                        "column": 107
                      },
                      "text": "(\"No pattern or remote IP defined, or pattern does not match remote IP [{}]\", remoteIp)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 6,
                            "column": 20
                          },
                          "end": {
                            "row": 6,
                            "column": 21
                          },
                          "text": "("
                        },
                        {
                          "type": "string_literal",
                          "start": {
                            "row": 6,
                            "column": 21
                          },
                          "end": {
                            "row": 6,
                            "column": 96
                          },
                          "text": "\"No pattern or remote IP defined, or pattern does not match remote IP [{}]\"",
                          "children": [
                            {
                              "type": "\"",
                              "start": {
                                "row": 6,
                                "column": 21
                              },
                              "end": {
                                "row": 6,
                                "column": 22
                              },
                              "text": "\""
                            },
                            {
                              "type": "string_fragment",
                              "start": {
                                "row": 6,
                                "column": 22
                              },
                              "end": {
                                "row": 6,
                                "column": 95
                              },
                              "text": "No pattern or remote IP defined, or pattern does not match remote IP [{}]"
                            },
                            {
                              "type": "\"",
                              "start": {
                                "row": 6,
                                "column": 95
                              },
                              "end": {
                                "row": 6,
                                "column": 96
                              },
                              "text": "\""
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 6,
                            "column": 96
                          },
                          "end": {
                            "row": 6,
                            "column": 97
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 6,
                            "column": 98
                          },
                          "end": {
                            "row": 6,
                            "column": 106
                          },
                          "text": "remoteIp"
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 6,
                            "column": 106
                          },
                          "end": {
                            "row": 6,
                            "column": 107
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 6,
                    "column": 107
                  },
                  "end": {
                    "row": 6,
                    "column": 108
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 7,
                "column": 8
              },
              "end": {
                "row": 7,
                "column": 21
              },
              "text": "return false;",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 7,
                    "column": 8
                  },
                  "end": {
                    "row": 7,
                    "column": 14
                  },
                  "text": "return"
                },
                {
                  "type": "false",
                  "start": {
                    "row": 7,
                    "column": 15
                  },
                  "end": {
                    "row": 7,
                    "column": 20
                  },
                  "text": "false"
                },
                {
                  "type": ";",
                  "start": {
                    "row": 7,
                    "column": 20
                  },
                  "end": {
                    "row": 7,
                    "column": 21
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "}",
              "start": {
                "row": 8,
                "column": 4
              },
              "end": {
                "row": 8,
                "column": 5
              },
              "text": "}"
            }
          ]
        }
      ]
    }
  ]
}