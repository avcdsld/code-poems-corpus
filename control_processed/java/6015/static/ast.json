{
  "type": "program",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 35,
    "column": 2
  },
  "text": "public void snapshotState(StateSnapshotContext context) throws Exception {\n\t\tfinal KeyedStateBackend<?> keyedStateBackend = getKeyedStateBackend();\n\t\t//TODO all of this can be removed once heap-based timers are integrated with RocksDB incremental snapshots\n\t\tif (keyedStateBackend instanceof AbstractKeyedStateBackend &&\n\t\t\t((AbstractKeyedStateBackend<?>) keyedStateBackend).requiresLegacySynchronousTimerSnapshots()) {\n\n\t\t\tKeyedStateCheckpointOutputStream out;\n\n\t\t\ttry {\n\t\t\t\tout = context.getRawKeyedOperatorStateOutput();\n\t\t\t} catch (Exception exception) {\n\t\t\t\tthrow new Exception(\"Could not open raw keyed operator state stream for \" +\n\t\t\t\t\tgetOperatorName() + '.', exception);\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tKeyGroupsList allKeyGroups = out.getKeyGroupList();\n\t\t\t\tfor (int keyGroupIdx : allKeyGroups) {\n\t\t\t\t\tout.startNewKeyGroup(keyGroupIdx);\n\n\t\t\t\t\ttimeServiceManager.snapshotStateForKeyGroup(\n\t\t\t\t\t\tnew DataOutputViewStreamWrapper(out), keyGroupIdx);\n\t\t\t\t}\n\t\t\t} catch (Exception exception) {\n\t\t\t\tthrow new Exception(\"Could not write timer service of \" + getOperatorName() +\n\t\t\t\t\t\" to checkpoint state stream.\", exception);\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tout.close();\n\t\t\t\t} catch (Exception closeException) {\n\t\t\t\t\tLOG.warn(\"Could not close raw keyed operator state stream for {}. This \" +\n\t\t\t\t\t\t\"might have prevented deleting some state data.\", getOperatorName(), closeException);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}",
  "children": [
    {
      "type": "method_declaration",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 35,
        "column": 2
      },
      "text": "public void snapshotState(StateSnapshotContext context) throws Exception {\n\t\tfinal KeyedStateBackend<?> keyedStateBackend = getKeyedStateBackend();\n\t\t//TODO all of this can be removed once heap-based timers are integrated with RocksDB incremental snapshots\n\t\tif (keyedStateBackend instanceof AbstractKeyedStateBackend &&\n\t\t\t((AbstractKeyedStateBackend<?>) keyedStateBackend).requiresLegacySynchronousTimerSnapshots()) {\n\n\t\t\tKeyedStateCheckpointOutputStream out;\n\n\t\t\ttry {\n\t\t\t\tout = context.getRawKeyedOperatorStateOutput();\n\t\t\t} catch (Exception exception) {\n\t\t\t\tthrow new Exception(\"Could not open raw keyed operator state stream for \" +\n\t\t\t\t\tgetOperatorName() + '.', exception);\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tKeyGroupsList allKeyGroups = out.getKeyGroupList();\n\t\t\t\tfor (int keyGroupIdx : allKeyGroups) {\n\t\t\t\t\tout.startNewKeyGroup(keyGroupIdx);\n\n\t\t\t\t\ttimeServiceManager.snapshotStateForKeyGroup(\n\t\t\t\t\t\tnew DataOutputViewStreamWrapper(out), keyGroupIdx);\n\t\t\t\t}\n\t\t\t} catch (Exception exception) {\n\t\t\t\tthrow new Exception(\"Could not write timer service of \" + getOperatorName() +\n\t\t\t\t\t\" to checkpoint state stream.\", exception);\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tout.close();\n\t\t\t\t} catch (Exception closeException) {\n\t\t\t\t\tLOG.warn(\"Could not close raw keyed operator state stream for {}. This \" +\n\t\t\t\t\t\t\"might have prevented deleting some state data.\", getOperatorName(), closeException);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}",
      "children": [
        {
          "type": "modifiers",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 6
          },
          "text": "public",
          "children": [
            {
              "type": "public",
              "start": {
                "row": 0,
                "column": 0
              },
              "end": {
                "row": 0,
                "column": 6
              },
              "text": "public"
            }
          ]
        },
        {
          "type": "void_type",
          "start": {
            "row": 0,
            "column": 7
          },
          "end": {
            "row": 0,
            "column": 11
          },
          "text": "void"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 12
          },
          "end": {
            "row": 0,
            "column": 25
          },
          "text": "snapshotState"
        },
        {
          "type": "formal_parameters",
          "start": {
            "row": 0,
            "column": 25
          },
          "end": {
            "row": 0,
            "column": 55
          },
          "text": "(StateSnapshotContext context)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 25
              },
              "end": {
                "row": 0,
                "column": 26
              },
              "text": "("
            },
            {
              "type": "formal_parameter",
              "start": {
                "row": 0,
                "column": 26
              },
              "end": {
                "row": 0,
                "column": 54
              },
              "text": "StateSnapshotContext context",
              "children": [
                {
                  "type": "type_identifier",
                  "start": {
                    "row": 0,
                    "column": 26
                  },
                  "end": {
                    "row": 0,
                    "column": 46
                  },
                  "text": "StateSnapshotContext"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 47
                  },
                  "end": {
                    "row": 0,
                    "column": 54
                  },
                  "text": "context"
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 54
              },
              "end": {
                "row": 0,
                "column": 55
              },
              "text": ")"
            }
          ]
        },
        {
          "type": "throws",
          "start": {
            "row": 0,
            "column": 56
          },
          "end": {
            "row": 0,
            "column": 72
          },
          "text": "throws Exception",
          "children": [
            {
              "type": "throws",
              "start": {
                "row": 0,
                "column": 56
              },
              "end": {
                "row": 0,
                "column": 62
              },
              "text": "throws"
            },
            {
              "type": "type_identifier",
              "start": {
                "row": 0,
                "column": 63
              },
              "end": {
                "row": 0,
                "column": 72
              },
              "text": "Exception"
            }
          ]
        },
        {
          "type": "block",
          "start": {
            "row": 0,
            "column": 73
          },
          "end": {
            "row": 35,
            "column": 2
          },
          "text": "{\n\t\tfinal KeyedStateBackend<?> keyedStateBackend = getKeyedStateBackend();\n\t\t//TODO all of this can be removed once heap-based timers are integrated with RocksDB incremental snapshots\n\t\tif (keyedStateBackend instanceof AbstractKeyedStateBackend &&\n\t\t\t((AbstractKeyedStateBackend<?>) keyedStateBackend).requiresLegacySynchronousTimerSnapshots()) {\n\n\t\t\tKeyedStateCheckpointOutputStream out;\n\n\t\t\ttry {\n\t\t\t\tout = context.getRawKeyedOperatorStateOutput();\n\t\t\t} catch (Exception exception) {\n\t\t\t\tthrow new Exception(\"Could not open raw keyed operator state stream for \" +\n\t\t\t\t\tgetOperatorName() + '.', exception);\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tKeyGroupsList allKeyGroups = out.getKeyGroupList();\n\t\t\t\tfor (int keyGroupIdx : allKeyGroups) {\n\t\t\t\t\tout.startNewKeyGroup(keyGroupIdx);\n\n\t\t\t\t\ttimeServiceManager.snapshotStateForKeyGroup(\n\t\t\t\t\t\tnew DataOutputViewStreamWrapper(out), keyGroupIdx);\n\t\t\t\t}\n\t\t\t} catch (Exception exception) {\n\t\t\t\tthrow new Exception(\"Could not write timer service of \" + getOperatorName() +\n\t\t\t\t\t\" to checkpoint state stream.\", exception);\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tout.close();\n\t\t\t\t} catch (Exception closeException) {\n\t\t\t\t\tLOG.warn(\"Could not close raw keyed operator state stream for {}. This \" +\n\t\t\t\t\t\t\"might have prevented deleting some state data.\", getOperatorName(), closeException);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}",
          "children": [
            {
              "type": "{",
              "start": {
                "row": 0,
                "column": 73
              },
              "end": {
                "row": 0,
                "column": 74
              },
              "text": "{"
            },
            {
              "type": "local_variable_declaration",
              "start": {
                "row": 1,
                "column": 2
              },
              "end": {
                "row": 1,
                "column": 72
              },
              "text": "final KeyedStateBackend<?> keyedStateBackend = getKeyedStateBackend();",
              "children": [
                {
                  "type": "modifiers",
                  "start": {
                    "row": 1,
                    "column": 2
                  },
                  "end": {
                    "row": 1,
                    "column": 7
                  },
                  "text": "final",
                  "children": [
                    {
                      "type": "final",
                      "start": {
                        "row": 1,
                        "column": 2
                      },
                      "end": {
                        "row": 1,
                        "column": 7
                      },
                      "text": "final"
                    }
                  ]
                },
                {
                  "type": "generic_type",
                  "start": {
                    "row": 1,
                    "column": 8
                  },
                  "end": {
                    "row": 1,
                    "column": 28
                  },
                  "text": "KeyedStateBackend<?>",
                  "children": [
                    {
                      "type": "type_identifier",
                      "start": {
                        "row": 1,
                        "column": 8
                      },
                      "end": {
                        "row": 1,
                        "column": 25
                      },
                      "text": "KeyedStateBackend"
                    },
                    {
                      "type": "type_arguments",
                      "start": {
                        "row": 1,
                        "column": 25
                      },
                      "end": {
                        "row": 1,
                        "column": 28
                      },
                      "text": "<?>",
                      "children": [
                        {
                          "type": "<",
                          "start": {
                            "row": 1,
                            "column": 25
                          },
                          "end": {
                            "row": 1,
                            "column": 26
                          },
                          "text": "<"
                        },
                        {
                          "type": "wildcard",
                          "start": {
                            "row": 1,
                            "column": 26
                          },
                          "end": {
                            "row": 1,
                            "column": 27
                          },
                          "text": "?",
                          "children": [
                            {
                              "type": "?",
                              "start": {
                                "row": 1,
                                "column": 26
                              },
                              "end": {
                                "row": 1,
                                "column": 27
                              },
                              "text": "?"
                            }
                          ]
                        },
                        {
                          "type": ">",
                          "start": {
                            "row": 1,
                            "column": 27
                          },
                          "end": {
                            "row": 1,
                            "column": 28
                          },
                          "text": ">"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "variable_declarator",
                  "start": {
                    "row": 1,
                    "column": 29
                  },
                  "end": {
                    "row": 1,
                    "column": 71
                  },
                  "text": "keyedStateBackend = getKeyedStateBackend()",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 1,
                        "column": 29
                      },
                      "end": {
                        "row": 1,
                        "column": 46
                      },
                      "text": "keyedStateBackend"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 1,
                        "column": 47
                      },
                      "end": {
                        "row": 1,
                        "column": 48
                      },
                      "text": "="
                    },
                    {
                      "type": "method_invocation",
                      "start": {
                        "row": 1,
                        "column": 49
                      },
                      "end": {
                        "row": 1,
                        "column": 71
                      },
                      "text": "getKeyedStateBackend()",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 1,
                            "column": 49
                          },
                          "end": {
                            "row": 1,
                            "column": 69
                          },
                          "text": "getKeyedStateBackend"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 1,
                            "column": 69
                          },
                          "end": {
                            "row": 1,
                            "column": 71
                          },
                          "text": "()",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 1,
                                "column": 69
                              },
                              "end": {
                                "row": 1,
                                "column": 70
                              },
                              "text": "("
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 1,
                                "column": 70
                              },
                              "end": {
                                "row": 1,
                                "column": 71
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 1,
                    "column": 71
                  },
                  "end": {
                    "row": 1,
                    "column": 72
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "line_comment",
              "start": {
                "row": 2,
                "column": 2
              },
              "end": {
                "row": 2,
                "column": 108
              },
              "text": "//TODO all of this can be removed once heap-based timers are integrated with RocksDB incremental snapshots"
            },
            {
              "type": "if_statement",
              "start": {
                "row": 3,
                "column": 2
              },
              "end": {
                "row": 34,
                "column": 3
              },
              "text": "if (keyedStateBackend instanceof AbstractKeyedStateBackend &&\n\t\t\t((AbstractKeyedStateBackend<?>) keyedStateBackend).requiresLegacySynchronousTimerSnapshots()) {\n\n\t\t\tKeyedStateCheckpointOutputStream out;\n\n\t\t\ttry {\n\t\t\t\tout = context.getRawKeyedOperatorStateOutput();\n\t\t\t} catch (Exception exception) {\n\t\t\t\tthrow new Exception(\"Could not open raw keyed operator state stream for \" +\n\t\t\t\t\tgetOperatorName() + '.', exception);\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tKeyGroupsList allKeyGroups = out.getKeyGroupList();\n\t\t\t\tfor (int keyGroupIdx : allKeyGroups) {\n\t\t\t\t\tout.startNewKeyGroup(keyGroupIdx);\n\n\t\t\t\t\ttimeServiceManager.snapshotStateForKeyGroup(\n\t\t\t\t\t\tnew DataOutputViewStreamWrapper(out), keyGroupIdx);\n\t\t\t\t}\n\t\t\t} catch (Exception exception) {\n\t\t\t\tthrow new Exception(\"Could not write timer service of \" + getOperatorName() +\n\t\t\t\t\t\" to checkpoint state stream.\", exception);\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tout.close();\n\t\t\t\t} catch (Exception closeException) {\n\t\t\t\t\tLOG.warn(\"Could not close raw keyed operator state stream for {}. This \" +\n\t\t\t\t\t\t\"might have prevented deleting some state data.\", getOperatorName(), closeException);\n\t\t\t\t}\n\t\t\t}\n\t\t}",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 3,
                    "column": 2
                  },
                  "end": {
                    "row": 3,
                    "column": 4
                  },
                  "text": "if"
                },
                {
                  "type": "condition",
                  "start": {
                    "row": 3,
                    "column": 5
                  },
                  "end": {
                    "row": 4,
                    "column": 96
                  },
                  "text": "(keyedStateBackend instanceof AbstractKeyedStateBackend &&\n\t\t\t((AbstractKeyedStateBackend<?>) keyedStateBackend).requiresLegacySynchronousTimerSnapshots())",
                  "children": [
                    {
                      "type": "(",
                      "start": {
                        "row": 3,
                        "column": 5
                      },
                      "end": {
                        "row": 3,
                        "column": 6
                      },
                      "text": "("
                    },
                    {
                      "type": "binary_expression",
                      "start": {
                        "row": 3,
                        "column": 6
                      },
                      "end": {
                        "row": 4,
                        "column": 95
                      },
                      "text": "keyedStateBackend instanceof AbstractKeyedStateBackend &&\n\t\t\t((AbstractKeyedStateBackend<?>) keyedStateBackend).requiresLegacySynchronousTimerSnapshots()",
                      "children": [
                        {
                          "type": "instanceof_expression",
                          "start": {
                            "row": 3,
                            "column": 6
                          },
                          "end": {
                            "row": 3,
                            "column": 60
                          },
                          "text": "keyedStateBackend instanceof AbstractKeyedStateBackend",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 3,
                                "column": 6
                              },
                              "end": {
                                "row": 3,
                                "column": 23
                              },
                              "text": "keyedStateBackend"
                            },
                            {
                              "type": "instanceof",
                              "start": {
                                "row": 3,
                                "column": 24
                              },
                              "end": {
                                "row": 3,
                                "column": 34
                              },
                              "text": "instanceof"
                            },
                            {
                              "type": "type_identifier",
                              "start": {
                                "row": 3,
                                "column": 35
                              },
                              "end": {
                                "row": 3,
                                "column": 60
                              },
                              "text": "AbstractKeyedStateBackend"
                            }
                          ]
                        },
                        {
                          "type": "&&",
                          "start": {
                            "row": 3,
                            "column": 61
                          },
                          "end": {
                            "row": 3,
                            "column": 63
                          },
                          "text": "&&"
                        },
                        {
                          "type": "method_invocation",
                          "start": {
                            "row": 4,
                            "column": 3
                          },
                          "end": {
                            "row": 4,
                            "column": 95
                          },
                          "text": "((AbstractKeyedStateBackend<?>) keyedStateBackend).requiresLegacySynchronousTimerSnapshots()",
                          "children": [
                            {
                              "type": "parenthesized_expression",
                              "start": {
                                "row": 4,
                                "column": 3
                              },
                              "end": {
                                "row": 4,
                                "column": 53
                              },
                              "text": "((AbstractKeyedStateBackend<?>) keyedStateBackend)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 4,
                                    "column": 3
                                  },
                                  "end": {
                                    "row": 4,
                                    "column": 4
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "cast_expression",
                                  "start": {
                                    "row": 4,
                                    "column": 4
                                  },
                                  "end": {
                                    "row": 4,
                                    "column": 52
                                  },
                                  "text": "(AbstractKeyedStateBackend<?>) keyedStateBackend",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 4,
                                        "column": 4
                                      },
                                      "end": {
                                        "row": 4,
                                        "column": 5
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "generic_type",
                                      "start": {
                                        "row": 4,
                                        "column": 5
                                      },
                                      "end": {
                                        "row": 4,
                                        "column": 33
                                      },
                                      "text": "AbstractKeyedStateBackend<?>",
                                      "children": [
                                        {
                                          "type": "type_identifier",
                                          "start": {
                                            "row": 4,
                                            "column": 5
                                          },
                                          "end": {
                                            "row": 4,
                                            "column": 30
                                          },
                                          "text": "AbstractKeyedStateBackend"
                                        },
                                        {
                                          "type": "type_arguments",
                                          "start": {
                                            "row": 4,
                                            "column": 30
                                          },
                                          "end": {
                                            "row": 4,
                                            "column": 33
                                          },
                                          "text": "<?>",
                                          "children": [
                                            {
                                              "type": "<",
                                              "start": {
                                                "row": 4,
                                                "column": 30
                                              },
                                              "end": {
                                                "row": 4,
                                                "column": 31
                                              },
                                              "text": "<"
                                            },
                                            {
                                              "type": "wildcard",
                                              "start": {
                                                "row": 4,
                                                "column": 31
                                              },
                                              "end": {
                                                "row": 4,
                                                "column": 32
                                              },
                                              "text": "?",
                                              "children": [
                                                {
                                                  "type": "?",
                                                  "start": {
                                                    "row": 4,
                                                    "column": 31
                                                  },
                                                  "end": {
                                                    "row": 4,
                                                    "column": 32
                                                  },
                                                  "text": "?"
                                                }
                                              ]
                                            },
                                            {
                                              "type": ">",
                                              "start": {
                                                "row": 4,
                                                "column": 32
                                              },
                                              "end": {
                                                "row": 4,
                                                "column": 33
                                              },
                                              "text": ">"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 4,
                                        "column": 33
                                      },
                                      "end": {
                                        "row": 4,
                                        "column": 34
                                      },
                                      "text": ")"
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 4,
                                        "column": 35
                                      },
                                      "end": {
                                        "row": 4,
                                        "column": 52
                                      },
                                      "text": "keyedStateBackend"
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 4,
                                    "column": 52
                                  },
                                  "end": {
                                    "row": 4,
                                    "column": 53
                                  },
                                  "text": ")"
                                }
                              ]
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 4,
                                "column": 53
                              },
                              "end": {
                                "row": 4,
                                "column": 54
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 4,
                                "column": 54
                              },
                              "end": {
                                "row": 4,
                                "column": 93
                              },
                              "text": "requiresLegacySynchronousTimerSnapshots"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 4,
                                "column": 93
                              },
                              "end": {
                                "row": 4,
                                "column": 95
                              },
                              "text": "()",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 4,
                                    "column": 93
                                  },
                                  "end": {
                                    "row": 4,
                                    "column": 94
                                  },
                                  "text": "("
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 4,
                                    "column": 94
                                  },
                                  "end": {
                                    "row": 4,
                                    "column": 95
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start": {
                        "row": 4,
                        "column": 95
                      },
                      "end": {
                        "row": 4,
                        "column": 96
                      },
                      "text": ")"
                    }
                  ]
                },
                {
                  "type": "block",
                  "start": {
                    "row": 4,
                    "column": 97
                  },
                  "end": {
                    "row": 34,
                    "column": 3
                  },
                  "text": "{\n\n\t\t\tKeyedStateCheckpointOutputStream out;\n\n\t\t\ttry {\n\t\t\t\tout = context.getRawKeyedOperatorStateOutput();\n\t\t\t} catch (Exception exception) {\n\t\t\t\tthrow new Exception(\"Could not open raw keyed operator state stream for \" +\n\t\t\t\t\tgetOperatorName() + '.', exception);\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tKeyGroupsList allKeyGroups = out.getKeyGroupList();\n\t\t\t\tfor (int keyGroupIdx : allKeyGroups) {\n\t\t\t\t\tout.startNewKeyGroup(keyGroupIdx);\n\n\t\t\t\t\ttimeServiceManager.snapshotStateForKeyGroup(\n\t\t\t\t\t\tnew DataOutputViewStreamWrapper(out), keyGroupIdx);\n\t\t\t\t}\n\t\t\t} catch (Exception exception) {\n\t\t\t\tthrow new Exception(\"Could not write timer service of \" + getOperatorName() +\n\t\t\t\t\t\" to checkpoint state stream.\", exception);\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tout.close();\n\t\t\t\t} catch (Exception closeException) {\n\t\t\t\t\tLOG.warn(\"Could not close raw keyed operator state stream for {}. This \" +\n\t\t\t\t\t\t\"might have prevented deleting some state data.\", getOperatorName(), closeException);\n\t\t\t\t}\n\t\t\t}\n\t\t}",
                  "children": [
                    {
                      "type": "{",
                      "start": {
                        "row": 4,
                        "column": 97
                      },
                      "end": {
                        "row": 4,
                        "column": 98
                      },
                      "text": "{"
                    },
                    {
                      "type": "local_variable_declaration",
                      "start": {
                        "row": 6,
                        "column": 3
                      },
                      "end": {
                        "row": 6,
                        "column": 40
                      },
                      "text": "KeyedStateCheckpointOutputStream out;",
                      "children": [
                        {
                          "type": "type_identifier",
                          "start": {
                            "row": 6,
                            "column": 3
                          },
                          "end": {
                            "row": 6,
                            "column": 35
                          },
                          "text": "KeyedStateCheckpointOutputStream"
                        },
                        {
                          "type": "variable_declarator",
                          "start": {
                            "row": 6,
                            "column": 36
                          },
                          "end": {
                            "row": 6,
                            "column": 39
                          },
                          "text": "out",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 6,
                                "column": 36
                              },
                              "end": {
                                "row": 6,
                                "column": 39
                              },
                              "text": "out"
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start": {
                            "row": 6,
                            "column": 39
                          },
                          "end": {
                            "row": 6,
                            "column": 40
                          },
                          "text": ";"
                        }
                      ]
                    },
                    {
                      "type": "try_statement",
                      "start": {
                        "row": 8,
                        "column": 3
                      },
                      "end": {
                        "row": 13,
                        "column": 4
                      },
                      "text": "try {\n\t\t\t\tout = context.getRawKeyedOperatorStateOutput();\n\t\t\t} catch (Exception exception) {\n\t\t\t\tthrow new Exception(\"Could not open raw keyed operator state stream for \" +\n\t\t\t\t\tgetOperatorName() + '.', exception);\n\t\t\t}",
                      "children": [
                        {
                          "type": "try",
                          "start": {
                            "row": 8,
                            "column": 3
                          },
                          "end": {
                            "row": 8,
                            "column": 6
                          },
                          "text": "try"
                        },
                        {
                          "type": "block",
                          "start": {
                            "row": 8,
                            "column": 7
                          },
                          "end": {
                            "row": 10,
                            "column": 4
                          },
                          "text": "{\n\t\t\t\tout = context.getRawKeyedOperatorStateOutput();\n\t\t\t}",
                          "children": [
                            {
                              "type": "{",
                              "start": {
                                "row": 8,
                                "column": 7
                              },
                              "end": {
                                "row": 8,
                                "column": 8
                              },
                              "text": "{"
                            },
                            {
                              "type": "expression_statement",
                              "start": {
                                "row": 9,
                                "column": 4
                              },
                              "end": {
                                "row": 9,
                                "column": 51
                              },
                              "text": "out = context.getRawKeyedOperatorStateOutput();",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start": {
                                    "row": 9,
                                    "column": 4
                                  },
                                  "end": {
                                    "row": 9,
                                    "column": 50
                                  },
                                  "text": "out = context.getRawKeyedOperatorStateOutput()",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 9,
                                        "column": 4
                                      },
                                      "end": {
                                        "row": 9,
                                        "column": 7
                                      },
                                      "text": "out"
                                    },
                                    {
                                      "type": "=",
                                      "start": {
                                        "row": 9,
                                        "column": 8
                                      },
                                      "end": {
                                        "row": 9,
                                        "column": 9
                                      },
                                      "text": "="
                                    },
                                    {
                                      "type": "method_invocation",
                                      "start": {
                                        "row": 9,
                                        "column": 10
                                      },
                                      "end": {
                                        "row": 9,
                                        "column": 50
                                      },
                                      "text": "context.getRawKeyedOperatorStateOutput()",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 9,
                                            "column": 10
                                          },
                                          "end": {
                                            "row": 9,
                                            "column": 17
                                          },
                                          "text": "context"
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 9,
                                            "column": 17
                                          },
                                          "end": {
                                            "row": 9,
                                            "column": 18
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 9,
                                            "column": 18
                                          },
                                          "end": {
                                            "row": 9,
                                            "column": 48
                                          },
                                          "text": "getRawKeyedOperatorStateOutput"
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 9,
                                            "column": 48
                                          },
                                          "end": {
                                            "row": 9,
                                            "column": 50
                                          },
                                          "text": "()",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 9,
                                                "column": 48
                                              },
                                              "end": {
                                                "row": 9,
                                                "column": 49
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 9,
                                                "column": 49
                                              },
                                              "end": {
                                                "row": 9,
                                                "column": 50
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start": {
                                    "row": 9,
                                    "column": 50
                                  },
                                  "end": {
                                    "row": 9,
                                    "column": 51
                                  },
                                  "text": ";"
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start": {
                                "row": 10,
                                "column": 3
                              },
                              "end": {
                                "row": 10,
                                "column": 4
                              },
                              "text": "}"
                            }
                          ]
                        },
                        {
                          "type": "catch_clause",
                          "start": {
                            "row": 10,
                            "column": 5
                          },
                          "end": {
                            "row": 13,
                            "column": 4
                          },
                          "text": "catch (Exception exception) {\n\t\t\t\tthrow new Exception(\"Could not open raw keyed operator state stream for \" +\n\t\t\t\t\tgetOperatorName() + '.', exception);\n\t\t\t}",
                          "children": [
                            {
                              "type": "catch",
                              "start": {
                                "row": 10,
                                "column": 5
                              },
                              "end": {
                                "row": 10,
                                "column": 10
                              },
                              "text": "catch"
                            },
                            {
                              "type": "(",
                              "start": {
                                "row": 10,
                                "column": 11
                              },
                              "end": {
                                "row": 10,
                                "column": 12
                              },
                              "text": "("
                            },
                            {
                              "type": "catch_formal_parameter",
                              "start": {
                                "row": 10,
                                "column": 12
                              },
                              "end": {
                                "row": 10,
                                "column": 31
                              },
                              "text": "Exception exception",
                              "children": [
                                {
                                  "type": "catch_type",
                                  "start": {
                                    "row": 10,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 10,
                                    "column": 21
                                  },
                                  "text": "Exception",
                                  "children": [
                                    {
                                      "type": "type_identifier",
                                      "start": {
                                        "row": 10,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 10,
                                        "column": 21
                                      },
                                      "text": "Exception"
                                    }
                                  ]
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 10,
                                    "column": 22
                                  },
                                  "end": {
                                    "row": 10,
                                    "column": 31
                                  },
                                  "text": "exception"
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 10,
                                "column": 31
                              },
                              "end": {
                                "row": 10,
                                "column": 32
                              },
                              "text": ")"
                            },
                            {
                              "type": "block",
                              "start": {
                                "row": 10,
                                "column": 33
                              },
                              "end": {
                                "row": 13,
                                "column": 4
                              },
                              "text": "{\n\t\t\t\tthrow new Exception(\"Could not open raw keyed operator state stream for \" +\n\t\t\t\t\tgetOperatorName() + '.', exception);\n\t\t\t}",
                              "children": [
                                {
                                  "type": "{",
                                  "start": {
                                    "row": 10,
                                    "column": 33
                                  },
                                  "end": {
                                    "row": 10,
                                    "column": 34
                                  },
                                  "text": "{"
                                },
                                {
                                  "type": "throw_statement",
                                  "start": {
                                    "row": 11,
                                    "column": 4
                                  },
                                  "end": {
                                    "row": 12,
                                    "column": 41
                                  },
                                  "text": "throw new Exception(\"Could not open raw keyed operator state stream for \" +\n\t\t\t\t\tgetOperatorName() + '.', exception);",
                                  "children": [
                                    {
                                      "type": "throw",
                                      "start": {
                                        "row": 11,
                                        "column": 4
                                      },
                                      "end": {
                                        "row": 11,
                                        "column": 9
                                      },
                                      "text": "throw"
                                    },
                                    {
                                      "type": "object_creation_expression",
                                      "start": {
                                        "row": 11,
                                        "column": 10
                                      },
                                      "end": {
                                        "row": 12,
                                        "column": 40
                                      },
                                      "text": "new Exception(\"Could not open raw keyed operator state stream for \" +\n\t\t\t\t\tgetOperatorName() + '.', exception)",
                                      "children": [
                                        {
                                          "type": "new",
                                          "start": {
                                            "row": 11,
                                            "column": 10
                                          },
                                          "end": {
                                            "row": 11,
                                            "column": 13
                                          },
                                          "text": "new"
                                        },
                                        {
                                          "type": "type_identifier",
                                          "start": {
                                            "row": 11,
                                            "column": 14
                                          },
                                          "end": {
                                            "row": 11,
                                            "column": 23
                                          },
                                          "text": "Exception"
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 11,
                                            "column": 23
                                          },
                                          "end": {
                                            "row": 12,
                                            "column": 40
                                          },
                                          "text": "(\"Could not open raw keyed operator state stream for \" +\n\t\t\t\t\tgetOperatorName() + '.', exception)",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 11,
                                                "column": 23
                                              },
                                              "end": {
                                                "row": 11,
                                                "column": 24
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start": {
                                                "row": 11,
                                                "column": 24
                                              },
                                              "end": {
                                                "row": 12,
                                                "column": 28
                                              },
                                              "text": "\"Could not open raw keyed operator state stream for \" +\n\t\t\t\t\tgetOperatorName() + '.'",
                                              "children": [
                                                {
                                                  "type": "binary_expression",
                                                  "start": {
                                                    "row": 11,
                                                    "column": 24
                                                  },
                                                  "end": {
                                                    "row": 12,
                                                    "column": 22
                                                  },
                                                  "text": "\"Could not open raw keyed operator state stream for \" +\n\t\t\t\t\tgetOperatorName()",
                                                  "children": [
                                                    {
                                                      "type": "string_literal",
                                                      "start": {
                                                        "row": 11,
                                                        "column": 24
                                                      },
                                                      "end": {
                                                        "row": 11,
                                                        "column": 77
                                                      },
                                                      "text": "\"Could not open raw keyed operator state stream for \"",
                                                      "children": [
                                                        {
                                                          "type": "\"",
                                                          "start": {
                                                            "row": 11,
                                                            "column": 24
                                                          },
                                                          "end": {
                                                            "row": 11,
                                                            "column": 25
                                                          },
                                                          "text": "\""
                                                        },
                                                        {
                                                          "type": "string_fragment",
                                                          "start": {
                                                            "row": 11,
                                                            "column": 25
                                                          },
                                                          "end": {
                                                            "row": 11,
                                                            "column": 76
                                                          },
                                                          "text": "Could not open raw keyed operator state stream for "
                                                        },
                                                        {
                                                          "type": "\"",
                                                          "start": {
                                                            "row": 11,
                                                            "column": 76
                                                          },
                                                          "end": {
                                                            "row": 11,
                                                            "column": 77
                                                          },
                                                          "text": "\""
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "+",
                                                      "start": {
                                                        "row": 11,
                                                        "column": 78
                                                      },
                                                      "end": {
                                                        "row": 11,
                                                        "column": 79
                                                      },
                                                      "text": "+"
                                                    },
                                                    {
                                                      "type": "method_invocation",
                                                      "start": {
                                                        "row": 12,
                                                        "column": 5
                                                      },
                                                      "end": {
                                                        "row": 12,
                                                        "column": 22
                                                      },
                                                      "text": "getOperatorName()",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 12,
                                                            "column": 5
                                                          },
                                                          "end": {
                                                            "row": 12,
                                                            "column": 20
                                                          },
                                                          "text": "getOperatorName"
                                                        },
                                                        {
                                                          "type": "argument_list",
                                                          "start": {
                                                            "row": 12,
                                                            "column": 20
                                                          },
                                                          "end": {
                                                            "row": 12,
                                                            "column": 22
                                                          },
                                                          "text": "()",
                                                          "children": [
                                                            {
                                                              "type": "(",
                                                              "start": {
                                                                "row": 12,
                                                                "column": 20
                                                              },
                                                              "end": {
                                                                "row": 12,
                                                                "column": 21
                                                              },
                                                              "text": "("
                                                            },
                                                            {
                                                              "type": ")",
                                                              "start": {
                                                                "row": 12,
                                                                "column": 21
                                                              },
                                                              "end": {
                                                                "row": 12,
                                                                "column": 22
                                                              },
                                                              "text": ")"
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "+",
                                                  "start": {
                                                    "row": 12,
                                                    "column": 23
                                                  },
                                                  "end": {
                                                    "row": 12,
                                                    "column": 24
                                                  },
                                                  "text": "+"
                                                },
                                                {
                                                  "type": "character_literal",
                                                  "start": {
                                                    "row": 12,
                                                    "column": 25
                                                  },
                                                  "end": {
                                                    "row": 12,
                                                    "column": 28
                                                  },
                                                  "text": "'.'"
                                                }
                                              ]
                                            },
                                            {
                                              "type": ",",
                                              "start": {
                                                "row": 12,
                                                "column": 28
                                              },
                                              "end": {
                                                "row": 12,
                                                "column": 29
                                              },
                                              "text": ","
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 12,
                                                "column": 30
                                              },
                                              "end": {
                                                "row": 12,
                                                "column": 39
                                              },
                                              "text": "exception"
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 12,
                                                "column": 39
                                              },
                                              "end": {
                                                "row": 12,
                                                "column": 40
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start": {
                                        "row": 12,
                                        "column": 40
                                      },
                                      "end": {
                                        "row": 12,
                                        "column": 41
                                      },
                                      "text": ";"
                                    }
                                  ]
                                },
                                {
                                  "type": "}",
                                  "start": {
                                    "row": 13,
                                    "column": 3
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 4
                                  },
                                  "text": "}"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "try_statement",
                      "start": {
                        "row": 15,
                        "column": 3
                      },
                      "end": {
                        "row": 33,
                        "column": 4
                      },
                      "text": "try {\n\t\t\t\tKeyGroupsList allKeyGroups = out.getKeyGroupList();\n\t\t\t\tfor (int keyGroupIdx : allKeyGroups) {\n\t\t\t\t\tout.startNewKeyGroup(keyGroupIdx);\n\n\t\t\t\t\ttimeServiceManager.snapshotStateForKeyGroup(\n\t\t\t\t\t\tnew DataOutputViewStreamWrapper(out), keyGroupIdx);\n\t\t\t\t}\n\t\t\t} catch (Exception exception) {\n\t\t\t\tthrow new Exception(\"Could not write timer service of \" + getOperatorName() +\n\t\t\t\t\t\" to checkpoint state stream.\", exception);\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tout.close();\n\t\t\t\t} catch (Exception closeException) {\n\t\t\t\t\tLOG.warn(\"Could not close raw keyed operator state stream for {}. This \" +\n\t\t\t\t\t\t\"might have prevented deleting some state data.\", getOperatorName(), closeException);\n\t\t\t\t}\n\t\t\t}",
                      "children": [
                        {
                          "type": "try",
                          "start": {
                            "row": 15,
                            "column": 3
                          },
                          "end": {
                            "row": 15,
                            "column": 6
                          },
                          "text": "try"
                        },
                        {
                          "type": "block",
                          "start": {
                            "row": 15,
                            "column": 7
                          },
                          "end": {
                            "row": 23,
                            "column": 4
                          },
                          "text": "{\n\t\t\t\tKeyGroupsList allKeyGroups = out.getKeyGroupList();\n\t\t\t\tfor (int keyGroupIdx : allKeyGroups) {\n\t\t\t\t\tout.startNewKeyGroup(keyGroupIdx);\n\n\t\t\t\t\ttimeServiceManager.snapshotStateForKeyGroup(\n\t\t\t\t\t\tnew DataOutputViewStreamWrapper(out), keyGroupIdx);\n\t\t\t\t}\n\t\t\t}",
                          "children": [
                            {
                              "type": "{",
                              "start": {
                                "row": 15,
                                "column": 7
                              },
                              "end": {
                                "row": 15,
                                "column": 8
                              },
                              "text": "{"
                            },
                            {
                              "type": "local_variable_declaration",
                              "start": {
                                "row": 16,
                                "column": 4
                              },
                              "end": {
                                "row": 16,
                                "column": 55
                              },
                              "text": "KeyGroupsList allKeyGroups = out.getKeyGroupList();",
                              "children": [
                                {
                                  "type": "type_identifier",
                                  "start": {
                                    "row": 16,
                                    "column": 4
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 17
                                  },
                                  "text": "KeyGroupsList"
                                },
                                {
                                  "type": "variable_declarator",
                                  "start": {
                                    "row": 16,
                                    "column": 18
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 54
                                  },
                                  "text": "allKeyGroups = out.getKeyGroupList()",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 16,
                                        "column": 18
                                      },
                                      "end": {
                                        "row": 16,
                                        "column": 30
                                      },
                                      "text": "allKeyGroups"
                                    },
                                    {
                                      "type": "=",
                                      "start": {
                                        "row": 16,
                                        "column": 31
                                      },
                                      "end": {
                                        "row": 16,
                                        "column": 32
                                      },
                                      "text": "="
                                    },
                                    {
                                      "type": "method_invocation",
                                      "start": {
                                        "row": 16,
                                        "column": 33
                                      },
                                      "end": {
                                        "row": 16,
                                        "column": 54
                                      },
                                      "text": "out.getKeyGroupList()",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 16,
                                            "column": 33
                                          },
                                          "end": {
                                            "row": 16,
                                            "column": 36
                                          },
                                          "text": "out"
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 16,
                                            "column": 36
                                          },
                                          "end": {
                                            "row": 16,
                                            "column": 37
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 16,
                                            "column": 37
                                          },
                                          "end": {
                                            "row": 16,
                                            "column": 52
                                          },
                                          "text": "getKeyGroupList"
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 16,
                                            "column": 52
                                          },
                                          "end": {
                                            "row": 16,
                                            "column": 54
                                          },
                                          "text": "()",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 16,
                                                "column": 52
                                              },
                                              "end": {
                                                "row": 16,
                                                "column": 53
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 16,
                                                "column": 53
                                              },
                                              "end": {
                                                "row": 16,
                                                "column": 54
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start": {
                                    "row": 16,
                                    "column": 54
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 55
                                  },
                                  "text": ";"
                                }
                              ]
                            },
                            {
                              "type": "enhanced_for_statement",
                              "start": {
                                "row": 17,
                                "column": 4
                              },
                              "end": {
                                "row": 22,
                                "column": 5
                              },
                              "text": "for (int keyGroupIdx : allKeyGroups) {\n\t\t\t\t\tout.startNewKeyGroup(keyGroupIdx);\n\n\t\t\t\t\ttimeServiceManager.snapshotStateForKeyGroup(\n\t\t\t\t\t\tnew DataOutputViewStreamWrapper(out), keyGroupIdx);\n\t\t\t\t}",
                              "children": [
                                {
                                  "type": "for",
                                  "start": {
                                    "row": 17,
                                    "column": 4
                                  },
                                  "end": {
                                    "row": 17,
                                    "column": 7
                                  },
                                  "text": "for"
                                },
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 17,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 17,
                                    "column": 9
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "integral_type",
                                  "start": {
                                    "row": 17,
                                    "column": 9
                                  },
                                  "end": {
                                    "row": 17,
                                    "column": 12
                                  },
                                  "text": "int",
                                  "children": [
                                    {
                                      "type": "int",
                                      "start": {
                                        "row": 17,
                                        "column": 9
                                      },
                                      "end": {
                                        "row": 17,
                                        "column": 12
                                      },
                                      "text": "int"
                                    }
                                  ]
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 17,
                                    "column": 13
                                  },
                                  "end": {
                                    "row": 17,
                                    "column": 24
                                  },
                                  "text": "keyGroupIdx"
                                },
                                {
                                  "type": ":",
                                  "start": {
                                    "row": 17,
                                    "column": 25
                                  },
                                  "end": {
                                    "row": 17,
                                    "column": 26
                                  },
                                  "text": ":"
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 17,
                                    "column": 27
                                  },
                                  "end": {
                                    "row": 17,
                                    "column": 39
                                  },
                                  "text": "allKeyGroups"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 17,
                                    "column": 39
                                  },
                                  "end": {
                                    "row": 17,
                                    "column": 40
                                  },
                                  "text": ")"
                                },
                                {
                                  "type": "block",
                                  "start": {
                                    "row": 17,
                                    "column": 41
                                  },
                                  "end": {
                                    "row": 22,
                                    "column": 5
                                  },
                                  "text": "{\n\t\t\t\t\tout.startNewKeyGroup(keyGroupIdx);\n\n\t\t\t\t\ttimeServiceManager.snapshotStateForKeyGroup(\n\t\t\t\t\t\tnew DataOutputViewStreamWrapper(out), keyGroupIdx);\n\t\t\t\t}",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start": {
                                        "row": 17,
                                        "column": 41
                                      },
                                      "end": {
                                        "row": 17,
                                        "column": 42
                                      },
                                      "text": "{"
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start": {
                                        "row": 18,
                                        "column": 5
                                      },
                                      "end": {
                                        "row": 18,
                                        "column": 39
                                      },
                                      "text": "out.startNewKeyGroup(keyGroupIdx);",
                                      "children": [
                                        {
                                          "type": "method_invocation",
                                          "start": {
                                            "row": 18,
                                            "column": 5
                                          },
                                          "end": {
                                            "row": 18,
                                            "column": 38
                                          },
                                          "text": "out.startNewKeyGroup(keyGroupIdx)",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 18,
                                                "column": 5
                                              },
                                              "end": {
                                                "row": 18,
                                                "column": 8
                                              },
                                              "text": "out"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 18,
                                                "column": 8
                                              },
                                              "end": {
                                                "row": 18,
                                                "column": 9
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 18,
                                                "column": 9
                                              },
                                              "end": {
                                                "row": 18,
                                                "column": 25
                                              },
                                              "text": "startNewKeyGroup"
                                            },
                                            {
                                              "type": "argument_list",
                                              "start": {
                                                "row": 18,
                                                "column": 25
                                              },
                                              "end": {
                                                "row": 18,
                                                "column": 38
                                              },
                                              "text": "(keyGroupIdx)",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 18,
                                                    "column": 25
                                                  },
                                                  "end": {
                                                    "row": 18,
                                                    "column": 26
                                                  },
                                                  "text": "("
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 18,
                                                    "column": 26
                                                  },
                                                  "end": {
                                                    "row": 18,
                                                    "column": 37
                                                  },
                                                  "text": "keyGroupIdx"
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 18,
                                                    "column": 37
                                                  },
                                                  "end": {
                                                    "row": 18,
                                                    "column": 38
                                                  },
                                                  "text": ")"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start": {
                                            "row": 18,
                                            "column": 38
                                          },
                                          "end": {
                                            "row": 18,
                                            "column": 39
                                          },
                                          "text": ";"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start": {
                                        "row": 20,
                                        "column": 5
                                      },
                                      "end": {
                                        "row": 21,
                                        "column": 57
                                      },
                                      "text": "timeServiceManager.snapshotStateForKeyGroup(\n\t\t\t\t\t\tnew DataOutputViewStreamWrapper(out), keyGroupIdx);",
                                      "children": [
                                        {
                                          "type": "method_invocation",
                                          "start": {
                                            "row": 20,
                                            "column": 5
                                          },
                                          "end": {
                                            "row": 21,
                                            "column": 56
                                          },
                                          "text": "timeServiceManager.snapshotStateForKeyGroup(\n\t\t\t\t\t\tnew DataOutputViewStreamWrapper(out), keyGroupIdx)",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 20,
                                                "column": 5
                                              },
                                              "end": {
                                                "row": 20,
                                                "column": 23
                                              },
                                              "text": "timeServiceManager"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 20,
                                                "column": 23
                                              },
                                              "end": {
                                                "row": 20,
                                                "column": 24
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 20,
                                                "column": 24
                                              },
                                              "end": {
                                                "row": 20,
                                                "column": 48
                                              },
                                              "text": "snapshotStateForKeyGroup"
                                            },
                                            {
                                              "type": "argument_list",
                                              "start": {
                                                "row": 20,
                                                "column": 48
                                              },
                                              "end": {
                                                "row": 21,
                                                "column": 56
                                              },
                                              "text": "(\n\t\t\t\t\t\tnew DataOutputViewStreamWrapper(out), keyGroupIdx)",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 20,
                                                    "column": 48
                                                  },
                                                  "end": {
                                                    "row": 20,
                                                    "column": 49
                                                  },
                                                  "text": "("
                                                },
                                                {
                                                  "type": "object_creation_expression",
                                                  "start": {
                                                    "row": 21,
                                                    "column": 6
                                                  },
                                                  "end": {
                                                    "row": 21,
                                                    "column": 42
                                                  },
                                                  "text": "new DataOutputViewStreamWrapper(out)",
                                                  "children": [
                                                    {
                                                      "type": "new",
                                                      "start": {
                                                        "row": 21,
                                                        "column": 6
                                                      },
                                                      "end": {
                                                        "row": 21,
                                                        "column": 9
                                                      },
                                                      "text": "new"
                                                    },
                                                    {
                                                      "type": "type_identifier",
                                                      "start": {
                                                        "row": 21,
                                                        "column": 10
                                                      },
                                                      "end": {
                                                        "row": 21,
                                                        "column": 37
                                                      },
                                                      "text": "DataOutputViewStreamWrapper"
                                                    },
                                                    {
                                                      "type": "argument_list",
                                                      "start": {
                                                        "row": 21,
                                                        "column": 37
                                                      },
                                                      "end": {
                                                        "row": 21,
                                                        "column": 42
                                                      },
                                                      "text": "(out)",
                                                      "children": [
                                                        {
                                                          "type": "(",
                                                          "start": {
                                                            "row": 21,
                                                            "column": 37
                                                          },
                                                          "end": {
                                                            "row": 21,
                                                            "column": 38
                                                          },
                                                          "text": "("
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 21,
                                                            "column": 38
                                                          },
                                                          "end": {
                                                            "row": 21,
                                                            "column": 41
                                                          },
                                                          "text": "out"
                                                        },
                                                        {
                                                          "type": ")",
                                                          "start": {
                                                            "row": 21,
                                                            "column": 41
                                                          },
                                                          "end": {
                                                            "row": 21,
                                                            "column": 42
                                                          },
                                                          "text": ")"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ",",
                                                  "start": {
                                                    "row": 21,
                                                    "column": 42
                                                  },
                                                  "end": {
                                                    "row": 21,
                                                    "column": 43
                                                  },
                                                  "text": ","
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 21,
                                                    "column": 44
                                                  },
                                                  "end": {
                                                    "row": 21,
                                                    "column": 55
                                                  },
                                                  "text": "keyGroupIdx"
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 21,
                                                    "column": 55
                                                  },
                                                  "end": {
                                                    "row": 21,
                                                    "column": 56
                                                  },
                                                  "text": ")"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start": {
                                            "row": 21,
                                            "column": 56
                                          },
                                          "end": {
                                            "row": 21,
                                            "column": 57
                                          },
                                          "text": ";"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start": {
                                        "row": 22,
                                        "column": 4
                                      },
                                      "end": {
                                        "row": 22,
                                        "column": 5
                                      },
                                      "text": "}"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start": {
                                "row": 23,
                                "column": 3
                              },
                              "end": {
                                "row": 23,
                                "column": 4
                              },
                              "text": "}"
                            }
                          ]
                        },
                        {
                          "type": "catch_clause",
                          "start": {
                            "row": 23,
                            "column": 5
                          },
                          "end": {
                            "row": 26,
                            "column": 4
                          },
                          "text": "catch (Exception exception) {\n\t\t\t\tthrow new Exception(\"Could not write timer service of \" + getOperatorName() +\n\t\t\t\t\t\" to checkpoint state stream.\", exception);\n\t\t\t}",
                          "children": [
                            {
                              "type": "catch",
                              "start": {
                                "row": 23,
                                "column": 5
                              },
                              "end": {
                                "row": 23,
                                "column": 10
                              },
                              "text": "catch"
                            },
                            {
                              "type": "(",
                              "start": {
                                "row": 23,
                                "column": 11
                              },
                              "end": {
                                "row": 23,
                                "column": 12
                              },
                              "text": "("
                            },
                            {
                              "type": "catch_formal_parameter",
                              "start": {
                                "row": 23,
                                "column": 12
                              },
                              "end": {
                                "row": 23,
                                "column": 31
                              },
                              "text": "Exception exception",
                              "children": [
                                {
                                  "type": "catch_type",
                                  "start": {
                                    "row": 23,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 23,
                                    "column": 21
                                  },
                                  "text": "Exception",
                                  "children": [
                                    {
                                      "type": "type_identifier",
                                      "start": {
                                        "row": 23,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 23,
                                        "column": 21
                                      },
                                      "text": "Exception"
                                    }
                                  ]
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 23,
                                    "column": 22
                                  },
                                  "end": {
                                    "row": 23,
                                    "column": 31
                                  },
                                  "text": "exception"
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 23,
                                "column": 31
                              },
                              "end": {
                                "row": 23,
                                "column": 32
                              },
                              "text": ")"
                            },
                            {
                              "type": "block",
                              "start": {
                                "row": 23,
                                "column": 33
                              },
                              "end": {
                                "row": 26,
                                "column": 4
                              },
                              "text": "{\n\t\t\t\tthrow new Exception(\"Could not write timer service of \" + getOperatorName() +\n\t\t\t\t\t\" to checkpoint state stream.\", exception);\n\t\t\t}",
                              "children": [
                                {
                                  "type": "{",
                                  "start": {
                                    "row": 23,
                                    "column": 33
                                  },
                                  "end": {
                                    "row": 23,
                                    "column": 34
                                  },
                                  "text": "{"
                                },
                                {
                                  "type": "throw_statement",
                                  "start": {
                                    "row": 24,
                                    "column": 4
                                  },
                                  "end": {
                                    "row": 25,
                                    "column": 48
                                  },
                                  "text": "throw new Exception(\"Could not write timer service of \" + getOperatorName() +\n\t\t\t\t\t\" to checkpoint state stream.\", exception);",
                                  "children": [
                                    {
                                      "type": "throw",
                                      "start": {
                                        "row": 24,
                                        "column": 4
                                      },
                                      "end": {
                                        "row": 24,
                                        "column": 9
                                      },
                                      "text": "throw"
                                    },
                                    {
                                      "type": "object_creation_expression",
                                      "start": {
                                        "row": 24,
                                        "column": 10
                                      },
                                      "end": {
                                        "row": 25,
                                        "column": 47
                                      },
                                      "text": "new Exception(\"Could not write timer service of \" + getOperatorName() +\n\t\t\t\t\t\" to checkpoint state stream.\", exception)",
                                      "children": [
                                        {
                                          "type": "new",
                                          "start": {
                                            "row": 24,
                                            "column": 10
                                          },
                                          "end": {
                                            "row": 24,
                                            "column": 13
                                          },
                                          "text": "new"
                                        },
                                        {
                                          "type": "type_identifier",
                                          "start": {
                                            "row": 24,
                                            "column": 14
                                          },
                                          "end": {
                                            "row": 24,
                                            "column": 23
                                          },
                                          "text": "Exception"
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 24,
                                            "column": 23
                                          },
                                          "end": {
                                            "row": 25,
                                            "column": 47
                                          },
                                          "text": "(\"Could not write timer service of \" + getOperatorName() +\n\t\t\t\t\t\" to checkpoint state stream.\", exception)",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 24,
                                                "column": 23
                                              },
                                              "end": {
                                                "row": 24,
                                                "column": 24
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start": {
                                                "row": 24,
                                                "column": 24
                                              },
                                              "end": {
                                                "row": 25,
                                                "column": 35
                                              },
                                              "text": "\"Could not write timer service of \" + getOperatorName() +\n\t\t\t\t\t\" to checkpoint state stream.\"",
                                              "children": [
                                                {
                                                  "type": "binary_expression",
                                                  "start": {
                                                    "row": 24,
                                                    "column": 24
                                                  },
                                                  "end": {
                                                    "row": 24,
                                                    "column": 79
                                                  },
                                                  "text": "\"Could not write timer service of \" + getOperatorName()",
                                                  "children": [
                                                    {
                                                      "type": "string_literal",
                                                      "start": {
                                                        "row": 24,
                                                        "column": 24
                                                      },
                                                      "end": {
                                                        "row": 24,
                                                        "column": 59
                                                      },
                                                      "text": "\"Could not write timer service of \"",
                                                      "children": [
                                                        {
                                                          "type": "\"",
                                                          "start": {
                                                            "row": 24,
                                                            "column": 24
                                                          },
                                                          "end": {
                                                            "row": 24,
                                                            "column": 25
                                                          },
                                                          "text": "\""
                                                        },
                                                        {
                                                          "type": "string_fragment",
                                                          "start": {
                                                            "row": 24,
                                                            "column": 25
                                                          },
                                                          "end": {
                                                            "row": 24,
                                                            "column": 58
                                                          },
                                                          "text": "Could not write timer service of "
                                                        },
                                                        {
                                                          "type": "\"",
                                                          "start": {
                                                            "row": 24,
                                                            "column": 58
                                                          },
                                                          "end": {
                                                            "row": 24,
                                                            "column": 59
                                                          },
                                                          "text": "\""
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "+",
                                                      "start": {
                                                        "row": 24,
                                                        "column": 60
                                                      },
                                                      "end": {
                                                        "row": 24,
                                                        "column": 61
                                                      },
                                                      "text": "+"
                                                    },
                                                    {
                                                      "type": "method_invocation",
                                                      "start": {
                                                        "row": 24,
                                                        "column": 62
                                                      },
                                                      "end": {
                                                        "row": 24,
                                                        "column": 79
                                                      },
                                                      "text": "getOperatorName()",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 24,
                                                            "column": 62
                                                          },
                                                          "end": {
                                                            "row": 24,
                                                            "column": 77
                                                          },
                                                          "text": "getOperatorName"
                                                        },
                                                        {
                                                          "type": "argument_list",
                                                          "start": {
                                                            "row": 24,
                                                            "column": 77
                                                          },
                                                          "end": {
                                                            "row": 24,
                                                            "column": 79
                                                          },
                                                          "text": "()",
                                                          "children": [
                                                            {
                                                              "type": "(",
                                                              "start": {
                                                                "row": 24,
                                                                "column": 77
                                                              },
                                                              "end": {
                                                                "row": 24,
                                                                "column": 78
                                                              },
                                                              "text": "("
                                                            },
                                                            {
                                                              "type": ")",
                                                              "start": {
                                                                "row": 24,
                                                                "column": 78
                                                              },
                                                              "end": {
                                                                "row": 24,
                                                                "column": 79
                                                              },
                                                              "text": ")"
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "+",
                                                  "start": {
                                                    "row": 24,
                                                    "column": 80
                                                  },
                                                  "end": {
                                                    "row": 24,
                                                    "column": 81
                                                  },
                                                  "text": "+"
                                                },
                                                {
                                                  "type": "string_literal",
                                                  "start": {
                                                    "row": 25,
                                                    "column": 5
                                                  },
                                                  "end": {
                                                    "row": 25,
                                                    "column": 35
                                                  },
                                                  "text": "\" to checkpoint state stream.\"",
                                                  "children": [
                                                    {
                                                      "type": "\"",
                                                      "start": {
                                                        "row": 25,
                                                        "column": 5
                                                      },
                                                      "end": {
                                                        "row": 25,
                                                        "column": 6
                                                      },
                                                      "text": "\""
                                                    },
                                                    {
                                                      "type": "string_fragment",
                                                      "start": {
                                                        "row": 25,
                                                        "column": 6
                                                      },
                                                      "end": {
                                                        "row": 25,
                                                        "column": 34
                                                      },
                                                      "text": " to checkpoint state stream."
                                                    },
                                                    {
                                                      "type": "\"",
                                                      "start": {
                                                        "row": 25,
                                                        "column": 34
                                                      },
                                                      "end": {
                                                        "row": 25,
                                                        "column": 35
                                                      },
                                                      "text": "\""
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ",",
                                              "start": {
                                                "row": 25,
                                                "column": 35
                                              },
                                              "end": {
                                                "row": 25,
                                                "column": 36
                                              },
                                              "text": ","
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 25,
                                                "column": 37
                                              },
                                              "end": {
                                                "row": 25,
                                                "column": 46
                                              },
                                              "text": "exception"
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 25,
                                                "column": 46
                                              },
                                              "end": {
                                                "row": 25,
                                                "column": 47
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start": {
                                        "row": 25,
                                        "column": 47
                                      },
                                      "end": {
                                        "row": 25,
                                        "column": 48
                                      },
                                      "text": ";"
                                    }
                                  ]
                                },
                                {
                                  "type": "}",
                                  "start": {
                                    "row": 26,
                                    "column": 3
                                  },
                                  "end": {
                                    "row": 26,
                                    "column": 4
                                  },
                                  "text": "}"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "finally_clause",
                          "start": {
                            "row": 26,
                            "column": 5
                          },
                          "end": {
                            "row": 33,
                            "column": 4
                          },
                          "text": "finally {\n\t\t\t\ttry {\n\t\t\t\t\tout.close();\n\t\t\t\t} catch (Exception closeException) {\n\t\t\t\t\tLOG.warn(\"Could not close raw keyed operator state stream for {}. This \" +\n\t\t\t\t\t\t\"might have prevented deleting some state data.\", getOperatorName(), closeException);\n\t\t\t\t}\n\t\t\t}",
                          "children": [
                            {
                              "type": "finally",
                              "start": {
                                "row": 26,
                                "column": 5
                              },
                              "end": {
                                "row": 26,
                                "column": 12
                              },
                              "text": "finally"
                            },
                            {
                              "type": "block",
                              "start": {
                                "row": 26,
                                "column": 13
                              },
                              "end": {
                                "row": 33,
                                "column": 4
                              },
                              "text": "{\n\t\t\t\ttry {\n\t\t\t\t\tout.close();\n\t\t\t\t} catch (Exception closeException) {\n\t\t\t\t\tLOG.warn(\"Could not close raw keyed operator state stream for {}. This \" +\n\t\t\t\t\t\t\"might have prevented deleting some state data.\", getOperatorName(), closeException);\n\t\t\t\t}\n\t\t\t}",
                              "children": [
                                {
                                  "type": "{",
                                  "start": {
                                    "row": 26,
                                    "column": 13
                                  },
                                  "end": {
                                    "row": 26,
                                    "column": 14
                                  },
                                  "text": "{"
                                },
                                {
                                  "type": "try_statement",
                                  "start": {
                                    "row": 27,
                                    "column": 4
                                  },
                                  "end": {
                                    "row": 32,
                                    "column": 5
                                  },
                                  "text": "try {\n\t\t\t\t\tout.close();\n\t\t\t\t} catch (Exception closeException) {\n\t\t\t\t\tLOG.warn(\"Could not close raw keyed operator state stream for {}. This \" +\n\t\t\t\t\t\t\"might have prevented deleting some state data.\", getOperatorName(), closeException);\n\t\t\t\t}",
                                  "children": [
                                    {
                                      "type": "try",
                                      "start": {
                                        "row": 27,
                                        "column": 4
                                      },
                                      "end": {
                                        "row": 27,
                                        "column": 7
                                      },
                                      "text": "try"
                                    },
                                    {
                                      "type": "block",
                                      "start": {
                                        "row": 27,
                                        "column": 8
                                      },
                                      "end": {
                                        "row": 29,
                                        "column": 5
                                      },
                                      "text": "{\n\t\t\t\t\tout.close();\n\t\t\t\t}",
                                      "children": [
                                        {
                                          "type": "{",
                                          "start": {
                                            "row": 27,
                                            "column": 8
                                          },
                                          "end": {
                                            "row": 27,
                                            "column": 9
                                          },
                                          "text": "{"
                                        },
                                        {
                                          "type": "expression_statement",
                                          "start": {
                                            "row": 28,
                                            "column": 5
                                          },
                                          "end": {
                                            "row": 28,
                                            "column": 17
                                          },
                                          "text": "out.close();",
                                          "children": [
                                            {
                                              "type": "method_invocation",
                                              "start": {
                                                "row": 28,
                                                "column": 5
                                              },
                                              "end": {
                                                "row": 28,
                                                "column": 16
                                              },
                                              "text": "out.close()",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 28,
                                                    "column": 5
                                                  },
                                                  "end": {
                                                    "row": 28,
                                                    "column": 8
                                                  },
                                                  "text": "out"
                                                },
                                                {
                                                  "type": ".",
                                                  "start": {
                                                    "row": 28,
                                                    "column": 8
                                                  },
                                                  "end": {
                                                    "row": 28,
                                                    "column": 9
                                                  },
                                                  "text": "."
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 28,
                                                    "column": 9
                                                  },
                                                  "end": {
                                                    "row": 28,
                                                    "column": 14
                                                  },
                                                  "text": "close"
                                                },
                                                {
                                                  "type": "argument_list",
                                                  "start": {
                                                    "row": 28,
                                                    "column": 14
                                                  },
                                                  "end": {
                                                    "row": 28,
                                                    "column": 16
                                                  },
                                                  "text": "()",
                                                  "children": [
                                                    {
                                                      "type": "(",
                                                      "start": {
                                                        "row": 28,
                                                        "column": 14
                                                      },
                                                      "end": {
                                                        "row": 28,
                                                        "column": 15
                                                      },
                                                      "text": "("
                                                    },
                                                    {
                                                      "type": ")",
                                                      "start": {
                                                        "row": 28,
                                                        "column": 15
                                                      },
                                                      "end": {
                                                        "row": 28,
                                                        "column": 16
                                                      },
                                                      "text": ")"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ";",
                                              "start": {
                                                "row": 28,
                                                "column": 16
                                              },
                                              "end": {
                                                "row": 28,
                                                "column": 17
                                              },
                                              "text": ";"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "}",
                                          "start": {
                                            "row": 29,
                                            "column": 4
                                          },
                                          "end": {
                                            "row": 29,
                                            "column": 5
                                          },
                                          "text": "}"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "catch_clause",
                                      "start": {
                                        "row": 29,
                                        "column": 6
                                      },
                                      "end": {
                                        "row": 32,
                                        "column": 5
                                      },
                                      "text": "catch (Exception closeException) {\n\t\t\t\t\tLOG.warn(\"Could not close raw keyed operator state stream for {}. This \" +\n\t\t\t\t\t\t\"might have prevented deleting some state data.\", getOperatorName(), closeException);\n\t\t\t\t}",
                                      "children": [
                                        {
                                          "type": "catch",
                                          "start": {
                                            "row": 29,
                                            "column": 6
                                          },
                                          "end": {
                                            "row": 29,
                                            "column": 11
                                          },
                                          "text": "catch"
                                        },
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 29,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 29,
                                            "column": 13
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "catch_formal_parameter",
                                          "start": {
                                            "row": 29,
                                            "column": 13
                                          },
                                          "end": {
                                            "row": 29,
                                            "column": 37
                                          },
                                          "text": "Exception closeException",
                                          "children": [
                                            {
                                              "type": "catch_type",
                                              "start": {
                                                "row": 29,
                                                "column": 13
                                              },
                                              "end": {
                                                "row": 29,
                                                "column": 22
                                              },
                                              "text": "Exception",
                                              "children": [
                                                {
                                                  "type": "type_identifier",
                                                  "start": {
                                                    "row": 29,
                                                    "column": 13
                                                  },
                                                  "end": {
                                                    "row": 29,
                                                    "column": 22
                                                  },
                                                  "text": "Exception"
                                                }
                                              ]
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 29,
                                                "column": 23
                                              },
                                              "end": {
                                                "row": 29,
                                                "column": 37
                                              },
                                              "text": "closeException"
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 29,
                                            "column": 37
                                          },
                                          "end": {
                                            "row": 29,
                                            "column": 38
                                          },
                                          "text": ")"
                                        },
                                        {
                                          "type": "block",
                                          "start": {
                                            "row": 29,
                                            "column": 39
                                          },
                                          "end": {
                                            "row": 32,
                                            "column": 5
                                          },
                                          "text": "{\n\t\t\t\t\tLOG.warn(\"Could not close raw keyed operator state stream for {}. This \" +\n\t\t\t\t\t\t\"might have prevented deleting some state data.\", getOperatorName(), closeException);\n\t\t\t\t}",
                                          "children": [
                                            {
                                              "type": "{",
                                              "start": {
                                                "row": 29,
                                                "column": 39
                                              },
                                              "end": {
                                                "row": 29,
                                                "column": 40
                                              },
                                              "text": "{"
                                            },
                                            {
                                              "type": "expression_statement",
                                              "start": {
                                                "row": 30,
                                                "column": 5
                                              },
                                              "end": {
                                                "row": 31,
                                                "column": 91
                                              },
                                              "text": "LOG.warn(\"Could not close raw keyed operator state stream for {}. This \" +\n\t\t\t\t\t\t\"might have prevented deleting some state data.\", getOperatorName(), closeException);",
                                              "children": [
                                                {
                                                  "type": "method_invocation",
                                                  "start": {
                                                    "row": 30,
                                                    "column": 5
                                                  },
                                                  "end": {
                                                    "row": 31,
                                                    "column": 90
                                                  },
                                                  "text": "LOG.warn(\"Could not close raw keyed operator state stream for {}. This \" +\n\t\t\t\t\t\t\"might have prevented deleting some state data.\", getOperatorName(), closeException)",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 30,
                                                        "column": 5
                                                      },
                                                      "end": {
                                                        "row": 30,
                                                        "column": 8
                                                      },
                                                      "text": "LOG"
                                                    },
                                                    {
                                                      "type": ".",
                                                      "start": {
                                                        "row": 30,
                                                        "column": 8
                                                      },
                                                      "end": {
                                                        "row": 30,
                                                        "column": 9
                                                      },
                                                      "text": "."
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 30,
                                                        "column": 9
                                                      },
                                                      "end": {
                                                        "row": 30,
                                                        "column": 13
                                                      },
                                                      "text": "warn"
                                                    },
                                                    {
                                                      "type": "argument_list",
                                                      "start": {
                                                        "row": 30,
                                                        "column": 13
                                                      },
                                                      "end": {
                                                        "row": 31,
                                                        "column": 90
                                                      },
                                                      "text": "(\"Could not close raw keyed operator state stream for {}. This \" +\n\t\t\t\t\t\t\"might have prevented deleting some state data.\", getOperatorName(), closeException)",
                                                      "children": [
                                                        {
                                                          "type": "(",
                                                          "start": {
                                                            "row": 30,
                                                            "column": 13
                                                          },
                                                          "end": {
                                                            "row": 30,
                                                            "column": 14
                                                          },
                                                          "text": "("
                                                        },
                                                        {
                                                          "type": "binary_expression",
                                                          "start": {
                                                            "row": 30,
                                                            "column": 14
                                                          },
                                                          "end": {
                                                            "row": 31,
                                                            "column": 54
                                                          },
                                                          "text": "\"Could not close raw keyed operator state stream for {}. This \" +\n\t\t\t\t\t\t\"might have prevented deleting some state data.\"",
                                                          "children": [
                                                            {
                                                              "type": "string_literal",
                                                              "start": {
                                                                "row": 30,
                                                                "column": 14
                                                              },
                                                              "end": {
                                                                "row": 30,
                                                                "column": 77
                                                              },
                                                              "text": "\"Could not close raw keyed operator state stream for {}. This \"",
                                                              "children": [
                                                                {
                                                                  "type": "\"",
                                                                  "start": {
                                                                    "row": 30,
                                                                    "column": 14
                                                                  },
                                                                  "end": {
                                                                    "row": 30,
                                                                    "column": 15
                                                                  },
                                                                  "text": "\""
                                                                },
                                                                {
                                                                  "type": "string_fragment",
                                                                  "start": {
                                                                    "row": 30,
                                                                    "column": 15
                                                                  },
                                                                  "end": {
                                                                    "row": 30,
                                                                    "column": 76
                                                                  },
                                                                  "text": "Could not close raw keyed operator state stream for {}. This "
                                                                },
                                                                {
                                                                  "type": "\"",
                                                                  "start": {
                                                                    "row": 30,
                                                                    "column": 76
                                                                  },
                                                                  "end": {
                                                                    "row": 30,
                                                                    "column": 77
                                                                  },
                                                                  "text": "\""
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "+",
                                                              "start": {
                                                                "row": 30,
                                                                "column": 78
                                                              },
                                                              "end": {
                                                                "row": 30,
                                                                "column": 79
                                                              },
                                                              "text": "+"
                                                            },
                                                            {
                                                              "type": "string_literal",
                                                              "start": {
                                                                "row": 31,
                                                                "column": 6
                                                              },
                                                              "end": {
                                                                "row": 31,
                                                                "column": 54
                                                              },
                                                              "text": "\"might have prevented deleting some state data.\"",
                                                              "children": [
                                                                {
                                                                  "type": "\"",
                                                                  "start": {
                                                                    "row": 31,
                                                                    "column": 6
                                                                  },
                                                                  "end": {
                                                                    "row": 31,
                                                                    "column": 7
                                                                  },
                                                                  "text": "\""
                                                                },
                                                                {
                                                                  "type": "string_fragment",
                                                                  "start": {
                                                                    "row": 31,
                                                                    "column": 7
                                                                  },
                                                                  "end": {
                                                                    "row": 31,
                                                                    "column": 53
                                                                  },
                                                                  "text": "might have prevented deleting some state data."
                                                                },
                                                                {
                                                                  "type": "\"",
                                                                  "start": {
                                                                    "row": 31,
                                                                    "column": 53
                                                                  },
                                                                  "end": {
                                                                    "row": 31,
                                                                    "column": 54
                                                                  },
                                                                  "text": "\""
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": ",",
                                                          "start": {
                                                            "row": 31,
                                                            "column": 54
                                                          },
                                                          "end": {
                                                            "row": 31,
                                                            "column": 55
                                                          },
                                                          "text": ","
                                                        },
                                                        {
                                                          "type": "method_invocation",
                                                          "start": {
                                                            "row": 31,
                                                            "column": 56
                                                          },
                                                          "end": {
                                                            "row": 31,
                                                            "column": 73
                                                          },
                                                          "text": "getOperatorName()",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start": {
                                                                "row": 31,
                                                                "column": 56
                                                              },
                                                              "end": {
                                                                "row": 31,
                                                                "column": 71
                                                              },
                                                              "text": "getOperatorName"
                                                            },
                                                            {
                                                              "type": "argument_list",
                                                              "start": {
                                                                "row": 31,
                                                                "column": 71
                                                              },
                                                              "end": {
                                                                "row": 31,
                                                                "column": 73
                                                              },
                                                              "text": "()",
                                                              "children": [
                                                                {
                                                                  "type": "(",
                                                                  "start": {
                                                                    "row": 31,
                                                                    "column": 71
                                                                  },
                                                                  "end": {
                                                                    "row": 31,
                                                                    "column": 72
                                                                  },
                                                                  "text": "("
                                                                },
                                                                {
                                                                  "type": ")",
                                                                  "start": {
                                                                    "row": 31,
                                                                    "column": 72
                                                                  },
                                                                  "end": {
                                                                    "row": 31,
                                                                    "column": 73
                                                                  },
                                                                  "text": ")"
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": ",",
                                                          "start": {
                                                            "row": 31,
                                                            "column": 73
                                                          },
                                                          "end": {
                                                            "row": 31,
                                                            "column": 74
                                                          },
                                                          "text": ","
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 31,
                                                            "column": 75
                                                          },
                                                          "end": {
                                                            "row": 31,
                                                            "column": 89
                                                          },
                                                          "text": "closeException"
                                                        },
                                                        {
                                                          "type": ")",
                                                          "start": {
                                                            "row": 31,
                                                            "column": 89
                                                          },
                                                          "end": {
                                                            "row": 31,
                                                            "column": 90
                                                          },
                                                          "text": ")"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ";",
                                                  "start": {
                                                    "row": 31,
                                                    "column": 90
                                                  },
                                                  "end": {
                                                    "row": 31,
                                                    "column": 91
                                                  },
                                                  "text": ";"
                                                }
                                              ]
                                            },
                                            {
                                              "type": "}",
                                              "start": {
                                                "row": 32,
                                                "column": 4
                                              },
                                              "end": {
                                                "row": 32,
                                                "column": 5
                                              },
                                              "text": "}"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "}",
                                  "start": {
                                    "row": 33,
                                    "column": 3
                                  },
                                  "end": {
                                    "row": 33,
                                    "column": 4
                                  },
                                  "text": "}"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start": {
                        "row": 34,
                        "column": 2
                      },
                      "end": {
                        "row": 34,
                        "column": 3
                      },
                      "text": "}"
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start": {
                "row": 35,
                "column": 1
              },
              "end": {
                "row": 35,
                "column": 2
              },
              "text": "}"
            }
          ]
        }
      ]
    }
  ]
}