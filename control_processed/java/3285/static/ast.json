{
  "type": "program",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 25,
    "column": 2
  },
  "text": "@Override\n\tpublic void onTaskFailure(Execution taskExecution, Throwable cause) {\n\n\t\texecutionGraph.getJobMasterMainThreadExecutor().assertRunningInMainThread();\n\n\t\t// to better handle the lack of resources (potentially by a scale-in), we\n\t\t// make failures due to missing resources global failures \n\t\tif (cause instanceof NoResourceAvailableException) {\n\t\t\tLOG.info(\"Not enough resources to schedule {} - triggering full recovery.\", taskExecution);\n\t\t\texecutionGraph.failGlobal(cause);\n\t\t\treturn;\n\t\t}\n\n\t\tLOG.info(\"Recovering task failure for {} (#{}) via individual restart.\", \n\t\t\t\ttaskExecution.getVertex().getTaskNameWithSubtaskIndex(), taskExecution.getAttemptNumber());\n\n\t\tnumTaskFailures.inc();\n\n\t\t// trigger the restart once the task has reached its terminal state\n\t\t// Note: currently all tasks passed here are already in their terminal state,\n\t\t//       so we could actually avoid the future. We use it anyways because it is cheap and\n\t\t//       it helps to support better testing\n\t\tfinal CompletableFuture<ExecutionState> terminationFuture = taskExecution.getTerminalStateFuture();\n\t\tterminationFuture.thenRun(\n\t\t\t() -> performExecutionVertexRestart(taskExecution.getVertex(), taskExecution.getGlobalModVersion()));\n\t}",
  "children": [
    {
      "type": "method_declaration",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 25,
        "column": 2
      },
      "text": "@Override\n\tpublic void onTaskFailure(Execution taskExecution, Throwable cause) {\n\n\t\texecutionGraph.getJobMasterMainThreadExecutor().assertRunningInMainThread();\n\n\t\t// to better handle the lack of resources (potentially by a scale-in), we\n\t\t// make failures due to missing resources global failures \n\t\tif (cause instanceof NoResourceAvailableException) {\n\t\t\tLOG.info(\"Not enough resources to schedule {} - triggering full recovery.\", taskExecution);\n\t\t\texecutionGraph.failGlobal(cause);\n\t\t\treturn;\n\t\t}\n\n\t\tLOG.info(\"Recovering task failure for {} (#{}) via individual restart.\", \n\t\t\t\ttaskExecution.getVertex().getTaskNameWithSubtaskIndex(), taskExecution.getAttemptNumber());\n\n\t\tnumTaskFailures.inc();\n\n\t\t// trigger the restart once the task has reached its terminal state\n\t\t// Note: currently all tasks passed here are already in their terminal state,\n\t\t//       so we could actually avoid the future. We use it anyways because it is cheap and\n\t\t//       it helps to support better testing\n\t\tfinal CompletableFuture<ExecutionState> terminationFuture = taskExecution.getTerminalStateFuture();\n\t\tterminationFuture.thenRun(\n\t\t\t() -> performExecutionVertexRestart(taskExecution.getVertex(), taskExecution.getGlobalModVersion()));\n\t}",
      "children": [
        {
          "type": "modifiers",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 1,
            "column": 7
          },
          "text": "@Override\n\tpublic",
          "children": [
            {
              "type": "marker_annotation",
              "start": {
                "row": 0,
                "column": 0
              },
              "end": {
                "row": 0,
                "column": 9
              },
              "text": "@Override",
              "children": [
                {
                  "type": "@",
                  "start": {
                    "row": 0,
                    "column": 0
                  },
                  "end": {
                    "row": 0,
                    "column": 1
                  },
                  "text": "@"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 1
                  },
                  "end": {
                    "row": 0,
                    "column": 9
                  },
                  "text": "Override"
                }
              ]
            },
            {
              "type": "public",
              "start": {
                "row": 1,
                "column": 1
              },
              "end": {
                "row": 1,
                "column": 7
              },
              "text": "public"
            }
          ]
        },
        {
          "type": "void_type",
          "start": {
            "row": 1,
            "column": 8
          },
          "end": {
            "row": 1,
            "column": 12
          },
          "text": "void"
        },
        {
          "type": "identifier",
          "start": {
            "row": 1,
            "column": 13
          },
          "end": {
            "row": 1,
            "column": 26
          },
          "text": "onTaskFailure"
        },
        {
          "type": "formal_parameters",
          "start": {
            "row": 1,
            "column": 26
          },
          "end": {
            "row": 1,
            "column": 68
          },
          "text": "(Execution taskExecution, Throwable cause)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 1,
                "column": 26
              },
              "end": {
                "row": 1,
                "column": 27
              },
              "text": "("
            },
            {
              "type": "formal_parameter",
              "start": {
                "row": 1,
                "column": 27
              },
              "end": {
                "row": 1,
                "column": 50
              },
              "text": "Execution taskExecution",
              "children": [
                {
                  "type": "type_identifier",
                  "start": {
                    "row": 1,
                    "column": 27
                  },
                  "end": {
                    "row": 1,
                    "column": 36
                  },
                  "text": "Execution"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 1,
                    "column": 37
                  },
                  "end": {
                    "row": 1,
                    "column": 50
                  },
                  "text": "taskExecution"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 1,
                "column": 50
              },
              "end": {
                "row": 1,
                "column": 51
              },
              "text": ","
            },
            {
              "type": "formal_parameter",
              "start": {
                "row": 1,
                "column": 52
              },
              "end": {
                "row": 1,
                "column": 67
              },
              "text": "Throwable cause",
              "children": [
                {
                  "type": "type_identifier",
                  "start": {
                    "row": 1,
                    "column": 52
                  },
                  "end": {
                    "row": 1,
                    "column": 61
                  },
                  "text": "Throwable"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 1,
                    "column": 62
                  },
                  "end": {
                    "row": 1,
                    "column": 67
                  },
                  "text": "cause"
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 1,
                "column": 67
              },
              "end": {
                "row": 1,
                "column": 68
              },
              "text": ")"
            }
          ]
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 69
          },
          "end": {
            "row": 25,
            "column": 2
          },
          "text": "{\n\n\t\texecutionGraph.getJobMasterMainThreadExecutor().assertRunningInMainThread();\n\n\t\t// to better handle the lack of resources (potentially by a scale-in), we\n\t\t// make failures due to missing resources global failures \n\t\tif (cause instanceof NoResourceAvailableException) {\n\t\t\tLOG.info(\"Not enough resources to schedule {} - triggering full recovery.\", taskExecution);\n\t\t\texecutionGraph.failGlobal(cause);\n\t\t\treturn;\n\t\t}\n\n\t\tLOG.info(\"Recovering task failure for {} (#{}) via individual restart.\", \n\t\t\t\ttaskExecution.getVertex().getTaskNameWithSubtaskIndex(), taskExecution.getAttemptNumber());\n\n\t\tnumTaskFailures.inc();\n\n\t\t// trigger the restart once the task has reached its terminal state\n\t\t// Note: currently all tasks passed here are already in their terminal state,\n\t\t//       so we could actually avoid the future. We use it anyways because it is cheap and\n\t\t//       it helps to support better testing\n\t\tfinal CompletableFuture<ExecutionState> terminationFuture = taskExecution.getTerminalStateFuture();\n\t\tterminationFuture.thenRun(\n\t\t\t() -> performExecutionVertexRestart(taskExecution.getVertex(), taskExecution.getGlobalModVersion()));\n\t}",
          "children": [
            {
              "type": "{",
              "start": {
                "row": 1,
                "column": 69
              },
              "end": {
                "row": 1,
                "column": 70
              },
              "text": "{"
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 3,
                "column": 2
              },
              "end": {
                "row": 3,
                "column": 78
              },
              "text": "executionGraph.getJobMasterMainThreadExecutor().assertRunningInMainThread();",
              "children": [
                {
                  "type": "method_invocation",
                  "start": {
                    "row": 3,
                    "column": 2
                  },
                  "end": {
                    "row": 3,
                    "column": 77
                  },
                  "text": "executionGraph.getJobMasterMainThreadExecutor().assertRunningInMainThread()",
                  "children": [
                    {
                      "type": "method_invocation",
                      "start": {
                        "row": 3,
                        "column": 2
                      },
                      "end": {
                        "row": 3,
                        "column": 49
                      },
                      "text": "executionGraph.getJobMasterMainThreadExecutor()",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 3,
                            "column": 2
                          },
                          "end": {
                            "row": 3,
                            "column": 16
                          },
                          "text": "executionGraph"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 3,
                            "column": 16
                          },
                          "end": {
                            "row": 3,
                            "column": 17
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 3,
                            "column": 17
                          },
                          "end": {
                            "row": 3,
                            "column": 47
                          },
                          "text": "getJobMasterMainThreadExecutor"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 3,
                            "column": 47
                          },
                          "end": {
                            "row": 3,
                            "column": 49
                          },
                          "text": "()",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 3,
                                "column": 47
                              },
                              "end": {
                                "row": 3,
                                "column": 48
                              },
                              "text": "("
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 3,
                                "column": 48
                              },
                              "end": {
                                "row": 3,
                                "column": 49
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ".",
                      "start": {
                        "row": 3,
                        "column": 49
                      },
                      "end": {
                        "row": 3,
                        "column": 50
                      },
                      "text": "."
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 3,
                        "column": 50
                      },
                      "end": {
                        "row": 3,
                        "column": 75
                      },
                      "text": "assertRunningInMainThread"
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 3,
                        "column": 75
                      },
                      "end": {
                        "row": 3,
                        "column": 77
                      },
                      "text": "()",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 3,
                            "column": 75
                          },
                          "end": {
                            "row": 3,
                            "column": 76
                          },
                          "text": "("
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 3,
                            "column": 76
                          },
                          "end": {
                            "row": 3,
                            "column": 77
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 3,
                    "column": 77
                  },
                  "end": {
                    "row": 3,
                    "column": 78
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "line_comment",
              "start": {
                "row": 5,
                "column": 2
              },
              "end": {
                "row": 5,
                "column": 75
              },
              "text": "// to better handle the lack of resources (potentially by a scale-in), we"
            },
            {
              "type": "line_comment",
              "start": {
                "row": 6,
                "column": 2
              },
              "end": {
                "row": 6,
                "column": 60
              },
              "text": "// make failures due to missing resources global failures "
            },
            {
              "type": "if_statement",
              "start": {
                "row": 7,
                "column": 2
              },
              "end": {
                "row": 11,
                "column": 3
              },
              "text": "if (cause instanceof NoResourceAvailableException) {\n\t\t\tLOG.info(\"Not enough resources to schedule {} - triggering full recovery.\", taskExecution);\n\t\t\texecutionGraph.failGlobal(cause);\n\t\t\treturn;\n\t\t}",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 7,
                    "column": 2
                  },
                  "end": {
                    "row": 7,
                    "column": 4
                  },
                  "text": "if"
                },
                {
                  "type": "condition",
                  "start": {
                    "row": 7,
                    "column": 5
                  },
                  "end": {
                    "row": 7,
                    "column": 52
                  },
                  "text": "(cause instanceof NoResourceAvailableException)",
                  "children": [
                    {
                      "type": "(",
                      "start": {
                        "row": 7,
                        "column": 5
                      },
                      "end": {
                        "row": 7,
                        "column": 6
                      },
                      "text": "("
                    },
                    {
                      "type": "instanceof_expression",
                      "start": {
                        "row": 7,
                        "column": 6
                      },
                      "end": {
                        "row": 7,
                        "column": 51
                      },
                      "text": "cause instanceof NoResourceAvailableException",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 7,
                            "column": 6
                          },
                          "end": {
                            "row": 7,
                            "column": 11
                          },
                          "text": "cause"
                        },
                        {
                          "type": "instanceof",
                          "start": {
                            "row": 7,
                            "column": 12
                          },
                          "end": {
                            "row": 7,
                            "column": 22
                          },
                          "text": "instanceof"
                        },
                        {
                          "type": "type_identifier",
                          "start": {
                            "row": 7,
                            "column": 23
                          },
                          "end": {
                            "row": 7,
                            "column": 51
                          },
                          "text": "NoResourceAvailableException"
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start": {
                        "row": 7,
                        "column": 51
                      },
                      "end": {
                        "row": 7,
                        "column": 52
                      },
                      "text": ")"
                    }
                  ]
                },
                {
                  "type": "block",
                  "start": {
                    "row": 7,
                    "column": 53
                  },
                  "end": {
                    "row": 11,
                    "column": 3
                  },
                  "text": "{\n\t\t\tLOG.info(\"Not enough resources to schedule {} - triggering full recovery.\", taskExecution);\n\t\t\texecutionGraph.failGlobal(cause);\n\t\t\treturn;\n\t\t}",
                  "children": [
                    {
                      "type": "{",
                      "start": {
                        "row": 7,
                        "column": 53
                      },
                      "end": {
                        "row": 7,
                        "column": 54
                      },
                      "text": "{"
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 8,
                        "column": 3
                      },
                      "end": {
                        "row": 8,
                        "column": 94
                      },
                      "text": "LOG.info(\"Not enough resources to schedule {} - triggering full recovery.\", taskExecution);",
                      "children": [
                        {
                          "type": "method_invocation",
                          "start": {
                            "row": 8,
                            "column": 3
                          },
                          "end": {
                            "row": 8,
                            "column": 93
                          },
                          "text": "LOG.info(\"Not enough resources to schedule {} - triggering full recovery.\", taskExecution)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 8,
                                "column": 3
                              },
                              "end": {
                                "row": 8,
                                "column": 6
                              },
                              "text": "LOG"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 8,
                                "column": 6
                              },
                              "end": {
                                "row": 8,
                                "column": 7
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 8,
                                "column": 7
                              },
                              "end": {
                                "row": 8,
                                "column": 11
                              },
                              "text": "info"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 8,
                                "column": 11
                              },
                              "end": {
                                "row": 8,
                                "column": 93
                              },
                              "text": "(\"Not enough resources to schedule {} - triggering full recovery.\", taskExecution)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 8,
                                    "column": 11
                                  },
                                  "end": {
                                    "row": 8,
                                    "column": 12
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "string_literal",
                                  "start": {
                                    "row": 8,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 8,
                                    "column": 77
                                  },
                                  "text": "\"Not enough resources to schedule {} - triggering full recovery.\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start": {
                                        "row": 8,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 8,
                                        "column": 13
                                      },
                                      "text": "\""
                                    },
                                    {
                                      "type": "string_fragment",
                                      "start": {
                                        "row": 8,
                                        "column": 13
                                      },
                                      "end": {
                                        "row": 8,
                                        "column": 76
                                      },
                                      "text": "Not enough resources to schedule {} - triggering full recovery."
                                    },
                                    {
                                      "type": "\"",
                                      "start": {
                                        "row": 8,
                                        "column": 76
                                      },
                                      "end": {
                                        "row": 8,
                                        "column": 77
                                      },
                                      "text": "\""
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 8,
                                    "column": 77
                                  },
                                  "end": {
                                    "row": 8,
                                    "column": 78
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 8,
                                    "column": 79
                                  },
                                  "end": {
                                    "row": 8,
                                    "column": 92
                                  },
                                  "text": "taskExecution"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 8,
                                    "column": 92
                                  },
                                  "end": {
                                    "row": 8,
                                    "column": 93
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start": {
                            "row": 8,
                            "column": 93
                          },
                          "end": {
                            "row": 8,
                            "column": 94
                          },
                          "text": ";"
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 9,
                        "column": 3
                      },
                      "end": {
                        "row": 9,
                        "column": 36
                      },
                      "text": "executionGraph.failGlobal(cause);",
                      "children": [
                        {
                          "type": "method_invocation",
                          "start": {
                            "row": 9,
                            "column": 3
                          },
                          "end": {
                            "row": 9,
                            "column": 35
                          },
                          "text": "executionGraph.failGlobal(cause)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 9,
                                "column": 3
                              },
                              "end": {
                                "row": 9,
                                "column": 17
                              },
                              "text": "executionGraph"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 9,
                                "column": 17
                              },
                              "end": {
                                "row": 9,
                                "column": 18
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 9,
                                "column": 18
                              },
                              "end": {
                                "row": 9,
                                "column": 28
                              },
                              "text": "failGlobal"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 9,
                                "column": 28
                              },
                              "end": {
                                "row": 9,
                                "column": 35
                              },
                              "text": "(cause)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 9,
                                    "column": 28
                                  },
                                  "end": {
                                    "row": 9,
                                    "column": 29
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 9,
                                    "column": 29
                                  },
                                  "end": {
                                    "row": 9,
                                    "column": 34
                                  },
                                  "text": "cause"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 9,
                                    "column": 34
                                  },
                                  "end": {
                                    "row": 9,
                                    "column": 35
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start": {
                            "row": 9,
                            "column": 35
                          },
                          "end": {
                            "row": 9,
                            "column": 36
                          },
                          "text": ";"
                        }
                      ]
                    },
                    {
                      "type": "return_statement",
                      "start": {
                        "row": 10,
                        "column": 3
                      },
                      "end": {
                        "row": 10,
                        "column": 10
                      },
                      "text": "return;",
                      "children": [
                        {
                          "type": "return",
                          "start": {
                            "row": 10,
                            "column": 3
                          },
                          "end": {
                            "row": 10,
                            "column": 9
                          },
                          "text": "return"
                        },
                        {
                          "type": ";",
                          "start": {
                            "row": 10,
                            "column": 9
                          },
                          "end": {
                            "row": 10,
                            "column": 10
                          },
                          "text": ";"
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start": {
                        "row": 11,
                        "column": 2
                      },
                      "end": {
                        "row": 11,
                        "column": 3
                      },
                      "text": "}"
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 13,
                "column": 2
              },
              "end": {
                "row": 14,
                "column": 95
              },
              "text": "LOG.info(\"Recovering task failure for {} (#{}) via individual restart.\", \n\t\t\t\ttaskExecution.getVertex().getTaskNameWithSubtaskIndex(), taskExecution.getAttemptNumber());",
              "children": [
                {
                  "type": "method_invocation",
                  "start": {
                    "row": 13,
                    "column": 2
                  },
                  "end": {
                    "row": 14,
                    "column": 94
                  },
                  "text": "LOG.info(\"Recovering task failure for {} (#{}) via individual restart.\", \n\t\t\t\ttaskExecution.getVertex().getTaskNameWithSubtaskIndex(), taskExecution.getAttemptNumber())",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 13,
                        "column": 2
                      },
                      "end": {
                        "row": 13,
                        "column": 5
                      },
                      "text": "LOG"
                    },
                    {
                      "type": ".",
                      "start": {
                        "row": 13,
                        "column": 5
                      },
                      "end": {
                        "row": 13,
                        "column": 6
                      },
                      "text": "."
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 13,
                        "column": 6
                      },
                      "end": {
                        "row": 13,
                        "column": 10
                      },
                      "text": "info"
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 13,
                        "column": 10
                      },
                      "end": {
                        "row": 14,
                        "column": 94
                      },
                      "text": "(\"Recovering task failure for {} (#{}) via individual restart.\", \n\t\t\t\ttaskExecution.getVertex().getTaskNameWithSubtaskIndex(), taskExecution.getAttemptNumber())",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 13,
                            "column": 10
                          },
                          "end": {
                            "row": 13,
                            "column": 11
                          },
                          "text": "("
                        },
                        {
                          "type": "string_literal",
                          "start": {
                            "row": 13,
                            "column": 11
                          },
                          "end": {
                            "row": 13,
                            "column": 73
                          },
                          "text": "\"Recovering task failure for {} (#{}) via individual restart.\"",
                          "children": [
                            {
                              "type": "\"",
                              "start": {
                                "row": 13,
                                "column": 11
                              },
                              "end": {
                                "row": 13,
                                "column": 12
                              },
                              "text": "\""
                            },
                            {
                              "type": "string_fragment",
                              "start": {
                                "row": 13,
                                "column": 12
                              },
                              "end": {
                                "row": 13,
                                "column": 72
                              },
                              "text": "Recovering task failure for {} (#{}) via individual restart."
                            },
                            {
                              "type": "\"",
                              "start": {
                                "row": 13,
                                "column": 72
                              },
                              "end": {
                                "row": 13,
                                "column": 73
                              },
                              "text": "\""
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 13,
                            "column": 73
                          },
                          "end": {
                            "row": 13,
                            "column": 74
                          },
                          "text": ","
                        },
                        {
                          "type": "method_invocation",
                          "start": {
                            "row": 14,
                            "column": 4
                          },
                          "end": {
                            "row": 14,
                            "column": 59
                          },
                          "text": "taskExecution.getVertex().getTaskNameWithSubtaskIndex()",
                          "children": [
                            {
                              "type": "method_invocation",
                              "start": {
                                "row": 14,
                                "column": 4
                              },
                              "end": {
                                "row": 14,
                                "column": 29
                              },
                              "text": "taskExecution.getVertex()",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 14,
                                    "column": 4
                                  },
                                  "end": {
                                    "row": 14,
                                    "column": 17
                                  },
                                  "text": "taskExecution"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 14,
                                    "column": 17
                                  },
                                  "end": {
                                    "row": 14,
                                    "column": 18
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 14,
                                    "column": 18
                                  },
                                  "end": {
                                    "row": 14,
                                    "column": 27
                                  },
                                  "text": "getVertex"
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 14,
                                    "column": 27
                                  },
                                  "end": {
                                    "row": 14,
                                    "column": 29
                                  },
                                  "text": "()",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 14,
                                        "column": 27
                                      },
                                      "end": {
                                        "row": 14,
                                        "column": 28
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 14,
                                        "column": 28
                                      },
                                      "end": {
                                        "row": 14,
                                        "column": 29
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 14,
                                "column": 29
                              },
                              "end": {
                                "row": 14,
                                "column": 30
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 14,
                                "column": 30
                              },
                              "end": {
                                "row": 14,
                                "column": 57
                              },
                              "text": "getTaskNameWithSubtaskIndex"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 14,
                                "column": 57
                              },
                              "end": {
                                "row": 14,
                                "column": 59
                              },
                              "text": "()",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 14,
                                    "column": 57
                                  },
                                  "end": {
                                    "row": 14,
                                    "column": 58
                                  },
                                  "text": "("
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 14,
                                    "column": 58
                                  },
                                  "end": {
                                    "row": 14,
                                    "column": 59
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 14,
                            "column": 59
                          },
                          "end": {
                            "row": 14,
                            "column": 60
                          },
                          "text": ","
                        },
                        {
                          "type": "method_invocation",
                          "start": {
                            "row": 14,
                            "column": 61
                          },
                          "end": {
                            "row": 14,
                            "column": 93
                          },
                          "text": "taskExecution.getAttemptNumber()",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 14,
                                "column": 61
                              },
                              "end": {
                                "row": 14,
                                "column": 74
                              },
                              "text": "taskExecution"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 14,
                                "column": 74
                              },
                              "end": {
                                "row": 14,
                                "column": 75
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 14,
                                "column": 75
                              },
                              "end": {
                                "row": 14,
                                "column": 91
                              },
                              "text": "getAttemptNumber"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 14,
                                "column": 91
                              },
                              "end": {
                                "row": 14,
                                "column": 93
                              },
                              "text": "()",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 14,
                                    "column": 91
                                  },
                                  "end": {
                                    "row": 14,
                                    "column": 92
                                  },
                                  "text": "("
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 14,
                                    "column": 92
                                  },
                                  "end": {
                                    "row": 14,
                                    "column": 93
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 14,
                            "column": 93
                          },
                          "end": {
                            "row": 14,
                            "column": 94
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 14,
                    "column": 94
                  },
                  "end": {
                    "row": 14,
                    "column": 95
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 16,
                "column": 2
              },
              "end": {
                "row": 16,
                "column": 24
              },
              "text": "numTaskFailures.inc();",
              "children": [
                {
                  "type": "method_invocation",
                  "start": {
                    "row": 16,
                    "column": 2
                  },
                  "end": {
                    "row": 16,
                    "column": 23
                  },
                  "text": "numTaskFailures.inc()",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 16,
                        "column": 2
                      },
                      "end": {
                        "row": 16,
                        "column": 17
                      },
                      "text": "numTaskFailures"
                    },
                    {
                      "type": ".",
                      "start": {
                        "row": 16,
                        "column": 17
                      },
                      "end": {
                        "row": 16,
                        "column": 18
                      },
                      "text": "."
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 16,
                        "column": 18
                      },
                      "end": {
                        "row": 16,
                        "column": 21
                      },
                      "text": "inc"
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 16,
                        "column": 21
                      },
                      "end": {
                        "row": 16,
                        "column": 23
                      },
                      "text": "()",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 16,
                            "column": 21
                          },
                          "end": {
                            "row": 16,
                            "column": 22
                          },
                          "text": "("
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 16,
                            "column": 22
                          },
                          "end": {
                            "row": 16,
                            "column": 23
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 16,
                    "column": 23
                  },
                  "end": {
                    "row": 16,
                    "column": 24
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "line_comment",
              "start": {
                "row": 18,
                "column": 2
              },
              "end": {
                "row": 18,
                "column": 69
              },
              "text": "// trigger the restart once the task has reached its terminal state"
            },
            {
              "type": "line_comment",
              "start": {
                "row": 19,
                "column": 2
              },
              "end": {
                "row": 19,
                "column": 79
              },
              "text": "// Note: currently all tasks passed here are already in their terminal state,"
            },
            {
              "type": "line_comment",
              "start": {
                "row": 20,
                "column": 2
              },
              "end": {
                "row": 20,
                "column": 91
              },
              "text": "//       so we could actually avoid the future. We use it anyways because it is cheap and"
            },
            {
              "type": "line_comment",
              "start": {
                "row": 21,
                "column": 2
              },
              "end": {
                "row": 21,
                "column": 45
              },
              "text": "//       it helps to support better testing"
            },
            {
              "type": "local_variable_declaration",
              "start": {
                "row": 22,
                "column": 2
              },
              "end": {
                "row": 22,
                "column": 101
              },
              "text": "final CompletableFuture<ExecutionState> terminationFuture = taskExecution.getTerminalStateFuture();",
              "children": [
                {
                  "type": "modifiers",
                  "start": {
                    "row": 22,
                    "column": 2
                  },
                  "end": {
                    "row": 22,
                    "column": 7
                  },
                  "text": "final",
                  "children": [
                    {
                      "type": "final",
                      "start": {
                        "row": 22,
                        "column": 2
                      },
                      "end": {
                        "row": 22,
                        "column": 7
                      },
                      "text": "final"
                    }
                  ]
                },
                {
                  "type": "generic_type",
                  "start": {
                    "row": 22,
                    "column": 8
                  },
                  "end": {
                    "row": 22,
                    "column": 41
                  },
                  "text": "CompletableFuture<ExecutionState>",
                  "children": [
                    {
                      "type": "type_identifier",
                      "start": {
                        "row": 22,
                        "column": 8
                      },
                      "end": {
                        "row": 22,
                        "column": 25
                      },
                      "text": "CompletableFuture"
                    },
                    {
                      "type": "type_arguments",
                      "start": {
                        "row": 22,
                        "column": 25
                      },
                      "end": {
                        "row": 22,
                        "column": 41
                      },
                      "text": "<ExecutionState>",
                      "children": [
                        {
                          "type": "<",
                          "start": {
                            "row": 22,
                            "column": 25
                          },
                          "end": {
                            "row": 22,
                            "column": 26
                          },
                          "text": "<"
                        },
                        {
                          "type": "type_identifier",
                          "start": {
                            "row": 22,
                            "column": 26
                          },
                          "end": {
                            "row": 22,
                            "column": 40
                          },
                          "text": "ExecutionState"
                        },
                        {
                          "type": ">",
                          "start": {
                            "row": 22,
                            "column": 40
                          },
                          "end": {
                            "row": 22,
                            "column": 41
                          },
                          "text": ">"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "variable_declarator",
                  "start": {
                    "row": 22,
                    "column": 42
                  },
                  "end": {
                    "row": 22,
                    "column": 100
                  },
                  "text": "terminationFuture = taskExecution.getTerminalStateFuture()",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 22,
                        "column": 42
                      },
                      "end": {
                        "row": 22,
                        "column": 59
                      },
                      "text": "terminationFuture"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 22,
                        "column": 60
                      },
                      "end": {
                        "row": 22,
                        "column": 61
                      },
                      "text": "="
                    },
                    {
                      "type": "method_invocation",
                      "start": {
                        "row": 22,
                        "column": 62
                      },
                      "end": {
                        "row": 22,
                        "column": 100
                      },
                      "text": "taskExecution.getTerminalStateFuture()",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 22,
                            "column": 62
                          },
                          "end": {
                            "row": 22,
                            "column": 75
                          },
                          "text": "taskExecution"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 22,
                            "column": 75
                          },
                          "end": {
                            "row": 22,
                            "column": 76
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 22,
                            "column": 76
                          },
                          "end": {
                            "row": 22,
                            "column": 98
                          },
                          "text": "getTerminalStateFuture"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 22,
                            "column": 98
                          },
                          "end": {
                            "row": 22,
                            "column": 100
                          },
                          "text": "()",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 22,
                                "column": 98
                              },
                              "end": {
                                "row": 22,
                                "column": 99
                              },
                              "text": "("
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 22,
                                "column": 99
                              },
                              "end": {
                                "row": 22,
                                "column": 100
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 22,
                    "column": 100
                  },
                  "end": {
                    "row": 22,
                    "column": 101
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 23,
                "column": 2
              },
              "end": {
                "row": 24,
                "column": 104
              },
              "text": "terminationFuture.thenRun(\n\t\t\t() -> performExecutionVertexRestart(taskExecution.getVertex(), taskExecution.getGlobalModVersion()));",
              "children": [
                {
                  "type": "method_invocation",
                  "start": {
                    "row": 23,
                    "column": 2
                  },
                  "end": {
                    "row": 24,
                    "column": 103
                  },
                  "text": "terminationFuture.thenRun(\n\t\t\t() -> performExecutionVertexRestart(taskExecution.getVertex(), taskExecution.getGlobalModVersion()))",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 23,
                        "column": 2
                      },
                      "end": {
                        "row": 23,
                        "column": 19
                      },
                      "text": "terminationFuture"
                    },
                    {
                      "type": ".",
                      "start": {
                        "row": 23,
                        "column": 19
                      },
                      "end": {
                        "row": 23,
                        "column": 20
                      },
                      "text": "."
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 23,
                        "column": 20
                      },
                      "end": {
                        "row": 23,
                        "column": 27
                      },
                      "text": "thenRun"
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 23,
                        "column": 27
                      },
                      "end": {
                        "row": 24,
                        "column": 103
                      },
                      "text": "(\n\t\t\t() -> performExecutionVertexRestart(taskExecution.getVertex(), taskExecution.getGlobalModVersion()))",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 23,
                            "column": 27
                          },
                          "end": {
                            "row": 23,
                            "column": 28
                          },
                          "text": "("
                        },
                        {
                          "type": "lambda_expression",
                          "start": {
                            "row": 24,
                            "column": 3
                          },
                          "end": {
                            "row": 24,
                            "column": 102
                          },
                          "text": "() -> performExecutionVertexRestart(taskExecution.getVertex(), taskExecution.getGlobalModVersion())",
                          "children": [
                            {
                              "type": "formal_parameters",
                              "start": {
                                "row": 24,
                                "column": 3
                              },
                              "end": {
                                "row": 24,
                                "column": 5
                              },
                              "text": "()",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 24,
                                    "column": 3
                                  },
                                  "end": {
                                    "row": 24,
                                    "column": 4
                                  },
                                  "text": "("
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 24,
                                    "column": 4
                                  },
                                  "end": {
                                    "row": 24,
                                    "column": 5
                                  },
                                  "text": ")"
                                }
                              ]
                            },
                            {
                              "type": "->",
                              "start": {
                                "row": 24,
                                "column": 6
                              },
                              "end": {
                                "row": 24,
                                "column": 8
                              },
                              "text": "->"
                            },
                            {
                              "type": "method_invocation",
                              "start": {
                                "row": 24,
                                "column": 9
                              },
                              "end": {
                                "row": 24,
                                "column": 102
                              },
                              "text": "performExecutionVertexRestart(taskExecution.getVertex(), taskExecution.getGlobalModVersion())",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 24,
                                    "column": 9
                                  },
                                  "end": {
                                    "row": 24,
                                    "column": 38
                                  },
                                  "text": "performExecutionVertexRestart"
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 24,
                                    "column": 38
                                  },
                                  "end": {
                                    "row": 24,
                                    "column": 102
                                  },
                                  "text": "(taskExecution.getVertex(), taskExecution.getGlobalModVersion())",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 24,
                                        "column": 38
                                      },
                                      "end": {
                                        "row": 24,
                                        "column": 39
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "method_invocation",
                                      "start": {
                                        "row": 24,
                                        "column": 39
                                      },
                                      "end": {
                                        "row": 24,
                                        "column": 64
                                      },
                                      "text": "taskExecution.getVertex()",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 24,
                                            "column": 39
                                          },
                                          "end": {
                                            "row": 24,
                                            "column": 52
                                          },
                                          "text": "taskExecution"
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 24,
                                            "column": 52
                                          },
                                          "end": {
                                            "row": 24,
                                            "column": 53
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 24,
                                            "column": 53
                                          },
                                          "end": {
                                            "row": 24,
                                            "column": 62
                                          },
                                          "text": "getVertex"
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 24,
                                            "column": 62
                                          },
                                          "end": {
                                            "row": 24,
                                            "column": 64
                                          },
                                          "text": "()",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 24,
                                                "column": 62
                                              },
                                              "end": {
                                                "row": 24,
                                                "column": 63
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 24,
                                                "column": 63
                                              },
                                              "end": {
                                                "row": 24,
                                                "column": 64
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 24,
                                        "column": 64
                                      },
                                      "end": {
                                        "row": 24,
                                        "column": 65
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "method_invocation",
                                      "start": {
                                        "row": 24,
                                        "column": 66
                                      },
                                      "end": {
                                        "row": 24,
                                        "column": 101
                                      },
                                      "text": "taskExecution.getGlobalModVersion()",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 24,
                                            "column": 66
                                          },
                                          "end": {
                                            "row": 24,
                                            "column": 79
                                          },
                                          "text": "taskExecution"
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 24,
                                            "column": 79
                                          },
                                          "end": {
                                            "row": 24,
                                            "column": 80
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 24,
                                            "column": 80
                                          },
                                          "end": {
                                            "row": 24,
                                            "column": 99
                                          },
                                          "text": "getGlobalModVersion"
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 24,
                                            "column": 99
                                          },
                                          "end": {
                                            "row": 24,
                                            "column": 101
                                          },
                                          "text": "()",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 24,
                                                "column": 99
                                              },
                                              "end": {
                                                "row": 24,
                                                "column": 100
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 24,
                                                "column": 100
                                              },
                                              "end": {
                                                "row": 24,
                                                "column": 101
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 24,
                                        "column": 101
                                      },
                                      "end": {
                                        "row": 24,
                                        "column": 102
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 24,
                            "column": 102
                          },
                          "end": {
                            "row": 24,
                            "column": 103
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 24,
                    "column": 103
                  },
                  "end": {
                    "row": 24,
                    "column": 104
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "}",
              "start": {
                "row": 25,
                "column": 1
              },
              "end": {
                "row": 25,
                "column": 2
              },
              "text": "}"
            }
          ]
        }
      ]
    }
  ]
}