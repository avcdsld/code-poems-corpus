{
  "type": "program",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 18,
    "column": 5
  },
  "text": "public int awaitAdvanceInterruptibly(int phase,\n                                         long timeout, TimeUnit unit)\n        throws InterruptedException, TimeoutException {\n        long nanos = unit.toNanos(timeout);\n        final Phaser root = this.root;\n        long s = (root == this) ? state : reconcileState();\n        int p = (int)(s >>> PHASE_SHIFT);\n        if (phase < 0)\n            return phase;\n        if (p == phase) {\n            QNode node = new QNode(this, phase, true, true, nanos);\n            p = root.internalAwaitAdvance(phase, node);\n            if (node.wasInterrupted)\n                throw new InterruptedException();\n            else if (p == phase)\n                throw new TimeoutException();\n        }\n        return p;\n    }",
  "children": [
    {
      "type": "method_declaration",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 18,
        "column": 5
      },
      "text": "public int awaitAdvanceInterruptibly(int phase,\n                                         long timeout, TimeUnit unit)\n        throws InterruptedException, TimeoutException {\n        long nanos = unit.toNanos(timeout);\n        final Phaser root = this.root;\n        long s = (root == this) ? state : reconcileState();\n        int p = (int)(s >>> PHASE_SHIFT);\n        if (phase < 0)\n            return phase;\n        if (p == phase) {\n            QNode node = new QNode(this, phase, true, true, nanos);\n            p = root.internalAwaitAdvance(phase, node);\n            if (node.wasInterrupted)\n                throw new InterruptedException();\n            else if (p == phase)\n                throw new TimeoutException();\n        }\n        return p;\n    }",
      "children": [
        {
          "type": "modifiers",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 6
          },
          "text": "public",
          "children": [
            {
              "type": "public",
              "start": {
                "row": 0,
                "column": 0
              },
              "end": {
                "row": 0,
                "column": 6
              },
              "text": "public"
            }
          ]
        },
        {
          "type": "integral_type",
          "start": {
            "row": 0,
            "column": 7
          },
          "end": {
            "row": 0,
            "column": 10
          },
          "text": "int",
          "children": [
            {
              "type": "int",
              "start": {
                "row": 0,
                "column": 7
              },
              "end": {
                "row": 0,
                "column": 10
              },
              "text": "int"
            }
          ]
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 11
          },
          "end": {
            "row": 0,
            "column": 36
          },
          "text": "awaitAdvanceInterruptibly"
        },
        {
          "type": "formal_parameters",
          "start": {
            "row": 0,
            "column": 36
          },
          "end": {
            "row": 1,
            "column": 69
          },
          "text": "(int phase,\n                                         long timeout, TimeUnit unit)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 36
              },
              "end": {
                "row": 0,
                "column": 37
              },
              "text": "("
            },
            {
              "type": "formal_parameter",
              "start": {
                "row": 0,
                "column": 37
              },
              "end": {
                "row": 0,
                "column": 46
              },
              "text": "int phase",
              "children": [
                {
                  "type": "integral_type",
                  "start": {
                    "row": 0,
                    "column": 37
                  },
                  "end": {
                    "row": 0,
                    "column": 40
                  },
                  "text": "int",
                  "children": [
                    {
                      "type": "int",
                      "start": {
                        "row": 0,
                        "column": 37
                      },
                      "end": {
                        "row": 0,
                        "column": 40
                      },
                      "text": "int"
                    }
                  ]
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 41
                  },
                  "end": {
                    "row": 0,
                    "column": 46
                  },
                  "text": "phase"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 46
              },
              "end": {
                "row": 0,
                "column": 47
              },
              "text": ","
            },
            {
              "type": "formal_parameter",
              "start": {
                "row": 1,
                "column": 41
              },
              "end": {
                "row": 1,
                "column": 53
              },
              "text": "long timeout",
              "children": [
                {
                  "type": "integral_type",
                  "start": {
                    "row": 1,
                    "column": 41
                  },
                  "end": {
                    "row": 1,
                    "column": 45
                  },
                  "text": "long",
                  "children": [
                    {
                      "type": "long",
                      "start": {
                        "row": 1,
                        "column": 41
                      },
                      "end": {
                        "row": 1,
                        "column": 45
                      },
                      "text": "long"
                    }
                  ]
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 1,
                    "column": 46
                  },
                  "end": {
                    "row": 1,
                    "column": 53
                  },
                  "text": "timeout"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 1,
                "column": 53
              },
              "end": {
                "row": 1,
                "column": 54
              },
              "text": ","
            },
            {
              "type": "formal_parameter",
              "start": {
                "row": 1,
                "column": 55
              },
              "end": {
                "row": 1,
                "column": 68
              },
              "text": "TimeUnit unit",
              "children": [
                {
                  "type": "type_identifier",
                  "start": {
                    "row": 1,
                    "column": 55
                  },
                  "end": {
                    "row": 1,
                    "column": 63
                  },
                  "text": "TimeUnit"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 1,
                    "column": 64
                  },
                  "end": {
                    "row": 1,
                    "column": 68
                  },
                  "text": "unit"
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 1,
                "column": 68
              },
              "end": {
                "row": 1,
                "column": 69
              },
              "text": ")"
            }
          ]
        },
        {
          "type": "throws",
          "start": {
            "row": 2,
            "column": 8
          },
          "end": {
            "row": 2,
            "column": 53
          },
          "text": "throws InterruptedException, TimeoutException",
          "children": [
            {
              "type": "throws",
              "start": {
                "row": 2,
                "column": 8
              },
              "end": {
                "row": 2,
                "column": 14
              },
              "text": "throws"
            },
            {
              "type": "type_identifier",
              "start": {
                "row": 2,
                "column": 15
              },
              "end": {
                "row": 2,
                "column": 35
              },
              "text": "InterruptedException"
            },
            {
              "type": ",",
              "start": {
                "row": 2,
                "column": 35
              },
              "end": {
                "row": 2,
                "column": 36
              },
              "text": ","
            },
            {
              "type": "type_identifier",
              "start": {
                "row": 2,
                "column": 37
              },
              "end": {
                "row": 2,
                "column": 53
              },
              "text": "TimeoutException"
            }
          ]
        },
        {
          "type": "block",
          "start": {
            "row": 2,
            "column": 54
          },
          "end": {
            "row": 18,
            "column": 5
          },
          "text": "{\n        long nanos = unit.toNanos(timeout);\n        final Phaser root = this.root;\n        long s = (root == this) ? state : reconcileState();\n        int p = (int)(s >>> PHASE_SHIFT);\n        if (phase < 0)\n            return phase;\n        if (p == phase) {\n            QNode node = new QNode(this, phase, true, true, nanos);\n            p = root.internalAwaitAdvance(phase, node);\n            if (node.wasInterrupted)\n                throw new InterruptedException();\n            else if (p == phase)\n                throw new TimeoutException();\n        }\n        return p;\n    }",
          "children": [
            {
              "type": "{",
              "start": {
                "row": 2,
                "column": 54
              },
              "end": {
                "row": 2,
                "column": 55
              },
              "text": "{"
            },
            {
              "type": "local_variable_declaration",
              "start": {
                "row": 3,
                "column": 8
              },
              "end": {
                "row": 3,
                "column": 43
              },
              "text": "long nanos = unit.toNanos(timeout);",
              "children": [
                {
                  "type": "integral_type",
                  "start": {
                    "row": 3,
                    "column": 8
                  },
                  "end": {
                    "row": 3,
                    "column": 12
                  },
                  "text": "long",
                  "children": [
                    {
                      "type": "long",
                      "start": {
                        "row": 3,
                        "column": 8
                      },
                      "end": {
                        "row": 3,
                        "column": 12
                      },
                      "text": "long"
                    }
                  ]
                },
                {
                  "type": "variable_declarator",
                  "start": {
                    "row": 3,
                    "column": 13
                  },
                  "end": {
                    "row": 3,
                    "column": 42
                  },
                  "text": "nanos = unit.toNanos(timeout)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 3,
                        "column": 13
                      },
                      "end": {
                        "row": 3,
                        "column": 18
                      },
                      "text": "nanos"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 3,
                        "column": 19
                      },
                      "end": {
                        "row": 3,
                        "column": 20
                      },
                      "text": "="
                    },
                    {
                      "type": "method_invocation",
                      "start": {
                        "row": 3,
                        "column": 21
                      },
                      "end": {
                        "row": 3,
                        "column": 42
                      },
                      "text": "unit.toNanos(timeout)",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 3,
                            "column": 21
                          },
                          "end": {
                            "row": 3,
                            "column": 25
                          },
                          "text": "unit"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 3,
                            "column": 25
                          },
                          "end": {
                            "row": 3,
                            "column": 26
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 3,
                            "column": 26
                          },
                          "end": {
                            "row": 3,
                            "column": 33
                          },
                          "text": "toNanos"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 3,
                            "column": 33
                          },
                          "end": {
                            "row": 3,
                            "column": 42
                          },
                          "text": "(timeout)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 3,
                                "column": 33
                              },
                              "end": {
                                "row": 3,
                                "column": 34
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 3,
                                "column": 34
                              },
                              "end": {
                                "row": 3,
                                "column": 41
                              },
                              "text": "timeout"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 3,
                                "column": 41
                              },
                              "end": {
                                "row": 3,
                                "column": 42
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 3,
                    "column": 42
                  },
                  "end": {
                    "row": 3,
                    "column": 43
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "local_variable_declaration",
              "start": {
                "row": 4,
                "column": 8
              },
              "end": {
                "row": 4,
                "column": 38
              },
              "text": "final Phaser root = this.root;",
              "children": [
                {
                  "type": "modifiers",
                  "start": {
                    "row": 4,
                    "column": 8
                  },
                  "end": {
                    "row": 4,
                    "column": 13
                  },
                  "text": "final",
                  "children": [
                    {
                      "type": "final",
                      "start": {
                        "row": 4,
                        "column": 8
                      },
                      "end": {
                        "row": 4,
                        "column": 13
                      },
                      "text": "final"
                    }
                  ]
                },
                {
                  "type": "type_identifier",
                  "start": {
                    "row": 4,
                    "column": 14
                  },
                  "end": {
                    "row": 4,
                    "column": 20
                  },
                  "text": "Phaser"
                },
                {
                  "type": "variable_declarator",
                  "start": {
                    "row": 4,
                    "column": 21
                  },
                  "end": {
                    "row": 4,
                    "column": 37
                  },
                  "text": "root = this.root",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 4,
                        "column": 21
                      },
                      "end": {
                        "row": 4,
                        "column": 25
                      },
                      "text": "root"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 4,
                        "column": 26
                      },
                      "end": {
                        "row": 4,
                        "column": 27
                      },
                      "text": "="
                    },
                    {
                      "type": "field_access",
                      "start": {
                        "row": 4,
                        "column": 28
                      },
                      "end": {
                        "row": 4,
                        "column": 37
                      },
                      "text": "this.root",
                      "children": [
                        {
                          "type": "this",
                          "start": {
                            "row": 4,
                            "column": 28
                          },
                          "end": {
                            "row": 4,
                            "column": 32
                          },
                          "text": "this"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 4,
                            "column": 32
                          },
                          "end": {
                            "row": 4,
                            "column": 33
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 4,
                            "column": 33
                          },
                          "end": {
                            "row": 4,
                            "column": 37
                          },
                          "text": "root"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 4,
                    "column": 37
                  },
                  "end": {
                    "row": 4,
                    "column": 38
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "local_variable_declaration",
              "start": {
                "row": 5,
                "column": 8
              },
              "end": {
                "row": 5,
                "column": 59
              },
              "text": "long s = (root == this) ? state : reconcileState();",
              "children": [
                {
                  "type": "integral_type",
                  "start": {
                    "row": 5,
                    "column": 8
                  },
                  "end": {
                    "row": 5,
                    "column": 12
                  },
                  "text": "long",
                  "children": [
                    {
                      "type": "long",
                      "start": {
                        "row": 5,
                        "column": 8
                      },
                      "end": {
                        "row": 5,
                        "column": 12
                      },
                      "text": "long"
                    }
                  ]
                },
                {
                  "type": "variable_declarator",
                  "start": {
                    "row": 5,
                    "column": 13
                  },
                  "end": {
                    "row": 5,
                    "column": 58
                  },
                  "text": "s = (root == this) ? state : reconcileState()",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 5,
                        "column": 13
                      },
                      "end": {
                        "row": 5,
                        "column": 14
                      },
                      "text": "s"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 5,
                        "column": 15
                      },
                      "end": {
                        "row": 5,
                        "column": 16
                      },
                      "text": "="
                    },
                    {
                      "type": "ternary_expression",
                      "start": {
                        "row": 5,
                        "column": 17
                      },
                      "end": {
                        "row": 5,
                        "column": 58
                      },
                      "text": "(root == this) ? state : reconcileState()",
                      "children": [
                        {
                          "type": "parenthesized_expression",
                          "start": {
                            "row": 5,
                            "column": 17
                          },
                          "end": {
                            "row": 5,
                            "column": 31
                          },
                          "text": "(root == this)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 5,
                                "column": 17
                              },
                              "end": {
                                "row": 5,
                                "column": 18
                              },
                              "text": "("
                            },
                            {
                              "type": "binary_expression",
                              "start": {
                                "row": 5,
                                "column": 18
                              },
                              "end": {
                                "row": 5,
                                "column": 30
                              },
                              "text": "root == this",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 5,
                                    "column": 18
                                  },
                                  "end": {
                                    "row": 5,
                                    "column": 22
                                  },
                                  "text": "root"
                                },
                                {
                                  "type": "==",
                                  "start": {
                                    "row": 5,
                                    "column": 23
                                  },
                                  "end": {
                                    "row": 5,
                                    "column": 25
                                  },
                                  "text": "=="
                                },
                                {
                                  "type": "this",
                                  "start": {
                                    "row": 5,
                                    "column": 26
                                  },
                                  "end": {
                                    "row": 5,
                                    "column": 30
                                  },
                                  "text": "this"
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 5,
                                "column": 30
                              },
                              "end": {
                                "row": 5,
                                "column": 31
                              },
                              "text": ")"
                            }
                          ]
                        },
                        {
                          "type": "?",
                          "start": {
                            "row": 5,
                            "column": 32
                          },
                          "end": {
                            "row": 5,
                            "column": 33
                          },
                          "text": "?"
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 5,
                            "column": 34
                          },
                          "end": {
                            "row": 5,
                            "column": 39
                          },
                          "text": "state"
                        },
                        {
                          "type": ":",
                          "start": {
                            "row": 5,
                            "column": 40
                          },
                          "end": {
                            "row": 5,
                            "column": 41
                          },
                          "text": ":"
                        },
                        {
                          "type": "method_invocation",
                          "start": {
                            "row": 5,
                            "column": 42
                          },
                          "end": {
                            "row": 5,
                            "column": 58
                          },
                          "text": "reconcileState()",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 5,
                                "column": 42
                              },
                              "end": {
                                "row": 5,
                                "column": 56
                              },
                              "text": "reconcileState"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 5,
                                "column": 56
                              },
                              "end": {
                                "row": 5,
                                "column": 58
                              },
                              "text": "()",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 5,
                                    "column": 56
                                  },
                                  "end": {
                                    "row": 5,
                                    "column": 57
                                  },
                                  "text": "("
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 5,
                                    "column": 57
                                  },
                                  "end": {
                                    "row": 5,
                                    "column": 58
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 5,
                    "column": 58
                  },
                  "end": {
                    "row": 5,
                    "column": 59
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "local_variable_declaration",
              "start": {
                "row": 6,
                "column": 8
              },
              "end": {
                "row": 6,
                "column": 41
              },
              "text": "int p = (int)(s >>> PHASE_SHIFT);",
              "children": [
                {
                  "type": "integral_type",
                  "start": {
                    "row": 6,
                    "column": 8
                  },
                  "end": {
                    "row": 6,
                    "column": 11
                  },
                  "text": "int",
                  "children": [
                    {
                      "type": "int",
                      "start": {
                        "row": 6,
                        "column": 8
                      },
                      "end": {
                        "row": 6,
                        "column": 11
                      },
                      "text": "int"
                    }
                  ]
                },
                {
                  "type": "variable_declarator",
                  "start": {
                    "row": 6,
                    "column": 12
                  },
                  "end": {
                    "row": 6,
                    "column": 40
                  },
                  "text": "p = (int)(s >>> PHASE_SHIFT)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 6,
                        "column": 12
                      },
                      "end": {
                        "row": 6,
                        "column": 13
                      },
                      "text": "p"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 6,
                        "column": 14
                      },
                      "end": {
                        "row": 6,
                        "column": 15
                      },
                      "text": "="
                    },
                    {
                      "type": "cast_expression",
                      "start": {
                        "row": 6,
                        "column": 16
                      },
                      "end": {
                        "row": 6,
                        "column": 40
                      },
                      "text": "(int)(s >>> PHASE_SHIFT)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 6,
                            "column": 16
                          },
                          "end": {
                            "row": 6,
                            "column": 17
                          },
                          "text": "("
                        },
                        {
                          "type": "integral_type",
                          "start": {
                            "row": 6,
                            "column": 17
                          },
                          "end": {
                            "row": 6,
                            "column": 20
                          },
                          "text": "int",
                          "children": [
                            {
                              "type": "int",
                              "start": {
                                "row": 6,
                                "column": 17
                              },
                              "end": {
                                "row": 6,
                                "column": 20
                              },
                              "text": "int"
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 6,
                            "column": 20
                          },
                          "end": {
                            "row": 6,
                            "column": 21
                          },
                          "text": ")"
                        },
                        {
                          "type": "parenthesized_expression",
                          "start": {
                            "row": 6,
                            "column": 21
                          },
                          "end": {
                            "row": 6,
                            "column": 40
                          },
                          "text": "(s >>> PHASE_SHIFT)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 6,
                                "column": 21
                              },
                              "end": {
                                "row": 6,
                                "column": 22
                              },
                              "text": "("
                            },
                            {
                              "type": "binary_expression",
                              "start": {
                                "row": 6,
                                "column": 22
                              },
                              "end": {
                                "row": 6,
                                "column": 39
                              },
                              "text": "s >>> PHASE_SHIFT",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 6,
                                    "column": 22
                                  },
                                  "end": {
                                    "row": 6,
                                    "column": 23
                                  },
                                  "text": "s"
                                },
                                {
                                  "type": ">>>",
                                  "start": {
                                    "row": 6,
                                    "column": 24
                                  },
                                  "end": {
                                    "row": 6,
                                    "column": 27
                                  },
                                  "text": ">>>"
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 6,
                                    "column": 28
                                  },
                                  "end": {
                                    "row": 6,
                                    "column": 39
                                  },
                                  "text": "PHASE_SHIFT"
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 6,
                                "column": 39
                              },
                              "end": {
                                "row": 6,
                                "column": 40
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 6,
                    "column": 40
                  },
                  "end": {
                    "row": 6,
                    "column": 41
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 7,
                "column": 8
              },
              "end": {
                "row": 8,
                "column": 25
              },
              "text": "if (phase < 0)\n            return phase;",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 7,
                    "column": 8
                  },
                  "end": {
                    "row": 7,
                    "column": 10
                  },
                  "text": "if"
                },
                {
                  "type": "condition",
                  "start": {
                    "row": 7,
                    "column": 11
                  },
                  "end": {
                    "row": 7,
                    "column": 22
                  },
                  "text": "(phase < 0)",
                  "children": [
                    {
                      "type": "(",
                      "start": {
                        "row": 7,
                        "column": 11
                      },
                      "end": {
                        "row": 7,
                        "column": 12
                      },
                      "text": "("
                    },
                    {
                      "type": "binary_expression",
                      "start": {
                        "row": 7,
                        "column": 12
                      },
                      "end": {
                        "row": 7,
                        "column": 21
                      },
                      "text": "phase < 0",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 7,
                            "column": 12
                          },
                          "end": {
                            "row": 7,
                            "column": 17
                          },
                          "text": "phase"
                        },
                        {
                          "type": "<",
                          "start": {
                            "row": 7,
                            "column": 18
                          },
                          "end": {
                            "row": 7,
                            "column": 19
                          },
                          "text": "<"
                        },
                        {
                          "type": "decimal_integer_literal",
                          "start": {
                            "row": 7,
                            "column": 20
                          },
                          "end": {
                            "row": 7,
                            "column": 21
                          },
                          "text": "0"
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start": {
                        "row": 7,
                        "column": 21
                      },
                      "end": {
                        "row": 7,
                        "column": 22
                      },
                      "text": ")"
                    }
                  ]
                },
                {
                  "type": "return_statement",
                  "start": {
                    "row": 8,
                    "column": 12
                  },
                  "end": {
                    "row": 8,
                    "column": 25
                  },
                  "text": "return phase;",
                  "children": [
                    {
                      "type": "return",
                      "start": {
                        "row": 8,
                        "column": 12
                      },
                      "end": {
                        "row": 8,
                        "column": 18
                      },
                      "text": "return"
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 8,
                        "column": 19
                      },
                      "end": {
                        "row": 8,
                        "column": 24
                      },
                      "text": "phase"
                    },
                    {
                      "type": ";",
                      "start": {
                        "row": 8,
                        "column": 24
                      },
                      "end": {
                        "row": 8,
                        "column": 25
                      },
                      "text": ";"
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 9,
                "column": 8
              },
              "end": {
                "row": 16,
                "column": 9
              },
              "text": "if (p == phase) {\n            QNode node = new QNode(this, phase, true, true, nanos);\n            p = root.internalAwaitAdvance(phase, node);\n            if (node.wasInterrupted)\n                throw new InterruptedException();\n            else if (p == phase)\n                throw new TimeoutException();\n        }",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 9,
                    "column": 8
                  },
                  "end": {
                    "row": 9,
                    "column": 10
                  },
                  "text": "if"
                },
                {
                  "type": "condition",
                  "start": {
                    "row": 9,
                    "column": 11
                  },
                  "end": {
                    "row": 9,
                    "column": 23
                  },
                  "text": "(p == phase)",
                  "children": [
                    {
                      "type": "(",
                      "start": {
                        "row": 9,
                        "column": 11
                      },
                      "end": {
                        "row": 9,
                        "column": 12
                      },
                      "text": "("
                    },
                    {
                      "type": "binary_expression",
                      "start": {
                        "row": 9,
                        "column": 12
                      },
                      "end": {
                        "row": 9,
                        "column": 22
                      },
                      "text": "p == phase",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 9,
                            "column": 12
                          },
                          "end": {
                            "row": 9,
                            "column": 13
                          },
                          "text": "p"
                        },
                        {
                          "type": "==",
                          "start": {
                            "row": 9,
                            "column": 14
                          },
                          "end": {
                            "row": 9,
                            "column": 16
                          },
                          "text": "=="
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 9,
                            "column": 17
                          },
                          "end": {
                            "row": 9,
                            "column": 22
                          },
                          "text": "phase"
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start": {
                        "row": 9,
                        "column": 22
                      },
                      "end": {
                        "row": 9,
                        "column": 23
                      },
                      "text": ")"
                    }
                  ]
                },
                {
                  "type": "block",
                  "start": {
                    "row": 9,
                    "column": 24
                  },
                  "end": {
                    "row": 16,
                    "column": 9
                  },
                  "text": "{\n            QNode node = new QNode(this, phase, true, true, nanos);\n            p = root.internalAwaitAdvance(phase, node);\n            if (node.wasInterrupted)\n                throw new InterruptedException();\n            else if (p == phase)\n                throw new TimeoutException();\n        }",
                  "children": [
                    {
                      "type": "{",
                      "start": {
                        "row": 9,
                        "column": 24
                      },
                      "end": {
                        "row": 9,
                        "column": 25
                      },
                      "text": "{"
                    },
                    {
                      "type": "local_variable_declaration",
                      "start": {
                        "row": 10,
                        "column": 12
                      },
                      "end": {
                        "row": 10,
                        "column": 67
                      },
                      "text": "QNode node = new QNode(this, phase, true, true, nanos);",
                      "children": [
                        {
                          "type": "type_identifier",
                          "start": {
                            "row": 10,
                            "column": 12
                          },
                          "end": {
                            "row": 10,
                            "column": 17
                          },
                          "text": "QNode"
                        },
                        {
                          "type": "variable_declarator",
                          "start": {
                            "row": 10,
                            "column": 18
                          },
                          "end": {
                            "row": 10,
                            "column": 66
                          },
                          "text": "node = new QNode(this, phase, true, true, nanos)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 10,
                                "column": 18
                              },
                              "end": {
                                "row": 10,
                                "column": 22
                              },
                              "text": "node"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 10,
                                "column": 23
                              },
                              "end": {
                                "row": 10,
                                "column": 24
                              },
                              "text": "="
                            },
                            {
                              "type": "object_creation_expression",
                              "start": {
                                "row": 10,
                                "column": 25
                              },
                              "end": {
                                "row": 10,
                                "column": 66
                              },
                              "text": "new QNode(this, phase, true, true, nanos)",
                              "children": [
                                {
                                  "type": "new",
                                  "start": {
                                    "row": 10,
                                    "column": 25
                                  },
                                  "end": {
                                    "row": 10,
                                    "column": 28
                                  },
                                  "text": "new"
                                },
                                {
                                  "type": "type_identifier",
                                  "start": {
                                    "row": 10,
                                    "column": 29
                                  },
                                  "end": {
                                    "row": 10,
                                    "column": 34
                                  },
                                  "text": "QNode"
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 10,
                                    "column": 34
                                  },
                                  "end": {
                                    "row": 10,
                                    "column": 66
                                  },
                                  "text": "(this, phase, true, true, nanos)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 10,
                                        "column": 34
                                      },
                                      "end": {
                                        "row": 10,
                                        "column": 35
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "this",
                                      "start": {
                                        "row": 10,
                                        "column": 35
                                      },
                                      "end": {
                                        "row": 10,
                                        "column": 39
                                      },
                                      "text": "this"
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 10,
                                        "column": 39
                                      },
                                      "end": {
                                        "row": 10,
                                        "column": 40
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 10,
                                        "column": 41
                                      },
                                      "end": {
                                        "row": 10,
                                        "column": 46
                                      },
                                      "text": "phase"
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 10,
                                        "column": 46
                                      },
                                      "end": {
                                        "row": 10,
                                        "column": 47
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "true",
                                      "start": {
                                        "row": 10,
                                        "column": 48
                                      },
                                      "end": {
                                        "row": 10,
                                        "column": 52
                                      },
                                      "text": "true"
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 10,
                                        "column": 52
                                      },
                                      "end": {
                                        "row": 10,
                                        "column": 53
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "true",
                                      "start": {
                                        "row": 10,
                                        "column": 54
                                      },
                                      "end": {
                                        "row": 10,
                                        "column": 58
                                      },
                                      "text": "true"
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 10,
                                        "column": 58
                                      },
                                      "end": {
                                        "row": 10,
                                        "column": 59
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 10,
                                        "column": 60
                                      },
                                      "end": {
                                        "row": 10,
                                        "column": 65
                                      },
                                      "text": "nanos"
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 10,
                                        "column": 65
                                      },
                                      "end": {
                                        "row": 10,
                                        "column": 66
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start": {
                            "row": 10,
                            "column": 66
                          },
                          "end": {
                            "row": 10,
                            "column": 67
                          },
                          "text": ";"
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 11,
                        "column": 12
                      },
                      "end": {
                        "row": 11,
                        "column": 55
                      },
                      "text": "p = root.internalAwaitAdvance(phase, node);",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start": {
                            "row": 11,
                            "column": 12
                          },
                          "end": {
                            "row": 11,
                            "column": 54
                          },
                          "text": "p = root.internalAwaitAdvance(phase, node)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 11,
                                "column": 12
                              },
                              "end": {
                                "row": 11,
                                "column": 13
                              },
                              "text": "p"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 11,
                                "column": 14
                              },
                              "end": {
                                "row": 11,
                                "column": 15
                              },
                              "text": "="
                            },
                            {
                              "type": "method_invocation",
                              "start": {
                                "row": 11,
                                "column": 16
                              },
                              "end": {
                                "row": 11,
                                "column": 54
                              },
                              "text": "root.internalAwaitAdvance(phase, node)",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 11,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 20
                                  },
                                  "text": "root"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 11,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 21
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 11,
                                    "column": 21
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 41
                                  },
                                  "text": "internalAwaitAdvance"
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 11,
                                    "column": 41
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 54
                                  },
                                  "text": "(phase, node)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 11,
                                        "column": 41
                                      },
                                      "end": {
                                        "row": 11,
                                        "column": 42
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 11,
                                        "column": 42
                                      },
                                      "end": {
                                        "row": 11,
                                        "column": 47
                                      },
                                      "text": "phase"
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 11,
                                        "column": 47
                                      },
                                      "end": {
                                        "row": 11,
                                        "column": 48
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 11,
                                        "column": 49
                                      },
                                      "end": {
                                        "row": 11,
                                        "column": 53
                                      },
                                      "text": "node"
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 11,
                                        "column": 53
                                      },
                                      "end": {
                                        "row": 11,
                                        "column": 54
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start": {
                            "row": 11,
                            "column": 54
                          },
                          "end": {
                            "row": 11,
                            "column": 55
                          },
                          "text": ";"
                        }
                      ]
                    },
                    {
                      "type": "if_statement",
                      "start": {
                        "row": 12,
                        "column": 12
                      },
                      "end": {
                        "row": 15,
                        "column": 45
                      },
                      "text": "if (node.wasInterrupted)\n                throw new InterruptedException();\n            else if (p == phase)\n                throw new TimeoutException();",
                      "children": [
                        {
                          "type": "if",
                          "start": {
                            "row": 12,
                            "column": 12
                          },
                          "end": {
                            "row": 12,
                            "column": 14
                          },
                          "text": "if"
                        },
                        {
                          "type": "condition",
                          "start": {
                            "row": 12,
                            "column": 15
                          },
                          "end": {
                            "row": 12,
                            "column": 36
                          },
                          "text": "(node.wasInterrupted)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 12,
                                "column": 15
                              },
                              "end": {
                                "row": 12,
                                "column": 16
                              },
                              "text": "("
                            },
                            {
                              "type": "field_access",
                              "start": {
                                "row": 12,
                                "column": 16
                              },
                              "end": {
                                "row": 12,
                                "column": 35
                              },
                              "text": "node.wasInterrupted",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 12,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 12,
                                    "column": 20
                                  },
                                  "text": "node"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 12,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 12,
                                    "column": 21
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 12,
                                    "column": 21
                                  },
                                  "end": {
                                    "row": 12,
                                    "column": 35
                                  },
                                  "text": "wasInterrupted"
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 12,
                                "column": 35
                              },
                              "end": {
                                "row": 12,
                                "column": 36
                              },
                              "text": ")"
                            }
                          ]
                        },
                        {
                          "type": "throw_statement",
                          "start": {
                            "row": 13,
                            "column": 16
                          },
                          "end": {
                            "row": 13,
                            "column": 49
                          },
                          "text": "throw new InterruptedException();",
                          "children": [
                            {
                              "type": "throw",
                              "start": {
                                "row": 13,
                                "column": 16
                              },
                              "end": {
                                "row": 13,
                                "column": 21
                              },
                              "text": "throw"
                            },
                            {
                              "type": "object_creation_expression",
                              "start": {
                                "row": 13,
                                "column": 22
                              },
                              "end": {
                                "row": 13,
                                "column": 48
                              },
                              "text": "new InterruptedException()",
                              "children": [
                                {
                                  "type": "new",
                                  "start": {
                                    "row": 13,
                                    "column": 22
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 25
                                  },
                                  "text": "new"
                                },
                                {
                                  "type": "type_identifier",
                                  "start": {
                                    "row": 13,
                                    "column": 26
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 46
                                  },
                                  "text": "InterruptedException"
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 13,
                                    "column": 46
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 48
                                  },
                                  "text": "()",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 13,
                                        "column": 46
                                      },
                                      "end": {
                                        "row": 13,
                                        "column": 47
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 13,
                                        "column": 47
                                      },
                                      "end": {
                                        "row": 13,
                                        "column": 48
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start": {
                                "row": 13,
                                "column": 48
                              },
                              "end": {
                                "row": 13,
                                "column": 49
                              },
                              "text": ";"
                            }
                          ]
                        },
                        {
                          "type": "else",
                          "start": {
                            "row": 14,
                            "column": 12
                          },
                          "end": {
                            "row": 14,
                            "column": 16
                          },
                          "text": "else"
                        },
                        {
                          "type": "if_statement",
                          "start": {
                            "row": 14,
                            "column": 17
                          },
                          "end": {
                            "row": 15,
                            "column": 45
                          },
                          "text": "if (p == phase)\n                throw new TimeoutException();",
                          "children": [
                            {
                              "type": "if",
                              "start": {
                                "row": 14,
                                "column": 17
                              },
                              "end": {
                                "row": 14,
                                "column": 19
                              },
                              "text": "if"
                            },
                            {
                              "type": "condition",
                              "start": {
                                "row": 14,
                                "column": 20
                              },
                              "end": {
                                "row": 14,
                                "column": 32
                              },
                              "text": "(p == phase)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 14,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 14,
                                    "column": 21
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "binary_expression",
                                  "start": {
                                    "row": 14,
                                    "column": 21
                                  },
                                  "end": {
                                    "row": 14,
                                    "column": 31
                                  },
                                  "text": "p == phase",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 14,
                                        "column": 21
                                      },
                                      "end": {
                                        "row": 14,
                                        "column": 22
                                      },
                                      "text": "p"
                                    },
                                    {
                                      "type": "==",
                                      "start": {
                                        "row": 14,
                                        "column": 23
                                      },
                                      "end": {
                                        "row": 14,
                                        "column": 25
                                      },
                                      "text": "=="
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 14,
                                        "column": 26
                                      },
                                      "end": {
                                        "row": 14,
                                        "column": 31
                                      },
                                      "text": "phase"
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 14,
                                    "column": 31
                                  },
                                  "end": {
                                    "row": 14,
                                    "column": 32
                                  },
                                  "text": ")"
                                }
                              ]
                            },
                            {
                              "type": "throw_statement",
                              "start": {
                                "row": 15,
                                "column": 16
                              },
                              "end": {
                                "row": 15,
                                "column": 45
                              },
                              "text": "throw new TimeoutException();",
                              "children": [
                                {
                                  "type": "throw",
                                  "start": {
                                    "row": 15,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 15,
                                    "column": 21
                                  },
                                  "text": "throw"
                                },
                                {
                                  "type": "object_creation_expression",
                                  "start": {
                                    "row": 15,
                                    "column": 22
                                  },
                                  "end": {
                                    "row": 15,
                                    "column": 44
                                  },
                                  "text": "new TimeoutException()",
                                  "children": [
                                    {
                                      "type": "new",
                                      "start": {
                                        "row": 15,
                                        "column": 22
                                      },
                                      "end": {
                                        "row": 15,
                                        "column": 25
                                      },
                                      "text": "new"
                                    },
                                    {
                                      "type": "type_identifier",
                                      "start": {
                                        "row": 15,
                                        "column": 26
                                      },
                                      "end": {
                                        "row": 15,
                                        "column": 42
                                      },
                                      "text": "TimeoutException"
                                    },
                                    {
                                      "type": "argument_list",
                                      "start": {
                                        "row": 15,
                                        "column": 42
                                      },
                                      "end": {
                                        "row": 15,
                                        "column": 44
                                      },
                                      "text": "()",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 15,
                                            "column": 42
                                          },
                                          "end": {
                                            "row": 15,
                                            "column": 43
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 15,
                                            "column": 43
                                          },
                                          "end": {
                                            "row": 15,
                                            "column": 44
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start": {
                                    "row": 15,
                                    "column": 44
                                  },
                                  "end": {
                                    "row": 15,
                                    "column": 45
                                  },
                                  "text": ";"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start": {
                        "row": 16,
                        "column": 8
                      },
                      "end": {
                        "row": 16,
                        "column": 9
                      },
                      "text": "}"
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 17,
                "column": 8
              },
              "end": {
                "row": 17,
                "column": 17
              },
              "text": "return p;",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 17,
                    "column": 8
                  },
                  "end": {
                    "row": 17,
                    "column": 14
                  },
                  "text": "return"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 17,
                    "column": 15
                  },
                  "end": {
                    "row": 17,
                    "column": 16
                  },
                  "text": "p"
                },
                {
                  "type": ";",
                  "start": {
                    "row": 17,
                    "column": 16
                  },
                  "end": {
                    "row": 17,
                    "column": 17
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "}",
              "start": {
                "row": 18,
                "column": 4
              },
              "end": {
                "row": 18,
                "column": 5
              },
              "text": "}"
            }
          ]
        }
      ]
    }
  ]
}