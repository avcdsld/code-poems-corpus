{
  "type": "program",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 6,
    "column": 2
  },
  "text": "public AdamicAdar<K, VV, EV> setMinimumScore(float score) {\n\t\tPreconditions.checkArgument(score >= 0, \"Minimum score must be non-negative\");\n\n\t\tthis.minimumScore = score;\n\n\t\treturn this;\n\t}",
  "children": [
    {
      "type": "method_declaration",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 6,
        "column": 2
      },
      "text": "public AdamicAdar<K, VV, EV> setMinimumScore(float score) {\n\t\tPreconditions.checkArgument(score >= 0, \"Minimum score must be non-negative\");\n\n\t\tthis.minimumScore = score;\n\n\t\treturn this;\n\t}",
      "children": [
        {
          "type": "modifiers",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 6
          },
          "text": "public",
          "children": [
            {
              "type": "public",
              "start": {
                "row": 0,
                "column": 0
              },
              "end": {
                "row": 0,
                "column": 6
              },
              "text": "public"
            }
          ]
        },
        {
          "type": "generic_type",
          "start": {
            "row": 0,
            "column": 7
          },
          "end": {
            "row": 0,
            "column": 28
          },
          "text": "AdamicAdar<K, VV, EV>",
          "children": [
            {
              "type": "type_identifier",
              "start": {
                "row": 0,
                "column": 7
              },
              "end": {
                "row": 0,
                "column": 17
              },
              "text": "AdamicAdar"
            },
            {
              "type": "type_arguments",
              "start": {
                "row": 0,
                "column": 17
              },
              "end": {
                "row": 0,
                "column": 28
              },
              "text": "<K, VV, EV>",
              "children": [
                {
                  "type": "<",
                  "start": {
                    "row": 0,
                    "column": 17
                  },
                  "end": {
                    "row": 0,
                    "column": 18
                  },
                  "text": "<"
                },
                {
                  "type": "type_identifier",
                  "start": {
                    "row": 0,
                    "column": 18
                  },
                  "end": {
                    "row": 0,
                    "column": 19
                  },
                  "text": "K"
                },
                {
                  "type": ",",
                  "start": {
                    "row": 0,
                    "column": 19
                  },
                  "end": {
                    "row": 0,
                    "column": 20
                  },
                  "text": ","
                },
                {
                  "type": "type_identifier",
                  "start": {
                    "row": 0,
                    "column": 21
                  },
                  "end": {
                    "row": 0,
                    "column": 23
                  },
                  "text": "VV"
                },
                {
                  "type": ",",
                  "start": {
                    "row": 0,
                    "column": 23
                  },
                  "end": {
                    "row": 0,
                    "column": 24
                  },
                  "text": ","
                },
                {
                  "type": "type_identifier",
                  "start": {
                    "row": 0,
                    "column": 25
                  },
                  "end": {
                    "row": 0,
                    "column": 27
                  },
                  "text": "EV"
                },
                {
                  "type": ">",
                  "start": {
                    "row": 0,
                    "column": 27
                  },
                  "end": {
                    "row": 0,
                    "column": 28
                  },
                  "text": ">"
                }
              ]
            }
          ]
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 29
          },
          "end": {
            "row": 0,
            "column": 44
          },
          "text": "setMinimumScore"
        },
        {
          "type": "formal_parameters",
          "start": {
            "row": 0,
            "column": 44
          },
          "end": {
            "row": 0,
            "column": 57
          },
          "text": "(float score)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 44
              },
              "end": {
                "row": 0,
                "column": 45
              },
              "text": "("
            },
            {
              "type": "formal_parameter",
              "start": {
                "row": 0,
                "column": 45
              },
              "end": {
                "row": 0,
                "column": 56
              },
              "text": "float score",
              "children": [
                {
                  "type": "floating_point_type",
                  "start": {
                    "row": 0,
                    "column": 45
                  },
                  "end": {
                    "row": 0,
                    "column": 50
                  },
                  "text": "float",
                  "children": [
                    {
                      "type": "float",
                      "start": {
                        "row": 0,
                        "column": 45
                      },
                      "end": {
                        "row": 0,
                        "column": 50
                      },
                      "text": "float"
                    }
                  ]
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 51
                  },
                  "end": {
                    "row": 0,
                    "column": 56
                  },
                  "text": "score"
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 56
              },
              "end": {
                "row": 0,
                "column": 57
              },
              "text": ")"
            }
          ]
        },
        {
          "type": "block",
          "start": {
            "row": 0,
            "column": 58
          },
          "end": {
            "row": 6,
            "column": 2
          },
          "text": "{\n\t\tPreconditions.checkArgument(score >= 0, \"Minimum score must be non-negative\");\n\n\t\tthis.minimumScore = score;\n\n\t\treturn this;\n\t}",
          "children": [
            {
              "type": "{",
              "start": {
                "row": 0,
                "column": 58
              },
              "end": {
                "row": 0,
                "column": 59
              },
              "text": "{"
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 2
              },
              "end": {
                "row": 1,
                "column": 80
              },
              "text": "Preconditions.checkArgument(score >= 0, \"Minimum score must be non-negative\");",
              "children": [
                {
                  "type": "method_invocation",
                  "start": {
                    "row": 1,
                    "column": 2
                  },
                  "end": {
                    "row": 1,
                    "column": 79
                  },
                  "text": "Preconditions.checkArgument(score >= 0, \"Minimum score must be non-negative\")",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 1,
                        "column": 2
                      },
                      "end": {
                        "row": 1,
                        "column": 15
                      },
                      "text": "Preconditions"
                    },
                    {
                      "type": ".",
                      "start": {
                        "row": 1,
                        "column": 15
                      },
                      "end": {
                        "row": 1,
                        "column": 16
                      },
                      "text": "."
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 1,
                        "column": 16
                      },
                      "end": {
                        "row": 1,
                        "column": 29
                      },
                      "text": "checkArgument"
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 1,
                        "column": 29
                      },
                      "end": {
                        "row": 1,
                        "column": 79
                      },
                      "text": "(score >= 0, \"Minimum score must be non-negative\")",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 1,
                            "column": 29
                          },
                          "end": {
                            "row": 1,
                            "column": 30
                          },
                          "text": "("
                        },
                        {
                          "type": "binary_expression",
                          "start": {
                            "row": 1,
                            "column": 30
                          },
                          "end": {
                            "row": 1,
                            "column": 40
                          },
                          "text": "score >= 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 1,
                                "column": 30
                              },
                              "end": {
                                "row": 1,
                                "column": 35
                              },
                              "text": "score"
                            },
                            {
                              "type": ">=",
                              "start": {
                                "row": 1,
                                "column": 36
                              },
                              "end": {
                                "row": 1,
                                "column": 38
                              },
                              "text": ">="
                            },
                            {
                              "type": "decimal_integer_literal",
                              "start": {
                                "row": 1,
                                "column": 39
                              },
                              "end": {
                                "row": 1,
                                "column": 40
                              },
                              "text": "0"
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 1,
                            "column": 40
                          },
                          "end": {
                            "row": 1,
                            "column": 41
                          },
                          "text": ","
                        },
                        {
                          "type": "string_literal",
                          "start": {
                            "row": 1,
                            "column": 42
                          },
                          "end": {
                            "row": 1,
                            "column": 78
                          },
                          "text": "\"Minimum score must be non-negative\"",
                          "children": [
                            {
                              "type": "\"",
                              "start": {
                                "row": 1,
                                "column": 42
                              },
                              "end": {
                                "row": 1,
                                "column": 43
                              },
                              "text": "\""
                            },
                            {
                              "type": "string_fragment",
                              "start": {
                                "row": 1,
                                "column": 43
                              },
                              "end": {
                                "row": 1,
                                "column": 77
                              },
                              "text": "Minimum score must be non-negative"
                            },
                            {
                              "type": "\"",
                              "start": {
                                "row": 1,
                                "column": 77
                              },
                              "end": {
                                "row": 1,
                                "column": 78
                              },
                              "text": "\""
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 1,
                            "column": 78
                          },
                          "end": {
                            "row": 1,
                            "column": 79
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 1,
                    "column": 79
                  },
                  "end": {
                    "row": 1,
                    "column": 80
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 3,
                "column": 2
              },
              "end": {
                "row": 3,
                "column": 28
              },
              "text": "this.minimumScore = score;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start": {
                    "row": 3,
                    "column": 2
                  },
                  "end": {
                    "row": 3,
                    "column": 27
                  },
                  "text": "this.minimumScore = score",
                  "children": [
                    {
                      "type": "field_access",
                      "start": {
                        "row": 3,
                        "column": 2
                      },
                      "end": {
                        "row": 3,
                        "column": 19
                      },
                      "text": "this.minimumScore",
                      "children": [
                        {
                          "type": "this",
                          "start": {
                            "row": 3,
                            "column": 2
                          },
                          "end": {
                            "row": 3,
                            "column": 6
                          },
                          "text": "this"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 3,
                            "column": 6
                          },
                          "end": {
                            "row": 3,
                            "column": 7
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 3,
                            "column": 7
                          },
                          "end": {
                            "row": 3,
                            "column": 19
                          },
                          "text": "minimumScore"
                        }
                      ]
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 3,
                        "column": 20
                      },
                      "end": {
                        "row": 3,
                        "column": 21
                      },
                      "text": "="
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 3,
                        "column": 22
                      },
                      "end": {
                        "row": 3,
                        "column": 27
                      },
                      "text": "score"
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 3,
                    "column": 27
                  },
                  "end": {
                    "row": 3,
                    "column": 28
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 5,
                "column": 2
              },
              "end": {
                "row": 5,
                "column": 14
              },
              "text": "return this;",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 5,
                    "column": 2
                  },
                  "end": {
                    "row": 5,
                    "column": 8
                  },
                  "text": "return"
                },
                {
                  "type": "this",
                  "start": {
                    "row": 5,
                    "column": 9
                  },
                  "end": {
                    "row": 5,
                    "column": 13
                  },
                  "text": "this"
                },
                {
                  "type": ";",
                  "start": {
                    "row": 5,
                    "column": 13
                  },
                  "end": {
                    "row": 5,
                    "column": 14
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "}",
              "start": {
                "row": 6,
                "column": 1
              },
              "end": {
                "row": 6,
                "column": 2
              },
              "text": "}"
            }
          ]
        }
      ]
    }
  ]
}