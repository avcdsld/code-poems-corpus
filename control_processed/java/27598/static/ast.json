{
  "type": "program",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 6,
    "column": 5
  },
  "text": "@Override\n    public boolean shouldRequestContents(ReadResultEntryType entryType, long streamSegmentOffset) {\n        // We only care about data that has already been written, so this implies Cache and Storage.\n        // Additionally, given that the Store acks an append prior to inserting it into the cache (but after the metadata\n        // update), we may occasionally get Future reads. We should accept those too, as they should be completed shortly.\n        return entryType == ReadResultEntryType.Cache || entryType == ReadResultEntryType.Storage || entryType == ReadResultEntryType.Future;\n    }",
  "children": [
    {
      "type": "method_declaration",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 6,
        "column": 5
      },
      "text": "@Override\n    public boolean shouldRequestContents(ReadResultEntryType entryType, long streamSegmentOffset) {\n        // We only care about data that has already been written, so this implies Cache and Storage.\n        // Additionally, given that the Store acks an append prior to inserting it into the cache (but after the metadata\n        // update), we may occasionally get Future reads. We should accept those too, as they should be completed shortly.\n        return entryType == ReadResultEntryType.Cache || entryType == ReadResultEntryType.Storage || entryType == ReadResultEntryType.Future;\n    }",
      "children": [
        {
          "type": "modifiers",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 1,
            "column": 10
          },
          "text": "@Override\n    public",
          "children": [
            {
              "type": "marker_annotation",
              "start": {
                "row": 0,
                "column": 0
              },
              "end": {
                "row": 0,
                "column": 9
              },
              "text": "@Override",
              "children": [
                {
                  "type": "@",
                  "start": {
                    "row": 0,
                    "column": 0
                  },
                  "end": {
                    "row": 0,
                    "column": 1
                  },
                  "text": "@"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 1
                  },
                  "end": {
                    "row": 0,
                    "column": 9
                  },
                  "text": "Override"
                }
              ]
            },
            {
              "type": "public",
              "start": {
                "row": 1,
                "column": 4
              },
              "end": {
                "row": 1,
                "column": 10
              },
              "text": "public"
            }
          ]
        },
        {
          "type": "boolean_type",
          "start": {
            "row": 1,
            "column": 11
          },
          "end": {
            "row": 1,
            "column": 18
          },
          "text": "boolean"
        },
        {
          "type": "identifier",
          "start": {
            "row": 1,
            "column": 19
          },
          "end": {
            "row": 1,
            "column": 40
          },
          "text": "shouldRequestContents"
        },
        {
          "type": "formal_parameters",
          "start": {
            "row": 1,
            "column": 40
          },
          "end": {
            "row": 1,
            "column": 97
          },
          "text": "(ReadResultEntryType entryType, long streamSegmentOffset)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 1,
                "column": 40
              },
              "end": {
                "row": 1,
                "column": 41
              },
              "text": "("
            },
            {
              "type": "formal_parameter",
              "start": {
                "row": 1,
                "column": 41
              },
              "end": {
                "row": 1,
                "column": 70
              },
              "text": "ReadResultEntryType entryType",
              "children": [
                {
                  "type": "type_identifier",
                  "start": {
                    "row": 1,
                    "column": 41
                  },
                  "end": {
                    "row": 1,
                    "column": 60
                  },
                  "text": "ReadResultEntryType"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 1,
                    "column": 61
                  },
                  "end": {
                    "row": 1,
                    "column": 70
                  },
                  "text": "entryType"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 1,
                "column": 70
              },
              "end": {
                "row": 1,
                "column": 71
              },
              "text": ","
            },
            {
              "type": "formal_parameter",
              "start": {
                "row": 1,
                "column": 72
              },
              "end": {
                "row": 1,
                "column": 96
              },
              "text": "long streamSegmentOffset",
              "children": [
                {
                  "type": "integral_type",
                  "start": {
                    "row": 1,
                    "column": 72
                  },
                  "end": {
                    "row": 1,
                    "column": 76
                  },
                  "text": "long",
                  "children": [
                    {
                      "type": "long",
                      "start": {
                        "row": 1,
                        "column": 72
                      },
                      "end": {
                        "row": 1,
                        "column": 76
                      },
                      "text": "long"
                    }
                  ]
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 1,
                    "column": 77
                  },
                  "end": {
                    "row": 1,
                    "column": 96
                  },
                  "text": "streamSegmentOffset"
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 1,
                "column": 96
              },
              "end": {
                "row": 1,
                "column": 97
              },
              "text": ")"
            }
          ]
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 98
          },
          "end": {
            "row": 6,
            "column": 5
          },
          "text": "{\n        // We only care about data that has already been written, so this implies Cache and Storage.\n        // Additionally, given that the Store acks an append prior to inserting it into the cache (but after the metadata\n        // update), we may occasionally get Future reads. We should accept those too, as they should be completed shortly.\n        return entryType == ReadResultEntryType.Cache || entryType == ReadResultEntryType.Storage || entryType == ReadResultEntryType.Future;\n    }",
          "children": [
            {
              "type": "{",
              "start": {
                "row": 1,
                "column": 98
              },
              "end": {
                "row": 1,
                "column": 99
              },
              "text": "{"
            },
            {
              "type": "line_comment",
              "start": {
                "row": 2,
                "column": 8
              },
              "end": {
                "row": 2,
                "column": 100
              },
              "text": "// We only care about data that has already been written, so this implies Cache and Storage."
            },
            {
              "type": "line_comment",
              "start": {
                "row": 3,
                "column": 8
              },
              "end": {
                "row": 3,
                "column": 121
              },
              "text": "// Additionally, given that the Store acks an append prior to inserting it into the cache (but after the metadata"
            },
            {
              "type": "line_comment",
              "start": {
                "row": 4,
                "column": 8
              },
              "end": {
                "row": 4,
                "column": 122
              },
              "text": "// update), we may occasionally get Future reads. We should accept those too, as they should be completed shortly."
            },
            {
              "type": "return_statement",
              "start": {
                "row": 5,
                "column": 8
              },
              "end": {
                "row": 5,
                "column": 141
              },
              "text": "return entryType == ReadResultEntryType.Cache || entryType == ReadResultEntryType.Storage || entryType == ReadResultEntryType.Future;",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 5,
                    "column": 8
                  },
                  "end": {
                    "row": 5,
                    "column": 14
                  },
                  "text": "return"
                },
                {
                  "type": "binary_expression",
                  "start": {
                    "row": 5,
                    "column": 15
                  },
                  "end": {
                    "row": 5,
                    "column": 140
                  },
                  "text": "entryType == ReadResultEntryType.Cache || entryType == ReadResultEntryType.Storage || entryType == ReadResultEntryType.Future",
                  "children": [
                    {
                      "type": "binary_expression",
                      "start": {
                        "row": 5,
                        "column": 15
                      },
                      "end": {
                        "row": 5,
                        "column": 97
                      },
                      "text": "entryType == ReadResultEntryType.Cache || entryType == ReadResultEntryType.Storage",
                      "children": [
                        {
                          "type": "binary_expression",
                          "start": {
                            "row": 5,
                            "column": 15
                          },
                          "end": {
                            "row": 5,
                            "column": 53
                          },
                          "text": "entryType == ReadResultEntryType.Cache",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 5,
                                "column": 15
                              },
                              "end": {
                                "row": 5,
                                "column": 24
                              },
                              "text": "entryType"
                            },
                            {
                              "type": "==",
                              "start": {
                                "row": 5,
                                "column": 25
                              },
                              "end": {
                                "row": 5,
                                "column": 27
                              },
                              "text": "=="
                            },
                            {
                              "type": "field_access",
                              "start": {
                                "row": 5,
                                "column": 28
                              },
                              "end": {
                                "row": 5,
                                "column": 53
                              },
                              "text": "ReadResultEntryType.Cache",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 5,
                                    "column": 28
                                  },
                                  "end": {
                                    "row": 5,
                                    "column": 47
                                  },
                                  "text": "ReadResultEntryType"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 5,
                                    "column": 47
                                  },
                                  "end": {
                                    "row": 5,
                                    "column": 48
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 5,
                                    "column": 48
                                  },
                                  "end": {
                                    "row": 5,
                                    "column": 53
                                  },
                                  "text": "Cache"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "||",
                          "start": {
                            "row": 5,
                            "column": 54
                          },
                          "end": {
                            "row": 5,
                            "column": 56
                          },
                          "text": "||"
                        },
                        {
                          "type": "binary_expression",
                          "start": {
                            "row": 5,
                            "column": 57
                          },
                          "end": {
                            "row": 5,
                            "column": 97
                          },
                          "text": "entryType == ReadResultEntryType.Storage",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 5,
                                "column": 57
                              },
                              "end": {
                                "row": 5,
                                "column": 66
                              },
                              "text": "entryType"
                            },
                            {
                              "type": "==",
                              "start": {
                                "row": 5,
                                "column": 67
                              },
                              "end": {
                                "row": 5,
                                "column": 69
                              },
                              "text": "=="
                            },
                            {
                              "type": "field_access",
                              "start": {
                                "row": 5,
                                "column": 70
                              },
                              "end": {
                                "row": 5,
                                "column": 97
                              },
                              "text": "ReadResultEntryType.Storage",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 5,
                                    "column": 70
                                  },
                                  "end": {
                                    "row": 5,
                                    "column": 89
                                  },
                                  "text": "ReadResultEntryType"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 5,
                                    "column": 89
                                  },
                                  "end": {
                                    "row": 5,
                                    "column": 90
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 5,
                                    "column": 90
                                  },
                                  "end": {
                                    "row": 5,
                                    "column": 97
                                  },
                                  "text": "Storage"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "||",
                      "start": {
                        "row": 5,
                        "column": 98
                      },
                      "end": {
                        "row": 5,
                        "column": 100
                      },
                      "text": "||"
                    },
                    {
                      "type": "binary_expression",
                      "start": {
                        "row": 5,
                        "column": 101
                      },
                      "end": {
                        "row": 5,
                        "column": 140
                      },
                      "text": "entryType == ReadResultEntryType.Future",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 5,
                            "column": 101
                          },
                          "end": {
                            "row": 5,
                            "column": 110
                          },
                          "text": "entryType"
                        },
                        {
                          "type": "==",
                          "start": {
                            "row": 5,
                            "column": 111
                          },
                          "end": {
                            "row": 5,
                            "column": 113
                          },
                          "text": "=="
                        },
                        {
                          "type": "field_access",
                          "start": {
                            "row": 5,
                            "column": 114
                          },
                          "end": {
                            "row": 5,
                            "column": 140
                          },
                          "text": "ReadResultEntryType.Future",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 5,
                                "column": 114
                              },
                              "end": {
                                "row": 5,
                                "column": 133
                              },
                              "text": "ReadResultEntryType"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 5,
                                "column": 133
                              },
                              "end": {
                                "row": 5,
                                "column": 134
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 5,
                                "column": 134
                              },
                              "end": {
                                "row": 5,
                                "column": 140
                              },
                              "text": "Future"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 5,
                    "column": 140
                  },
                  "end": {
                    "row": 5,
                    "column": 141
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "}",
              "start": {
                "row": 6,
                "column": 4
              },
              "end": {
                "row": 6,
                "column": 5
              },
              "text": "}"
            }
          ]
        }
      ]
    }
  ]
}