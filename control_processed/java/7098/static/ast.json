{
  "type": "program",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 31,
    "column": 2
  },
  "text": "private static String toChinese(int amountPart, boolean isUseTraditional) {\n//\t\tif (amountPart < 0 || amountPart > 10000) {\n//\t\t\tthrow new IllegalArgumentException(\"Number must 0 < num < 10000！\");\n//\t\t}\n\n\t\tString[] numArray = isUseTraditional ? traditionalDigits : simpleDigits;\n\t\tString[] units = isUseTraditional ? traditionalUnits : simpleUnits;\n\n\t\tint temp = amountPart;\n\n\t\tString chineseStr = \"\";\n\t\tboolean lastIsZero = true; // 在从低位往高位循环时，记录上一位数字是不是 0\n\t\tfor (int i = 0; temp > 0; i++) {\n\t\t\tif (temp == 0) {\n\t\t\t\t// 高位已无数据\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tint digit = temp % 10;\n\t\t\tif (digit == 0) { // 取到的数字为 0\n\t\t\t\tif (false == lastIsZero) {\n\t\t\t\t\t// 前一个数字不是 0，则在当前汉字串前加“零”字;\n\t\t\t\t\tchineseStr = \"零\" + chineseStr;\n\t\t\t\t}\n\t\t\t\tlastIsZero = true;\n\t\t\t} else { // 取到的数字不是 0\n\t\t\t\tchineseStr = numArray[digit] + units[i] + chineseStr;\n\t\t\t\tlastIsZero = false;\n\t\t\t}\n\t\t\ttemp = temp / 10;\n\t\t}\n\t\treturn chineseStr;\n\t}",
  "children": [
    {
      "type": "method_declaration",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 31,
        "column": 2
      },
      "text": "private static String toChinese(int amountPart, boolean isUseTraditional) {\n//\t\tif (amountPart < 0 || amountPart > 10000) {\n//\t\t\tthrow new IllegalArgumentException(\"Number must 0 < num < 10000！\");\n//\t\t}\n\n\t\tString[] numArray = isUseTraditional ? traditionalDigits : simpleDigits;\n\t\tString[] units = isUseTraditional ? traditionalUnits : simpleUnits;\n\n\t\tint temp = amountPart;\n\n\t\tString chineseStr = \"\";\n\t\tboolean lastIsZero = true; // 在从低位往高位循环时，记录上一位数字是不是 0\n\t\tfor (int i = 0; temp > 0; i++) {\n\t\t\tif (temp == 0) {\n\t\t\t\t// 高位已无数据\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tint digit = temp % 10;\n\t\t\tif (digit == 0) { // 取到的数字为 0\n\t\t\t\tif (false == lastIsZero) {\n\t\t\t\t\t// 前一个数字不是 0，则在当前汉字串前加“零”字;\n\t\t\t\t\tchineseStr = \"零\" + chineseStr;\n\t\t\t\t}\n\t\t\t\tlastIsZero = true;\n\t\t\t} else { // 取到的数字不是 0\n\t\t\t\tchineseStr = numArray[digit] + units[i] + chineseStr;\n\t\t\t\tlastIsZero = false;\n\t\t\t}\n\t\t\ttemp = temp / 10;\n\t\t}\n\t\treturn chineseStr;\n\t}",
      "children": [
        {
          "type": "modifiers",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 14
          },
          "text": "private static",
          "children": [
            {
              "type": "private",
              "start": {
                "row": 0,
                "column": 0
              },
              "end": {
                "row": 0,
                "column": 7
              },
              "text": "private"
            },
            {
              "type": "static",
              "start": {
                "row": 0,
                "column": 8
              },
              "end": {
                "row": 0,
                "column": 14
              },
              "text": "static"
            }
          ]
        },
        {
          "type": "type_identifier",
          "start": {
            "row": 0,
            "column": 15
          },
          "end": {
            "row": 0,
            "column": 21
          },
          "text": "String"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 22
          },
          "end": {
            "row": 0,
            "column": 31
          },
          "text": "toChinese"
        },
        {
          "type": "formal_parameters",
          "start": {
            "row": 0,
            "column": 31
          },
          "end": {
            "row": 0,
            "column": 73
          },
          "text": "(int amountPart, boolean isUseTraditional)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 31
              },
              "end": {
                "row": 0,
                "column": 32
              },
              "text": "("
            },
            {
              "type": "formal_parameter",
              "start": {
                "row": 0,
                "column": 32
              },
              "end": {
                "row": 0,
                "column": 46
              },
              "text": "int amountPart",
              "children": [
                {
                  "type": "integral_type",
                  "start": {
                    "row": 0,
                    "column": 32
                  },
                  "end": {
                    "row": 0,
                    "column": 35
                  },
                  "text": "int",
                  "children": [
                    {
                      "type": "int",
                      "start": {
                        "row": 0,
                        "column": 32
                      },
                      "end": {
                        "row": 0,
                        "column": 35
                      },
                      "text": "int"
                    }
                  ]
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 36
                  },
                  "end": {
                    "row": 0,
                    "column": 46
                  },
                  "text": "amountPart"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 46
              },
              "end": {
                "row": 0,
                "column": 47
              },
              "text": ","
            },
            {
              "type": "formal_parameter",
              "start": {
                "row": 0,
                "column": 48
              },
              "end": {
                "row": 0,
                "column": 72
              },
              "text": "boolean isUseTraditional",
              "children": [
                {
                  "type": "boolean_type",
                  "start": {
                    "row": 0,
                    "column": 48
                  },
                  "end": {
                    "row": 0,
                    "column": 55
                  },
                  "text": "boolean"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 56
                  },
                  "end": {
                    "row": 0,
                    "column": 72
                  },
                  "text": "isUseTraditional"
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 72
              },
              "end": {
                "row": 0,
                "column": 73
              },
              "text": ")"
            }
          ]
        },
        {
          "type": "block",
          "start": {
            "row": 0,
            "column": 74
          },
          "end": {
            "row": 31,
            "column": 2
          },
          "text": "{\n//\t\tif (amountPart < 0 || amountPart > 10000) {\n//\t\t\tthrow new IllegalArgumentException(\"Number must 0 < num < 10000！\");\n//\t\t}\n\n\t\tString[] numArray = isUseTraditional ? traditionalDigits : simpleDigits;\n\t\tString[] units = isUseTraditional ? traditionalUnits : simpleUnits;\n\n\t\tint temp = amountPart;\n\n\t\tString chineseStr = \"\";\n\t\tboolean lastIsZero = true; // 在从低位往高位循环时，记录上一位数字是不是 0\n\t\tfor (int i = 0; temp > 0; i++) {\n\t\t\tif (temp == 0) {\n\t\t\t\t// 高位已无数据\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tint digit = temp % 10;\n\t\t\tif (digit == 0) { // 取到的数字为 0\n\t\t\t\tif (false == lastIsZero) {\n\t\t\t\t\t// 前一个数字不是 0，则在当前汉字串前加“零”字;\n\t\t\t\t\tchineseStr = \"零\" + chineseStr;\n\t\t\t\t}\n\t\t\t\tlastIsZero = true;\n\t\t\t} else { // 取到的数字不是 0\n\t\t\t\tchineseStr = numArray[digit] + units[i] + chineseStr;\n\t\t\t\tlastIsZero = false;\n\t\t\t}\n\t\t\ttemp = temp / 10;\n\t\t}\n\t\treturn chineseStr;\n\t}",
          "children": [
            {
              "type": "{",
              "start": {
                "row": 0,
                "column": 74
              },
              "end": {
                "row": 0,
                "column": 75
              },
              "text": "{"
            },
            {
              "type": "line_comment",
              "start": {
                "row": 1,
                "column": 0
              },
              "end": {
                "row": 1,
                "column": 47
              },
              "text": "//\t\tif (amountPart < 0 || amountPart > 10000) {"
            },
            {
              "type": "line_comment",
              "start": {
                "row": 2,
                "column": 0
              },
              "end": {
                "row": 2,
                "column": 74
              },
              "text": "//\t\t\tthrow new IllegalArgumentException(\"Number must 0 < num < 10000！\");\n/"
            },
            {
              "type": "line_comment",
              "start": {
                "row": 3,
                "column": 0
              },
              "end": {
                "row": 3,
                "column": 5
              },
              "text": "\t\t}\n\n"
            },
            {
              "type": "local_variable_declaration",
              "start": {
                "row": 5,
                "column": 2
              },
              "end": {
                "row": 5,
                "column": 74
              },
              "text": "ring[] numArray = isUseTraditional ? traditionalDigits : simpleDigits;\n\t",
              "children": [
                {
                  "type": "array_type",
                  "start": {
                    "row": 5,
                    "column": 2
                  },
                  "end": {
                    "row": 5,
                    "column": 10
                  },
                  "text": "ring[] n",
                  "children": [
                    {
                      "type": "type_identifier",
                      "start": {
                        "row": 5,
                        "column": 2
                      },
                      "end": {
                        "row": 5,
                        "column": 8
                      },
                      "text": "ring[]"
                    },
                    {
                      "type": "dimensions",
                      "start": {
                        "row": 5,
                        "column": 8
                      },
                      "end": {
                        "row": 5,
                        "column": 10
                      },
                      "text": " n",
                      "children": [
                        {
                          "type": "[",
                          "start": {
                            "row": 5,
                            "column": 8
                          },
                          "end": {
                            "row": 5,
                            "column": 9
                          },
                          "text": " "
                        },
                        {
                          "type": "]",
                          "start": {
                            "row": 5,
                            "column": 9
                          },
                          "end": {
                            "row": 5,
                            "column": 10
                          },
                          "text": "n"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "variable_declarator",
                  "start": {
                    "row": 5,
                    "column": 11
                  },
                  "end": {
                    "row": 5,
                    "column": 73
                  },
                  "text": "mArray = isUseTraditional ? traditionalDigits : simpleDigits;\n",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 5,
                        "column": 11
                      },
                      "end": {
                        "row": 5,
                        "column": 19
                      },
                      "text": "mArray ="
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 5,
                        "column": 20
                      },
                      "end": {
                        "row": 5,
                        "column": 21
                      },
                      "text": "i"
                    },
                    {
                      "type": "ternary_expression",
                      "start": {
                        "row": 5,
                        "column": 22
                      },
                      "end": {
                        "row": 5,
                        "column": 73
                      },
                      "text": "UseTraditional ? traditionalDigits : simpleDigits;\n",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 5,
                            "column": 22
                          },
                          "end": {
                            "row": 5,
                            "column": 38
                          },
                          "text": "UseTraditional ?"
                        },
                        {
                          "type": "?",
                          "start": {
                            "row": 5,
                            "column": 39
                          },
                          "end": {
                            "row": 5,
                            "column": 40
                          },
                          "text": "t"
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 5,
                            "column": 41
                          },
                          "end": {
                            "row": 5,
                            "column": 58
                          },
                          "text": "aditionalDigits :"
                        },
                        {
                          "type": ":",
                          "start": {
                            "row": 5,
                            "column": 59
                          },
                          "end": {
                            "row": 5,
                            "column": 60
                          },
                          "text": "s"
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 5,
                            "column": 61
                          },
                          "end": {
                            "row": 5,
                            "column": 73
                          },
                          "text": "mpleDigits;\n"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 5,
                    "column": 73
                  },
                  "end": {
                    "row": 5,
                    "column": 74
                  },
                  "text": "\t"
                }
              ]
            },
            {
              "type": "local_variable_declaration",
              "start": {
                "row": 6,
                "column": 2
              },
              "end": {
                "row": 6,
                "column": 69
              },
              "text": "ring[] units = isUseTraditional ? traditionalUnits : simpleUnits;\n\n",
              "children": [
                {
                  "type": "array_type",
                  "start": {
                    "row": 6,
                    "column": 2
                  },
                  "end": {
                    "row": 6,
                    "column": 10
                  },
                  "text": "ring[] u",
                  "children": [
                    {
                      "type": "type_identifier",
                      "start": {
                        "row": 6,
                        "column": 2
                      },
                      "end": {
                        "row": 6,
                        "column": 8
                      },
                      "text": "ring[]"
                    },
                    {
                      "type": "dimensions",
                      "start": {
                        "row": 6,
                        "column": 8
                      },
                      "end": {
                        "row": 6,
                        "column": 10
                      },
                      "text": " u",
                      "children": [
                        {
                          "type": "[",
                          "start": {
                            "row": 6,
                            "column": 8
                          },
                          "end": {
                            "row": 6,
                            "column": 9
                          },
                          "text": " "
                        },
                        {
                          "type": "]",
                          "start": {
                            "row": 6,
                            "column": 9
                          },
                          "end": {
                            "row": 6,
                            "column": 10
                          },
                          "text": "u"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "variable_declarator",
                  "start": {
                    "row": 6,
                    "column": 11
                  },
                  "end": {
                    "row": 6,
                    "column": 68
                  },
                  "text": "its = isUseTraditional ? traditionalUnits : simpleUnits;\n",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 6,
                        "column": 11
                      },
                      "end": {
                        "row": 6,
                        "column": 16
                      },
                      "text": "its ="
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 6,
                        "column": 17
                      },
                      "end": {
                        "row": 6,
                        "column": 18
                      },
                      "text": "i"
                    },
                    {
                      "type": "ternary_expression",
                      "start": {
                        "row": 6,
                        "column": 19
                      },
                      "end": {
                        "row": 6,
                        "column": 68
                      },
                      "text": "UseTraditional ? traditionalUnits : simpleUnits;\n",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 6,
                            "column": 19
                          },
                          "end": {
                            "row": 6,
                            "column": 35
                          },
                          "text": "UseTraditional ?"
                        },
                        {
                          "type": "?",
                          "start": {
                            "row": 6,
                            "column": 36
                          },
                          "end": {
                            "row": 6,
                            "column": 37
                          },
                          "text": "t"
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 6,
                            "column": 38
                          },
                          "end": {
                            "row": 6,
                            "column": 54
                          },
                          "text": "aditionalUnits :"
                        },
                        {
                          "type": ":",
                          "start": {
                            "row": 6,
                            "column": 55
                          },
                          "end": {
                            "row": 6,
                            "column": 56
                          },
                          "text": "s"
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 6,
                            "column": 57
                          },
                          "end": {
                            "row": 6,
                            "column": 68
                          },
                          "text": "mpleUnits;\n"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 6,
                    "column": 68
                  },
                  "end": {
                    "row": 6,
                    "column": 69
                  },
                  "text": "\n"
                }
              ]
            },
            {
              "type": "local_variable_declaration",
              "start": {
                "row": 8,
                "column": 2
              },
              "end": {
                "row": 8,
                "column": 24
              },
              "text": "t temp = amountPart;\n\n",
              "children": [
                {
                  "type": "integral_type",
                  "start": {
                    "row": 8,
                    "column": 2
                  },
                  "end": {
                    "row": 8,
                    "column": 5
                  },
                  "text": "t t",
                  "children": [
                    {
                      "type": "int",
                      "start": {
                        "row": 8,
                        "column": 2
                      },
                      "end": {
                        "row": 8,
                        "column": 5
                      },
                      "text": "t t"
                    }
                  ]
                },
                {
                  "type": "variable_declarator",
                  "start": {
                    "row": 8,
                    "column": 6
                  },
                  "end": {
                    "row": 8,
                    "column": 23
                  },
                  "text": "mp = amountPart;\n",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 8,
                        "column": 6
                      },
                      "end": {
                        "row": 8,
                        "column": 10
                      },
                      "text": "mp ="
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 8,
                        "column": 11
                      },
                      "end": {
                        "row": 8,
                        "column": 12
                      },
                      "text": "a"
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 8,
                        "column": 13
                      },
                      "end": {
                        "row": 8,
                        "column": 23
                      },
                      "text": "ountPart;\n"
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 8,
                    "column": 23
                  },
                  "end": {
                    "row": 8,
                    "column": 24
                  },
                  "text": "\n"
                }
              ]
            },
            {
              "type": "local_variable_declaration",
              "start": {
                "row": 10,
                "column": 2
              },
              "end": {
                "row": 10,
                "column": 25
              },
              "text": "ring chineseStr = \"\";\n\t",
              "children": [
                {
                  "type": "type_identifier",
                  "start": {
                    "row": 10,
                    "column": 2
                  },
                  "end": {
                    "row": 10,
                    "column": 8
                  },
                  "text": "ring c"
                },
                {
                  "type": "variable_declarator",
                  "start": {
                    "row": 10,
                    "column": 9
                  },
                  "end": {
                    "row": 10,
                    "column": 24
                  },
                  "text": "ineseStr = \"\";\n",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 10,
                        "column": 9
                      },
                      "end": {
                        "row": 10,
                        "column": 19
                      },
                      "text": "ineseStr ="
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 10,
                        "column": 20
                      },
                      "end": {
                        "row": 10,
                        "column": 21
                      },
                      "text": "\""
                    },
                    {
                      "type": "string_literal",
                      "start": {
                        "row": 10,
                        "column": 22
                      },
                      "end": {
                        "row": 10,
                        "column": 24
                      },
                      "text": ";\n",
                      "children": [
                        {
                          "type": "\"",
                          "start": {
                            "row": 10,
                            "column": 22
                          },
                          "end": {
                            "row": 10,
                            "column": 23
                          },
                          "text": ";"
                        },
                        {
                          "type": "\"",
                          "start": {
                            "row": 10,
                            "column": 23
                          },
                          "end": {
                            "row": 10,
                            "column": 24
                          },
                          "text": "\n"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 10,
                    "column": 24
                  },
                  "end": {
                    "row": 10,
                    "column": 25
                  },
                  "text": "\t"
                }
              ]
            },
            {
              "type": "local_variable_declaration",
              "start": {
                "row": 11,
                "column": 2
              },
              "end": {
                "row": 11,
                "column": 28
              },
              "text": "olean lastIsZero = true; /",
              "children": [
                {
                  "type": "boolean_type",
                  "start": {
                    "row": 11,
                    "column": 2
                  },
                  "end": {
                    "row": 11,
                    "column": 9
                  },
                  "text": "olean l"
                },
                {
                  "type": "variable_declarator",
                  "start": {
                    "row": 11,
                    "column": 10
                  },
                  "end": {
                    "row": 11,
                    "column": 27
                  },
                  "text": "stIsZero = true; ",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 11,
                        "column": 10
                      },
                      "end": {
                        "row": 11,
                        "column": 20
                      },
                      "text": "stIsZero ="
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 11,
                        "column": 21
                      },
                      "end": {
                        "row": 11,
                        "column": 22
                      },
                      "text": "t"
                    },
                    {
                      "type": "true",
                      "start": {
                        "row": 11,
                        "column": 23
                      },
                      "end": {
                        "row": 11,
                        "column": 27
                      },
                      "text": "ue; "
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 11,
                    "column": 27
                  },
                  "end": {
                    "row": 11,
                    "column": 28
                  },
                  "text": "/"
                }
              ]
            },
            {
              "type": "line_comment",
              "start": {
                "row": 11,
                "column": 29
              },
              "end": {
                "row": 11,
                "column": 97
              },
              "text": " 在从低位往高位循环时，记录上一位数字是不是 0\n\t\tfor (int i = 0; temp > 0; i++) {\n\t\t\tif (t"
            },
            {
              "type": "for_statement",
              "start": {
                "row": 12,
                "column": 2
              },
              "end": {
                "row": 29,
                "column": 3
              },
              "text": " == 0) {\n\t\t\t\t// 高位已无数据\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tint digit = temp % 10;\n\t\t\tif (digit == 0) { // 取到的数字为 0\n\t\t\t\tif (false == lastIsZero) {\n\t\t\t\t\t// 前一个数字不是 0，则在当前汉字串前加“零”字;\n\t\t\t\t\tchineseStr = \"零\" + chineseStr;\n\t\t\t\t}\n\t\t\t\tlastIsZero = true;\n\t\t\t} else { // 取到的数字不是 0\n\t\t\t\tchineseStr = numArray[digit] + units[i] + chineseStr;\n\t\t\t\tlastIsZero = false;\n\t\t\t}\n\t\t\ttemp = temp / 10;\n\t\t}\n\t\treturn chineseStr;\n\t}",
              "children": [
                {
                  "type": "for",
                  "start": {
                    "row": 12,
                    "column": 2
                  },
                  "end": {
                    "row": 12,
                    "column": 5
                  },
                  "text": " =="
                },
                {
                  "type": "(",
                  "start": {
                    "row": 12,
                    "column": 6
                  },
                  "end": {
                    "row": 12,
                    "column": 7
                  },
                  "text": "0"
                },
                {
                  "type": "local_variable_declaration",
                  "start": {
                    "row": 12,
                    "column": 7
                  },
                  "end": {
                    "row": 12,
                    "column": 17
                  },
                  "text": ") {\n\t\t\t\t//",
                  "children": [
                    {
                      "type": "integral_type",
                      "start": {
                        "row": 12,
                        "column": 7
                      },
                      "end": {
                        "row": 12,
                        "column": 10
                      },
                      "text": ") {",
                      "children": [
                        {
                          "type": "int",
                          "start": {
                            "row": 12,
                            "column": 7
                          },
                          "end": {
                            "row": 12,
                            "column": 10
                          },
                          "text": ") {"
                        }
                      ]
                    },
                    {
                      "type": "variable_declarator",
                      "start": {
                        "row": 12,
                        "column": 11
                      },
                      "end": {
                        "row": 12,
                        "column": 16
                      },
                      "text": "\t\t\t\t/",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 12,
                            "column": 11
                          },
                          "end": {
                            "row": 12,
                            "column": 12
                          },
                          "text": "\t"
                        },
                        {
                          "type": "=",
                          "start": {
                            "row": 12,
                            "column": 13
                          },
                          "end": {
                            "row": 12,
                            "column": 14
                          },
                          "text": "\t"
                        },
                        {
                          "type": "decimal_integer_literal",
                          "start": {
                            "row": 12,
                            "column": 15
                          },
                          "end": {
                            "row": 12,
                            "column": 16
                          },
                          "text": "/"
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start": {
                        "row": 12,
                        "column": 16
                      },
                      "end": {
                        "row": 12,
                        "column": 17
                      },
                      "text": "/"
                    }
                  ]
                },
                {
                  "type": "binary_expression",
                  "start": {
                    "row": 12,
                    "column": 18
                  },
                  "end": {
                    "row": 12,
                    "column": 26
                  },
                  "text": "高位已无数据\n\t",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 12,
                        "column": 18
                      },
                      "end": {
                        "row": 12,
                        "column": 22
                      },
                      "text": "高位已无"
                    },
                    {
                      "type": ">",
                      "start": {
                        "row": 12,
                        "column": 23
                      },
                      "end": {
                        "row": 12,
                        "column": 24
                      },
                      "text": "据"
                    },
                    {
                      "type": "decimal_integer_literal",
                      "start": {
                        "row": 12,
                        "column": 25
                      },
                      "end": {
                        "row": 12,
                        "column": 26
                      },
                      "text": "\t"
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 12,
                    "column": 26
                  },
                  "end": {
                    "row": 12,
                    "column": 27
                  },
                  "text": "\t"
                },
                {
                  "type": "update_expression",
                  "start": {
                    "row": 12,
                    "column": 28
                  },
                  "end": {
                    "row": 12,
                    "column": 31
                  },
                  "text": "\tbr",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 12,
                        "column": 28
                      },
                      "end": {
                        "row": 12,
                        "column": 29
                      },
                      "text": "\t"
                    },
                    {
                      "type": "++",
                      "start": {
                        "row": 12,
                        "column": 29
                      },
                      "end": {
                        "row": 12,
                        "column": 31
                      },
                      "text": "br"
                    }
                  ]
                },
                {
                  "type": ")",
                  "start": {
                    "row": 12,
                    "column": 31
                  },
                  "end": {
                    "row": 12,
                    "column": 32
                  },
                  "text": "e"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 12,
                    "column": 33
                  },
                  "end": {
                    "row": 29,
                    "column": 3
                  },
                  "text": "k;\n\t\t\t}\n\t\t\tint digit = temp % 10;\n\t\t\tif (digit == 0) { // 取到的数字为 0\n\t\t\t\tif (false == lastIsZero) {\n\t\t\t\t\t// 前一个数字不是 0，则在当前汉字串前加“零”字;\n\t\t\t\t\tchineseStr = \"零\" + chineseStr;\n\t\t\t\t}\n\t\t\t\tlastIsZero = true;\n\t\t\t} else { // 取到的数字不是 0\n\t\t\t\tchineseStr = numArray[digit] + units[i] + chineseStr;\n\t\t\t\tlastIsZero = false;\n\t\t\t}\n\t\t\ttemp = temp / 10;\n\t\t}\n\t\treturn chineseStr;\n\t}",
                  "children": [
                    {
                      "type": "{",
                      "start": {
                        "row": 12,
                        "column": 33
                      },
                      "end": {
                        "row": 12,
                        "column": 34
                      },
                      "text": "k"
                    },
                    {
                      "type": "if_statement",
                      "start": {
                        "row": 13,
                        "column": 3
                      },
                      "end": {
                        "row": 16,
                        "column": 4
                      },
                      "text": "\t}\n\t\t\tint digit = temp % 10;\n\t\t\tif (digit == 0) { // 取到的数字",
                      "children": [
                        {
                          "type": "if",
                          "start": {
                            "row": 13,
                            "column": 3
                          },
                          "end": {
                            "row": 13,
                            "column": 5
                          },
                          "text": "\t}"
                        },
                        {
                          "type": "condition",
                          "start": {
                            "row": 13,
                            "column": 6
                          },
                          "end": {
                            "row": 13,
                            "column": 17
                          },
                          "text": "\t\t\tint digi",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 13,
                                "column": 6
                              },
                              "end": {
                                "row": 13,
                                "column": 7
                              },
                              "text": "\t"
                            },
                            {
                              "type": "binary_expression",
                              "start": {
                                "row": 13,
                                "column": 7
                              },
                              "end": {
                                "row": 13,
                                "column": 16
                              },
                              "text": "\t\tint dig",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 13,
                                    "column": 7
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 11
                                  },
                                  "text": "\t\tin"
                                },
                                {
                                  "type": "==",
                                  "start": {
                                    "row": 13,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 14
                                  },
                                  "text": " d"
                                },
                                {
                                  "type": "decimal_integer_literal",
                                  "start": {
                                    "row": 13,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 16
                                  },
                                  "text": "g"
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 13,
                                "column": 16
                              },
                              "end": {
                                "row": 13,
                                "column": 17
                              },
                              "text": "i"
                            }
                          ]
                        },
                        {
                          "type": "block",
                          "start": {
                            "row": 13,
                            "column": 18
                          },
                          "end": {
                            "row": 16,
                            "column": 4
                          },
                          "text": " = temp % 10;\n\t\t\tif (digit == 0) { // 取到的数字",
                          "children": [
                            {
                              "type": "{",
                              "start": {
                                "row": 13,
                                "column": 18
                              },
                              "end": {
                                "row": 13,
                                "column": 19
                              },
                              "text": " "
                            },
                            {
                              "type": "line_comment",
                              "start": {
                                "row": 14,
                                "column": 4
                              },
                              "end": {
                                "row": 14,
                                "column": 25
                              },
                              "text": "p % 10;\n\t\t\tif (digit "
                            },
                            {
                              "type": "break_statement",
                              "start": {
                                "row": 15,
                                "column": 4
                              },
                              "end": {
                                "row": 15,
                                "column": 10
                              },
                              "text": " { // ",
                              "children": [
                                {
                                  "type": "break",
                                  "start": {
                                    "row": 15,
                                    "column": 4
                                  },
                                  "end": {
                                    "row": 15,
                                    "column": 9
                                  },
                                  "text": " { //"
                                },
                                {
                                  "type": ";",
                                  "start": {
                                    "row": 15,
                                    "column": 9
                                  },
                                  "end": {
                                    "row": 15,
                                    "column": 10
                                  },
                                  "text": " "
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start": {
                                "row": 16,
                                "column": 3
                              },
                              "end": {
                                "row": 16,
                                "column": 4
                              },
                              "text": "字"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "local_variable_declaration",
                      "start": {
                        "row": 17,
                        "column": 3
                      },
                      "end": {
                        "row": 17,
                        "column": 25
                      },
                      "text": "\t\t\t\tif (false == lastI",
                      "children": [
                        {
                          "type": "integral_type",
                          "start": {
                            "row": 17,
                            "column": 3
                          },
                          "end": {
                            "row": 17,
                            "column": 6
                          },
                          "text": "\t\t\t",
                          "children": [
                            {
                              "type": "int",
                              "start": {
                                "row": 17,
                                "column": 3
                              },
                              "end": {
                                "row": 17,
                                "column": 6
                              },
                              "text": "\t\t\t"
                            }
                          ]
                        },
                        {
                          "type": "variable_declarator",
                          "start": {
                            "row": 17,
                            "column": 7
                          },
                          "end": {
                            "row": 17,
                            "column": 24
                          },
                          "text": "if (false == last",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 17,
                                "column": 7
                              },
                              "end": {
                                "row": 17,
                                "column": 12
                              },
                              "text": "if (f"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 17,
                                "column": 13
                              },
                              "end": {
                                "row": 17,
                                "column": 14
                              },
                              "text": "l"
                            },
                            {
                              "type": "binary_expression",
                              "start": {
                                "row": 17,
                                "column": 15
                              },
                              "end": {
                                "row": 17,
                                "column": 24
                              },
                              "text": "e == last",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 17,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 17,
                                    "column": 19
                                  },
                                  "text": "e =="
                                },
                                {
                                  "type": "%",
                                  "start": {
                                    "row": 17,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 17,
                                    "column": 21
                                  },
                                  "text": "l"
                                },
                                {
                                  "type": "decimal_integer_literal",
                                  "start": {
                                    "row": 17,
                                    "column": 22
                                  },
                                  "end": {
                                    "row": 17,
                                    "column": 24
                                  },
                                  "text": "st"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start": {
                            "row": 17,
                            "column": 24
                          },
                          "end": {
                            "row": 17,
                            "column": 25
                          },
                          "text": "I"
                        }
                      ]
                    },
                    {
                      "type": "if_statement",
                      "start": {
                        "row": 18,
                        "column": 3
                      },
                      "end": {
                        "row": 27,
                        "column": 4
                      },
                      "text": "o) {\n\t\t\t\t\t// 前一个数字不是 0，则在当前汉字串前加“零”字;\n\t\t\t\t\tchineseStr = \"零\" + chineseStr;\n\t\t\t\t}\n\t\t\t\tlastIsZero = true;\n\t\t\t} else { // 取到的数字不是 0\n\t\t\t\tchineseStr = numArray[digit] + units[i] + chineseStr;\n\t\t\t\tlastIsZero = false;\n\t\t\t}\n\t\t\ttemp = temp / 10;\n\t\t}\n\t\treturn chineseStr;\n\t}",
                      "children": [
                        {
                          "type": "if",
                          "start": {
                            "row": 18,
                            "column": 3
                          },
                          "end": {
                            "row": 18,
                            "column": 5
                          },
                          "text": "o)"
                        },
                        {
                          "type": "condition",
                          "start": {
                            "row": 18,
                            "column": 6
                          },
                          "end": {
                            "row": 18,
                            "column": 18
                          },
                          "text": "{\n\t\t\t\t\t// 前一",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 18,
                                "column": 6
                              },
                              "end": {
                                "row": 18,
                                "column": 7
                              },
                              "text": "{"
                            },
                            {
                              "type": "binary_expression",
                              "start": {
                                "row": 18,
                                "column": 7
                              },
                              "end": {
                                "row": 18,
                                "column": 17
                              },
                              "text": "\n\t\t\t\t\t// 前",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 18,
                                    "column": 7
                                  },
                                  "end": {
                                    "row": 18,
                                    "column": 12
                                  },
                                  "text": "\n\t\t\t\t"
                                },
                                {
                                  "type": "==",
                                  "start": {
                                    "row": 18,
                                    "column": 13
                                  },
                                  "end": {
                                    "row": 18,
                                    "column": 15
                                  },
                                  "text": "//"
                                },
                                {
                                  "type": "decimal_integer_literal",
                                  "start": {
                                    "row": 18,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 18,
                                    "column": 17
                                  },
                                  "text": "前"
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 18,
                                "column": 17
                              },
                              "end": {
                                "row": 18,
                                "column": 18
                              },
                              "text": "一"
                            }
                          ]
                        },
                        {
                          "type": "block",
                          "start": {
                            "row": 18,
                            "column": 19
                          },
                          "end": {
                            "row": 24,
                            "column": 4
                          },
                          "text": "数字不是 0，则在当前汉字串前加“零”字;\n\t\t\t\t\tchineseStr = \"零\" + chineseStr;\n\t\t\t\t}\n\t\t\t\tlastIsZero = true;\n\t\t\t} else { // 取到的数字不是 0\n\t\t\t\tchineseStr = numArray[digit] + units[i] + chineseStr;\n\t\t\t\tlastIsZero = false;\n\t\t\t}\n\t\t\tt",
                          "children": [
                            {
                              "type": "{",
                              "start": {
                                "row": 18,
                                "column": 19
                              },
                              "end": {
                                "row": 18,
                                "column": 20
                              },
                              "text": "数"
                            },
                            {
                              "type": "line_comment",
                              "start": {
                                "row": 18,
                                "column": 21
                              },
                              "end": {
                                "row": 18,
                                "column": 44
                              },
                              "text": "不是 0，则在当前汉字串前加“零”字;\n\t\t\t"
                            },
                            {
                              "type": "if_statement",
                              "start": {
                                "row": 19,
                                "column": 4
                              },
                              "end": {
                                "row": 22,
                                "column": 5
                              },
                              "text": "neseStr = \"零\" + chineseStr;\n\t\t\t\t}\n\t\t\t\tlastIsZero = true;\n\t\t\t} else { // 取到的数字不是 0\n\t\t\t\tchineseStr = numArray[digit] + units[i] + chineseStr;\n\t\t\t\tl",
                              "children": [
                                {
                                  "type": "if",
                                  "start": {
                                    "row": 19,
                                    "column": 4
                                  },
                                  "end": {
                                    "row": 19,
                                    "column": 6
                                  },
                                  "text": "ne"
                                },
                                {
                                  "type": "condition",
                                  "start": {
                                    "row": 19,
                                    "column": 7
                                  },
                                  "end": {
                                    "row": 19,
                                    "column": 28
                                  },
                                  "text": "eStr = \"零\" + chineseS",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 19,
                                        "column": 7
                                      },
                                      "end": {
                                        "row": 19,
                                        "column": 8
                                      },
                                      "text": "e"
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start": {
                                        "row": 19,
                                        "column": 8
                                      },
                                      "end": {
                                        "row": 19,
                                        "column": 27
                                      },
                                      "text": "Str = \"零\" + chinese",
                                      "children": [
                                        {
                                          "type": "false",
                                          "start": {
                                            "row": 19,
                                            "column": 8
                                          },
                                          "end": {
                                            "row": 19,
                                            "column": 13
                                          },
                                          "text": "Str ="
                                        },
                                        {
                                          "type": "==",
                                          "start": {
                                            "row": 19,
                                            "column": 14
                                          },
                                          "end": {
                                            "row": 19,
                                            "column": 16
                                          },
                                          "text": "\"零"
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 19,
                                            "column": 17
                                          },
                                          "end": {
                                            "row": 19,
                                            "column": 27
                                          },
                                          "text": " + chinese"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 19,
                                        "column": 27
                                      },
                                      "end": {
                                        "row": 19,
                                        "column": 28
                                      },
                                      "text": "S"
                                    }
                                  ]
                                },
                                {
                                  "type": "block",
                                  "start": {
                                    "row": 19,
                                    "column": 29
                                  },
                                  "end": {
                                    "row": 22,
                                    "column": 5
                                  },
                                  "text": "r;\n\t\t\t\t}\n\t\t\t\tlastIsZero = true;\n\t\t\t} else { // 取到的数字不是 0\n\t\t\t\tchineseStr = numArray[digit] + units[i] + chineseStr;\n\t\t\t\tl",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start": {
                                        "row": 19,
                                        "column": 29
                                      },
                                      "end": {
                                        "row": 19,
                                        "column": 30
                                      },
                                      "text": "r"
                                    },
                                    {
                                      "type": "line_comment",
                                      "start": {
                                        "row": 20,
                                        "column": 5
                                      },
                                      "end": {
                                        "row": 20,
                                        "column": 74
                                      },
                                      "text": "}\n\t\t\t\tlastIsZero = true;\n\t\t\t} else { // 取到的数字不是 0\n\t\t\t\tchineseStr = nu"
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start": {
                                        "row": 21,
                                        "column": 5
                                      },
                                      "end": {
                                        "row": 21,
                                        "column": 37
                                      },
                                      "text": "[digit] + units[i] + chineseStr;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start": {
                                            "row": 21,
                                            "column": 5
                                          },
                                          "end": {
                                            "row": 21,
                                            "column": 36
                                          },
                                          "text": "[digit] + units[i] + chineseStr",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 21,
                                                "column": 5
                                              },
                                              "end": {
                                                "row": 21,
                                                "column": 15
                                              },
                                              "text": "[digit] + "
                                            },
                                            {
                                              "type": "=",
                                              "start": {
                                                "row": 21,
                                                "column": 16
                                              },
                                              "end": {
                                                "row": 21,
                                                "column": 17
                                              },
                                              "text": "n"
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start": {
                                                "row": 21,
                                                "column": 18
                                              },
                                              "end": {
                                                "row": 21,
                                                "column": 36
                                              },
                                              "text": "ts[i] + chineseStr",
                                              "children": [
                                                {
                                                  "type": "string_literal",
                                                  "start": {
                                                    "row": 21,
                                                    "column": 18
                                                  },
                                                  "end": {
                                                    "row": 21,
                                                    "column": 23
                                                  },
                                                  "text": "ts[i]",
                                                  "children": [
                                                    {
                                                      "type": "\"",
                                                      "start": {
                                                        "row": 21,
                                                        "column": 18
                                                      },
                                                      "end": {
                                                        "row": 21,
                                                        "column": 19
                                                      },
                                                      "text": "t"
                                                    },
                                                    {
                                                      "type": "string_fragment",
                                                      "start": {
                                                        "row": 21,
                                                        "column": 19
                                                      },
                                                      "end": {
                                                        "row": 21,
                                                        "column": 22
                                                      },
                                                      "text": "s[i"
                                                    },
                                                    {
                                                      "type": "\"",
                                                      "start": {
                                                        "row": 21,
                                                        "column": 22
                                                      },
                                                      "end": {
                                                        "row": 21,
                                                        "column": 23
                                                      },
                                                      "text": "]"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "+",
                                                  "start": {
                                                    "row": 21,
                                                    "column": 24
                                                  },
                                                  "end": {
                                                    "row": 21,
                                                    "column": 25
                                                  },
                                                  "text": "+"
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 21,
                                                    "column": 26
                                                  },
                                                  "end": {
                                                    "row": 21,
                                                    "column": 36
                                                  },
                                                  "text": "chineseStr"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start": {
                                            "row": 21,
                                            "column": 36
                                          },
                                          "end": {
                                            "row": 21,
                                            "column": 37
                                          },
                                          "text": ";"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start": {
                                        "row": 22,
                                        "column": 4
                                      },
                                      "end": {
                                        "row": 22,
                                        "column": 5
                                      },
                                      "text": "l"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start": {
                                "row": 23,
                                "column": 4
                              },
                              "end": {
                                "row": 23,
                                "column": 22
                              },
                              "text": "Zero = false;\n\t\t\t}",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start": {
                                    "row": 23,
                                    "column": 4
                                  },
                                  "end": {
                                    "row": 23,
                                    "column": 21
                                  },
                                  "text": "Zero = false;\n\t\t\t",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 23,
                                        "column": 4
                                      },
                                      "end": {
                                        "row": 23,
                                        "column": 14
                                      },
                                      "text": "Zero = fal"
                                    },
                                    {
                                      "type": "=",
                                      "start": {
                                        "row": 23,
                                        "column": 15
                                      },
                                      "end": {
                                        "row": 23,
                                        "column": 16
                                      },
                                      "text": "e"
                                    },
                                    {
                                      "type": "true",
                                      "start": {
                                        "row": 23,
                                        "column": 17
                                      },
                                      "end": {
                                        "row": 23,
                                        "column": 21
                                      },
                                      "text": "\n\t\t\t"
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start": {
                                    "row": 23,
                                    "column": 21
                                  },
                                  "end": {
                                    "row": 23,
                                    "column": 22
                                  },
                                  "text": "}"
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start": {
                                "row": 24,
                                "column": 3
                              },
                              "end": {
                                "row": 24,
                                "column": 4
                              },
                              "text": "t"
                            }
                          ]
                        },
                        {
                          "type": "else",
                          "start": {
                            "row": 24,
                            "column": 5
                          },
                          "end": {
                            "row": 24,
                            "column": 9
                          },
                          "text": "mp ="
                        },
                        {
                          "type": "block",
                          "start": {
                            "row": 24,
                            "column": 10
                          },
                          "end": {
                            "row": 27,
                            "column": 4
                          },
                          "text": "temp / 10;\n\t\t}\n\t\treturn chineseStr;\n\t}",
                          "children": [
                            {
                              "type": "{",
                              "start": {
                                "row": 24,
                                "column": 10
                              },
                              "end": {
                                "row": 24,
                                "column": 11
                              },
                              "text": "t"
                            },
                            {
                              "type": "line_comment",
                              "start": {
                                "row": 24,
                                "column": 12
                              },
                              "end": {
                                "row": 24,
                                "column": 38
                              },
                              "text": "mp / 10;\n\t\t}\n\t\treturn chin"
                            },
                            {
                              "type": "expression_statement",
                              "start": {
                                "row": 25,
                                "column": 4
                              },
                              "end": {
                                "row": 25,
                                "column": 57
                              },
                              "text": "r;\n\t}",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start": {
                                    "row": 25,
                                    "column": 4
                                  },
                                  "end": {
                                    "row": 25,
                                    "column": 56
                                  },
                                  "text": "r;\n\t}",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 25,
                                        "column": 4
                                      },
                                      "end": {
                                        "row": 25,
                                        "column": 14
                                      },
                                      "text": "r;\n\t}"
                                    },
                                    {
                                      "type": "=",
                                      "start": {
                                        "row": 25,
                                        "column": 15
                                      },
                                      "end": {
                                        "row": 25,
                                        "column": 16
                                      },
                                      "text": ""
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start": {
                                        "row": 25,
                                        "column": 17
                                      },
                                      "end": {
                                        "row": 25,
                                        "column": 56
                                      },
                                      "text": "",
                                      "children": [
                                        {
                                          "type": "binary_expression",
                                          "start": {
                                            "row": 25,
                                            "column": 17
                                          },
                                          "end": {
                                            "row": 25,
                                            "column": 43
                                          },
                                          "text": "",
                                          "children": [
                                            {
                                              "type": "array_access",
                                              "start": {
                                                "row": 25,
                                                "column": 17
                                              },
                                              "end": {
                                                "row": 25,
                                                "column": 32
                                              },
                                              "text": "",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 25,
                                                    "column": 17
                                                  },
                                                  "end": {
                                                    "row": 25,
                                                    "column": 25
                                                  },
                                                  "text": ""
                                                },
                                                {
                                                  "type": "[",
                                                  "start": {
                                                    "row": 25,
                                                    "column": 25
                                                  },
                                                  "end": {
                                                    "row": 25,
                                                    "column": 26
                                                  },
                                                  "text": ""
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 25,
                                                    "column": 26
                                                  },
                                                  "end": {
                                                    "row": 25,
                                                    "column": 31
                                                  },
                                                  "text": ""
                                                },
                                                {
                                                  "type": "]",
                                                  "start": {
                                                    "row": 25,
                                                    "column": 31
                                                  },
                                                  "end": {
                                                    "row": 25,
                                                    "column": 32
                                                  },
                                                  "text": ""
                                                }
                                              ]
                                            },
                                            {
                                              "type": "+",
                                              "start": {
                                                "row": 25,
                                                "column": 33
                                              },
                                              "end": {
                                                "row": 25,
                                                "column": 34
                                              },
                                              "text": ""
                                            },
                                            {
                                              "type": "array_access",
                                              "start": {
                                                "row": 25,
                                                "column": 35
                                              },
                                              "end": {
                                                "row": 25,
                                                "column": 43
                                              },
                                              "text": "",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 25,
                                                    "column": 35
                                                  },
                                                  "end": {
                                                    "row": 25,
                                                    "column": 40
                                                  },
                                                  "text": ""
                                                },
                                                {
                                                  "type": "[",
                                                  "start": {
                                                    "row": 25,
                                                    "column": 40
                                                  },
                                                  "end": {
                                                    "row": 25,
                                                    "column": 41
                                                  },
                                                  "text": ""
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 25,
                                                    "column": 41
                                                  },
                                                  "end": {
                                                    "row": 25,
                                                    "column": 42
                                                  },
                                                  "text": ""
                                                },
                                                {
                                                  "type": "]",
                                                  "start": {
                                                    "row": 25,
                                                    "column": 42
                                                  },
                                                  "end": {
                                                    "row": 25,
                                                    "column": 43
                                                  },
                                                  "text": ""
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "+",
                                          "start": {
                                            "row": 25,
                                            "column": 44
                                          },
                                          "end": {
                                            "row": 25,
                                            "column": 45
                                          },
                                          "text": ""
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 25,
                                            "column": 46
                                          },
                                          "end": {
                                            "row": 25,
                                            "column": 56
                                          },
                                          "text": ""
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start": {
                                    "row": 25,
                                    "column": 56
                                  },
                                  "end": {
                                    "row": 25,
                                    "column": 57
                                  },
                                  "text": ""
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start": {
                                "row": 26,
                                "column": 4
                              },
                              "end": {
                                "row": 26,
                                "column": 23
                              },
                              "text": "",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start": {
                                    "row": 26,
                                    "column": 4
                                  },
                                  "end": {
                                    "row": 26,
                                    "column": 22
                                  },
                                  "text": "",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 26,
                                        "column": 4
                                      },
                                      "end": {
                                        "row": 26,
                                        "column": 14
                                      },
                                      "text": ""
                                    },
                                    {
                                      "type": "=",
                                      "start": {
                                        "row": 26,
                                        "column": 15
                                      },
                                      "end": {
                                        "row": 26,
                                        "column": 16
                                      },
                                      "text": ""
                                    },
                                    {
                                      "type": "false",
                                      "start": {
                                        "row": 26,
                                        "column": 17
                                      },
                                      "end": {
                                        "row": 26,
                                        "column": 22
                                      },
                                      "text": ""
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start": {
                                    "row": 26,
                                    "column": 22
                                  },
                                  "end": {
                                    "row": 26,
                                    "column": 23
                                  },
                                  "text": ""
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start": {
                                "row": 27,
                                "column": 3
                              },
                              "end": {
                                "row": 27,
                                "column": 4
                              },
                              "text": ""
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 28,
                        "column": 3
                      },
                      "end": {
                        "row": 28,
                        "column": 20
                      },
                      "text": "",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start": {
                            "row": 28,
                            "column": 3
                          },
                          "end": {
                            "row": 28,
                            "column": 19
                          },
                          "text": "",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 28,
                                "column": 3
                              },
                              "end": {
                                "row": 28,
                                "column": 7
                              },
                              "text": ""
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 28,
                                "column": 8
                              },
                              "end": {
                                "row": 28,
                                "column": 9
                              },
                              "text": ""
                            },
                            {
                              "type": "binary_expression",
                              "start": {
                                "row": 28,
                                "column": 10
                              },
                              "end": {
                                "row": 28,
                                "column": 19
                              },
                              "text": "",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 28,
                                    "column": 10
                                  },
                                  "end": {
                                    "row": 28,
                                    "column": 14
                                  },
                                  "text": ""
                                },
                                {
                                  "type": "/",
                                  "start": {
                                    "row": 28,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 28,
                                    "column": 16
                                  },
                                  "text": ""
                                },
                                {
                                  "type": "decimal_integer_literal",
                                  "start": {
                                    "row": 28,
                                    "column": 17
                                  },
                                  "end": {
                                    "row": 28,
                                    "column": 19
                                  },
                                  "text": ""
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start": {
                            "row": 28,
                            "column": 19
                          },
                          "end": {
                            "row": 28,
                            "column": 20
                          },
                          "text": ""
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start": {
                        "row": 29,
                        "column": 2
                      },
                      "end": {
                        "row": 29,
                        "column": 3
                      },
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 30,
                "column": 2
              },
              "end": {
                "row": 30,
                "column": 20
              },
              "text": "",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 30,
                    "column": 2
                  },
                  "end": {
                    "row": 30,
                    "column": 8
                  },
                  "text": ""
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 30,
                    "column": 9
                  },
                  "end": {
                    "row": 30,
                    "column": 19
                  },
                  "text": ""
                },
                {
                  "type": ";",
                  "start": {
                    "row": 30,
                    "column": 19
                  },
                  "end": {
                    "row": 30,
                    "column": 20
                  },
                  "text": ""
                }
              ]
            },
            {
              "type": "}",
              "start": {
                "row": 31,
                "column": 1
              },
              "end": {
                "row": 31,
                "column": 2
              },
              "text": ""
            }
          ]
        }
      ]
    }
  ]
}