{
  "type": "program",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 18,
    "column": 5
  },
  "text": "protected void shardMessageHandler(DirectBuffer buffer, int offset, int length, Header header) {\n        /**\n         * All incoming messages here are supposed to be unicast messages.\n         */\n        // TODO: implement fragmentation handler here PROBABLY. Or forbid messages > MTU?\n        //log.info(\"shardMessageHandler message request incoming...\");\n        byte[] data = new byte[length];\n        buffer.getBytes(offset, data);\n\n        VoidMessage message = VoidMessage.fromBytes(data);\n        if (message.getMessageType() == 7) {\n            // if that's vector request message - it's special case, we don't send it to other shards yet\n            //log.info(\"Shortcut for vector request\");\n            messages.add(message);\n        } else {\n            // and send it away to other Shards\n            publicationForShards.offer(buffer, offset, length);\n        }\n    }",
  "children": [
    {
      "type": "method_declaration",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 18,
        "column": 5
      },
      "text": "protected void shardMessageHandler(DirectBuffer buffer, int offset, int length, Header header) {\n        /**\n         * All incoming messages here are supposed to be unicast messages.\n         */\n        // TODO: implement fragmentation handler here PROBABLY. Or forbid messages > MTU?\n        //log.info(\"shardMessageHandler message request incoming...\");\n        byte[] data = new byte[length];\n        buffer.getBytes(offset, data);\n\n        VoidMessage message = VoidMessage.fromBytes(data);\n        if (message.getMessageType() == 7) {\n            // if that's vector request message - it's special case, we don't send it to other shards yet\n            //log.info(\"Shortcut for vector request\");\n            messages.add(message);\n        } else {\n            // and send it away to other Shards\n            publicationForShards.offer(buffer, offset, length);\n        }\n    }",
      "children": [
        {
          "type": "modifiers",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 9
          },
          "text": "protected",
          "children": [
            {
              "type": "protected",
              "start": {
                "row": 0,
                "column": 0
              },
              "end": {
                "row": 0,
                "column": 9
              },
              "text": "protected"
            }
          ]
        },
        {
          "type": "void_type",
          "start": {
            "row": 0,
            "column": 10
          },
          "end": {
            "row": 0,
            "column": 14
          },
          "text": "void"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 15
          },
          "end": {
            "row": 0,
            "column": 34
          },
          "text": "shardMessageHandler"
        },
        {
          "type": "formal_parameters",
          "start": {
            "row": 0,
            "column": 34
          },
          "end": {
            "row": 0,
            "column": 94
          },
          "text": "(DirectBuffer buffer, int offset, int length, Header header)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 34
              },
              "end": {
                "row": 0,
                "column": 35
              },
              "text": "("
            },
            {
              "type": "formal_parameter",
              "start": {
                "row": 0,
                "column": 35
              },
              "end": {
                "row": 0,
                "column": 54
              },
              "text": "DirectBuffer buffer",
              "children": [
                {
                  "type": "type_identifier",
                  "start": {
                    "row": 0,
                    "column": 35
                  },
                  "end": {
                    "row": 0,
                    "column": 47
                  },
                  "text": "DirectBuffer"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 48
                  },
                  "end": {
                    "row": 0,
                    "column": 54
                  },
                  "text": "buffer"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 54
              },
              "end": {
                "row": 0,
                "column": 55
              },
              "text": ","
            },
            {
              "type": "formal_parameter",
              "start": {
                "row": 0,
                "column": 56
              },
              "end": {
                "row": 0,
                "column": 66
              },
              "text": "int offset",
              "children": [
                {
                  "type": "integral_type",
                  "start": {
                    "row": 0,
                    "column": 56
                  },
                  "end": {
                    "row": 0,
                    "column": 59
                  },
                  "text": "int",
                  "children": [
                    {
                      "type": "int",
                      "start": {
                        "row": 0,
                        "column": 56
                      },
                      "end": {
                        "row": 0,
                        "column": 59
                      },
                      "text": "int"
                    }
                  ]
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 60
                  },
                  "end": {
                    "row": 0,
                    "column": 66
                  },
                  "text": "offset"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 66
              },
              "end": {
                "row": 0,
                "column": 67
              },
              "text": ","
            },
            {
              "type": "formal_parameter",
              "start": {
                "row": 0,
                "column": 68
              },
              "end": {
                "row": 0,
                "column": 78
              },
              "text": "int length",
              "children": [
                {
                  "type": "integral_type",
                  "start": {
                    "row": 0,
                    "column": 68
                  },
                  "end": {
                    "row": 0,
                    "column": 71
                  },
                  "text": "int",
                  "children": [
                    {
                      "type": "int",
                      "start": {
                        "row": 0,
                        "column": 68
                      },
                      "end": {
                        "row": 0,
                        "column": 71
                      },
                      "text": "int"
                    }
                  ]
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 72
                  },
                  "end": {
                    "row": 0,
                    "column": 78
                  },
                  "text": "length"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 78
              },
              "end": {
                "row": 0,
                "column": 79
              },
              "text": ","
            },
            {
              "type": "formal_parameter",
              "start": {
                "row": 0,
                "column": 80
              },
              "end": {
                "row": 0,
                "column": 93
              },
              "text": "Header header",
              "children": [
                {
                  "type": "type_identifier",
                  "start": {
                    "row": 0,
                    "column": 80
                  },
                  "end": {
                    "row": 0,
                    "column": 86
                  },
                  "text": "Header"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 87
                  },
                  "end": {
                    "row": 0,
                    "column": 93
                  },
                  "text": "header"
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 93
              },
              "end": {
                "row": 0,
                "column": 94
              },
              "text": ")"
            }
          ]
        },
        {
          "type": "block",
          "start": {
            "row": 0,
            "column": 95
          },
          "end": {
            "row": 18,
            "column": 5
          },
          "text": "{\n        /**\n         * All incoming messages here are supposed to be unicast messages.\n         */\n        // TODO: implement fragmentation handler here PROBABLY. Or forbid messages > MTU?\n        //log.info(\"shardMessageHandler message request incoming...\");\n        byte[] data = new byte[length];\n        buffer.getBytes(offset, data);\n\n        VoidMessage message = VoidMessage.fromBytes(data);\n        if (message.getMessageType() == 7) {\n            // if that's vector request message - it's special case, we don't send it to other shards yet\n            //log.info(\"Shortcut for vector request\");\n            messages.add(message);\n        } else {\n            // and send it away to other Shards\n            publicationForShards.offer(buffer, offset, length);\n        }\n    }",
          "children": [
            {
              "type": "{",
              "start": {
                "row": 0,
                "column": 95
              },
              "end": {
                "row": 0,
                "column": 96
              },
              "text": "{"
            },
            {
              "type": "block_comment",
              "start": {
                "row": 1,
                "column": 8
              },
              "end": {
                "row": 3,
                "column": 11
              },
              "text": "/**\n         * All incoming messages here are supposed to be unicast messages.\n         */"
            },
            {
              "type": "line_comment",
              "start": {
                "row": 4,
                "column": 8
              },
              "end": {
                "row": 4,
                "column": 89
              },
              "text": "// TODO: implement fragmentation handler here PROBABLY. Or forbid messages > MTU?"
            },
            {
              "type": "line_comment",
              "start": {
                "row": 5,
                "column": 8
              },
              "end": {
                "row": 5,
                "column": 70
              },
              "text": "//log.info(\"shardMessageHandler message request incoming...\");"
            },
            {
              "type": "local_variable_declaration",
              "start": {
                "row": 6,
                "column": 8
              },
              "end": {
                "row": 6,
                "column": 39
              },
              "text": "byte[] data = new byte[length];",
              "children": [
                {
                  "type": "array_type",
                  "start": {
                    "row": 6,
                    "column": 8
                  },
                  "end": {
                    "row": 6,
                    "column": 14
                  },
                  "text": "byte[]",
                  "children": [
                    {
                      "type": "integral_type",
                      "start": {
                        "row": 6,
                        "column": 8
                      },
                      "end": {
                        "row": 6,
                        "column": 12
                      },
                      "text": "byte",
                      "children": [
                        {
                          "type": "byte",
                          "start": {
                            "row": 6,
                            "column": 8
                          },
                          "end": {
                            "row": 6,
                            "column": 12
                          },
                          "text": "byte"
                        }
                      ]
                    },
                    {
                      "type": "dimensions",
                      "start": {
                        "row": 6,
                        "column": 12
                      },
                      "end": {
                        "row": 6,
                        "column": 14
                      },
                      "text": "[]",
                      "children": [
                        {
                          "type": "[",
                          "start": {
                            "row": 6,
                            "column": 12
                          },
                          "end": {
                            "row": 6,
                            "column": 13
                          },
                          "text": "["
                        },
                        {
                          "type": "]",
                          "start": {
                            "row": 6,
                            "column": 13
                          },
                          "end": {
                            "row": 6,
                            "column": 14
                          },
                          "text": "]"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "variable_declarator",
                  "start": {
                    "row": 6,
                    "column": 15
                  },
                  "end": {
                    "row": 6,
                    "column": 38
                  },
                  "text": "data = new byte[length]",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 6,
                        "column": 15
                      },
                      "end": {
                        "row": 6,
                        "column": 19
                      },
                      "text": "data"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 6,
                        "column": 20
                      },
                      "end": {
                        "row": 6,
                        "column": 21
                      },
                      "text": "="
                    },
                    {
                      "type": "array_creation_expression",
                      "start": {
                        "row": 6,
                        "column": 22
                      },
                      "end": {
                        "row": 6,
                        "column": 38
                      },
                      "text": "new byte[length]",
                      "children": [
                        {
                          "type": "new",
                          "start": {
                            "row": 6,
                            "column": 22
                          },
                          "end": {
                            "row": 6,
                            "column": 25
                          },
                          "text": "new"
                        },
                        {
                          "type": "integral_type",
                          "start": {
                            "row": 6,
                            "column": 26
                          },
                          "end": {
                            "row": 6,
                            "column": 30
                          },
                          "text": "byte",
                          "children": [
                            {
                              "type": "byte",
                              "start": {
                                "row": 6,
                                "column": 26
                              },
                              "end": {
                                "row": 6,
                                "column": 30
                              },
                              "text": "byte"
                            }
                          ]
                        },
                        {
                          "type": "dimensions_expr",
                          "start": {
                            "row": 6,
                            "column": 30
                          },
                          "end": {
                            "row": 6,
                            "column": 38
                          },
                          "text": "[length]",
                          "children": [
                            {
                              "type": "[",
                              "start": {
                                "row": 6,
                                "column": 30
                              },
                              "end": {
                                "row": 6,
                                "column": 31
                              },
                              "text": "["
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 6,
                                "column": 31
                              },
                              "end": {
                                "row": 6,
                                "column": 37
                              },
                              "text": "length"
                            },
                            {
                              "type": "]",
                              "start": {
                                "row": 6,
                                "column": 37
                              },
                              "end": {
                                "row": 6,
                                "column": 38
                              },
                              "text": "]"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 6,
                    "column": 38
                  },
                  "end": {
                    "row": 6,
                    "column": 39
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 7,
                "column": 8
              },
              "end": {
                "row": 7,
                "column": 38
              },
              "text": "buffer.getBytes(offset, data);",
              "children": [
                {
                  "type": "method_invocation",
                  "start": {
                    "row": 7,
                    "column": 8
                  },
                  "end": {
                    "row": 7,
                    "column": 37
                  },
                  "text": "buffer.getBytes(offset, data)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 7,
                        "column": 8
                      },
                      "end": {
                        "row": 7,
                        "column": 14
                      },
                      "text": "buffer"
                    },
                    {
                      "type": ".",
                      "start": {
                        "row": 7,
                        "column": 14
                      },
                      "end": {
                        "row": 7,
                        "column": 15
                      },
                      "text": "."
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 7,
                        "column": 15
                      },
                      "end": {
                        "row": 7,
                        "column": 23
                      },
                      "text": "getBytes"
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 7,
                        "column": 23
                      },
                      "end": {
                        "row": 7,
                        "column": 37
                      },
                      "text": "(offset, data)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 7,
                            "column": 23
                          },
                          "end": {
                            "row": 7,
                            "column": 24
                          },
                          "text": "("
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 7,
                            "column": 24
                          },
                          "end": {
                            "row": 7,
                            "column": 30
                          },
                          "text": "offset"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 7,
                            "column": 30
                          },
                          "end": {
                            "row": 7,
                            "column": 31
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 7,
                            "column": 32
                          },
                          "end": {
                            "row": 7,
                            "column": 36
                          },
                          "text": "data"
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 7,
                            "column": 36
                          },
                          "end": {
                            "row": 7,
                            "column": 37
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 7,
                    "column": 37
                  },
                  "end": {
                    "row": 7,
                    "column": 38
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "local_variable_declaration",
              "start": {
                "row": 9,
                "column": 8
              },
              "end": {
                "row": 9,
                "column": 58
              },
              "text": "VoidMessage message = VoidMessage.fromBytes(data);",
              "children": [
                {
                  "type": "type_identifier",
                  "start": {
                    "row": 9,
                    "column": 8
                  },
                  "end": {
                    "row": 9,
                    "column": 19
                  },
                  "text": "VoidMessage"
                },
                {
                  "type": "variable_declarator",
                  "start": {
                    "row": 9,
                    "column": 20
                  },
                  "end": {
                    "row": 9,
                    "column": 57
                  },
                  "text": "message = VoidMessage.fromBytes(data)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 9,
                        "column": 20
                      },
                      "end": {
                        "row": 9,
                        "column": 27
                      },
                      "text": "message"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 9,
                        "column": 28
                      },
                      "end": {
                        "row": 9,
                        "column": 29
                      },
                      "text": "="
                    },
                    {
                      "type": "method_invocation",
                      "start": {
                        "row": 9,
                        "column": 30
                      },
                      "end": {
                        "row": 9,
                        "column": 57
                      },
                      "text": "VoidMessage.fromBytes(data)",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 9,
                            "column": 30
                          },
                          "end": {
                            "row": 9,
                            "column": 41
                          },
                          "text": "VoidMessage"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 9,
                            "column": 41
                          },
                          "end": {
                            "row": 9,
                            "column": 42
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 9,
                            "column": 42
                          },
                          "end": {
                            "row": 9,
                            "column": 51
                          },
                          "text": "fromBytes"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 9,
                            "column": 51
                          },
                          "end": {
                            "row": 9,
                            "column": 57
                          },
                          "text": "(data)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 9,
                                "column": 51
                              },
                              "end": {
                                "row": 9,
                                "column": 52
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 9,
                                "column": 52
                              },
                              "end": {
                                "row": 9,
                                "column": 56
                              },
                              "text": "data"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 9,
                                "column": 56
                              },
                              "end": {
                                "row": 9,
                                "column": 57
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 9,
                    "column": 57
                  },
                  "end": {
                    "row": 9,
                    "column": 58
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 10,
                "column": 8
              },
              "end": {
                "row": 17,
                "column": 9
              },
              "text": "if (message.getMessageType() == 7) {\n            // if that's vector request message - it's special case, we don't send it to other shards yet\n            //log.info(\"Shortcut for vector request\");\n            messages.add(message);\n        } else {\n            // and send it away to other Shards\n            publicationForShards.offer(buffer, offset, length);\n        }",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 10,
                    "column": 8
                  },
                  "end": {
                    "row": 10,
                    "column": 10
                  },
                  "text": "if"
                },
                {
                  "type": "condition",
                  "start": {
                    "row": 10,
                    "column": 11
                  },
                  "end": {
                    "row": 10,
                    "column": 42
                  },
                  "text": "(message.getMessageType() == 7)",
                  "children": [
                    {
                      "type": "(",
                      "start": {
                        "row": 10,
                        "column": 11
                      },
                      "end": {
                        "row": 10,
                        "column": 12
                      },
                      "text": "("
                    },
                    {
                      "type": "binary_expression",
                      "start": {
                        "row": 10,
                        "column": 12
                      },
                      "end": {
                        "row": 10,
                        "column": 41
                      },
                      "text": "message.getMessageType() == 7",
                      "children": [
                        {
                          "type": "method_invocation",
                          "start": {
                            "row": 10,
                            "column": 12
                          },
                          "end": {
                            "row": 10,
                            "column": 36
                          },
                          "text": "message.getMessageType()",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 10,
                                "column": 12
                              },
                              "end": {
                                "row": 10,
                                "column": 19
                              },
                              "text": "message"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 10,
                                "column": 19
                              },
                              "end": {
                                "row": 10,
                                "column": 20
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 10,
                                "column": 20
                              },
                              "end": {
                                "row": 10,
                                "column": 34
                              },
                              "text": "getMessageType"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 10,
                                "column": 34
                              },
                              "end": {
                                "row": 10,
                                "column": 36
                              },
                              "text": "()",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 10,
                                    "column": 34
                                  },
                                  "end": {
                                    "row": 10,
                                    "column": 35
                                  },
                                  "text": "("
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 10,
                                    "column": 35
                                  },
                                  "end": {
                                    "row": 10,
                                    "column": 36
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "==",
                          "start": {
                            "row": 10,
                            "column": 37
                          },
                          "end": {
                            "row": 10,
                            "column": 39
                          },
                          "text": "=="
                        },
                        {
                          "type": "decimal_integer_literal",
                          "start": {
                            "row": 10,
                            "column": 40
                          },
                          "end": {
                            "row": 10,
                            "column": 41
                          },
                          "text": "7"
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start": {
                        "row": 10,
                        "column": 41
                      },
                      "end": {
                        "row": 10,
                        "column": 42
                      },
                      "text": ")"
                    }
                  ]
                },
                {
                  "type": "block",
                  "start": {
                    "row": 10,
                    "column": 43
                  },
                  "end": {
                    "row": 14,
                    "column": 9
                  },
                  "text": "{\n            // if that's vector request message - it's special case, we don't send it to other shards yet\n            //log.info(\"Shortcut for vector request\");\n            messages.add(message);\n        }",
                  "children": [
                    {
                      "type": "{",
                      "start": {
                        "row": 10,
                        "column": 43
                      },
                      "end": {
                        "row": 10,
                        "column": 44
                      },
                      "text": "{"
                    },
                    {
                      "type": "line_comment",
                      "start": {
                        "row": 11,
                        "column": 12
                      },
                      "end": {
                        "row": 11,
                        "column": 105
                      },
                      "text": "// if that's vector request message - it's special case, we don't send it to other shards yet"
                    },
                    {
                      "type": "line_comment",
                      "start": {
                        "row": 12,
                        "column": 12
                      },
                      "end": {
                        "row": 12,
                        "column": 54
                      },
                      "text": "//log.info(\"Shortcut for vector request\");"
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 13,
                        "column": 12
                      },
                      "end": {
                        "row": 13,
                        "column": 34
                      },
                      "text": "messages.add(message);",
                      "children": [
                        {
                          "type": "method_invocation",
                          "start": {
                            "row": 13,
                            "column": 12
                          },
                          "end": {
                            "row": 13,
                            "column": 33
                          },
                          "text": "messages.add(message)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 13,
                                "column": 12
                              },
                              "end": {
                                "row": 13,
                                "column": 20
                              },
                              "text": "messages"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 13,
                                "column": 20
                              },
                              "end": {
                                "row": 13,
                                "column": 21
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 13,
                                "column": 21
                              },
                              "end": {
                                "row": 13,
                                "column": 24
                              },
                              "text": "add"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 13,
                                "column": 24
                              },
                              "end": {
                                "row": 13,
                                "column": 33
                              },
                              "text": "(message)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 13,
                                    "column": 24
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 25
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 13,
                                    "column": 25
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 32
                                  },
                                  "text": "message"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 13,
                                    "column": 32
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 33
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start": {
                            "row": 13,
                            "column": 33
                          },
                          "end": {
                            "row": 13,
                            "column": 34
                          },
                          "text": ";"
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start": {
                        "row": 14,
                        "column": 8
                      },
                      "end": {
                        "row": 14,
                        "column": 9
                      },
                      "text": "}"
                    }
                  ]
                },
                {
                  "type": "else",
                  "start": {
                    "row": 14,
                    "column": 10
                  },
                  "end": {
                    "row": 14,
                    "column": 14
                  },
                  "text": "else"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 14,
                    "column": 15
                  },
                  "end": {
                    "row": 17,
                    "column": 9
                  },
                  "text": "{\n            // and send it away to other Shards\n            publicationForShards.offer(buffer, offset, length);\n        }",
                  "children": [
                    {
                      "type": "{",
                      "start": {
                        "row": 14,
                        "column": 15
                      },
                      "end": {
                        "row": 14,
                        "column": 16
                      },
                      "text": "{"
                    },
                    {
                      "type": "line_comment",
                      "start": {
                        "row": 15,
                        "column": 12
                      },
                      "end": {
                        "row": 15,
                        "column": 47
                      },
                      "text": "// and send it away to other Shards"
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 16,
                        "column": 12
                      },
                      "end": {
                        "row": 16,
                        "column": 63
                      },
                      "text": "publicationForShards.offer(buffer, offset, length);",
                      "children": [
                        {
                          "type": "method_invocation",
                          "start": {
                            "row": 16,
                            "column": 12
                          },
                          "end": {
                            "row": 16,
                            "column": 62
                          },
                          "text": "publicationForShards.offer(buffer, offset, length)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 16,
                                "column": 12
                              },
                              "end": {
                                "row": 16,
                                "column": 32
                              },
                              "text": "publicationForShards"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 16,
                                "column": 32
                              },
                              "end": {
                                "row": 16,
                                "column": 33
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 16,
                                "column": 33
                              },
                              "end": {
                                "row": 16,
                                "column": 38
                              },
                              "text": "offer"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 16,
                                "column": 38
                              },
                              "end": {
                                "row": 16,
                                "column": 62
                              },
                              "text": "(buffer, offset, length)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 16,
                                    "column": 38
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 39
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 16,
                                    "column": 39
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 45
                                  },
                                  "text": "buffer"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 16,
                                    "column": 45
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 46
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 16,
                                    "column": 47
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 53
                                  },
                                  "text": "offset"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 16,
                                    "column": 53
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 54
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 16,
                                    "column": 55
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 61
                                  },
                                  "text": "length"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 16,
                                    "column": 61
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 62
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start": {
                            "row": 16,
                            "column": 62
                          },
                          "end": {
                            "row": 16,
                            "column": 63
                          },
                          "text": ";"
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start": {
                        "row": 17,
                        "column": 8
                      },
                      "end": {
                        "row": 17,
                        "column": 9
                      },
                      "text": "}"
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start": {
                "row": 18,
                "column": 4
              },
              "end": {
                "row": 18,
                "column": 5
              },
              "text": "}"
            }
          ]
        }
      ]
    }
  ]
}