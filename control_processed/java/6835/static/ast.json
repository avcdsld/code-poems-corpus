{
  "type": "program",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 40,
    "column": 2
  },
  "text": "private HttpResponse init() throws HttpException {\n\t\ttry {\n\t\t\tthis.status = httpConnection.responseCode();\n\t\t\tthis.in = (this.status < HttpStatus.HTTP_BAD_REQUEST) ? httpConnection.getInputStream() : httpConnection.getErrorStream();\n\t\t} catch (IOException e) {\n\t\t\tif (e instanceof FileNotFoundException) {\n\t\t\t\t// 服务器无返回内容，忽略之\n\t\t\t} else {\n\t\t\t\tthrow new HttpException(e);\n\t\t\t}\n\t\t}\n\n\t\ttry {\n\t\t\tthis.headers = httpConnection.headers();\n\t\t} catch (IllegalArgumentException e) {\n\t\t\tStaticLog.warn(e, e.getMessage());\n\t\t}\n\t\tfinal Charset charset = httpConnection.getCharset();\n\t\tthis.charsetFromResponse = charset;\n\t\tif (null != charset) {\n\t\t\tthis.charset = charset;\n\t\t}\n\n\t\tif (null == this.in) {\n\t\t\t// 在一些情况下，返回的流为null，此时提供状态码说明\n\t\t\tthis.in = new ByteArrayInputStream(StrUtil.format(\"Error request, response status: {}\", this.status).getBytes());\n\t\t} else if (isGzip() && false == (in instanceof GZIPInputStream)) {\n\t\t\ttry {\n\t\t\t\tin = new GZIPInputStream(in);\n\t\t\t} catch (IOException e) {\n\t\t\t\t// 在类似于Head等方法中无body返回，此时GZIPInputStream构造会出现错误，在此忽略此错误读取普通数据\n\t\t\t\t// ignore\n\t\t\t}\n\t\t} else if (isDeflate() && false == (in instanceof DeflaterInputStream)) {\n\t\t\t//Accept-Encoding: defalte\n\t\t\tin = new DeflaterInputStream(in);\n\t\t}\n\n\t\t// 同步情况下强制同步\n\t\treturn this.isAsync ? this : forceSync();\n\t}",
  "children": [
    {
      "type": "method_declaration",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 40,
        "column": 2
      },
      "text": "private HttpResponse init() throws HttpException {\n\t\ttry {\n\t\t\tthis.status = httpConnection.responseCode();\n\t\t\tthis.in = (this.status < HttpStatus.HTTP_BAD_REQUEST) ? httpConnection.getInputStream() : httpConnection.getErrorStream();\n\t\t} catch (IOException e) {\n\t\t\tif (e instanceof FileNotFoundException) {\n\t\t\t\t// 服务器无返回内容，忽略之\n\t\t\t} else {\n\t\t\t\tthrow new HttpException(e);\n\t\t\t}\n\t\t}\n\n\t\ttry {\n\t\t\tthis.headers = httpConnection.headers();\n\t\t} catch (IllegalArgumentException e) {\n\t\t\tStaticLog.warn(e, e.getMessage());\n\t\t}\n\t\tfinal Charset charset = httpConnection.getCharset();\n\t\tthis.charsetFromResponse = charset;\n\t\tif (null != charset) {\n\t\t\tthis.charset = charset;\n\t\t}\n\n\t\tif (null == this.in) {\n\t\t\t// 在一些情况下，返回的流为null，此时提供状态码说明\n\t\t\tthis.in = new ByteArrayInputStream(StrUtil.format(\"Error request, response status: {}\", this.status).getBytes());\n\t\t} else if (isGzip() && false == (in instanceof GZIPInputStream)) {\n\t\t\ttry {\n\t\t\t\tin = new GZIPInputStream(in);\n\t\t\t} catch (IOException e) {\n\t\t\t\t// 在类似于Head等方法中无body返回，此时GZIPInputStream构造会出现错误，在此忽略此错误读取普通数据\n\t\t\t\t// ignore\n\t\t\t}\n\t\t} else if (isDeflate() && false == (in instanceof DeflaterInputStream)) {\n\t\t\t//Accept-Encoding: defalte\n\t\t\tin = new DeflaterInputStream(in);\n\t\t}\n\n\t\t// 同步情况下强制同步\n\t\treturn this.isAsync ? this : forceSync();\n\t}",
      "children": [
        {
          "type": "modifiers",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 7
          },
          "text": "private",
          "children": [
            {
              "type": "private",
              "start": {
                "row": 0,
                "column": 0
              },
              "end": {
                "row": 0,
                "column": 7
              },
              "text": "private"
            }
          ]
        },
        {
          "type": "type_identifier",
          "start": {
            "row": 0,
            "column": 8
          },
          "end": {
            "row": 0,
            "column": 20
          },
          "text": "HttpResponse"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 21
          },
          "end": {
            "row": 0,
            "column": 25
          },
          "text": "init"
        },
        {
          "type": "formal_parameters",
          "start": {
            "row": 0,
            "column": 25
          },
          "end": {
            "row": 0,
            "column": 27
          },
          "text": "()",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 25
              },
              "end": {
                "row": 0,
                "column": 26
              },
              "text": "("
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 26
              },
              "end": {
                "row": 0,
                "column": 27
              },
              "text": ")"
            }
          ]
        },
        {
          "type": "throws",
          "start": {
            "row": 0,
            "column": 28
          },
          "end": {
            "row": 0,
            "column": 48
          },
          "text": "throws HttpException",
          "children": [
            {
              "type": "throws",
              "start": {
                "row": 0,
                "column": 28
              },
              "end": {
                "row": 0,
                "column": 34
              },
              "text": "throws"
            },
            {
              "type": "type_identifier",
              "start": {
                "row": 0,
                "column": 35
              },
              "end": {
                "row": 0,
                "column": 48
              },
              "text": "HttpException"
            }
          ]
        },
        {
          "type": "block",
          "start": {
            "row": 0,
            "column": 49
          },
          "end": {
            "row": 40,
            "column": 2
          },
          "text": "{\n\t\ttry {\n\t\t\tthis.status = httpConnection.responseCode();\n\t\t\tthis.in = (this.status < HttpStatus.HTTP_BAD_REQUEST) ? httpConnection.getInputStream() : httpConnection.getErrorStream();\n\t\t} catch (IOException e) {\n\t\t\tif (e instanceof FileNotFoundException) {\n\t\t\t\t// 服务器无返回内容，忽略之\n\t\t\t} else {\n\t\t\t\tthrow new HttpException(e);\n\t\t\t}\n\t\t}\n\n\t\ttry {\n\t\t\tthis.headers = httpConnection.headers();\n\t\t} catch (IllegalArgumentException e) {\n\t\t\tStaticLog.warn(e, e.getMessage());\n\t\t}\n\t\tfinal Charset charset = httpConnection.getCharset();\n\t\tthis.charsetFromResponse = charset;\n\t\tif (null != charset) {\n\t\t\tthis.charset = charset;\n\t\t}\n\n\t\tif (null == this.in) {\n\t\t\t// 在一些情况下，返回的流为null，此时提供状态码说明\n\t\t\tthis.in = new ByteArrayInputStream(StrUtil.format(\"Error request, response status: {}\", this.status).getBytes());\n\t\t} else if (isGzip() && false == (in instanceof GZIPInputStream)) {\n\t\t\ttry {\n\t\t\t\tin = new GZIPInputStream(in);\n\t\t\t} catch (IOException e) {\n\t\t\t\t// 在类似于Head等方法中无body返回，此时GZIPInputStream构造会出现错误，在此忽略此错误读取普通数据\n\t\t\t\t// ignore\n\t\t\t}\n\t\t} else if (isDeflate() && false == (in instanceof DeflaterInputStream)) {\n\t\t\t//Accept-Encoding: defalte\n\t\t\tin = new DeflaterInputStream(in);\n\t\t}\n\n\t\t// 同步情况下强制同步\n\t\treturn this.isAsync ? this : forceSync();\n\t}",
          "children": [
            {
              "type": "{",
              "start": {
                "row": 0,
                "column": 49
              },
              "end": {
                "row": 0,
                "column": 50
              },
              "text": "{"
            },
            {
              "type": "try_statement",
              "start": {
                "row": 1,
                "column": 2
              },
              "end": {
                "row": 10,
                "column": 3
              },
              "text": "try {\n\t\t\tthis.status = httpConnection.responseCode();\n\t\t\tthis.in = (this.status < HttpStatus.HTTP_BAD_REQUEST) ? httpConnection.getInputStream() : httpConnection.getErrorStream();\n\t\t} catch (IOException e) {\n\t\t\tif (e instanceof FileNotFoundException) {\n\t\t\t\t// 服务器无返回内容，忽略之\n\t\t\t} else {\n\t\t\t\tthrow new HttpException(e);\n\t\t\t}\n\t\t}\n\n\t\ttry {\n\t\t\tthis.header",
              "children": [
                {
                  "type": "try",
                  "start": {
                    "row": 1,
                    "column": 2
                  },
                  "end": {
                    "row": 1,
                    "column": 5
                  },
                  "text": "try"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 1,
                    "column": 6
                  },
                  "end": {
                    "row": 4,
                    "column": 3
                  },
                  "text": "{\n\t\t\tthis.status = httpConnection.responseCode();\n\t\t\tthis.in = (this.status < HttpStatus.HTTP_BAD_REQUEST) ? httpConnection.getInputStream() : httpConnection.getErrorStream();\n\t\t}",
                  "children": [
                    {
                      "type": "{",
                      "start": {
                        "row": 1,
                        "column": 6
                      },
                      "end": {
                        "row": 1,
                        "column": 7
                      },
                      "text": "{"
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 2,
                        "column": 3
                      },
                      "end": {
                        "row": 2,
                        "column": 47
                      },
                      "text": "this.status = httpConnection.responseCode();",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start": {
                            "row": 2,
                            "column": 3
                          },
                          "end": {
                            "row": 2,
                            "column": 46
                          },
                          "text": "this.status = httpConnection.responseCode()",
                          "children": [
                            {
                              "type": "field_access",
                              "start": {
                                "row": 2,
                                "column": 3
                              },
                              "end": {
                                "row": 2,
                                "column": 14
                              },
                              "text": "this.status",
                              "children": [
                                {
                                  "type": "this",
                                  "start": {
                                    "row": 2,
                                    "column": 3
                                  },
                                  "end": {
                                    "row": 2,
                                    "column": 7
                                  },
                                  "text": "this"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 2,
                                    "column": 7
                                  },
                                  "end": {
                                    "row": 2,
                                    "column": 8
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 2,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 2,
                                    "column": 14
                                  },
                                  "text": "status"
                                }
                              ]
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 2,
                                "column": 15
                              },
                              "end": {
                                "row": 2,
                                "column": 16
                              },
                              "text": "="
                            },
                            {
                              "type": "method_invocation",
                              "start": {
                                "row": 2,
                                "column": 17
                              },
                              "end": {
                                "row": 2,
                                "column": 46
                              },
                              "text": "httpConnection.responseCode()",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 2,
                                    "column": 17
                                  },
                                  "end": {
                                    "row": 2,
                                    "column": 31
                                  },
                                  "text": "httpConnection"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 2,
                                    "column": 31
                                  },
                                  "end": {
                                    "row": 2,
                                    "column": 32
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 2,
                                    "column": 32
                                  },
                                  "end": {
                                    "row": 2,
                                    "column": 44
                                  },
                                  "text": "responseCode"
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 2,
                                    "column": 44
                                  },
                                  "end": {
                                    "row": 2,
                                    "column": 46
                                  },
                                  "text": "()",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 2,
                                        "column": 44
                                      },
                                      "end": {
                                        "row": 2,
                                        "column": 45
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 2,
                                        "column": 45
                                      },
                                      "end": {
                                        "row": 2,
                                        "column": 46
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start": {
                            "row": 2,
                            "column": 46
                          },
                          "end": {
                            "row": 2,
                            "column": 47
                          },
                          "text": ";"
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 3,
                        "column": 3
                      },
                      "end": {
                        "row": 3,
                        "column": 125
                      },
                      "text": "this.in = (this.status < HttpStatus.HTTP_BAD_REQUEST) ? httpConnection.getInputStream() : httpConnection.getErrorStream();",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start": {
                            "row": 3,
                            "column": 3
                          },
                          "end": {
                            "row": 3,
                            "column": 124
                          },
                          "text": "this.in = (this.status < HttpStatus.HTTP_BAD_REQUEST) ? httpConnection.getInputStream() : httpConnection.getErrorStream()",
                          "children": [
                            {
                              "type": "field_access",
                              "start": {
                                "row": 3,
                                "column": 3
                              },
                              "end": {
                                "row": 3,
                                "column": 10
                              },
                              "text": "this.in",
                              "children": [
                                {
                                  "type": "this",
                                  "start": {
                                    "row": 3,
                                    "column": 3
                                  },
                                  "end": {
                                    "row": 3,
                                    "column": 7
                                  },
                                  "text": "this"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 3,
                                    "column": 7
                                  },
                                  "end": {
                                    "row": 3,
                                    "column": 8
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 3,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 3,
                                    "column": 10
                                  },
                                  "text": "in"
                                }
                              ]
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 3,
                                "column": 11
                              },
                              "end": {
                                "row": 3,
                                "column": 12
                              },
                              "text": "="
                            },
                            {
                              "type": "ternary_expression",
                              "start": {
                                "row": 3,
                                "column": 13
                              },
                              "end": {
                                "row": 3,
                                "column": 124
                              },
                              "text": "(this.status < HttpStatus.HTTP_BAD_REQUEST) ? httpConnection.getInputStream() : httpConnection.getErrorStream()",
                              "children": [
                                {
                                  "type": "parenthesized_expression",
                                  "start": {
                                    "row": 3,
                                    "column": 13
                                  },
                                  "end": {
                                    "row": 3,
                                    "column": 56
                                  },
                                  "text": "(this.status < HttpStatus.HTTP_BAD_REQUEST)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 3,
                                        "column": 13
                                      },
                                      "end": {
                                        "row": 3,
                                        "column": 14
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start": {
                                        "row": 3,
                                        "column": 14
                                      },
                                      "end": {
                                        "row": 3,
                                        "column": 55
                                      },
                                      "text": "this.status < HttpStatus.HTTP_BAD_REQUEST",
                                      "children": [
                                        {
                                          "type": "field_access",
                                          "start": {
                                            "row": 3,
                                            "column": 14
                                          },
                                          "end": {
                                            "row": 3,
                                            "column": 25
                                          },
                                          "text": "this.status",
                                          "children": [
                                            {
                                              "type": "this",
                                              "start": {
                                                "row": 3,
                                                "column": 14
                                              },
                                              "end": {
                                                "row": 3,
                                                "column": 18
                                              },
                                              "text": "this"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 3,
                                                "column": 18
                                              },
                                              "end": {
                                                "row": 3,
                                                "column": 19
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 3,
                                                "column": 19
                                              },
                                              "end": {
                                                "row": 3,
                                                "column": 25
                                              },
                                              "text": "status"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "<",
                                          "start": {
                                            "row": 3,
                                            "column": 26
                                          },
                                          "end": {
                                            "row": 3,
                                            "column": 27
                                          },
                                          "text": "<"
                                        },
                                        {
                                          "type": "field_access",
                                          "start": {
                                            "row": 3,
                                            "column": 28
                                          },
                                          "end": {
                                            "row": 3,
                                            "column": 55
                                          },
                                          "text": "HttpStatus.HTTP_BAD_REQUEST",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 3,
                                                "column": 28
                                              },
                                              "end": {
                                                "row": 3,
                                                "column": 38
                                              },
                                              "text": "HttpStatus"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 3,
                                                "column": 38
                                              },
                                              "end": {
                                                "row": 3,
                                                "column": 39
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 3,
                                                "column": 39
                                              },
                                              "end": {
                                                "row": 3,
                                                "column": 55
                                              },
                                              "text": "HTTP_BAD_REQUEST"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 3,
                                        "column": 55
                                      },
                                      "end": {
                                        "row": 3,
                                        "column": 56
                                      },
                                      "text": ")"
                                    }
                                  ]
                                },
                                {
                                  "type": "?",
                                  "start": {
                                    "row": 3,
                                    "column": 57
                                  },
                                  "end": {
                                    "row": 3,
                                    "column": 58
                                  },
                                  "text": "?"
                                },
                                {
                                  "type": "method_invocation",
                                  "start": {
                                    "row": 3,
                                    "column": 59
                                  },
                                  "end": {
                                    "row": 3,
                                    "column": 90
                                  },
                                  "text": "httpConnection.getInputStream()",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 3,
                                        "column": 59
                                      },
                                      "end": {
                                        "row": 3,
                                        "column": 73
                                      },
                                      "text": "httpConnection"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 3,
                                        "column": 73
                                      },
                                      "end": {
                                        "row": 3,
                                        "column": 74
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 3,
                                        "column": 74
                                      },
                                      "end": {
                                        "row": 3,
                                        "column": 88
                                      },
                                      "text": "getInputStream"
                                    },
                                    {
                                      "type": "argument_list",
                                      "start": {
                                        "row": 3,
                                        "column": 88
                                      },
                                      "end": {
                                        "row": 3,
                                        "column": 90
                                      },
                                      "text": "()",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 3,
                                            "column": 88
                                          },
                                          "end": {
                                            "row": 3,
                                            "column": 89
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 3,
                                            "column": 89
                                          },
                                          "end": {
                                            "row": 3,
                                            "column": 90
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ":",
                                  "start": {
                                    "row": 3,
                                    "column": 91
                                  },
                                  "end": {
                                    "row": 3,
                                    "column": 92
                                  },
                                  "text": ":"
                                },
                                {
                                  "type": "method_invocation",
                                  "start": {
                                    "row": 3,
                                    "column": 93
                                  },
                                  "end": {
                                    "row": 3,
                                    "column": 124
                                  },
                                  "text": "httpConnection.getErrorStream()",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 3,
                                        "column": 93
                                      },
                                      "end": {
                                        "row": 3,
                                        "column": 107
                                      },
                                      "text": "httpConnection"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 3,
                                        "column": 107
                                      },
                                      "end": {
                                        "row": 3,
                                        "column": 108
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 3,
                                        "column": 108
                                      },
                                      "end": {
                                        "row": 3,
                                        "column": 122
                                      },
                                      "text": "getErrorStream"
                                    },
                                    {
                                      "type": "argument_list",
                                      "start": {
                                        "row": 3,
                                        "column": 122
                                      },
                                      "end": {
                                        "row": 3,
                                        "column": 124
                                      },
                                      "text": "()",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 3,
                                            "column": 122
                                          },
                                          "end": {
                                            "row": 3,
                                            "column": 123
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 3,
                                            "column": 123
                                          },
                                          "end": {
                                            "row": 3,
                                            "column": 124
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start": {
                            "row": 3,
                            "column": 124
                          },
                          "end": {
                            "row": 3,
                            "column": 125
                          },
                          "text": ";"
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start": {
                        "row": 4,
                        "column": 2
                      },
                      "end": {
                        "row": 4,
                        "column": 3
                      },
                      "text": "}"
                    }
                  ]
                },
                {
                  "type": "catch_clause",
                  "start": {
                    "row": 4,
                    "column": 4
                  },
                  "end": {
                    "row": 10,
                    "column": 3
                  },
                  "text": "catch (IOException e) {\n\t\t\tif (e instanceof FileNotFoundException) {\n\t\t\t\t// 服务器无返回内容，忽略之\n\t\t\t} else {\n\t\t\t\tthrow new HttpException(e);\n\t\t\t}\n\t\t}\n\n\t\ttry {\n\t\t\tthis.header",
                  "children": [
                    {
                      "type": "catch",
                      "start": {
                        "row": 4,
                        "column": 4
                      },
                      "end": {
                        "row": 4,
                        "column": 9
                      },
                      "text": "catch"
                    },
                    {
                      "type": "(",
                      "start": {
                        "row": 4,
                        "column": 10
                      },
                      "end": {
                        "row": 4,
                        "column": 11
                      },
                      "text": "("
                    },
                    {
                      "type": "catch_formal_parameter",
                      "start": {
                        "row": 4,
                        "column": 11
                      },
                      "end": {
                        "row": 4,
                        "column": 24
                      },
                      "text": "IOException e",
                      "children": [
                        {
                          "type": "catch_type",
                          "start": {
                            "row": 4,
                            "column": 11
                          },
                          "end": {
                            "row": 4,
                            "column": 22
                          },
                          "text": "IOException",
                          "children": [
                            {
                              "type": "type_identifier",
                              "start": {
                                "row": 4,
                                "column": 11
                              },
                              "end": {
                                "row": 4,
                                "column": 22
                              },
                              "text": "IOException"
                            }
                          ]
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 4,
                            "column": 23
                          },
                          "end": {
                            "row": 4,
                            "column": 24
                          },
                          "text": "e"
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start": {
                        "row": 4,
                        "column": 24
                      },
                      "end": {
                        "row": 4,
                        "column": 25
                      },
                      "text": ")"
                    },
                    {
                      "type": "block",
                      "start": {
                        "row": 4,
                        "column": 26
                      },
                      "end": {
                        "row": 10,
                        "column": 3
                      },
                      "text": "{\n\t\t\tif (e instanceof FileNotFoundException) {\n\t\t\t\t// 服务器无返回内容，忽略之\n\t\t\t} else {\n\t\t\t\tthrow new HttpException(e);\n\t\t\t}\n\t\t}\n\n\t\ttry {\n\t\t\tthis.header",
                      "children": [
                        {
                          "type": "{",
                          "start": {
                            "row": 4,
                            "column": 26
                          },
                          "end": {
                            "row": 4,
                            "column": 27
                          },
                          "text": "{"
                        },
                        {
                          "type": "if_statement",
                          "start": {
                            "row": 5,
                            "column": 3
                          },
                          "end": {
                            "row": 9,
                            "column": 4
                          },
                          "text": "if (e instanceof FileNotFoundException) {\n\t\t\t\t// 服务器无返回内容，忽略之\n\t\t\t} else {\n\t\t\t\tthrow new HttpException(e);\n\t\t\t}\n\t\t}\n\n\t\ttry {\n\t\t\tthis.he",
                          "children": [
                            {
                              "type": "if",
                              "start": {
                                "row": 5,
                                "column": 3
                              },
                              "end": {
                                "row": 5,
                                "column": 5
                              },
                              "text": "if"
                            },
                            {
                              "type": "condition",
                              "start": {
                                "row": 5,
                                "column": 6
                              },
                              "end": {
                                "row": 5,
                                "column": 42
                              },
                              "text": "(e instanceof FileNotFoundException)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 5,
                                    "column": 6
                                  },
                                  "end": {
                                    "row": 5,
                                    "column": 7
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "instanceof_expression",
                                  "start": {
                                    "row": 5,
                                    "column": 7
                                  },
                                  "end": {
                                    "row": 5,
                                    "column": 41
                                  },
                                  "text": "e instanceof FileNotFoundException",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 5,
                                        "column": 7
                                      },
                                      "end": {
                                        "row": 5,
                                        "column": 8
                                      },
                                      "text": "e"
                                    },
                                    {
                                      "type": "instanceof",
                                      "start": {
                                        "row": 5,
                                        "column": 9
                                      },
                                      "end": {
                                        "row": 5,
                                        "column": 19
                                      },
                                      "text": "instanceof"
                                    },
                                    {
                                      "type": "type_identifier",
                                      "start": {
                                        "row": 5,
                                        "column": 20
                                      },
                                      "end": {
                                        "row": 5,
                                        "column": 41
                                      },
                                      "text": "FileNotFoundException"
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 5,
                                    "column": 41
                                  },
                                  "end": {
                                    "row": 5,
                                    "column": 42
                                  },
                                  "text": ")"
                                }
                              ]
                            },
                            {
                              "type": "block",
                              "start": {
                                "row": 5,
                                "column": 43
                              },
                              "end": {
                                "row": 7,
                                "column": 4
                              },
                              "text": "{\n\t\t\t\t// 服务器无返回内容，忽略之\n\t\t\t} else {\n\t\t\t\tthrow new Ht",
                              "children": [
                                {
                                  "type": "{",
                                  "start": {
                                    "row": 5,
                                    "column": 43
                                  },
                                  "end": {
                                    "row": 5,
                                    "column": 44
                                  },
                                  "text": "{"
                                },
                                {
                                  "type": "line_comment",
                                  "start": {
                                    "row": 6,
                                    "column": 4
                                  },
                                  "end": {
                                    "row": 6,
                                    "column": 43
                                  },
                                  "text": "// 服务器无返回内容，忽略之\n\t\t\t} else {\n\t\t\t\tthrow n"
                                },
                                {
                                  "type": "}",
                                  "start": {
                                    "row": 7,
                                    "column": 3
                                  },
                                  "end": {
                                    "row": 7,
                                    "column": 4
                                  },
                                  "text": "t"
                                }
                              ]
                            },
                            {
                              "type": "else",
                              "start": {
                                "row": 7,
                                "column": 5
                              },
                              "end": {
                                "row": 7,
                                "column": 9
                              },
                              "text": "pExc"
                            },
                            {
                              "type": "block",
                              "start": {
                                "row": 7,
                                "column": 10
                              },
                              "end": {
                                "row": 9,
                                "column": 4
                              },
                              "text": "ption(e);\n\t\t\t}\n\t\t}\n\n\t\ttry {\n\t\t\tthis.he",
                              "children": [
                                {
                                  "type": "{",
                                  "start": {
                                    "row": 7,
                                    "column": 10
                                  },
                                  "end": {
                                    "row": 7,
                                    "column": 11
                                  },
                                  "text": "p"
                                },
                                {
                                  "type": "throw_statement",
                                  "start": {
                                    "row": 8,
                                    "column": 4
                                  },
                                  "end": {
                                    "row": 8,
                                    "column": 31
                                  },
                                  "text": "e);\n\t\t\t}\n\t\t}\n\n\t\ttry {\n\t\t\tth",
                                  "children": [
                                    {
                                      "type": "throw",
                                      "start": {
                                        "row": 8,
                                        "column": 4
                                      },
                                      "end": {
                                        "row": 8,
                                        "column": 9
                                      },
                                      "text": "e);\n\t"
                                    },
                                    {
                                      "type": "object_creation_expression",
                                      "start": {
                                        "row": 8,
                                        "column": 10
                                      },
                                      "end": {
                                        "row": 8,
                                        "column": 30
                                      },
                                      "text": "\t}\n\t\t}\n\n\t\ttry {\n\t\t\tt",
                                      "children": [
                                        {
                                          "type": "new",
                                          "start": {
                                            "row": 8,
                                            "column": 10
                                          },
                                          "end": {
                                            "row": 8,
                                            "column": 13
                                          },
                                          "text": "\t}\n"
                                        },
                                        {
                                          "type": "type_identifier",
                                          "start": {
                                            "row": 8,
                                            "column": 14
                                          },
                                          "end": {
                                            "row": 8,
                                            "column": 27
                                          },
                                          "text": "\t}\n\n\t\ttry {\n\t"
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 8,
                                            "column": 27
                                          },
                                          "end": {
                                            "row": 8,
                                            "column": 30
                                          },
                                          "text": "\t\tt",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 8,
                                                "column": 27
                                              },
                                              "end": {
                                                "row": 8,
                                                "column": 28
                                              },
                                              "text": "\t"
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 8,
                                                "column": 28
                                              },
                                              "end": {
                                                "row": 8,
                                                "column": 29
                                              },
                                              "text": "\t"
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 8,
                                                "column": 29
                                              },
                                              "end": {
                                                "row": 8,
                                                "column": 30
                                              },
                                              "text": "t"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start": {
                                        "row": 8,
                                        "column": 30
                                      },
                                      "end": {
                                        "row": 8,
                                        "column": 31
                                      },
                                      "text": "h"
                                    }
                                  ]
                                },
                                {
                                  "type": "}",
                                  "start": {
                                    "row": 9,
                                    "column": 3
                                  },
                                  "end": {
                                    "row": 9,
                                    "column": 4
                                  },
                                  "text": "e"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "}",
                          "start": {
                            "row": 10,
                            "column": 2
                          },
                          "end": {
                            "row": 10,
                            "column": 3
                          },
                          "text": "r"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "try_statement",
              "start": {
                "row": 12,
                "column": 2
              },
              "end": {
                "row": 16,
                "column": 3
              },
              "text": "httpConnection.headers();\n\t\t} catch (IllegalArgumentException e) {\n\t\t\tStaticLog.warn(e, e.getMessage());\n\t\t}\n\t\tfinal Charset charset",
              "children": [
                {
                  "type": "try",
                  "start": {
                    "row": 12,
                    "column": 2
                  },
                  "end": {
                    "row": 12,
                    "column": 5
                  },
                  "text": "htt"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 12,
                    "column": 6
                  },
                  "end": {
                    "row": 14,
                    "column": 3
                  },
                  "text": "Connection.headers();\n\t\t} catch (IllegalArgumentE",
                  "children": [
                    {
                      "type": "{",
                      "start": {
                        "row": 12,
                        "column": 6
                      },
                      "end": {
                        "row": 12,
                        "column": 7
                      },
                      "text": "C"
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 13,
                        "column": 3
                      },
                      "end": {
                        "row": 13,
                        "column": 43
                      },
                      "text": "ction.headers();\n\t\t} catch (IllegalArgum",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start": {
                            "row": 13,
                            "column": 3
                          },
                          "end": {
                            "row": 13,
                            "column": 42
                          },
                          "text": "ction.headers();\n\t\t} catch (IllegalArgu",
                          "children": [
                            {
                              "type": "field_access",
                              "start": {
                                "row": 13,
                                "column": 3
                              },
                              "end": {
                                "row": 13,
                                "column": 15
                              },
                              "text": "ction.header",
                              "children": [
                                {
                                  "type": "this",
                                  "start": {
                                    "row": 13,
                                    "column": 3
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 7
                                  },
                                  "text": "ctio"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 13,
                                    "column": 7
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 8
                                  },
                                  "text": "n"
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 13,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 15
                                  },
                                  "text": ".header"
                                }
                              ]
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 13,
                                "column": 16
                              },
                              "end": {
                                "row": 13,
                                "column": 17
                              },
                              "text": "("
                            },
                            {
                              "type": "method_invocation",
                              "start": {
                                "row": 13,
                                "column": 18
                              },
                              "end": {
                                "row": 13,
                                "column": 42
                              },
                              "text": ";\n\t\t} catch (IllegalArgu",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 13,
                                    "column": 18
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 32
                                  },
                                  "text": ";\n\t\t} catch (I"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 13,
                                    "column": 32
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 33
                                  },
                                  "text": "l"
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 13,
                                    "column": 33
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 40
                                  },
                                  "text": "legalAr"
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 13,
                                    "column": 40
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 42
                                  },
                                  "text": "gu",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 13,
                                        "column": 40
                                      },
                                      "end": {
                                        "row": 13,
                                        "column": 41
                                      },
                                      "text": "g"
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 13,
                                        "column": 41
                                      },
                                      "end": {
                                        "row": 13,
                                        "column": 42
                                      },
                                      "text": "u"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start": {
                            "row": 13,
                            "column": 42
                          },
                          "end": {
                            "row": 13,
                            "column": 43
                          },
                          "text": "m"
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start": {
                        "row": 14,
                        "column": 2
                      },
                      "end": {
                        "row": 14,
                        "column": 3
                      },
                      "text": "E"
                    }
                  ]
                },
                {
                  "type": "catch_clause",
                  "start": {
                    "row": 14,
                    "column": 4
                  },
                  "end": {
                    "row": 16,
                    "column": 3
                  },
                  "text": "ception e) {\n\t\t\tStaticLog.warn(e, e.getMessage());\n\t\t}\n\t\tfinal Charset charset",
                  "children": [
                    {
                      "type": "catch",
                      "start": {
                        "row": 14,
                        "column": 4
                      },
                      "end": {
                        "row": 14,
                        "column": 9
                      },
                      "text": "cepti"
                    },
                    {
                      "type": "(",
                      "start": {
                        "row": 14,
                        "column": 10
                      },
                      "end": {
                        "row": 14,
                        "column": 11
                      },
                      "text": "n"
                    },
                    {
                      "type": "catch_formal_parameter",
                      "start": {
                        "row": 14,
                        "column": 11
                      },
                      "end": {
                        "row": 14,
                        "column": 37
                      },
                      "text": " e) {\n\t\t\tStaticLog.warn(e,",
                      "children": [
                        {
                          "type": "catch_type",
                          "start": {
                            "row": 14,
                            "column": 11
                          },
                          "end": {
                            "row": 14,
                            "column": 35
                          },
                          "text": " e) {\n\t\t\tStaticLog.warn(",
                          "children": [
                            {
                              "type": "type_identifier",
                              "start": {
                                "row": 14,
                                "column": 11
                              },
                              "end": {
                                "row": 14,
                                "column": 35
                              },
                              "text": " e) {\n\t\t\tStaticLog.warn("
                            }
                          ]
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 14,
                            "column": 36
                          },
                          "end": {
                            "row": 14,
                            "column": 37
                          },
                          "text": ","
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start": {
                        "row": 14,
                        "column": 37
                      },
                      "end": {
                        "row": 14,
                        "column": 38
                      },
                      "text": " "
                    },
                    {
                      "type": "block",
                      "start": {
                        "row": 14,
                        "column": 39
                      },
                      "end": {
                        "row": 16,
                        "column": 3
                      },
                      "text": ".getMessage());\n\t\t}\n\t\tfinal Charset charset",
                      "children": [
                        {
                          "type": "{",
                          "start": {
                            "row": 14,
                            "column": 39
                          },
                          "end": {
                            "row": 14,
                            "column": 40
                          },
                          "text": "."
                        },
                        {
                          "type": "expression_statement",
                          "start": {
                            "row": 15,
                            "column": 3
                          },
                          "end": {
                            "row": 15,
                            "column": 37
                          },
                          "text": "essage());\n\t\t}\n\t\tfinal Charset cha",
                          "children": [
                            {
                              "type": "method_invocation",
                              "start": {
                                "row": 15,
                                "column": 3
                              },
                              "end": {
                                "row": 15,
                                "column": 36
                              },
                              "text": "essage());\n\t\t}\n\t\tfinal Charset ch",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 15,
                                    "column": 3
                                  },
                                  "end": {
                                    "row": 15,
                                    "column": 12
                                  },
                                  "text": "essage())"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 15,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 15,
                                    "column": 13
                                  },
                                  "text": ";"
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 15,
                                    "column": 13
                                  },
                                  "end": {
                                    "row": 15,
                                    "column": 17
                                  },
                                  "text": "\n\t\t}"
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 15,
                                    "column": 17
                                  },
                                  "end": {
                                    "row": 15,
                                    "column": 36
                                  },
                                  "text": "\n\t\tfinal Charset ch",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 15,
                                        "column": 17
                                      },
                                      "end": {
                                        "row": 15,
                                        "column": 18
                                      },
                                      "text": "\n"
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 15,
                                        "column": 18
                                      },
                                      "end": {
                                        "row": 15,
                                        "column": 19
                                      },
                                      "text": "\t"
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 15,
                                        "column": 19
                                      },
                                      "end": {
                                        "row": 15,
                                        "column": 20
                                      },
                                      "text": "\t"
                                    },
                                    {
                                      "type": "method_invocation",
                                      "start": {
                                        "row": 15,
                                        "column": 21
                                      },
                                      "end": {
                                        "row": 15,
                                        "column": 35
                                      },
                                      "text": "inal Charset c",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 15,
                                            "column": 21
                                          },
                                          "end": {
                                            "row": 15,
                                            "column": 22
                                          },
                                          "text": "i"
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 15,
                                            "column": 22
                                          },
                                          "end": {
                                            "row": 15,
                                            "column": 23
                                          },
                                          "text": "n"
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 15,
                                            "column": 23
                                          },
                                          "end": {
                                            "row": 15,
                                            "column": 33
                                          },
                                          "text": "al Charset"
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 15,
                                            "column": 33
                                          },
                                          "end": {
                                            "row": 15,
                                            "column": 35
                                          },
                                          "text": " c",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 15,
                                                "column": 33
                                              },
                                              "end": {
                                                "row": 15,
                                                "column": 34
                                              },
                                              "text": " "
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 15,
                                                "column": 34
                                              },
                                              "end": {
                                                "row": 15,
                                                "column": 35
                                              },
                                              "text": "c"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 15,
                                        "column": 35
                                      },
                                      "end": {
                                        "row": 15,
                                        "column": 36
                                      },
                                      "text": "h"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start": {
                                "row": 15,
                                "column": 36
                              },
                              "end": {
                                "row": 15,
                                "column": 37
                              },
                              "text": "a"
                            }
                          ]
                        },
                        {
                          "type": "}",
                          "start": {
                            "row": 16,
                            "column": 2
                          },
                          "end": {
                            "row": 16,
                            "column": 3
                          },
                          "text": "t"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "local_variable_declaration",
              "start": {
                "row": 17,
                "column": 2
              },
              "end": {
                "row": 17,
                "column": 54
              },
              "text": "httpConnection.getCharset();\n\t\tthis.charsetFromRespo",
              "children": [
                {
                  "type": "modifiers",
                  "start": {
                    "row": 17,
                    "column": 2
                  },
                  "end": {
                    "row": 17,
                    "column": 7
                  },
                  "text": "httpC",
                  "children": [
                    {
                      "type": "final",
                      "start": {
                        "row": 17,
                        "column": 2
                      },
                      "end": {
                        "row": 17,
                        "column": 7
                      },
                      "text": "httpC"
                    }
                  ]
                },
                {
                  "type": "type_identifier",
                  "start": {
                    "row": 17,
                    "column": 8
                  },
                  "end": {
                    "row": 17,
                    "column": 15
                  },
                  "text": "nnectio"
                },
                {
                  "type": "variable_declarator",
                  "start": {
                    "row": 17,
                    "column": 16
                  },
                  "end": {
                    "row": 17,
                    "column": 53
                  },
                  "text": ".getCharset();\n\t\tthis.charsetFromResp",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 17,
                        "column": 16
                      },
                      "end": {
                        "row": 17,
                        "column": 23
                      },
                      "text": ".getCha"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 17,
                        "column": 24
                      },
                      "end": {
                        "row": 17,
                        "column": 25
                      },
                      "text": "s"
                    },
                    {
                      "type": "method_invocation",
                      "start": {
                        "row": 17,
                        "column": 26
                      },
                      "end": {
                        "row": 17,
                        "column": 53
                      },
                      "text": "t();\n\t\tthis.charsetFromResp",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 17,
                            "column": 26
                          },
                          "end": {
                            "row": 17,
                            "column": 40
                          },
                          "text": "t();\n\t\tthis.ch"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 17,
                            "column": 40
                          },
                          "end": {
                            "row": 17,
                            "column": 41
                          },
                          "text": "a"
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 17,
                            "column": 41
                          },
                          "end": {
                            "row": 17,
                            "column": 51
                          },
                          "text": "rsetFromRe"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 17,
                            "column": 51
                          },
                          "end": {
                            "row": 17,
                            "column": 53
                          },
                          "text": "sp",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 17,
                                "column": 51
                              },
                              "end": {
                                "row": 17,
                                "column": 52
                              },
                              "text": "s"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 17,
                                "column": 52
                              },
                              "end": {
                                "row": 17,
                                "column": 53
                              },
                              "text": "p"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 17,
                    "column": 53
                  },
                  "end": {
                    "row": 17,
                    "column": 54
                  },
                  "text": "o"
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 18,
                "column": 2
              },
              "end": {
                "row": 18,
                "column": 37
              },
              "text": " = charset;\n\t\tif (null != charset) ",
              "children": [
                {
                  "type": "assignment_expression",
                  "start": {
                    "row": 18,
                    "column": 2
                  },
                  "end": {
                    "row": 18,
                    "column": 36
                  },
                  "text": " = charset;\n\t\tif (null != charset)",
                  "children": [
                    {
                      "type": "field_access",
                      "start": {
                        "row": 18,
                        "column": 2
                      },
                      "end": {
                        "row": 18,
                        "column": 26
                      },
                      "text": " = charset;\n\t\tif (null !",
                      "children": [
                        {
                          "type": "this",
                          "start": {
                            "row": 18,
                            "column": 2
                          },
                          "end": {
                            "row": 18,
                            "column": 6
                          },
                          "text": " = c"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 18,
                            "column": 6
                          },
                          "end": {
                            "row": 18,
                            "column": 7
                          },
                          "text": "h"
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 18,
                            "column": 7
                          },
                          "end": {
                            "row": 18,
                            "column": 26
                          },
                          "text": "arset;\n\t\tif (null !"
                        }
                      ]
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 18,
                        "column": 27
                      },
                      "end": {
                        "row": 18,
                        "column": 28
                      },
                      "text": " "
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 18,
                        "column": 29
                      },
                      "end": {
                        "row": 18,
                        "column": 36
                      },
                      "text": "harset)"
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 18,
                    "column": 36
                  },
                  "end": {
                    "row": 18,
                    "column": 37
                  },
                  "text": " "
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 19,
                "column": 2
              },
              "end": {
                "row": 21,
                "column": 3
              },
              "text": "\t\tthis.charset = charset;\n\t\t}\n\n\t\tif (null == this.in)",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 19,
                    "column": 2
                  },
                  "end": {
                    "row": 19,
                    "column": 4
                  },
                  "text": "\t\t"
                },
                {
                  "type": "condition",
                  "start": {
                    "row": 19,
                    "column": 5
                  },
                  "end": {
                    "row": 19,
                    "column": 22
                  },
                  "text": "his.charset = cha",
                  "children": [
                    {
                      "type": "(",
                      "start": {
                        "row": 19,
                        "column": 5
                      },
                      "end": {
                        "row": 19,
                        "column": 6
                      },
                      "text": "h"
                    },
                    {
                      "type": "binary_expression",
                      "start": {
                        "row": 19,
                        "column": 6
                      },
                      "end": {
                        "row": 19,
                        "column": 21
                      },
                      "text": "is.charset = ch",
                      "children": [
                        {
                          "type": "null_literal",
                          "start": {
                            "row": 19,
                            "column": 6
                          },
                          "end": {
                            "row": 19,
                            "column": 10
                          },
                          "text": "is.c"
                        },
                        {
                          "type": "!=",
                          "start": {
                            "row": 19,
                            "column": 11
                          },
                          "end": {
                            "row": 19,
                            "column": 13
                          },
                          "text": "ar"
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 19,
                            "column": 14
                          },
                          "end": {
                            "row": 19,
                            "column": 21
                          },
                          "text": "et = ch"
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start": {
                        "row": 19,
                        "column": 21
                      },
                      "end": {
                        "row": 19,
                        "column": 22
                      },
                      "text": "a"
                    }
                  ]
                },
                {
                  "type": "block",
                  "start": {
                    "row": 19,
                    "column": 23
                  },
                  "end": {
                    "row": 21,
                    "column": 3
                  },
                  "text": "set;\n\t\t}\n\n\t\tif (null == this.in)",
                  "children": [
                    {
                      "type": "{",
                      "start": {
                        "row": 19,
                        "column": 23
                      },
                      "end": {
                        "row": 19,
                        "column": 24
                      },
                      "text": "s"
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 20,
                        "column": 3
                      },
                      "end": {
                        "row": 20,
                        "column": 26
                      },
                      "text": "\t\t}\n\n\t\tif (null == this",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start": {
                            "row": 20,
                            "column": 3
                          },
                          "end": {
                            "row": 20,
                            "column": 25
                          },
                          "text": "\t\t}\n\n\t\tif (null == thi",
                          "children": [
                            {
                              "type": "field_access",
                              "start": {
                                "row": 20,
                                "column": 3
                              },
                              "end": {
                                "row": 20,
                                "column": 15
                              },
                              "text": "\t\t}\n\n\t\tif (n",
                              "children": [
                                {
                                  "type": "this",
                                  "start": {
                                    "row": 20,
                                    "column": 3
                                  },
                                  "end": {
                                    "row": 20,
                                    "column": 7
                                  },
                                  "text": "\t\t}\n"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 20,
                                    "column": 7
                                  },
                                  "end": {
                                    "row": 20,
                                    "column": 8
                                  },
                                  "text": "\n"
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 20,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 20,
                                    "column": 15
                                  },
                                  "text": "\t\tif (n"
                                }
                              ]
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 20,
                                "column": 16
                              },
                              "end": {
                                "row": 20,
                                "column": 17
                              },
                              "text": "l"
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 20,
                                "column": 18
                              },
                              "end": {
                                "row": 20,
                                "column": 25
                              },
                              "text": " == thi"
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start": {
                            "row": 20,
                            "column": 25
                          },
                          "end": {
                            "row": 20,
                            "column": 26
                          },
                          "text": "s"
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start": {
                        "row": 21,
                        "column": 2
                      },
                      "end": {
                        "row": 21,
                        "column": 3
                      },
                      "text": ")"
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 23,
                "column": 2
              },
              "end": {
                "row": 36,
                "column": 3
              },
              "text": "\t\t// 在一些情况下，返回的流为null，此时提供状态码说明\n\t\t\tthis.in = new ByteArrayInputStream(StrUtil.format(\"Error request, response status: {}\", this.status).getBytes());\n\t\t} else if (isGzip() && false == (in instanceof GZIPInputStream)) {\n\t\t\ttry {\n\t\t\t\tin = new GZIPInputStream(in);\n\t\t\t} catch (IOException e) {\n\t\t\t\t// 在类似于Head等方法中无body返回，此时GZIPInputStream构造会出现错误，在此忽略此错误读取普通数据\n\t\t\t\t// ignore\n\t\t\t}\n\t\t} else if (isDeflate() && false == (in instanceof DeflaterInputStream)) {\n\t\t\t//Accept-Encoding: defalte\n\t\t\tin = new DeflaterInputStream(in);\n\t\t}\n\n\t\t// 同步情况下强制同步\n\t\treturn this.isAsync ? this : forceSync();\n\t}",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 23,
                    "column": 2
                  },
                  "end": {
                    "row": 23,
                    "column": 4
                  },
                  "text": "\t\t"
                },
                {
                  "type": "condition",
                  "start": {
                    "row": 23,
                    "column": 5
                  },
                  "end": {
                    "row": 23,
                    "column": 22
                  },
                  "text": "/ 在一些情况下，返回的流为nul",
                  "children": [
                    {
                      "type": "(",
                      "start": {
                        "row": 23,
                        "column": 5
                      },
                      "end": {
                        "row": 23,
                        "column": 6
                      },
                      "text": "/"
                    },
                    {
                      "type": "binary_expression",
                      "start": {
                        "row": 23,
                        "column": 6
                      },
                      "end": {
                        "row": 23,
                        "column": 21
                      },
                      "text": " 在一些情况下，返回的流为nu",
                      "children": [
                        {
                          "type": "null_literal",
                          "start": {
                            "row": 23,
                            "column": 6
                          },
                          "end": {
                            "row": 23,
                            "column": 10
                          },
                          "text": " 在一些"
                        },
                        {
                          "type": "==",
                          "start": {
                            "row": 23,
                            "column": 11
                          },
                          "end": {
                            "row": 23,
                            "column": 13
                          },
                          "text": "况下"
                        },
                        {
                          "type": "field_access",
                          "start": {
                            "row": 23,
                            "column": 14
                          },
                          "end": {
                            "row": 23,
                            "column": 21
                          },
                          "text": "返回的流为nu",
                          "children": [
                            {
                              "type": "this",
                              "start": {
                                "row": 23,
                                "column": 14
                              },
                              "end": {
                                "row": 23,
                                "column": 18
                              },
                              "text": "返回的流"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 23,
                                "column": 18
                              },
                              "end": {
                                "row": 23,
                                "column": 19
                              },
                              "text": "为"
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 23,
                                "column": 19
                              },
                              "end": {
                                "row": 23,
                                "column": 21
                              },
                              "text": "nu"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start": {
                        "row": 23,
                        "column": 21
                      },
                      "end": {
                        "row": 23,
                        "column": 22
                      },
                      "text": "l"
                    }
                  ]
                },
                {
                  "type": "block",
                  "start": {
                    "row": 23,
                    "column": 23
                  },
                  "end": {
                    "row": 26,
                    "column": 3
                  },
                  "text": "，此时提供状态码说明\n\t\t\tthis.in = new ByteArrayInputStream(StrUtil.format(\"Error request, response status: {}\", this.status).getBytes());\n\t\t} else if (isGzip() && false == (in instanceof GZIPInputStream)) {\n\t\t",
                  "children": [
                    {
                      "type": "{",
                      "start": {
                        "row": 23,
                        "column": 23
                      },
                      "end": {
                        "row": 23,
                        "column": 24
                      },
                      "text": "，"
                    },
                    {
                      "type": "line_comment",
                      "start": {
                        "row": 24,
                        "column": 3
                      },
                      "end": {
                        "row": 24,
                        "column": 76
                      },
                      "text": "状态码说明\n\t\t\tthis.in = new ByteArrayInputStream(StrUtil.format(\"Error request"
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 25,
                        "column": 3
                      },
                      "end": {
                        "row": 25,
                        "column": 116
                      },
                      "text": "sponse status: {}\", this.status).getBytes());\n\t\t} else if (isGzip() && false == (in instanceof GZIPInputStream)) ",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start": {
                            "row": 25,
                            "column": 3
                          },
                          "end": {
                            "row": 25,
                            "column": 115
                          },
                          "text": "sponse status: {}\", this.status).getBytes());\n\t\t} else if (isGzip() && false == (in instanceof GZIPInputStream))",
                          "children": [
                            {
                              "type": "field_access",
                              "start": {
                                "row": 25,
                                "column": 3
                              },
                              "end": {
                                "row": 25,
                                "column": 10
                              },
                              "text": "sponse ",
                              "children": [
                                {
                                  "type": "this",
                                  "start": {
                                    "row": 25,
                                    "column": 3
                                  },
                                  "end": {
                                    "row": 25,
                                    "column": 7
                                  },
                                  "text": "spon"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 25,
                                    "column": 7
                                  },
                                  "end": {
                                    "row": 25,
                                    "column": 8
                                  },
                                  "text": "s"
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 25,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 25,
                                    "column": 10
                                  },
                                  "text": "e "
                                }
                              ]
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 25,
                                "column": 11
                              },
                              "end": {
                                "row": 25,
                                "column": 12
                              },
                              "text": "t"
                            },
                            {
                              "type": "object_creation_expression",
                              "start": {
                                "row": 25,
                                "column": 13
                              },
                              "end": {
                                "row": 25,
                                "column": 115
                              },
                              "text": "tus: {}\", this.status).getBytes());\n\t\t} else if (isGzip() && false == (in instanceof GZIPInputStream))",
                              "children": [
                                {
                                  "type": "new",
                                  "start": {
                                    "row": 25,
                                    "column": 13
                                  },
                                  "end": {
                                    "row": 25,
                                    "column": 16
                                  },
                                  "text": "tus"
                                },
                                {
                                  "type": "type_identifier",
                                  "start": {
                                    "row": 25,
                                    "column": 17
                                  },
                                  "end": {
                                    "row": 25,
                                    "column": 37
                                  },
                                  "text": " {}\", this.status).g"
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 25,
                                    "column": 37
                                  },
                                  "end": {
                                    "row": 25,
                                    "column": 115
                                  },
                                  "text": "etBytes());\n\t\t} else if (isGzip() && false == (in instanceof GZIPInputStream))",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 25,
                                        "column": 37
                                      },
                                      "end": {
                                        "row": 25,
                                        "column": 38
                                      },
                                      "text": "e"
                                    },
                                    {
                                      "type": "method_invocation",
                                      "start": {
                                        "row": 25,
                                        "column": 38
                                      },
                                      "end": {
                                        "row": 25,
                                        "column": 114
                                      },
                                      "text": "tBytes());\n\t\t} else if (isGzip() && false == (in instanceof GZIPInputStream)",
                                      "children": [
                                        {
                                          "type": "method_invocation",
                                          "start": {
                                            "row": 25,
                                            "column": 38
                                          },
                                          "end": {
                                            "row": 25,
                                            "column": 103
                                          },
                                          "text": "tBytes());\n\t\t} else if (isGzip() && false == (in instanceof GZIPI",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 25,
                                                "column": 38
                                              },
                                              "end": {
                                                "row": 25,
                                                "column": 45
                                              },
                                              "text": "tBytes("
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 25,
                                                "column": 45
                                              },
                                              "end": {
                                                "row": 25,
                                                "column": 46
                                              },
                                              "text": ")"
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 25,
                                                "column": 46
                                              },
                                              "end": {
                                                "row": 25,
                                                "column": 52
                                              },
                                              "text": ");\n\t\t}"
                                            },
                                            {
                                              "type": "argument_list",
                                              "start": {
                                                "row": 25,
                                                "column": 52
                                              },
                                              "end": {
                                                "row": 25,
                                                "column": 103
                                              },
                                              "text": " else if (isGzip() && false == (in instanceof GZIPI",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 25,
                                                    "column": 52
                                                  },
                                                  "end": {
                                                    "row": 25,
                                                    "column": 53
                                                  },
                                                  "text": " "
                                                },
                                                {
                                                  "type": "string_literal",
                                                  "start": {
                                                    "row": 25,
                                                    "column": 53
                                                  },
                                                  "end": {
                                                    "row": 25,
                                                    "column": 89
                                                  },
                                                  "text": "else if (isGzip() && false == (in in",
                                                  "children": [
                                                    {
                                                      "type": "\"",
                                                      "start": {
                                                        "row": 25,
                                                        "column": 53
                                                      },
                                                      "end": {
                                                        "row": 25,
                                                        "column": 54
                                                      },
                                                      "text": "e"
                                                    },
                                                    {
                                                      "type": "string_fragment",
                                                      "start": {
                                                        "row": 25,
                                                        "column": 54
                                                      },
                                                      "end": {
                                                        "row": 25,
                                                        "column": 88
                                                      },
                                                      "text": "lse if (isGzip() && false == (in i"
                                                    },
                                                    {
                                                      "type": "\"",
                                                      "start": {
                                                        "row": 25,
                                                        "column": 88
                                                      },
                                                      "end": {
                                                        "row": 25,
                                                        "column": 89
                                                      },
                                                      "text": "n"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ",",
                                                  "start": {
                                                    "row": 25,
                                                    "column": 89
                                                  },
                                                  "end": {
                                                    "row": 25,
                                                    "column": 90
                                                  },
                                                  "text": "s"
                                                },
                                                {
                                                  "type": "field_access",
                                                  "start": {
                                                    "row": 25,
                                                    "column": 91
                                                  },
                                                  "end": {
                                                    "row": 25,
                                                    "column": 102
                                                  },
                                                  "text": "anceof GZIP",
                                                  "children": [
                                                    {
                                                      "type": "this",
                                                      "start": {
                                                        "row": 25,
                                                        "column": 91
                                                      },
                                                      "end": {
                                                        "row": 25,
                                                        "column": 95
                                                      },
                                                      "text": "ance"
                                                    },
                                                    {
                                                      "type": ".",
                                                      "start": {
                                                        "row": 25,
                                                        "column": 95
                                                      },
                                                      "end": {
                                                        "row": 25,
                                                        "column": 96
                                                      },
                                                      "text": "o"
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 25,
                                                        "column": 96
                                                      },
                                                      "end": {
                                                        "row": 25,
                                                        "column": 102
                                                      },
                                                      "text": "f GZIP"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 25,
                                                    "column": 102
                                                  },
                                                  "end": {
                                                    "row": 25,
                                                    "column": 103
                                                  },
                                                  "text": "I"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 25,
                                            "column": 103
                                          },
                                          "end": {
                                            "row": 25,
                                            "column": 104
                                          },
                                          "text": "n"
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 25,
                                            "column": 104
                                          },
                                          "end": {
                                            "row": 25,
                                            "column": 112
                                          },
                                          "text": "putStrea"
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 25,
                                            "column": 112
                                          },
                                          "end": {
                                            "row": 25,
                                            "column": 114
                                          },
                                          "text": "m)",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 25,
                                                "column": 112
                                              },
                                              "end": {
                                                "row": 25,
                                                "column": 113
                                              },
                                              "text": "m"
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 25,
                                                "column": 113
                                              },
                                              "end": {
                                                "row": 25,
                                                "column": 114
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 25,
                                        "column": 114
                                      },
                                      "end": {
                                        "row": 25,
                                        "column": 115
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start": {
                            "row": 25,
                            "column": 115
                          },
                          "end": {
                            "row": 25,
                            "column": 116
                          },
                          "text": " "
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start": {
                        "row": 26,
                        "column": 2
                      },
                      "end": {
                        "row": 26,
                        "column": 3
                      },
                      "text": "\t"
                    }
                  ]
                },
                {
                  "type": "else",
                  "start": {
                    "row": 26,
                    "column": 4
                  },
                  "end": {
                    "row": 26,
                    "column": 8
                  },
                  "text": "try "
                },
                {
                  "type": "if_statement",
                  "start": {
                    "row": 26,
                    "column": 9
                  },
                  "end": {
                    "row": 36,
                    "column": 3
                  },
                  "text": "\n\t\t\t\tin = new GZIPInputStream(in);\n\t\t\t} catch (IOException e) {\n\t\t\t\t// 在类似于Head等方法中无body返回，此时GZIPInputStream构造会出现错误，在此忽略此错误读取普通数据\n\t\t\t\t// ignore\n\t\t\t}\n\t\t} else if (isDeflate() && false == (in instanceof DeflaterInputStream)) {\n\t\t\t//Accept-Encoding: defalte\n\t\t\tin = new DeflaterInputStream(in);\n\t\t}\n\n\t\t// 同步情况下强制同步\n\t\treturn this.isAsync ? this : forceSync();\n\t}",
                  "children": [
                    {
                      "type": "if",
                      "start": {
                        "row": 26,
                        "column": 9
                      },
                      "end": {
                        "row": 26,
                        "column": 11
                      },
                      "text": "\n\t"
                    },
                    {
                      "type": "condition",
                      "start": {
                        "row": 26,
                        "column": 12
                      },
                      "end": {
                        "row": 26,
                        "column": 66
                      },
                      "text": "\t\tin = new GZIPInputStream(in);\n\t\t\t} catch (IOExceptio",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 26,
                            "column": 12
                          },
                          "end": {
                            "row": 26,
                            "column": 13
                          },
                          "text": "\t"
                        },
                        {
                          "type": "binary_expression",
                          "start": {
                            "row": 26,
                            "column": 13
                          },
                          "end": {
                            "row": 26,
                            "column": 65
                          },
                          "text": "\tin = new GZIPInputStream(in);\n\t\t\t} catch (IOExcepti",
                          "children": [
                            {
                              "type": "method_invocation",
                              "start": {
                                "row": 26,
                                "column": 13
                              },
                              "end": {
                                "row": 26,
                                "column": 21
                              },
                              "text": "\tin = ne",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 26,
                                    "column": 13
                                  },
                                  "end": {
                                    "row": 26,
                                    "column": 19
                                  },
                                  "text": "\tin = "
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 26,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 26,
                                    "column": 21
                                  },
                                  "text": "ne",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 26,
                                        "column": 19
                                      },
                                      "end": {
                                        "row": 26,
                                        "column": 20
                                      },
                                      "text": "n"
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 26,
                                        "column": 20
                                      },
                                      "end": {
                                        "row": 26,
                                        "column": 21
                                      },
                                      "text": "e"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "&&",
                              "start": {
                                "row": 26,
                                "column": 22
                              },
                              "end": {
                                "row": 26,
                                "column": 24
                              },
                              "text": " G"
                            },
                            {
                              "type": "binary_expression",
                              "start": {
                                "row": 26,
                                "column": 25
                              },
                              "end": {
                                "row": 26,
                                "column": 65
                              },
                              "text": "IPInputStream(in);\n\t\t\t} catch (IOExcepti",
                              "children": [
                                {
                                  "type": "false",
                                  "start": {
                                    "row": 26,
                                    "column": 25
                                  },
                                  "end": {
                                    "row": 26,
                                    "column": 30
                                  },
                                  "text": "IPInp"
                                },
                                {
                                  "type": "==",
                                  "start": {
                                    "row": 26,
                                    "column": 31
                                  },
                                  "end": {
                                    "row": 26,
                                    "column": 33
                                  },
                                  "text": "tS"
                                },
                                {
                                  "type": "parenthesized_expression",
                                  "start": {
                                    "row": 26,
                                    "column": 34
                                  },
                                  "end": {
                                    "row": 26,
                                    "column": 65
                                  },
                                  "text": "ream(in);\n\t\t\t} catch (IOExcepti",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 26,
                                        "column": 34
                                      },
                                      "end": {
                                        "row": 26,
                                        "column": 35
                                      },
                                      "text": "r"
                                    },
                                    {
                                      "type": "instanceof_expression",
                                      "start": {
                                        "row": 26,
                                        "column": 35
                                      },
                                      "end": {
                                        "row": 26,
                                        "column": 64
                                      },
                                      "text": "eam(in);\n\t\t\t} catch (IOExcept",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 26,
                                            "column": 35
                                          },
                                          "end": {
                                            "row": 26,
                                            "column": 37
                                          },
                                          "text": "ea"
                                        },
                                        {
                                          "type": "instanceof",
                                          "start": {
                                            "row": 26,
                                            "column": 38
                                          },
                                          "end": {
                                            "row": 26,
                                            "column": 48
                                          },
                                          "text": "(in);\n\t\t\t}"
                                        },
                                        {
                                          "type": "type_identifier",
                                          "start": {
                                            "row": 26,
                                            "column": 49
                                          },
                                          "end": {
                                            "row": 26,
                                            "column": 64
                                          },
                                          "text": "catch (IOExcept"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 26,
                                        "column": 64
                                      },
                                      "end": {
                                        "row": 26,
                                        "column": 65
                                      },
                                      "text": "i"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 26,
                            "column": 65
                          },
                          "end": {
                            "row": 26,
                            "column": 66
                          },
                          "text": "o"
                        }
                      ]
                    },
                    {
                      "type": "block",
                      "start": {
                        "row": 26,
                        "column": 67
                      },
                      "end": {
                        "row": 33,
                        "column": 3
                      },
                      "text": " e) {\n\t\t\t\t// 在类似于Head等方法中无body返回，此时GZIPInputStream构造会出现错误，在此忽略此错误读取普通数据\n\t\t\t\t// ignore\n\t\t\t}\n\t\t} else if (isDeflate() && false == (in instanceof DeflaterInputStream)) {\n\t\t\t//Accept-Encoding: defalte\n\t\t\tin = new DeflaterInputStream(in)",
                      "children": [
                        {
                          "type": "{",
                          "start": {
                            "row": 26,
                            "column": 67
                          },
                          "end": {
                            "row": 26,
                            "column": 68
                          },
                          "text": " "
                        },
                        {
                          "type": "try_statement",
                          "start": {
                            "row": 27,
                            "column": 3
                          },
                          "end": {
                            "row": 32,
                            "column": 4
                          },
                          "text": "\n\t\t\t\t// 在类似于Head等方法中无body返回，此时GZIPInputStream构造会出现错误，在此忽略此错误读取普通数据\n\t\t\t\t// ignore\n\t\t\t}\n\t\t} else if (isDeflate() && false == (in instanceof DeflaterInputStream)) {\n\t\t\t//Accept-Encoding: defalte\n\t\t\tin = new DeflaterInputStream",
                          "children": [
                            {
                              "type": "try",
                              "start": {
                                "row": 27,
                                "column": 3
                              },
                              "end": {
                                "row": 27,
                                "column": 6
                              },
                              "text": "\n\t\t"
                            },
                            {
                              "type": "block",
                              "start": {
                                "row": 27,
                                "column": 7
                              },
                              "end": {
                                "row": 29,
                                "column": 4
                              },
                              "text": "\t// 在类似于Head等方法中无body返回，此时GZIPInputStrea",
                              "children": [
                                {
                                  "type": "{",
                                  "start": {
                                    "row": 27,
                                    "column": 7
                                  },
                                  "end": {
                                    "row": 27,
                                    "column": 8
                                  },
                                  "text": "\t"
                                },
                                {
                                  "type": "expression_statement",
                                  "start": {
                                    "row": 28,
                                    "column": 4
                                  },
                                  "end": {
                                    "row": 28,
                                    "column": 33
                                  },
                                  "text": "似于Head等方法中无body返回，此时GZIPInput",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start": {
                                        "row": 28,
                                        "column": 4
                                      },
                                      "end": {
                                        "row": 28,
                                        "column": 32
                                      },
                                      "text": "似于Head等方法中无body返回，此时GZIPInpu",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 28,
                                            "column": 4
                                          },
                                          "end": {
                                            "row": 28,
                                            "column": 6
                                          },
                                          "text": "似于"
                                        },
                                        {
                                          "type": "=",
                                          "start": {
                                            "row": 28,
                                            "column": 7
                                          },
                                          "end": {
                                            "row": 28,
                                            "column": 8
                                          },
                                          "text": "e"
                                        },
                                        {
                                          "type": "object_creation_expression",
                                          "start": {
                                            "row": 28,
                                            "column": 9
                                          },
                                          "end": {
                                            "row": 28,
                                            "column": 32
                                          },
                                          "text": "d等方法中无body返回，此时GZIPInpu",
                                          "children": [
                                            {
                                              "type": "new",
                                              "start": {
                                                "row": 28,
                                                "column": 9
                                              },
                                              "end": {
                                                "row": 28,
                                                "column": 12
                                              },
                                              "text": "d等方"
                                            },
                                            {
                                              "type": "type_identifier",
                                              "start": {
                                                "row": 28,
                                                "column": 13
                                              },
                                              "end": {
                                                "row": 28,
                                                "column": 28
                                              },
                                              "text": "中无body返回，此时GZIP"
                                            },
                                            {
                                              "type": "argument_list",
                                              "start": {
                                                "row": 28,
                                                "column": 28
                                              },
                                              "end": {
                                                "row": 28,
                                                "column": 32
                                              },
                                              "text": "Inpu",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 28,
                                                    "column": 28
                                                  },
                                                  "end": {
                                                    "row": 28,
                                                    "column": 29
                                                  },
                                                  "text": "I"
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 28,
                                                    "column": 29
                                                  },
                                                  "end": {
                                                    "row": 28,
                                                    "column": 31
                                                  },
                                                  "text": "np"
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 28,
                                                    "column": 31
                                                  },
                                                  "end": {
                                                    "row": 28,
                                                    "column": 32
                                                  },
                                                  "text": "u"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start": {
                                        "row": 28,
                                        "column": 32
                                      },
                                      "end": {
                                        "row": 28,
                                        "column": 33
                                      },
                                      "text": "t"
                                    }
                                  ]
                                },
                                {
                                  "type": "}",
                                  "start": {
                                    "row": 29,
                                    "column": 3
                                  },
                                  "end": {
                                    "row": 29,
                                    "column": 4
                                  },
                                  "text": "a"
                                }
                              ]
                            },
                            {
                              "type": "catch_clause",
                              "start": {
                                "row": 29,
                                "column": 5
                              },
                              "end": {
                                "row": 32,
                                "column": 4
                              },
                              "text": "构造会出现错误，在此忽略此错误读取普通数据\n\t\t\t\t// ignore\n\t\t\t}\n\t\t} else if (isDeflate() && false == (in instanceof DeflaterInputStream)) {\n\t\t\t//Accept-Encoding: defalte\n\t\t\tin = new DeflaterInputStream",
                              "children": [
                                {
                                  "type": "catch",
                                  "start": {
                                    "row": 29,
                                    "column": 5
                                  },
                                  "end": {
                                    "row": 29,
                                    "column": 10
                                  },
                                  "text": "构造会出现"
                                },
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 29,
                                    "column": 11
                                  },
                                  "end": {
                                    "row": 29,
                                    "column": 12
                                  },
                                  "text": "误"
                                },
                                {
                                  "type": "catch_formal_parameter",
                                  "start": {
                                    "row": 29,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 29,
                                    "column": 25
                                  },
                                  "text": "，在此忽略此错误读取普通数",
                                  "children": [
                                    {
                                      "type": "catch_type",
                                      "start": {
                                        "row": 29,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 29,
                                        "column": 23
                                      },
                                      "text": "，在此忽略此错误读取普",
                                      "children": [
                                        {
                                          "type": "type_identifier",
                                          "start": {
                                            "row": 29,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 29,
                                            "column": 23
                                          },
                                          "text": "，在此忽略此错误读取普"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 29,
                                        "column": 24
                                      },
                                      "end": {
                                        "row": 29,
                                        "column": 25
                                      },
                                      "text": "数"
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 29,
                                    "column": 25
                                  },
                                  "end": {
                                    "row": 29,
                                    "column": 26
                                  },
                                  "text": "据"
                                },
                                {
                                  "type": "block",
                                  "start": {
                                    "row": 29,
                                    "column": 27
                                  },
                                  "end": {
                                    "row": 32,
                                    "column": 4
                                  },
                                  "text": "\t\t\t\t// ignore\n\t\t\t}\n\t\t} else if (isDeflate() && false == (in instanceof DeflaterInputStream)) {\n\t\t\t//Accept-Encoding: defalte\n\t\t\tin = new DeflaterInputStream",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start": {
                                        "row": 29,
                                        "column": 27
                                      },
                                      "end": {
                                        "row": 29,
                                        "column": 28
                                      },
                                      "text": "\t"
                                    },
                                    {
                                      "type": "line_comment",
                                      "start": {
                                        "row": 30,
                                        "column": 4
                                      },
                                      "end": {
                                        "row": 30,
                                        "column": 135
                                      },
                                      "text": " ignore\n\t\t\t}\n\t\t} else if (isDeflate() && false == (in instanceof DeflaterInputStream)) {\n\t\t\t//Accept-Encoding: defalte\n\t\t\tin = new "
                                    },
                                    {
                                      "type": "line_comment",
                                      "start": {
                                        "row": 31,
                                        "column": 4
                                      },
                                      "end": {
                                        "row": 31,
                                        "column": 13
                                      },
                                      "text": "terInputS"
                                    },
                                    {
                                      "type": "}",
                                      "start": {
                                        "row": 32,
                                        "column": 3
                                      },
                                      "end": {
                                        "row": 32,
                                        "column": 4
                                      },
                                      "text": "m"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "}",
                          "start": {
                            "row": 33,
                            "column": 2
                          },
                          "end": {
                            "row": 33,
                            "column": 3
                          },
                          "text": ")"
                        }
                      ]
                    },
                    {
                      "type": "else",
                      "start": {
                        "row": 33,
                        "column": 4
                      },
                      "end": {
                        "row": 33,
                        "column": 8
                      },
                      "text": "\n\t\t}"
                    },
                    {
                      "type": "if_statement",
                      "start": {
                        "row": 33,
                        "column": 9
                      },
                      "end": {
                        "row": 36,
                        "column": 3
                      },
                      "text": "\n\t\t// 同步情况下强制同步\n\t\treturn this.isAsync ? this : forceSync();\n\t}",
                      "children": [
                        {
                          "type": "if",
                          "start": {
                            "row": 33,
                            "column": 9
                          },
                          "end": {
                            "row": 33,
                            "column": 11
                          },
                          "text": "\n\t"
                        },
                        {
                          "type": "condition",
                          "start": {
                            "row": 33,
                            "column": 12
                          },
                          "end": {
                            "row": 33,
                            "column": 73
                          },
                          "text": "// 同步情况下强制同步\n\t\treturn this.isAsync ? this : forceSync();\n\t}",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 33,
                                "column": 12
                              },
                              "end": {
                                "row": 33,
                                "column": 13
                              },
                              "text": "/"
                            },
                            {
                              "type": "binary_expression",
                              "start": {
                                "row": 33,
                                "column": 13
                              },
                              "end": {
                                "row": 33,
                                "column": 72
                              },
                              "text": "/ 同步情况下强制同步\n\t\treturn this.isAsync ? this : forceSync();\n\t}",
                              "children": [
                                {
                                  "type": "method_invocation",
                                  "start": {
                                    "row": 33,
                                    "column": 13
                                  },
                                  "end": {
                                    "row": 33,
                                    "column": 24
                                  },
                                  "text": "/ 同步情况下强制同步",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 33,
                                        "column": 13
                                      },
                                      "end": {
                                        "row": 33,
                                        "column": 22
                                      },
                                      "text": "/ 同步情况下强制"
                                    },
                                    {
                                      "type": "argument_list",
                                      "start": {
                                        "row": 33,
                                        "column": 22
                                      },
                                      "end": {
                                        "row": 33,
                                        "column": 24
                                      },
                                      "text": "同步",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 33,
                                            "column": 22
                                          },
                                          "end": {
                                            "row": 33,
                                            "column": 23
                                          },
                                          "text": "同"
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 33,
                                            "column": 23
                                          },
                                          "end": {
                                            "row": 33,
                                            "column": 24
                                          },
                                          "text": "步"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "&&",
                                  "start": {
                                    "row": 33,
                                    "column": 25
                                  },
                                  "end": {
                                    "row": 33,
                                    "column": 27
                                  },
                                  "text": "\t\t"
                                },
                                {
                                  "type": "binary_expression",
                                  "start": {
                                    "row": 33,
                                    "column": 28
                                  },
                                  "end": {
                                    "row": 33,
                                    "column": 72
                                  },
                                  "text": "eturn this.isAsync ? this : forceSync();\n\t}",
                                  "children": [
                                    {
                                      "type": "false",
                                      "start": {
                                        "row": 33,
                                        "column": 28
                                      },
                                      "end": {
                                        "row": 33,
                                        "column": 33
                                      },
                                      "text": "eturn"
                                    },
                                    {
                                      "type": "==",
                                      "start": {
                                        "row": 33,
                                        "column": 34
                                      },
                                      "end": {
                                        "row": 33,
                                        "column": 36
                                      },
                                      "text": "th"
                                    },
                                    {
                                      "type": "parenthesized_expression",
                                      "start": {
                                        "row": 33,
                                        "column": 37
                                      },
                                      "end": {
                                        "row": 33,
                                        "column": 72
                                      },
                                      "text": "s.isAsync ? this : forceSync();\n\t}",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 33,
                                            "column": 37
                                          },
                                          "end": {
                                            "row": 33,
                                            "column": 38
                                          },
                                          "text": "s"
                                        },
                                        {
                                          "type": "instanceof_expression",
                                          "start": {
                                            "row": 33,
                                            "column": 38
                                          },
                                          "end": {
                                            "row": 33,
                                            "column": 71
                                          },
                                          "text": ".isAsync ? this : forceSync();\n\t}",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 33,
                                                "column": 38
                                              },
                                              "end": {
                                                "row": 33,
                                                "column": 40
                                              },
                                              "text": ".i"
                                            },
                                            {
                                              "type": "instanceof",
                                              "start": {
                                                "row": 33,
                                                "column": 41
                                              },
                                              "end": {
                                                "row": 33,
                                                "column": 51
                                              },
                                              "text": "Async ? th"
                                            },
                                            {
                                              "type": "type_identifier",
                                              "start": {
                                                "row": 33,
                                                "column": 52
                                              },
                                              "end": {
                                                "row": 33,
                                                "column": 71
                                              },
                                              "text": "s : forceSync();\n\t}"
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 33,
                                            "column": 71
                                          },
                                          "end": {
                                            "row": 33,
                                            "column": 72
                                          },
                                          "text": ""
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 33,
                                "column": 72
                              },
                              "end": {
                                "row": 33,
                                "column": 73
                              },
                              "text": ""
                            }
                          ]
                        },
                        {
                          "type": "block",
                          "start": {
                            "row": 33,
                            "column": 74
                          },
                          "end": {
                            "row": 36,
                            "column": 3
                          },
                          "text": "",
                          "children": [
                            {
                              "type": "{",
                              "start": {
                                "row": 33,
                                "column": 74
                              },
                              "end": {
                                "row": 33,
                                "column": 75
                              },
                              "text": ""
                            },
                            {
                              "type": "line_comment",
                              "start": {
                                "row": 34,
                                "column": 3
                              },
                              "end": {
                                "row": 34,
                                "column": 29
                              },
                              "text": ""
                            },
                            {
                              "type": "expression_statement",
                              "start": {
                                "row": 35,
                                "column": 3
                              },
                              "end": {
                                "row": 35,
                                "column": 36
                              },
                              "text": "",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start": {
                                    "row": 35,
                                    "column": 3
                                  },
                                  "end": {
                                    "row": 35,
                                    "column": 35
                                  },
                                  "text": "",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 35,
                                        "column": 3
                                      },
                                      "end": {
                                        "row": 35,
                                        "column": 5
                                      },
                                      "text": ""
                                    },
                                    {
                                      "type": "=",
                                      "start": {
                                        "row": 35,
                                        "column": 6
                                      },
                                      "end": {
                                        "row": 35,
                                        "column": 7
                                      },
                                      "text": ""
                                    },
                                    {
                                      "type": "object_creation_expression",
                                      "start": {
                                        "row": 35,
                                        "column": 8
                                      },
                                      "end": {
                                        "row": 35,
                                        "column": 35
                                      },
                                      "text": "",
                                      "children": [
                                        {
                                          "type": "new",
                                          "start": {
                                            "row": 35,
                                            "column": 8
                                          },
                                          "end": {
                                            "row": 35,
                                            "column": 11
                                          },
                                          "text": ""
                                        },
                                        {
                                          "type": "type_identifier",
                                          "start": {
                                            "row": 35,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 35,
                                            "column": 31
                                          },
                                          "text": ""
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 35,
                                            "column": 31
                                          },
                                          "end": {
                                            "row": 35,
                                            "column": 35
                                          },
                                          "text": "",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 35,
                                                "column": 31
                                              },
                                              "end": {
                                                "row": 35,
                                                "column": 32
                                              },
                                              "text": ""
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 35,
                                                "column": 32
                                              },
                                              "end": {
                                                "row": 35,
                                                "column": 34
                                              },
                                              "text": ""
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 35,
                                                "column": 34
                                              },
                                              "end": {
                                                "row": 35,
                                                "column": 35
                                              },
                                              "text": ""
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start": {
                                    "row": 35,
                                    "column": 35
                                  },
                                  "end": {
                                    "row": 35,
                                    "column": 36
                                  },
                                  "text": ""
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start": {
                                "row": 36,
                                "column": 2
                              },
                              "end": {
                                "row": 36,
                                "column": 3
                              },
                              "text": ""
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "line_comment",
              "start": {
                "row": 38,
                "column": 2
              },
              "end": {
                "row": 38,
                "column": 32
              },
              "text": ""
            },
            {
              "type": "return_statement",
              "start": {
                "row": 39,
                "column": 2
              },
              "end": {
                "row": 39,
                "column": 43
              },
              "text": "",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 39,
                    "column": 2
                  },
                  "end": {
                    "row": 39,
                    "column": 8
                  },
                  "text": ""
                },
                {
                  "type": "ternary_expression",
                  "start": {
                    "row": 39,
                    "column": 9
                  },
                  "end": {
                    "row": 39,
                    "column": 42
                  },
                  "text": "",
                  "children": [
                    {
                      "type": "field_access",
                      "start": {
                        "row": 39,
                        "column": 9
                      },
                      "end": {
                        "row": 39,
                        "column": 21
                      },
                      "text": "",
                      "children": [
                        {
                          "type": "this",
                          "start": {
                            "row": 39,
                            "column": 9
                          },
                          "end": {
                            "row": 39,
                            "column": 13
                          },
                          "text": ""
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 39,
                            "column": 13
                          },
                          "end": {
                            "row": 39,
                            "column": 14
                          },
                          "text": ""
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 39,
                            "column": 14
                          },
                          "end": {
                            "row": 39,
                            "column": 21
                          },
                          "text": ""
                        }
                      ]
                    },
                    {
                      "type": "?",
                      "start": {
                        "row": 39,
                        "column": 22
                      },
                      "end": {
                        "row": 39,
                        "column": 23
                      },
                      "text": ""
                    },
                    {
                      "type": "this",
                      "start": {
                        "row": 39,
                        "column": 24
                      },
                      "end": {
                        "row": 39,
                        "column": 28
                      },
                      "text": ""
                    },
                    {
                      "type": ":",
                      "start": {
                        "row": 39,
                        "column": 29
                      },
                      "end": {
                        "row": 39,
                        "column": 30
                      },
                      "text": ""
                    },
                    {
                      "type": "method_invocation",
                      "start": {
                        "row": 39,
                        "column": 31
                      },
                      "end": {
                        "row": 39,
                        "column": 42
                      },
                      "text": "",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 39,
                            "column": 31
                          },
                          "end": {
                            "row": 39,
                            "column": 40
                          },
                          "text": ""
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 39,
                            "column": 40
                          },
                          "end": {
                            "row": 39,
                            "column": 42
                          },
                          "text": "",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 39,
                                "column": 40
                              },
                              "end": {
                                "row": 39,
                                "column": 41
                              },
                              "text": ""
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 39,
                                "column": 41
                              },
                              "end": {
                                "row": 39,
                                "column": 42
                              },
                              "text": ""
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 39,
                    "column": 42
                  },
                  "end": {
                    "row": 39,
                    "column": 43
                  },
                  "text": ""
                }
              ]
            },
            {
              "type": "}",
              "start": {
                "row": 40,
                "column": 1
              },
              "end": {
                "row": 40,
                "column": 2
              },
              "text": ""
            }
          ]
        }
      ]
    }
  ]
}