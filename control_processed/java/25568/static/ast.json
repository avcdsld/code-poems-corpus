{
  "type": "program",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 24,
    "column": 3
  },
  "text": "static public ModelMetricsBinomial make(Vec targetClassProbs, Vec actualLabels, String[] domain) {\n    Scope.enter();\n    Vec _labels = actualLabels.toCategoricalVec();\n    if (domain==null) domain = _labels.domain();\n    if (_labels == null || targetClassProbs == null)\n      throw new IllegalArgumentException(\"Missing actualLabels or predictedProbs for binomial metrics!\");\n    if (!targetClassProbs.isNumeric())\n      throw new IllegalArgumentException(\"Predicted probabilities must be numeric per-class probabilities for binomial metrics.\");\n    if (targetClassProbs.min() < 0 || targetClassProbs.max() > 1)\n      throw new IllegalArgumentException(\"Predicted probabilities must be between 0 and 1 for binomial metrics.\");\n    if (domain.length!=2)\n      throw new IllegalArgumentException(\"Domain must have 2 class labels, but is \" + Arrays.toString(domain) + \" for binomial metrics.\");\n    _labels = _labels.adaptTo(domain);\n    if (_labels.cardinality()!=2)\n      throw new IllegalArgumentException(\"Adapted domain must have 2 class labels, but is \" + Arrays.toString(_labels.domain()) + \" for binomial metrics.\");\n    Frame predsLabel = new Frame(targetClassProbs);\n    predsLabel.add(\"labels\", _labels);\n    MetricBuilderBinomial mb = new BinomialMetrics(_labels.domain()).doAll(predsLabel)._mb;\n    _labels.remove();\n    Frame preds = new Frame(targetClassProbs);\n    ModelMetricsBinomial mm = (ModelMetricsBinomial)mb.makeModelMetrics(null, predsLabel, null, preds);\n    mm._description = \"Computed on user-given predictions and labels, using F1-optimal threshold: \" + mm.auc_obj().defaultThreshold() + \".\";\n    Scope.exit();\n    return mm;\n  }",
  "children": [
    {
      "type": "method_declaration",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 24,
        "column": 3
      },
      "text": "static public ModelMetricsBinomial make(Vec targetClassProbs, Vec actualLabels, String[] domain) {\n    Scope.enter();\n    Vec _labels = actualLabels.toCategoricalVec();\n    if (domain==null) domain = _labels.domain();\n    if (_labels == null || targetClassProbs == null)\n      throw new IllegalArgumentException(\"Missing actualLabels or predictedProbs for binomial metrics!\");\n    if (!targetClassProbs.isNumeric())\n      throw new IllegalArgumentException(\"Predicted probabilities must be numeric per-class probabilities for binomial metrics.\");\n    if (targetClassProbs.min() < 0 || targetClassProbs.max() > 1)\n      throw new IllegalArgumentException(\"Predicted probabilities must be between 0 and 1 for binomial metrics.\");\n    if (domain.length!=2)\n      throw new IllegalArgumentException(\"Domain must have 2 class labels, but is \" + Arrays.toString(domain) + \" for binomial metrics.\");\n    _labels = _labels.adaptTo(domain);\n    if (_labels.cardinality()!=2)\n      throw new IllegalArgumentException(\"Adapted domain must have 2 class labels, but is \" + Arrays.toString(_labels.domain()) + \" for binomial metrics.\");\n    Frame predsLabel = new Frame(targetClassProbs);\n    predsLabel.add(\"labels\", _labels);\n    MetricBuilderBinomial mb = new BinomialMetrics(_labels.domain()).doAll(predsLabel)._mb;\n    _labels.remove();\n    Frame preds = new Frame(targetClassProbs);\n    ModelMetricsBinomial mm = (ModelMetricsBinomial)mb.makeModelMetrics(null, predsLabel, null, preds);\n    mm._description = \"Computed on user-given predictions and labels, using F1-optimal threshold: \" + mm.auc_obj().defaultThreshold() + \".\";\n    Scope.exit();\n    return mm;\n  }",
      "children": [
        {
          "type": "modifiers",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 13
          },
          "text": "static public",
          "children": [
            {
              "type": "static",
              "start": {
                "row": 0,
                "column": 0
              },
              "end": {
                "row": 0,
                "column": 6
              },
              "text": "static"
            },
            {
              "type": "public",
              "start": {
                "row": 0,
                "column": 7
              },
              "end": {
                "row": 0,
                "column": 13
              },
              "text": "public"
            }
          ]
        },
        {
          "type": "type_identifier",
          "start": {
            "row": 0,
            "column": 14
          },
          "end": {
            "row": 0,
            "column": 34
          },
          "text": "ModelMetricsBinomial"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 35
          },
          "end": {
            "row": 0,
            "column": 39
          },
          "text": "make"
        },
        {
          "type": "formal_parameters",
          "start": {
            "row": 0,
            "column": 39
          },
          "end": {
            "row": 0,
            "column": 96
          },
          "text": "(Vec targetClassProbs, Vec actualLabels, String[] domain)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 39
              },
              "end": {
                "row": 0,
                "column": 40
              },
              "text": "("
            },
            {
              "type": "formal_parameter",
              "start": {
                "row": 0,
                "column": 40
              },
              "end": {
                "row": 0,
                "column": 60
              },
              "text": "Vec targetClassProbs",
              "children": [
                {
                  "type": "type_identifier",
                  "start": {
                    "row": 0,
                    "column": 40
                  },
                  "end": {
                    "row": 0,
                    "column": 43
                  },
                  "text": "Vec"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 44
                  },
                  "end": {
                    "row": 0,
                    "column": 60
                  },
                  "text": "targetClassProbs"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 60
              },
              "end": {
                "row": 0,
                "column": 61
              },
              "text": ","
            },
            {
              "type": "formal_parameter",
              "start": {
                "row": 0,
                "column": 62
              },
              "end": {
                "row": 0,
                "column": 78
              },
              "text": "Vec actualLabels",
              "children": [
                {
                  "type": "type_identifier",
                  "start": {
                    "row": 0,
                    "column": 62
                  },
                  "end": {
                    "row": 0,
                    "column": 65
                  },
                  "text": "Vec"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 66
                  },
                  "end": {
                    "row": 0,
                    "column": 78
                  },
                  "text": "actualLabels"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 78
              },
              "end": {
                "row": 0,
                "column": 79
              },
              "text": ","
            },
            {
              "type": "formal_parameter",
              "start": {
                "row": 0,
                "column": 80
              },
              "end": {
                "row": 0,
                "column": 95
              },
              "text": "String[] domain",
              "children": [
                {
                  "type": "array_type",
                  "start": {
                    "row": 0,
                    "column": 80
                  },
                  "end": {
                    "row": 0,
                    "column": 88
                  },
                  "text": "String[]",
                  "children": [
                    {
                      "type": "type_identifier",
                      "start": {
                        "row": 0,
                        "column": 80
                      },
                      "end": {
                        "row": 0,
                        "column": 86
                      },
                      "text": "String"
                    },
                    {
                      "type": "dimensions",
                      "start": {
                        "row": 0,
                        "column": 86
                      },
                      "end": {
                        "row": 0,
                        "column": 88
                      },
                      "text": "[]",
                      "children": [
                        {
                          "type": "[",
                          "start": {
                            "row": 0,
                            "column": 86
                          },
                          "end": {
                            "row": 0,
                            "column": 87
                          },
                          "text": "["
                        },
                        {
                          "type": "]",
                          "start": {
                            "row": 0,
                            "column": 87
                          },
                          "end": {
                            "row": 0,
                            "column": 88
                          },
                          "text": "]"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 89
                  },
                  "end": {
                    "row": 0,
                    "column": 95
                  },
                  "text": "domain"
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 95
              },
              "end": {
                "row": 0,
                "column": 96
              },
              "text": ")"
            }
          ]
        },
        {
          "type": "block",
          "start": {
            "row": 0,
            "column": 97
          },
          "end": {
            "row": 24,
            "column": 3
          },
          "text": "{\n    Scope.enter();\n    Vec _labels = actualLabels.toCategoricalVec();\n    if (domain==null) domain = _labels.domain();\n    if (_labels == null || targetClassProbs == null)\n      throw new IllegalArgumentException(\"Missing actualLabels or predictedProbs for binomial metrics!\");\n    if (!targetClassProbs.isNumeric())\n      throw new IllegalArgumentException(\"Predicted probabilities must be numeric per-class probabilities for binomial metrics.\");\n    if (targetClassProbs.min() < 0 || targetClassProbs.max() > 1)\n      throw new IllegalArgumentException(\"Predicted probabilities must be between 0 and 1 for binomial metrics.\");\n    if (domain.length!=2)\n      throw new IllegalArgumentException(\"Domain must have 2 class labels, but is \" + Arrays.toString(domain) + \" for binomial metrics.\");\n    _labels = _labels.adaptTo(domain);\n    if (_labels.cardinality()!=2)\n      throw new IllegalArgumentException(\"Adapted domain must have 2 class labels, but is \" + Arrays.toString(_labels.domain()) + \" for binomial metrics.\");\n    Frame predsLabel = new Frame(targetClassProbs);\n    predsLabel.add(\"labels\", _labels);\n    MetricBuilderBinomial mb = new BinomialMetrics(_labels.domain()).doAll(predsLabel)._mb;\n    _labels.remove();\n    Frame preds = new Frame(targetClassProbs);\n    ModelMetricsBinomial mm = (ModelMetricsBinomial)mb.makeModelMetrics(null, predsLabel, null, preds);\n    mm._description = \"Computed on user-given predictions and labels, using F1-optimal threshold: \" + mm.auc_obj().defaultThreshold() + \".\";\n    Scope.exit();\n    return mm;\n  }",
          "children": [
            {
              "type": "{",
              "start": {
                "row": 0,
                "column": 97
              },
              "end": {
                "row": 0,
                "column": 98
              },
              "text": "{"
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 4
              },
              "end": {
                "row": 1,
                "column": 18
              },
              "text": "Scope.enter();",
              "children": [
                {
                  "type": "method_invocation",
                  "start": {
                    "row": 1,
                    "column": 4
                  },
                  "end": {
                    "row": 1,
                    "column": 17
                  },
                  "text": "Scope.enter()",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 1,
                        "column": 4
                      },
                      "end": {
                        "row": 1,
                        "column": 9
                      },
                      "text": "Scope"
                    },
                    {
                      "type": ".",
                      "start": {
                        "row": 1,
                        "column": 9
                      },
                      "end": {
                        "row": 1,
                        "column": 10
                      },
                      "text": "."
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 1,
                        "column": 10
                      },
                      "end": {
                        "row": 1,
                        "column": 15
                      },
                      "text": "enter"
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 1,
                        "column": 15
                      },
                      "end": {
                        "row": 1,
                        "column": 17
                      },
                      "text": "()",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 1,
                            "column": 15
                          },
                          "end": {
                            "row": 1,
                            "column": 16
                          },
                          "text": "("
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 1,
                            "column": 16
                          },
                          "end": {
                            "row": 1,
                            "column": 17
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 1,
                    "column": 17
                  },
                  "end": {
                    "row": 1,
                    "column": 18
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "local_variable_declaration",
              "start": {
                "row": 2,
                "column": 4
              },
              "end": {
                "row": 2,
                "column": 50
              },
              "text": "Vec _labels = actualLabels.toCategoricalVec();",
              "children": [
                {
                  "type": "type_identifier",
                  "start": {
                    "row": 2,
                    "column": 4
                  },
                  "end": {
                    "row": 2,
                    "column": 7
                  },
                  "text": "Vec"
                },
                {
                  "type": "variable_declarator",
                  "start": {
                    "row": 2,
                    "column": 8
                  },
                  "end": {
                    "row": 2,
                    "column": 49
                  },
                  "text": "_labels = actualLabels.toCategoricalVec()",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 2,
                        "column": 8
                      },
                      "end": {
                        "row": 2,
                        "column": 15
                      },
                      "text": "_labels"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 2,
                        "column": 16
                      },
                      "end": {
                        "row": 2,
                        "column": 17
                      },
                      "text": "="
                    },
                    {
                      "type": "method_invocation",
                      "start": {
                        "row": 2,
                        "column": 18
                      },
                      "end": {
                        "row": 2,
                        "column": 49
                      },
                      "text": "actualLabels.toCategoricalVec()",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 2,
                            "column": 18
                          },
                          "end": {
                            "row": 2,
                            "column": 30
                          },
                          "text": "actualLabels"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 2,
                            "column": 30
                          },
                          "end": {
                            "row": 2,
                            "column": 31
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 2,
                            "column": 31
                          },
                          "end": {
                            "row": 2,
                            "column": 47
                          },
                          "text": "toCategoricalVec"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 2,
                            "column": 47
                          },
                          "end": {
                            "row": 2,
                            "column": 49
                          },
                          "text": "()",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 2,
                                "column": 47
                              },
                              "end": {
                                "row": 2,
                                "column": 48
                              },
                              "text": "("
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 2,
                                "column": 48
                              },
                              "end": {
                                "row": 2,
                                "column": 49
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 2,
                    "column": 49
                  },
                  "end": {
                    "row": 2,
                    "column": 50
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 3,
                "column": 4
              },
              "end": {
                "row": 3,
                "column": 48
              },
              "text": "if (domain==null) domain = _labels.domain();",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 3,
                    "column": 4
                  },
                  "end": {
                    "row": 3,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "condition",
                  "start": {
                    "row": 3,
                    "column": 7
                  },
                  "end": {
                    "row": 3,
                    "column": 21
                  },
                  "text": "(domain==null)",
                  "children": [
                    {
                      "type": "(",
                      "start": {
                        "row": 3,
                        "column": 7
                      },
                      "end": {
                        "row": 3,
                        "column": 8
                      },
                      "text": "("
                    },
                    {
                      "type": "binary_expression",
                      "start": {
                        "row": 3,
                        "column": 8
                      },
                      "end": {
                        "row": 3,
                        "column": 20
                      },
                      "text": "domain==null",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 3,
                            "column": 8
                          },
                          "end": {
                            "row": 3,
                            "column": 14
                          },
                          "text": "domain"
                        },
                        {
                          "type": "==",
                          "start": {
                            "row": 3,
                            "column": 14
                          },
                          "end": {
                            "row": 3,
                            "column": 16
                          },
                          "text": "=="
                        },
                        {
                          "type": "null_literal",
                          "start": {
                            "row": 3,
                            "column": 16
                          },
                          "end": {
                            "row": 3,
                            "column": 20
                          },
                          "text": "null"
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start": {
                        "row": 3,
                        "column": 20
                      },
                      "end": {
                        "row": 3,
                        "column": 21
                      },
                      "text": ")"
                    }
                  ]
                },
                {
                  "type": "expression_statement",
                  "start": {
                    "row": 3,
                    "column": 22
                  },
                  "end": {
                    "row": 3,
                    "column": 48
                  },
                  "text": "domain = _labels.domain();",
                  "children": [
                    {
                      "type": "assignment_expression",
                      "start": {
                        "row": 3,
                        "column": 22
                      },
                      "end": {
                        "row": 3,
                        "column": 47
                      },
                      "text": "domain = _labels.domain()",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 3,
                            "column": 22
                          },
                          "end": {
                            "row": 3,
                            "column": 28
                          },
                          "text": "domain"
                        },
                        {
                          "type": "=",
                          "start": {
                            "row": 3,
                            "column": 29
                          },
                          "end": {
                            "row": 3,
                            "column": 30
                          },
                          "text": "="
                        },
                        {
                          "type": "method_invocation",
                          "start": {
                            "row": 3,
                            "column": 31
                          },
                          "end": {
                            "row": 3,
                            "column": 47
                          },
                          "text": "_labels.domain()",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 3,
                                "column": 31
                              },
                              "end": {
                                "row": 3,
                                "column": 38
                              },
                              "text": "_labels"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 3,
                                "column": 38
                              },
                              "end": {
                                "row": 3,
                                "column": 39
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 3,
                                "column": 39
                              },
                              "end": {
                                "row": 3,
                                "column": 45
                              },
                              "text": "domain"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 3,
                                "column": 45
                              },
                              "end": {
                                "row": 3,
                                "column": 47
                              },
                              "text": "()",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 3,
                                    "column": 45
                                  },
                                  "end": {
                                    "row": 3,
                                    "column": 46
                                  },
                                  "text": "("
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 3,
                                    "column": 46
                                  },
                                  "end": {
                                    "row": 3,
                                    "column": 47
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start": {
                        "row": 3,
                        "column": 47
                      },
                      "end": {
                        "row": 3,
                        "column": 48
                      },
                      "text": ";"
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 4,
                "column": 4
              },
              "end": {
                "row": 5,
                "column": 105
              },
              "text": "if (_labels == null || targetClassProbs == null)\n      throw new IllegalArgumentException(\"Missing actualLabels or predictedProbs for binomial metrics!\");",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 4,
                    "column": 4
                  },
                  "end": {
                    "row": 4,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "condition",
                  "start": {
                    "row": 4,
                    "column": 7
                  },
                  "end": {
                    "row": 4,
                    "column": 52
                  },
                  "text": "(_labels == null || targetClassProbs == null)",
                  "children": [
                    {
                      "type": "(",
                      "start": {
                        "row": 4,
                        "column": 7
                      },
                      "end": {
                        "row": 4,
                        "column": 8
                      },
                      "text": "("
                    },
                    {
                      "type": "binary_expression",
                      "start": {
                        "row": 4,
                        "column": 8
                      },
                      "end": {
                        "row": 4,
                        "column": 51
                      },
                      "text": "_labels == null || targetClassProbs == null",
                      "children": [
                        {
                          "type": "binary_expression",
                          "start": {
                            "row": 4,
                            "column": 8
                          },
                          "end": {
                            "row": 4,
                            "column": 23
                          },
                          "text": "_labels == null",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 4,
                                "column": 8
                              },
                              "end": {
                                "row": 4,
                                "column": 15
                              },
                              "text": "_labels"
                            },
                            {
                              "type": "==",
                              "start": {
                                "row": 4,
                                "column": 16
                              },
                              "end": {
                                "row": 4,
                                "column": 18
                              },
                              "text": "=="
                            },
                            {
                              "type": "null_literal",
                              "start": {
                                "row": 4,
                                "column": 19
                              },
                              "end": {
                                "row": 4,
                                "column": 23
                              },
                              "text": "null"
                            }
                          ]
                        },
                        {
                          "type": "||",
                          "start": {
                            "row": 4,
                            "column": 24
                          },
                          "end": {
                            "row": 4,
                            "column": 26
                          },
                          "text": "||"
                        },
                        {
                          "type": "binary_expression",
                          "start": {
                            "row": 4,
                            "column": 27
                          },
                          "end": {
                            "row": 4,
                            "column": 51
                          },
                          "text": "targetClassProbs == null",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 4,
                                "column": 27
                              },
                              "end": {
                                "row": 4,
                                "column": 43
                              },
                              "text": "targetClassProbs"
                            },
                            {
                              "type": "==",
                              "start": {
                                "row": 4,
                                "column": 44
                              },
                              "end": {
                                "row": 4,
                                "column": 46
                              },
                              "text": "=="
                            },
                            {
                              "type": "null_literal",
                              "start": {
                                "row": 4,
                                "column": 47
                              },
                              "end": {
                                "row": 4,
                                "column": 51
                              },
                              "text": "null"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start": {
                        "row": 4,
                        "column": 51
                      },
                      "end": {
                        "row": 4,
                        "column": 52
                      },
                      "text": ")"
                    }
                  ]
                },
                {
                  "type": "throw_statement",
                  "start": {
                    "row": 5,
                    "column": 6
                  },
                  "end": {
                    "row": 5,
                    "column": 105
                  },
                  "text": "throw new IllegalArgumentException(\"Missing actualLabels or predictedProbs for binomial metrics!\");",
                  "children": [
                    {
                      "type": "throw",
                      "start": {
                        "row": 5,
                        "column": 6
                      },
                      "end": {
                        "row": 5,
                        "column": 11
                      },
                      "text": "throw"
                    },
                    {
                      "type": "object_creation_expression",
                      "start": {
                        "row": 5,
                        "column": 12
                      },
                      "end": {
                        "row": 5,
                        "column": 104
                      },
                      "text": "new IllegalArgumentException(\"Missing actualLabels or predictedProbs for binomial metrics!\")",
                      "children": [
                        {
                          "type": "new",
                          "start": {
                            "row": 5,
                            "column": 12
                          },
                          "end": {
                            "row": 5,
                            "column": 15
                          },
                          "text": "new"
                        },
                        {
                          "type": "type_identifier",
                          "start": {
                            "row": 5,
                            "column": 16
                          },
                          "end": {
                            "row": 5,
                            "column": 40
                          },
                          "text": "IllegalArgumentException"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 5,
                            "column": 40
                          },
                          "end": {
                            "row": 5,
                            "column": 104
                          },
                          "text": "(\"Missing actualLabels or predictedProbs for binomial metrics!\")",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 5,
                                "column": 40
                              },
                              "end": {
                                "row": 5,
                                "column": 41
                              },
                              "text": "("
                            },
                            {
                              "type": "string_literal",
                              "start": {
                                "row": 5,
                                "column": 41
                              },
                              "end": {
                                "row": 5,
                                "column": 103
                              },
                              "text": "\"Missing actualLabels or predictedProbs for binomial metrics!\"",
                              "children": [
                                {
                                  "type": "\"",
                                  "start": {
                                    "row": 5,
                                    "column": 41
                                  },
                                  "end": {
                                    "row": 5,
                                    "column": 42
                                  },
                                  "text": "\""
                                },
                                {
                                  "type": "string_fragment",
                                  "start": {
                                    "row": 5,
                                    "column": 42
                                  },
                                  "end": {
                                    "row": 5,
                                    "column": 102
                                  },
                                  "text": "Missing actualLabels or predictedProbs for binomial metrics!"
                                },
                                {
                                  "type": "\"",
                                  "start": {
                                    "row": 5,
                                    "column": 102
                                  },
                                  "end": {
                                    "row": 5,
                                    "column": 103
                                  },
                                  "text": "\""
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 5,
                                "column": 103
                              },
                              "end": {
                                "row": 5,
                                "column": 104
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start": {
                        "row": 5,
                        "column": 104
                      },
                      "end": {
                        "row": 5,
                        "column": 105
                      },
                      "text": ";"
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 6,
                "column": 4
              },
              "end": {
                "row": 7,
                "column": 130
              },
              "text": "if (!targetClassProbs.isNumeric())\n      throw new IllegalArgumentException(\"Predicted probabilities must be numeric per-class probabilities for binomial metrics.\");",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 6,
                    "column": 4
                  },
                  "end": {
                    "row": 6,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "condition",
                  "start": {
                    "row": 6,
                    "column": 7
                  },
                  "end": {
                    "row": 6,
                    "column": 38
                  },
                  "text": "(!targetClassProbs.isNumeric())",
                  "children": [
                    {
                      "type": "(",
                      "start": {
                        "row": 6,
                        "column": 7
                      },
                      "end": {
                        "row": 6,
                        "column": 8
                      },
                      "text": "("
                    },
                    {
                      "type": "unary_expression",
                      "start": {
                        "row": 6,
                        "column": 8
                      },
                      "end": {
                        "row": 6,
                        "column": 37
                      },
                      "text": "!targetClassProbs.isNumeric()",
                      "children": [
                        {
                          "type": "!",
                          "start": {
                            "row": 6,
                            "column": 8
                          },
                          "end": {
                            "row": 6,
                            "column": 9
                          },
                          "text": "!"
                        },
                        {
                          "type": "method_invocation",
                          "start": {
                            "row": 6,
                            "column": 9
                          },
                          "end": {
                            "row": 6,
                            "column": 37
                          },
                          "text": "targetClassProbs.isNumeric()",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 6,
                                "column": 9
                              },
                              "end": {
                                "row": 6,
                                "column": 25
                              },
                              "text": "targetClassProbs"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 6,
                                "column": 25
                              },
                              "end": {
                                "row": 6,
                                "column": 26
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 6,
                                "column": 26
                              },
                              "end": {
                                "row": 6,
                                "column": 35
                              },
                              "text": "isNumeric"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 6,
                                "column": 35
                              },
                              "end": {
                                "row": 6,
                                "column": 37
                              },
                              "text": "()",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 6,
                                    "column": 35
                                  },
                                  "end": {
                                    "row": 6,
                                    "column": 36
                                  },
                                  "text": "("
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 6,
                                    "column": 36
                                  },
                                  "end": {
                                    "row": 6,
                                    "column": 37
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start": {
                        "row": 6,
                        "column": 37
                      },
                      "end": {
                        "row": 6,
                        "column": 38
                      },
                      "text": ")"
                    }
                  ]
                },
                {
                  "type": "throw_statement",
                  "start": {
                    "row": 7,
                    "column": 6
                  },
                  "end": {
                    "row": 7,
                    "column": 130
                  },
                  "text": "throw new IllegalArgumentException(\"Predicted probabilities must be numeric per-class probabilities for binomial metrics.\");",
                  "children": [
                    {
                      "type": "throw",
                      "start": {
                        "row": 7,
                        "column": 6
                      },
                      "end": {
                        "row": 7,
                        "column": 11
                      },
                      "text": "throw"
                    },
                    {
                      "type": "object_creation_expression",
                      "start": {
                        "row": 7,
                        "column": 12
                      },
                      "end": {
                        "row": 7,
                        "column": 129
                      },
                      "text": "new IllegalArgumentException(\"Predicted probabilities must be numeric per-class probabilities for binomial metrics.\")",
                      "children": [
                        {
                          "type": "new",
                          "start": {
                            "row": 7,
                            "column": 12
                          },
                          "end": {
                            "row": 7,
                            "column": 15
                          },
                          "text": "new"
                        },
                        {
                          "type": "type_identifier",
                          "start": {
                            "row": 7,
                            "column": 16
                          },
                          "end": {
                            "row": 7,
                            "column": 40
                          },
                          "text": "IllegalArgumentException"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 7,
                            "column": 40
                          },
                          "end": {
                            "row": 7,
                            "column": 129
                          },
                          "text": "(\"Predicted probabilities must be numeric per-class probabilities for binomial metrics.\")",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 7,
                                "column": 40
                              },
                              "end": {
                                "row": 7,
                                "column": 41
                              },
                              "text": "("
                            },
                            {
                              "type": "string_literal",
                              "start": {
                                "row": 7,
                                "column": 41
                              },
                              "end": {
                                "row": 7,
                                "column": 128
                              },
                              "text": "\"Predicted probabilities must be numeric per-class probabilities for binomial metrics.\"",
                              "children": [
                                {
                                  "type": "\"",
                                  "start": {
                                    "row": 7,
                                    "column": 41
                                  },
                                  "end": {
                                    "row": 7,
                                    "column": 42
                                  },
                                  "text": "\""
                                },
                                {
                                  "type": "string_fragment",
                                  "start": {
                                    "row": 7,
                                    "column": 42
                                  },
                                  "end": {
                                    "row": 7,
                                    "column": 127
                                  },
                                  "text": "Predicted probabilities must be numeric per-class probabilities for binomial metrics."
                                },
                                {
                                  "type": "\"",
                                  "start": {
                                    "row": 7,
                                    "column": 127
                                  },
                                  "end": {
                                    "row": 7,
                                    "column": 128
                                  },
                                  "text": "\""
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 7,
                                "column": 128
                              },
                              "end": {
                                "row": 7,
                                "column": 129
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start": {
                        "row": 7,
                        "column": 129
                      },
                      "end": {
                        "row": 7,
                        "column": 130
                      },
                      "text": ";"
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 8,
                "column": 4
              },
              "end": {
                "row": 9,
                "column": 114
              },
              "text": "if (targetClassProbs.min() < 0 || targetClassProbs.max() > 1)\n      throw new IllegalArgumentException(\"Predicted probabilities must be between 0 and 1 for binomial metrics.\");",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 8,
                    "column": 4
                  },
                  "end": {
                    "row": 8,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "condition",
                  "start": {
                    "row": 8,
                    "column": 7
                  },
                  "end": {
                    "row": 8,
                    "column": 65
                  },
                  "text": "(targetClassProbs.min() < 0 || targetClassProbs.max() > 1)",
                  "children": [
                    {
                      "type": "(",
                      "start": {
                        "row": 8,
                        "column": 7
                      },
                      "end": {
                        "row": 8,
                        "column": 8
                      },
                      "text": "("
                    },
                    {
                      "type": "binary_expression",
                      "start": {
                        "row": 8,
                        "column": 8
                      },
                      "end": {
                        "row": 8,
                        "column": 64
                      },
                      "text": "targetClassProbs.min() < 0 || targetClassProbs.max() > 1",
                      "children": [
                        {
                          "type": "binary_expression",
                          "start": {
                            "row": 8,
                            "column": 8
                          },
                          "end": {
                            "row": 8,
                            "column": 34
                          },
                          "text": "targetClassProbs.min() < 0",
                          "children": [
                            {
                              "type": "method_invocation",
                              "start": {
                                "row": 8,
                                "column": 8
                              },
                              "end": {
                                "row": 8,
                                "column": 30
                              },
                              "text": "targetClassProbs.min()",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 8,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 8,
                                    "column": 24
                                  },
                                  "text": "targetClassProbs"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 8,
                                    "column": 24
                                  },
                                  "end": {
                                    "row": 8,
                                    "column": 25
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 8,
                                    "column": 25
                                  },
                                  "end": {
                                    "row": 8,
                                    "column": 28
                                  },
                                  "text": "min"
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 8,
                                    "column": 28
                                  },
                                  "end": {
                                    "row": 8,
                                    "column": 30
                                  },
                                  "text": "()",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 8,
                                        "column": 28
                                      },
                                      "end": {
                                        "row": 8,
                                        "column": 29
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 8,
                                        "column": 29
                                      },
                                      "end": {
                                        "row": 8,
                                        "column": 30
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "<",
                              "start": {
                                "row": 8,
                                "column": 31
                              },
                              "end": {
                                "row": 8,
                                "column": 32
                              },
                              "text": "<"
                            },
                            {
                              "type": "decimal_integer_literal",
                              "start": {
                                "row": 8,
                                "column": 33
                              },
                              "end": {
                                "row": 8,
                                "column": 34
                              },
                              "text": "0"
                            }
                          ]
                        },
                        {
                          "type": "||",
                          "start": {
                            "row": 8,
                            "column": 35
                          },
                          "end": {
                            "row": 8,
                            "column": 37
                          },
                          "text": "||"
                        },
                        {
                          "type": "binary_expression",
                          "start": {
                            "row": 8,
                            "column": 38
                          },
                          "end": {
                            "row": 8,
                            "column": 64
                          },
                          "text": "targetClassProbs.max() > 1",
                          "children": [
                            {
                              "type": "method_invocation",
                              "start": {
                                "row": 8,
                                "column": 38
                              },
                              "end": {
                                "row": 8,
                                "column": 60
                              },
                              "text": "targetClassProbs.max()",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 8,
                                    "column": 38
                                  },
                                  "end": {
                                    "row": 8,
                                    "column": 54
                                  },
                                  "text": "targetClassProbs"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 8,
                                    "column": 54
                                  },
                                  "end": {
                                    "row": 8,
                                    "column": 55
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 8,
                                    "column": 55
                                  },
                                  "end": {
                                    "row": 8,
                                    "column": 58
                                  },
                                  "text": "max"
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 8,
                                    "column": 58
                                  },
                                  "end": {
                                    "row": 8,
                                    "column": 60
                                  },
                                  "text": "()",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 8,
                                        "column": 58
                                      },
                                      "end": {
                                        "row": 8,
                                        "column": 59
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 8,
                                        "column": 59
                                      },
                                      "end": {
                                        "row": 8,
                                        "column": 60
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ">",
                              "start": {
                                "row": 8,
                                "column": 61
                              },
                              "end": {
                                "row": 8,
                                "column": 62
                              },
                              "text": ">"
                            },
                            {
                              "type": "decimal_integer_literal",
                              "start": {
                                "row": 8,
                                "column": 63
                              },
                              "end": {
                                "row": 8,
                                "column": 64
                              },
                              "text": "1"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start": {
                        "row": 8,
                        "column": 64
                      },
                      "end": {
                        "row": 8,
                        "column": 65
                      },
                      "text": ")"
                    }
                  ]
                },
                {
                  "type": "throw_statement",
                  "start": {
                    "row": 9,
                    "column": 6
                  },
                  "end": {
                    "row": 9,
                    "column": 114
                  },
                  "text": "throw new IllegalArgumentException(\"Predicted probabilities must be between 0 and 1 for binomial metrics.\");",
                  "children": [
                    {
                      "type": "throw",
                      "start": {
                        "row": 9,
                        "column": 6
                      },
                      "end": {
                        "row": 9,
                        "column": 11
                      },
                      "text": "throw"
                    },
                    {
                      "type": "object_creation_expression",
                      "start": {
                        "row": 9,
                        "column": 12
                      },
                      "end": {
                        "row": 9,
                        "column": 113
                      },
                      "text": "new IllegalArgumentException(\"Predicted probabilities must be between 0 and 1 for binomial metrics.\")",
                      "children": [
                        {
                          "type": "new",
                          "start": {
                            "row": 9,
                            "column": 12
                          },
                          "end": {
                            "row": 9,
                            "column": 15
                          },
                          "text": "new"
                        },
                        {
                          "type": "type_identifier",
                          "start": {
                            "row": 9,
                            "column": 16
                          },
                          "end": {
                            "row": 9,
                            "column": 40
                          },
                          "text": "IllegalArgumentException"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 9,
                            "column": 40
                          },
                          "end": {
                            "row": 9,
                            "column": 113
                          },
                          "text": "(\"Predicted probabilities must be between 0 and 1 for binomial metrics.\")",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 9,
                                "column": 40
                              },
                              "end": {
                                "row": 9,
                                "column": 41
                              },
                              "text": "("
                            },
                            {
                              "type": "string_literal",
                              "start": {
                                "row": 9,
                                "column": 41
                              },
                              "end": {
                                "row": 9,
                                "column": 112
                              },
                              "text": "\"Predicted probabilities must be between 0 and 1 for binomial metrics.\"",
                              "children": [
                                {
                                  "type": "\"",
                                  "start": {
                                    "row": 9,
                                    "column": 41
                                  },
                                  "end": {
                                    "row": 9,
                                    "column": 42
                                  },
                                  "text": "\""
                                },
                                {
                                  "type": "string_fragment",
                                  "start": {
                                    "row": 9,
                                    "column": 42
                                  },
                                  "end": {
                                    "row": 9,
                                    "column": 111
                                  },
                                  "text": "Predicted probabilities must be between 0 and 1 for binomial metrics."
                                },
                                {
                                  "type": "\"",
                                  "start": {
                                    "row": 9,
                                    "column": 111
                                  },
                                  "end": {
                                    "row": 9,
                                    "column": 112
                                  },
                                  "text": "\""
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 9,
                                "column": 112
                              },
                              "end": {
                                "row": 9,
                                "column": 113
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start": {
                        "row": 9,
                        "column": 113
                      },
                      "end": {
                        "row": 9,
                        "column": 114
                      },
                      "text": ";"
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 10,
                "column": 4
              },
              "end": {
                "row": 11,
                "column": 138
              },
              "text": "if (domain.length!=2)\n      throw new IllegalArgumentException(\"Domain must have 2 class labels, but is \" + Arrays.toString(domain) + \" for binomial metrics.\");",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 10,
                    "column": 4
                  },
                  "end": {
                    "row": 10,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "condition",
                  "start": {
                    "row": 10,
                    "column": 7
                  },
                  "end": {
                    "row": 10,
                    "column": 25
                  },
                  "text": "(domain.length!=2)",
                  "children": [
                    {
                      "type": "(",
                      "start": {
                        "row": 10,
                        "column": 7
                      },
                      "end": {
                        "row": 10,
                        "column": 8
                      },
                      "text": "("
                    },
                    {
                      "type": "binary_expression",
                      "start": {
                        "row": 10,
                        "column": 8
                      },
                      "end": {
                        "row": 10,
                        "column": 24
                      },
                      "text": "domain.length!=2",
                      "children": [
                        {
                          "type": "field_access",
                          "start": {
                            "row": 10,
                            "column": 8
                          },
                          "end": {
                            "row": 10,
                            "column": 21
                          },
                          "text": "domain.length",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 10,
                                "column": 8
                              },
                              "end": {
                                "row": 10,
                                "column": 14
                              },
                              "text": "domain"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 10,
                                "column": 14
                              },
                              "end": {
                                "row": 10,
                                "column": 15
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 10,
                                "column": 15
                              },
                              "end": {
                                "row": 10,
                                "column": 21
                              },
                              "text": "length"
                            }
                          ]
                        },
                        {
                          "type": "!=",
                          "start": {
                            "row": 10,
                            "column": 21
                          },
                          "end": {
                            "row": 10,
                            "column": 23
                          },
                          "text": "!="
                        },
                        {
                          "type": "decimal_integer_literal",
                          "start": {
                            "row": 10,
                            "column": 23
                          },
                          "end": {
                            "row": 10,
                            "column": 24
                          },
                          "text": "2"
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start": {
                        "row": 10,
                        "column": 24
                      },
                      "end": {
                        "row": 10,
                        "column": 25
                      },
                      "text": ")"
                    }
                  ]
                },
                {
                  "type": "throw_statement",
                  "start": {
                    "row": 11,
                    "column": 6
                  },
                  "end": {
                    "row": 11,
                    "column": 138
                  },
                  "text": "throw new IllegalArgumentException(\"Domain must have 2 class labels, but is \" + Arrays.toString(domain) + \" for binomial metrics.\");",
                  "children": [
                    {
                      "type": "throw",
                      "start": {
                        "row": 11,
                        "column": 6
                      },
                      "end": {
                        "row": 11,
                        "column": 11
                      },
                      "text": "throw"
                    },
                    {
                      "type": "object_creation_expression",
                      "start": {
                        "row": 11,
                        "column": 12
                      },
                      "end": {
                        "row": 11,
                        "column": 137
                      },
                      "text": "new IllegalArgumentException(\"Domain must have 2 class labels, but is \" + Arrays.toString(domain) + \" for binomial metrics.\")",
                      "children": [
                        {
                          "type": "new",
                          "start": {
                            "row": 11,
                            "column": 12
                          },
                          "end": {
                            "row": 11,
                            "column": 15
                          },
                          "text": "new"
                        },
                        {
                          "type": "type_identifier",
                          "start": {
                            "row": 11,
                            "column": 16
                          },
                          "end": {
                            "row": 11,
                            "column": 40
                          },
                          "text": "IllegalArgumentException"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 11,
                            "column": 40
                          },
                          "end": {
                            "row": 11,
                            "column": 137
                          },
                          "text": "(\"Domain must have 2 class labels, but is \" + Arrays.toString(domain) + \" for binomial metrics.\")",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 11,
                                "column": 40
                              },
                              "end": {
                                "row": 11,
                                "column": 41
                              },
                              "text": "("
                            },
                            {
                              "type": "binary_expression",
                              "start": {
                                "row": 11,
                                "column": 41
                              },
                              "end": {
                                "row": 11,
                                "column": 136
                              },
                              "text": "\"Domain must have 2 class labels, but is \" + Arrays.toString(domain) + \" for binomial metrics.\"",
                              "children": [
                                {
                                  "type": "binary_expression",
                                  "start": {
                                    "row": 11,
                                    "column": 41
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 109
                                  },
                                  "text": "\"Domain must have 2 class labels, but is \" + Arrays.toString(domain)",
                                  "children": [
                                    {
                                      "type": "string_literal",
                                      "start": {
                                        "row": 11,
                                        "column": 41
                                      },
                                      "end": {
                                        "row": 11,
                                        "column": 83
                                      },
                                      "text": "\"Domain must have 2 class labels, but is \"",
                                      "children": [
                                        {
                                          "type": "\"",
                                          "start": {
                                            "row": 11,
                                            "column": 41
                                          },
                                          "end": {
                                            "row": 11,
                                            "column": 42
                                          },
                                          "text": "\""
                                        },
                                        {
                                          "type": "string_fragment",
                                          "start": {
                                            "row": 11,
                                            "column": 42
                                          },
                                          "end": {
                                            "row": 11,
                                            "column": 82
                                          },
                                          "text": "Domain must have 2 class labels, but is "
                                        },
                                        {
                                          "type": "\"",
                                          "start": {
                                            "row": 11,
                                            "column": 82
                                          },
                                          "end": {
                                            "row": 11,
                                            "column": 83
                                          },
                                          "text": "\""
                                        }
                                      ]
                                    },
                                    {
                                      "type": "+",
                                      "start": {
                                        "row": 11,
                                        "column": 84
                                      },
                                      "end": {
                                        "row": 11,
                                        "column": 85
                                      },
                                      "text": "+"
                                    },
                                    {
                                      "type": "method_invocation",
                                      "start": {
                                        "row": 11,
                                        "column": 86
                                      },
                                      "end": {
                                        "row": 11,
                                        "column": 109
                                      },
                                      "text": "Arrays.toString(domain)",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 11,
                                            "column": 86
                                          },
                                          "end": {
                                            "row": 11,
                                            "column": 92
                                          },
                                          "text": "Arrays"
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 11,
                                            "column": 92
                                          },
                                          "end": {
                                            "row": 11,
                                            "column": 93
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 11,
                                            "column": 93
                                          },
                                          "end": {
                                            "row": 11,
                                            "column": 101
                                          },
                                          "text": "toString"
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 11,
                                            "column": 101
                                          },
                                          "end": {
                                            "row": 11,
                                            "column": 109
                                          },
                                          "text": "(domain)",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 11,
                                                "column": 101
                                              },
                                              "end": {
                                                "row": 11,
                                                "column": 102
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 11,
                                                "column": 102
                                              },
                                              "end": {
                                                "row": 11,
                                                "column": 108
                                              },
                                              "text": "domain"
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 11,
                                                "column": 108
                                              },
                                              "end": {
                                                "row": 11,
                                                "column": 109
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "+",
                                  "start": {
                                    "row": 11,
                                    "column": 110
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 111
                                  },
                                  "text": "+"
                                },
                                {
                                  "type": "string_literal",
                                  "start": {
                                    "row": 11,
                                    "column": 112
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 136
                                  },
                                  "text": "\" for binomial metrics.\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start": {
                                        "row": 11,
                                        "column": 112
                                      },
                                      "end": {
                                        "row": 11,
                                        "column": 113
                                      },
                                      "text": "\""
                                    },
                                    {
                                      "type": "string_fragment",
                                      "start": {
                                        "row": 11,
                                        "column": 113
                                      },
                                      "end": {
                                        "row": 11,
                                        "column": 135
                                      },
                                      "text": " for binomial metrics."
                                    },
                                    {
                                      "type": "\"",
                                      "start": {
                                        "row": 11,
                                        "column": 135
                                      },
                                      "end": {
                                        "row": 11,
                                        "column": 136
                                      },
                                      "text": "\""
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 11,
                                "column": 136
                              },
                              "end": {
                                "row": 11,
                                "column": 137
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start": {
                        "row": 11,
                        "column": 137
                      },
                      "end": {
                        "row": 11,
                        "column": 138
                      },
                      "text": ";"
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 12,
                "column": 4
              },
              "end": {
                "row": 12,
                "column": 38
              },
              "text": "_labels = _labels.adaptTo(domain);",
              "children": [
                {
                  "type": "assignment_expression",
                  "start": {
                    "row": 12,
                    "column": 4
                  },
                  "end": {
                    "row": 12,
                    "column": 37
                  },
                  "text": "_labels = _labels.adaptTo(domain)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 12,
                        "column": 4
                      },
                      "end": {
                        "row": 12,
                        "column": 11
                      },
                      "text": "_labels"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 12,
                        "column": 12
                      },
                      "end": {
                        "row": 12,
                        "column": 13
                      },
                      "text": "="
                    },
                    {
                      "type": "method_invocation",
                      "start": {
                        "row": 12,
                        "column": 14
                      },
                      "end": {
                        "row": 12,
                        "column": 37
                      },
                      "text": "_labels.adaptTo(domain)",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 12,
                            "column": 14
                          },
                          "end": {
                            "row": 12,
                            "column": 21
                          },
                          "text": "_labels"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 12,
                            "column": 21
                          },
                          "end": {
                            "row": 12,
                            "column": 22
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 12,
                            "column": 22
                          },
                          "end": {
                            "row": 12,
                            "column": 29
                          },
                          "text": "adaptTo"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 12,
                            "column": 29
                          },
                          "end": {
                            "row": 12,
                            "column": 37
                          },
                          "text": "(domain)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 12,
                                "column": 29
                              },
                              "end": {
                                "row": 12,
                                "column": 30
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 12,
                                "column": 30
                              },
                              "end": {
                                "row": 12,
                                "column": 36
                              },
                              "text": "domain"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 12,
                                "column": 36
                              },
                              "end": {
                                "row": 12,
                                "column": 37
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 12,
                    "column": 37
                  },
                  "end": {
                    "row": 12,
                    "column": 38
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 13,
                "column": 4
              },
              "end": {
                "row": 14,
                "column": 156
              },
              "text": "if (_labels.cardinality()!=2)\n      throw new IllegalArgumentException(\"Adapted domain must have 2 class labels, but is \" + Arrays.toString(_labels.domain()) + \" for binomial metrics.\");",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 13,
                    "column": 4
                  },
                  "end": {
                    "row": 13,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "condition",
                  "start": {
                    "row": 13,
                    "column": 7
                  },
                  "end": {
                    "row": 13,
                    "column": 33
                  },
                  "text": "(_labels.cardinality()!=2)",
                  "children": [
                    {
                      "type": "(",
                      "start": {
                        "row": 13,
                        "column": 7
                      },
                      "end": {
                        "row": 13,
                        "column": 8
                      },
                      "text": "("
                    },
                    {
                      "type": "binary_expression",
                      "start": {
                        "row": 13,
                        "column": 8
                      },
                      "end": {
                        "row": 13,
                        "column": 32
                      },
                      "text": "_labels.cardinality()!=2",
                      "children": [
                        {
                          "type": "method_invocation",
                          "start": {
                            "row": 13,
                            "column": 8
                          },
                          "end": {
                            "row": 13,
                            "column": 29
                          },
                          "text": "_labels.cardinality()",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 13,
                                "column": 8
                              },
                              "end": {
                                "row": 13,
                                "column": 15
                              },
                              "text": "_labels"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 13,
                                "column": 15
                              },
                              "end": {
                                "row": 13,
                                "column": 16
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 13,
                                "column": 16
                              },
                              "end": {
                                "row": 13,
                                "column": 27
                              },
                              "text": "cardinality"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 13,
                                "column": 27
                              },
                              "end": {
                                "row": 13,
                                "column": 29
                              },
                              "text": "()",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 13,
                                    "column": 27
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 28
                                  },
                                  "text": "("
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 13,
                                    "column": 28
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 29
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "!=",
                          "start": {
                            "row": 13,
                            "column": 29
                          },
                          "end": {
                            "row": 13,
                            "column": 31
                          },
                          "text": "!="
                        },
                        {
                          "type": "decimal_integer_literal",
                          "start": {
                            "row": 13,
                            "column": 31
                          },
                          "end": {
                            "row": 13,
                            "column": 32
                          },
                          "text": "2"
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start": {
                        "row": 13,
                        "column": 32
                      },
                      "end": {
                        "row": 13,
                        "column": 33
                      },
                      "text": ")"
                    }
                  ]
                },
                {
                  "type": "throw_statement",
                  "start": {
                    "row": 14,
                    "column": 6
                  },
                  "end": {
                    "row": 14,
                    "column": 156
                  },
                  "text": "throw new IllegalArgumentException(\"Adapted domain must have 2 class labels, but is \" + Arrays.toString(_labels.domain()) + \" for binomial metrics.\");",
                  "children": [
                    {
                      "type": "throw",
                      "start": {
                        "row": 14,
                        "column": 6
                      },
                      "end": {
                        "row": 14,
                        "column": 11
                      },
                      "text": "throw"
                    },
                    {
                      "type": "object_creation_expression",
                      "start": {
                        "row": 14,
                        "column": 12
                      },
                      "end": {
                        "row": 14,
                        "column": 155
                      },
                      "text": "new IllegalArgumentException(\"Adapted domain must have 2 class labels, but is \" + Arrays.toString(_labels.domain()) + \" for binomial metrics.\")",
                      "children": [
                        {
                          "type": "new",
                          "start": {
                            "row": 14,
                            "column": 12
                          },
                          "end": {
                            "row": 14,
                            "column": 15
                          },
                          "text": "new"
                        },
                        {
                          "type": "type_identifier",
                          "start": {
                            "row": 14,
                            "column": 16
                          },
                          "end": {
                            "row": 14,
                            "column": 40
                          },
                          "text": "IllegalArgumentException"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 14,
                            "column": 40
                          },
                          "end": {
                            "row": 14,
                            "column": 155
                          },
                          "text": "(\"Adapted domain must have 2 class labels, but is \" + Arrays.toString(_labels.domain()) + \" for binomial metrics.\")",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 14,
                                "column": 40
                              },
                              "end": {
                                "row": 14,
                                "column": 41
                              },
                              "text": "("
                            },
                            {
                              "type": "binary_expression",
                              "start": {
                                "row": 14,
                                "column": 41
                              },
                              "end": {
                                "row": 14,
                                "column": 154
                              },
                              "text": "\"Adapted domain must have 2 class labels, but is \" + Arrays.toString(_labels.domain()) + \" for binomial metrics.\"",
                              "children": [
                                {
                                  "type": "binary_expression",
                                  "start": {
                                    "row": 14,
                                    "column": 41
                                  },
                                  "end": {
                                    "row": 14,
                                    "column": 127
                                  },
                                  "text": "\"Adapted domain must have 2 class labels, but is \" + Arrays.toString(_labels.domain())",
                                  "children": [
                                    {
                                      "type": "string_literal",
                                      "start": {
                                        "row": 14,
                                        "column": 41
                                      },
                                      "end": {
                                        "row": 14,
                                        "column": 91
                                      },
                                      "text": "\"Adapted domain must have 2 class labels, but is \"",
                                      "children": [
                                        {
                                          "type": "\"",
                                          "start": {
                                            "row": 14,
                                            "column": 41
                                          },
                                          "end": {
                                            "row": 14,
                                            "column": 42
                                          },
                                          "text": "\""
                                        },
                                        {
                                          "type": "string_fragment",
                                          "start": {
                                            "row": 14,
                                            "column": 42
                                          },
                                          "end": {
                                            "row": 14,
                                            "column": 90
                                          },
                                          "text": "Adapted domain must have 2 class labels, but is "
                                        },
                                        {
                                          "type": "\"",
                                          "start": {
                                            "row": 14,
                                            "column": 90
                                          },
                                          "end": {
                                            "row": 14,
                                            "column": 91
                                          },
                                          "text": "\""
                                        }
                                      ]
                                    },
                                    {
                                      "type": "+",
                                      "start": {
                                        "row": 14,
                                        "column": 92
                                      },
                                      "end": {
                                        "row": 14,
                                        "column": 93
                                      },
                                      "text": "+"
                                    },
                                    {
                                      "type": "method_invocation",
                                      "start": {
                                        "row": 14,
                                        "column": 94
                                      },
                                      "end": {
                                        "row": 14,
                                        "column": 127
                                      },
                                      "text": "Arrays.toString(_labels.domain())",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 14,
                                            "column": 94
                                          },
                                          "end": {
                                            "row": 14,
                                            "column": 100
                                          },
                                          "text": "Arrays"
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 14,
                                            "column": 100
                                          },
                                          "end": {
                                            "row": 14,
                                            "column": 101
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 14,
                                            "column": 101
                                          },
                                          "end": {
                                            "row": 14,
                                            "column": 109
                                          },
                                          "text": "toString"
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 14,
                                            "column": 109
                                          },
                                          "end": {
                                            "row": 14,
                                            "column": 127
                                          },
                                          "text": "(_labels.domain())",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 14,
                                                "column": 109
                                              },
                                              "end": {
                                                "row": 14,
                                                "column": 110
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "method_invocation",
                                              "start": {
                                                "row": 14,
                                                "column": 110
                                              },
                                              "end": {
                                                "row": 14,
                                                "column": 126
                                              },
                                              "text": "_labels.domain()",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 14,
                                                    "column": 110
                                                  },
                                                  "end": {
                                                    "row": 14,
                                                    "column": 117
                                                  },
                                                  "text": "_labels"
                                                },
                                                {
                                                  "type": ".",
                                                  "start": {
                                                    "row": 14,
                                                    "column": 117
                                                  },
                                                  "end": {
                                                    "row": 14,
                                                    "column": 118
                                                  },
                                                  "text": "."
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 14,
                                                    "column": 118
                                                  },
                                                  "end": {
                                                    "row": 14,
                                                    "column": 124
                                                  },
                                                  "text": "domain"
                                                },
                                                {
                                                  "type": "argument_list",
                                                  "start": {
                                                    "row": 14,
                                                    "column": 124
                                                  },
                                                  "end": {
                                                    "row": 14,
                                                    "column": 126
                                                  },
                                                  "text": "()",
                                                  "children": [
                                                    {
                                                      "type": "(",
                                                      "start": {
                                                        "row": 14,
                                                        "column": 124
                                                      },
                                                      "end": {
                                                        "row": 14,
                                                        "column": 125
                                                      },
                                                      "text": "("
                                                    },
                                                    {
                                                      "type": ")",
                                                      "start": {
                                                        "row": 14,
                                                        "column": 125
                                                      },
                                                      "end": {
                                                        "row": 14,
                                                        "column": 126
                                                      },
                                                      "text": ")"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 14,
                                                "column": 126
                                              },
                                              "end": {
                                                "row": 14,
                                                "column": 127
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "+",
                                  "start": {
                                    "row": 14,
                                    "column": 128
                                  },
                                  "end": {
                                    "row": 14,
                                    "column": 129
                                  },
                                  "text": "+"
                                },
                                {
                                  "type": "string_literal",
                                  "start": {
                                    "row": 14,
                                    "column": 130
                                  },
                                  "end": {
                                    "row": 14,
                                    "column": 154
                                  },
                                  "text": "\" for binomial metrics.\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start": {
                                        "row": 14,
                                        "column": 130
                                      },
                                      "end": {
                                        "row": 14,
                                        "column": 131
                                      },
                                      "text": "\""
                                    },
                                    {
                                      "type": "string_fragment",
                                      "start": {
                                        "row": 14,
                                        "column": 131
                                      },
                                      "end": {
                                        "row": 14,
                                        "column": 153
                                      },
                                      "text": " for binomial metrics."
                                    },
                                    {
                                      "type": "\"",
                                      "start": {
                                        "row": 14,
                                        "column": 153
                                      },
                                      "end": {
                                        "row": 14,
                                        "column": 154
                                      },
                                      "text": "\""
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 14,
                                "column": 154
                              },
                              "end": {
                                "row": 14,
                                "column": 155
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start": {
                        "row": 14,
                        "column": 155
                      },
                      "end": {
                        "row": 14,
                        "column": 156
                      },
                      "text": ";"
                    }
                  ]
                }
              ]
            },
            {
              "type": "local_variable_declaration",
              "start": {
                "row": 15,
                "column": 4
              },
              "end": {
                "row": 15,
                "column": 51
              },
              "text": "Frame predsLabel = new Frame(targetClassProbs);",
              "children": [
                {
                  "type": "type_identifier",
                  "start": {
                    "row": 15,
                    "column": 4
                  },
                  "end": {
                    "row": 15,
                    "column": 9
                  },
                  "text": "Frame"
                },
                {
                  "type": "variable_declarator",
                  "start": {
                    "row": 15,
                    "column": 10
                  },
                  "end": {
                    "row": 15,
                    "column": 50
                  },
                  "text": "predsLabel = new Frame(targetClassProbs)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 15,
                        "column": 10
                      },
                      "end": {
                        "row": 15,
                        "column": 20
                      },
                      "text": "predsLabel"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 15,
                        "column": 21
                      },
                      "end": {
                        "row": 15,
                        "column": 22
                      },
                      "text": "="
                    },
                    {
                      "type": "object_creation_expression",
                      "start": {
                        "row": 15,
                        "column": 23
                      },
                      "end": {
                        "row": 15,
                        "column": 50
                      },
                      "text": "new Frame(targetClassProbs)",
                      "children": [
                        {
                          "type": "new",
                          "start": {
                            "row": 15,
                            "column": 23
                          },
                          "end": {
                            "row": 15,
                            "column": 26
                          },
                          "text": "new"
                        },
                        {
                          "type": "type_identifier",
                          "start": {
                            "row": 15,
                            "column": 27
                          },
                          "end": {
                            "row": 15,
                            "column": 32
                          },
                          "text": "Frame"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 15,
                            "column": 32
                          },
                          "end": {
                            "row": 15,
                            "column": 50
                          },
                          "text": "(targetClassProbs)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 15,
                                "column": 32
                              },
                              "end": {
                                "row": 15,
                                "column": 33
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 15,
                                "column": 33
                              },
                              "end": {
                                "row": 15,
                                "column": 49
                              },
                              "text": "targetClassProbs"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 15,
                                "column": 49
                              },
                              "end": {
                                "row": 15,
                                "column": 50
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 15,
                    "column": 50
                  },
                  "end": {
                    "row": 15,
                    "column": 51
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 16,
                "column": 4
              },
              "end": {
                "row": 16,
                "column": 38
              },
              "text": "predsLabel.add(\"labels\", _labels);",
              "children": [
                {
                  "type": "method_invocation",
                  "start": {
                    "row": 16,
                    "column": 4
                  },
                  "end": {
                    "row": 16,
                    "column": 37
                  },
                  "text": "predsLabel.add(\"labels\", _labels)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 16,
                        "column": 4
                      },
                      "end": {
                        "row": 16,
                        "column": 14
                      },
                      "text": "predsLabel"
                    },
                    {
                      "type": ".",
                      "start": {
                        "row": 16,
                        "column": 14
                      },
                      "end": {
                        "row": 16,
                        "column": 15
                      },
                      "text": "."
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 16,
                        "column": 15
                      },
                      "end": {
                        "row": 16,
                        "column": 18
                      },
                      "text": "add"
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 16,
                        "column": 18
                      },
                      "end": {
                        "row": 16,
                        "column": 37
                      },
                      "text": "(\"labels\", _labels)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 16,
                            "column": 18
                          },
                          "end": {
                            "row": 16,
                            "column": 19
                          },
                          "text": "("
                        },
                        {
                          "type": "string_literal",
                          "start": {
                            "row": 16,
                            "column": 19
                          },
                          "end": {
                            "row": 16,
                            "column": 27
                          },
                          "text": "\"labels\"",
                          "children": [
                            {
                              "type": "\"",
                              "start": {
                                "row": 16,
                                "column": 19
                              },
                              "end": {
                                "row": 16,
                                "column": 20
                              },
                              "text": "\""
                            },
                            {
                              "type": "string_fragment",
                              "start": {
                                "row": 16,
                                "column": 20
                              },
                              "end": {
                                "row": 16,
                                "column": 26
                              },
                              "text": "labels"
                            },
                            {
                              "type": "\"",
                              "start": {
                                "row": 16,
                                "column": 26
                              },
                              "end": {
                                "row": 16,
                                "column": 27
                              },
                              "text": "\""
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 16,
                            "column": 27
                          },
                          "end": {
                            "row": 16,
                            "column": 28
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 16,
                            "column": 29
                          },
                          "end": {
                            "row": 16,
                            "column": 36
                          },
                          "text": "_labels"
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 16,
                            "column": 36
                          },
                          "end": {
                            "row": 16,
                            "column": 37
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 16,
                    "column": 37
                  },
                  "end": {
                    "row": 16,
                    "column": 38
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "local_variable_declaration",
              "start": {
                "row": 17,
                "column": 4
              },
              "end": {
                "row": 17,
                "column": 91
              },
              "text": "MetricBuilderBinomial mb = new BinomialMetrics(_labels.domain()).doAll(predsLabel)._mb;",
              "children": [
                {
                  "type": "type_identifier",
                  "start": {
                    "row": 17,
                    "column": 4
                  },
                  "end": {
                    "row": 17,
                    "column": 25
                  },
                  "text": "MetricBuilderBinomial"
                },
                {
                  "type": "variable_declarator",
                  "start": {
                    "row": 17,
                    "column": 26
                  },
                  "end": {
                    "row": 17,
                    "column": 90
                  },
                  "text": "mb = new BinomialMetrics(_labels.domain()).doAll(predsLabel)._mb",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 17,
                        "column": 26
                      },
                      "end": {
                        "row": 17,
                        "column": 28
                      },
                      "text": "mb"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 17,
                        "column": 29
                      },
                      "end": {
                        "row": 17,
                        "column": 30
                      },
                      "text": "="
                    },
                    {
                      "type": "field_access",
                      "start": {
                        "row": 17,
                        "column": 31
                      },
                      "end": {
                        "row": 17,
                        "column": 90
                      },
                      "text": "new BinomialMetrics(_labels.domain()).doAll(predsLabel)._mb",
                      "children": [
                        {
                          "type": "method_invocation",
                          "start": {
                            "row": 17,
                            "column": 31
                          },
                          "end": {
                            "row": 17,
                            "column": 86
                          },
                          "text": "new BinomialMetrics(_labels.domain()).doAll(predsLabel)",
                          "children": [
                            {
                              "type": "object_creation_expression",
                              "start": {
                                "row": 17,
                                "column": 31
                              },
                              "end": {
                                "row": 17,
                                "column": 68
                              },
                              "text": "new BinomialMetrics(_labels.domain())",
                              "children": [
                                {
                                  "type": "new",
                                  "start": {
                                    "row": 17,
                                    "column": 31
                                  },
                                  "end": {
                                    "row": 17,
                                    "column": 34
                                  },
                                  "text": "new"
                                },
                                {
                                  "type": "type_identifier",
                                  "start": {
                                    "row": 17,
                                    "column": 35
                                  },
                                  "end": {
                                    "row": 17,
                                    "column": 50
                                  },
                                  "text": "BinomialMetrics"
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 17,
                                    "column": 50
                                  },
                                  "end": {
                                    "row": 17,
                                    "column": 68
                                  },
                                  "text": "(_labels.domain())",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 17,
                                        "column": 50
                                      },
                                      "end": {
                                        "row": 17,
                                        "column": 51
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "method_invocation",
                                      "start": {
                                        "row": 17,
                                        "column": 51
                                      },
                                      "end": {
                                        "row": 17,
                                        "column": 67
                                      },
                                      "text": "_labels.domain()",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 17,
                                            "column": 51
                                          },
                                          "end": {
                                            "row": 17,
                                            "column": 58
                                          },
                                          "text": "_labels"
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 17,
                                            "column": 58
                                          },
                                          "end": {
                                            "row": 17,
                                            "column": 59
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 17,
                                            "column": 59
                                          },
                                          "end": {
                                            "row": 17,
                                            "column": 65
                                          },
                                          "text": "domain"
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 17,
                                            "column": 65
                                          },
                                          "end": {
                                            "row": 17,
                                            "column": 67
                                          },
                                          "text": "()",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 17,
                                                "column": 65
                                              },
                                              "end": {
                                                "row": 17,
                                                "column": 66
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 17,
                                                "column": 66
                                              },
                                              "end": {
                                                "row": 17,
                                                "column": 67
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 17,
                                        "column": 67
                                      },
                                      "end": {
                                        "row": 17,
                                        "column": 68
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 17,
                                "column": 68
                              },
                              "end": {
                                "row": 17,
                                "column": 69
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 17,
                                "column": 69
                              },
                              "end": {
                                "row": 17,
                                "column": 74
                              },
                              "text": "doAll"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 17,
                                "column": 74
                              },
                              "end": {
                                "row": 17,
                                "column": 86
                              },
                              "text": "(predsLabel)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 17,
                                    "column": 74
                                  },
                                  "end": {
                                    "row": 17,
                                    "column": 75
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 17,
                                    "column": 75
                                  },
                                  "end": {
                                    "row": 17,
                                    "column": 85
                                  },
                                  "text": "predsLabel"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 17,
                                    "column": 85
                                  },
                                  "end": {
                                    "row": 17,
                                    "column": 86
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 17,
                            "column": 86
                          },
                          "end": {
                            "row": 17,
                            "column": 87
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 17,
                            "column": 87
                          },
                          "end": {
                            "row": 17,
                            "column": 90
                          },
                          "text": "_mb"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 17,
                    "column": 90
                  },
                  "end": {
                    "row": 17,
                    "column": 91
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 18,
                "column": 4
              },
              "end": {
                "row": 18,
                "column": 21
              },
              "text": "_labels.remove();",
              "children": [
                {
                  "type": "method_invocation",
                  "start": {
                    "row": 18,
                    "column": 4
                  },
                  "end": {
                    "row": 18,
                    "column": 20
                  },
                  "text": "_labels.remove()",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 18,
                        "column": 4
                      },
                      "end": {
                        "row": 18,
                        "column": 11
                      },
                      "text": "_labels"
                    },
                    {
                      "type": ".",
                      "start": {
                        "row": 18,
                        "column": 11
                      },
                      "end": {
                        "row": 18,
                        "column": 12
                      },
                      "text": "."
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 18,
                        "column": 12
                      },
                      "end": {
                        "row": 18,
                        "column": 18
                      },
                      "text": "remove"
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 18,
                        "column": 18
                      },
                      "end": {
                        "row": 18,
                        "column": 20
                      },
                      "text": "()",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 18,
                            "column": 18
                          },
                          "end": {
                            "row": 18,
                            "column": 19
                          },
                          "text": "("
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 18,
                            "column": 19
                          },
                          "end": {
                            "row": 18,
                            "column": 20
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 18,
                    "column": 20
                  },
                  "end": {
                    "row": 18,
                    "column": 21
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "local_variable_declaration",
              "start": {
                "row": 19,
                "column": 4
              },
              "end": {
                "row": 19,
                "column": 46
              },
              "text": "Frame preds = new Frame(targetClassProbs);",
              "children": [
                {
                  "type": "type_identifier",
                  "start": {
                    "row": 19,
                    "column": 4
                  },
                  "end": {
                    "row": 19,
                    "column": 9
                  },
                  "text": "Frame"
                },
                {
                  "type": "variable_declarator",
                  "start": {
                    "row": 19,
                    "column": 10
                  },
                  "end": {
                    "row": 19,
                    "column": 45
                  },
                  "text": "preds = new Frame(targetClassProbs)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 19,
                        "column": 10
                      },
                      "end": {
                        "row": 19,
                        "column": 15
                      },
                      "text": "preds"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 19,
                        "column": 16
                      },
                      "end": {
                        "row": 19,
                        "column": 17
                      },
                      "text": "="
                    },
                    {
                      "type": "object_creation_expression",
                      "start": {
                        "row": 19,
                        "column": 18
                      },
                      "end": {
                        "row": 19,
                        "column": 45
                      },
                      "text": "new Frame(targetClassProbs)",
                      "children": [
                        {
                          "type": "new",
                          "start": {
                            "row": 19,
                            "column": 18
                          },
                          "end": {
                            "row": 19,
                            "column": 21
                          },
                          "text": "new"
                        },
                        {
                          "type": "type_identifier",
                          "start": {
                            "row": 19,
                            "column": 22
                          },
                          "end": {
                            "row": 19,
                            "column": 27
                          },
                          "text": "Frame"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 19,
                            "column": 27
                          },
                          "end": {
                            "row": 19,
                            "column": 45
                          },
                          "text": "(targetClassProbs)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 19,
                                "column": 27
                              },
                              "end": {
                                "row": 19,
                                "column": 28
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 19,
                                "column": 28
                              },
                              "end": {
                                "row": 19,
                                "column": 44
                              },
                              "text": "targetClassProbs"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 19,
                                "column": 44
                              },
                              "end": {
                                "row": 19,
                                "column": 45
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 19,
                    "column": 45
                  },
                  "end": {
                    "row": 19,
                    "column": 46
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "local_variable_declaration",
              "start": {
                "row": 20,
                "column": 4
              },
              "end": {
                "row": 20,
                "column": 103
              },
              "text": "ModelMetricsBinomial mm = (ModelMetricsBinomial)mb.makeModelMetrics(null, predsLabel, null, preds);",
              "children": [
                {
                  "type": "type_identifier",
                  "start": {
                    "row": 20,
                    "column": 4
                  },
                  "end": {
                    "row": 20,
                    "column": 24
                  },
                  "text": "ModelMetricsBinomial"
                },
                {
                  "type": "variable_declarator",
                  "start": {
                    "row": 20,
                    "column": 25
                  },
                  "end": {
                    "row": 20,
                    "column": 102
                  },
                  "text": "mm = (ModelMetricsBinomial)mb.makeModelMetrics(null, predsLabel, null, preds)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 20,
                        "column": 25
                      },
                      "end": {
                        "row": 20,
                        "column": 27
                      },
                      "text": "mm"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 20,
                        "column": 28
                      },
                      "end": {
                        "row": 20,
                        "column": 29
                      },
                      "text": "="
                    },
                    {
                      "type": "cast_expression",
                      "start": {
                        "row": 20,
                        "column": 30
                      },
                      "end": {
                        "row": 20,
                        "column": 102
                      },
                      "text": "(ModelMetricsBinomial)mb.makeModelMetrics(null, predsLabel, null, preds)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 20,
                            "column": 30
                          },
                          "end": {
                            "row": 20,
                            "column": 31
                          },
                          "text": "("
                        },
                        {
                          "type": "type_identifier",
                          "start": {
                            "row": 20,
                            "column": 31
                          },
                          "end": {
                            "row": 20,
                            "column": 51
                          },
                          "text": "ModelMetricsBinomial"
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 20,
                            "column": 51
                          },
                          "end": {
                            "row": 20,
                            "column": 52
                          },
                          "text": ")"
                        },
                        {
                          "type": "method_invocation",
                          "start": {
                            "row": 20,
                            "column": 52
                          },
                          "end": {
                            "row": 20,
                            "column": 102
                          },
                          "text": "mb.makeModelMetrics(null, predsLabel, null, preds)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 20,
                                "column": 52
                              },
                              "end": {
                                "row": 20,
                                "column": 54
                              },
                              "text": "mb"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 20,
                                "column": 54
                              },
                              "end": {
                                "row": 20,
                                "column": 55
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 20,
                                "column": 55
                              },
                              "end": {
                                "row": 20,
                                "column": 71
                              },
                              "text": "makeModelMetrics"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 20,
                                "column": 71
                              },
                              "end": {
                                "row": 20,
                                "column": 102
                              },
                              "text": "(null, predsLabel, null, preds)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 20,
                                    "column": 71
                                  },
                                  "end": {
                                    "row": 20,
                                    "column": 72
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "null_literal",
                                  "start": {
                                    "row": 20,
                                    "column": 72
                                  },
                                  "end": {
                                    "row": 20,
                                    "column": 76
                                  },
                                  "text": "null"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 20,
                                    "column": 76
                                  },
                                  "end": {
                                    "row": 20,
                                    "column": 77
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 20,
                                    "column": 78
                                  },
                                  "end": {
                                    "row": 20,
                                    "column": 88
                                  },
                                  "text": "predsLabel"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 20,
                                    "column": 88
                                  },
                                  "end": {
                                    "row": 20,
                                    "column": 89
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "null_literal",
                                  "start": {
                                    "row": 20,
                                    "column": 90
                                  },
                                  "end": {
                                    "row": 20,
                                    "column": 94
                                  },
                                  "text": "null"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 20,
                                    "column": 94
                                  },
                                  "end": {
                                    "row": 20,
                                    "column": 95
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 20,
                                    "column": 96
                                  },
                                  "end": {
                                    "row": 20,
                                    "column": 101
                                  },
                                  "text": "preds"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 20,
                                    "column": 101
                                  },
                                  "end": {
                                    "row": 20,
                                    "column": 102
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 20,
                    "column": 102
                  },
                  "end": {
                    "row": 20,
                    "column": 103
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 21,
                "column": 4
              },
              "end": {
                "row": 21,
                "column": 140
              },
              "text": "mm._description = \"Computed on user-given predictions and labels, using F1-optimal threshold: \" + mm.auc_obj().defaultThreshold() + \".\";",
              "children": [
                {
                  "type": "assignment_expression",
                  "start": {
                    "row": 21,
                    "column": 4
                  },
                  "end": {
                    "row": 21,
                    "column": 139
                  },
                  "text": "mm._description = \"Computed on user-given predictions and labels, using F1-optimal threshold: \" + mm.auc_obj().defaultThreshold() + \".\"",
                  "children": [
                    {
                      "type": "field_access",
                      "start": {
                        "row": 21,
                        "column": 4
                      },
                      "end": {
                        "row": 21,
                        "column": 19
                      },
                      "text": "mm._description",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 21,
                            "column": 4
                          },
                          "end": {
                            "row": 21,
                            "column": 6
                          },
                          "text": "mm"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 21,
                            "column": 6
                          },
                          "end": {
                            "row": 21,
                            "column": 7
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 21,
                            "column": 7
                          },
                          "end": {
                            "row": 21,
                            "column": 19
                          },
                          "text": "_description"
                        }
                      ]
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 21,
                        "column": 20
                      },
                      "end": {
                        "row": 21,
                        "column": 21
                      },
                      "text": "="
                    },
                    {
                      "type": "binary_expression",
                      "start": {
                        "row": 21,
                        "column": 22
                      },
                      "end": {
                        "row": 21,
                        "column": 139
                      },
                      "text": "\"Computed on user-given predictions and labels, using F1-optimal threshold: \" + mm.auc_obj().defaultThreshold() + \".\"",
                      "children": [
                        {
                          "type": "binary_expression",
                          "start": {
                            "row": 21,
                            "column": 22
                          },
                          "end": {
                            "row": 21,
                            "column": 133
                          },
                          "text": "\"Computed on user-given predictions and labels, using F1-optimal threshold: \" + mm.auc_obj().defaultThreshold()",
                          "children": [
                            {
                              "type": "string_literal",
                              "start": {
                                "row": 21,
                                "column": 22
                              },
                              "end": {
                                "row": 21,
                                "column": 99
                              },
                              "text": "\"Computed on user-given predictions and labels, using F1-optimal threshold: \"",
                              "children": [
                                {
                                  "type": "\"",
                                  "start": {
                                    "row": 21,
                                    "column": 22
                                  },
                                  "end": {
                                    "row": 21,
                                    "column": 23
                                  },
                                  "text": "\""
                                },
                                {
                                  "type": "string_fragment",
                                  "start": {
                                    "row": 21,
                                    "column": 23
                                  },
                                  "end": {
                                    "row": 21,
                                    "column": 98
                                  },
                                  "text": "Computed on user-given predictions and labels, using F1-optimal threshold: "
                                },
                                {
                                  "type": "\"",
                                  "start": {
                                    "row": 21,
                                    "column": 98
                                  },
                                  "end": {
                                    "row": 21,
                                    "column": 99
                                  },
                                  "text": "\""
                                }
                              ]
                            },
                            {
                              "type": "+",
                              "start": {
                                "row": 21,
                                "column": 100
                              },
                              "end": {
                                "row": 21,
                                "column": 101
                              },
                              "text": "+"
                            },
                            {
                              "type": "method_invocation",
                              "start": {
                                "row": 21,
                                "column": 102
                              },
                              "end": {
                                "row": 21,
                                "column": 133
                              },
                              "text": "mm.auc_obj().defaultThreshold()",
                              "children": [
                                {
                                  "type": "method_invocation",
                                  "start": {
                                    "row": 21,
                                    "column": 102
                                  },
                                  "end": {
                                    "row": 21,
                                    "column": 114
                                  },
                                  "text": "mm.auc_obj()",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 21,
                                        "column": 102
                                      },
                                      "end": {
                                        "row": 21,
                                        "column": 104
                                      },
                                      "text": "mm"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 21,
                                        "column": 104
                                      },
                                      "end": {
                                        "row": 21,
                                        "column": 105
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 21,
                                        "column": 105
                                      },
                                      "end": {
                                        "row": 21,
                                        "column": 112
                                      },
                                      "text": "auc_obj"
                                    },
                                    {
                                      "type": "argument_list",
                                      "start": {
                                        "row": 21,
                                        "column": 112
                                      },
                                      "end": {
                                        "row": 21,
                                        "column": 114
                                      },
                                      "text": "()",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 21,
                                            "column": 112
                                          },
                                          "end": {
                                            "row": 21,
                                            "column": 113
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 21,
                                            "column": 113
                                          },
                                          "end": {
                                            "row": 21,
                                            "column": 114
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 21,
                                    "column": 114
                                  },
                                  "end": {
                                    "row": 21,
                                    "column": 115
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 21,
                                    "column": 115
                                  },
                                  "end": {
                                    "row": 21,
                                    "column": 131
                                  },
                                  "text": "defaultThreshold"
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 21,
                                    "column": 131
                                  },
                                  "end": {
                                    "row": 21,
                                    "column": 133
                                  },
                                  "text": "()",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 21,
                                        "column": 131
                                      },
                                      "end": {
                                        "row": 21,
                                        "column": 132
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 21,
                                        "column": 132
                                      },
                                      "end": {
                                        "row": 21,
                                        "column": 133
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "+",
                          "start": {
                            "row": 21,
                            "column": 134
                          },
                          "end": {
                            "row": 21,
                            "column": 135
                          },
                          "text": "+"
                        },
                        {
                          "type": "string_literal",
                          "start": {
                            "row": 21,
                            "column": 136
                          },
                          "end": {
                            "row": 21,
                            "column": 139
                          },
                          "text": "\".\"",
                          "children": [
                            {
                              "type": "\"",
                              "start": {
                                "row": 21,
                                "column": 136
                              },
                              "end": {
                                "row": 21,
                                "column": 137
                              },
                              "text": "\""
                            },
                            {
                              "type": "string_fragment",
                              "start": {
                                "row": 21,
                                "column": 137
                              },
                              "end": {
                                "row": 21,
                                "column": 138
                              },
                              "text": "."
                            },
                            {
                              "type": "\"",
                              "start": {
                                "row": 21,
                                "column": 138
                              },
                              "end": {
                                "row": 21,
                                "column": 139
                              },
                              "text": "\""
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 21,
                    "column": 139
                  },
                  "end": {
                    "row": 21,
                    "column": 140
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 22,
                "column": 4
              },
              "end": {
                "row": 22,
                "column": 17
              },
              "text": "Scope.exit();",
              "children": [
                {
                  "type": "method_invocation",
                  "start": {
                    "row": 22,
                    "column": 4
                  },
                  "end": {
                    "row": 22,
                    "column": 16
                  },
                  "text": "Scope.exit()",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 22,
                        "column": 4
                      },
                      "end": {
                        "row": 22,
                        "column": 9
                      },
                      "text": "Scope"
                    },
                    {
                      "type": ".",
                      "start": {
                        "row": 22,
                        "column": 9
                      },
                      "end": {
                        "row": 22,
                        "column": 10
                      },
                      "text": "."
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 22,
                        "column": 10
                      },
                      "end": {
                        "row": 22,
                        "column": 14
                      },
                      "text": "exit"
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 22,
                        "column": 14
                      },
                      "end": {
                        "row": 22,
                        "column": 16
                      },
                      "text": "()",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 22,
                            "column": 14
                          },
                          "end": {
                            "row": 22,
                            "column": 15
                          },
                          "text": "("
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 22,
                            "column": 15
                          },
                          "end": {
                            "row": 22,
                            "column": 16
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 22,
                    "column": 16
                  },
                  "end": {
                    "row": 22,
                    "column": 17
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 23,
                "column": 4
              },
              "end": {
                "row": 23,
                "column": 14
              },
              "text": "return mm;",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 23,
                    "column": 4
                  },
                  "end": {
                    "row": 23,
                    "column": 10
                  },
                  "text": "return"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 23,
                    "column": 11
                  },
                  "end": {
                    "row": 23,
                    "column": 13
                  },
                  "text": "mm"
                },
                {
                  "type": ";",
                  "start": {
                    "row": 23,
                    "column": 13
                  },
                  "end": {
                    "row": 23,
                    "column": 14
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "}",
              "start": {
                "row": 24,
                "column": 2
              },
              "end": {
                "row": 24,
                "column": 3
              },
              "text": "}"
            }
          ]
        }
      ]
    }
  ]
}