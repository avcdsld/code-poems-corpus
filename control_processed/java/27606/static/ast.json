{
  "type": "program",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 46,
    "column": 5
  },
  "text": "private CompletableFuture<Boolean> abortTransaction(OperationContext context, String scope, String stream, long requestId) {\n        return streamMetadataStore.getActiveTxns(scope, stream, context, executor)\n                .thenCompose(activeTxns -> {\n                    if (activeTxns == null || activeTxns.isEmpty()) {\n                        return CompletableFuture.completedFuture(true);\n                    } else {\n                        // abort transactions\n                        return Futures.allOf(activeTxns.entrySet().stream().map(txIdPair -> {\n                            CompletableFuture<Void> voidCompletableFuture;\n                            if (txIdPair.getValue().getTxnStatus().equals(TxnStatus.OPEN)) {\n                                voidCompletableFuture = Futures.toVoid(streamTransactionMetadataTasks\n                                        .abortTxn(scope, stream, txIdPair.getKey(), null, context)\n                                        .exceptionally(e -> {\n                                            Throwable cause = Exceptions.unwrap(e);\n                                            if (cause instanceof StoreException.IllegalStateException ||\n                                                    cause instanceof StoreException.WriteConflictException ||\n                                                    cause instanceof StoreException.DataNotFoundException) {\n                                                // IllegalStateException : The transaction is already in the process of being\n                                                // completed. Ignore\n                                                // WriteConflictException : Another thread is updating the transaction record.\n                                                // ignore. We will effectively retry cleaning up the transaction if it is not\n                                                // already being aborted.\n                                                // DataNotFoundException: If transaction metadata is cleaned up after reading list\n                                                // of active segments\n                                                log.debug(requestId, \"A known exception thrown during seal stream \" +\n                                                        \"while trying to abort transaction on stream {}/{}\", scope, stream, cause);\n                                            } else {\n                                                // throw the original exception\n                                                // Note: we can ignore this error because if there are transactions found on a stream,\n                                                // seal stream reposts the event back into request stream.\n                                                // So in subsequent iteration it will reattempt to abort all active transactions.\n                                                // This is a valid course of action because it is important to understand that\n                                                // all transactions are completable (either via abort of commit).\n                                                log.warn(requestId, \"Exception thrown during seal stream while trying \" +\n                                                        \"to abort transaction on stream {}/{}\", scope, stream, cause);\n                                            }\n                                            return null;\n                                        }));\n                            } else {\n                                voidCompletableFuture = CompletableFuture.completedFuture(null);\n                            }\n\n                            return voidCompletableFuture;\n                        }).collect(Collectors.toList())).thenApply(v -> false);\n                    }\n                });\n    }",
  "children": [
    {
      "type": "method_declaration",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 46,
        "column": 5
      },
      "text": "private CompletableFuture<Boolean> abortTransaction(OperationContext context, String scope, String stream, long requestId) {\n        return streamMetadataStore.getActiveTxns(scope, stream, context, executor)\n                .thenCompose(activeTxns -> {\n                    if (activeTxns == null || activeTxns.isEmpty()) {\n                        return CompletableFuture.completedFuture(true);\n                    } else {\n                        // abort transactions\n                        return Futures.allOf(activeTxns.entrySet().stream().map(txIdPair -> {\n                            CompletableFuture<Void> voidCompletableFuture;\n                            if (txIdPair.getValue().getTxnStatus().equals(TxnStatus.OPEN)) {\n                                voidCompletableFuture = Futures.toVoid(streamTransactionMetadataTasks\n                                        .abortTxn(scope, stream, txIdPair.getKey(), null, context)\n                                        .exceptionally(e -> {\n                                            Throwable cause = Exceptions.unwrap(e);\n                                            if (cause instanceof StoreException.IllegalStateException ||\n                                                    cause instanceof StoreException.WriteConflictException ||\n                                                    cause instanceof StoreException.DataNotFoundException) {\n                                                // IllegalStateException : The transaction is already in the process of being\n                                                // completed. Ignore\n                                                // WriteConflictException : Another thread is updating the transaction record.\n                                                // ignore. We will effectively retry cleaning up the transaction if it is not\n                                                // already being aborted.\n                                                // DataNotFoundException: If transaction metadata is cleaned up after reading list\n                                                // of active segments\n                                                log.debug(requestId, \"A known exception thrown during seal stream \" +\n                                                        \"while trying to abort transaction on stream {}/{}\", scope, stream, cause);\n                                            } else {\n                                                // throw the original exception\n                                                // Note: we can ignore this error because if there are transactions found on a stream,\n                                                // seal stream reposts the event back into request stream.\n                                                // So in subsequent iteration it will reattempt to abort all active transactions.\n                                                // This is a valid course of action because it is important to understand that\n                                                // all transactions are completable (either via abort of commit).\n                                                log.warn(requestId, \"Exception thrown during seal stream while trying \" +\n                                                        \"to abort transaction on stream {}/{}\", scope, stream, cause);\n                                            }\n                                            return null;\n                                        }));\n                            } else {\n                                voidCompletableFuture = CompletableFuture.completedFuture(null);\n                            }\n\n                            return voidCompletableFuture;\n                        }).collect(Collectors.toList())).thenApply(v -> false);\n                    }\n                });\n    }",
      "children": [
        {
          "type": "modifiers",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 7
          },
          "text": "private",
          "children": [
            {
              "type": "private",
              "start": {
                "row": 0,
                "column": 0
              },
              "end": {
                "row": 0,
                "column": 7
              },
              "text": "private"
            }
          ]
        },
        {
          "type": "generic_type",
          "start": {
            "row": 0,
            "column": 8
          },
          "end": {
            "row": 0,
            "column": 34
          },
          "text": "CompletableFuture<Boolean>",
          "children": [
            {
              "type": "type_identifier",
              "start": {
                "row": 0,
                "column": 8
              },
              "end": {
                "row": 0,
                "column": 25
              },
              "text": "CompletableFuture"
            },
            {
              "type": "type_arguments",
              "start": {
                "row": 0,
                "column": 25
              },
              "end": {
                "row": 0,
                "column": 34
              },
              "text": "<Boolean>",
              "children": [
                {
                  "type": "<",
                  "start": {
                    "row": 0,
                    "column": 25
                  },
                  "end": {
                    "row": 0,
                    "column": 26
                  },
                  "text": "<"
                },
                {
                  "type": "type_identifier",
                  "start": {
                    "row": 0,
                    "column": 26
                  },
                  "end": {
                    "row": 0,
                    "column": 33
                  },
                  "text": "Boolean"
                },
                {
                  "type": ">",
                  "start": {
                    "row": 0,
                    "column": 33
                  },
                  "end": {
                    "row": 0,
                    "column": 34
                  },
                  "text": ">"
                }
              ]
            }
          ]
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 35
          },
          "end": {
            "row": 0,
            "column": 51
          },
          "text": "abortTransaction"
        },
        {
          "type": "formal_parameters",
          "start": {
            "row": 0,
            "column": 51
          },
          "end": {
            "row": 0,
            "column": 122
          },
          "text": "(OperationContext context, String scope, String stream, long requestId)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 51
              },
              "end": {
                "row": 0,
                "column": 52
              },
              "text": "("
            },
            {
              "type": "formal_parameter",
              "start": {
                "row": 0,
                "column": 52
              },
              "end": {
                "row": 0,
                "column": 76
              },
              "text": "OperationContext context",
              "children": [
                {
                  "type": "type_identifier",
                  "start": {
                    "row": 0,
                    "column": 52
                  },
                  "end": {
                    "row": 0,
                    "column": 68
                  },
                  "text": "OperationContext"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 69
                  },
                  "end": {
                    "row": 0,
                    "column": 76
                  },
                  "text": "context"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 76
              },
              "end": {
                "row": 0,
                "column": 77
              },
              "text": ","
            },
            {
              "type": "formal_parameter",
              "start": {
                "row": 0,
                "column": 78
              },
              "end": {
                "row": 0,
                "column": 90
              },
              "text": "String scope",
              "children": [
                {
                  "type": "type_identifier",
                  "start": {
                    "row": 0,
                    "column": 78
                  },
                  "end": {
                    "row": 0,
                    "column": 84
                  },
                  "text": "String"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 85
                  },
                  "end": {
                    "row": 0,
                    "column": 90
                  },
                  "text": "scope"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 90
              },
              "end": {
                "row": 0,
                "column": 91
              },
              "text": ","
            },
            {
              "type": "formal_parameter",
              "start": {
                "row": 0,
                "column": 92
              },
              "end": {
                "row": 0,
                "column": 105
              },
              "text": "String stream",
              "children": [
                {
                  "type": "type_identifier",
                  "start": {
                    "row": 0,
                    "column": 92
                  },
                  "end": {
                    "row": 0,
                    "column": 98
                  },
                  "text": "String"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 99
                  },
                  "end": {
                    "row": 0,
                    "column": 105
                  },
                  "text": "stream"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 105
              },
              "end": {
                "row": 0,
                "column": 106
              },
              "text": ","
            },
            {
              "type": "formal_parameter",
              "start": {
                "row": 0,
                "column": 107
              },
              "end": {
                "row": 0,
                "column": 121
              },
              "text": "long requestId",
              "children": [
                {
                  "type": "integral_type",
                  "start": {
                    "row": 0,
                    "column": 107
                  },
                  "end": {
                    "row": 0,
                    "column": 111
                  },
                  "text": "long",
                  "children": [
                    {
                      "type": "long",
                      "start": {
                        "row": 0,
                        "column": 107
                      },
                      "end": {
                        "row": 0,
                        "column": 111
                      },
                      "text": "long"
                    }
                  ]
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 112
                  },
                  "end": {
                    "row": 0,
                    "column": 121
                  },
                  "text": "requestId"
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 121
              },
              "end": {
                "row": 0,
                "column": 122
              },
              "text": ")"
            }
          ]
        },
        {
          "type": "block",
          "start": {
            "row": 0,
            "column": 123
          },
          "end": {
            "row": 46,
            "column": 5
          },
          "text": "{\n        return streamMetadataStore.getActiveTxns(scope, stream, context, executor)\n                .thenCompose(activeTxns -> {\n                    if (activeTxns == null || activeTxns.isEmpty()) {\n                        return CompletableFuture.completedFuture(true);\n                    } else {\n                        // abort transactions\n                        return Futures.allOf(activeTxns.entrySet().stream().map(txIdPair -> {\n                            CompletableFuture<Void> voidCompletableFuture;\n                            if (txIdPair.getValue().getTxnStatus().equals(TxnStatus.OPEN)) {\n                                voidCompletableFuture = Futures.toVoid(streamTransactionMetadataTasks\n                                        .abortTxn(scope, stream, txIdPair.getKey(), null, context)\n                                        .exceptionally(e -> {\n                                            Throwable cause = Exceptions.unwrap(e);\n                                            if (cause instanceof StoreException.IllegalStateException ||\n                                                    cause instanceof StoreException.WriteConflictException ||\n                                                    cause instanceof StoreException.DataNotFoundException) {\n                                                // IllegalStateException : The transaction is already in the process of being\n                                                // completed. Ignore\n                                                // WriteConflictException : Another thread is updating the transaction record.\n                                                // ignore. We will effectively retry cleaning up the transaction if it is not\n                                                // already being aborted.\n                                                // DataNotFoundException: If transaction metadata is cleaned up after reading list\n                                                // of active segments\n                                                log.debug(requestId, \"A known exception thrown during seal stream \" +\n                                                        \"while trying to abort transaction on stream {}/{}\", scope, stream, cause);\n                                            } else {\n                                                // throw the original exception\n                                                // Note: we can ignore this error because if there are transactions found on a stream,\n                                                // seal stream reposts the event back into request stream.\n                                                // So in subsequent iteration it will reattempt to abort all active transactions.\n                                                // This is a valid course of action because it is important to understand that\n                                                // all transactions are completable (either via abort of commit).\n                                                log.warn(requestId, \"Exception thrown during seal stream while trying \" +\n                                                        \"to abort transaction on stream {}/{}\", scope, stream, cause);\n                                            }\n                                            return null;\n                                        }));\n                            } else {\n                                voidCompletableFuture = CompletableFuture.completedFuture(null);\n                            }\n\n                            return voidCompletableFuture;\n                        }).collect(Collectors.toList())).thenApply(v -> false);\n                    }\n                });\n    }",
          "children": [
            {
              "type": "{",
              "start": {
                "row": 0,
                "column": 123
              },
              "end": {
                "row": 0,
                "column": 124
              },
              "text": "{"
            },
            {
              "type": "return_statement",
              "start": {
                "row": 1,
                "column": 8
              },
              "end": {
                "row": 45,
                "column": 19
              },
              "text": "return streamMetadataStore.getActiveTxns(scope, stream, context, executor)\n                .thenCompose(activeTxns -> {\n                    if (activeTxns == null || activeTxns.isEmpty()) {\n                        return CompletableFuture.completedFuture(true);\n                    } else {\n                        // abort transactions\n                        return Futures.allOf(activeTxns.entrySet().stream().map(txIdPair -> {\n                            CompletableFuture<Void> voidCompletableFuture;\n                            if (txIdPair.getValue().getTxnStatus().equals(TxnStatus.OPEN)) {\n                                voidCompletableFuture = Futures.toVoid(streamTransactionMetadataTasks\n                                        .abortTxn(scope, stream, txIdPair.getKey(), null, context)\n                                        .exceptionally(e -> {\n                                            Throwable cause = Exceptions.unwrap(e);\n                                            if (cause instanceof StoreException.IllegalStateException ||\n                                                    cause instanceof StoreException.WriteConflictException ||\n                                                    cause instanceof StoreException.DataNotFoundException) {\n                                                // IllegalStateException : The transaction is already in the process of being\n                                                // completed. Ignore\n                                                // WriteConflictException : Another thread is updating the transaction record.\n                                                // ignore. We will effectively retry cleaning up the transaction if it is not\n                                                // already being aborted.\n                                                // DataNotFoundException: If transaction metadata is cleaned up after reading list\n                                                // of active segments\n                                                log.debug(requestId, \"A known exception thrown during seal stream \" +\n                                                        \"while trying to abort transaction on stream {}/{}\", scope, stream, cause);\n                                            } else {\n                                                // throw the original exception\n                                                // Note: we can ignore this error because if there are transactions found on a stream,\n                                                // seal stream reposts the event back into request stream.\n                                                // So in subsequent iteration it will reattempt to abort all active transactions.\n                                                // This is a valid course of action because it is important to understand that\n                                                // all transactions are completable (either via abort of commit).\n                                                log.warn(requestId, \"Exception thrown during seal stream while trying \" +\n                                                        \"to abort transaction on stream {}/{}\", scope, stream, cause);\n                                            }\n                                            return null;\n                                        }));\n                            } else {\n                                voidCompletableFuture = CompletableFuture.completedFuture(null);\n                            }\n\n                            return voidCompletableFuture;\n                        }).collect(Collectors.toList())).thenApply(v -> false);\n                    }\n                });",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 1,
                    "column": 8
                  },
                  "end": {
                    "row": 1,
                    "column": 14
                  },
                  "text": "return"
                },
                {
                  "type": "method_invocation",
                  "start": {
                    "row": 1,
                    "column": 15
                  },
                  "end": {
                    "row": 45,
                    "column": 18
                  },
                  "text": "streamMetadataStore.getActiveTxns(scope, stream, context, executor)\n                .thenCompose(activeTxns -> {\n                    if (activeTxns == null || activeTxns.isEmpty()) {\n                        return CompletableFuture.completedFuture(true);\n                    } else {\n                        // abort transactions\n                        return Futures.allOf(activeTxns.entrySet().stream().map(txIdPair -> {\n                            CompletableFuture<Void> voidCompletableFuture;\n                            if (txIdPair.getValue().getTxnStatus().equals(TxnStatus.OPEN)) {\n                                voidCompletableFuture = Futures.toVoid(streamTransactionMetadataTasks\n                                        .abortTxn(scope, stream, txIdPair.getKey(), null, context)\n                                        .exceptionally(e -> {\n                                            Throwable cause = Exceptions.unwrap(e);\n                                            if (cause instanceof StoreException.IllegalStateException ||\n                                                    cause instanceof StoreException.WriteConflictException ||\n                                                    cause instanceof StoreException.DataNotFoundException) {\n                                                // IllegalStateException : The transaction is already in the process of being\n                                                // completed. Ignore\n                                                // WriteConflictException : Another thread is updating the transaction record.\n                                                // ignore. We will effectively retry cleaning up the transaction if it is not\n                                                // already being aborted.\n                                                // DataNotFoundException: If transaction metadata is cleaned up after reading list\n                                                // of active segments\n                                                log.debug(requestId, \"A known exception thrown during seal stream \" +\n                                                        \"while trying to abort transaction on stream {}/{}\", scope, stream, cause);\n                                            } else {\n                                                // throw the original exception\n                                                // Note: we can ignore this error because if there are transactions found on a stream,\n                                                // seal stream reposts the event back into request stream.\n                                                // So in subsequent iteration it will reattempt to abort all active transactions.\n                                                // This is a valid course of action because it is important to understand that\n                                                // all transactions are completable (either via abort of commit).\n                                                log.warn(requestId, \"Exception thrown during seal stream while trying \" +\n                                                        \"to abort transaction on stream {}/{}\", scope, stream, cause);\n                                            }\n                                            return null;\n                                        }));\n                            } else {\n                                voidCompletableFuture = CompletableFuture.completedFuture(null);\n                            }\n\n                            return voidCompletableFuture;\n                        }).collect(Collectors.toList())).thenApply(v -> false);\n                    }\n                })",
                  "children": [
                    {
                      "type": "method_invocation",
                      "start": {
                        "row": 1,
                        "column": 15
                      },
                      "end": {
                        "row": 1,
                        "column": 82
                      },
                      "text": "streamMetadataStore.getActiveTxns(scope, stream, context, executor)",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 1,
                            "column": 15
                          },
                          "end": {
                            "row": 1,
                            "column": 34
                          },
                          "text": "streamMetadataStore"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 1,
                            "column": 34
                          },
                          "end": {
                            "row": 1,
                            "column": 35
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 1,
                            "column": 35
                          },
                          "end": {
                            "row": 1,
                            "column": 48
                          },
                          "text": "getActiveTxns"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 1,
                            "column": 48
                          },
                          "end": {
                            "row": 1,
                            "column": 82
                          },
                          "text": "(scope, stream, context, executor)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 1,
                                "column": 48
                              },
                              "end": {
                                "row": 1,
                                "column": 49
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 1,
                                "column": 49
                              },
                              "end": {
                                "row": 1,
                                "column": 54
                              },
                              "text": "scope"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 1,
                                "column": 54
                              },
                              "end": {
                                "row": 1,
                                "column": 55
                              },
                              "text": ","
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 1,
                                "column": 56
                              },
                              "end": {
                                "row": 1,
                                "column": 62
                              },
                              "text": "stream"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 1,
                                "column": 62
                              },
                              "end": {
                                "row": 1,
                                "column": 63
                              },
                              "text": ","
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 1,
                                "column": 64
                              },
                              "end": {
                                "row": 1,
                                "column": 71
                              },
                              "text": "context"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 1,
                                "column": 71
                              },
                              "end": {
                                "row": 1,
                                "column": 72
                              },
                              "text": ","
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 1,
                                "column": 73
                              },
                              "end": {
                                "row": 1,
                                "column": 81
                              },
                              "text": "executor"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 1,
                                "column": 81
                              },
                              "end": {
                                "row": 1,
                                "column": 82
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ".",
                      "start": {
                        "row": 2,
                        "column": 16
                      },
                      "end": {
                        "row": 2,
                        "column": 17
                      },
                      "text": "."
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 2,
                        "column": 17
                      },
                      "end": {
                        "row": 2,
                        "column": 28
                      },
                      "text": "thenCompose"
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 2,
                        "column": 28
                      },
                      "end": {
                        "row": 45,
                        "column": 18
                      },
                      "text": "(activeTxns -> {\n                    if (activeTxns == null || activeTxns.isEmpty()) {\n                        return CompletableFuture.completedFuture(true);\n                    } else {\n                        // abort transactions\n                        return Futures.allOf(activeTxns.entrySet().stream().map(txIdPair -> {\n                            CompletableFuture<Void> voidCompletableFuture;\n                            if (txIdPair.getValue().getTxnStatus().equals(TxnStatus.OPEN)) {\n                                voidCompletableFuture = Futures.toVoid(streamTransactionMetadataTasks\n                                        .abortTxn(scope, stream, txIdPair.getKey(), null, context)\n                                        .exceptionally(e -> {\n                                            Throwable cause = Exceptions.unwrap(e);\n                                            if (cause instanceof StoreException.IllegalStateException ||\n                                                    cause instanceof StoreException.WriteConflictException ||\n                                                    cause instanceof StoreException.DataNotFoundException) {\n                                                // IllegalStateException : The transaction is already in the process of being\n                                                // completed. Ignore\n                                                // WriteConflictException : Another thread is updating the transaction record.\n                                                // ignore. We will effectively retry cleaning up the transaction if it is not\n                                                // already being aborted.\n                                                // DataNotFoundException: If transaction metadata is cleaned up after reading list\n                                                // of active segments\n                                                log.debug(requestId, \"A known exception thrown during seal stream \" +\n                                                        \"while trying to abort transaction on stream {}/{}\", scope, stream, cause);\n                                            } else {\n                                                // throw the original exception\n                                                // Note: we can ignore this error because if there are transactions found on a stream,\n                                                // seal stream reposts the event back into request stream.\n                                                // So in subsequent iteration it will reattempt to abort all active transactions.\n                                                // This is a valid course of action because it is important to understand that\n                                                // all transactions are completable (either via abort of commit).\n                                                log.warn(requestId, \"Exception thrown during seal stream while trying \" +\n                                                        \"to abort transaction on stream {}/{}\", scope, stream, cause);\n                                            }\n                                            return null;\n                                        }));\n                            } else {\n                                voidCompletableFuture = CompletableFuture.completedFuture(null);\n                            }\n\n                            return voidCompletableFuture;\n                        }).collect(Collectors.toList())).thenApply(v -> false);\n                    }\n                })",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 2,
                            "column": 28
                          },
                          "end": {
                            "row": 2,
                            "column": 29
                          },
                          "text": "("
                        },
                        {
                          "type": "lambda_expression",
                          "start": {
                            "row": 2,
                            "column": 29
                          },
                          "end": {
                            "row": 45,
                            "column": 17
                          },
                          "text": "activeTxns -> {\n                    if (activeTxns == null || activeTxns.isEmpty()) {\n                        return CompletableFuture.completedFuture(true);\n                    } else {\n                        // abort transactions\n                        return Futures.allOf(activeTxns.entrySet().stream().map(txIdPair -> {\n                            CompletableFuture<Void> voidCompletableFuture;\n                            if (txIdPair.getValue().getTxnStatus().equals(TxnStatus.OPEN)) {\n                                voidCompletableFuture = Futures.toVoid(streamTransactionMetadataTasks\n                                        .abortTxn(scope, stream, txIdPair.getKey(), null, context)\n                                        .exceptionally(e -> {\n                                            Throwable cause = Exceptions.unwrap(e);\n                                            if (cause instanceof StoreException.IllegalStateException ||\n                                                    cause instanceof StoreException.WriteConflictException ||\n                                                    cause instanceof StoreException.DataNotFoundException) {\n                                                // IllegalStateException : The transaction is already in the process of being\n                                                // completed. Ignore\n                                                // WriteConflictException : Another thread is updating the transaction record.\n                                                // ignore. We will effectively retry cleaning up the transaction if it is not\n                                                // already being aborted.\n                                                // DataNotFoundException: If transaction metadata is cleaned up after reading list\n                                                // of active segments\n                                                log.debug(requestId, \"A known exception thrown during seal stream \" +\n                                                        \"while trying to abort transaction on stream {}/{}\", scope, stream, cause);\n                                            } else {\n                                                // throw the original exception\n                                                // Note: we can ignore this error because if there are transactions found on a stream,\n                                                // seal stream reposts the event back into request stream.\n                                                // So in subsequent iteration it will reattempt to abort all active transactions.\n                                                // This is a valid course of action because it is important to understand that\n                                                // all transactions are completable (either via abort of commit).\n                                                log.warn(requestId, \"Exception thrown during seal stream while trying \" +\n                                                        \"to abort transaction on stream {}/{}\", scope, stream, cause);\n                                            }\n                                            return null;\n                                        }));\n                            } else {\n                                voidCompletableFuture = CompletableFuture.completedFuture(null);\n                            }\n\n                            return voidCompletableFuture;\n                        }).collect(Collectors.toList())).thenApply(v -> false);\n                    }\n                }",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 2,
                                "column": 29
                              },
                              "end": {
                                "row": 2,
                                "column": 39
                              },
                              "text": "activeTxns"
                            },
                            {
                              "type": "->",
                              "start": {
                                "row": 2,
                                "column": 40
                              },
                              "end": {
                                "row": 2,
                                "column": 42
                              },
                              "text": "->"
                            },
                            {
                              "type": "block",
                              "start": {
                                "row": 2,
                                "column": 43
                              },
                              "end": {
                                "row": 45,
                                "column": 17
                              },
                              "text": "{\n                    if (activeTxns == null || activeTxns.isEmpty()) {\n                        return CompletableFuture.completedFuture(true);\n                    } else {\n                        // abort transactions\n                        return Futures.allOf(activeTxns.entrySet().stream().map(txIdPair -> {\n                            CompletableFuture<Void> voidCompletableFuture;\n                            if (txIdPair.getValue().getTxnStatus().equals(TxnStatus.OPEN)) {\n                                voidCompletableFuture = Futures.toVoid(streamTransactionMetadataTasks\n                                        .abortTxn(scope, stream, txIdPair.getKey(), null, context)\n                                        .exceptionally(e -> {\n                                            Throwable cause = Exceptions.unwrap(e);\n                                            if (cause instanceof StoreException.IllegalStateException ||\n                                                    cause instanceof StoreException.WriteConflictException ||\n                                                    cause instanceof StoreException.DataNotFoundException) {\n                                                // IllegalStateException : The transaction is already in the process of being\n                                                // completed. Ignore\n                                                // WriteConflictException : Another thread is updating the transaction record.\n                                                // ignore. We will effectively retry cleaning up the transaction if it is not\n                                                // already being aborted.\n                                                // DataNotFoundException: If transaction metadata is cleaned up after reading list\n                                                // of active segments\n                                                log.debug(requestId, \"A known exception thrown during seal stream \" +\n                                                        \"while trying to abort transaction on stream {}/{}\", scope, stream, cause);\n                                            } else {\n                                                // throw the original exception\n                                                // Note: we can ignore this error because if there are transactions found on a stream,\n                                                // seal stream reposts the event back into request stream.\n                                                // So in subsequent iteration it will reattempt to abort all active transactions.\n                                                // This is a valid course of action because it is important to understand that\n                                                // all transactions are completable (either via abort of commit).\n                                                log.warn(requestId, \"Exception thrown during seal stream while trying \" +\n                                                        \"to abort transaction on stream {}/{}\", scope, stream, cause);\n                                            }\n                                            return null;\n                                        }));\n                            } else {\n                                voidCompletableFuture = CompletableFuture.completedFuture(null);\n                            }\n\n                            return voidCompletableFuture;\n                        }).collect(Collectors.toList())).thenApply(v -> false);\n                    }\n                }",
                              "children": [
                                {
                                  "type": "{",
                                  "start": {
                                    "row": 2,
                                    "column": 43
                                  },
                                  "end": {
                                    "row": 2,
                                    "column": 44
                                  },
                                  "text": "{"
                                },
                                {
                                  "type": "if_statement",
                                  "start": {
                                    "row": 3,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 44,
                                    "column": 21
                                  },
                                  "text": "if (activeTxns == null || activeTxns.isEmpty()) {\n                        return CompletableFuture.completedFuture(true);\n                    } else {\n                        // abort transactions\n                        return Futures.allOf(activeTxns.entrySet().stream().map(txIdPair -> {\n                            CompletableFuture<Void> voidCompletableFuture;\n                            if (txIdPair.getValue().getTxnStatus().equals(TxnStatus.OPEN)) {\n                                voidCompletableFuture = Futures.toVoid(streamTransactionMetadataTasks\n                                        .abortTxn(scope, stream, txIdPair.getKey(), null, context)\n                                        .exceptionally(e -> {\n                                            Throwable cause = Exceptions.unwrap(e);\n                                            if (cause instanceof StoreException.IllegalStateException ||\n                                                    cause instanceof StoreException.WriteConflictException ||\n                                                    cause instanceof StoreException.DataNotFoundException) {\n                                                // IllegalStateException : The transaction is already in the process of being\n                                                // completed. Ignore\n                                                // WriteConflictException : Another thread is updating the transaction record.\n                                                // ignore. We will effectively retry cleaning up the transaction if it is not\n                                                // already being aborted.\n                                                // DataNotFoundException: If transaction metadata is cleaned up after reading list\n                                                // of active segments\n                                                log.debug(requestId, \"A known exception thrown during seal stream \" +\n                                                        \"while trying to abort transaction on stream {}/{}\", scope, stream, cause);\n                                            } else {\n                                                // throw the original exception\n                                                // Note: we can ignore this error because if there are transactions found on a stream,\n                                                // seal stream reposts the event back into request stream.\n                                                // So in subsequent iteration it will reattempt to abort all active transactions.\n                                                // This is a valid course of action because it is important to understand that\n                                                // all transactions are completable (either via abort of commit).\n                                                log.warn(requestId, \"Exception thrown during seal stream while trying \" +\n                                                        \"to abort transaction on stream {}/{}\", scope, stream, cause);\n                                            }\n                                            return null;\n                                        }));\n                            } else {\n                                voidCompletableFuture = CompletableFuture.completedFuture(null);\n                            }\n\n                            return voidCompletableFuture;\n                        }).collect(Collectors.toList())).thenApply(v -> false);\n                    }",
                                  "children": [
                                    {
                                      "type": "if",
                                      "start": {
                                        "row": 3,
                                        "column": 20
                                      },
                                      "end": {
                                        "row": 3,
                                        "column": 22
                                      },
                                      "text": "if"
                                    },
                                    {
                                      "type": "condition",
                                      "start": {
                                        "row": 3,
                                        "column": 23
                                      },
                                      "end": {
                                        "row": 3,
                                        "column": 67
                                      },
                                      "text": "(activeTxns == null || activeTxns.isEmpty())",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 3,
                                            "column": 23
                                          },
                                          "end": {
                                            "row": 3,
                                            "column": 24
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start": {
                                            "row": 3,
                                            "column": 24
                                          },
                                          "end": {
                                            "row": 3,
                                            "column": 66
                                          },
                                          "text": "activeTxns == null || activeTxns.isEmpty()",
                                          "children": [
                                            {
                                              "type": "binary_expression",
                                              "start": {
                                                "row": 3,
                                                "column": 24
                                              },
                                              "end": {
                                                "row": 3,
                                                "column": 42
                                              },
                                              "text": "activeTxns == null",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 3,
                                                    "column": 24
                                                  },
                                                  "end": {
                                                    "row": 3,
                                                    "column": 34
                                                  },
                                                  "text": "activeTxns"
                                                },
                                                {
                                                  "type": "==",
                                                  "start": {
                                                    "row": 3,
                                                    "column": 35
                                                  },
                                                  "end": {
                                                    "row": 3,
                                                    "column": 37
                                                  },
                                                  "text": "=="
                                                },
                                                {
                                                  "type": "null_literal",
                                                  "start": {
                                                    "row": 3,
                                                    "column": 38
                                                  },
                                                  "end": {
                                                    "row": 3,
                                                    "column": 42
                                                  },
                                                  "text": "null"
                                                }
                                              ]
                                            },
                                            {
                                              "type": "||",
                                              "start": {
                                                "row": 3,
                                                "column": 43
                                              },
                                              "end": {
                                                "row": 3,
                                                "column": 45
                                              },
                                              "text": "||"
                                            },
                                            {
                                              "type": "method_invocation",
                                              "start": {
                                                "row": 3,
                                                "column": 46
                                              },
                                              "end": {
                                                "row": 3,
                                                "column": 66
                                              },
                                              "text": "activeTxns.isEmpty()",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 3,
                                                    "column": 46
                                                  },
                                                  "end": {
                                                    "row": 3,
                                                    "column": 56
                                                  },
                                                  "text": "activeTxns"
                                                },
                                                {
                                                  "type": ".",
                                                  "start": {
                                                    "row": 3,
                                                    "column": 56
                                                  },
                                                  "end": {
                                                    "row": 3,
                                                    "column": 57
                                                  },
                                                  "text": "."
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 3,
                                                    "column": 57
                                                  },
                                                  "end": {
                                                    "row": 3,
                                                    "column": 64
                                                  },
                                                  "text": "isEmpty"
                                                },
                                                {
                                                  "type": "argument_list",
                                                  "start": {
                                                    "row": 3,
                                                    "column": 64
                                                  },
                                                  "end": {
                                                    "row": 3,
                                                    "column": 66
                                                  },
                                                  "text": "()",
                                                  "children": [
                                                    {
                                                      "type": "(",
                                                      "start": {
                                                        "row": 3,
                                                        "column": 64
                                                      },
                                                      "end": {
                                                        "row": 3,
                                                        "column": 65
                                                      },
                                                      "text": "("
                                                    },
                                                    {
                                                      "type": ")",
                                                      "start": {
                                                        "row": 3,
                                                        "column": 65
                                                      },
                                                      "end": {
                                                        "row": 3,
                                                        "column": 66
                                                      },
                                                      "text": ")"
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 3,
                                            "column": 66
                                          },
                                          "end": {
                                            "row": 3,
                                            "column": 67
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "block",
                                      "start": {
                                        "row": 3,
                                        "column": 68
                                      },
                                      "end": {
                                        "row": 5,
                                        "column": 21
                                      },
                                      "text": "{\n                        return CompletableFuture.completedFuture(true);\n                    }",
                                      "children": [
                                        {
                                          "type": "{",
                                          "start": {
                                            "row": 3,
                                            "column": 68
                                          },
                                          "end": {
                                            "row": 3,
                                            "column": 69
                                          },
                                          "text": "{"
                                        },
                                        {
                                          "type": "return_statement",
                                          "start": {
                                            "row": 4,
                                            "column": 24
                                          },
                                          "end": {
                                            "row": 4,
                                            "column": 71
                                          },
                                          "text": "return CompletableFuture.completedFuture(true);",
                                          "children": [
                                            {
                                              "type": "return",
                                              "start": {
                                                "row": 4,
                                                "column": 24
                                              },
                                              "end": {
                                                "row": 4,
                                                "column": 30
                                              },
                                              "text": "return"
                                            },
                                            {
                                              "type": "method_invocation",
                                              "start": {
                                                "row": 4,
                                                "column": 31
                                              },
                                              "end": {
                                                "row": 4,
                                                "column": 70
                                              },
                                              "text": "CompletableFuture.completedFuture(true)",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 4,
                                                    "column": 31
                                                  },
                                                  "end": {
                                                    "row": 4,
                                                    "column": 48
                                                  },
                                                  "text": "CompletableFuture"
                                                },
                                                {
                                                  "type": ".",
                                                  "start": {
                                                    "row": 4,
                                                    "column": 48
                                                  },
                                                  "end": {
                                                    "row": 4,
                                                    "column": 49
                                                  },
                                                  "text": "."
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 4,
                                                    "column": 49
                                                  },
                                                  "end": {
                                                    "row": 4,
                                                    "column": 64
                                                  },
                                                  "text": "completedFuture"
                                                },
                                                {
                                                  "type": "argument_list",
                                                  "start": {
                                                    "row": 4,
                                                    "column": 64
                                                  },
                                                  "end": {
                                                    "row": 4,
                                                    "column": 70
                                                  },
                                                  "text": "(true)",
                                                  "children": [
                                                    {
                                                      "type": "(",
                                                      "start": {
                                                        "row": 4,
                                                        "column": 64
                                                      },
                                                      "end": {
                                                        "row": 4,
                                                        "column": 65
                                                      },
                                                      "text": "("
                                                    },
                                                    {
                                                      "type": "true",
                                                      "start": {
                                                        "row": 4,
                                                        "column": 65
                                                      },
                                                      "end": {
                                                        "row": 4,
                                                        "column": 69
                                                      },
                                                      "text": "true"
                                                    },
                                                    {
                                                      "type": ")",
                                                      "start": {
                                                        "row": 4,
                                                        "column": 69
                                                      },
                                                      "end": {
                                                        "row": 4,
                                                        "column": 70
                                                      },
                                                      "text": ")"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ";",
                                              "start": {
                                                "row": 4,
                                                "column": 70
                                              },
                                              "end": {
                                                "row": 4,
                                                "column": 71
                                              },
                                              "text": ";"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "}",
                                          "start": {
                                            "row": 5,
                                            "column": 20
                                          },
                                          "end": {
                                            "row": 5,
                                            "column": 21
                                          },
                                          "text": "}"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "else",
                                      "start": {
                                        "row": 5,
                                        "column": 22
                                      },
                                      "end": {
                                        "row": 5,
                                        "column": 26
                                      },
                                      "text": "else"
                                    },
                                    {
                                      "type": "block",
                                      "start": {
                                        "row": 5,
                                        "column": 27
                                      },
                                      "end": {
                                        "row": 44,
                                        "column": 21
                                      },
                                      "text": "{\n                        // abort transactions\n                        return Futures.allOf(activeTxns.entrySet().stream().map(txIdPair -> {\n                            CompletableFuture<Void> voidCompletableFuture;\n                            if (txIdPair.getValue().getTxnStatus().equals(TxnStatus.OPEN)) {\n                                voidCompletableFuture = Futures.toVoid(streamTransactionMetadataTasks\n                                        .abortTxn(scope, stream, txIdPair.getKey(), null, context)\n                                        .exceptionally(e -> {\n                                            Throwable cause = Exceptions.unwrap(e);\n                                            if (cause instanceof StoreException.IllegalStateException ||\n                                                    cause instanceof StoreException.WriteConflictException ||\n                                                    cause instanceof StoreException.DataNotFoundException) {\n                                                // IllegalStateException : The transaction is already in the process of being\n                                                // completed. Ignore\n                                                // WriteConflictException : Another thread is updating the transaction record.\n                                                // ignore. We will effectively retry cleaning up the transaction if it is not\n                                                // already being aborted.\n                                                // DataNotFoundException: If transaction metadata is cleaned up after reading list\n                                                // of active segments\n                                                log.debug(requestId, \"A known exception thrown during seal stream \" +\n                                                        \"while trying to abort transaction on stream {}/{}\", scope, stream, cause);\n                                            } else {\n                                                // throw the original exception\n                                                // Note: we can ignore this error because if there are transactions found on a stream,\n                                                // seal stream reposts the event back into request stream.\n                                                // So in subsequent iteration it will reattempt to abort all active transactions.\n                                                // This is a valid course of action because it is important to understand that\n                                                // all transactions are completable (either via abort of commit).\n                                                log.warn(requestId, \"Exception thrown during seal stream while trying \" +\n                                                        \"to abort transaction on stream {}/{}\", scope, stream, cause);\n                                            }\n                                            return null;\n                                        }));\n                            } else {\n                                voidCompletableFuture = CompletableFuture.completedFuture(null);\n                            }\n\n                            return voidCompletableFuture;\n                        }).collect(Collectors.toList())).thenApply(v -> false);\n                    }",
                                      "children": [
                                        {
                                          "type": "{",
                                          "start": {
                                            "row": 5,
                                            "column": 27
                                          },
                                          "end": {
                                            "row": 5,
                                            "column": 28
                                          },
                                          "text": "{"
                                        },
                                        {
                                          "type": "line_comment",
                                          "start": {
                                            "row": 6,
                                            "column": 24
                                          },
                                          "end": {
                                            "row": 6,
                                            "column": 45
                                          },
                                          "text": "// abort transactions"
                                        },
                                        {
                                          "type": "return_statement",
                                          "start": {
                                            "row": 7,
                                            "column": 24
                                          },
                                          "end": {
                                            "row": 43,
                                            "column": 79
                                          },
                                          "text": "return Futures.allOf(activeTxns.entrySet().stream().map(txIdPair -> {\n                            CompletableFuture<Void> voidCompletableFuture;\n                            if (txIdPair.getValue().getTxnStatus().equals(TxnStatus.OPEN)) {\n                                voidCompletableFuture = Futures.toVoid(streamTransactionMetadataTasks\n                                        .abortTxn(scope, stream, txIdPair.getKey(), null, context)\n                                        .exceptionally(e -> {\n                                            Throwable cause = Exceptions.unwrap(e);\n                                            if (cause instanceof StoreException.IllegalStateException ||\n                                                    cause instanceof StoreException.WriteConflictException ||\n                                                    cause instanceof StoreException.DataNotFoundException) {\n                                                // IllegalStateException : The transaction is already in the process of being\n                                                // completed. Ignore\n                                                // WriteConflictException : Another thread is updating the transaction record.\n                                                // ignore. We will effectively retry cleaning up the transaction if it is not\n                                                // already being aborted.\n                                                // DataNotFoundException: If transaction metadata is cleaned up after reading list\n                                                // of active segments\n                                                log.debug(requestId, \"A known exception thrown during seal stream \" +\n                                                        \"while trying to abort transaction on stream {}/{}\", scope, stream, cause);\n                                            } else {\n                                                // throw the original exception\n                                                // Note: we can ignore this error because if there are transactions found on a stream,\n                                                // seal stream reposts the event back into request stream.\n                                                // So in subsequent iteration it will reattempt to abort all active transactions.\n                                                // This is a valid course of action because it is important to understand that\n                                                // all transactions are completable (either via abort of commit).\n                                                log.warn(requestId, \"Exception thrown during seal stream while trying \" +\n                                                        \"to abort transaction on stream {}/{}\", scope, stream, cause);\n                                            }\n                                            return null;\n                                        }));\n                            } else {\n                                voidCompletableFuture = CompletableFuture.completedFuture(null);\n                            }\n\n                            return voidCompletableFuture;\n                        }).collect(Collectors.toList())).thenApply(v -> false);",
                                          "children": [
                                            {
                                              "type": "return",
                                              "start": {
                                                "row": 7,
                                                "column": 24
                                              },
                                              "end": {
                                                "row": 7,
                                                "column": 30
                                              },
                                              "text": "return"
                                            },
                                            {
                                              "type": "method_invocation",
                                              "start": {
                                                "row": 7,
                                                "column": 31
                                              },
                                              "end": {
                                                "row": 43,
                                                "column": 78
                                              },
                                              "text": "Futures.allOf(activeTxns.entrySet().stream().map(txIdPair -> {\n                            CompletableFuture<Void> voidCompletableFuture;\n                            if (txIdPair.getValue().getTxnStatus().equals(TxnStatus.OPEN)) {\n                                voidCompletableFuture = Futures.toVoid(streamTransactionMetadataTasks\n                                        .abortTxn(scope, stream, txIdPair.getKey(), null, context)\n                                        .exceptionally(e -> {\n                                            Throwable cause = Exceptions.unwrap(e);\n                                            if (cause instanceof StoreException.IllegalStateException ||\n                                                    cause instanceof StoreException.WriteConflictException ||\n                                                    cause instanceof StoreException.DataNotFoundException) {\n                                                // IllegalStateException : The transaction is already in the process of being\n                                                // completed. Ignore\n                                                // WriteConflictException : Another thread is updating the transaction record.\n                                                // ignore. We will effectively retry cleaning up the transaction if it is not\n                                                // already being aborted.\n                                                // DataNotFoundException: If transaction metadata is cleaned up after reading list\n                                                // of active segments\n                                                log.debug(requestId, \"A known exception thrown during seal stream \" +\n                                                        \"while trying to abort transaction on stream {}/{}\", scope, stream, cause);\n                                            } else {\n                                                // throw the original exception\n                                                // Note: we can ignore this error because if there are transactions found on a stream,\n                                                // seal stream reposts the event back into request stream.\n                                                // So in subsequent iteration it will reattempt to abort all active transactions.\n                                                // This is a valid course of action because it is important to understand that\n                                                // all transactions are completable (either via abort of commit).\n                                                log.warn(requestId, \"Exception thrown during seal stream while trying \" +\n                                                        \"to abort transaction on stream {}/{}\", scope, stream, cause);\n                                            }\n                                            return null;\n                                        }));\n                            } else {\n                                voidCompletableFuture = CompletableFuture.completedFuture(null);\n                            }\n\n                            return voidCompletableFuture;\n                        }).collect(Collectors.toList())).thenApply(v -> false)",
                                              "children": [
                                                {
                                                  "type": "method_invocation",
                                                  "start": {
                                                    "row": 7,
                                                    "column": 31
                                                  },
                                                  "end": {
                                                    "row": 43,
                                                    "column": 56
                                                  },
                                                  "text": "Futures.allOf(activeTxns.entrySet().stream().map(txIdPair -> {\n                            CompletableFuture<Void> voidCompletableFuture;\n                            if (txIdPair.getValue().getTxnStatus().equals(TxnStatus.OPEN)) {\n                                voidCompletableFuture = Futures.toVoid(streamTransactionMetadataTasks\n                                        .abortTxn(scope, stream, txIdPair.getKey(), null, context)\n                                        .exceptionally(e -> {\n                                            Throwable cause = Exceptions.unwrap(e);\n                                            if (cause instanceof StoreException.IllegalStateException ||\n                                                    cause instanceof StoreException.WriteConflictException ||\n                                                    cause instanceof StoreException.DataNotFoundException) {\n                                                // IllegalStateException : The transaction is already in the process of being\n                                                // completed. Ignore\n                                                // WriteConflictException : Another thread is updating the transaction record.\n                                                // ignore. We will effectively retry cleaning up the transaction if it is not\n                                                // already being aborted.\n                                                // DataNotFoundException: If transaction metadata is cleaned up after reading list\n                                                // of active segments\n                                                log.debug(requestId, \"A known exception thrown during seal stream \" +\n                                                        \"while trying to abort transaction on stream {}/{}\", scope, stream, cause);\n                                            } else {\n                                                // throw the original exception\n                                                // Note: we can ignore this error because if there are transactions found on a stream,\n                                                // seal stream reposts the event back into request stream.\n                                                // So in subsequent iteration it will reattempt to abort all active transactions.\n                                                // This is a valid course of action because it is important to understand that\n                                                // all transactions are completable (either via abort of commit).\n                                                log.warn(requestId, \"Exception thrown during seal stream while trying \" +\n                                                        \"to abort transaction on stream {}/{}\", scope, stream, cause);\n                                            }\n                                            return null;\n                                        }));\n                            } else {\n                                voidCompletableFuture = CompletableFuture.completedFuture(null);\n                            }\n\n                            return voidCompletableFuture;\n                        }).collect(Collectors.toList()))",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 7,
                                                        "column": 31
                                                      },
                                                      "end": {
                                                        "row": 7,
                                                        "column": 38
                                                      },
                                                      "text": "Futures"
                                                    },
                                                    {
                                                      "type": ".",
                                                      "start": {
                                                        "row": 7,
                                                        "column": 38
                                                      },
                                                      "end": {
                                                        "row": 7,
                                                        "column": 39
                                                      },
                                                      "text": "."
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 7,
                                                        "column": 39
                                                      },
                                                      "end": {
                                                        "row": 7,
                                                        "column": 44
                                                      },
                                                      "text": "allOf"
                                                    },
                                                    {
                                                      "type": "argument_list",
                                                      "start": {
                                                        "row": 7,
                                                        "column": 44
                                                      },
                                                      "end": {
                                                        "row": 43,
                                                        "column": 56
                                                      },
                                                      "text": "(activeTxns.entrySet().stream().map(txIdPair -> {\n                            CompletableFuture<Void> voidCompletableFuture;\n                            if (txIdPair.getValue().getTxnStatus().equals(TxnStatus.OPEN)) {\n                                voidCompletableFuture = Futures.toVoid(streamTransactionMetadataTasks\n                                        .abortTxn(scope, stream, txIdPair.getKey(), null, context)\n                                        .exceptionally(e -> {\n                                            Throwable cause = Exceptions.unwrap(e);\n                                            if (cause instanceof StoreException.IllegalStateException ||\n                                                    cause instanceof StoreException.WriteConflictException ||\n                                                    cause instanceof StoreException.DataNotFoundException) {\n                                                // IllegalStateException : The transaction is already in the process of being\n                                                // completed. Ignore\n                                                // WriteConflictException : Another thread is updating the transaction record.\n                                                // ignore. We will effectively retry cleaning up the transaction if it is not\n                                                // already being aborted.\n                                                // DataNotFoundException: If transaction metadata is cleaned up after reading list\n                                                // of active segments\n                                                log.debug(requestId, \"A known exception thrown during seal stream \" +\n                                                        \"while trying to abort transaction on stream {}/{}\", scope, stream, cause);\n                                            } else {\n                                                // throw the original exception\n                                                // Note: we can ignore this error because if there are transactions found on a stream,\n                                                // seal stream reposts the event back into request stream.\n                                                // So in subsequent iteration it will reattempt to abort all active transactions.\n                                                // This is a valid course of action because it is important to understand that\n                                                // all transactions are completable (either via abort of commit).\n                                                log.warn(requestId, \"Exception thrown during seal stream while trying \" +\n                                                        \"to abort transaction on stream {}/{}\", scope, stream, cause);\n                                            }\n                                            return null;\n                                        }));\n                            } else {\n                                voidCompletableFuture = CompletableFuture.completedFuture(null);\n                            }\n\n                            return voidCompletableFuture;\n                        }).collect(Collectors.toList()))",
                                                      "children": [
                                                        {
                                                          "type": "(",
                                                          "start": {
                                                            "row": 7,
                                                            "column": 44
                                                          },
                                                          "end": {
                                                            "row": 7,
                                                            "column": 45
                                                          },
                                                          "text": "("
                                                        },
                                                        {
                                                          "type": "method_invocation",
                                                          "start": {
                                                            "row": 7,
                                                            "column": 45
                                                          },
                                                          "end": {
                                                            "row": 43,
                                                            "column": 55
                                                          },
                                                          "text": "activeTxns.entrySet().stream().map(txIdPair -> {\n                            CompletableFuture<Void> voidCompletableFuture;\n                            if (txIdPair.getValue().getTxnStatus().equals(TxnStatus.OPEN)) {\n                                voidCompletableFuture = Futures.toVoid(streamTransactionMetadataTasks\n                                        .abortTxn(scope, stream, txIdPair.getKey(), null, context)\n                                        .exceptionally(e -> {\n                                            Throwable cause = Exceptions.unwrap(e);\n                                            if (cause instanceof StoreException.IllegalStateException ||\n                                                    cause instanceof StoreException.WriteConflictException ||\n                                                    cause instanceof StoreException.DataNotFoundException) {\n                                                // IllegalStateException : The transaction is already in the process of being\n                                                // completed. Ignore\n                                                // WriteConflictException : Another thread is updating the transaction record.\n                                                // ignore. We will effectively retry cleaning up the transaction if it is not\n                                                // already being aborted.\n                                                // DataNotFoundException: If transaction metadata is cleaned up after reading list\n                                                // of active segments\n                                                log.debug(requestId, \"A known exception thrown during seal stream \" +\n                                                        \"while trying to abort transaction on stream {}/{}\", scope, stream, cause);\n                                            } else {\n                                                // throw the original exception\n                                                // Note: we can ignore this error because if there are transactions found on a stream,\n                                                // seal stream reposts the event back into request stream.\n                                                // So in subsequent iteration it will reattempt to abort all active transactions.\n                                                // This is a valid course of action because it is important to understand that\n                                                // all transactions are completable (either via abort of commit).\n                                                log.warn(requestId, \"Exception thrown during seal stream while trying \" +\n                                                        \"to abort transaction on stream {}/{}\", scope, stream, cause);\n                                            }\n                                            return null;\n                                        }));\n                            } else {\n                                voidCompletableFuture = CompletableFuture.completedFuture(null);\n                            }\n\n                            return voidCompletableFuture;\n                        }).collect(Collectors.toList())",
                                                          "children": [
                                                            {
                                                              "type": "method_invocation",
                                                              "start": {
                                                                "row": 7,
                                                                "column": 45
                                                              },
                                                              "end": {
                                                                "row": 43,
                                                                "column": 26
                                                              },
                                                              "text": "activeTxns.entrySet().stream().map(txIdPair -> {\n                            CompletableFuture<Void> voidCompletableFuture;\n                            if (txIdPair.getValue().getTxnStatus().equals(TxnStatus.OPEN)) {\n                                voidCompletableFuture = Futures.toVoid(streamTransactionMetadataTasks\n                                        .abortTxn(scope, stream, txIdPair.getKey(), null, context)\n                                        .exceptionally(e -> {\n                                            Throwable cause = Exceptions.unwrap(e);\n                                            if (cause instanceof StoreException.IllegalStateException ||\n                                                    cause instanceof StoreException.WriteConflictException ||\n                                                    cause instanceof StoreException.DataNotFoundException) {\n                                                // IllegalStateException : The transaction is already in the process of being\n                                                // completed. Ignore\n                                                // WriteConflictException : Another thread is updating the transaction record.\n                                                // ignore. We will effectively retry cleaning up the transaction if it is not\n                                                // already being aborted.\n                                                // DataNotFoundException: If transaction metadata is cleaned up after reading list\n                                                // of active segments\n                                                log.debug(requestId, \"A known exception thrown during seal stream \" +\n                                                        \"while trying to abort transaction on stream {}/{}\", scope, stream, cause);\n                                            } else {\n                                                // throw the original exception\n                                                // Note: we can ignore this error because if there are transactions found on a stream,\n                                                // seal stream reposts the event back into request stream.\n                                                // So in subsequent iteration it will reattempt to abort all active transactions.\n                                                // This is a valid course of action because it is important to understand that\n                                                // all transactions are completable (either via abort of commit).\n                                                log.warn(requestId, \"Exception thrown during seal stream while trying \" +\n                                                        \"to abort transaction on stream {}/{}\", scope, stream, cause);\n                                            }\n                                            return null;\n                                        }));\n                            } else {\n                                voidCompletableFuture = CompletableFuture.completedFuture(null);\n                            }\n\n                            return voidCompletableFuture;\n                        })",
                                                              "children": [
                                                                {
                                                                  "type": "method_invocation",
                                                                  "start": {
                                                                    "row": 7,
                                                                    "column": 45
                                                                  },
                                                                  "end": {
                                                                    "row": 7,
                                                                    "column": 75
                                                                  },
                                                                  "text": "activeTxns.entrySet().stream()",
                                                                  "children": [
                                                                    {
                                                                      "type": "method_invocation",
                                                                      "start": {
                                                                        "row": 7,
                                                                        "column": 45
                                                                      },
                                                                      "end": {
                                                                        "row": 7,
                                                                        "column": 66
                                                                      },
                                                                      "text": "activeTxns.entrySet()",
                                                                      "children": [
                                                                        {
                                                                          "type": "identifier",
                                                                          "start": {
                                                                            "row": 7,
                                                                            "column": 45
                                                                          },
                                                                          "end": {
                                                                            "row": 7,
                                                                            "column": 55
                                                                          },
                                                                          "text": "activeTxns"
                                                                        },
                                                                        {
                                                                          "type": ".",
                                                                          "start": {
                                                                            "row": 7,
                                                                            "column": 55
                                                                          },
                                                                          "end": {
                                                                            "row": 7,
                                                                            "column": 56
                                                                          },
                                                                          "text": "."
                                                                        },
                                                                        {
                                                                          "type": "identifier",
                                                                          "start": {
                                                                            "row": 7,
                                                                            "column": 56
                                                                          },
                                                                          "end": {
                                                                            "row": 7,
                                                                            "column": 64
                                                                          },
                                                                          "text": "entrySet"
                                                                        },
                                                                        {
                                                                          "type": "argument_list",
                                                                          "start": {
                                                                            "row": 7,
                                                                            "column": 64
                                                                          },
                                                                          "end": {
                                                                            "row": 7,
                                                                            "column": 66
                                                                          },
                                                                          "text": "()",
                                                                          "children": [
                                                                            {
                                                                              "type": "(",
                                                                              "start": {
                                                                                "row": 7,
                                                                                "column": 64
                                                                              },
                                                                              "end": {
                                                                                "row": 7,
                                                                                "column": 65
                                                                              },
                                                                              "text": "("
                                                                            },
                                                                            {
                                                                              "type": ")",
                                                                              "start": {
                                                                                "row": 7,
                                                                                "column": 65
                                                                              },
                                                                              "end": {
                                                                                "row": 7,
                                                                                "column": 66
                                                                              },
                                                                              "text": ")"
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": ".",
                                                                      "start": {
                                                                        "row": 7,
                                                                        "column": 66
                                                                      },
                                                                      "end": {
                                                                        "row": 7,
                                                                        "column": 67
                                                                      },
                                                                      "text": "."
                                                                    },
                                                                    {
                                                                      "type": "identifier",
                                                                      "start": {
                                                                        "row": 7,
                                                                        "column": 67
                                                                      },
                                                                      "end": {
                                                                        "row": 7,
                                                                        "column": 73
                                                                      },
                                                                      "text": "stream"
                                                                    },
                                                                    {
                                                                      "type": "argument_list",
                                                                      "start": {
                                                                        "row": 7,
                                                                        "column": 73
                                                                      },
                                                                      "end": {
                                                                        "row": 7,
                                                                        "column": 75
                                                                      },
                                                                      "text": "()",
                                                                      "children": [
                                                                        {
                                                                          "type": "(",
                                                                          "start": {
                                                                            "row": 7,
                                                                            "column": 73
                                                                          },
                                                                          "end": {
                                                                            "row": 7,
                                                                            "column": 74
                                                                          },
                                                                          "text": "("
                                                                        },
                                                                        {
                                                                          "type": ")",
                                                                          "start": {
                                                                            "row": 7,
                                                                            "column": 74
                                                                          },
                                                                          "end": {
                                                                            "row": 7,
                                                                            "column": 75
                                                                          },
                                                                          "text": ")"
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": ".",
                                                                  "start": {
                                                                    "row": 7,
                                                                    "column": 75
                                                                  },
                                                                  "end": {
                                                                    "row": 7,
                                                                    "column": 76
                                                                  },
                                                                  "text": "."
                                                                },
                                                                {
                                                                  "type": "identifier",
                                                                  "start": {
                                                                    "row": 7,
                                                                    "column": 76
                                                                  },
                                                                  "end": {
                                                                    "row": 7,
                                                                    "column": 79
                                                                  },
                                                                  "text": "map"
                                                                },
                                                                {
                                                                  "type": "argument_list",
                                                                  "start": {
                                                                    "row": 7,
                                                                    "column": 79
                                                                  },
                                                                  "end": {
                                                                    "row": 43,
                                                                    "column": 26
                                                                  },
                                                                  "text": "(txIdPair -> {\n                            CompletableFuture<Void> voidCompletableFuture;\n                            if (txIdPair.getValue().getTxnStatus().equals(TxnStatus.OPEN)) {\n                                voidCompletableFuture = Futures.toVoid(streamTransactionMetadataTasks\n                                        .abortTxn(scope, stream, txIdPair.getKey(), null, context)\n                                        .exceptionally(e -> {\n                                            Throwable cause = Exceptions.unwrap(e);\n                                            if (cause instanceof StoreException.IllegalStateException ||\n                                                    cause instanceof StoreException.WriteConflictException ||\n                                                    cause instanceof StoreException.DataNotFoundException) {\n                                                // IllegalStateException : The transaction is already in the process of being\n                                                // completed. Ignore\n                                                // WriteConflictException : Another thread is updating the transaction record.\n                                                // ignore. We will effectively retry cleaning up the transaction if it is not\n                                                // already being aborted.\n                                                // DataNotFoundException: If transaction metadata is cleaned up after reading list\n                                                // of active segments\n                                                log.debug(requestId, \"A known exception thrown during seal stream \" +\n                                                        \"while trying to abort transaction on stream {}/{}\", scope, stream, cause);\n                                            } else {\n                                                // throw the original exception\n                                                // Note: we can ignore this error because if there are transactions found on a stream,\n                                                // seal stream reposts the event back into request stream.\n                                                // So in subsequent iteration it will reattempt to abort all active transactions.\n                                                // This is a valid course of action because it is important to understand that\n                                                // all transactions are completable (either via abort of commit).\n                                                log.warn(requestId, \"Exception thrown during seal stream while trying \" +\n                                                        \"to abort transaction on stream {}/{}\", scope, stream, cause);\n                                            }\n                                            return null;\n                                        }));\n                            } else {\n                                voidCompletableFuture = CompletableFuture.completedFuture(null);\n                            }\n\n                            return voidCompletableFuture;\n                        })",
                                                                  "children": [
                                                                    {
                                                                      "type": "(",
                                                                      "start": {
                                                                        "row": 7,
                                                                        "column": 79
                                                                      },
                                                                      "end": {
                                                                        "row": 7,
                                                                        "column": 80
                                                                      },
                                                                      "text": "("
                                                                    },
                                                                    {
                                                                      "type": "lambda_expression",
                                                                      "start": {
                                                                        "row": 7,
                                                                        "column": 80
                                                                      },
                                                                      "end": {
                                                                        "row": 43,
                                                                        "column": 25
                                                                      },
                                                                      "text": "txIdPair -> {\n                            CompletableFuture<Void> voidCompletableFuture;\n                            if (txIdPair.getValue().getTxnStatus().equals(TxnStatus.OPEN)) {\n                                voidCompletableFuture = Futures.toVoid(streamTransactionMetadataTasks\n                                        .abortTxn(scope, stream, txIdPair.getKey(), null, context)\n                                        .exceptionally(e -> {\n                                            Throwable cause = Exceptions.unwrap(e);\n                                            if (cause instanceof StoreException.IllegalStateException ||\n                                                    cause instanceof StoreException.WriteConflictException ||\n                                                    cause instanceof StoreException.DataNotFoundException) {\n                                                // IllegalStateException : The transaction is already in the process of being\n                                                // completed. Ignore\n                                                // WriteConflictException : Another thread is updating the transaction record.\n                                                // ignore. We will effectively retry cleaning up the transaction if it is not\n                                                // already being aborted.\n                                                // DataNotFoundException: If transaction metadata is cleaned up after reading list\n                                                // of active segments\n                                                log.debug(requestId, \"A known exception thrown during seal stream \" +\n                                                        \"while trying to abort transaction on stream {}/{}\", scope, stream, cause);\n                                            } else {\n                                                // throw the original exception\n                                                // Note: we can ignore this error because if there are transactions found on a stream,\n                                                // seal stream reposts the event back into request stream.\n                                                // So in subsequent iteration it will reattempt to abort all active transactions.\n                                                // This is a valid course of action because it is important to understand that\n                                                // all transactions are completable (either via abort of commit).\n                                                log.warn(requestId, \"Exception thrown during seal stream while trying \" +\n                                                        \"to abort transaction on stream {}/{}\", scope, stream, cause);\n                                            }\n                                            return null;\n                                        }));\n                            } else {\n                                voidCompletableFuture = CompletableFuture.completedFuture(null);\n                            }\n\n                            return voidCompletableFuture;\n                        }",
                                                                      "children": [
                                                                        {
                                                                          "type": "identifier",
                                                                          "start": {
                                                                            "row": 7,
                                                                            "column": 80
                                                                          },
                                                                          "end": {
                                                                            "row": 7,
                                                                            "column": 88
                                                                          },
                                                                          "text": "txIdPair"
                                                                        },
                                                                        {
                                                                          "type": "->",
                                                                          "start": {
                                                                            "row": 7,
                                                                            "column": 89
                                                                          },
                                                                          "end": {
                                                                            "row": 7,
                                                                            "column": 91
                                                                          },
                                                                          "text": "->"
                                                                        },
                                                                        {
                                                                          "type": "block",
                                                                          "start": {
                                                                            "row": 7,
                                                                            "column": 92
                                                                          },
                                                                          "end": {
                                                                            "row": 43,
                                                                            "column": 25
                                                                          },
                                                                          "text": "{\n                            CompletableFuture<Void> voidCompletableFuture;\n                            if (txIdPair.getValue().getTxnStatus().equals(TxnStatus.OPEN)) {\n                                voidCompletableFuture = Futures.toVoid(streamTransactionMetadataTasks\n                                        .abortTxn(scope, stream, txIdPair.getKey(), null, context)\n                                        .exceptionally(e -> {\n                                            Throwable cause = Exceptions.unwrap(e);\n                                            if (cause instanceof StoreException.IllegalStateException ||\n                                                    cause instanceof StoreException.WriteConflictException ||\n                                                    cause instanceof StoreException.DataNotFoundException) {\n                                                // IllegalStateException : The transaction is already in the process of being\n                                                // completed. Ignore\n                                                // WriteConflictException : Another thread is updating the transaction record.\n                                                // ignore. We will effectively retry cleaning up the transaction if it is not\n                                                // already being aborted.\n                                                // DataNotFoundException: If transaction metadata is cleaned up after reading list\n                                                // of active segments\n                                                log.debug(requestId, \"A known exception thrown during seal stream \" +\n                                                        \"while trying to abort transaction on stream {}/{}\", scope, stream, cause);\n                                            } else {\n                                                // throw the original exception\n                                                // Note: we can ignore this error because if there are transactions found on a stream,\n                                                // seal stream reposts the event back into request stream.\n                                                // So in subsequent iteration it will reattempt to abort all active transactions.\n                                                // This is a valid course of action because it is important to understand that\n                                                // all transactions are completable (either via abort of commit).\n                                                log.warn(requestId, \"Exception thrown during seal stream while trying \" +\n                                                        \"to abort transaction on stream {}/{}\", scope, stream, cause);\n                                            }\n                                            return null;\n                                        }));\n                            } else {\n                                voidCompletableFuture = CompletableFuture.completedFuture(null);\n                            }\n\n                            return voidCompletableFuture;\n                        }",
                                                                          "children": [
                                                                            {
                                                                              "type": "{",
                                                                              "start": {
                                                                                "row": 7,
                                                                                "column": 92
                                                                              },
                                                                              "end": {
                                                                                "row": 7,
                                                                                "column": 93
                                                                              },
                                                                              "text": "{"
                                                                            },
                                                                            {
                                                                              "type": "local_variable_declaration",
                                                                              "start": {
                                                                                "row": 8,
                                                                                "column": 28
                                                                              },
                                                                              "end": {
                                                                                "row": 8,
                                                                                "column": 74
                                                                              },
                                                                              "text": "CompletableFuture<Void> voidCompletableFuture;",
                                                                              "children": [
                                                                                {
                                                                                  "type": "generic_type",
                                                                                  "start": {
                                                                                    "row": 8,
                                                                                    "column": 28
                                                                                  },
                                                                                  "end": {
                                                                                    "row": 8,
                                                                                    "column": 51
                                                                                  },
                                                                                  "text": "CompletableFuture<Void>",
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "type_identifier",
                                                                                      "start": {
                                                                                        "row": 8,
                                                                                        "column": 28
                                                                                      },
                                                                                      "end": {
                                                                                        "row": 8,
                                                                                        "column": 45
                                                                                      },
                                                                                      "text": "CompletableFuture"
                                                                                    },
                                                                                    {
                                                                                      "type": "type_arguments",
                                                                                      "start": {
                                                                                        "row": 8,
                                                                                        "column": 45
                                                                                      },
                                                                                      "end": {
                                                                                        "row": 8,
                                                                                        "column": 51
                                                                                      },
                                                                                      "text": "<Void>",
                                                                                      "children": [
                                                                                        {
                                                                                          "type": "<",
                                                                                          "start": {
                                                                                            "row": 8,
                                                                                            "column": 45
                                                                                          },
                                                                                          "end": {
                                                                                            "row": 8,
                                                                                            "column": 46
                                                                                          },
                                                                                          "text": "<"
                                                                                        },
                                                                                        {
                                                                                          "type": "type_identifier",
                                                                                          "start": {
                                                                                            "row": 8,
                                                                                            "column": 46
                                                                                          },
                                                                                          "end": {
                                                                                            "row": 8,
                                                                                            "column": 50
                                                                                          },
                                                                                          "text": "Void"
                                                                                        },
                                                                                        {
                                                                                          "type": ">",
                                                                                          "start": {
                                                                                            "row": 8,
                                                                                            "column": 50
                                                                                          },
                                                                                          "end": {
                                                                                            "row": 8,
                                                                                            "column": 51
                                                                                          },
                                                                                          "text": ">"
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                {
                                                                                  "type": "variable_declarator",
                                                                                  "start": {
                                                                                    "row": 8,
                                                                                    "column": 52
                                                                                  },
                                                                                  "end": {
                                                                                    "row": 8,
                                                                                    "column": 73
                                                                                  },
                                                                                  "text": "voidCompletableFuture",
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "identifier",
                                                                                      "start": {
                                                                                        "row": 8,
                                                                                        "column": 52
                                                                                      },
                                                                                      "end": {
                                                                                        "row": 8,
                                                                                        "column": 73
                                                                                      },
                                                                                      "text": "voidCompletableFuture"
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                {
                                                                                  "type": ";",
                                                                                  "start": {
                                                                                    "row": 8,
                                                                                    "column": 73
                                                                                  },
                                                                                  "end": {
                                                                                    "row": 8,
                                                                                    "column": 74
                                                                                  },
                                                                                  "text": ";"
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "if_statement",
                                                                              "start": {
                                                                                "row": 9,
                                                                                "column": 28
                                                                              },
                                                                              "end": {
                                                                                "row": 40,
                                                                                "column": 29
                                                                              },
                                                                              "text": "if (txIdPair.getValue().getTxnStatus().equals(TxnStatus.OPEN)) {\n                                voidCompletableFuture = Futures.toVoid(streamTransactionMetadataTasks\n                                        .abortTxn(scope, stream, txIdPair.getKey(), null, context)\n                                        .exceptionally(e -> {\n                                            Throwable cause = Exceptions.unwrap(e);\n                                            if (cause instanceof StoreException.IllegalStateException ||\n                                                    cause instanceof StoreException.WriteConflictException ||\n                                                    cause instanceof StoreException.DataNotFoundException) {\n                                                // IllegalStateException : The transaction is already in the process of being\n                                                // completed. Ignore\n                                                // WriteConflictException : Another thread is updating the transaction record.\n                                                // ignore. We will effectively retry cleaning up the transaction if it is not\n                                                // already being aborted.\n                                                // DataNotFoundException: If transaction metadata is cleaned up after reading list\n                                                // of active segments\n                                                log.debug(requestId, \"A known exception thrown during seal stream \" +\n                                                        \"while trying to abort transaction on stream {}/{}\", scope, stream, cause);\n                                            } else {\n                                                // throw the original exception\n                                                // Note: we can ignore this error because if there are transactions found on a stream,\n                                                // seal stream reposts the event back into request stream.\n                                                // So in subsequent iteration it will reattempt to abort all active transactions.\n                                                // This is a valid course of action because it is important to understand that\n                                                // all transactions are completable (either via abort of commit).\n                                                log.warn(requestId, \"Exception thrown during seal stream while trying \" +\n                                                        \"to abort transaction on stream {}/{}\", scope, stream, cause);\n                                            }\n                                            return null;\n                                        }));\n                            } else {\n                                voidCompletableFuture = CompletableFuture.completedFuture(null);\n                            }",
                                                                              "children": [
                                                                                {
                                                                                  "type": "if",
                                                                                  "start": {
                                                                                    "row": 9,
                                                                                    "column": 28
                                                                                  },
                                                                                  "end": {
                                                                                    "row": 9,
                                                                                    "column": 30
                                                                                  },
                                                                                  "text": "if"
                                                                                },
                                                                                {
                                                                                  "type": "condition",
                                                                                  "start": {
                                                                                    "row": 9,
                                                                                    "column": 31
                                                                                  },
                                                                                  "end": {
                                                                                    "row": 9,
                                                                                    "column": 90
                                                                                  },
                                                                                  "text": "(txIdPair.getValue().getTxnStatus().equals(TxnStatus.OPEN))",
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "(",
                                                                                      "start": {
                                                                                        "row": 9,
                                                                                        "column": 31
                                                                                      },
                                                                                      "end": {
                                                                                        "row": 9,
                                                                                        "column": 32
                                                                                      },
                                                                                      "text": "("
                                                                                    },
                                                                                    {
                                                                                      "type": "method_invocation",
                                                                                      "start": {
                                                                                        "row": 9,
                                                                                        "column": 32
                                                                                      },
                                                                                      "end": {
                                                                                        "row": 9,
                                                                                        "column": 89
                                                                                      },
                                                                                      "text": "txIdPair.getValue().getTxnStatus().equals(TxnStatus.OPEN)",
                                                                                      "children": [
                                                                                        {
                                                                                          "type": "method_invocation",
                                                                                          "start": {
                                                                                            "row": 9,
                                                                                            "column": 32
                                                                                          },
                                                                                          "end": {
                                                                                            "row": 9,
                                                                                            "column": 66
                                                                                          },
                                                                                          "text": "txIdPair.getValue().getTxnStatus()",
                                                                                          "children": [
                                                                                            {
                                                                                              "type": "method_invocation",
                                                                                              "start": {
                                                                                                "row": 9,
                                                                                                "column": 32
                                                                                              },
                                                                                              "end": {
                                                                                                "row": 9,
                                                                                                "column": 51
                                                                                              },
                                                                                              "text": "txIdPair.getValue()",
                                                                                              "children": [
                                                                                                {
                                                                                                  "type": "identifier",
                                                                                                  "start": {
                                                                                                    "row": 9,
                                                                                                    "column": 32
                                                                                                  },
                                                                                                  "end": {
                                                                                                    "row": 9,
                                                                                                    "column": 40
                                                                                                  },
                                                                                                  "text": "txIdPair"
                                                                                                },
                                                                                                {
                                                                                                  "type": ".",
                                                                                                  "start": {
                                                                                                    "row": 9,
                                                                                                    "column": 40
                                                                                                  },
                                                                                                  "end": {
                                                                                                    "row": 9,
                                                                                                    "column": 41
                                                                                                  },
                                                                                                  "text": "."
                                                                                                },
                                                                                                {
                                                                                                  "type": "identifier",
                                                                                                  "start": {
                                                                                                    "row": 9,
                                                                                                    "column": 41
                                                                                                  },
                                                                                                  "end": {
                                                                                                    "row": 9,
                                                                                                    "column": 49
                                                                                                  },
                                                                                                  "text": "getValue"
                                                                                                },
                                                                                                {
                                                                                                  "type": "argument_list",
                                                                                                  "start": {
                                                                                                    "row": 9,
                                                                                                    "column": 49
                                                                                                  },
                                                                                                  "end": {
                                                                                                    "row": 9,
                                                                                                    "column": 51
                                                                                                  },
                                                                                                  "text": "()",
                                                                                                  "children": [
                                                                                                    {
                                                                                                      "type": "(",
                                                                                                      "start": {
                                                                                                        "row": 9,
                                                                                                        "column": 49
                                                                                                      },
                                                                                                      "end": {
                                                                                                        "row": 9,
                                                                                                        "column": 50
                                                                                                      },
                                                                                                      "text": "("
                                                                                                    },
                                                                                                    {
                                                                                                      "type": ")",
                                                                                                      "start": {
                                                                                                        "row": 9,
                                                                                                        "column": 50
                                                                                                      },
                                                                                                      "end": {
                                                                                                        "row": 9,
                                                                                                        "column": 51
                                                                                                      },
                                                                                                      "text": ")"
                                                                                                    }
                                                                                                  ]
                                                                                                }
                                                                                              ]
                                                                                            },
                                                                                            {
                                                                                              "type": ".",
                                                                                              "start": {
                                                                                                "row": 9,
                                                                                                "column": 51
                                                                                              },
                                                                                              "end": {
                                                                                                "row": 9,
                                                                                                "column": 52
                                                                                              },
                                                                                              "text": "."
                                                                                            },
                                                                                            {
                                                                                              "type": "identifier",
                                                                                              "start": {
                                                                                                "row": 9,
                                                                                                "column": 52
                                                                                              },
                                                                                              "end": {
                                                                                                "row": 9,
                                                                                                "column": 64
                                                                                              },
                                                                                              "text": "getTxnStatus"
                                                                                            },
                                                                                            {
                                                                                              "type": "argument_list",
                                                                                              "start": {
                                                                                                "row": 9,
                                                                                                "column": 64
                                                                                              },
                                                                                              "end": {
                                                                                                "row": 9,
                                                                                                "column": 66
                                                                                              },
                                                                                              "text": "()",
                                                                                              "children": [
                                                                                                {
                                                                                                  "type": "(",
                                                                                                  "start": {
                                                                                                    "row": 9,
                                                                                                    "column": 64
                                                                                                  },
                                                                                                  "end": {
                                                                                                    "row": 9,
                                                                                                    "column": 65
                                                                                                  },
                                                                                                  "text": "("
                                                                                                },
                                                                                                {
                                                                                                  "type": ")",
                                                                                                  "start": {
                                                                                                    "row": 9,
                                                                                                    "column": 65
                                                                                                  },
                                                                                                  "end": {
                                                                                                    "row": 9,
                                                                                                    "column": 66
                                                                                                  },
                                                                                                  "text": ")"
                                                                                                }
                                                                                              ]
                                                                                            }
                                                                                          ]
                                                                                        },
                                                                                        {
                                                                                          "type": ".",
                                                                                          "start": {
                                                                                            "row": 9,
                                                                                            "column": 66
                                                                                          },
                                                                                          "end": {
                                                                                            "row": 9,
                                                                                            "column": 67
                                                                                          },
                                                                                          "text": "."
                                                                                        },
                                                                                        {
                                                                                          "type": "identifier",
                                                                                          "start": {
                                                                                            "row": 9,
                                                                                            "column": 67
                                                                                          },
                                                                                          "end": {
                                                                                            "row": 9,
                                                                                            "column": 73
                                                                                          },
                                                                                          "text": "equals"
                                                                                        },
                                                                                        {
                                                                                          "type": "argument_list",
                                                                                          "start": {
                                                                                            "row": 9,
                                                                                            "column": 73
                                                                                          },
                                                                                          "end": {
                                                                                            "row": 9,
                                                                                            "column": 89
                                                                                          },
                                                                                          "text": "(TxnStatus.OPEN)",
                                                                                          "children": [
                                                                                            {
                                                                                              "type": "(",
                                                                                              "start": {
                                                                                                "row": 9,
                                                                                                "column": 73
                                                                                              },
                                                                                              "end": {
                                                                                                "row": 9,
                                                                                                "column": 74
                                                                                              },
                                                                                              "text": "("
                                                                                            },
                                                                                            {
                                                                                              "type": "field_access",
                                                                                              "start": {
                                                                                                "row": 9,
                                                                                                "column": 74
                                                                                              },
                                                                                              "end": {
                                                                                                "row": 9,
                                                                                                "column": 88
                                                                                              },
                                                                                              "text": "TxnStatus.OPEN",
                                                                                              "children": [
                                                                                                {
                                                                                                  "type": "identifier",
                                                                                                  "start": {
                                                                                                    "row": 9,
                                                                                                    "column": 74
                                                                                                  },
                                                                                                  "end": {
                                                                                                    "row": 9,
                                                                                                    "column": 83
                                                                                                  },
                                                                                                  "text": "TxnStatus"
                                                                                                },
                                                                                                {
                                                                                                  "type": ".",
                                                                                                  "start": {
                                                                                                    "row": 9,
                                                                                                    "column": 83
                                                                                                  },
                                                                                                  "end": {
                                                                                                    "row": 9,
                                                                                                    "column": 84
                                                                                                  },
                                                                                                  "text": "."
                                                                                                },
                                                                                                {
                                                                                                  "type": "identifier",
                                                                                                  "start": {
                                                                                                    "row": 9,
                                                                                                    "column": 84
                                                                                                  },
                                                                                                  "end": {
                                                                                                    "row": 9,
                                                                                                    "column": 88
                                                                                                  },
                                                                                                  "text": "OPEN"
                                                                                                }
                                                                                              ]
                                                                                            },
                                                                                            {
                                                                                              "type": ")",
                                                                                              "start": {
                                                                                                "row": 9,
                                                                                                "column": 88
                                                                                              },
                                                                                              "end": {
                                                                                                "row": 9,
                                                                                                "column": 89
                                                                                              },
                                                                                              "text": ")"
                                                                                            }
                                                                                          ]
                                                                                        }
                                                                                      ]
                                                                                    },
                                                                                    {
                                                                                      "type": ")",
                                                                                      "start": {
                                                                                        "row": 9,
                                                                                        "column": 89
                                                                                      },
                                                                                      "end": {
                                                                                        "row": 9,
                                                                                        "column": 90
                                                                                      },
                                                                                      "text": ")"
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                {
                                                                                  "type": "block",
                                                                                  "start": {
                                                                                    "row": 9,
                                                                                    "column": 91
                                                                                  },
                                                                                  "end": {
                                                                                    "row": 38,
                                                                                    "column": 29
                                                                                  },
                                                                                  "text": "{\n                                voidCompletableFuture = Futures.toVoid(streamTransactionMetadataTasks\n                                        .abortTxn(scope, stream, txIdPair.getKey(), null, context)\n                                        .exceptionally(e -> {\n                                            Throwable cause = Exceptions.unwrap(e);\n                                            if (cause instanceof StoreException.IllegalStateException ||\n                                                    cause instanceof StoreException.WriteConflictException ||\n                                                    cause instanceof StoreException.DataNotFoundException) {\n                                                // IllegalStateException : The transaction is already in the process of being\n                                                // completed. Ignore\n                                                // WriteConflictException : Another thread is updating the transaction record.\n                                                // ignore. We will effectively retry cleaning up the transaction if it is not\n                                                // already being aborted.\n                                                // DataNotFoundException: If transaction metadata is cleaned up after reading list\n                                                // of active segments\n                                                log.debug(requestId, \"A known exception thrown during seal stream \" +\n                                                        \"while trying to abort transaction on stream {}/{}\", scope, stream, cause);\n                                            } else {\n                                                // throw the original exception\n                                                // Note: we can ignore this error because if there are transactions found on a stream,\n                                                // seal stream reposts the event back into request stream.\n                                                // So in subsequent iteration it will reattempt to abort all active transactions.\n                                                // This is a valid course of action because it is important to understand that\n                                                // all transactions are completable (either via abort of commit).\n                                                log.warn(requestId, \"Exception thrown during seal stream while trying \" +\n                                                        \"to abort transaction on stream {}/{}\", scope, stream, cause);\n                                            }\n                                            return null;\n                                        }));\n                            }",
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "{",
                                                                                      "start": {
                                                                                        "row": 9,
                                                                                        "column": 91
                                                                                      },
                                                                                      "end": {
                                                                                        "row": 9,
                                                                                        "column": 92
                                                                                      },
                                                                                      "text": "{"
                                                                                    },
                                                                                    {
                                                                                      "type": "expression_statement",
                                                                                      "start": {
                                                                                        "row": 10,
                                                                                        "column": 32
                                                                                      },
                                                                                      "end": {
                                                                                        "row": 37,
                                                                                        "column": 44
                                                                                      },
                                                                                      "text": "voidCompletableFuture = Futures.toVoid(streamTransactionMetadataTasks\n                                        .abortTxn(scope, stream, txIdPair.getKey(), null, context)\n                                        .exceptionally(e -> {\n                                            Throwable cause = Exceptions.unwrap(e);\n                                            if (cause instanceof StoreException.IllegalStateException ||\n                                                    cause instanceof StoreException.WriteConflictException ||\n                                                    cause instanceof StoreException.DataNotFoundException) {\n                                                // IllegalStateException : The transaction is already in the process of being\n                                                // completed. Ignore\n                                                // WriteConflictException : Another thread is updating the transaction record.\n                                                // ignore. We will effectively retry cleaning up the transaction if it is not\n                                                // already being aborted.\n                                                // DataNotFoundException: If transaction metadata is cleaned up after reading list\n                                                // of active segments\n                                                log.debug(requestId, \"A known exception thrown during seal stream \" +\n                                                        \"while trying to abort transaction on stream {}/{}\", scope, stream, cause);\n                                            } else {\n                                                // throw the original exception\n                                                // Note: we can ignore this error because if there are transactions found on a stream,\n                                                // seal stream reposts the event back into request stream.\n                                                // So in subsequent iteration it will reattempt to abort all active transactions.\n                                                // This is a valid course of action because it is important to understand that\n                                                // all transactions are completable (either via abort of commit).\n                                                log.warn(requestId, \"Exception thrown during seal stream while trying \" +\n                                                        \"to abort transaction on stream {}/{}\", scope, stream, cause);\n                                            }\n                                            return null;\n                                        }));",
                                                                                      "children": [
                                                                                        {
                                                                                          "type": "assignment_expression",
                                                                                          "start": {
                                                                                            "row": 10,
                                                                                            "column": 32
                                                                                          },
                                                                                          "end": {
                                                                                            "row": 37,
                                                                                            "column": 43
                                                                                          },
                                                                                          "text": "voidCompletableFuture = Futures.toVoid(streamTransactionMetadataTasks\n                                        .abortTxn(scope, stream, txIdPair.getKey(), null, context)\n                                        .exceptionally(e -> {\n                                            Throwable cause = Exceptions.unwrap(e);\n                                            if (cause instanceof StoreException.IllegalStateException ||\n                                                    cause instanceof StoreException.WriteConflictException ||\n                                                    cause instanceof StoreException.DataNotFoundException) {\n                                                // IllegalStateException : The transaction is already in the process of being\n                                                // completed. Ignore\n                                                // WriteConflictException : Another thread is updating the transaction record.\n                                                // ignore. We will effectively retry cleaning up the transaction if it is not\n                                                // already being aborted.\n                                                // DataNotFoundException: If transaction metadata is cleaned up after reading list\n                                                // of active segments\n                                                log.debug(requestId, \"A known exception thrown during seal stream \" +\n                                                        \"while trying to abort transaction on stream {}/{}\", scope, stream, cause);\n                                            } else {\n                                                // throw the original exception\n                                                // Note: we can ignore this error because if there are transactions found on a stream,\n                                                // seal stream reposts the event back into request stream.\n                                                // So in subsequent iteration it will reattempt to abort all active transactions.\n                                                // This is a valid course of action because it is important to understand that\n                                                // all transactions are completable (either via abort of commit).\n                                                log.warn(requestId, \"Exception thrown during seal stream while trying \" +\n                                                        \"to abort transaction on stream {}/{}\", scope, stream, cause);\n                                            }\n                                            return null;\n                                        }))",
                                                                                          "children": [
                                                                                            {
                                                                                              "type": "identifier",
                                                                                              "start": {
                                                                                                "row": 10,
                                                                                                "column": 32
                                                                                              },
                                                                                              "end": {
                                                                                                "row": 10,
                                                                                                "column": 53
                                                                                              },
                                                                                              "text": "voidCompletableFuture"
                                                                                            },
                                                                                            {
                                                                                              "type": "=",
                                                                                              "start": {
                                                                                                "row": 10,
                                                                                                "column": 54
                                                                                              },
                                                                                              "end": {
                                                                                                "row": 10,
                                                                                                "column": 55
                                                                                              },
                                                                                              "text": "="
                                                                                            },
                                                                                            {
                                                                                              "type": "method_invocation",
                                                                                              "start": {
                                                                                                "row": 10,
                                                                                                "column": 56
                                                                                              },
                                                                                              "end": {
                                                                                                "row": 37,
                                                                                                "column": 43
                                                                                              },
                                                                                              "text": "Futures.toVoid(streamTransactionMetadataTasks\n                                        .abortTxn(scope, stream, txIdPair.getKey(), null, context)\n                                        .exceptionally(e -> {\n                                            Throwable cause = Exceptions.unwrap(e);\n                                            if (cause instanceof StoreException.IllegalStateException ||\n                                                    cause instanceof StoreException.WriteConflictException ||\n                                                    cause instanceof StoreException.DataNotFoundException) {\n                                                // IllegalStateException : The transaction is already in the process of being\n                                                // completed. Ignore\n                                                // WriteConflictException : Another thread is updating the transaction record.\n                                                // ignore. We will effectively retry cleaning up the transaction if it is not\n                                                // already being aborted.\n                                                // DataNotFoundException: If transaction metadata is cleaned up after reading list\n                                                // of active segments\n                                                log.debug(requestId, \"A known exception thrown during seal stream \" +\n                                                        \"while trying to abort transaction on stream {}/{}\", scope, stream, cause);\n                                            } else {\n                                                // throw the original exception\n                                                // Note: we can ignore this error because if there are transactions found on a stream,\n                                                // seal stream reposts the event back into request stream.\n                                                // So in subsequent iteration it will reattempt to abort all active transactions.\n                                                // This is a valid course of action because it is important to understand that\n                                                // all transactions are completable (either via abort of commit).\n                                                log.warn(requestId, \"Exception thrown during seal stream while trying \" +\n                                                        \"to abort transaction on stream {}/{}\", scope, stream, cause);\n                                            }\n                                            return null;\n                                        }))",
                                                                                              "children": [
                                                                                                {
                                                                                                  "type": "identifier",
                                                                                                  "start": {
                                                                                                    "row": 10,
                                                                                                    "column": 56
                                                                                                  },
                                                                                                  "end": {
                                                                                                    "row": 10,
                                                                                                    "column": 63
                                                                                                  },
                                                                                                  "text": "Futures"
                                                                                                },
                                                                                                {
                                                                                                  "type": ".",
                                                                                                  "start": {
                                                                                                    "row": 10,
                                                                                                    "column": 63
                                                                                                  },
                                                                                                  "end": {
                                                                                                    "row": 10,
                                                                                                    "column": 64
                                                                                                  },
                                                                                                  "text": "."
                                                                                                },
                                                                                                {
                                                                                                  "type": "identifier",
                                                                                                  "start": {
                                                                                                    "row": 10,
                                                                                                    "column": 64
                                                                                                  },
                                                                                                  "end": {
                                                                                                    "row": 10,
                                                                                                    "column": 70
                                                                                                  },
                                                                                                  "text": "toVoid"
                                                                                                },
                                                                                                {
                                                                                                  "type": "argument_list",
                                                                                                  "start": {
                                                                                                    "row": 10,
                                                                                                    "column": 70
                                                                                                  },
                                                                                                  "end": {
                                                                                                    "row": 37,
                                                                                                    "column": 43
                                                                                                  },
                                                                                                  "text": "(streamTransactionMetadataTasks\n                                        .abortTxn(scope, stream, txIdPair.getKey(), null, context)\n                                        .exceptionally(e -> {\n                                            Throwable cause = Exceptions.unwrap(e);\n                                            if (cause instanceof StoreException.IllegalStateException ||\n                                                    cause instanceof StoreException.WriteConflictException ||\n                                                    cause instanceof StoreException.DataNotFoundException) {\n                                                // IllegalStateException : The transaction is already in the process of being\n                                                // completed. Ignore\n                                                // WriteConflictException : Another thread is updating the transaction record.\n                                                // ignore. We will effectively retry cleaning up the transaction if it is not\n                                                // already being aborted.\n                                                // DataNotFoundException: If transaction metadata is cleaned up after reading list\n                                                // of active segments\n                                                log.debug(requestId, \"A known exception thrown during seal stream \" +\n                                                        \"while trying to abort transaction on stream {}/{}\", scope, stream, cause);\n                                            } else {\n                                                // throw the original exception\n                                                // Note: we can ignore this error because if there are transactions found on a stream,\n                                                // seal stream reposts the event back into request stream.\n                                                // So in subsequent iteration it will reattempt to abort all active transactions.\n                                                // This is a valid course of action because it is important to understand that\n                                                // all transactions are completable (either via abort of commit).\n                                                log.warn(requestId, \"Exception thrown during seal stream while trying \" +\n                                                        \"to abort transaction on stream {}/{}\", scope, stream, cause);\n                                            }\n                                            return null;\n                                        }))",
                                                                                                  "children": [
                                                                                                    {
                                                                                                      "type": "(",
                                                                                                      "start": {
                                                                                                        "row": 10,
                                                                                                        "column": 70
                                                                                                      },
                                                                                                      "end": {
                                                                                                        "row": 10,
                                                                                                        "column": 71
                                                                                                      },
                                                                                                      "text": "("
                                                                                                    },
                                                                                                    {
                                                                                                      "type": "method_invocation",
                                                                                                      "start": {
                                                                                                        "row": 10,
                                                                                                        "column": 71
                                                                                                      },
                                                                                                      "end": {
                                                                                                        "row": 37,
                                                                                                        "column": 42
                                                                                                      },
                                                                                                      "text": "streamTransactionMetadataTasks\n                                        .abortTxn(scope, stream, txIdPair.getKey(), null, context)\n                                        .exceptionally(e -> {\n                                            Throwable cause = Exceptions.unwrap(e);\n                                            if (cause instanceof StoreException.IllegalStateException ||\n                                                    cause instanceof StoreException.WriteConflictException ||\n                                                    cause instanceof StoreException.DataNotFoundException) {\n                                                // IllegalStateException : The transaction is already in the process of being\n                                                // completed. Ignore\n                                                // WriteConflictException : Another thread is updating the transaction record.\n                                                // ignore. We will effectively retry cleaning up the transaction if it is not\n                                                // already being aborted.\n                                                // DataNotFoundException: If transaction metadata is cleaned up after reading list\n                                                // of active segments\n                                                log.debug(requestId, \"A known exception thrown during seal stream \" +\n                                                        \"while trying to abort transaction on stream {}/{}\", scope, stream, cause);\n                                            } else {\n                                                // throw the original exception\n                                                // Note: we can ignore this error because if there are transactions found on a stream,\n                                                // seal stream reposts the event back into request stream.\n                                                // So in subsequent iteration it will reattempt to abort all active transactions.\n                                                // This is a valid course of action because it is important to understand that\n                                                // all transactions are completable (either via abort of commit).\n                                                log.warn(requestId, \"Exception thrown during seal stream while trying \" +\n                                                        \"to abort transaction on stream {}/{}\", scope, stream, cause);\n                                            }\n                                            return null;\n                                        })",
                                                                                                      "children": [
                                                                                                        {
                                                                                                          "type": "method_invocation",
                                                                                                          "start": {
                                                                                                            "row": 10,
                                                                                                            "column": 71
                                                                                                          },
                                                                                                          "end": {
                                                                                                            "row": 11,
                                                                                                            "column": 98
                                                                                                          },
                                                                                                          "text": "streamTransactionMetadataTasks\n                                        .abortTxn(scope, stream, txIdPair.getKey(), null, context)",
                                                                                                          "children": [
                                                                                                            {
                                                                                                              "type": "identifier",
                                                                                                              "start": {
                                                                                                                "row": 10,
                                                                                                                "column": 71
                                                                                                              },
                                                                                                              "end": {
                                                                                                                "row": 10,
                                                                                                                "column": 101
                                                                                                              },
                                                                                                              "text": "streamTransactionMetadataTasks"
                                                                                                            },
                                                                                                            {
                                                                                                              "type": ".",
                                                                                                              "start": {
                                                                                                                "row": 11,
                                                                                                                "column": 40
                                                                                                              },
                                                                                                              "end": {
                                                                                                                "row": 11,
                                                                                                                "column": 41
                                                                                                              },
                                                                                                              "text": "."
                                                                                                            },
                                                                                                            {
                                                                                                              "type": "identifier",
                                                                                                              "start": {
                                                                                                                "row": 11,
                                                                                                                "column": 41
                                                                                                              },
                                                                                                              "end": {
                                                                                                                "row": 11,
                                                                                                                "column": 49
                                                                                                              },
                                                                                                              "text": "abortTxn"
                                                                                                            },
                                                                                                            {
                                                                                                              "type": "argument_list",
                                                                                                              "start": {
                                                                                                                "row": 11,
                                                                                                                "column": 49
                                                                                                              },
                                                                                                              "end": {
                                                                                                                "row": 11,
                                                                                                                "column": 98
                                                                                                              },
                                                                                                              "text": "(scope, stream, txIdPair.getKey(), null, context)",
                                                                                                              "children": [
                                                                                                                {
                                                                                                                  "type": "(",
                                                                                                                  "start": {
                                                                                                                    "row": 11,
                                                                                                                    "column": 49
                                                                                                                  },
                                                                                                                  "end": {
                                                                                                                    "row": 11,
                                                                                                                    "column": 50
                                                                                                                  },
                                                                                                                  "text": "("
                                                                                                                },
                                                                                                                {
                                                                                                                  "type": "identifier",
                                                                                                                  "start": {
                                                                                                                    "row": 11,
                                                                                                                    "column": 50
                                                                                                                  },
                                                                                                                  "end": {
                                                                                                                    "row": 11,
                                                                                                                    "column": 55
                                                                                                                  },
                                                                                                                  "text": "scope"
                                                                                                                },
                                                                                                                {
                                                                                                                  "type": ",",
                                                                                                                  "start": {
                                                                                                                    "row": 11,
                                                                                                                    "column": 55
                                                                                                                  },
                                                                                                                  "end": {
                                                                                                                    "row": 11,
                                                                                                                    "column": 56
                                                                                                                  },
                                                                                                                  "text": ","
                                                                                                                },
                                                                                                                {
                                                                                                                  "type": "identifier",
                                                                                                                  "start": {
                                                                                                                    "row": 11,
                                                                                                                    "column": 57
                                                                                                                  },
                                                                                                                  "end": {
                                                                                                                    "row": 11,
                                                                                                                    "column": 63
                                                                                                                  },
                                                                                                                  "text": "stream"
                                                                                                                },
                                                                                                                {
                                                                                                                  "type": ",",
                                                                                                                  "start": {
                                                                                                                    "row": 11,
                                                                                                                    "column": 63
                                                                                                                  },
                                                                                                                  "end": {
                                                                                                                    "row": 11,
                                                                                                                    "column": 64
                                                                                                                  },
                                                                                                                  "text": ","
                                                                                                                },
                                                                                                                {
                                                                                                                  "type": "method_invocation",
                                                                                                                  "start": {
                                                                                                                    "row": 11,
                                                                                                                    "column": 65
                                                                                                                  },
                                                                                                                  "end": {
                                                                                                                    "row": 11,
                                                                                                                    "column": 82
                                                                                                                  },
                                                                                                                  "text": "txIdPair.getKey()",
                                                                                                                  "children": [
                                                                                                                    {
                                                                                                                      "type": "identifier",
                                                                                                                      "start": {
                                                                                                                        "row": 11,
                                                                                                                        "column": 65
                                                                                                                      },
                                                                                                                      "end": {
                                                                                                                        "row": 11,
                                                                                                                        "column": 73
                                                                                                                      },
                                                                                                                      "text": "txIdPair"
                                                                                                                    },
                                                                                                                    {
                                                                                                                      "type": ".",
                                                                                                                      "start": {
                                                                                                                        "row": 11,
                                                                                                                        "column": 73
                                                                                                                      },
                                                                                                                      "end": {
                                                                                                                        "row": 11,
                                                                                                                        "column": 74
                                                                                                                      },
                                                                                                                      "text": "."
                                                                                                                    },
                                                                                                                    {
                                                                                                                      "type": "identifier",
                                                                                                                      "start": {
                                                                                                                        "row": 11,
                                                                                                                        "column": 74
                                                                                                                      },
                                                                                                                      "end": {
                                                                                                                        "row": 11,
                                                                                                                        "column": 80
                                                                                                                      },
                                                                                                                      "text": "getKey"
                                                                                                                    },
                                                                                                                    {
                                                                                                                      "type": "argument_list",
                                                                                                                      "start": {
                                                                                                                        "row": 11,
                                                                                                                        "column": 80
                                                                                                                      },
                                                                                                                      "end": {
                                                                                                                        "row": 11,
                                                                                                                        "column": 82
                                                                                                                      },
                                                                                                                      "text": "()",
                                                                                                                      "children": [
                                                                                                                        {
                                                                                                                          "type": "(",
                                                                                                                          "start": {
                                                                                                                            "row": 11,
                                                                                                                            "column": 80
                                                                                                                          },
                                                                                                                          "end": {
                                                                                                                            "row": 11,
                                                                                                                            "column": 81
                                                                                                                          },
                                                                                                                          "text": "("
                                                                                                                        },
                                                                                                                        {
                                                                                                                          "type": ")",
                                                                                                                          "start": {
                                                                                                                            "row": 11,
                                                                                                                            "column": 81
                                                                                                                          },
                                                                                                                          "end": {
                                                                                                                            "row": 11,
                                                                                                                            "column": 82
                                                                                                                          },
                                                                                                                          "text": ")"
                                                                                                                        }
                                                                                                                      ]
                                                                                                                    }
                                                                                                                  ]
                                                                                                                },
                                                                                                                {
                                                                                                                  "type": ",",
                                                                                                                  "start": {
                                                                                                                    "row": 11,
                                                                                                                    "column": 82
                                                                                                                  },
                                                                                                                  "end": {
                                                                                                                    "row": 11,
                                                                                                                    "column": 83
                                                                                                                  },
                                                                                                                  "text": ","
                                                                                                                },
                                                                                                                {
                                                                                                                  "type": "null_literal",
                                                                                                                  "start": {
                                                                                                                    "row": 11,
                                                                                                                    "column": 84
                                                                                                                  },
                                                                                                                  "end": {
                                                                                                                    "row": 11,
                                                                                                                    "column": 88
                                                                                                                  },
                                                                                                                  "text": "null"
                                                                                                                },
                                                                                                                {
                                                                                                                  "type": ",",
                                                                                                                  "start": {
                                                                                                                    "row": 11,
                                                                                                                    "column": 88
                                                                                                                  },
                                                                                                                  "end": {
                                                                                                                    "row": 11,
                                                                                                                    "column": 89
                                                                                                                  },
                                                                                                                  "text": ","
                                                                                                                },
                                                                                                                {
                                                                                                                  "type": "identifier",
                                                                                                                  "start": {
                                                                                                                    "row": 11,
                                                                                                                    "column": 90
                                                                                                                  },
                                                                                                                  "end": {
                                                                                                                    "row": 11,
                                                                                                                    "column": 97
                                                                                                                  },
                                                                                                                  "text": "context"
                                                                                                                },
                                                                                                                {
                                                                                                                  "type": ")",
                                                                                                                  "start": {
                                                                                                                    "row": 11,
                                                                                                                    "column": 97
                                                                                                                  },
                                                                                                                  "end": {
                                                                                                                    "row": 11,
                                                                                                                    "column": 98
                                                                                                                  },
                                                                                                                  "text": ")"
                                                                                                                }
                                                                                                              ]
                                                                                                            }
                                                                                                          ]
                                                                                                        },
                                                                                                        {
                                                                                                          "type": ".",
                                                                                                          "start": {
                                                                                                            "row": 12,
                                                                                                            "column": 40
                                                                                                          },
                                                                                                          "end": {
                                                                                                            "row": 12,
                                                                                                            "column": 41
                                                                                                          },
                                                                                                          "text": "."
                                                                                                        },
                                                                                                        {
                                                                                                          "type": "identifier",
                                                                                                          "start": {
                                                                                                            "row": 12,
                                                                                                            "column": 41
                                                                                                          },
                                                                                                          "end": {
                                                                                                            "row": 12,
                                                                                                            "column": 54
                                                                                                          },
                                                                                                          "text": "exceptionally"
                                                                                                        },
                                                                                                        {
                                                                                                          "type": "argument_list",
                                                                                                          "start": {
                                                                                                            "row": 12,
                                                                                                            "column": 54
                                                                                                          },
                                                                                                          "end": {
                                                                                                            "row": 37,
                                                                                                            "column": 42
                                                                                                          },
                                                                                                          "text": "(e -> {\n                                            Throwable cause = Exceptions.unwrap(e);\n                                            if (cause instanceof StoreException.IllegalStateException ||\n                                                    cause instanceof StoreException.WriteConflictException ||\n                                                    cause instanceof StoreException.DataNotFoundException) {\n                                                // IllegalStateException : The transaction is already in the process of being\n                                                // completed. Ignore\n                                                // WriteConflictException : Another thread is updating the transaction record.\n                                                // ignore. We will effectively retry cleaning up the transaction if it is not\n                                                // already being aborted.\n                                                // DataNotFoundException: If transaction metadata is cleaned up after reading list\n                                                // of active segments\n                                                log.debug(requestId, \"A known exception thrown during seal stream \" +\n                                                        \"while trying to abort transaction on stream {}/{}\", scope, stream, cause);\n                                            } else {\n                                                // throw the original exception\n                                                // Note: we can ignore this error because if there are transactions found on a stream,\n                                                // seal stream reposts the event back into request stream.\n                                                // So in subsequent iteration it will reattempt to abort all active transactions.\n                                                // This is a valid course of action because it is important to understand that\n                                                // all transactions are completable (either via abort of commit).\n                                                log.warn(requestId, \"Exception thrown during seal stream while trying \" +\n                                                        \"to abort transaction on stream {}/{}\", scope, stream, cause);\n                                            }\n                                            return null;\n                                        })",
                                                                                                          "children": [
                                                                                                            {
                                                                                                              "type": "(",
                                                                                                              "start": {
                                                                                                                "row": 12,
                                                                                                                "column": 54
                                                                                                              },
                                                                                                              "end": {
                                                                                                                "row": 12,
                                                                                                                "column": 55
                                                                                                              },
                                                                                                              "text": "("
                                                                                                            },
                                                                                                            {
                                                                                                              "type": "lambda_expression",
                                                                                                              "start": {
                                                                                                                "row": 12,
                                                                                                                "column": 55
                                                                                                              },
                                                                                                              "end": {
                                                                                                                "row": 37,
                                                                                                                "column": 41
                                                                                                              },
                                                                                                              "text": "e -> {\n                                            Throwable cause = Exceptions.unwrap(e);\n                                            if (cause instanceof StoreException.IllegalStateException ||\n                                                    cause instanceof StoreException.WriteConflictException ||\n                                                    cause instanceof StoreException.DataNotFoundException) {\n                                                // IllegalStateException : The transaction is already in the process of being\n                                                // completed. Ignore\n                                                // WriteConflictException : Another thread is updating the transaction record.\n                                                // ignore. We will effectively retry cleaning up the transaction if it is not\n                                                // already being aborted.\n                                                // DataNotFoundException: If transaction metadata is cleaned up after reading list\n                                                // of active segments\n                                                log.debug(requestId, \"A known exception thrown during seal stream \" +\n                                                        \"while trying to abort transaction on stream {}/{}\", scope, stream, cause);\n                                            } else {\n                                                // throw the original exception\n                                                // Note: we can ignore this error because if there are transactions found on a stream,\n                                                // seal stream reposts the event back into request stream.\n                                                // So in subsequent iteration it will reattempt to abort all active transactions.\n                                                // This is a valid course of action because it is important to understand that\n                                                // all transactions are completable (either via abort of commit).\n                                                log.warn(requestId, \"Exception thrown during seal stream while trying \" +\n                                                        \"to abort transaction on stream {}/{}\", scope, stream, cause);\n                                            }\n                                            return null;\n                                        }",
                                                                                                              "children": [
                                                                                                                {
                                                                                                                  "type": "identifier",
                                                                                                                  "start": {
                                                                                                                    "row": 12,
                                                                                                                    "column": 55
                                                                                                                  },
                                                                                                                  "end": {
                                                                                                                    "row": 12,
                                                                                                                    "column": 56
                                                                                                                  },
                                                                                                                  "text": "e"
                                                                                                                },
                                                                                                                {
                                                                                                                  "type": "->",
                                                                                                                  "start": {
                                                                                                                    "row": 12,
                                                                                                                    "column": 57
                                                                                                                  },
                                                                                                                  "end": {
                                                                                                                    "row": 12,
                                                                                                                    "column": 59
                                                                                                                  },
                                                                                                                  "text": "->"
                                                                                                                },
                                                                                                                {
                                                                                                                  "type": "block",
                                                                                                                  "start": {
                                                                                                                    "row": 12,
                                                                                                                    "column": 60
                                                                                                                  },
                                                                                                                  "end": {
                                                                                                                    "row": 37,
                                                                                                                    "column": 41
                                                                                                                  },
                                                                                                                  "text": "{\n                                            Throwable cause = Exceptions.unwrap(e);\n                                            if (cause instanceof StoreException.IllegalStateException ||\n                                                    cause instanceof StoreException.WriteConflictException ||\n                                                    cause instanceof StoreException.DataNotFoundException) {\n                                                // IllegalStateException : The transaction is already in the process of being\n                                                // completed. Ignore\n                                                // WriteConflictException : Another thread is updating the transaction record.\n                                                // ignore. We will effectively retry cleaning up the transaction if it is not\n                                                // already being aborted.\n                                                // DataNotFoundException: If transaction metadata is cleaned up after reading list\n                                                // of active segments\n                                                log.debug(requestId, \"A known exception thrown during seal stream \" +\n                                                        \"while trying to abort transaction on stream {}/{}\", scope, stream, cause);\n                                            } else {\n                                                // throw the original exception\n                                                // Note: we can ignore this error because if there are transactions found on a stream,\n                                                // seal stream reposts the event back into request stream.\n                                                // So in subsequent iteration it will reattempt to abort all active transactions.\n                                                // This is a valid course of action because it is important to understand that\n                                                // all transactions are completable (either via abort of commit).\n                                                log.warn(requestId, \"Exception thrown during seal stream while trying \" +\n                                                        \"to abort transaction on stream {}/{}\", scope, stream, cause);\n                                            }\n                                            return null;\n                                        }",
                                                                                                                  "children": [
                                                                                                                    {
                                                                                                                      "type": "{",
                                                                                                                      "start": {
                                                                                                                        "row": 12,
                                                                                                                        "column": 60
                                                                                                                      },
                                                                                                                      "end": {
                                                                                                                        "row": 12,
                                                                                                                        "column": 61
                                                                                                                      },
                                                                                                                      "text": "{"
                                                                                                                    },
                                                                                                                    {
                                                                                                                      "type": "local_variable_declaration",
                                                                                                                      "start": {
                                                                                                                        "row": 13,
                                                                                                                        "column": 44
                                                                                                                      },
                                                                                                                      "end": {
                                                                                                                        "row": 13,
                                                                                                                        "column": 83
                                                                                                                      },
                                                                                                                      "text": "Throwable cause = Exceptions.unwrap(e);",
                                                                                                                      "children": [
                                                                                                                        {
                                                                                                                          "type": "type_identifier",
                                                                                                                          "start": {
                                                                                                                            "row": 13,
                                                                                                                            "column": 44
                                                                                                                          },
                                                                                                                          "end": {
                                                                                                                            "row": 13,
                                                                                                                            "column": 53
                                                                                                                          },
                                                                                                                          "text": "Throwable"
                                                                                                                        },
                                                                                                                        {
                                                                                                                          "type": "variable_declarator",
                                                                                                                          "start": {
                                                                                                                            "row": 13,
                                                                                                                            "column": 54
                                                                                                                          },
                                                                                                                          "end": {
                                                                                                                            "row": 13,
                                                                                                                            "column": 82
                                                                                                                          },
                                                                                                                          "text": "cause = Exceptions.unwrap(e)",
                                                                                                                          "children": [
                                                                                                                            {
                                                                                                                              "type": "identifier",
                                                                                                                              "start": {
                                                                                                                                "row": 13,
                                                                                                                                "column": 54
                                                                                                                              },
                                                                                                                              "end": {
                                                                                                                                "row": 13,
                                                                                                                                "column": 59
                                                                                                                              },
                                                                                                                              "text": "cause"
                                                                                                                            },
                                                                                                                            {
                                                                                                                              "type": "=",
                                                                                                                              "start": {
                                                                                                                                "row": 13,
                                                                                                                                "column": 60
                                                                                                                              },
                                                                                                                              "end": {
                                                                                                                                "row": 13,
                                                                                                                                "column": 61
                                                                                                                              },
                                                                                                                              "text": "="
                                                                                                                            },
                                                                                                                            {
                                                                                                                              "type": "method_invocation",
                                                                                                                              "start": {
                                                                                                                                "row": 13,
                                                                                                                                "column": 62
                                                                                                                              },
                                                                                                                              "end": {
                                                                                                                                "row": 13,
                                                                                                                                "column": 82
                                                                                                                              },
                                                                                                                              "text": "Exceptions.unwrap(e)",
                                                                                                                              "children": [
                                                                                                                                {
                                                                                                                                  "type": "identifier",
                                                                                                                                  "start": {
                                                                                                                                    "row": 13,
                                                                                                                                    "column": 62
                                                                                                                                  },
                                                                                                                                  "end": {
                                                                                                                                    "row": 13,
                                                                                                                                    "column": 72
                                                                                                                                  },
                                                                                                                                  "text": "Exceptions"
                                                                                                                                },
                                                                                                                                {
                                                                                                                                  "type": ".",
                                                                                                                                  "start": {
                                                                                                                                    "row": 13,
                                                                                                                                    "column": 72
                                                                                                                                  },
                                                                                                                                  "end": {
                                                                                                                                    "row": 13,
                                                                                                                                    "column": 73
                                                                                                                                  },
                                                                                                                                  "text": "."
                                                                                                                                },
                                                                                                                                {
                                                                                                                                  "type": "identifier",
                                                                                                                                  "start": {
                                                                                                                                    "row": 13,
                                                                                                                                    "column": 73
                                                                                                                                  },
                                                                                                                                  "end": {
                                                                                                                                    "row": 13,
                                                                                                                                    "column": 79
                                                                                                                                  },
                                                                                                                                  "text": "unwrap"
                                                                                                                                },
                                                                                                                                {
                                                                                                                                  "type": "argument_list",
                                                                                                                                  "start": {
                                                                                                                                    "row": 13,
                                                                                                                                    "column": 79
                                                                                                                                  },
                                                                                                                                  "end": {
                                                                                                                                    "row": 13,
                                                                                                                                    "column": 82
                                                                                                                                  },
                                                                                                                                  "text": "(e)",
                                                                                                                                  "children": [
                                                                                                                                    {
                                                                                                                                      "type": "(",
                                                                                                                                      "start": {
                                                                                                                                        "row": 13,
                                                                                                                                        "column": 79
                                                                                                                                      },
                                                                                                                                      "end": {
                                                                                                                                        "row": 13,
                                                                                                                                        "column": 80
                                                                                                                                      },
                                                                                                                                      "text": "("
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                      "type": "identifier",
                                                                                                                                      "start": {
                                                                                                                                        "row": 13,
                                                                                                                                        "column": 80
                                                                                                                                      },
                                                                                                                                      "end": {
                                                                                                                                        "row": 13,
                                                                                                                                        "column": 81
                                                                                                                                      },
                                                                                                                                      "text": "e"
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                      "type": ")",
                                                                                                                                      "start": {
                                                                                                                                        "row": 13,
                                                                                                                                        "column": 81
                                                                                                                                      },
                                                                                                                                      "end": {
                                                                                                                                        "row": 13,
                                                                                                                                        "column": 82
                                                                                                                                      },
                                                                                                                                      "text": ")"
                                                                                                                                    }
                                                                                                                                  ]
                                                                                                                                }
                                                                                                                              ]
                                                                                                                            }
                                                                                                                          ]
                                                                                                                        },
                                                                                                                        {
                                                                                                                          "type": ";",
                                                                                                                          "start": {
                                                                                                                            "row": 13,
                                                                                                                            "column": 82
                                                                                                                          },
                                                                                                                          "end": {
                                                                                                                            "row": 13,
                                                                                                                            "column": 83
                                                                                                                          },
                                                                                                                          "text": ";"
                                                                                                                        }
                                                                                                                      ]
                                                                                                                    },
                                                                                                                    {
                                                                                                                      "type": "if_statement",
                                                                                                                      "start": {
                                                                                                                        "row": 14,
                                                                                                                        "column": 44
                                                                                                                      },
                                                                                                                      "end": {
                                                                                                                        "row": 35,
                                                                                                                        "column": 45
                                                                                                                      },
                                                                                                                      "text": "if (cause instanceof StoreException.IllegalStateException ||\n                                                    cause instanceof StoreException.WriteConflictException ||\n                                                    cause instanceof StoreException.DataNotFoundException) {\n                                                // IllegalStateException : The transaction is already in the process of being\n                                                // completed. Ignore\n                                                // WriteConflictException : Another thread is updating the transaction record.\n                                                // ignore. We will effectively retry cleaning up the transaction if it is not\n                                                // already being aborted.\n                                                // DataNotFoundException: If transaction metadata is cleaned up after reading list\n                                                // of active segments\n                                                log.debug(requestId, \"A known exception thrown during seal stream \" +\n                                                        \"while trying to abort transaction on stream {}/{}\", scope, stream, cause);\n                                            } else {\n                                                // throw the original exception\n                                                // Note: we can ignore this error because if there are transactions found on a stream,\n                                                // seal stream reposts the event back into request stream.\n                                                // So in subsequent iteration it will reattempt to abort all active transactions.\n                                                // This is a valid course of action because it is important to understand that\n                                                // all transactions are completable (either via abort of commit).\n                                                log.warn(requestId, \"Exception thrown during seal stream while trying \" +\n                                                        \"to abort transaction on stream {}/{}\", scope, stream, cause);\n                                            }",
                                                                                                                      "children": [
                                                                                                                        {
                                                                                                                          "type": "if",
                                                                                                                          "start": {
                                                                                                                            "row": 14,
                                                                                                                            "column": 44
                                                                                                                          },
                                                                                                                          "end": {
                                                                                                                            "row": 14,
                                                                                                                            "column": 46
                                                                                                                          },
                                                                                                                          "text": "if"
                                                                                                                        },
                                                                                                                        {
                                                                                                                          "type": "condition",
                                                                                                                          "start": {
                                                                                                                            "row": 14,
                                                                                                                            "column": 47
                                                                                                                          },
                                                                                                                          "end": {
                                                                                                                            "row": 16,
                                                                                                                            "column": 106
                                                                                                                          },
                                                                                                                          "text": "(cause instanceof StoreException.IllegalStateException ||\n                                                    cause instanceof StoreException.WriteConflictException ||\n                                                    cause instanceof StoreException.DataNotFoundException)",
                                                                                                                          "children": [
                                                                                                                            {
                                                                                                                              "type": "(",
                                                                                                                              "start": {
                                                                                                                                "row": 14,
                                                                                                                                "column": 47
                                                                                                                              },
                                                                                                                              "end": {
                                                                                                                                "row": 14,
                                                                                                                                "column": 48
                                                                                                                              },
                                                                                                                              "text": "("
                                                                                                                            },
                                                                                                                            {
                                                                                                                              "type": "binary_expression",
                                                                                                                              "start": {
                                                                                                                                "row": 14,
                                                                                                                                "column": 48
                                                                                                                              },
                                                                                                                              "end": {
                                                                                                                                "row": 16,
                                                                                                                                "column": 105
                                                                                                                              },
                                                                                                                              "text": "cause instanceof StoreException.IllegalStateException ||\n                                                    cause instanceof StoreException.WriteConflictException ||\n                                                    cause instanceof StoreException.DataNotFoundException",
                                                                                                                              "children": [
                                                                                                                                {
                                                                                                                                  "type": "binary_expression",
                                                                                                                                  "start": {
                                                                                                                                    "row": 14,
                                                                                                                                    "column": 48
                                                                                                                                  },
                                                                                                                                  "end": {
                                                                                                                                    "row": 15,
                                                                                                                                    "column": 106
                                                                                                                                  },
                                                                                                                                  "text": "cause instanceof StoreException.IllegalStateException ||\n                                                    cause instanceof StoreException.WriteConflictException",
                                                                                                                                  "children": [
                                                                                                                                    {
                                                                                                                                      "type": "instanceof_expression",
                                                                                                                                      "start": {
                                                                                                                                        "row": 14,
                                                                                                                                        "column": 48
                                                                                                                                      },
                                                                                                                                      "end": {
                                                                                                                                        "row": 14,
                                                                                                                                        "column": 101
                                                                                                                                      },
                                                                                                                                      "text": "cause instanceof StoreException.IllegalStateException",
                                                                                                                                      "children": [
                                                                                                                                        {
                                                                                                                                          "type": "identifier",
                                                                                                                                          "start": {
                                                                                                                                            "row": 14,
                                                                                                                                            "column": 48
                                                                                                                                          },
                                                                                                                                          "end": {
                                                                                                                                            "row": 14,
                                                                                                                                            "column": 53
                                                                                                                                          },
                                                                                                                                          "text": "cause"
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                          "type": "instanceof",
                                                                                                                                          "start": {
                                                                                                                                            "row": 14,
                                                                                                                                            "column": 54
                                                                                                                                          },
                                                                                                                                          "end": {
                                                                                                                                            "row": 14,
                                                                                                                                            "column": 64
                                                                                                                                          },
                                                                                                                                          "text": "instanceof"
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                          "type": "scoped_type_identifier",
                                                                                                                                          "start": {
                                                                                                                                            "row": 14,
                                                                                                                                            "column": 65
                                                                                                                                          },
                                                                                                                                          "end": {
                                                                                                                                            "row": 14,
                                                                                                                                            "column": 101
                                                                                                                                          },
                                                                                                                                          "text": "StoreException.IllegalStateException",
                                                                                                                                          "children": [
                                                                                                                                            {
                                                                                                                                              "type": "type_identifier",
                                                                                                                                              "start": {
                                                                                                                                                "row": 14,
                                                                                                                                                "column": 65
                                                                                                                                              },
                                                                                                                                              "end": {
                                                                                                                                                "row": 14,
                                                                                                                                                "column": 79
                                                                                                                                              },
                                                                                                                                              "text": "StoreException"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                              "type": ".",
                                                                                                                                              "start": {
                                                                                                                                                "row": 14,
                                                                                                                                                "column": 79
                                                                                                                                              },
                                                                                                                                              "end": {
                                                                                                                                                "row": 14,
                                                                                                                                                "column": 80
                                                                                                                                              },
                                                                                                                                              "text": "."
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                              "type": "type_identifier",
                                                                                                                                              "start": {
                                                                                                                                                "row": 14,
                                                                                                                                                "column": 80
                                                                                                                                              },
                                                                                                                                              "end": {
                                                                                                                                                "row": 14,
                                                                                                                                                "column": 101
                                                                                                                                              },
                                                                                                                                              "text": "IllegalStateException"
                                                                                                                                            }
                                                                                                                                          ]
                                                                                                                                        }
                                                                                                                                      ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                      "type": "||",
                                                                                                                                      "start": {
                                                                                                                                        "row": 14,
                                                                                                                                        "column": 102
                                                                                                                                      },
                                                                                                                                      "end": {
                                                                                                                                        "row": 14,
                                                                                                                                        "column": 104
                                                                                                                                      },
                                                                                                                                      "text": "||"
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                      "type": "instanceof_expression",
                                                                                                                                      "start": {
                                                                                                                                        "row": 15,
                                                                                                                                        "column": 52
                                                                                                                                      },
                                                                                                                                      "end": {
                                                                                                                                        "row": 15,
                                                                                                                                        "column": 106
                                                                                                                                      },
                                                                                                                                      "text": "cause instanceof StoreException.WriteConflictException",
                                                                                                                                      "children": [
                                                                                                                                        {
                                                                                                                                          "type": "identifier",
                                                                                                                                          "start": {
                                                                                                                                            "row": 15,
                                                                                                                                            "column": 52
                                                                                                                                          },
                                                                                                                                          "end": {
                                                                                                                                            "row": 15,
                                                                                                                                            "column": 57
                                                                                                                                          },
                                                                                                                                          "text": "cause"
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                          "type": "instanceof",
                                                                                                                                          "start": {
                                                                                                                                            "row": 15,
                                                                                                                                            "column": 58
                                                                                                                                          },
                                                                                                                                          "end": {
                                                                                                                                            "row": 15,
                                                                                                                                            "column": 68
                                                                                                                                          },
                                                                                                                                          "text": "instanceof"
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                          "type": "scoped_type_identifier",
                                                                                                                                          "start": {
                                                                                                                                            "row": 15,
                                                                                                                                            "column": 69
                                                                                                                                          },
                                                                                                                                          "end": {
                                                                                                                                            "row": 15,
                                                                                                                                            "column": 106
                                                                                                                                          },
                                                                                                                                          "text": "StoreException.WriteConflictException",
                                                                                                                                          "children": [
                                                                                                                                            {
                                                                                                                                              "type": "type_identifier",
                                                                                                                                              "start": {
                                                                                                                                                "row": 15,
                                                                                                                                                "column": 69
                                                                                                                                              },
                                                                                                                                              "end": {
                                                                                                                                                "row": 15,
                                                                                                                                                "column": 83
                                                                                                                                              },
                                                                                                                                              "text": "StoreException"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                              "type": ".",
                                                                                                                                              "start": {
                                                                                                                                                "row": 15,
                                                                                                                                                "column": 83
                                                                                                                                              },
                                                                                                                                              "end": {
                                                                                                                                                "row": 15,
                                                                                                                                                "column": 84
                                                                                                                                              },
                                                                                                                                              "text": "."
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                              "type": "type_identifier",
                                                                                                                                              "start": {
                                                                                                                                                "row": 15,
                                                                                                                                                "column": 84
                                                                                                                                              },
                                                                                                                                              "end": {
                                                                                                                                                "row": 15,
                                                                                                                                                "column": 106
                                                                                                                                              },
                                                                                                                                              "text": "WriteConflictException"
                                                                                                                                            }
                                                                                                                                          ]
                                                                                                                                        }
                                                                                                                                      ]
                                                                                                                                    }
                                                                                                                                  ]
                                                                                                                                },
                                                                                                                                {
                                                                                                                                  "type": "||",
                                                                                                                                  "start": {
                                                                                                                                    "row": 15,
                                                                                                                                    "column": 107
                                                                                                                                  },
                                                                                                                                  "end": {
                                                                                                                                    "row": 15,
                                                                                                                                    "column": 109
                                                                                                                                  },
                                                                                                                                  "text": "||"
                                                                                                                                },
                                                                                                                                {
                                                                                                                                  "type": "instanceof_expression",
                                                                                                                                  "start": {
                                                                                                                                    "row": 16,
                                                                                                                                    "column": 52
                                                                                                                                  },
                                                                                                                                  "end": {
                                                                                                                                    "row": 16,
                                                                                                                                    "column": 105
                                                                                                                                  },
                                                                                                                                  "text": "cause instanceof StoreException.DataNotFoundException",
                                                                                                                                  "children": [
                                                                                                                                    {
                                                                                                                                      "type": "identifier",
                                                                                                                                      "start": {
                                                                                                                                        "row": 16,
                                                                                                                                        "column": 52
                                                                                                                                      },
                                                                                                                                      "end": {
                                                                                                                                        "row": 16,
                                                                                                                                        "column": 57
                                                                                                                                      },
                                                                                                                                      "text": "cause"
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                      "type": "instanceof",
                                                                                                                                      "start": {
                                                                                                                                        "row": 16,
                                                                                                                                        "column": 58
                                                                                                                                      },
                                                                                                                                      "end": {
                                                                                                                                        "row": 16,
                                                                                                                                        "column": 68
                                                                                                                                      },
                                                                                                                                      "text": "instanceof"
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                      "type": "scoped_type_identifier",
                                                                                                                                      "start": {
                                                                                                                                        "row": 16,
                                                                                                                                        "column": 69
                                                                                                                                      },
                                                                                                                                      "end": {
                                                                                                                                        "row": 16,
                                                                                                                                        "column": 105
                                                                                                                                      },
                                                                                                                                      "text": "StoreException.DataNotFoundException",
                                                                                                                                      "children": [
                                                                                                                                        {
                                                                                                                                          "type": "type_identifier",
                                                                                                                                          "start": {
                                                                                                                                            "row": 16,
                                                                                                                                            "column": 69
                                                                                                                                          },
                                                                                                                                          "end": {
                                                                                                                                            "row": 16,
                                                                                                                                            "column": 83
                                                                                                                                          },
                                                                                                                                          "text": "StoreException"
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                          "type": ".",
                                                                                                                                          "start": {
                                                                                                                                            "row": 16,
                                                                                                                                            "column": 83
                                                                                                                                          },
                                                                                                                                          "end": {
                                                                                                                                            "row": 16,
                                                                                                                                            "column": 84
                                                                                                                                          },
                                                                                                                                          "text": "."
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                          "type": "type_identifier",
                                                                                                                                          "start": {
                                                                                                                                            "row": 16,
                                                                                                                                            "column": 84
                                                                                                                                          },
                                                                                                                                          "end": {
                                                                                                                                            "row": 16,
                                                                                                                                            "column": 105
                                                                                                                                          },
                                                                                                                                          "text": "DataNotFoundException"
                                                                                                                                        }
                                                                                                                                      ]
                                                                                                                                    }
                                                                                                                                  ]
                                                                                                                                }
                                                                                                                              ]
                                                                                                                            },
                                                                                                                            {
                                                                                                                              "type": ")",
                                                                                                                              "start": {
                                                                                                                                "row": 16,
                                                                                                                                "column": 105
                                                                                                                              },
                                                                                                                              "end": {
                                                                                                                                "row": 16,
                                                                                                                                "column": 106
                                                                                                                              },
                                                                                                                              "text": ")"
                                                                                                                            }
                                                                                                                          ]
                                                                                                                        },
                                                                                                                        {
                                                                                                                          "type": "block",
                                                                                                                          "start": {
                                                                                                                            "row": 16,
                                                                                                                            "column": 107
                                                                                                                          },
                                                                                                                          "end": {
                                                                                                                            "row": 26,
                                                                                                                            "column": 45
                                                                                                                          },
                                                                                                                          "text": "{\n                                                // IllegalStateException : The transaction is already in the process of being\n                                                // completed. Ignore\n                                                // WriteConflictException : Another thread is updating the transaction record.\n                                                // ignore. We will effectively retry cleaning up the transaction if it is not\n                                                // already being aborted.\n                                                // DataNotFoundException: If transaction metadata is cleaned up after reading list\n                                                // of active segments\n                                                log.debug(requestId, \"A known exception thrown during seal stream \" +\n                                                        \"while trying to abort transaction on stream {}/{}\", scope, stream, cause);\n                                            }",
                                                                                                                          "children": [
                                                                                                                            {
                                                                                                                              "type": "{",
                                                                                                                              "start": {
                                                                                                                                "row": 16,
                                                                                                                                "column": 107
                                                                                                                              },
                                                                                                                              "end": {
                                                                                                                                "row": 16,
                                                                                                                                "column": 108
                                                                                                                              },
                                                                                                                              "text": "{"
                                                                                                                            },
                                                                                                                            {
                                                                                                                              "type": "line_comment",
                                                                                                                              "start": {
                                                                                                                                "row": 17,
                                                                                                                                "column": 48
                                                                                                                              },
                                                                                                                              "end": {
                                                                                                                                "row": 17,
                                                                                                                                "column": 125
                                                                                                                              },
                                                                                                                              "text": "// IllegalStateException : The transaction is already in the process of being"
                                                                                                                            },
                                                                                                                            {
                                                                                                                              "type": "line_comment",
                                                                                                                              "start": {
                                                                                                                                "row": 18,
                                                                                                                                "column": 48
                                                                                                                              },
                                                                                                                              "end": {
                                                                                                                                "row": 18,
                                                                                                                                "column": 68
                                                                                                                              },
                                                                                                                              "text": "// completed. Ignore"
                                                                                                                            },
                                                                                                                            {
                                                                                                                              "type": "line_comment",
                                                                                                                              "start": {
                                                                                                                                "row": 19,
                                                                                                                                "column": 48
                                                                                                                              },
                                                                                                                              "end": {
                                                                                                                                "row": 19,
                                                                                                                                "column": 126
                                                                                                                              },
                                                                                                                              "text": "// WriteConflictException : Another thread is updating the transaction record."
                                                                                                                            },
                                                                                                                            {
                                                                                                                              "type": "line_comment",
                                                                                                                              "start": {
                                                                                                                                "row": 20,
                                                                                                                                "column": 48
                                                                                                                              },
                                                                                                                              "end": {
                                                                                                                                "row": 20,
                                                                                                                                "column": 125
                                                                                                                              },
                                                                                                                              "text": "// ignore. We will effectively retry cleaning up the transaction if it is not"
                                                                                                                            },
                                                                                                                            {
                                                                                                                              "type": "line_comment",
                                                                                                                              "start": {
                                                                                                                                "row": 21,
                                                                                                                                "column": 48
                                                                                                                              },
                                                                                                                              "end": {
                                                                                                                                "row": 21,
                                                                                                                                "column": 73
                                                                                                                              },
                                                                                                                              "text": "// already being aborted."
                                                                                                                            },
                                                                                                                            {
                                                                                                                              "type": "line_comment",
                                                                                                                              "start": {
                                                                                                                                "row": 22,
                                                                                                                                "column": 48
                                                                                                                              },
                                                                                                                              "end": {
                                                                                                                                "row": 22,
                                                                                                                                "column": 130
                                                                                                                              },
                                                                                                                              "text": "// DataNotFoundException: If transaction metadata is cleaned up after reading list"
                                                                                                                            },
                                                                                                                            {
                                                                                                                              "type": "line_comment",
                                                                                                                              "start": {
                                                                                                                                "row": 23,
                                                                                                                                "column": 48
                                                                                                                              },
                                                                                                                              "end": {
                                                                                                                                "row": 23,
                                                                                                                                "column": 69
                                                                                                                              },
                                                                                                                              "text": "// of active segments"
                                                                                                                            },
                                                                                                                            {
                                                                                                                              "type": "expression_statement",
                                                                                                                              "start": {
                                                                                                                                "row": 24,
                                                                                                                                "column": 48
                                                                                                                              },
                                                                                                                              "end": {
                                                                                                                                "row": 25,
                                                                                                                                "column": 131
                                                                                                                              },
                                                                                                                              "text": "log.debug(requestId, \"A known exception thrown during seal stream \" +\n                                                        \"while trying to abort transaction on stream {}/{}\", scope, stream, cause);",
                                                                                                                              "children": [
                                                                                                                                {
                                                                                                                                  "type": "method_invocation",
                                                                                                                                  "start": {
                                                                                                                                    "row": 24,
                                                                                                                                    "column": 48
                                                                                                                                  },
                                                                                                                                  "end": {
                                                                                                                                    "row": 25,
                                                                                                                                    "column": 130
                                                                                                                                  },
                                                                                                                                  "text": "log.debug(requestId, \"A known exception thrown during seal stream \" +\n                                                        \"while trying to abort transaction on stream {}/{}\", scope, stream, cause)",
                                                                                                                                  "children": [
                                                                                                                                    {
                                                                                                                                      "type": "identifier",
                                                                                                                                      "start": {
                                                                                                                                        "row": 24,
                                                                                                                                        "column": 48
                                                                                                                                      },
                                                                                                                                      "end": {
                                                                                                                                        "row": 24,
                                                                                                                                        "column": 51
                                                                                                                                      },
                                                                                                                                      "text": "log"
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                      "type": ".",
                                                                                                                                      "start": {
                                                                                                                                        "row": 24,
                                                                                                                                        "column": 51
                                                                                                                                      },
                                                                                                                                      "end": {
                                                                                                                                        "row": 24,
                                                                                                                                        "column": 52
                                                                                                                                      },
                                                                                                                                      "text": "."
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                      "type": "identifier",
                                                                                                                                      "start": {
                                                                                                                                        "row": 24,
                                                                                                                                        "column": 52
                                                                                                                                      },
                                                                                                                                      "end": {
                                                                                                                                        "row": 24,
                                                                                                                                        "column": 57
                                                                                                                                      },
                                                                                                                                      "text": "debug"
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                      "type": "argument_list",
                                                                                                                                      "start": {
                                                                                                                                        "row": 24,
                                                                                                                                        "column": 57
                                                                                                                                      },
                                                                                                                                      "end": {
                                                                                                                                        "row": 25,
                                                                                                                                        "column": 130
                                                                                                                                      },
                                                                                                                                      "text": "(requestId, \"A known exception thrown during seal stream \" +\n                                                        \"while trying to abort transaction on stream {}/{}\", scope, stream, cause)",
                                                                                                                                      "children": [
                                                                                                                                        {
                                                                                                                                          "type": "(",
                                                                                                                                          "start": {
                                                                                                                                            "row": 24,
                                                                                                                                            "column": 57
                                                                                                                                          },
                                                                                                                                          "end": {
                                                                                                                                            "row": 24,
                                                                                                                                            "column": 58
                                                                                                                                          },
                                                                                                                                          "text": "("
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                          "type": "identifier",
                                                                                                                                          "start": {
                                                                                                                                            "row": 24,
                                                                                                                                            "column": 58
                                                                                                                                          },
                                                                                                                                          "end": {
                                                                                                                                            "row": 24,
                                                                                                                                            "column": 67
                                                                                                                                          },
                                                                                                                                          "text": "requestId"
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                          "type": ",",
                                                                                                                                          "start": {
                                                                                                                                            "row": 24,
                                                                                                                                            "column": 67
                                                                                                                                          },
                                                                                                                                          "end": {
                                                                                                                                            "row": 24,
                                                                                                                                            "column": 68
                                                                                                                                          },
                                                                                                                                          "text": ","
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                          "type": "binary_expression",
                                                                                                                                          "start": {
                                                                                                                                            "row": 24,
                                                                                                                                            "column": 69
                                                                                                                                          },
                                                                                                                                          "end": {
                                                                                                                                            "row": 25,
                                                                                                                                            "column": 107
                                                                                                                                          },
                                                                                                                                          "text": "\"A known exception thrown during seal stream \" +\n                                                        \"while trying to abort transaction on stream {}/{}\"",
                                                                                                                                          "children": [
                                                                                                                                            {
                                                                                                                                              "type": "string_literal",
                                                                                                                                              "start": {
                                                                                                                                                "row": 24,
                                                                                                                                                "column": 69
                                                                                                                                              },
                                                                                                                                              "end": {
                                                                                                                                                "row": 24,
                                                                                                                                                "column": 115
                                                                                                                                              },
                                                                                                                                              "text": "\"A known exception thrown during seal stream \"",
                                                                                                                                              "children": [
                                                                                                                                                {
                                                                                                                                                  "type": "\"",
                                                                                                                                                  "start": {
                                                                                                                                                    "row": 24,
                                                                                                                                                    "column": 69
                                                                                                                                                  },
                                                                                                                                                  "end": {
                                                                                                                                                    "row": 24,
                                                                                                                                                    "column": 70
                                                                                                                                                  },
                                                                                                                                                  "text": "\""
                                                                                                                                                },
                                                                                                                                                {
                                                                                                                                                  "type": "string_fragment",
                                                                                                                                                  "start": {
                                                                                                                                                    "row": 24,
                                                                                                                                                    "column": 70
                                                                                                                                                  },
                                                                                                                                                  "end": {
                                                                                                                                                    "row": 24,
                                                                                                                                                    "column": 114
                                                                                                                                                  },
                                                                                                                                                  "text": "A known exception thrown during seal stream "
                                                                                                                                                },
                                                                                                                                                {
                                                                                                                                                  "type": "\"",
                                                                                                                                                  "start": {
                                                                                                                                                    "row": 24,
                                                                                                                                                    "column": 114
                                                                                                                                                  },
                                                                                                                                                  "end": {
                                                                                                                                                    "row": 24,
                                                                                                                                                    "column": 115
                                                                                                                                                  },
                                                                                                                                                  "text": "\""
                                                                                                                                                }
                                                                                                                                              ]
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                              "type": "+",
                                                                                                                                              "start": {
                                                                                                                                                "row": 24,
                                                                                                                                                "column": 116
                                                                                                                                              },
                                                                                                                                              "end": {
                                                                                                                                                "row": 24,
                                                                                                                                                "column": 117
                                                                                                                                              },
                                                                                                                                              "text": "+"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                              "type": "string_literal",
                                                                                                                                              "start": {
                                                                                                                                                "row": 25,
                                                                                                                                                "column": 56
                                                                                                                                              },
                                                                                                                                              "end": {
                                                                                                                                                "row": 25,
                                                                                                                                                "column": 107
                                                                                                                                              },
                                                                                                                                              "text": "\"while trying to abort transaction on stream {}/{}\"",
                                                                                                                                              "children": [
                                                                                                                                                {
                                                                                                                                                  "type": "\"",
                                                                                                                                                  "start": {
                                                                                                                                                    "row": 25,
                                                                                                                                                    "column": 56
                                                                                                                                                  },
                                                                                                                                                  "end": {
                                                                                                                                                    "row": 25,
                                                                                                                                                    "column": 57
                                                                                                                                                  },
                                                                                                                                                  "text": "\""
                                                                                                                                                },
                                                                                                                                                {
                                                                                                                                                  "type": "string_fragment",
                                                                                                                                                  "start": {
                                                                                                                                                    "row": 25,
                                                                                                                                                    "column": 57
                                                                                                                                                  },
                                                                                                                                                  "end": {
                                                                                                                                                    "row": 25,
                                                                                                                                                    "column": 106
                                                                                                                                                  },
                                                                                                                                                  "text": "while trying to abort transaction on stream {}/{}"
                                                                                                                                                },
                                                                                                                                                {
                                                                                                                                                  "type": "\"",
                                                                                                                                                  "start": {
                                                                                                                                                    "row": 25,
                                                                                                                                                    "column": 106
                                                                                                                                                  },
                                                                                                                                                  "end": {
                                                                                                                                                    "row": 25,
                                                                                                                                                    "column": 107
                                                                                                                                                  },
                                                                                                                                                  "text": "\""
                                                                                                                                                }
                                                                                                                                              ]
                                                                                                                                            }
                                                                                                                                          ]
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                          "type": ",",
                                                                                                                                          "start": {
                                                                                                                                            "row": 25,
                                                                                                                                            "column": 107
                                                                                                                                          },
                                                                                                                                          "end": {
                                                                                                                                            "row": 25,
                                                                                                                                            "column": 108
                                                                                                                                          },
                                                                                                                                          "text": ","
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                          "type": "identifier",
                                                                                                                                          "start": {
                                                                                                                                            "row": 25,
                                                                                                                                            "column": 109
                                                                                                                                          },
                                                                                                                                          "end": {
                                                                                                                                            "row": 25,
                                                                                                                                            "column": 114
                                                                                                                                          },
                                                                                                                                          "text": "scope"
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                          "type": ",",
                                                                                                                                          "start": {
                                                                                                                                            "row": 25,
                                                                                                                                            "column": 114
                                                                                                                                          },
                                                                                                                                          "end": {
                                                                                                                                            "row": 25,
                                                                                                                                            "column": 115
                                                                                                                                          },
                                                                                                                                          "text": ","
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                          "type": "identifier",
                                                                                                                                          "start": {
                                                                                                                                            "row": 25,
                                                                                                                                            "column": 116
                                                                                                                                          },
                                                                                                                                          "end": {
                                                                                                                                            "row": 25,
                                                                                                                                            "column": 122
                                                                                                                                          },
                                                                                                                                          "text": "stream"
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                          "type": ",",
                                                                                                                                          "start": {
                                                                                                                                            "row": 25,
                                                                                                                                            "column": 122
                                                                                                                                          },
                                                                                                                                          "end": {
                                                                                                                                            "row": 25,
                                                                                                                                            "column": 123
                                                                                                                                          },
                                                                                                                                          "text": ","
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                          "type": "identifier",
                                                                                                                                          "start": {
                                                                                                                                            "row": 25,
                                                                                                                                            "column": 124
                                                                                                                                          },
                                                                                                                                          "end": {
                                                                                                                                            "row": 25,
                                                                                                                                            "column": 129
                                                                                                                                          },
                                                                                                                                          "text": "cause"
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                          "type": ")",
                                                                                                                                          "start": {
                                                                                                                                            "row": 25,
                                                                                                                                            "column": 129
                                                                                                                                          },
                                                                                                                                          "end": {
                                                                                                                                            "row": 25,
                                                                                                                                            "column": 130
                                                                                                                                          },
                                                                                                                                          "text": ")"
                                                                                                                                        }
                                                                                                                                      ]
                                                                                                                                    }
                                                                                                                                  ]
                                                                                                                                },
                                                                                                                                {
                                                                                                                                  "type": ";",
                                                                                                                                  "start": {
                                                                                                                                    "row": 25,
                                                                                                                                    "column": 130
                                                                                                                                  },
                                                                                                                                  "end": {
                                                                                                                                    "row": 25,
                                                                                                                                    "column": 131
                                                                                                                                  },
                                                                                                                                  "text": ";"
                                                                                                                                }
                                                                                                                              ]
                                                                                                                            },
                                                                                                                            {
                                                                                                                              "type": "}",
                                                                                                                              "start": {
                                                                                                                                "row": 26,
                                                                                                                                "column": 44
                                                                                                                              },
                                                                                                                              "end": {
                                                                                                                                "row": 26,
                                                                                                                                "column": 45
                                                                                                                              },
                                                                                                                              "text": "}"
                                                                                                                            }
                                                                                                                          ]
                                                                                                                        },
                                                                                                                        {
                                                                                                                          "type": "else",
                                                                                                                          "start": {
                                                                                                                            "row": 26,
                                                                                                                            "column": 46
                                                                                                                          },
                                                                                                                          "end": {
                                                                                                                            "row": 26,
                                                                                                                            "column": 50
                                                                                                                          },
                                                                                                                          "text": "else"
                                                                                                                        },
                                                                                                                        {
                                                                                                                          "type": "block",
                                                                                                                          "start": {
                                                                                                                            "row": 26,
                                                                                                                            "column": 51
                                                                                                                          },
                                                                                                                          "end": {
                                                                                                                            "row": 35,
                                                                                                                            "column": 45
                                                                                                                          },
                                                                                                                          "text": "{\n                                                // throw the original exception\n                                                // Note: we can ignore this error because if there are transactions found on a stream,\n                                                // seal stream reposts the event back into request stream.\n                                                // So in subsequent iteration it will reattempt to abort all active transactions.\n                                                // This is a valid course of action because it is important to understand that\n                                                // all transactions are completable (either via abort of commit).\n                                                log.warn(requestId, \"Exception thrown during seal stream while trying \" +\n                                                        \"to abort transaction on stream {}/{}\", scope, stream, cause);\n                                            }",
                                                                                                                          "children": [
                                                                                                                            {
                                                                                                                              "type": "{",
                                                                                                                              "start": {
                                                                                                                                "row": 26,
                                                                                                                                "column": 51
                                                                                                                              },
                                                                                                                              "end": {
                                                                                                                                "row": 26,
                                                                                                                                "column": 52
                                                                                                                              },
                                                                                                                              "text": "{"
                                                                                                                            },
                                                                                                                            {
                                                                                                                              "type": "line_comment",
                                                                                                                              "start": {
                                                                                                                                "row": 27,
                                                                                                                                "column": 48
                                                                                                                              },
                                                                                                                              "end": {
                                                                                                                                "row": 27,
                                                                                                                                "column": 79
                                                                                                                              },
                                                                                                                              "text": "// throw the original exception"
                                                                                                                            },
                                                                                                                            {
                                                                                                                              "type": "line_comment",
                                                                                                                              "start": {
                                                                                                                                "row": 28,
                                                                                                                                "column": 48
                                                                                                                              },
                                                                                                                              "end": {
                                                                                                                                "row": 28,
                                                                                                                                "column": 134
                                                                                                                              },
                                                                                                                              "text": "// Note: we can ignore this error because if there are transactions found on a stream,"
                                                                                                                            },
                                                                                                                            {
                                                                                                                              "type": "line_comment",
                                                                                                                              "start": {
                                                                                                                                "row": 29,
                                                                                                                                "column": 48
                                                                                                                              },
                                                                                                                              "end": {
                                                                                                                                "row": 29,
                                                                                                                                "column": 106
                                                                                                                              },
                                                                                                                              "text": "// seal stream reposts the event back into request stream."
                                                                                                                            },
                                                                                                                            {
                                                                                                                              "type": "line_comment",
                                                                                                                              "start": {
                                                                                                                                "row": 30,
                                                                                                                                "column": 48
                                                                                                                              },
                                                                                                                              "end": {
                                                                                                                                "row": 30,
                                                                                                                                "column": 129
                                                                                                                              },
                                                                                                                              "text": "// So in subsequent iteration it will reattempt to abort all active transactions."
                                                                                                                            },
                                                                                                                            {
                                                                                                                              "type": "line_comment",
                                                                                                                              "start": {
                                                                                                                                "row": 31,
                                                                                                                                "column": 48
                                                                                                                              },
                                                                                                                              "end": {
                                                                                                                                "row": 31,
                                                                                                                                "column": 126
                                                                                                                              },
                                                                                                                              "text": "// This is a valid course of action because it is important to understand that"
                                                                                                                            },
                                                                                                                            {
                                                                                                                              "type": "line_comment",
                                                                                                                              "start": {
                                                                                                                                "row": 32,
                                                                                                                                "column": 48
                                                                                                                              },
                                                                                                                              "end": {
                                                                                                                                "row": 32,
                                                                                                                                "column": 113
                                                                                                                              },
                                                                                                                              "text": "// all transactions are completable (either via abort of commit)."
                                                                                                                            },
                                                                                                                            {
                                                                                                                              "type": "expression_statement",
                                                                                                                              "start": {
                                                                                                                                "row": 33,
                                                                                                                                "column": 48
                                                                                                                              },
                                                                                                                              "end": {
                                                                                                                                "row": 34,
                                                                                                                                "column": 118
                                                                                                                              },
                                                                                                                              "text": "log.warn(requestId, \"Exception thrown during seal stream while trying \" +\n                                                        \"to abort transaction on stream {}/{}\", scope, stream, cause);",
                                                                                                                              "children": [
                                                                                                                                {
                                                                                                                                  "type": "method_invocation",
                                                                                                                                  "start": {
                                                                                                                                    "row": 33,
                                                                                                                                    "column": 48
                                                                                                                                  },
                                                                                                                                  "end": {
                                                                                                                                    "row": 34,
                                                                                                                                    "column": 117
                                                                                                                                  },
                                                                                                                                  "text": "log.warn(requestId, \"Exception thrown during seal stream while trying \" +\n                                                        \"to abort transaction on stream {}/{}\", scope, stream, cause)",
                                                                                                                                  "children": [
                                                                                                                                    {
                                                                                                                                      "type": "identifier",
                                                                                                                                      "start": {
                                                                                                                                        "row": 33,
                                                                                                                                        "column": 48
                                                                                                                                      },
                                                                                                                                      "end": {
                                                                                                                                        "row": 33,
                                                                                                                                        "column": 51
                                                                                                                                      },
                                                                                                                                      "text": "log"
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                      "type": ".",
                                                                                                                                      "start": {
                                                                                                                                        "row": 33,
                                                                                                                                        "column": 51
                                                                                                                                      },
                                                                                                                                      "end": {
                                                                                                                                        "row": 33,
                                                                                                                                        "column": 52
                                                                                                                                      },
                                                                                                                                      "text": "."
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                      "type": "identifier",
                                                                                                                                      "start": {
                                                                                                                                        "row": 33,
                                                                                                                                        "column": 52
                                                                                                                                      },
                                                                                                                                      "end": {
                                                                                                                                        "row": 33,
                                                                                                                                        "column": 56
                                                                                                                                      },
                                                                                                                                      "text": "warn"
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                      "type": "argument_list",
                                                                                                                                      "start": {
                                                                                                                                        "row": 33,
                                                                                                                                        "column": 56
                                                                                                                                      },
                                                                                                                                      "end": {
                                                                                                                                        "row": 34,
                                                                                                                                        "column": 117
                                                                                                                                      },
                                                                                                                                      "text": "(requestId, \"Exception thrown during seal stream while trying \" +\n                                                        \"to abort transaction on stream {}/{}\", scope, stream, cause)",
                                                                                                                                      "children": [
                                                                                                                                        {
                                                                                                                                          "type": "(",
                                                                                                                                          "start": {
                                                                                                                                            "row": 33,
                                                                                                                                            "column": 56
                                                                                                                                          },
                                                                                                                                          "end": {
                                                                                                                                            "row": 33,
                                                                                                                                            "column": 57
                                                                                                                                          },
                                                                                                                                          "text": "("
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                          "type": "identifier",
                                                                                                                                          "start": {
                                                                                                                                            "row": 33,
                                                                                                                                            "column": 57
                                                                                                                                          },
                                                                                                                                          "end": {
                                                                                                                                            "row": 33,
                                                                                                                                            "column": 66
                                                                                                                                          },
                                                                                                                                          "text": "requestId"
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                          "type": ",",
                                                                                                                                          "start": {
                                                                                                                                            "row": 33,
                                                                                                                                            "column": 66
                                                                                                                                          },
                                                                                                                                          "end": {
                                                                                                                                            "row": 33,
                                                                                                                                            "column": 67
                                                                                                                                          },
                                                                                                                                          "text": ","
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                          "type": "binary_expression",
                                                                                                                                          "start": {
                                                                                                                                            "row": 33,
                                                                                                                                            "column": 68
                                                                                                                                          },
                                                                                                                                          "end": {
                                                                                                                                            "row": 34,
                                                                                                                                            "column": 94
                                                                                                                                          },
                                                                                                                                          "text": "\"Exception thrown during seal stream while trying \" +\n                                                        \"to abort transaction on stream {}/{}\"",
                                                                                                                                          "children": [
                                                                                                                                            {
                                                                                                                                              "type": "string_literal",
                                                                                                                                              "start": {
                                                                                                                                                "row": 33,
                                                                                                                                                "column": 68
                                                                                                                                              },
                                                                                                                                              "end": {
                                                                                                                                                "row": 33,
                                                                                                                                                "column": 119
                                                                                                                                              },
                                                                                                                                              "text": "\"Exception thrown during seal stream while trying \"",
                                                                                                                                              "children": [
                                                                                                                                                {
                                                                                                                                                  "type": "\"",
                                                                                                                                                  "start": {
                                                                                                                                                    "row": 33,
                                                                                                                                                    "column": 68
                                                                                                                                                  },
                                                                                                                                                  "end": {
                                                                                                                                                    "row": 33,
                                                                                                                                                    "column": 69
                                                                                                                                                  },
                                                                                                                                                  "text": "\""
                                                                                                                                                },
                                                                                                                                                {
                                                                                                                                                  "type": "string_fragment",
                                                                                                                                                  "start": {
                                                                                                                                                    "row": 33,
                                                                                                                                                    "column": 69
                                                                                                                                                  },
                                                                                                                                                  "end": {
                                                                                                                                                    "row": 33,
                                                                                                                                                    "column": 118
                                                                                                                                                  },
                                                                                                                                                  "text": "Exception thrown during seal stream while trying "
                                                                                                                                                },
                                                                                                                                                {
                                                                                                                                                  "type": "\"",
                                                                                                                                                  "start": {
                                                                                                                                                    "row": 33,
                                                                                                                                                    "column": 118
                                                                                                                                                  },
                                                                                                                                                  "end": {
                                                                                                                                                    "row": 33,
                                                                                                                                                    "column": 119
                                                                                                                                                  },
                                                                                                                                                  "text": "\""
                                                                                                                                                }
                                                                                                                                              ]
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                              "type": "+",
                                                                                                                                              "start": {
                                                                                                                                                "row": 33,
                                                                                                                                                "column": 120
                                                                                                                                              },
                                                                                                                                              "end": {
                                                                                                                                                "row": 33,
                                                                                                                                                "column": 121
                                                                                                                                              },
                                                                                                                                              "text": "+"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                              "type": "string_literal",
                                                                                                                                              "start": {
                                                                                                                                                "row": 34,
                                                                                                                                                "column": 56
                                                                                                                                              },
                                                                                                                                              "end": {
                                                                                                                                                "row": 34,
                                                                                                                                                "column": 94
                                                                                                                                              },
                                                                                                                                              "text": "\"to abort transaction on stream {}/{}\"",
                                                                                                                                              "children": [
                                                                                                                                                {
                                                                                                                                                  "type": "\"",
                                                                                                                                                  "start": {
                                                                                                                                                    "row": 34,
                                                                                                                                                    "column": 56
                                                                                                                                                  },
                                                                                                                                                  "end": {
                                                                                                                                                    "row": 34,
                                                                                                                                                    "column": 57
                                                                                                                                                  },
                                                                                                                                                  "text": "\""
                                                                                                                                                },
                                                                                                                                                {
                                                                                                                                                  "type": "string_fragment",
                                                                                                                                                  "start": {
                                                                                                                                                    "row": 34,
                                                                                                                                                    "column": 57
                                                                                                                                                  },
                                                                                                                                                  "end": {
                                                                                                                                                    "row": 34,
                                                                                                                                                    "column": 93
                                                                                                                                                  },
                                                                                                                                                  "text": "to abort transaction on stream {}/{}"
                                                                                                                                                },
                                                                                                                                                {
                                                                                                                                                  "type": "\"",
                                                                                                                                                  "start": {
                                                                                                                                                    "row": 34,
                                                                                                                                                    "column": 93
                                                                                                                                                  },
                                                                                                                                                  "end": {
                                                                                                                                                    "row": 34,
                                                                                                                                                    "column": 94
                                                                                                                                                  },
                                                                                                                                                  "text": "\""
                                                                                                                                                }
                                                                                                                                              ]
                                                                                                                                            }
                                                                                                                                          ]
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                          "type": ",",
                                                                                                                                          "start": {
                                                                                                                                            "row": 34,
                                                                                                                                            "column": 94
                                                                                                                                          },
                                                                                                                                          "end": {
                                                                                                                                            "row": 34,
                                                                                                                                            "column": 95
                                                                                                                                          },
                                                                                                                                          "text": ","
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                          "type": "identifier",
                                                                                                                                          "start": {
                                                                                                                                            "row": 34,
                                                                                                                                            "column": 96
                                                                                                                                          },
                                                                                                                                          "end": {
                                                                                                                                            "row": 34,
                                                                                                                                            "column": 101
                                                                                                                                          },
                                                                                                                                          "text": "scope"
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                          "type": ",",
                                                                                                                                          "start": {
                                                                                                                                            "row": 34,
                                                                                                                                            "column": 101
                                                                                                                                          },
                                                                                                                                          "end": {
                                                                                                                                            "row": 34,
                                                                                                                                            "column": 102
                                                                                                                                          },
                                                                                                                                          "text": ","
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                          "type": "identifier",
                                                                                                                                          "start": {
                                                                                                                                            "row": 34,
                                                                                                                                            "column": 103
                                                                                                                                          },
                                                                                                                                          "end": {
                                                                                                                                            "row": 34,
                                                                                                                                            "column": 109
                                                                                                                                          },
                                                                                                                                          "text": "stream"
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                          "type": ",",
                                                                                                                                          "start": {
                                                                                                                                            "row": 34,
                                                                                                                                            "column": 109
                                                                                                                                          },
                                                                                                                                          "end": {
                                                                                                                                            "row": 34,
                                                                                                                                            "column": 110
                                                                                                                                          },
                                                                                                                                          "text": ","
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                          "type": "identifier",
                                                                                                                                          "start": {
                                                                                                                                            "row": 34,
                                                                                                                                            "column": 111
                                                                                                                                          },
                                                                                                                                          "end": {
                                                                                                                                            "row": 34,
                                                                                                                                            "column": 116
                                                                                                                                          },
                                                                                                                                          "text": "cause"
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                          "type": ")",
                                                                                                                                          "start": {
                                                                                                                                            "row": 34,
                                                                                                                                            "column": 116
                                                                                                                                          },
                                                                                                                                          "end": {
                                                                                                                                            "row": 34,
                                                                                                                                            "column": 117
                                                                                                                                          },
                                                                                                                                          "text": ")"
                                                                                                                                        }
                                                                                                                                      ]
                                                                                                                                    }
                                                                                                                                  ]
                                                                                                                                },
                                                                                                                                {
                                                                                                                                  "type": ";",
                                                                                                                                  "start": {
                                                                                                                                    "row": 34,
                                                                                                                                    "column": 117
                                                                                                                                  },
                                                                                                                                  "end": {
                                                                                                                                    "row": 34,
                                                                                                                                    "column": 118
                                                                                                                                  },
                                                                                                                                  "text": ";"
                                                                                                                                }
                                                                                                                              ]
                                                                                                                            },
                                                                                                                            {
                                                                                                                              "type": "}",
                                                                                                                              "start": {
                                                                                                                                "row": 35,
                                                                                                                                "column": 44
                                                                                                                              },
                                                                                                                              "end": {
                                                                                                                                "row": 35,
                                                                                                                                "column": 45
                                                                                                                              },
                                                                                                                              "text": "}"
                                                                                                                            }
                                                                                                                          ]
                                                                                                                        }
                                                                                                                      ]
                                                                                                                    },
                                                                                                                    {
                                                                                                                      "type": "return_statement",
                                                                                                                      "start": {
                                                                                                                        "row": 36,
                                                                                                                        "column": 44
                                                                                                                      },
                                                                                                                      "end": {
                                                                                                                        "row": 36,
                                                                                                                        "column": 56
                                                                                                                      },
                                                                                                                      "text": "return null;",
                                                                                                                      "children": [
                                                                                                                        {
                                                                                                                          "type": "return",
                                                                                                                          "start": {
                                                                                                                            "row": 36,
                                                                                                                            "column": 44
                                                                                                                          },
                                                                                                                          "end": {
                                                                                                                            "row": 36,
                                                                                                                            "column": 50
                                                                                                                          },
                                                                                                                          "text": "return"
                                                                                                                        },
                                                                                                                        {
                                                                                                                          "type": "null_literal",
                                                                                                                          "start": {
                                                                                                                            "row": 36,
                                                                                                                            "column": 51
                                                                                                                          },
                                                                                                                          "end": {
                                                                                                                            "row": 36,
                                                                                                                            "column": 55
                                                                                                                          },
                                                                                                                          "text": "null"
                                                                                                                        },
                                                                                                                        {
                                                                                                                          "type": ";",
                                                                                                                          "start": {
                                                                                                                            "row": 36,
                                                                                                                            "column": 55
                                                                                                                          },
                                                                                                                          "end": {
                                                                                                                            "row": 36,
                                                                                                                            "column": 56
                                                                                                                          },
                                                                                                                          "text": ";"
                                                                                                                        }
                                                                                                                      ]
                                                                                                                    },
                                                                                                                    {
                                                                                                                      "type": "}",
                                                                                                                      "start": {
                                                                                                                        "row": 37,
                                                                                                                        "column": 40
                                                                                                                      },
                                                                                                                      "end": {
                                                                                                                        "row": 37,
                                                                                                                        "column": 41
                                                                                                                      },
                                                                                                                      "text": "}"
                                                                                                                    }
                                                                                                                  ]
                                                                                                                }
                                                                                                              ]
                                                                                                            },
                                                                                                            {
                                                                                                              "type": ")",
                                                                                                              "start": {
                                                                                                                "row": 37,
                                                                                                                "column": 41
                                                                                                              },
                                                                                                              "end": {
                                                                                                                "row": 37,
                                                                                                                "column": 42
                                                                                                              },
                                                                                                              "text": ")"
                                                                                                            }
                                                                                                          ]
                                                                                                        }
                                                                                                      ]
                                                                                                    },
                                                                                                    {
                                                                                                      "type": ")",
                                                                                                      "start": {
                                                                                                        "row": 37,
                                                                                                        "column": 42
                                                                                                      },
                                                                                                      "end": {
                                                                                                        "row": 37,
                                                                                                        "column": 43
                                                                                                      },
                                                                                                      "text": ")"
                                                                                                    }
                                                                                                  ]
                                                                                                }
                                                                                              ]
                                                                                            }
                                                                                          ]
                                                                                        },
                                                                                        {
                                                                                          "type": ";",
                                                                                          "start": {
                                                                                            "row": 37,
                                                                                            "column": 43
                                                                                          },
                                                                                          "end": {
                                                                                            "row": 37,
                                                                                            "column": 44
                                                                                          },
                                                                                          "text": ";"
                                                                                        }
                                                                                      ]
                                                                                    },
                                                                                    {
                                                                                      "type": "}",
                                                                                      "start": {
                                                                                        "row": 38,
                                                                                        "column": 28
                                                                                      },
                                                                                      "end": {
                                                                                        "row": 38,
                                                                                        "column": 29
                                                                                      },
                                                                                      "text": "}"
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                {
                                                                                  "type": "else",
                                                                                  "start": {
                                                                                    "row": 38,
                                                                                    "column": 30
                                                                                  },
                                                                                  "end": {
                                                                                    "row": 38,
                                                                                    "column": 34
                                                                                  },
                                                                                  "text": "else"
                                                                                },
                                                                                {
                                                                                  "type": "block",
                                                                                  "start": {
                                                                                    "row": 38,
                                                                                    "column": 35
                                                                                  },
                                                                                  "end": {
                                                                                    "row": 40,
                                                                                    "column": 29
                                                                                  },
                                                                                  "text": "{\n                                voidCompletableFuture = CompletableFuture.completedFuture(null);\n                            }",
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "{",
                                                                                      "start": {
                                                                                        "row": 38,
                                                                                        "column": 35
                                                                                      },
                                                                                      "end": {
                                                                                        "row": 38,
                                                                                        "column": 36
                                                                                      },
                                                                                      "text": "{"
                                                                                    },
                                                                                    {
                                                                                      "type": "expression_statement",
                                                                                      "start": {
                                                                                        "row": 39,
                                                                                        "column": 32
                                                                                      },
                                                                                      "end": {
                                                                                        "row": 39,
                                                                                        "column": 96
                                                                                      },
                                                                                      "text": "voidCompletableFuture = CompletableFuture.completedFuture(null);",
                                                                                      "children": [
                                                                                        {
                                                                                          "type": "assignment_expression",
                                                                                          "start": {
                                                                                            "row": 39,
                                                                                            "column": 32
                                                                                          },
                                                                                          "end": {
                                                                                            "row": 39,
                                                                                            "column": 95
                                                                                          },
                                                                                          "text": "voidCompletableFuture = CompletableFuture.completedFuture(null)",
                                                                                          "children": [
                                                                                            {
                                                                                              "type": "identifier",
                                                                                              "start": {
                                                                                                "row": 39,
                                                                                                "column": 32
                                                                                              },
                                                                                              "end": {
                                                                                                "row": 39,
                                                                                                "column": 53
                                                                                              },
                                                                                              "text": "voidCompletableFuture"
                                                                                            },
                                                                                            {
                                                                                              "type": "=",
                                                                                              "start": {
                                                                                                "row": 39,
                                                                                                "column": 54
                                                                                              },
                                                                                              "end": {
                                                                                                "row": 39,
                                                                                                "column": 55
                                                                                              },
                                                                                              "text": "="
                                                                                            },
                                                                                            {
                                                                                              "type": "method_invocation",
                                                                                              "start": {
                                                                                                "row": 39,
                                                                                                "column": 56
                                                                                              },
                                                                                              "end": {
                                                                                                "row": 39,
                                                                                                "column": 95
                                                                                              },
                                                                                              "text": "CompletableFuture.completedFuture(null)",
                                                                                              "children": [
                                                                                                {
                                                                                                  "type": "identifier",
                                                                                                  "start": {
                                                                                                    "row": 39,
                                                                                                    "column": 56
                                                                                                  },
                                                                                                  "end": {
                                                                                                    "row": 39,
                                                                                                    "column": 73
                                                                                                  },
                                                                                                  "text": "CompletableFuture"
                                                                                                },
                                                                                                {
                                                                                                  "type": ".",
                                                                                                  "start": {
                                                                                                    "row": 39,
                                                                                                    "column": 73
                                                                                                  },
                                                                                                  "end": {
                                                                                                    "row": 39,
                                                                                                    "column": 74
                                                                                                  },
                                                                                                  "text": "."
                                                                                                },
                                                                                                {
                                                                                                  "type": "identifier",
                                                                                                  "start": {
                                                                                                    "row": 39,
                                                                                                    "column": 74
                                                                                                  },
                                                                                                  "end": {
                                                                                                    "row": 39,
                                                                                                    "column": 89
                                                                                                  },
                                                                                                  "text": "completedFuture"
                                                                                                },
                                                                                                {
                                                                                                  "type": "argument_list",
                                                                                                  "start": {
                                                                                                    "row": 39,
                                                                                                    "column": 89
                                                                                                  },
                                                                                                  "end": {
                                                                                                    "row": 39,
                                                                                                    "column": 95
                                                                                                  },
                                                                                                  "text": "(null)",
                                                                                                  "children": [
                                                                                                    {
                                                                                                      "type": "(",
                                                                                                      "start": {
                                                                                                        "row": 39,
                                                                                                        "column": 89
                                                                                                      },
                                                                                                      "end": {
                                                                                                        "row": 39,
                                                                                                        "column": 90
                                                                                                      },
                                                                                                      "text": "("
                                                                                                    },
                                                                                                    {
                                                                                                      "type": "null_literal",
                                                                                                      "start": {
                                                                                                        "row": 39,
                                                                                                        "column": 90
                                                                                                      },
                                                                                                      "end": {
                                                                                                        "row": 39,
                                                                                                        "column": 94
                                                                                                      },
                                                                                                      "text": "null"
                                                                                                    },
                                                                                                    {
                                                                                                      "type": ")",
                                                                                                      "start": {
                                                                                                        "row": 39,
                                                                                                        "column": 94
                                                                                                      },
                                                                                                      "end": {
                                                                                                        "row": 39,
                                                                                                        "column": 95
                                                                                                      },
                                                                                                      "text": ")"
                                                                                                    }
                                                                                                  ]
                                                                                                }
                                                                                              ]
                                                                                            }
                                                                                          ]
                                                                                        },
                                                                                        {
                                                                                          "type": ";",
                                                                                          "start": {
                                                                                            "row": 39,
                                                                                            "column": 95
                                                                                          },
                                                                                          "end": {
                                                                                            "row": 39,
                                                                                            "column": 96
                                                                                          },
                                                                                          "text": ";"
                                                                                        }
                                                                                      ]
                                                                                    },
                                                                                    {
                                                                                      "type": "}",
                                                                                      "start": {
                                                                                        "row": 40,
                                                                                        "column": 28
                                                                                      },
                                                                                      "end": {
                                                                                        "row": 40,
                                                                                        "column": 29
                                                                                      },
                                                                                      "text": "}"
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "return_statement",
                                                                              "start": {
                                                                                "row": 42,
                                                                                "column": 28
                                                                              },
                                                                              "end": {
                                                                                "row": 42,
                                                                                "column": 57
                                                                              },
                                                                              "text": "return voidCompletableFuture;",
                                                                              "children": [
                                                                                {
                                                                                  "type": "return",
                                                                                  "start": {
                                                                                    "row": 42,
                                                                                    "column": 28
                                                                                  },
                                                                                  "end": {
                                                                                    "row": 42,
                                                                                    "column": 34
                                                                                  },
                                                                                  "text": "return"
                                                                                },
                                                                                {
                                                                                  "type": "identifier",
                                                                                  "start": {
                                                                                    "row": 42,
                                                                                    "column": 35
                                                                                  },
                                                                                  "end": {
                                                                                    "row": 42,
                                                                                    "column": 56
                                                                                  },
                                                                                  "text": "voidCompletableFuture"
                                                                                },
                                                                                {
                                                                                  "type": ";",
                                                                                  "start": {
                                                                                    "row": 42,
                                                                                    "column": 56
                                                                                  },
                                                                                  "end": {
                                                                                    "row": 42,
                                                                                    "column": 57
                                                                                  },
                                                                                  "text": ";"
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "}",
                                                                              "start": {
                                                                                "row": 43,
                                                                                "column": 24
                                                                              },
                                                                              "end": {
                                                                                "row": 43,
                                                                                "column": 25
                                                                              },
                                                                              "text": "}"
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": ")",
                                                                      "start": {
                                                                        "row": 43,
                                                                        "column": 25
                                                                      },
                                                                      "end": {
                                                                        "row": 43,
                                                                        "column": 26
                                                                      },
                                                                      "text": ")"
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": ".",
                                                              "start": {
                                                                "row": 43,
                                                                "column": 26
                                                              },
                                                              "end": {
                                                                "row": 43,
                                                                "column": 27
                                                              },
                                                              "text": "."
                                                            },
                                                            {
                                                              "type": "identifier",
                                                              "start": {
                                                                "row": 43,
                                                                "column": 27
                                                              },
                                                              "end": {
                                                                "row": 43,
                                                                "column": 34
                                                              },
                                                              "text": "collect"
                                                            },
                                                            {
                                                              "type": "argument_list",
                                                              "start": {
                                                                "row": 43,
                                                                "column": 34
                                                              },
                                                              "end": {
                                                                "row": 43,
                                                                "column": 55
                                                              },
                                                              "text": "(Collectors.toList())",
                                                              "children": [
                                                                {
                                                                  "type": "(",
                                                                  "start": {
                                                                    "row": 43,
                                                                    "column": 34
                                                                  },
                                                                  "end": {
                                                                    "row": 43,
                                                                    "column": 35
                                                                  },
                                                                  "text": "("
                                                                },
                                                                {
                                                                  "type": "method_invocation",
                                                                  "start": {
                                                                    "row": 43,
                                                                    "column": 35
                                                                  },
                                                                  "end": {
                                                                    "row": 43,
                                                                    "column": 54
                                                                  },
                                                                  "text": "Collectors.toList()",
                                                                  "children": [
                                                                    {
                                                                      "type": "identifier",
                                                                      "start": {
                                                                        "row": 43,
                                                                        "column": 35
                                                                      },
                                                                      "end": {
                                                                        "row": 43,
                                                                        "column": 45
                                                                      },
                                                                      "text": "Collectors"
                                                                    },
                                                                    {
                                                                      "type": ".",
                                                                      "start": {
                                                                        "row": 43,
                                                                        "column": 45
                                                                      },
                                                                      "end": {
                                                                        "row": 43,
                                                                        "column": 46
                                                                      },
                                                                      "text": "."
                                                                    },
                                                                    {
                                                                      "type": "identifier",
                                                                      "start": {
                                                                        "row": 43,
                                                                        "column": 46
                                                                      },
                                                                      "end": {
                                                                        "row": 43,
                                                                        "column": 52
                                                                      },
                                                                      "text": "toList"
                                                                    },
                                                                    {
                                                                      "type": "argument_list",
                                                                      "start": {
                                                                        "row": 43,
                                                                        "column": 52
                                                                      },
                                                                      "end": {
                                                                        "row": 43,
                                                                        "column": 54
                                                                      },
                                                                      "text": "()",
                                                                      "children": [
                                                                        {
                                                                          "type": "(",
                                                                          "start": {
                                                                            "row": 43,
                                                                            "column": 52
                                                                          },
                                                                          "end": {
                                                                            "row": 43,
                                                                            "column": 53
                                                                          },
                                                                          "text": "("
                                                                        },
                                                                        {
                                                                          "type": ")",
                                                                          "start": {
                                                                            "row": 43,
                                                                            "column": 53
                                                                          },
                                                                          "end": {
                                                                            "row": 43,
                                                                            "column": 54
                                                                          },
                                                                          "text": ")"
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": ")",
                                                                  "start": {
                                                                    "row": 43,
                                                                    "column": 54
                                                                  },
                                                                  "end": {
                                                                    "row": 43,
                                                                    "column": 55
                                                                  },
                                                                  "text": ")"
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": ")",
                                                          "start": {
                                                            "row": 43,
                                                            "column": 55
                                                          },
                                                          "end": {
                                                            "row": 43,
                                                            "column": 56
                                                          },
                                                          "text": ")"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ".",
                                                  "start": {
                                                    "row": 43,
                                                    "column": 56
                                                  },
                                                  "end": {
                                                    "row": 43,
                                                    "column": 57
                                                  },
                                                  "text": "."
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 43,
                                                    "column": 57
                                                  },
                                                  "end": {
                                                    "row": 43,
                                                    "column": 66
                                                  },
                                                  "text": "thenApply"
                                                },
                                                {
                                                  "type": "argument_list",
                                                  "start": {
                                                    "row": 43,
                                                    "column": 66
                                                  },
                                                  "end": {
                                                    "row": 43,
                                                    "column": 78
                                                  },
                                                  "text": "(v -> false)",
                                                  "children": [
                                                    {
                                                      "type": "(",
                                                      "start": {
                                                        "row": 43,
                                                        "column": 66
                                                      },
                                                      "end": {
                                                        "row": 43,
                                                        "column": 67
                                                      },
                                                      "text": "("
                                                    },
                                                    {
                                                      "type": "lambda_expression",
                                                      "start": {
                                                        "row": 43,
                                                        "column": 67
                                                      },
                                                      "end": {
                                                        "row": 43,
                                                        "column": 77
                                                      },
                                                      "text": "v -> false",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 43,
                                                            "column": 67
                                                          },
                                                          "end": {
                                                            "row": 43,
                                                            "column": 68
                                                          },
                                                          "text": "v"
                                                        },
                                                        {
                                                          "type": "->",
                                                          "start": {
                                                            "row": 43,
                                                            "column": 69
                                                          },
                                                          "end": {
                                                            "row": 43,
                                                            "column": 71
                                                          },
                                                          "text": "->"
                                                        },
                                                        {
                                                          "type": "false",
                                                          "start": {
                                                            "row": 43,
                                                            "column": 72
                                                          },
                                                          "end": {
                                                            "row": 43,
                                                            "column": 77
                                                          },
                                                          "text": "false"
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ")",
                                                      "start": {
                                                        "row": 43,
                                                        "column": 77
                                                      },
                                                      "end": {
                                                        "row": 43,
                                                        "column": 78
                                                      },
                                                      "text": ")"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ";",
                                              "start": {
                                                "row": 43,
                                                "column": 78
                                              },
                                              "end": {
                                                "row": 43,
                                                "column": 79
                                              },
                                              "text": ";"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "}",
                                          "start": {
                                            "row": 44,
                                            "column": 20
                                          },
                                          "end": {
                                            "row": 44,
                                            "column": 21
                                          },
                                          "text": "}"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "}",
                                  "start": {
                                    "row": 45,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 45,
                                    "column": 17
                                  },
                                  "text": "}"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 45,
                            "column": 17
                          },
                          "end": {
                            "row": 45,
                            "column": 18
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 45,
                    "column": 18
                  },
                  "end": {
                    "row": 45,
                    "column": 19
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "}",
              "start": {
                "row": 46,
                "column": 4
              },
              "end": {
                "row": 46,
                "column": 5
              },
              "text": "}"
            }
          ]
        }
      ]
    }
  ]
}