{
  "type": "program",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 15,
    "column": 5
  },
  "text": "@Override\n    public void channelHandlerContext(ChannelHandlerContext ctx) throws Http2Exception {\n        this.ctx = checkNotNull(ctx, \"ctx\");\n\n        // Writing the pending bytes will not check writability change and instead a writability change notification\n        // to be provided by an explicit call.\n        channelWritabilityChanged();\n\n        // Don't worry about cleaning up queued frames here if ctx is null. It is expected that all streams will be\n        // closed and the queue cleanup will occur when the stream state transitions occur.\n\n        // If any frames have been queued up, we should send them now that we have a channel context.\n        if (isChannelWritable()) {\n            writePendingBytes();\n        }\n    }",
  "children": [
    {
      "type": "method_declaration",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 15,
        "column": 5
      },
      "text": "@Override\n    public void channelHandlerContext(ChannelHandlerContext ctx) throws Http2Exception {\n        this.ctx = checkNotNull(ctx, \"ctx\");\n\n        // Writing the pending bytes will not check writability change and instead a writability change notification\n        // to be provided by an explicit call.\n        channelWritabilityChanged();\n\n        // Don't worry about cleaning up queued frames here if ctx is null. It is expected that all streams will be\n        // closed and the queue cleanup will occur when the stream state transitions occur.\n\n        // If any frames have been queued up, we should send them now that we have a channel context.\n        if (isChannelWritable()) {\n            writePendingBytes();\n        }\n    }",
      "children": [
        {
          "type": "modifiers",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 1,
            "column": 10
          },
          "text": "@Override\n    public",
          "children": [
            {
              "type": "marker_annotation",
              "start": {
                "row": 0,
                "column": 0
              },
              "end": {
                "row": 0,
                "column": 9
              },
              "text": "@Override",
              "children": [
                {
                  "type": "@",
                  "start": {
                    "row": 0,
                    "column": 0
                  },
                  "end": {
                    "row": 0,
                    "column": 1
                  },
                  "text": "@"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 1
                  },
                  "end": {
                    "row": 0,
                    "column": 9
                  },
                  "text": "Override"
                }
              ]
            },
            {
              "type": "public",
              "start": {
                "row": 1,
                "column": 4
              },
              "end": {
                "row": 1,
                "column": 10
              },
              "text": "public"
            }
          ]
        },
        {
          "type": "void_type",
          "start": {
            "row": 1,
            "column": 11
          },
          "end": {
            "row": 1,
            "column": 15
          },
          "text": "void"
        },
        {
          "type": "identifier",
          "start": {
            "row": 1,
            "column": 16
          },
          "end": {
            "row": 1,
            "column": 37
          },
          "text": "channelHandlerContext"
        },
        {
          "type": "formal_parameters",
          "start": {
            "row": 1,
            "column": 37
          },
          "end": {
            "row": 1,
            "column": 64
          },
          "text": "(ChannelHandlerContext ctx)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 1,
                "column": 37
              },
              "end": {
                "row": 1,
                "column": 38
              },
              "text": "("
            },
            {
              "type": "formal_parameter",
              "start": {
                "row": 1,
                "column": 38
              },
              "end": {
                "row": 1,
                "column": 63
              },
              "text": "ChannelHandlerContext ctx",
              "children": [
                {
                  "type": "type_identifier",
                  "start": {
                    "row": 1,
                    "column": 38
                  },
                  "end": {
                    "row": 1,
                    "column": 59
                  },
                  "text": "ChannelHandlerContext"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 1,
                    "column": 60
                  },
                  "end": {
                    "row": 1,
                    "column": 63
                  },
                  "text": "ctx"
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 1,
                "column": 63
              },
              "end": {
                "row": 1,
                "column": 64
              },
              "text": ")"
            }
          ]
        },
        {
          "type": "throws",
          "start": {
            "row": 1,
            "column": 65
          },
          "end": {
            "row": 1,
            "column": 86
          },
          "text": "throws Http2Exception",
          "children": [
            {
              "type": "throws",
              "start": {
                "row": 1,
                "column": 65
              },
              "end": {
                "row": 1,
                "column": 71
              },
              "text": "throws"
            },
            {
              "type": "type_identifier",
              "start": {
                "row": 1,
                "column": 72
              },
              "end": {
                "row": 1,
                "column": 86
              },
              "text": "Http2Exception"
            }
          ]
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 87
          },
          "end": {
            "row": 15,
            "column": 5
          },
          "text": "{\n        this.ctx = checkNotNull(ctx, \"ctx\");\n\n        // Writing the pending bytes will not check writability change and instead a writability change notification\n        // to be provided by an explicit call.\n        channelWritabilityChanged();\n\n        // Don't worry about cleaning up queued frames here if ctx is null. It is expected that all streams will be\n        // closed and the queue cleanup will occur when the stream state transitions occur.\n\n        // If any frames have been queued up, we should send them now that we have a channel context.\n        if (isChannelWritable()) {\n            writePendingBytes();\n        }\n    }",
          "children": [
            {
              "type": "{",
              "start": {
                "row": 1,
                "column": 87
              },
              "end": {
                "row": 1,
                "column": 88
              },
              "text": "{"
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 2,
                "column": 8
              },
              "end": {
                "row": 2,
                "column": 44
              },
              "text": "this.ctx = checkNotNull(ctx, \"ctx\");",
              "children": [
                {
                  "type": "assignment_expression",
                  "start": {
                    "row": 2,
                    "column": 8
                  },
                  "end": {
                    "row": 2,
                    "column": 43
                  },
                  "text": "this.ctx = checkNotNull(ctx, \"ctx\")",
                  "children": [
                    {
                      "type": "field_access",
                      "start": {
                        "row": 2,
                        "column": 8
                      },
                      "end": {
                        "row": 2,
                        "column": 16
                      },
                      "text": "this.ctx",
                      "children": [
                        {
                          "type": "this",
                          "start": {
                            "row": 2,
                            "column": 8
                          },
                          "end": {
                            "row": 2,
                            "column": 12
                          },
                          "text": "this"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 2,
                            "column": 12
                          },
                          "end": {
                            "row": 2,
                            "column": 13
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 2,
                            "column": 13
                          },
                          "end": {
                            "row": 2,
                            "column": 16
                          },
                          "text": "ctx"
                        }
                      ]
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 2,
                        "column": 17
                      },
                      "end": {
                        "row": 2,
                        "column": 18
                      },
                      "text": "="
                    },
                    {
                      "type": "method_invocation",
                      "start": {
                        "row": 2,
                        "column": 19
                      },
                      "end": {
                        "row": 2,
                        "column": 43
                      },
                      "text": "checkNotNull(ctx, \"ctx\")",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 2,
                            "column": 19
                          },
                          "end": {
                            "row": 2,
                            "column": 31
                          },
                          "text": "checkNotNull"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 2,
                            "column": 31
                          },
                          "end": {
                            "row": 2,
                            "column": 43
                          },
                          "text": "(ctx, \"ctx\")",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 2,
                                "column": 31
                              },
                              "end": {
                                "row": 2,
                                "column": 32
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 2,
                                "column": 32
                              },
                              "end": {
                                "row": 2,
                                "column": 35
                              },
                              "text": "ctx"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 2,
                                "column": 35
                              },
                              "end": {
                                "row": 2,
                                "column": 36
                              },
                              "text": ","
                            },
                            {
                              "type": "string_literal",
                              "start": {
                                "row": 2,
                                "column": 37
                              },
                              "end": {
                                "row": 2,
                                "column": 42
                              },
                              "text": "\"ctx\"",
                              "children": [
                                {
                                  "type": "\"",
                                  "start": {
                                    "row": 2,
                                    "column": 37
                                  },
                                  "end": {
                                    "row": 2,
                                    "column": 38
                                  },
                                  "text": "\""
                                },
                                {
                                  "type": "string_fragment",
                                  "start": {
                                    "row": 2,
                                    "column": 38
                                  },
                                  "end": {
                                    "row": 2,
                                    "column": 41
                                  },
                                  "text": "ctx"
                                },
                                {
                                  "type": "\"",
                                  "start": {
                                    "row": 2,
                                    "column": 41
                                  },
                                  "end": {
                                    "row": 2,
                                    "column": 42
                                  },
                                  "text": "\""
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 2,
                                "column": 42
                              },
                              "end": {
                                "row": 2,
                                "column": 43
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 2,
                    "column": 43
                  },
                  "end": {
                    "row": 2,
                    "column": 44
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "line_comment",
              "start": {
                "row": 4,
                "column": 8
              },
              "end": {
                "row": 4,
                "column": 116
              },
              "text": "// Writing the pending bytes will not check writability change and instead a writability change notification"
            },
            {
              "type": "line_comment",
              "start": {
                "row": 5,
                "column": 8
              },
              "end": {
                "row": 5,
                "column": 46
              },
              "text": "// to be provided by an explicit call."
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 6,
                "column": 8
              },
              "end": {
                "row": 6,
                "column": 36
              },
              "text": "channelWritabilityChanged();",
              "children": [
                {
                  "type": "method_invocation",
                  "start": {
                    "row": 6,
                    "column": 8
                  },
                  "end": {
                    "row": 6,
                    "column": 35
                  },
                  "text": "channelWritabilityChanged()",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 6,
                        "column": 8
                      },
                      "end": {
                        "row": 6,
                        "column": 33
                      },
                      "text": "channelWritabilityChanged"
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 6,
                        "column": 33
                      },
                      "end": {
                        "row": 6,
                        "column": 35
                      },
                      "text": "()",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 6,
                            "column": 33
                          },
                          "end": {
                            "row": 6,
                            "column": 34
                          },
                          "text": "("
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 6,
                            "column": 34
                          },
                          "end": {
                            "row": 6,
                            "column": 35
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 6,
                    "column": 35
                  },
                  "end": {
                    "row": 6,
                    "column": 36
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "line_comment",
              "start": {
                "row": 8,
                "column": 8
              },
              "end": {
                "row": 8,
                "column": 115
              },
              "text": "// Don't worry about cleaning up queued frames here if ctx is null. It is expected that all streams will be"
            },
            {
              "type": "line_comment",
              "start": {
                "row": 9,
                "column": 8
              },
              "end": {
                "row": 9,
                "column": 91
              },
              "text": "// closed and the queue cleanup will occur when the stream state transitions occur."
            },
            {
              "type": "line_comment",
              "start": {
                "row": 11,
                "column": 8
              },
              "end": {
                "row": 11,
                "column": 101
              },
              "text": "// If any frames have been queued up, we should send them now that we have a channel context."
            },
            {
              "type": "if_statement",
              "start": {
                "row": 12,
                "column": 8
              },
              "end": {
                "row": 14,
                "column": 9
              },
              "text": "if (isChannelWritable()) {\n            writePendingBytes();\n        }",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 12,
                    "column": 8
                  },
                  "end": {
                    "row": 12,
                    "column": 10
                  },
                  "text": "if"
                },
                {
                  "type": "condition",
                  "start": {
                    "row": 12,
                    "column": 11
                  },
                  "end": {
                    "row": 12,
                    "column": 32
                  },
                  "text": "(isChannelWritable())",
                  "children": [
                    {
                      "type": "(",
                      "start": {
                        "row": 12,
                        "column": 11
                      },
                      "end": {
                        "row": 12,
                        "column": 12
                      },
                      "text": "("
                    },
                    {
                      "type": "method_invocation",
                      "start": {
                        "row": 12,
                        "column": 12
                      },
                      "end": {
                        "row": 12,
                        "column": 31
                      },
                      "text": "isChannelWritable()",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 12,
                            "column": 12
                          },
                          "end": {
                            "row": 12,
                            "column": 29
                          },
                          "text": "isChannelWritable"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 12,
                            "column": 29
                          },
                          "end": {
                            "row": 12,
                            "column": 31
                          },
                          "text": "()",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 12,
                                "column": 29
                              },
                              "end": {
                                "row": 12,
                                "column": 30
                              },
                              "text": "("
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 12,
                                "column": 30
                              },
                              "end": {
                                "row": 12,
                                "column": 31
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start": {
                        "row": 12,
                        "column": 31
                      },
                      "end": {
                        "row": 12,
                        "column": 32
                      },
                      "text": ")"
                    }
                  ]
                },
                {
                  "type": "block",
                  "start": {
                    "row": 12,
                    "column": 33
                  },
                  "end": {
                    "row": 14,
                    "column": 9
                  },
                  "text": "{\n            writePendingBytes();\n        }",
                  "children": [
                    {
                      "type": "{",
                      "start": {
                        "row": 12,
                        "column": 33
                      },
                      "end": {
                        "row": 12,
                        "column": 34
                      },
                      "text": "{"
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 13,
                        "column": 12
                      },
                      "end": {
                        "row": 13,
                        "column": 32
                      },
                      "text": "writePendingBytes();",
                      "children": [
                        {
                          "type": "method_invocation",
                          "start": {
                            "row": 13,
                            "column": 12
                          },
                          "end": {
                            "row": 13,
                            "column": 31
                          },
                          "text": "writePendingBytes()",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 13,
                                "column": 12
                              },
                              "end": {
                                "row": 13,
                                "column": 29
                              },
                              "text": "writePendingBytes"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 13,
                                "column": 29
                              },
                              "end": {
                                "row": 13,
                                "column": 31
                              },
                              "text": "()",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 13,
                                    "column": 29
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 30
                                  },
                                  "text": "("
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 13,
                                    "column": 30
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 31
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start": {
                            "row": 13,
                            "column": 31
                          },
                          "end": {
                            "row": 13,
                            "column": 32
                          },
                          "text": ";"
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start": {
                        "row": 14,
                        "column": 8
                      },
                      "end": {
                        "row": 14,
                        "column": 9
                      },
                      "text": "}"
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start": {
                "row": 15,
                "column": 4
              },
              "end": {
                "row": 15,
                "column": 5
              },
              "text": "}"
            }
          ]
        }
      ]
    }
  ]
}