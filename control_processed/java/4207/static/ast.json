{
  "type": "program",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 11,
    "column": 2
  },
  "text": "@Override\n\tpublic void start(LeaderRetrievalListener listener) {\n\t\tcheckNotNull(listener, \"Listener must not be null.\");\n\n\t\tsynchronized (startStopLock) {\n\t\t\tcheckState(!started, \"StandaloneLeaderRetrievalService can only be started once.\");\n\t\t\tstarted = true;\n\n\t\t\t// directly notify the listener, because we already know the leading JobManager's address\n\t\t\tlistener.notifyLeaderAddress(leaderAddress, leaderId);\n\t\t}\n\t}",
  "children": [
    {
      "type": "method_declaration",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 11,
        "column": 2
      },
      "text": "@Override\n\tpublic void start(LeaderRetrievalListener listener) {\n\t\tcheckNotNull(listener, \"Listener must not be null.\");\n\n\t\tsynchronized (startStopLock) {\n\t\t\tcheckState(!started, \"StandaloneLeaderRetrievalService can only be started once.\");\n\t\t\tstarted = true;\n\n\t\t\t// directly notify the listener, because we already know the leading JobManager's address\n\t\t\tlistener.notifyLeaderAddress(leaderAddress, leaderId);\n\t\t}\n\t}",
      "children": [
        {
          "type": "modifiers",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 1,
            "column": 7
          },
          "text": "@Override\n\tpublic",
          "children": [
            {
              "type": "marker_annotation",
              "start": {
                "row": 0,
                "column": 0
              },
              "end": {
                "row": 0,
                "column": 9
              },
              "text": "@Override",
              "children": [
                {
                  "type": "@",
                  "start": {
                    "row": 0,
                    "column": 0
                  },
                  "end": {
                    "row": 0,
                    "column": 1
                  },
                  "text": "@"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 1
                  },
                  "end": {
                    "row": 0,
                    "column": 9
                  },
                  "text": "Override"
                }
              ]
            },
            {
              "type": "public",
              "start": {
                "row": 1,
                "column": 1
              },
              "end": {
                "row": 1,
                "column": 7
              },
              "text": "public"
            }
          ]
        },
        {
          "type": "void_type",
          "start": {
            "row": 1,
            "column": 8
          },
          "end": {
            "row": 1,
            "column": 12
          },
          "text": "void"
        },
        {
          "type": "identifier",
          "start": {
            "row": 1,
            "column": 13
          },
          "end": {
            "row": 1,
            "column": 18
          },
          "text": "start"
        },
        {
          "type": "formal_parameters",
          "start": {
            "row": 1,
            "column": 18
          },
          "end": {
            "row": 1,
            "column": 52
          },
          "text": "(LeaderRetrievalListener listener)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 1,
                "column": 18
              },
              "end": {
                "row": 1,
                "column": 19
              },
              "text": "("
            },
            {
              "type": "formal_parameter",
              "start": {
                "row": 1,
                "column": 19
              },
              "end": {
                "row": 1,
                "column": 51
              },
              "text": "LeaderRetrievalListener listener",
              "children": [
                {
                  "type": "type_identifier",
                  "start": {
                    "row": 1,
                    "column": 19
                  },
                  "end": {
                    "row": 1,
                    "column": 42
                  },
                  "text": "LeaderRetrievalListener"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 1,
                    "column": 43
                  },
                  "end": {
                    "row": 1,
                    "column": 51
                  },
                  "text": "listener"
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 1,
                "column": 51
              },
              "end": {
                "row": 1,
                "column": 52
              },
              "text": ")"
            }
          ]
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 53
          },
          "end": {
            "row": 11,
            "column": 2
          },
          "text": "{\n\t\tcheckNotNull(listener, \"Listener must not be null.\");\n\n\t\tsynchronized (startStopLock) {\n\t\t\tcheckState(!started, \"StandaloneLeaderRetrievalService can only be started once.\");\n\t\t\tstarted = true;\n\n\t\t\t// directly notify the listener, because we already know the leading JobManager's address\n\t\t\tlistener.notifyLeaderAddress(leaderAddress, leaderId);\n\t\t}\n\t}",
          "children": [
            {
              "type": "{",
              "start": {
                "row": 1,
                "column": 53
              },
              "end": {
                "row": 1,
                "column": 54
              },
              "text": "{"
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 2,
                "column": 2
              },
              "end": {
                "row": 2,
                "column": 55
              },
              "text": "checkNotNull(listener, \"Listener must not be null.\");",
              "children": [
                {
                  "type": "method_invocation",
                  "start": {
                    "row": 2,
                    "column": 2
                  },
                  "end": {
                    "row": 2,
                    "column": 54
                  },
                  "text": "checkNotNull(listener, \"Listener must not be null.\")",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 2,
                        "column": 2
                      },
                      "end": {
                        "row": 2,
                        "column": 14
                      },
                      "text": "checkNotNull"
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 2,
                        "column": 14
                      },
                      "end": {
                        "row": 2,
                        "column": 54
                      },
                      "text": "(listener, \"Listener must not be null.\")",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 2,
                            "column": 14
                          },
                          "end": {
                            "row": 2,
                            "column": 15
                          },
                          "text": "("
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 2,
                            "column": 15
                          },
                          "end": {
                            "row": 2,
                            "column": 23
                          },
                          "text": "listener"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 2,
                            "column": 23
                          },
                          "end": {
                            "row": 2,
                            "column": 24
                          },
                          "text": ","
                        },
                        {
                          "type": "string_literal",
                          "start": {
                            "row": 2,
                            "column": 25
                          },
                          "end": {
                            "row": 2,
                            "column": 53
                          },
                          "text": "\"Listener must not be null.\"",
                          "children": [
                            {
                              "type": "\"",
                              "start": {
                                "row": 2,
                                "column": 25
                              },
                              "end": {
                                "row": 2,
                                "column": 26
                              },
                              "text": "\""
                            },
                            {
                              "type": "string_fragment",
                              "start": {
                                "row": 2,
                                "column": 26
                              },
                              "end": {
                                "row": 2,
                                "column": 52
                              },
                              "text": "Listener must not be null."
                            },
                            {
                              "type": "\"",
                              "start": {
                                "row": 2,
                                "column": 52
                              },
                              "end": {
                                "row": 2,
                                "column": 53
                              },
                              "text": "\""
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 2,
                            "column": 53
                          },
                          "end": {
                            "row": 2,
                            "column": 54
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 2,
                    "column": 54
                  },
                  "end": {
                    "row": 2,
                    "column": 55
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "synchronized_statement",
              "start": {
                "row": 4,
                "column": 2
              },
              "end": {
                "row": 10,
                "column": 3
              },
              "text": "synchronized (startStopLock) {\n\t\t\tcheckState(!started, \"StandaloneLeaderRetrievalService can only be started once.\");\n\t\t\tstarted = true;\n\n\t\t\t// directly notify the listener, because we already know the leading JobManager's address\n\t\t\tlistener.notifyLeaderAddress(leaderAddress, leaderId);\n\t\t}",
              "children": [
                {
                  "type": "synchronized",
                  "start": {
                    "row": 4,
                    "column": 2
                  },
                  "end": {
                    "row": 4,
                    "column": 14
                  },
                  "text": "synchronized"
                },
                {
                  "type": "parenthesized_expression",
                  "start": {
                    "row": 4,
                    "column": 15
                  },
                  "end": {
                    "row": 4,
                    "column": 30
                  },
                  "text": "(startStopLock)",
                  "children": [
                    {
                      "type": "(",
                      "start": {
                        "row": 4,
                        "column": 15
                      },
                      "end": {
                        "row": 4,
                        "column": 16
                      },
                      "text": "("
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 4,
                        "column": 16
                      },
                      "end": {
                        "row": 4,
                        "column": 29
                      },
                      "text": "startStopLock"
                    },
                    {
                      "type": ")",
                      "start": {
                        "row": 4,
                        "column": 29
                      },
                      "end": {
                        "row": 4,
                        "column": 30
                      },
                      "text": ")"
                    }
                  ]
                },
                {
                  "type": "block",
                  "start": {
                    "row": 4,
                    "column": 31
                  },
                  "end": {
                    "row": 10,
                    "column": 3
                  },
                  "text": "{\n\t\t\tcheckState(!started, \"StandaloneLeaderRetrievalService can only be started once.\");\n\t\t\tstarted = true;\n\n\t\t\t// directly notify the listener, because we already know the leading JobManager's address\n\t\t\tlistener.notifyLeaderAddress(leaderAddress, leaderId);\n\t\t}",
                  "children": [
                    {
                      "type": "{",
                      "start": {
                        "row": 4,
                        "column": 31
                      },
                      "end": {
                        "row": 4,
                        "column": 32
                      },
                      "text": "{"
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 5,
                        "column": 3
                      },
                      "end": {
                        "row": 5,
                        "column": 86
                      },
                      "text": "checkState(!started, \"StandaloneLeaderRetrievalService can only be started once.\");",
                      "children": [
                        {
                          "type": "method_invocation",
                          "start": {
                            "row": 5,
                            "column": 3
                          },
                          "end": {
                            "row": 5,
                            "column": 85
                          },
                          "text": "checkState(!started, \"StandaloneLeaderRetrievalService can only be started once.\")",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 5,
                                "column": 3
                              },
                              "end": {
                                "row": 5,
                                "column": 13
                              },
                              "text": "checkState"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 5,
                                "column": 13
                              },
                              "end": {
                                "row": 5,
                                "column": 85
                              },
                              "text": "(!started, \"StandaloneLeaderRetrievalService can only be started once.\")",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 5,
                                    "column": 13
                                  },
                                  "end": {
                                    "row": 5,
                                    "column": 14
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "unary_expression",
                                  "start": {
                                    "row": 5,
                                    "column": 14
                                  },
                                  "end": {
                                    "row": 5,
                                    "column": 22
                                  },
                                  "text": "!started",
                                  "children": [
                                    {
                                      "type": "!",
                                      "start": {
                                        "row": 5,
                                        "column": 14
                                      },
                                      "end": {
                                        "row": 5,
                                        "column": 15
                                      },
                                      "text": "!"
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 5,
                                        "column": 15
                                      },
                                      "end": {
                                        "row": 5,
                                        "column": 22
                                      },
                                      "text": "started"
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 5,
                                    "column": 22
                                  },
                                  "end": {
                                    "row": 5,
                                    "column": 23
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "string_literal",
                                  "start": {
                                    "row": 5,
                                    "column": 24
                                  },
                                  "end": {
                                    "row": 5,
                                    "column": 84
                                  },
                                  "text": "\"StandaloneLeaderRetrievalService can only be started once.\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start": {
                                        "row": 5,
                                        "column": 24
                                      },
                                      "end": {
                                        "row": 5,
                                        "column": 25
                                      },
                                      "text": "\""
                                    },
                                    {
                                      "type": "string_fragment",
                                      "start": {
                                        "row": 5,
                                        "column": 25
                                      },
                                      "end": {
                                        "row": 5,
                                        "column": 83
                                      },
                                      "text": "StandaloneLeaderRetrievalService can only be started once."
                                    },
                                    {
                                      "type": "\"",
                                      "start": {
                                        "row": 5,
                                        "column": 83
                                      },
                                      "end": {
                                        "row": 5,
                                        "column": 84
                                      },
                                      "text": "\""
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 5,
                                    "column": 84
                                  },
                                  "end": {
                                    "row": 5,
                                    "column": 85
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start": {
                            "row": 5,
                            "column": 85
                          },
                          "end": {
                            "row": 5,
                            "column": 86
                          },
                          "text": ";"
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 6,
                        "column": 3
                      },
                      "end": {
                        "row": 6,
                        "column": 18
                      },
                      "text": "started = true;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start": {
                            "row": 6,
                            "column": 3
                          },
                          "end": {
                            "row": 6,
                            "column": 17
                          },
                          "text": "started = true",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 6,
                                "column": 3
                              },
                              "end": {
                                "row": 6,
                                "column": 10
                              },
                              "text": "started"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 6,
                                "column": 11
                              },
                              "end": {
                                "row": 6,
                                "column": 12
                              },
                              "text": "="
                            },
                            {
                              "type": "true",
                              "start": {
                                "row": 6,
                                "column": 13
                              },
                              "end": {
                                "row": 6,
                                "column": 17
                              },
                              "text": "true"
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start": {
                            "row": 6,
                            "column": 17
                          },
                          "end": {
                            "row": 6,
                            "column": 18
                          },
                          "text": ";"
                        }
                      ]
                    },
                    {
                      "type": "line_comment",
                      "start": {
                        "row": 8,
                        "column": 3
                      },
                      "end": {
                        "row": 8,
                        "column": 92
                      },
                      "text": "// directly notify the listener, because we already know the leading JobManager's address"
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 9,
                        "column": 3
                      },
                      "end": {
                        "row": 9,
                        "column": 57
                      },
                      "text": "listener.notifyLeaderAddress(leaderAddress, leaderId);",
                      "children": [
                        {
                          "type": "method_invocation",
                          "start": {
                            "row": 9,
                            "column": 3
                          },
                          "end": {
                            "row": 9,
                            "column": 56
                          },
                          "text": "listener.notifyLeaderAddress(leaderAddress, leaderId)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 9,
                                "column": 3
                              },
                              "end": {
                                "row": 9,
                                "column": 11
                              },
                              "text": "listener"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 9,
                                "column": 11
                              },
                              "end": {
                                "row": 9,
                                "column": 12
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 9,
                                "column": 12
                              },
                              "end": {
                                "row": 9,
                                "column": 31
                              },
                              "text": "notifyLeaderAddress"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 9,
                                "column": 31
                              },
                              "end": {
                                "row": 9,
                                "column": 56
                              },
                              "text": "(leaderAddress, leaderId)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 9,
                                    "column": 31
                                  },
                                  "end": {
                                    "row": 9,
                                    "column": 32
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 9,
                                    "column": 32
                                  },
                                  "end": {
                                    "row": 9,
                                    "column": 45
                                  },
                                  "text": "leaderAddress"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 9,
                                    "column": 45
                                  },
                                  "end": {
                                    "row": 9,
                                    "column": 46
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 9,
                                    "column": 47
                                  },
                                  "end": {
                                    "row": 9,
                                    "column": 55
                                  },
                                  "text": "leaderId"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 9,
                                    "column": 55
                                  },
                                  "end": {
                                    "row": 9,
                                    "column": 56
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start": {
                            "row": 9,
                            "column": 56
                          },
                          "end": {
                            "row": 9,
                            "column": 57
                          },
                          "text": ";"
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start": {
                        "row": 10,
                        "column": 2
                      },
                      "end": {
                        "row": 10,
                        "column": 3
                      },
                      "text": "}"
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start": {
                "row": 11,
                "column": 1
              },
              "end": {
                "row": 11,
                "column": 2
              },
              "text": "}"
            }
          ]
        }
      ]
    }
  ]
}