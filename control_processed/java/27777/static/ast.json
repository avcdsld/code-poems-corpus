{
  "type": "program",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 6,
    "column": 5
  },
  "text": "public static DelimitedStringParser parser(String pairDelimiter, String keyValueDelimiter) {\n        Exceptions.checkNotNullOrEmpty(pairDelimiter, \"pairDelimiter\");\n        Exceptions.checkNotNullOrEmpty(keyValueDelimiter, \"keyValueDelimiter\");\n        Preconditions.checkArgument(!pairDelimiter.equals(keyValueDelimiter),\n                \"pairDelimiter (%s) cannot be the same as keyValueDelimiter (%s)\", pairDelimiter, keyValueDelimiter);\n        return new DelimitedStringParser(pairDelimiter, keyValueDelimiter);\n    }",
  "children": [
    {
      "type": "method_declaration",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 6,
        "column": 5
      },
      "text": "public static DelimitedStringParser parser(String pairDelimiter, String keyValueDelimiter) {\n        Exceptions.checkNotNullOrEmpty(pairDelimiter, \"pairDelimiter\");\n        Exceptions.checkNotNullOrEmpty(keyValueDelimiter, \"keyValueDelimiter\");\n        Preconditions.checkArgument(!pairDelimiter.equals(keyValueDelimiter),\n                \"pairDelimiter (%s) cannot be the same as keyValueDelimiter (%s)\", pairDelimiter, keyValueDelimiter);\n        return new DelimitedStringParser(pairDelimiter, keyValueDelimiter);\n    }",
      "children": [
        {
          "type": "modifiers",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 13
          },
          "text": "public static",
          "children": [
            {
              "type": "public",
              "start": {
                "row": 0,
                "column": 0
              },
              "end": {
                "row": 0,
                "column": 6
              },
              "text": "public"
            },
            {
              "type": "static",
              "start": {
                "row": 0,
                "column": 7
              },
              "end": {
                "row": 0,
                "column": 13
              },
              "text": "static"
            }
          ]
        },
        {
          "type": "type_identifier",
          "start": {
            "row": 0,
            "column": 14
          },
          "end": {
            "row": 0,
            "column": 35
          },
          "text": "DelimitedStringParser"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 36
          },
          "end": {
            "row": 0,
            "column": 42
          },
          "text": "parser"
        },
        {
          "type": "formal_parameters",
          "start": {
            "row": 0,
            "column": 42
          },
          "end": {
            "row": 0,
            "column": 90
          },
          "text": "(String pairDelimiter, String keyValueDelimiter)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 42
              },
              "end": {
                "row": 0,
                "column": 43
              },
              "text": "("
            },
            {
              "type": "formal_parameter",
              "start": {
                "row": 0,
                "column": 43
              },
              "end": {
                "row": 0,
                "column": 63
              },
              "text": "String pairDelimiter",
              "children": [
                {
                  "type": "type_identifier",
                  "start": {
                    "row": 0,
                    "column": 43
                  },
                  "end": {
                    "row": 0,
                    "column": 49
                  },
                  "text": "String"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 50
                  },
                  "end": {
                    "row": 0,
                    "column": 63
                  },
                  "text": "pairDelimiter"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 63
              },
              "end": {
                "row": 0,
                "column": 64
              },
              "text": ","
            },
            {
              "type": "formal_parameter",
              "start": {
                "row": 0,
                "column": 65
              },
              "end": {
                "row": 0,
                "column": 89
              },
              "text": "String keyValueDelimiter",
              "children": [
                {
                  "type": "type_identifier",
                  "start": {
                    "row": 0,
                    "column": 65
                  },
                  "end": {
                    "row": 0,
                    "column": 71
                  },
                  "text": "String"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 72
                  },
                  "end": {
                    "row": 0,
                    "column": 89
                  },
                  "text": "keyValueDelimiter"
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 89
              },
              "end": {
                "row": 0,
                "column": 90
              },
              "text": ")"
            }
          ]
        },
        {
          "type": "block",
          "start": {
            "row": 0,
            "column": 91
          },
          "end": {
            "row": 6,
            "column": 5
          },
          "text": "{\n        Exceptions.checkNotNullOrEmpty(pairDelimiter, \"pairDelimiter\");\n        Exceptions.checkNotNullOrEmpty(keyValueDelimiter, \"keyValueDelimiter\");\n        Preconditions.checkArgument(!pairDelimiter.equals(keyValueDelimiter),\n                \"pairDelimiter (%s) cannot be the same as keyValueDelimiter (%s)\", pairDelimiter, keyValueDelimiter);\n        return new DelimitedStringParser(pairDelimiter, keyValueDelimiter);\n    }",
          "children": [
            {
              "type": "{",
              "start": {
                "row": 0,
                "column": 91
              },
              "end": {
                "row": 0,
                "column": 92
              },
              "text": "{"
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 8
              },
              "end": {
                "row": 1,
                "column": 71
              },
              "text": "Exceptions.checkNotNullOrEmpty(pairDelimiter, \"pairDelimiter\");",
              "children": [
                {
                  "type": "method_invocation",
                  "start": {
                    "row": 1,
                    "column": 8
                  },
                  "end": {
                    "row": 1,
                    "column": 70
                  },
                  "text": "Exceptions.checkNotNullOrEmpty(pairDelimiter, \"pairDelimiter\")",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 1,
                        "column": 8
                      },
                      "end": {
                        "row": 1,
                        "column": 18
                      },
                      "text": "Exceptions"
                    },
                    {
                      "type": ".",
                      "start": {
                        "row": 1,
                        "column": 18
                      },
                      "end": {
                        "row": 1,
                        "column": 19
                      },
                      "text": "."
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 1,
                        "column": 19
                      },
                      "end": {
                        "row": 1,
                        "column": 38
                      },
                      "text": "checkNotNullOrEmpty"
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 1,
                        "column": 38
                      },
                      "end": {
                        "row": 1,
                        "column": 70
                      },
                      "text": "(pairDelimiter, \"pairDelimiter\")",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 1,
                            "column": 38
                          },
                          "end": {
                            "row": 1,
                            "column": 39
                          },
                          "text": "("
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 1,
                            "column": 39
                          },
                          "end": {
                            "row": 1,
                            "column": 52
                          },
                          "text": "pairDelimiter"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 1,
                            "column": 52
                          },
                          "end": {
                            "row": 1,
                            "column": 53
                          },
                          "text": ","
                        },
                        {
                          "type": "string_literal",
                          "start": {
                            "row": 1,
                            "column": 54
                          },
                          "end": {
                            "row": 1,
                            "column": 69
                          },
                          "text": "\"pairDelimiter\"",
                          "children": [
                            {
                              "type": "\"",
                              "start": {
                                "row": 1,
                                "column": 54
                              },
                              "end": {
                                "row": 1,
                                "column": 55
                              },
                              "text": "\""
                            },
                            {
                              "type": "string_fragment",
                              "start": {
                                "row": 1,
                                "column": 55
                              },
                              "end": {
                                "row": 1,
                                "column": 68
                              },
                              "text": "pairDelimiter"
                            },
                            {
                              "type": "\"",
                              "start": {
                                "row": 1,
                                "column": 68
                              },
                              "end": {
                                "row": 1,
                                "column": 69
                              },
                              "text": "\""
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 1,
                            "column": 69
                          },
                          "end": {
                            "row": 1,
                            "column": 70
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 1,
                    "column": 70
                  },
                  "end": {
                    "row": 1,
                    "column": 71
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 2,
                "column": 8
              },
              "end": {
                "row": 2,
                "column": 79
              },
              "text": "Exceptions.checkNotNullOrEmpty(keyValueDelimiter, \"keyValueDelimiter\");",
              "children": [
                {
                  "type": "method_invocation",
                  "start": {
                    "row": 2,
                    "column": 8
                  },
                  "end": {
                    "row": 2,
                    "column": 78
                  },
                  "text": "Exceptions.checkNotNullOrEmpty(keyValueDelimiter, \"keyValueDelimiter\")",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 2,
                        "column": 8
                      },
                      "end": {
                        "row": 2,
                        "column": 18
                      },
                      "text": "Exceptions"
                    },
                    {
                      "type": ".",
                      "start": {
                        "row": 2,
                        "column": 18
                      },
                      "end": {
                        "row": 2,
                        "column": 19
                      },
                      "text": "."
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 2,
                        "column": 19
                      },
                      "end": {
                        "row": 2,
                        "column": 38
                      },
                      "text": "checkNotNullOrEmpty"
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 2,
                        "column": 38
                      },
                      "end": {
                        "row": 2,
                        "column": 78
                      },
                      "text": "(keyValueDelimiter, \"keyValueDelimiter\")",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 2,
                            "column": 38
                          },
                          "end": {
                            "row": 2,
                            "column": 39
                          },
                          "text": "("
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 2,
                            "column": 39
                          },
                          "end": {
                            "row": 2,
                            "column": 56
                          },
                          "text": "keyValueDelimiter"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 2,
                            "column": 56
                          },
                          "end": {
                            "row": 2,
                            "column": 57
                          },
                          "text": ","
                        },
                        {
                          "type": "string_literal",
                          "start": {
                            "row": 2,
                            "column": 58
                          },
                          "end": {
                            "row": 2,
                            "column": 77
                          },
                          "text": "\"keyValueDelimiter\"",
                          "children": [
                            {
                              "type": "\"",
                              "start": {
                                "row": 2,
                                "column": 58
                              },
                              "end": {
                                "row": 2,
                                "column": 59
                              },
                              "text": "\""
                            },
                            {
                              "type": "string_fragment",
                              "start": {
                                "row": 2,
                                "column": 59
                              },
                              "end": {
                                "row": 2,
                                "column": 76
                              },
                              "text": "keyValueDelimiter"
                            },
                            {
                              "type": "\"",
                              "start": {
                                "row": 2,
                                "column": 76
                              },
                              "end": {
                                "row": 2,
                                "column": 77
                              },
                              "text": "\""
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 2,
                            "column": 77
                          },
                          "end": {
                            "row": 2,
                            "column": 78
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 2,
                    "column": 78
                  },
                  "end": {
                    "row": 2,
                    "column": 79
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 3,
                "column": 8
              },
              "end": {
                "row": 4,
                "column": 117
              },
              "text": "Preconditions.checkArgument(!pairDelimiter.equals(keyValueDelimiter),\n                \"pairDelimiter (%s) cannot be the same as keyValueDelimiter (%s)\", pairDelimiter, keyValueDelimiter);",
              "children": [
                {
                  "type": "method_invocation",
                  "start": {
                    "row": 3,
                    "column": 8
                  },
                  "end": {
                    "row": 4,
                    "column": 116
                  },
                  "text": "Preconditions.checkArgument(!pairDelimiter.equals(keyValueDelimiter),\n                \"pairDelimiter (%s) cannot be the same as keyValueDelimiter (%s)\", pairDelimiter, keyValueDelimiter)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 3,
                        "column": 8
                      },
                      "end": {
                        "row": 3,
                        "column": 21
                      },
                      "text": "Preconditions"
                    },
                    {
                      "type": ".",
                      "start": {
                        "row": 3,
                        "column": 21
                      },
                      "end": {
                        "row": 3,
                        "column": 22
                      },
                      "text": "."
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 3,
                        "column": 22
                      },
                      "end": {
                        "row": 3,
                        "column": 35
                      },
                      "text": "checkArgument"
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 3,
                        "column": 35
                      },
                      "end": {
                        "row": 4,
                        "column": 116
                      },
                      "text": "(!pairDelimiter.equals(keyValueDelimiter),\n                \"pairDelimiter (%s) cannot be the same as keyValueDelimiter (%s)\", pairDelimiter, keyValueDelimiter)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 3,
                            "column": 35
                          },
                          "end": {
                            "row": 3,
                            "column": 36
                          },
                          "text": "("
                        },
                        {
                          "type": "unary_expression",
                          "start": {
                            "row": 3,
                            "column": 36
                          },
                          "end": {
                            "row": 3,
                            "column": 76
                          },
                          "text": "!pairDelimiter.equals(keyValueDelimiter)",
                          "children": [
                            {
                              "type": "!",
                              "start": {
                                "row": 3,
                                "column": 36
                              },
                              "end": {
                                "row": 3,
                                "column": 37
                              },
                              "text": "!"
                            },
                            {
                              "type": "method_invocation",
                              "start": {
                                "row": 3,
                                "column": 37
                              },
                              "end": {
                                "row": 3,
                                "column": 76
                              },
                              "text": "pairDelimiter.equals(keyValueDelimiter)",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 3,
                                    "column": 37
                                  },
                                  "end": {
                                    "row": 3,
                                    "column": 50
                                  },
                                  "text": "pairDelimiter"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 3,
                                    "column": 50
                                  },
                                  "end": {
                                    "row": 3,
                                    "column": 51
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 3,
                                    "column": 51
                                  },
                                  "end": {
                                    "row": 3,
                                    "column": 57
                                  },
                                  "text": "equals"
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 3,
                                    "column": 57
                                  },
                                  "end": {
                                    "row": 3,
                                    "column": 76
                                  },
                                  "text": "(keyValueDelimiter)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 3,
                                        "column": 57
                                      },
                                      "end": {
                                        "row": 3,
                                        "column": 58
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 3,
                                        "column": 58
                                      },
                                      "end": {
                                        "row": 3,
                                        "column": 75
                                      },
                                      "text": "keyValueDelimiter"
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 3,
                                        "column": 75
                                      },
                                      "end": {
                                        "row": 3,
                                        "column": 76
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 3,
                            "column": 76
                          },
                          "end": {
                            "row": 3,
                            "column": 77
                          },
                          "text": ","
                        },
                        {
                          "type": "string_literal",
                          "start": {
                            "row": 4,
                            "column": 16
                          },
                          "end": {
                            "row": 4,
                            "column": 81
                          },
                          "text": "\"pairDelimiter (%s) cannot be the same as keyValueDelimiter (%s)\"",
                          "children": [
                            {
                              "type": "\"",
                              "start": {
                                "row": 4,
                                "column": 16
                              },
                              "end": {
                                "row": 4,
                                "column": 17
                              },
                              "text": "\""
                            },
                            {
                              "type": "string_fragment",
                              "start": {
                                "row": 4,
                                "column": 17
                              },
                              "end": {
                                "row": 4,
                                "column": 80
                              },
                              "text": "pairDelimiter (%s) cannot be the same as keyValueDelimiter (%s)"
                            },
                            {
                              "type": "\"",
                              "start": {
                                "row": 4,
                                "column": 80
                              },
                              "end": {
                                "row": 4,
                                "column": 81
                              },
                              "text": "\""
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 4,
                            "column": 81
                          },
                          "end": {
                            "row": 4,
                            "column": 82
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 4,
                            "column": 83
                          },
                          "end": {
                            "row": 4,
                            "column": 96
                          },
                          "text": "pairDelimiter"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 4,
                            "column": 96
                          },
                          "end": {
                            "row": 4,
                            "column": 97
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 4,
                            "column": 98
                          },
                          "end": {
                            "row": 4,
                            "column": 115
                          },
                          "text": "keyValueDelimiter"
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 4,
                            "column": 115
                          },
                          "end": {
                            "row": 4,
                            "column": 116
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 4,
                    "column": 116
                  },
                  "end": {
                    "row": 4,
                    "column": 117
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 5,
                "column": 8
              },
              "end": {
                "row": 5,
                "column": 75
              },
              "text": "return new DelimitedStringParser(pairDelimiter, keyValueDelimiter);",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 5,
                    "column": 8
                  },
                  "end": {
                    "row": 5,
                    "column": 14
                  },
                  "text": "return"
                },
                {
                  "type": "object_creation_expression",
                  "start": {
                    "row": 5,
                    "column": 15
                  },
                  "end": {
                    "row": 5,
                    "column": 74
                  },
                  "text": "new DelimitedStringParser(pairDelimiter, keyValueDelimiter)",
                  "children": [
                    {
                      "type": "new",
                      "start": {
                        "row": 5,
                        "column": 15
                      },
                      "end": {
                        "row": 5,
                        "column": 18
                      },
                      "text": "new"
                    },
                    {
                      "type": "type_identifier",
                      "start": {
                        "row": 5,
                        "column": 19
                      },
                      "end": {
                        "row": 5,
                        "column": 40
                      },
                      "text": "DelimitedStringParser"
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 5,
                        "column": 40
                      },
                      "end": {
                        "row": 5,
                        "column": 74
                      },
                      "text": "(pairDelimiter, keyValueDelimiter)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 5,
                            "column": 40
                          },
                          "end": {
                            "row": 5,
                            "column": 41
                          },
                          "text": "("
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 5,
                            "column": 41
                          },
                          "end": {
                            "row": 5,
                            "column": 54
                          },
                          "text": "pairDelimiter"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 5,
                            "column": 54
                          },
                          "end": {
                            "row": 5,
                            "column": 55
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 5,
                            "column": 56
                          },
                          "end": {
                            "row": 5,
                            "column": 73
                          },
                          "text": "keyValueDelimiter"
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 5,
                            "column": 73
                          },
                          "end": {
                            "row": 5,
                            "column": 74
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 5,
                    "column": 74
                  },
                  "end": {
                    "row": 5,
                    "column": 75
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "}",
              "start": {
                "row": 6,
                "column": 4
              },
              "end": {
                "row": 6,
                "column": 5
              },
              "text": "}"
            }
          ]
        }
      ]
    }
  ]
}