{
  "type": "program",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 77,
    "column": 2
  },
  "text": "public Long toLong() {\n\t\tensureMaterialized();\n\t\tif (sizeInBytes == 0) {\n\t\t\treturn null;\n\t\t}\n\t\tint size = segments[0].size();\n\t\tSegmentAndOffset segmentAndOffset = startSegmentAndOffset(size);\n\t\tint totalOffset = 0;\n\n\t\tbyte b = segmentAndOffset.value();\n\t\tfinal boolean negative = b == '-';\n\t\tif (negative || b == '+') {\n\t\t\tsegmentAndOffset.nextByte(size);\n\t\t\ttotalOffset++;\n\t\t\tif (sizeInBytes == 1) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\n\t\tlong result = 0;\n\t\tfinal byte separator = '.';\n\t\tfinal int radix = 10;\n\t\tfinal long stopValue = Long.MIN_VALUE / radix;\n\t\twhile (totalOffset < this.sizeInBytes) {\n\t\t\tb = segmentAndOffset.value();\n\t\t\ttotalOffset++;\n\t\t\tsegmentAndOffset.nextByte(size);\n\t\t\tif (b == separator) {\n\t\t\t\t// We allow decimals and will return a truncated integral in that case.\n\t\t\t\t// Therefore we won't throw an exception here (checking the fractional\n\t\t\t\t// part happens below.)\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tint digit;\n\t\t\tif (b >= '0' && b <= '9') {\n\t\t\t\tdigit = b - '0';\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// We are going to process the new digit and accumulate the result. However, before\n\t\t\t// doing this, if the result is already smaller than the\n\t\t\t// stopValue(Long.MIN_VALUE / radix), then result * 10 will definitely be smaller\n\t\t\t// than minValue, and we can stop.\n\t\t\tif (result < stopValue) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tresult = result * radix - digit;\n\t\t\t// Since the previous result is less than or equal to\n\t\t\t// stopValue(Long.MIN_VALUE / radix), we can just use `result > 0` to check overflow.\n\t\t\t// If result overflows, we should stop.\n\t\t\tif (result > 0) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\n\t\t// This is the case when we've encountered a decimal separator. The fractional\n\t\t// part will not change the number, but we will verify that the fractional part\n\t\t// is well formed.\n\t\twhile (totalOffset < sizeInBytes) {\n\t\t\tbyte currentByte = segmentAndOffset.value();\n\t\t\tif (currentByte < '0' || currentByte > '9') {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\ttotalOffset++;\n\t\t\tsegmentAndOffset.nextByte(size);\n\t\t}\n\n\t\tif (!negative) {\n\t\t\tresult = -result;\n\t\t\tif (result < 0) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}",
  "children": [
    {
      "type": "method_declaration",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 77,
        "column": 2
      },
      "text": "public Long toLong() {\n\t\tensureMaterialized();\n\t\tif (sizeInBytes == 0) {\n\t\t\treturn null;\n\t\t}\n\t\tint size = segments[0].size();\n\t\tSegmentAndOffset segmentAndOffset = startSegmentAndOffset(size);\n\t\tint totalOffset = 0;\n\n\t\tbyte b = segmentAndOffset.value();\n\t\tfinal boolean negative = b == '-';\n\t\tif (negative || b == '+') {\n\t\t\tsegmentAndOffset.nextByte(size);\n\t\t\ttotalOffset++;\n\t\t\tif (sizeInBytes == 1) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\n\t\tlong result = 0;\n\t\tfinal byte separator = '.';\n\t\tfinal int radix = 10;\n\t\tfinal long stopValue = Long.MIN_VALUE / radix;\n\t\twhile (totalOffset < this.sizeInBytes) {\n\t\t\tb = segmentAndOffset.value();\n\t\t\ttotalOffset++;\n\t\t\tsegmentAndOffset.nextByte(size);\n\t\t\tif (b == separator) {\n\t\t\t\t// We allow decimals and will return a truncated integral in that case.\n\t\t\t\t// Therefore we won't throw an exception here (checking the fractional\n\t\t\t\t// part happens below.)\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tint digit;\n\t\t\tif (b >= '0' && b <= '9') {\n\t\t\t\tdigit = b - '0';\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// We are going to process the new digit and accumulate the result. However, before\n\t\t\t// doing this, if the result is already smaller than the\n\t\t\t// stopValue(Long.MIN_VALUE / radix), then result * 10 will definitely be smaller\n\t\t\t// than minValue, and we can stop.\n\t\t\tif (result < stopValue) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tresult = result * radix - digit;\n\t\t\t// Since the previous result is less than or equal to\n\t\t\t// stopValue(Long.MIN_VALUE / radix), we can just use `result > 0` to check overflow.\n\t\t\t// If result overflows, we should stop.\n\t\t\tif (result > 0) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\n\t\t// This is the case when we've encountered a decimal separator. The fractional\n\t\t// part will not change the number, but we will verify that the fractional part\n\t\t// is well formed.\n\t\twhile (totalOffset < sizeInBytes) {\n\t\t\tbyte currentByte = segmentAndOffset.value();\n\t\t\tif (currentByte < '0' || currentByte > '9') {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\ttotalOffset++;\n\t\t\tsegmentAndOffset.nextByte(size);\n\t\t}\n\n\t\tif (!negative) {\n\t\t\tresult = -result;\n\t\t\tif (result < 0) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}",
      "children": [
        {
          "type": "modifiers",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 6
          },
          "text": "public",
          "children": [
            {
              "type": "public",
              "start": {
                "row": 0,
                "column": 0
              },
              "end": {
                "row": 0,
                "column": 6
              },
              "text": "public"
            }
          ]
        },
        {
          "type": "type_identifier",
          "start": {
            "row": 0,
            "column": 7
          },
          "end": {
            "row": 0,
            "column": 11
          },
          "text": "Long"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 12
          },
          "end": {
            "row": 0,
            "column": 18
          },
          "text": "toLong"
        },
        {
          "type": "formal_parameters",
          "start": {
            "row": 0,
            "column": 18
          },
          "end": {
            "row": 0,
            "column": 20
          },
          "text": "()",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 18
              },
              "end": {
                "row": 0,
                "column": 19
              },
              "text": "("
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 19
              },
              "end": {
                "row": 0,
                "column": 20
              },
              "text": ")"
            }
          ]
        },
        {
          "type": "block",
          "start": {
            "row": 0,
            "column": 21
          },
          "end": {
            "row": 77,
            "column": 2
          },
          "text": "{\n\t\tensureMaterialized();\n\t\tif (sizeInBytes == 0) {\n\t\t\treturn null;\n\t\t}\n\t\tint size = segments[0].size();\n\t\tSegmentAndOffset segmentAndOffset = startSegmentAndOffset(size);\n\t\tint totalOffset = 0;\n\n\t\tbyte b = segmentAndOffset.value();\n\t\tfinal boolean negative = b == '-';\n\t\tif (negative || b == '+') {\n\t\t\tsegmentAndOffset.nextByte(size);\n\t\t\ttotalOffset++;\n\t\t\tif (sizeInBytes == 1) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\n\t\tlong result = 0;\n\t\tfinal byte separator = '.';\n\t\tfinal int radix = 10;\n\t\tfinal long stopValue = Long.MIN_VALUE / radix;\n\t\twhile (totalOffset < this.sizeInBytes) {\n\t\t\tb = segmentAndOffset.value();\n\t\t\ttotalOffset++;\n\t\t\tsegmentAndOffset.nextByte(size);\n\t\t\tif (b == separator) {\n\t\t\t\t// We allow decimals and will return a truncated integral in that case.\n\t\t\t\t// Therefore we won't throw an exception here (checking the fractional\n\t\t\t\t// part happens below.)\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tint digit;\n\t\t\tif (b >= '0' && b <= '9') {\n\t\t\t\tdigit = b - '0';\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// We are going to process the new digit and accumulate the result. However, before\n\t\t\t// doing this, if the result is already smaller than the\n\t\t\t// stopValue(Long.MIN_VALUE / radix), then result * 10 will definitely be smaller\n\t\t\t// than minValue, and we can stop.\n\t\t\tif (result < stopValue) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tresult = result * radix - digit;\n\t\t\t// Since the previous result is less than or equal to\n\t\t\t// stopValue(Long.MIN_VALUE / radix), we can just use `result > 0` to check overflow.\n\t\t\t// If result overflows, we should stop.\n\t\t\tif (result > 0) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\n\t\t// This is the case when we've encountered a decimal separator. The fractional\n\t\t// part will not change the number, but we will verify that the fractional part\n\t\t// is well formed.\n\t\twhile (totalOffset < sizeInBytes) {\n\t\t\tbyte currentByte = segmentAndOffset.value();\n\t\t\tif (currentByte < '0' || currentByte > '9') {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\ttotalOffset++;\n\t\t\tsegmentAndOffset.nextByte(size);\n\t\t}\n\n\t\tif (!negative) {\n\t\t\tresult = -result;\n\t\t\tif (result < 0) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}",
          "children": [
            {
              "type": "{",
              "start": {
                "row": 0,
                "column": 21
              },
              "end": {
                "row": 0,
                "column": 22
              },
              "text": "{"
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 2
              },
              "end": {
                "row": 1,
                "column": 23
              },
              "text": "ensureMaterialized();",
              "children": [
                {
                  "type": "method_invocation",
                  "start": {
                    "row": 1,
                    "column": 2
                  },
                  "end": {
                    "row": 1,
                    "column": 22
                  },
                  "text": "ensureMaterialized()",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 1,
                        "column": 2
                      },
                      "end": {
                        "row": 1,
                        "column": 20
                      },
                      "text": "ensureMaterialized"
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 1,
                        "column": 20
                      },
                      "end": {
                        "row": 1,
                        "column": 22
                      },
                      "text": "()",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 1,
                            "column": 20
                          },
                          "end": {
                            "row": 1,
                            "column": 21
                          },
                          "text": "("
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 1,
                            "column": 21
                          },
                          "end": {
                            "row": 1,
                            "column": 22
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 1,
                    "column": 22
                  },
                  "end": {
                    "row": 1,
                    "column": 23
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 2,
                "column": 2
              },
              "end": {
                "row": 4,
                "column": 3
              },
              "text": "if (sizeInBytes == 0) {\n\t\t\treturn null;\n\t\t}",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 2,
                    "column": 2
                  },
                  "end": {
                    "row": 2,
                    "column": 4
                  },
                  "text": "if"
                },
                {
                  "type": "condition",
                  "start": {
                    "row": 2,
                    "column": 5
                  },
                  "end": {
                    "row": 2,
                    "column": 23
                  },
                  "text": "(sizeInBytes == 0)",
                  "children": [
                    {
                      "type": "(",
                      "start": {
                        "row": 2,
                        "column": 5
                      },
                      "end": {
                        "row": 2,
                        "column": 6
                      },
                      "text": "("
                    },
                    {
                      "type": "binary_expression",
                      "start": {
                        "row": 2,
                        "column": 6
                      },
                      "end": {
                        "row": 2,
                        "column": 22
                      },
                      "text": "sizeInBytes == 0",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 2,
                            "column": 6
                          },
                          "end": {
                            "row": 2,
                            "column": 17
                          },
                          "text": "sizeInBytes"
                        },
                        {
                          "type": "==",
                          "start": {
                            "row": 2,
                            "column": 18
                          },
                          "end": {
                            "row": 2,
                            "column": 20
                          },
                          "text": "=="
                        },
                        {
                          "type": "decimal_integer_literal",
                          "start": {
                            "row": 2,
                            "column": 21
                          },
                          "end": {
                            "row": 2,
                            "column": 22
                          },
                          "text": "0"
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start": {
                        "row": 2,
                        "column": 22
                      },
                      "end": {
                        "row": 2,
                        "column": 23
                      },
                      "text": ")"
                    }
                  ]
                },
                {
                  "type": "block",
                  "start": {
                    "row": 2,
                    "column": 24
                  },
                  "end": {
                    "row": 4,
                    "column": 3
                  },
                  "text": "{\n\t\t\treturn null;\n\t\t}",
                  "children": [
                    {
                      "type": "{",
                      "start": {
                        "row": 2,
                        "column": 24
                      },
                      "end": {
                        "row": 2,
                        "column": 25
                      },
                      "text": "{"
                    },
                    {
                      "type": "return_statement",
                      "start": {
                        "row": 3,
                        "column": 3
                      },
                      "end": {
                        "row": 3,
                        "column": 15
                      },
                      "text": "return null;",
                      "children": [
                        {
                          "type": "return",
                          "start": {
                            "row": 3,
                            "column": 3
                          },
                          "end": {
                            "row": 3,
                            "column": 9
                          },
                          "text": "return"
                        },
                        {
                          "type": "null_literal",
                          "start": {
                            "row": 3,
                            "column": 10
                          },
                          "end": {
                            "row": 3,
                            "column": 14
                          },
                          "text": "null"
                        },
                        {
                          "type": ";",
                          "start": {
                            "row": 3,
                            "column": 14
                          },
                          "end": {
                            "row": 3,
                            "column": 15
                          },
                          "text": ";"
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start": {
                        "row": 4,
                        "column": 2
                      },
                      "end": {
                        "row": 4,
                        "column": 3
                      },
                      "text": "}"
                    }
                  ]
                }
              ]
            },
            {
              "type": "local_variable_declaration",
              "start": {
                "row": 5,
                "column": 2
              },
              "end": {
                "row": 5,
                "column": 32
              },
              "text": "int size = segments[0].size();",
              "children": [
                {
                  "type": "integral_type",
                  "start": {
                    "row": 5,
                    "column": 2
                  },
                  "end": {
                    "row": 5,
                    "column": 5
                  },
                  "text": "int",
                  "children": [
                    {
                      "type": "int",
                      "start": {
                        "row": 5,
                        "column": 2
                      },
                      "end": {
                        "row": 5,
                        "column": 5
                      },
                      "text": "int"
                    }
                  ]
                },
                {
                  "type": "variable_declarator",
                  "start": {
                    "row": 5,
                    "column": 6
                  },
                  "end": {
                    "row": 5,
                    "column": 31
                  },
                  "text": "size = segments[0].size()",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 5,
                        "column": 6
                      },
                      "end": {
                        "row": 5,
                        "column": 10
                      },
                      "text": "size"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 5,
                        "column": 11
                      },
                      "end": {
                        "row": 5,
                        "column": 12
                      },
                      "text": "="
                    },
                    {
                      "type": "method_invocation",
                      "start": {
                        "row": 5,
                        "column": 13
                      },
                      "end": {
                        "row": 5,
                        "column": 31
                      },
                      "text": "segments[0].size()",
                      "children": [
                        {
                          "type": "array_access",
                          "start": {
                            "row": 5,
                            "column": 13
                          },
                          "end": {
                            "row": 5,
                            "column": 24
                          },
                          "text": "segments[0]",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 5,
                                "column": 13
                              },
                              "end": {
                                "row": 5,
                                "column": 21
                              },
                              "text": "segments"
                            },
                            {
                              "type": "[",
                              "start": {
                                "row": 5,
                                "column": 21
                              },
                              "end": {
                                "row": 5,
                                "column": 22
                              },
                              "text": "["
                            },
                            {
                              "type": "decimal_integer_literal",
                              "start": {
                                "row": 5,
                                "column": 22
                              },
                              "end": {
                                "row": 5,
                                "column": 23
                              },
                              "text": "0"
                            },
                            {
                              "type": "]",
                              "start": {
                                "row": 5,
                                "column": 23
                              },
                              "end": {
                                "row": 5,
                                "column": 24
                              },
                              "text": "]"
                            }
                          ]
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 5,
                            "column": 24
                          },
                          "end": {
                            "row": 5,
                            "column": 25
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 5,
                            "column": 25
                          },
                          "end": {
                            "row": 5,
                            "column": 29
                          },
                          "text": "size"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 5,
                            "column": 29
                          },
                          "end": {
                            "row": 5,
                            "column": 31
                          },
                          "text": "()",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 5,
                                "column": 29
                              },
                              "end": {
                                "row": 5,
                                "column": 30
                              },
                              "text": "("
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 5,
                                "column": 30
                              },
                              "end": {
                                "row": 5,
                                "column": 31
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 5,
                    "column": 31
                  },
                  "end": {
                    "row": 5,
                    "column": 32
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "local_variable_declaration",
              "start": {
                "row": 6,
                "column": 2
              },
              "end": {
                "row": 6,
                "column": 66
              },
              "text": "SegmentAndOffset segmentAndOffset = startSegmentAndOffset(size);",
              "children": [
                {
                  "type": "type_identifier",
                  "start": {
                    "row": 6,
                    "column": 2
                  },
                  "end": {
                    "row": 6,
                    "column": 18
                  },
                  "text": "SegmentAndOffset"
                },
                {
                  "type": "variable_declarator",
                  "start": {
                    "row": 6,
                    "column": 19
                  },
                  "end": {
                    "row": 6,
                    "column": 65
                  },
                  "text": "segmentAndOffset = startSegmentAndOffset(size)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 6,
                        "column": 19
                      },
                      "end": {
                        "row": 6,
                        "column": 35
                      },
                      "text": "segmentAndOffset"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 6,
                        "column": 36
                      },
                      "end": {
                        "row": 6,
                        "column": 37
                      },
                      "text": "="
                    },
                    {
                      "type": "method_invocation",
                      "start": {
                        "row": 6,
                        "column": 38
                      },
                      "end": {
                        "row": 6,
                        "column": 65
                      },
                      "text": "startSegmentAndOffset(size)",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 6,
                            "column": 38
                          },
                          "end": {
                            "row": 6,
                            "column": 59
                          },
                          "text": "startSegmentAndOffset"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 6,
                            "column": 59
                          },
                          "end": {
                            "row": 6,
                            "column": 65
                          },
                          "text": "(size)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 6,
                                "column": 59
                              },
                              "end": {
                                "row": 6,
                                "column": 60
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 6,
                                "column": 60
                              },
                              "end": {
                                "row": 6,
                                "column": 64
                              },
                              "text": "size"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 6,
                                "column": 64
                              },
                              "end": {
                                "row": 6,
                                "column": 65
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 6,
                    "column": 65
                  },
                  "end": {
                    "row": 6,
                    "column": 66
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "local_variable_declaration",
              "start": {
                "row": 7,
                "column": 2
              },
              "end": {
                "row": 7,
                "column": 22
              },
              "text": "int totalOffset = 0;",
              "children": [
                {
                  "type": "integral_type",
                  "start": {
                    "row": 7,
                    "column": 2
                  },
                  "end": {
                    "row": 7,
                    "column": 5
                  },
                  "text": "int",
                  "children": [
                    {
                      "type": "int",
                      "start": {
                        "row": 7,
                        "column": 2
                      },
                      "end": {
                        "row": 7,
                        "column": 5
                      },
                      "text": "int"
                    }
                  ]
                },
                {
                  "type": "variable_declarator",
                  "start": {
                    "row": 7,
                    "column": 6
                  },
                  "end": {
                    "row": 7,
                    "column": 21
                  },
                  "text": "totalOffset = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 7,
                        "column": 6
                      },
                      "end": {
                        "row": 7,
                        "column": 17
                      },
                      "text": "totalOffset"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 7,
                        "column": 18
                      },
                      "end": {
                        "row": 7,
                        "column": 19
                      },
                      "text": "="
                    },
                    {
                      "type": "decimal_integer_literal",
                      "start": {
                        "row": 7,
                        "column": 20
                      },
                      "end": {
                        "row": 7,
                        "column": 21
                      },
                      "text": "0"
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 7,
                    "column": 21
                  },
                  "end": {
                    "row": 7,
                    "column": 22
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "local_variable_declaration",
              "start": {
                "row": 9,
                "column": 2
              },
              "end": {
                "row": 9,
                "column": 36
              },
              "text": "byte b = segmentAndOffset.value();",
              "children": [
                {
                  "type": "integral_type",
                  "start": {
                    "row": 9,
                    "column": 2
                  },
                  "end": {
                    "row": 9,
                    "column": 6
                  },
                  "text": "byte",
                  "children": [
                    {
                      "type": "byte",
                      "start": {
                        "row": 9,
                        "column": 2
                      },
                      "end": {
                        "row": 9,
                        "column": 6
                      },
                      "text": "byte"
                    }
                  ]
                },
                {
                  "type": "variable_declarator",
                  "start": {
                    "row": 9,
                    "column": 7
                  },
                  "end": {
                    "row": 9,
                    "column": 35
                  },
                  "text": "b = segmentAndOffset.value()",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 9,
                        "column": 7
                      },
                      "end": {
                        "row": 9,
                        "column": 8
                      },
                      "text": "b"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 9,
                        "column": 9
                      },
                      "end": {
                        "row": 9,
                        "column": 10
                      },
                      "text": "="
                    },
                    {
                      "type": "method_invocation",
                      "start": {
                        "row": 9,
                        "column": 11
                      },
                      "end": {
                        "row": 9,
                        "column": 35
                      },
                      "text": "segmentAndOffset.value()",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 9,
                            "column": 11
                          },
                          "end": {
                            "row": 9,
                            "column": 27
                          },
                          "text": "segmentAndOffset"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 9,
                            "column": 27
                          },
                          "end": {
                            "row": 9,
                            "column": 28
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 9,
                            "column": 28
                          },
                          "end": {
                            "row": 9,
                            "column": 33
                          },
                          "text": "value"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 9,
                            "column": 33
                          },
                          "end": {
                            "row": 9,
                            "column": 35
                          },
                          "text": "()",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 9,
                                "column": 33
                              },
                              "end": {
                                "row": 9,
                                "column": 34
                              },
                              "text": "("
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 9,
                                "column": 34
                              },
                              "end": {
                                "row": 9,
                                "column": 35
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 9,
                    "column": 35
                  },
                  "end": {
                    "row": 9,
                    "column": 36
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "local_variable_declaration",
              "start": {
                "row": 10,
                "column": 2
              },
              "end": {
                "row": 10,
                "column": 36
              },
              "text": "final boolean negative = b == '-';",
              "children": [
                {
                  "type": "modifiers",
                  "start": {
                    "row": 10,
                    "column": 2
                  },
                  "end": {
                    "row": 10,
                    "column": 7
                  },
                  "text": "final",
                  "children": [
                    {
                      "type": "final",
                      "start": {
                        "row": 10,
                        "column": 2
                      },
                      "end": {
                        "row": 10,
                        "column": 7
                      },
                      "text": "final"
                    }
                  ]
                },
                {
                  "type": "boolean_type",
                  "start": {
                    "row": 10,
                    "column": 8
                  },
                  "end": {
                    "row": 10,
                    "column": 15
                  },
                  "text": "boolean"
                },
                {
                  "type": "variable_declarator",
                  "start": {
                    "row": 10,
                    "column": 16
                  },
                  "end": {
                    "row": 10,
                    "column": 35
                  },
                  "text": "negative = b == '-'",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 10,
                        "column": 16
                      },
                      "end": {
                        "row": 10,
                        "column": 24
                      },
                      "text": "negative"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 10,
                        "column": 25
                      },
                      "end": {
                        "row": 10,
                        "column": 26
                      },
                      "text": "="
                    },
                    {
                      "type": "binary_expression",
                      "start": {
                        "row": 10,
                        "column": 27
                      },
                      "end": {
                        "row": 10,
                        "column": 35
                      },
                      "text": "b == '-'",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 10,
                            "column": 27
                          },
                          "end": {
                            "row": 10,
                            "column": 28
                          },
                          "text": "b"
                        },
                        {
                          "type": "==",
                          "start": {
                            "row": 10,
                            "column": 29
                          },
                          "end": {
                            "row": 10,
                            "column": 31
                          },
                          "text": "=="
                        },
                        {
                          "type": "character_literal",
                          "start": {
                            "row": 10,
                            "column": 32
                          },
                          "end": {
                            "row": 10,
                            "column": 35
                          },
                          "text": "'-'"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 10,
                    "column": 35
                  },
                  "end": {
                    "row": 10,
                    "column": 36
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 11,
                "column": 2
              },
              "end": {
                "row": 17,
                "column": 3
              },
              "text": "if (negative || b == '+') {\n\t\t\tsegmentAndOffset.nextByte(size);\n\t\t\ttotalOffset++;\n\t\t\tif (sizeInBytes == 1) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 11,
                    "column": 2
                  },
                  "end": {
                    "row": 11,
                    "column": 4
                  },
                  "text": "if"
                },
                {
                  "type": "condition",
                  "start": {
                    "row": 11,
                    "column": 5
                  },
                  "end": {
                    "row": 11,
                    "column": 27
                  },
                  "text": "(negative || b == '+')",
                  "children": [
                    {
                      "type": "(",
                      "start": {
                        "row": 11,
                        "column": 5
                      },
                      "end": {
                        "row": 11,
                        "column": 6
                      },
                      "text": "("
                    },
                    {
                      "type": "binary_expression",
                      "start": {
                        "row": 11,
                        "column": 6
                      },
                      "end": {
                        "row": 11,
                        "column": 26
                      },
                      "text": "negative || b == '+'",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 11,
                            "column": 6
                          },
                          "end": {
                            "row": 11,
                            "column": 14
                          },
                          "text": "negative"
                        },
                        {
                          "type": "||",
                          "start": {
                            "row": 11,
                            "column": 15
                          },
                          "end": {
                            "row": 11,
                            "column": 17
                          },
                          "text": "||"
                        },
                        {
                          "type": "binary_expression",
                          "start": {
                            "row": 11,
                            "column": 18
                          },
                          "end": {
                            "row": 11,
                            "column": 26
                          },
                          "text": "b == '+'",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 11,
                                "column": 18
                              },
                              "end": {
                                "row": 11,
                                "column": 19
                              },
                              "text": "b"
                            },
                            {
                              "type": "==",
                              "start": {
                                "row": 11,
                                "column": 20
                              },
                              "end": {
                                "row": 11,
                                "column": 22
                              },
                              "text": "=="
                            },
                            {
                              "type": "character_literal",
                              "start": {
                                "row": 11,
                                "column": 23
                              },
                              "end": {
                                "row": 11,
                                "column": 26
                              },
                              "text": "'+'"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start": {
                        "row": 11,
                        "column": 26
                      },
                      "end": {
                        "row": 11,
                        "column": 27
                      },
                      "text": ")"
                    }
                  ]
                },
                {
                  "type": "block",
                  "start": {
                    "row": 11,
                    "column": 28
                  },
                  "end": {
                    "row": 17,
                    "column": 3
                  },
                  "text": "{\n\t\t\tsegmentAndOffset.nextByte(size);\n\t\t\ttotalOffset++;\n\t\t\tif (sizeInBytes == 1) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}",
                  "children": [
                    {
                      "type": "{",
                      "start": {
                        "row": 11,
                        "column": 28
                      },
                      "end": {
                        "row": 11,
                        "column": 29
                      },
                      "text": "{"
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 12,
                        "column": 3
                      },
                      "end": {
                        "row": 12,
                        "column": 35
                      },
                      "text": "segmentAndOffset.nextByte(size);",
                      "children": [
                        {
                          "type": "method_invocation",
                          "start": {
                            "row": 12,
                            "column": 3
                          },
                          "end": {
                            "row": 12,
                            "column": 34
                          },
                          "text": "segmentAndOffset.nextByte(size)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 12,
                                "column": 3
                              },
                              "end": {
                                "row": 12,
                                "column": 19
                              },
                              "text": "segmentAndOffset"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 12,
                                "column": 19
                              },
                              "end": {
                                "row": 12,
                                "column": 20
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 12,
                                "column": 20
                              },
                              "end": {
                                "row": 12,
                                "column": 28
                              },
                              "text": "nextByte"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 12,
                                "column": 28
                              },
                              "end": {
                                "row": 12,
                                "column": 34
                              },
                              "text": "(size)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 12,
                                    "column": 28
                                  },
                                  "end": {
                                    "row": 12,
                                    "column": 29
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 12,
                                    "column": 29
                                  },
                                  "end": {
                                    "row": 12,
                                    "column": 33
                                  },
                                  "text": "size"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 12,
                                    "column": 33
                                  },
                                  "end": {
                                    "row": 12,
                                    "column": 34
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start": {
                            "row": 12,
                            "column": 34
                          },
                          "end": {
                            "row": 12,
                            "column": 35
                          },
                          "text": ";"
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 13,
                        "column": 3
                      },
                      "end": {
                        "row": 13,
                        "column": 17
                      },
                      "text": "totalOffset++;",
                      "children": [
                        {
                          "type": "update_expression",
                          "start": {
                            "row": 13,
                            "column": 3
                          },
                          "end": {
                            "row": 13,
                            "column": 16
                          },
                          "text": "totalOffset++",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 13,
                                "column": 3
                              },
                              "end": {
                                "row": 13,
                                "column": 14
                              },
                              "text": "totalOffset"
                            },
                            {
                              "type": "++",
                              "start": {
                                "row": 13,
                                "column": 14
                              },
                              "end": {
                                "row": 13,
                                "column": 16
                              },
                              "text": "++"
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start": {
                            "row": 13,
                            "column": 16
                          },
                          "end": {
                            "row": 13,
                            "column": 17
                          },
                          "text": ";"
                        }
                      ]
                    },
                    {
                      "type": "if_statement",
                      "start": {
                        "row": 14,
                        "column": 3
                      },
                      "end": {
                        "row": 16,
                        "column": 4
                      },
                      "text": "if (sizeInBytes == 1) {\n\t\t\t\treturn null;\n\t\t\t}",
                      "children": [
                        {
                          "type": "if",
                          "start": {
                            "row": 14,
                            "column": 3
                          },
                          "end": {
                            "row": 14,
                            "column": 5
                          },
                          "text": "if"
                        },
                        {
                          "type": "condition",
                          "start": {
                            "row": 14,
                            "column": 6
                          },
                          "end": {
                            "row": 14,
                            "column": 24
                          },
                          "text": "(sizeInBytes == 1)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 14,
                                "column": 6
                              },
                              "end": {
                                "row": 14,
                                "column": 7
                              },
                              "text": "("
                            },
                            {
                              "type": "binary_expression",
                              "start": {
                                "row": 14,
                                "column": 7
                              },
                              "end": {
                                "row": 14,
                                "column": 23
                              },
                              "text": "sizeInBytes == 1",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 14,
                                    "column": 7
                                  },
                                  "end": {
                                    "row": 14,
                                    "column": 18
                                  },
                                  "text": "sizeInBytes"
                                },
                                {
                                  "type": "==",
                                  "start": {
                                    "row": 14,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 14,
                                    "column": 21
                                  },
                                  "text": "=="
                                },
                                {
                                  "type": "decimal_integer_literal",
                                  "start": {
                                    "row": 14,
                                    "column": 22
                                  },
                                  "end": {
                                    "row": 14,
                                    "column": 23
                                  },
                                  "text": "1"
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 14,
                                "column": 23
                              },
                              "end": {
                                "row": 14,
                                "column": 24
                              },
                              "text": ")"
                            }
                          ]
                        },
                        {
                          "type": "block",
                          "start": {
                            "row": 14,
                            "column": 25
                          },
                          "end": {
                            "row": 16,
                            "column": 4
                          },
                          "text": "{\n\t\t\t\treturn null;\n\t\t\t}",
                          "children": [
                            {
                              "type": "{",
                              "start": {
                                "row": 14,
                                "column": 25
                              },
                              "end": {
                                "row": 14,
                                "column": 26
                              },
                              "text": "{"
                            },
                            {
                              "type": "return_statement",
                              "start": {
                                "row": 15,
                                "column": 4
                              },
                              "end": {
                                "row": 15,
                                "column": 16
                              },
                              "text": "return null;",
                              "children": [
                                {
                                  "type": "return",
                                  "start": {
                                    "row": 15,
                                    "column": 4
                                  },
                                  "end": {
                                    "row": 15,
                                    "column": 10
                                  },
                                  "text": "return"
                                },
                                {
                                  "type": "null_literal",
                                  "start": {
                                    "row": 15,
                                    "column": 11
                                  },
                                  "end": {
                                    "row": 15,
                                    "column": 15
                                  },
                                  "text": "null"
                                },
                                {
                                  "type": ";",
                                  "start": {
                                    "row": 15,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 15,
                                    "column": 16
                                  },
                                  "text": ";"
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start": {
                                "row": 16,
                                "column": 3
                              },
                              "end": {
                                "row": 16,
                                "column": 4
                              },
                              "text": "}"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start": {
                        "row": 17,
                        "column": 2
                      },
                      "end": {
                        "row": 17,
                        "column": 3
                      },
                      "text": "}"
                    }
                  ]
                }
              ]
            },
            {
              "type": "local_variable_declaration",
              "start": {
                "row": 19,
                "column": 2
              },
              "end": {
                "row": 19,
                "column": 18
              },
              "text": "long result = 0;",
              "children": [
                {
                  "type": "integral_type",
                  "start": {
                    "row": 19,
                    "column": 2
                  },
                  "end": {
                    "row": 19,
                    "column": 6
                  },
                  "text": "long",
                  "children": [
                    {
                      "type": "long",
                      "start": {
                        "row": 19,
                        "column": 2
                      },
                      "end": {
                        "row": 19,
                        "column": 6
                      },
                      "text": "long"
                    }
                  ]
                },
                {
                  "type": "variable_declarator",
                  "start": {
                    "row": 19,
                    "column": 7
                  },
                  "end": {
                    "row": 19,
                    "column": 17
                  },
                  "text": "result = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 19,
                        "column": 7
                      },
                      "end": {
                        "row": 19,
                        "column": 13
                      },
                      "text": "result"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 19,
                        "column": 14
                      },
                      "end": {
                        "row": 19,
                        "column": 15
                      },
                      "text": "="
                    },
                    {
                      "type": "decimal_integer_literal",
                      "start": {
                        "row": 19,
                        "column": 16
                      },
                      "end": {
                        "row": 19,
                        "column": 17
                      },
                      "text": "0"
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 19,
                    "column": 17
                  },
                  "end": {
                    "row": 19,
                    "column": 18
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "local_variable_declaration",
              "start": {
                "row": 20,
                "column": 2
              },
              "end": {
                "row": 20,
                "column": 29
              },
              "text": "final byte separator = '.';",
              "children": [
                {
                  "type": "modifiers",
                  "start": {
                    "row": 20,
                    "column": 2
                  },
                  "end": {
                    "row": 20,
                    "column": 7
                  },
                  "text": "final",
                  "children": [
                    {
                      "type": "final",
                      "start": {
                        "row": 20,
                        "column": 2
                      },
                      "end": {
                        "row": 20,
                        "column": 7
                      },
                      "text": "final"
                    }
                  ]
                },
                {
                  "type": "integral_type",
                  "start": {
                    "row": 20,
                    "column": 8
                  },
                  "end": {
                    "row": 20,
                    "column": 12
                  },
                  "text": "byte",
                  "children": [
                    {
                      "type": "byte",
                      "start": {
                        "row": 20,
                        "column": 8
                      },
                      "end": {
                        "row": 20,
                        "column": 12
                      },
                      "text": "byte"
                    }
                  ]
                },
                {
                  "type": "variable_declarator",
                  "start": {
                    "row": 20,
                    "column": 13
                  },
                  "end": {
                    "row": 20,
                    "column": 28
                  },
                  "text": "separator = '.'",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 20,
                        "column": 13
                      },
                      "end": {
                        "row": 20,
                        "column": 22
                      },
                      "text": "separator"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 20,
                        "column": 23
                      },
                      "end": {
                        "row": 20,
                        "column": 24
                      },
                      "text": "="
                    },
                    {
                      "type": "character_literal",
                      "start": {
                        "row": 20,
                        "column": 25
                      },
                      "end": {
                        "row": 20,
                        "column": 28
                      },
                      "text": "'.'"
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 20,
                    "column": 28
                  },
                  "end": {
                    "row": 20,
                    "column": 29
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "local_variable_declaration",
              "start": {
                "row": 21,
                "column": 2
              },
              "end": {
                "row": 21,
                "column": 23
              },
              "text": "final int radix = 10;",
              "children": [
                {
                  "type": "modifiers",
                  "start": {
                    "row": 21,
                    "column": 2
                  },
                  "end": {
                    "row": 21,
                    "column": 7
                  },
                  "text": "final",
                  "children": [
                    {
                      "type": "final",
                      "start": {
                        "row": 21,
                        "column": 2
                      },
                      "end": {
                        "row": 21,
                        "column": 7
                      },
                      "text": "final"
                    }
                  ]
                },
                {
                  "type": "integral_type",
                  "start": {
                    "row": 21,
                    "column": 8
                  },
                  "end": {
                    "row": 21,
                    "column": 11
                  },
                  "text": "int",
                  "children": [
                    {
                      "type": "int",
                      "start": {
                        "row": 21,
                        "column": 8
                      },
                      "end": {
                        "row": 21,
                        "column": 11
                      },
                      "text": "int"
                    }
                  ]
                },
                {
                  "type": "variable_declarator",
                  "start": {
                    "row": 21,
                    "column": 12
                  },
                  "end": {
                    "row": 21,
                    "column": 22
                  },
                  "text": "radix = 10",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 21,
                        "column": 12
                      },
                      "end": {
                        "row": 21,
                        "column": 17
                      },
                      "text": "radix"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 21,
                        "column": 18
                      },
                      "end": {
                        "row": 21,
                        "column": 19
                      },
                      "text": "="
                    },
                    {
                      "type": "decimal_integer_literal",
                      "start": {
                        "row": 21,
                        "column": 20
                      },
                      "end": {
                        "row": 21,
                        "column": 22
                      },
                      "text": "10"
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 21,
                    "column": 22
                  },
                  "end": {
                    "row": 21,
                    "column": 23
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "local_variable_declaration",
              "start": {
                "row": 22,
                "column": 2
              },
              "end": {
                "row": 22,
                "column": 48
              },
              "text": "final long stopValue = Long.MIN_VALUE / radix;",
              "children": [
                {
                  "type": "modifiers",
                  "start": {
                    "row": 22,
                    "column": 2
                  },
                  "end": {
                    "row": 22,
                    "column": 7
                  },
                  "text": "final",
                  "children": [
                    {
                      "type": "final",
                      "start": {
                        "row": 22,
                        "column": 2
                      },
                      "end": {
                        "row": 22,
                        "column": 7
                      },
                      "text": "final"
                    }
                  ]
                },
                {
                  "type": "integral_type",
                  "start": {
                    "row": 22,
                    "column": 8
                  },
                  "end": {
                    "row": 22,
                    "column": 12
                  },
                  "text": "long",
                  "children": [
                    {
                      "type": "long",
                      "start": {
                        "row": 22,
                        "column": 8
                      },
                      "end": {
                        "row": 22,
                        "column": 12
                      },
                      "text": "long"
                    }
                  ]
                },
                {
                  "type": "variable_declarator",
                  "start": {
                    "row": 22,
                    "column": 13
                  },
                  "end": {
                    "row": 22,
                    "column": 47
                  },
                  "text": "stopValue = Long.MIN_VALUE / radix",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 22,
                        "column": 13
                      },
                      "end": {
                        "row": 22,
                        "column": 22
                      },
                      "text": "stopValue"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 22,
                        "column": 23
                      },
                      "end": {
                        "row": 22,
                        "column": 24
                      },
                      "text": "="
                    },
                    {
                      "type": "binary_expression",
                      "start": {
                        "row": 22,
                        "column": 25
                      },
                      "end": {
                        "row": 22,
                        "column": 47
                      },
                      "text": "Long.MIN_VALUE / radix",
                      "children": [
                        {
                          "type": "field_access",
                          "start": {
                            "row": 22,
                            "column": 25
                          },
                          "end": {
                            "row": 22,
                            "column": 39
                          },
                          "text": "Long.MIN_VALUE",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 22,
                                "column": 25
                              },
                              "end": {
                                "row": 22,
                                "column": 29
                              },
                              "text": "Long"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 22,
                                "column": 29
                              },
                              "end": {
                                "row": 22,
                                "column": 30
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 22,
                                "column": 30
                              },
                              "end": {
                                "row": 22,
                                "column": 39
                              },
                              "text": "MIN_VALUE"
                            }
                          ]
                        },
                        {
                          "type": "/",
                          "start": {
                            "row": 22,
                            "column": 40
                          },
                          "end": {
                            "row": 22,
                            "column": 41
                          },
                          "text": "/"
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 22,
                            "column": 42
                          },
                          "end": {
                            "row": 22,
                            "column": 47
                          },
                          "text": "radix"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 22,
                    "column": 47
                  },
                  "end": {
                    "row": 22,
                    "column": 48
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "while_statement",
              "start": {
                "row": 23,
                "column": 2
              },
              "end": {
                "row": 56,
                "column": 3
              },
              "text": "while (totalOffset < this.sizeInBytes) {\n\t\t\tb = segmentAndOffset.value();\n\t\t\ttotalOffset++;\n\t\t\tsegmentAndOffset.nextByte(size);\n\t\t\tif (b == separator) {\n\t\t\t\t// We allow decimals and will return a truncated integral in that case.\n\t\t\t\t// Therefore we won't throw an exception here (checking the fractional\n\t\t\t\t// part happens below.)\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tint digit;\n\t\t\tif (b >= '0' && b <= '9') {\n\t\t\t\tdigit = b - '0';\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// We are going to process the new digit and accumulate the result. However, before\n\t\t\t// doing this, if the result is already smaller than the\n\t\t\t// stopValue(Long.MIN_VALUE / radix), then result * 10 will definitely be smaller\n\t\t\t// than minValue, and we can stop.\n\t\t\tif (result < stopValue) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tresult = result * radix - digit;\n\t\t\t// Since the previous result is less than or equal to\n\t\t\t// stopValue(Long.MIN_VALUE / radix), we can just use `result > 0` to check overflow.\n\t\t\t// If result overflows, we should stop.\n\t\t\tif (result > 0) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}",
              "children": [
                {
                  "type": "while",
                  "start": {
                    "row": 23,
                    "column": 2
                  },
                  "end": {
                    "row": 23,
                    "column": 7
                  },
                  "text": "while"
                },
                {
                  "type": "condition",
                  "start": {
                    "row": 23,
                    "column": 8
                  },
                  "end": {
                    "row": 23,
                    "column": 40
                  },
                  "text": "(totalOffset < this.sizeInBytes)",
                  "children": [
                    {
                      "type": "(",
                      "start": {
                        "row": 23,
                        "column": 8
                      },
                      "end": {
                        "row": 23,
                        "column": 9
                      },
                      "text": "("
                    },
                    {
                      "type": "binary_expression",
                      "start": {
                        "row": 23,
                        "column": 9
                      },
                      "end": {
                        "row": 23,
                        "column": 39
                      },
                      "text": "totalOffset < this.sizeInBytes",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 23,
                            "column": 9
                          },
                          "end": {
                            "row": 23,
                            "column": 20
                          },
                          "text": "totalOffset"
                        },
                        {
                          "type": "<",
                          "start": {
                            "row": 23,
                            "column": 21
                          },
                          "end": {
                            "row": 23,
                            "column": 22
                          },
                          "text": "<"
                        },
                        {
                          "type": "field_access",
                          "start": {
                            "row": 23,
                            "column": 23
                          },
                          "end": {
                            "row": 23,
                            "column": 39
                          },
                          "text": "this.sizeInBytes",
                          "children": [
                            {
                              "type": "this",
                              "start": {
                                "row": 23,
                                "column": 23
                              },
                              "end": {
                                "row": 23,
                                "column": 27
                              },
                              "text": "this"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 23,
                                "column": 27
                              },
                              "end": {
                                "row": 23,
                                "column": 28
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 23,
                                "column": 28
                              },
                              "end": {
                                "row": 23,
                                "column": 39
                              },
                              "text": "sizeInBytes"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start": {
                        "row": 23,
                        "column": 39
                      },
                      "end": {
                        "row": 23,
                        "column": 40
                      },
                      "text": ")"
                    }
                  ]
                },
                {
                  "type": "block",
                  "start": {
                    "row": 23,
                    "column": 41
                  },
                  "end": {
                    "row": 56,
                    "column": 3
                  },
                  "text": "{\n\t\t\tb = segmentAndOffset.value();\n\t\t\ttotalOffset++;\n\t\t\tsegmentAndOffset.nextByte(size);\n\t\t\tif (b == separator) {\n\t\t\t\t// We allow decimals and will return a truncated integral in that case.\n\t\t\t\t// Therefore we won't throw an exception here (checking the fractional\n\t\t\t\t// part happens below.)\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tint digit;\n\t\t\tif (b >= '0' && b <= '9') {\n\t\t\t\tdigit = b - '0';\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// We are going to process the new digit and accumulate the result. However, before\n\t\t\t// doing this, if the result is already smaller than the\n\t\t\t// stopValue(Long.MIN_VALUE / radix), then result * 10 will definitely be smaller\n\t\t\t// than minValue, and we can stop.\n\t\t\tif (result < stopValue) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tresult = result * radix - digit;\n\t\t\t// Since the previous result is less than or equal to\n\t\t\t// stopValue(Long.MIN_VALUE / radix), we can just use `result > 0` to check overflow.\n\t\t\t// If result overflows, we should stop.\n\t\t\tif (result > 0) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}",
                  "children": [
                    {
                      "type": "{",
                      "start": {
                        "row": 23,
                        "column": 41
                      },
                      "end": {
                        "row": 23,
                        "column": 42
                      },
                      "text": "{"
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 24,
                        "column": 3
                      },
                      "end": {
                        "row": 24,
                        "column": 32
                      },
                      "text": "b = segmentAndOffset.value();",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start": {
                            "row": 24,
                            "column": 3
                          },
                          "end": {
                            "row": 24,
                            "column": 31
                          },
                          "text": "b = segmentAndOffset.value()",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 24,
                                "column": 3
                              },
                              "end": {
                                "row": 24,
                                "column": 4
                              },
                              "text": "b"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 24,
                                "column": 5
                              },
                              "end": {
                                "row": 24,
                                "column": 6
                              },
                              "text": "="
                            },
                            {
                              "type": "method_invocation",
                              "start": {
                                "row": 24,
                                "column": 7
                              },
                              "end": {
                                "row": 24,
                                "column": 31
                              },
                              "text": "segmentAndOffset.value()",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 24,
                                    "column": 7
                                  },
                                  "end": {
                                    "row": 24,
                                    "column": 23
                                  },
                                  "text": "segmentAndOffset"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 24,
                                    "column": 23
                                  },
                                  "end": {
                                    "row": 24,
                                    "column": 24
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 24,
                                    "column": 24
                                  },
                                  "end": {
                                    "row": 24,
                                    "column": 29
                                  },
                                  "text": "value"
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 24,
                                    "column": 29
                                  },
                                  "end": {
                                    "row": 24,
                                    "column": 31
                                  },
                                  "text": "()",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 24,
                                        "column": 29
                                      },
                                      "end": {
                                        "row": 24,
                                        "column": 30
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 24,
                                        "column": 30
                                      },
                                      "end": {
                                        "row": 24,
                                        "column": 31
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start": {
                            "row": 24,
                            "column": 31
                          },
                          "end": {
                            "row": 24,
                            "column": 32
                          },
                          "text": ";"
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 25,
                        "column": 3
                      },
                      "end": {
                        "row": 25,
                        "column": 17
                      },
                      "text": "totalOffset++;",
                      "children": [
                        {
                          "type": "update_expression",
                          "start": {
                            "row": 25,
                            "column": 3
                          },
                          "end": {
                            "row": 25,
                            "column": 16
                          },
                          "text": "totalOffset++",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 25,
                                "column": 3
                              },
                              "end": {
                                "row": 25,
                                "column": 14
                              },
                              "text": "totalOffset"
                            },
                            {
                              "type": "++",
                              "start": {
                                "row": 25,
                                "column": 14
                              },
                              "end": {
                                "row": 25,
                                "column": 16
                              },
                              "text": "++"
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start": {
                            "row": 25,
                            "column": 16
                          },
                          "end": {
                            "row": 25,
                            "column": 17
                          },
                          "text": ";"
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 26,
                        "column": 3
                      },
                      "end": {
                        "row": 26,
                        "column": 35
                      },
                      "text": "segmentAndOffset.nextByte(size);",
                      "children": [
                        {
                          "type": "method_invocation",
                          "start": {
                            "row": 26,
                            "column": 3
                          },
                          "end": {
                            "row": 26,
                            "column": 34
                          },
                          "text": "segmentAndOffset.nextByte(size)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 26,
                                "column": 3
                              },
                              "end": {
                                "row": 26,
                                "column": 19
                              },
                              "text": "segmentAndOffset"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 26,
                                "column": 19
                              },
                              "end": {
                                "row": 26,
                                "column": 20
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 26,
                                "column": 20
                              },
                              "end": {
                                "row": 26,
                                "column": 28
                              },
                              "text": "nextByte"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 26,
                                "column": 28
                              },
                              "end": {
                                "row": 26,
                                "column": 34
                              },
                              "text": "(size)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 26,
                                    "column": 28
                                  },
                                  "end": {
                                    "row": 26,
                                    "column": 29
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 26,
                                    "column": 29
                                  },
                                  "end": {
                                    "row": 26,
                                    "column": 33
                                  },
                                  "text": "size"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 26,
                                    "column": 33
                                  },
                                  "end": {
                                    "row": 26,
                                    "column": 34
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start": {
                            "row": 26,
                            "column": 34
                          },
                          "end": {
                            "row": 26,
                            "column": 35
                          },
                          "text": ";"
                        }
                      ]
                    },
                    {
                      "type": "if_statement",
                      "start": {
                        "row": 27,
                        "column": 3
                      },
                      "end": {
                        "row": 32,
                        "column": 4
                      },
                      "text": "if (b == separator) {\n\t\t\t\t// We allow decimals and will return a truncated integral in that case.\n\t\t\t\t// Therefore we won't throw an exception here (checking the fractional\n\t\t\t\t// part happens below.)\n\t\t\t\tbreak;\n\t\t\t}",
                      "children": [
                        {
                          "type": "if",
                          "start": {
                            "row": 27,
                            "column": 3
                          },
                          "end": {
                            "row": 27,
                            "column": 5
                          },
                          "text": "if"
                        },
                        {
                          "type": "condition",
                          "start": {
                            "row": 27,
                            "column": 6
                          },
                          "end": {
                            "row": 27,
                            "column": 22
                          },
                          "text": "(b == separator)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 27,
                                "column": 6
                              },
                              "end": {
                                "row": 27,
                                "column": 7
                              },
                              "text": "("
                            },
                            {
                              "type": "binary_expression",
                              "start": {
                                "row": 27,
                                "column": 7
                              },
                              "end": {
                                "row": 27,
                                "column": 21
                              },
                              "text": "b == separator",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 27,
                                    "column": 7
                                  },
                                  "end": {
                                    "row": 27,
                                    "column": 8
                                  },
                                  "text": "b"
                                },
                                {
                                  "type": "==",
                                  "start": {
                                    "row": 27,
                                    "column": 9
                                  },
                                  "end": {
                                    "row": 27,
                                    "column": 11
                                  },
                                  "text": "=="
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 27,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 27,
                                    "column": 21
                                  },
                                  "text": "separator"
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 27,
                                "column": 21
                              },
                              "end": {
                                "row": 27,
                                "column": 22
                              },
                              "text": ")"
                            }
                          ]
                        },
                        {
                          "type": "block",
                          "start": {
                            "row": 27,
                            "column": 23
                          },
                          "end": {
                            "row": 32,
                            "column": 4
                          },
                          "text": "{\n\t\t\t\t// We allow decimals and will return a truncated integral in that case.\n\t\t\t\t// Therefore we won't throw an exception here (checking the fractional\n\t\t\t\t// part happens below.)\n\t\t\t\tbreak;\n\t\t\t}",
                          "children": [
                            {
                              "type": "{",
                              "start": {
                                "row": 27,
                                "column": 23
                              },
                              "end": {
                                "row": 27,
                                "column": 24
                              },
                              "text": "{"
                            },
                            {
                              "type": "line_comment",
                              "start": {
                                "row": 28,
                                "column": 4
                              },
                              "end": {
                                "row": 28,
                                "column": 75
                              },
                              "text": "// We allow decimals and will return a truncated integral in that case."
                            },
                            {
                              "type": "line_comment",
                              "start": {
                                "row": 29,
                                "column": 4
                              },
                              "end": {
                                "row": 29,
                                "column": 74
                              },
                              "text": "// Therefore we won't throw an exception here (checking the fractional"
                            },
                            {
                              "type": "line_comment",
                              "start": {
                                "row": 30,
                                "column": 4
                              },
                              "end": {
                                "row": 30,
                                "column": 27
                              },
                              "text": "// part happens below.)"
                            },
                            {
                              "type": "break_statement",
                              "start": {
                                "row": 31,
                                "column": 4
                              },
                              "end": {
                                "row": 31,
                                "column": 10
                              },
                              "text": "break;",
                              "children": [
                                {
                                  "type": "break",
                                  "start": {
                                    "row": 31,
                                    "column": 4
                                  },
                                  "end": {
                                    "row": 31,
                                    "column": 9
                                  },
                                  "text": "break"
                                },
                                {
                                  "type": ";",
                                  "start": {
                                    "row": 31,
                                    "column": 9
                                  },
                                  "end": {
                                    "row": 31,
                                    "column": 10
                                  },
                                  "text": ";"
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start": {
                                "row": 32,
                                "column": 3
                              },
                              "end": {
                                "row": 32,
                                "column": 4
                              },
                              "text": "}"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "local_variable_declaration",
                      "start": {
                        "row": 34,
                        "column": 3
                      },
                      "end": {
                        "row": 34,
                        "column": 13
                      },
                      "text": "int digit;",
                      "children": [
                        {
                          "type": "integral_type",
                          "start": {
                            "row": 34,
                            "column": 3
                          },
                          "end": {
                            "row": 34,
                            "column": 6
                          },
                          "text": "int",
                          "children": [
                            {
                              "type": "int",
                              "start": {
                                "row": 34,
                                "column": 3
                              },
                              "end": {
                                "row": 34,
                                "column": 6
                              },
                              "text": "int"
                            }
                          ]
                        },
                        {
                          "type": "variable_declarator",
                          "start": {
                            "row": 34,
                            "column": 7
                          },
                          "end": {
                            "row": 34,
                            "column": 12
                          },
                          "text": "digit",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 34,
                                "column": 7
                              },
                              "end": {
                                "row": 34,
                                "column": 12
                              },
                              "text": "digit"
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start": {
                            "row": 34,
                            "column": 12
                          },
                          "end": {
                            "row": 34,
                            "column": 13
                          },
                          "text": ";"
                        }
                      ]
                    },
                    {
                      "type": "if_statement",
                      "start": {
                        "row": 35,
                        "column": 3
                      },
                      "end": {
                        "row": 39,
                        "column": 4
                      },
                      "text": "if (b >= '0' && b <= '9') {\n\t\t\t\tdigit = b - '0';\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}",
                      "children": [
                        {
                          "type": "if",
                          "start": {
                            "row": 35,
                            "column": 3
                          },
                          "end": {
                            "row": 35,
                            "column": 5
                          },
                          "text": "if"
                        },
                        {
                          "type": "condition",
                          "start": {
                            "row": 35,
                            "column": 6
                          },
                          "end": {
                            "row": 35,
                            "column": 28
                          },
                          "text": "(b >= '0' && b <= '9')",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 35,
                                "column": 6
                              },
                              "end": {
                                "row": 35,
                                "column": 7
                              },
                              "text": "("
                            },
                            {
                              "type": "binary_expression",
                              "start": {
                                "row": 35,
                                "column": 7
                              },
                              "end": {
                                "row": 35,
                                "column": 27
                              },
                              "text": "b >= '0' && b <= '9'",
                              "children": [
                                {
                                  "type": "binary_expression",
                                  "start": {
                                    "row": 35,
                                    "column": 7
                                  },
                                  "end": {
                                    "row": 35,
                                    "column": 15
                                  },
                                  "text": "b >= '0'",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 35,
                                        "column": 7
                                      },
                                      "end": {
                                        "row": 35,
                                        "column": 8
                                      },
                                      "text": "b"
                                    },
                                    {
                                      "type": ">=",
                                      "start": {
                                        "row": 35,
                                        "column": 9
                                      },
                                      "end": {
                                        "row": 35,
                                        "column": 11
                                      },
                                      "text": ">="
                                    },
                                    {
                                      "type": "character_literal",
                                      "start": {
                                        "row": 35,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 35,
                                        "column": 15
                                      },
                                      "text": "'0'"
                                    }
                                  ]
                                },
                                {
                                  "type": "&&",
                                  "start": {
                                    "row": 35,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 35,
                                    "column": 18
                                  },
                                  "text": "&&"
                                },
                                {
                                  "type": "binary_expression",
                                  "start": {
                                    "row": 35,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 35,
                                    "column": 27
                                  },
                                  "text": "b <= '9'",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 35,
                                        "column": 19
                                      },
                                      "end": {
                                        "row": 35,
                                        "column": 20
                                      },
                                      "text": "b"
                                    },
                                    {
                                      "type": "<=",
                                      "start": {
                                        "row": 35,
                                        "column": 21
                                      },
                                      "end": {
                                        "row": 35,
                                        "column": 23
                                      },
                                      "text": "<="
                                    },
                                    {
                                      "type": "character_literal",
                                      "start": {
                                        "row": 35,
                                        "column": 24
                                      },
                                      "end": {
                                        "row": 35,
                                        "column": 27
                                      },
                                      "text": "'9'"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 35,
                                "column": 27
                              },
                              "end": {
                                "row": 35,
                                "column": 28
                              },
                              "text": ")"
                            }
                          ]
                        },
                        {
                          "type": "block",
                          "start": {
                            "row": 35,
                            "column": 29
                          },
                          "end": {
                            "row": 37,
                            "column": 4
                          },
                          "text": "{\n\t\t\t\tdigit = b - '0';\n\t\t\t}",
                          "children": [
                            {
                              "type": "{",
                              "start": {
                                "row": 35,
                                "column": 29
                              },
                              "end": {
                                "row": 35,
                                "column": 30
                              },
                              "text": "{"
                            },
                            {
                              "type": "expression_statement",
                              "start": {
                                "row": 36,
                                "column": 4
                              },
                              "end": {
                                "row": 36,
                                "column": 20
                              },
                              "text": "digit = b - '0';",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start": {
                                    "row": 36,
                                    "column": 4
                                  },
                                  "end": {
                                    "row": 36,
                                    "column": 19
                                  },
                                  "text": "digit = b - '0'",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 36,
                                        "column": 4
                                      },
                                      "end": {
                                        "row": 36,
                                        "column": 9
                                      },
                                      "text": "digit"
                                    },
                                    {
                                      "type": "=",
                                      "start": {
                                        "row": 36,
                                        "column": 10
                                      },
                                      "end": {
                                        "row": 36,
                                        "column": 11
                                      },
                                      "text": "="
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start": {
                                        "row": 36,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 36,
                                        "column": 19
                                      },
                                      "text": "b - '0'",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 36,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 36,
                                            "column": 13
                                          },
                                          "text": "b"
                                        },
                                        {
                                          "type": "-",
                                          "start": {
                                            "row": 36,
                                            "column": 14
                                          },
                                          "end": {
                                            "row": 36,
                                            "column": 15
                                          },
                                          "text": "-"
                                        },
                                        {
                                          "type": "character_literal",
                                          "start": {
                                            "row": 36,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 36,
                                            "column": 19
                                          },
                                          "text": "'0'"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start": {
                                    "row": 36,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 36,
                                    "column": 20
                                  },
                                  "text": ";"
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start": {
                                "row": 37,
                                "column": 3
                              },
                              "end": {
                                "row": 37,
                                "column": 4
                              },
                              "text": "}"
                            }
                          ]
                        },
                        {
                          "type": "else",
                          "start": {
                            "row": 37,
                            "column": 5
                          },
                          "end": {
                            "row": 37,
                            "column": 9
                          },
                          "text": "else"
                        },
                        {
                          "type": "block",
                          "start": {
                            "row": 37,
                            "column": 10
                          },
                          "end": {
                            "row": 39,
                            "column": 4
                          },
                          "text": "{\n\t\t\t\treturn null;\n\t\t\t}",
                          "children": [
                            {
                              "type": "{",
                              "start": {
                                "row": 37,
                                "column": 10
                              },
                              "end": {
                                "row": 37,
                                "column": 11
                              },
                              "text": "{"
                            },
                            {
                              "type": "return_statement",
                              "start": {
                                "row": 38,
                                "column": 4
                              },
                              "end": {
                                "row": 38,
                                "column": 16
                              },
                              "text": "return null;",
                              "children": [
                                {
                                  "type": "return",
                                  "start": {
                                    "row": 38,
                                    "column": 4
                                  },
                                  "end": {
                                    "row": 38,
                                    "column": 10
                                  },
                                  "text": "return"
                                },
                                {
                                  "type": "null_literal",
                                  "start": {
                                    "row": 38,
                                    "column": 11
                                  },
                                  "end": {
                                    "row": 38,
                                    "column": 15
                                  },
                                  "text": "null"
                                },
                                {
                                  "type": ";",
                                  "start": {
                                    "row": 38,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 38,
                                    "column": 16
                                  },
                                  "text": ";"
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start": {
                                "row": 39,
                                "column": 3
                              },
                              "end": {
                                "row": 39,
                                "column": 4
                              },
                              "text": "}"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "line_comment",
                      "start": {
                        "row": 41,
                        "column": 3
                      },
                      "end": {
                        "row": 41,
                        "column": 86
                      },
                      "text": "// We are going to process the new digit and accumulate the result. However, before"
                    },
                    {
                      "type": "line_comment",
                      "start": {
                        "row": 42,
                        "column": 3
                      },
                      "end": {
                        "row": 42,
                        "column": 59
                      },
                      "text": "// doing this, if the result is already smaller than the"
                    },
                    {
                      "type": "line_comment",
                      "start": {
                        "row": 43,
                        "column": 3
                      },
                      "end": {
                        "row": 43,
                        "column": 84
                      },
                      "text": "// stopValue(Long.MIN_VALUE / radix), then result * 10 will definitely be smaller"
                    },
                    {
                      "type": "line_comment",
                      "start": {
                        "row": 44,
                        "column": 3
                      },
                      "end": {
                        "row": 44,
                        "column": 37
                      },
                      "text": "// than minValue, and we can stop."
                    },
                    {
                      "type": "if_statement",
                      "start": {
                        "row": 45,
                        "column": 3
                      },
                      "end": {
                        "row": 47,
                        "column": 4
                      },
                      "text": "if (result < stopValue) {\n\t\t\t\treturn null;\n\t\t\t}",
                      "children": [
                        {
                          "type": "if",
                          "start": {
                            "row": 45,
                            "column": 3
                          },
                          "end": {
                            "row": 45,
                            "column": 5
                          },
                          "text": "if"
                        },
                        {
                          "type": "condition",
                          "start": {
                            "row": 45,
                            "column": 6
                          },
                          "end": {
                            "row": 45,
                            "column": 26
                          },
                          "text": "(result < stopValue)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 45,
                                "column": 6
                              },
                              "end": {
                                "row": 45,
                                "column": 7
                              },
                              "text": "("
                            },
                            {
                              "type": "binary_expression",
                              "start": {
                                "row": 45,
                                "column": 7
                              },
                              "end": {
                                "row": 45,
                                "column": 25
                              },
                              "text": "result < stopValue",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 45,
                                    "column": 7
                                  },
                                  "end": {
                                    "row": 45,
                                    "column": 13
                                  },
                                  "text": "result"
                                },
                                {
                                  "type": "<",
                                  "start": {
                                    "row": 45,
                                    "column": 14
                                  },
                                  "end": {
                                    "row": 45,
                                    "column": 15
                                  },
                                  "text": "<"
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 45,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 45,
                                    "column": 25
                                  },
                                  "text": "stopValue"
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 45,
                                "column": 25
                              },
                              "end": {
                                "row": 45,
                                "column": 26
                              },
                              "text": ")"
                            }
                          ]
                        },
                        {
                          "type": "block",
                          "start": {
                            "row": 45,
                            "column": 27
                          },
                          "end": {
                            "row": 47,
                            "column": 4
                          },
                          "text": "{\n\t\t\t\treturn null;\n\t\t\t}",
                          "children": [
                            {
                              "type": "{",
                              "start": {
                                "row": 45,
                                "column": 27
                              },
                              "end": {
                                "row": 45,
                                "column": 28
                              },
                              "text": "{"
                            },
                            {
                              "type": "return_statement",
                              "start": {
                                "row": 46,
                                "column": 4
                              },
                              "end": {
                                "row": 46,
                                "column": 16
                              },
                              "text": "return null;",
                              "children": [
                                {
                                  "type": "return",
                                  "start": {
                                    "row": 46,
                                    "column": 4
                                  },
                                  "end": {
                                    "row": 46,
                                    "column": 10
                                  },
                                  "text": "return"
                                },
                                {
                                  "type": "null_literal",
                                  "start": {
                                    "row": 46,
                                    "column": 11
                                  },
                                  "end": {
                                    "row": 46,
                                    "column": 15
                                  },
                                  "text": "null"
                                },
                                {
                                  "type": ";",
                                  "start": {
                                    "row": 46,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 46,
                                    "column": 16
                                  },
                                  "text": ";"
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start": {
                                "row": 47,
                                "column": 3
                              },
                              "end": {
                                "row": 47,
                                "column": 4
                              },
                              "text": "}"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 49,
                        "column": 3
                      },
                      "end": {
                        "row": 49,
                        "column": 35
                      },
                      "text": "result = result * radix - digit;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start": {
                            "row": 49,
                            "column": 3
                          },
                          "end": {
                            "row": 49,
                            "column": 34
                          },
                          "text": "result = result * radix - digit",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 49,
                                "column": 3
                              },
                              "end": {
                                "row": 49,
                                "column": 9
                              },
                              "text": "result"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 49,
                                "column": 10
                              },
                              "end": {
                                "row": 49,
                                "column": 11
                              },
                              "text": "="
                            },
                            {
                              "type": "binary_expression",
                              "start": {
                                "row": 49,
                                "column": 12
                              },
                              "end": {
                                "row": 49,
                                "column": 34
                              },
                              "text": "result * radix - digit",
                              "children": [
                                {
                                  "type": "binary_expression",
                                  "start": {
                                    "row": 49,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 49,
                                    "column": 26
                                  },
                                  "text": "result * radix",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 49,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 49,
                                        "column": 18
                                      },
                                      "text": "result"
                                    },
                                    {
                                      "type": "*",
                                      "start": {
                                        "row": 49,
                                        "column": 19
                                      },
                                      "end": {
                                        "row": 49,
                                        "column": 20
                                      },
                                      "text": "*"
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 49,
                                        "column": 21
                                      },
                                      "end": {
                                        "row": 49,
                                        "column": 26
                                      },
                                      "text": "radix"
                                    }
                                  ]
                                },
                                {
                                  "type": "-",
                                  "start": {
                                    "row": 49,
                                    "column": 27
                                  },
                                  "end": {
                                    "row": 49,
                                    "column": 28
                                  },
                                  "text": "-"
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 49,
                                    "column": 29
                                  },
                                  "end": {
                                    "row": 49,
                                    "column": 34
                                  },
                                  "text": "digit"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start": {
                            "row": 49,
                            "column": 34
                          },
                          "end": {
                            "row": 49,
                            "column": 35
                          },
                          "text": ";"
                        }
                      ]
                    },
                    {
                      "type": "line_comment",
                      "start": {
                        "row": 50,
                        "column": 3
                      },
                      "end": {
                        "row": 50,
                        "column": 56
                      },
                      "text": "// Since the previous result is less than or equal to"
                    },
                    {
                      "type": "line_comment",
                      "start": {
                        "row": 51,
                        "column": 3
                      },
                      "end": {
                        "row": 51,
                        "column": 88
                      },
                      "text": "// stopValue(Long.MIN_VALUE / radix), we can just use `result > 0` to check overflow."
                    },
                    {
                      "type": "line_comment",
                      "start": {
                        "row": 52,
                        "column": 3
                      },
                      "end": {
                        "row": 52,
                        "column": 42
                      },
                      "text": "// If result overflows, we should stop."
                    },
                    {
                      "type": "if_statement",
                      "start": {
                        "row": 53,
                        "column": 3
                      },
                      "end": {
                        "row": 55,
                        "column": 4
                      },
                      "text": "if (result > 0) {\n\t\t\t\treturn null;\n\t\t\t}",
                      "children": [
                        {
                          "type": "if",
                          "start": {
                            "row": 53,
                            "column": 3
                          },
                          "end": {
                            "row": 53,
                            "column": 5
                          },
                          "text": "if"
                        },
                        {
                          "type": "condition",
                          "start": {
                            "row": 53,
                            "column": 6
                          },
                          "end": {
                            "row": 53,
                            "column": 18
                          },
                          "text": "(result > 0)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 53,
                                "column": 6
                              },
                              "end": {
                                "row": 53,
                                "column": 7
                              },
                              "text": "("
                            },
                            {
                              "type": "binary_expression",
                              "start": {
                                "row": 53,
                                "column": 7
                              },
                              "end": {
                                "row": 53,
                                "column": 17
                              },
                              "text": "result > 0",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 53,
                                    "column": 7
                                  },
                                  "end": {
                                    "row": 53,
                                    "column": 13
                                  },
                                  "text": "result"
                                },
                                {
                                  "type": ">",
                                  "start": {
                                    "row": 53,
                                    "column": 14
                                  },
                                  "end": {
                                    "row": 53,
                                    "column": 15
                                  },
                                  "text": ">"
                                },
                                {
                                  "type": "decimal_integer_literal",
                                  "start": {
                                    "row": 53,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 53,
                                    "column": 17
                                  },
                                  "text": "0"
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 53,
                                "column": 17
                              },
                              "end": {
                                "row": 53,
                                "column": 18
                              },
                              "text": ")"
                            }
                          ]
                        },
                        {
                          "type": "block",
                          "start": {
                            "row": 53,
                            "column": 19
                          },
                          "end": {
                            "row": 55,
                            "column": 4
                          },
                          "text": "{\n\t\t\t\treturn null;\n\t\t\t}",
                          "children": [
                            {
                              "type": "{",
                              "start": {
                                "row": 53,
                                "column": 19
                              },
                              "end": {
                                "row": 53,
                                "column": 20
                              },
                              "text": "{"
                            },
                            {
                              "type": "return_statement",
                              "start": {
                                "row": 54,
                                "column": 4
                              },
                              "end": {
                                "row": 54,
                                "column": 16
                              },
                              "text": "return null;",
                              "children": [
                                {
                                  "type": "return",
                                  "start": {
                                    "row": 54,
                                    "column": 4
                                  },
                                  "end": {
                                    "row": 54,
                                    "column": 10
                                  },
                                  "text": "return"
                                },
                                {
                                  "type": "null_literal",
                                  "start": {
                                    "row": 54,
                                    "column": 11
                                  },
                                  "end": {
                                    "row": 54,
                                    "column": 15
                                  },
                                  "text": "null"
                                },
                                {
                                  "type": ";",
                                  "start": {
                                    "row": 54,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 54,
                                    "column": 16
                                  },
                                  "text": ";"
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start": {
                                "row": 55,
                                "column": 3
                              },
                              "end": {
                                "row": 55,
                                "column": 4
                              },
                              "text": "}"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start": {
                        "row": 56,
                        "column": 2
                      },
                      "end": {
                        "row": 56,
                        "column": 3
                      },
                      "text": "}"
                    }
                  ]
                }
              ]
            },
            {
              "type": "line_comment",
              "start": {
                "row": 58,
                "column": 2
              },
              "end": {
                "row": 58,
                "column": 80
              },
              "text": "// This is the case when we've encountered a decimal separator. The fractional"
            },
            {
              "type": "line_comment",
              "start": {
                "row": 59,
                "column": 2
              },
              "end": {
                "row": 59,
                "column": 81
              },
              "text": "// part will not change the number, but we will verify that the fractional part"
            },
            {
              "type": "line_comment",
              "start": {
                "row": 60,
                "column": 2
              },
              "end": {
                "row": 60,
                "column": 20
              },
              "text": "// is well formed."
            },
            {
              "type": "while_statement",
              "start": {
                "row": 61,
                "column": 2
              },
              "end": {
                "row": 68,
                "column": 3
              },
              "text": "while (totalOffset < sizeInBytes) {\n\t\t\tbyte currentByte = segmentAndOffset.value();\n\t\t\tif (currentByte < '0' || currentByte > '9') {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\ttotalOffset++;\n\t\t\tsegmentAndOffset.nextByte(size);\n\t\t}",
              "children": [
                {
                  "type": "while",
                  "start": {
                    "row": 61,
                    "column": 2
                  },
                  "end": {
                    "row": 61,
                    "column": 7
                  },
                  "text": "while"
                },
                {
                  "type": "condition",
                  "start": {
                    "row": 61,
                    "column": 8
                  },
                  "end": {
                    "row": 61,
                    "column": 35
                  },
                  "text": "(totalOffset < sizeInBytes)",
                  "children": [
                    {
                      "type": "(",
                      "start": {
                        "row": 61,
                        "column": 8
                      },
                      "end": {
                        "row": 61,
                        "column": 9
                      },
                      "text": "("
                    },
                    {
                      "type": "binary_expression",
                      "start": {
                        "row": 61,
                        "column": 9
                      },
                      "end": {
                        "row": 61,
                        "column": 34
                      },
                      "text": "totalOffset < sizeInBytes",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 61,
                            "column": 9
                          },
                          "end": {
                            "row": 61,
                            "column": 20
                          },
                          "text": "totalOffset"
                        },
                        {
                          "type": "<",
                          "start": {
                            "row": 61,
                            "column": 21
                          },
                          "end": {
                            "row": 61,
                            "column": 22
                          },
                          "text": "<"
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 61,
                            "column": 23
                          },
                          "end": {
                            "row": 61,
                            "column": 34
                          },
                          "text": "sizeInBytes"
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start": {
                        "row": 61,
                        "column": 34
                      },
                      "end": {
                        "row": 61,
                        "column": 35
                      },
                      "text": ")"
                    }
                  ]
                },
                {
                  "type": "block",
                  "start": {
                    "row": 61,
                    "column": 36
                  },
                  "end": {
                    "row": 68,
                    "column": 3
                  },
                  "text": "{\n\t\t\tbyte currentByte = segmentAndOffset.value();\n\t\t\tif (currentByte < '0' || currentByte > '9') {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\ttotalOffset++;\n\t\t\tsegmentAndOffset.nextByte(size);\n\t\t}",
                  "children": [
                    {
                      "type": "{",
                      "start": {
                        "row": 61,
                        "column": 36
                      },
                      "end": {
                        "row": 61,
                        "column": 37
                      },
                      "text": "{"
                    },
                    {
                      "type": "local_variable_declaration",
                      "start": {
                        "row": 62,
                        "column": 3
                      },
                      "end": {
                        "row": 62,
                        "column": 47
                      },
                      "text": "byte currentByte = segmentAndOffset.value();",
                      "children": [
                        {
                          "type": "integral_type",
                          "start": {
                            "row": 62,
                            "column": 3
                          },
                          "end": {
                            "row": 62,
                            "column": 7
                          },
                          "text": "byte",
                          "children": [
                            {
                              "type": "byte",
                              "start": {
                                "row": 62,
                                "column": 3
                              },
                              "end": {
                                "row": 62,
                                "column": 7
                              },
                              "text": "byte"
                            }
                          ]
                        },
                        {
                          "type": "variable_declarator",
                          "start": {
                            "row": 62,
                            "column": 8
                          },
                          "end": {
                            "row": 62,
                            "column": 46
                          },
                          "text": "currentByte = segmentAndOffset.value()",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 62,
                                "column": 8
                              },
                              "end": {
                                "row": 62,
                                "column": 19
                              },
                              "text": "currentByte"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 62,
                                "column": 20
                              },
                              "end": {
                                "row": 62,
                                "column": 21
                              },
                              "text": "="
                            },
                            {
                              "type": "method_invocation",
                              "start": {
                                "row": 62,
                                "column": 22
                              },
                              "end": {
                                "row": 62,
                                "column": 46
                              },
                              "text": "segmentAndOffset.value()",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 62,
                                    "column": 22
                                  },
                                  "end": {
                                    "row": 62,
                                    "column": 38
                                  },
                                  "text": "segmentAndOffset"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 62,
                                    "column": 38
                                  },
                                  "end": {
                                    "row": 62,
                                    "column": 39
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 62,
                                    "column": 39
                                  },
                                  "end": {
                                    "row": 62,
                                    "column": 44
                                  },
                                  "text": "value"
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 62,
                                    "column": 44
                                  },
                                  "end": {
                                    "row": 62,
                                    "column": 46
                                  },
                                  "text": "()",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 62,
                                        "column": 44
                                      },
                                      "end": {
                                        "row": 62,
                                        "column": 45
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 62,
                                        "column": 45
                                      },
                                      "end": {
                                        "row": 62,
                                        "column": 46
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start": {
                            "row": 62,
                            "column": 46
                          },
                          "end": {
                            "row": 62,
                            "column": 47
                          },
                          "text": ";"
                        }
                      ]
                    },
                    {
                      "type": "if_statement",
                      "start": {
                        "row": 63,
                        "column": 3
                      },
                      "end": {
                        "row": 65,
                        "column": 4
                      },
                      "text": "if (currentByte < '0' || currentByte > '9') {\n\t\t\t\treturn null;\n\t\t\t}",
                      "children": [
                        {
                          "type": "if",
                          "start": {
                            "row": 63,
                            "column": 3
                          },
                          "end": {
                            "row": 63,
                            "column": 5
                          },
                          "text": "if"
                        },
                        {
                          "type": "condition",
                          "start": {
                            "row": 63,
                            "column": 6
                          },
                          "end": {
                            "row": 63,
                            "column": 46
                          },
                          "text": "(currentByte < '0' || currentByte > '9')",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 63,
                                "column": 6
                              },
                              "end": {
                                "row": 63,
                                "column": 7
                              },
                              "text": "("
                            },
                            {
                              "type": "binary_expression",
                              "start": {
                                "row": 63,
                                "column": 7
                              },
                              "end": {
                                "row": 63,
                                "column": 45
                              },
                              "text": "currentByte < '0' || currentByte > '9'",
                              "children": [
                                {
                                  "type": "binary_expression",
                                  "start": {
                                    "row": 63,
                                    "column": 7
                                  },
                                  "end": {
                                    "row": 63,
                                    "column": 24
                                  },
                                  "text": "currentByte < '0'",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 63,
                                        "column": 7
                                      },
                                      "end": {
                                        "row": 63,
                                        "column": 18
                                      },
                                      "text": "currentByte"
                                    },
                                    {
                                      "type": "<",
                                      "start": {
                                        "row": 63,
                                        "column": 19
                                      },
                                      "end": {
                                        "row": 63,
                                        "column": 20
                                      },
                                      "text": "<"
                                    },
                                    {
                                      "type": "character_literal",
                                      "start": {
                                        "row": 63,
                                        "column": 21
                                      },
                                      "end": {
                                        "row": 63,
                                        "column": 24
                                      },
                                      "text": "'0'"
                                    }
                                  ]
                                },
                                {
                                  "type": "||",
                                  "start": {
                                    "row": 63,
                                    "column": 25
                                  },
                                  "end": {
                                    "row": 63,
                                    "column": 27
                                  },
                                  "text": "||"
                                },
                                {
                                  "type": "binary_expression",
                                  "start": {
                                    "row": 63,
                                    "column": 28
                                  },
                                  "end": {
                                    "row": 63,
                                    "column": 45
                                  },
                                  "text": "currentByte > '9'",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 63,
                                        "column": 28
                                      },
                                      "end": {
                                        "row": 63,
                                        "column": 39
                                      },
                                      "text": "currentByte"
                                    },
                                    {
                                      "type": ">",
                                      "start": {
                                        "row": 63,
                                        "column": 40
                                      },
                                      "end": {
                                        "row": 63,
                                        "column": 41
                                      },
                                      "text": ">"
                                    },
                                    {
                                      "type": "character_literal",
                                      "start": {
                                        "row": 63,
                                        "column": 42
                                      },
                                      "end": {
                                        "row": 63,
                                        "column": 45
                                      },
                                      "text": "'9'"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 63,
                                "column": 45
                              },
                              "end": {
                                "row": 63,
                                "column": 46
                              },
                              "text": ")"
                            }
                          ]
                        },
                        {
                          "type": "block",
                          "start": {
                            "row": 63,
                            "column": 47
                          },
                          "end": {
                            "row": 65,
                            "column": 4
                          },
                          "text": "{\n\t\t\t\treturn null;\n\t\t\t}",
                          "children": [
                            {
                              "type": "{",
                              "start": {
                                "row": 63,
                                "column": 47
                              },
                              "end": {
                                "row": 63,
                                "column": 48
                              },
                              "text": "{"
                            },
                            {
                              "type": "return_statement",
                              "start": {
                                "row": 64,
                                "column": 4
                              },
                              "end": {
                                "row": 64,
                                "column": 16
                              },
                              "text": "return null;",
                              "children": [
                                {
                                  "type": "return",
                                  "start": {
                                    "row": 64,
                                    "column": 4
                                  },
                                  "end": {
                                    "row": 64,
                                    "column": 10
                                  },
                                  "text": "return"
                                },
                                {
                                  "type": "null_literal",
                                  "start": {
                                    "row": 64,
                                    "column": 11
                                  },
                                  "end": {
                                    "row": 64,
                                    "column": 15
                                  },
                                  "text": "null"
                                },
                                {
                                  "type": ";",
                                  "start": {
                                    "row": 64,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 64,
                                    "column": 16
                                  },
                                  "text": ";"
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start": {
                                "row": 65,
                                "column": 3
                              },
                              "end": {
                                "row": 65,
                                "column": 4
                              },
                              "text": "}"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 66,
                        "column": 3
                      },
                      "end": {
                        "row": 66,
                        "column": 17
                      },
                      "text": "totalOffset++;",
                      "children": [
                        {
                          "type": "update_expression",
                          "start": {
                            "row": 66,
                            "column": 3
                          },
                          "end": {
                            "row": 66,
                            "column": 16
                          },
                          "text": "totalOffset++",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 66,
                                "column": 3
                              },
                              "end": {
                                "row": 66,
                                "column": 14
                              },
                              "text": "totalOffset"
                            },
                            {
                              "type": "++",
                              "start": {
                                "row": 66,
                                "column": 14
                              },
                              "end": {
                                "row": 66,
                                "column": 16
                              },
                              "text": "++"
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start": {
                            "row": 66,
                            "column": 16
                          },
                          "end": {
                            "row": 66,
                            "column": 17
                          },
                          "text": ";"
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 67,
                        "column": 3
                      },
                      "end": {
                        "row": 67,
                        "column": 35
                      },
                      "text": "segmentAndOffset.nextByte(size);",
                      "children": [
                        {
                          "type": "method_invocation",
                          "start": {
                            "row": 67,
                            "column": 3
                          },
                          "end": {
                            "row": 67,
                            "column": 34
                          },
                          "text": "segmentAndOffset.nextByte(size)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 67,
                                "column": 3
                              },
                              "end": {
                                "row": 67,
                                "column": 19
                              },
                              "text": "segmentAndOffset"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 67,
                                "column": 19
                              },
                              "end": {
                                "row": 67,
                                "column": 20
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 67,
                                "column": 20
                              },
                              "end": {
                                "row": 67,
                                "column": 28
                              },
                              "text": "nextByte"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 67,
                                "column": 28
                              },
                              "end": {
                                "row": 67,
                                "column": 34
                              },
                              "text": "(size)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 67,
                                    "column": 28
                                  },
                                  "end": {
                                    "row": 67,
                                    "column": 29
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 67,
                                    "column": 29
                                  },
                                  "end": {
                                    "row": 67,
                                    "column": 33
                                  },
                                  "text": "size"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 67,
                                    "column": 33
                                  },
                                  "end": {
                                    "row": 67,
                                    "column": 34
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start": {
                            "row": 67,
                            "column": 34
                          },
                          "end": {
                            "row": 67,
                            "column": 35
                          },
                          "text": ";"
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start": {
                        "row": 68,
                        "column": 2
                      },
                      "end": {
                        "row": 68,
                        "column": 3
                      },
                      "text": "}"
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 70,
                "column": 2
              },
              "end": {
                "row": 75,
                "column": 3
              },
              "text": "if (!negative) {\n\t\t\tresult = -result;\n\t\t\tif (result < 0) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 70,
                    "column": 2
                  },
                  "end": {
                    "row": 70,
                    "column": 4
                  },
                  "text": "if"
                },
                {
                  "type": "condition",
                  "start": {
                    "row": 70,
                    "column": 5
                  },
                  "end": {
                    "row": 70,
                    "column": 16
                  },
                  "text": "(!negative)",
                  "children": [
                    {
                      "type": "(",
                      "start": {
                        "row": 70,
                        "column": 5
                      },
                      "end": {
                        "row": 70,
                        "column": 6
                      },
                      "text": "("
                    },
                    {
                      "type": "unary_expression",
                      "start": {
                        "row": 70,
                        "column": 6
                      },
                      "end": {
                        "row": 70,
                        "column": 15
                      },
                      "text": "!negative",
                      "children": [
                        {
                          "type": "!",
                          "start": {
                            "row": 70,
                            "column": 6
                          },
                          "end": {
                            "row": 70,
                            "column": 7
                          },
                          "text": "!"
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 70,
                            "column": 7
                          },
                          "end": {
                            "row": 70,
                            "column": 15
                          },
                          "text": "negative"
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start": {
                        "row": 70,
                        "column": 15
                      },
                      "end": {
                        "row": 70,
                        "column": 16
                      },
                      "text": ")"
                    }
                  ]
                },
                {
                  "type": "block",
                  "start": {
                    "row": 70,
                    "column": 17
                  },
                  "end": {
                    "row": 75,
                    "column": 3
                  },
                  "text": "{\n\t\t\tresult = -result;\n\t\t\tif (result < 0) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}",
                  "children": [
                    {
                      "type": "{",
                      "start": {
                        "row": 70,
                        "column": 17
                      },
                      "end": {
                        "row": 70,
                        "column": 18
                      },
                      "text": "{"
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 71,
                        "column": 3
                      },
                      "end": {
                        "row": 71,
                        "column": 20
                      },
                      "text": "result = -result;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start": {
                            "row": 71,
                            "column": 3
                          },
                          "end": {
                            "row": 71,
                            "column": 19
                          },
                          "text": "result = -result",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 71,
                                "column": 3
                              },
                              "end": {
                                "row": 71,
                                "column": 9
                              },
                              "text": "result"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 71,
                                "column": 10
                              },
                              "end": {
                                "row": 71,
                                "column": 11
                              },
                              "text": "="
                            },
                            {
                              "type": "unary_expression",
                              "start": {
                                "row": 71,
                                "column": 12
                              },
                              "end": {
                                "row": 71,
                                "column": 19
                              },
                              "text": "-result",
                              "children": [
                                {
                                  "type": "-",
                                  "start": {
                                    "row": 71,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 71,
                                    "column": 13
                                  },
                                  "text": "-"
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 71,
                                    "column": 13
                                  },
                                  "end": {
                                    "row": 71,
                                    "column": 19
                                  },
                                  "text": "result"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start": {
                            "row": 71,
                            "column": 19
                          },
                          "end": {
                            "row": 71,
                            "column": 20
                          },
                          "text": ";"
                        }
                      ]
                    },
                    {
                      "type": "if_statement",
                      "start": {
                        "row": 72,
                        "column": 3
                      },
                      "end": {
                        "row": 74,
                        "column": 4
                      },
                      "text": "if (result < 0) {\n\t\t\t\treturn null;\n\t\t\t}",
                      "children": [
                        {
                          "type": "if",
                          "start": {
                            "row": 72,
                            "column": 3
                          },
                          "end": {
                            "row": 72,
                            "column": 5
                          },
                          "text": "if"
                        },
                        {
                          "type": "condition",
                          "start": {
                            "row": 72,
                            "column": 6
                          },
                          "end": {
                            "row": 72,
                            "column": 18
                          },
                          "text": "(result < 0)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 72,
                                "column": 6
                              },
                              "end": {
                                "row": 72,
                                "column": 7
                              },
                              "text": "("
                            },
                            {
                              "type": "binary_expression",
                              "start": {
                                "row": 72,
                                "column": 7
                              },
                              "end": {
                                "row": 72,
                                "column": 17
                              },
                              "text": "result < 0",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 72,
                                    "column": 7
                                  },
                                  "end": {
                                    "row": 72,
                                    "column": 13
                                  },
                                  "text": "result"
                                },
                                {
                                  "type": "<",
                                  "start": {
                                    "row": 72,
                                    "column": 14
                                  },
                                  "end": {
                                    "row": 72,
                                    "column": 15
                                  },
                                  "text": "<"
                                },
                                {
                                  "type": "decimal_integer_literal",
                                  "start": {
                                    "row": 72,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 72,
                                    "column": 17
                                  },
                                  "text": "0"
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 72,
                                "column": 17
                              },
                              "end": {
                                "row": 72,
                                "column": 18
                              },
                              "text": ")"
                            }
                          ]
                        },
                        {
                          "type": "block",
                          "start": {
                            "row": 72,
                            "column": 19
                          },
                          "end": {
                            "row": 74,
                            "column": 4
                          },
                          "text": "{\n\t\t\t\treturn null;\n\t\t\t}",
                          "children": [
                            {
                              "type": "{",
                              "start": {
                                "row": 72,
                                "column": 19
                              },
                              "end": {
                                "row": 72,
                                "column": 20
                              },
                              "text": "{"
                            },
                            {
                              "type": "return_statement",
                              "start": {
                                "row": 73,
                                "column": 4
                              },
                              "end": {
                                "row": 73,
                                "column": 16
                              },
                              "text": "return null;",
                              "children": [
                                {
                                  "type": "return",
                                  "start": {
                                    "row": 73,
                                    "column": 4
                                  },
                                  "end": {
                                    "row": 73,
                                    "column": 10
                                  },
                                  "text": "return"
                                },
                                {
                                  "type": "null_literal",
                                  "start": {
                                    "row": 73,
                                    "column": 11
                                  },
                                  "end": {
                                    "row": 73,
                                    "column": 15
                                  },
                                  "text": "null"
                                },
                                {
                                  "type": ";",
                                  "start": {
                                    "row": 73,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 73,
                                    "column": 16
                                  },
                                  "text": ";"
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start": {
                                "row": 74,
                                "column": 3
                              },
                              "end": {
                                "row": 74,
                                "column": 4
                              },
                              "text": "}"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start": {
                        "row": 75,
                        "column": 2
                      },
                      "end": {
                        "row": 75,
                        "column": 3
                      },
                      "text": "}"
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 76,
                "column": 2
              },
              "end": {
                "row": 76,
                "column": 16
              },
              "text": "return result;",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 76,
                    "column": 2
                  },
                  "end": {
                    "row": 76,
                    "column": 8
                  },
                  "text": "return"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 76,
                    "column": 9
                  },
                  "end": {
                    "row": 76,
                    "column": 15
                  },
                  "text": "result"
                },
                {
                  "type": ";",
                  "start": {
                    "row": 76,
                    "column": 15
                  },
                  "end": {
                    "row": 76,
                    "column": 16
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "}",
              "start": {
                "row": 77,
                "column": 1
              },
              "end": {
                "row": 77,
                "column": 2
              },
              "text": "}"
            }
          ]
        }
      ]
    }
  ]
}