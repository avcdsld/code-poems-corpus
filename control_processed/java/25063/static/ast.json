{
  "type": "program",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 27,
    "column": 3
  },
  "text": "public Chunk compress() {\n    Chunk res = compress2();\n    byte type = type();\n    assert _vec == null ||  // Various testing scenarios do not set a Vec\n      type == _vec._type || // Equal types\n      // Allow all-bad Chunks in any type of Vec\n      type == Vec.T_BAD ||\n      // Specifically allow the NewChunk to be a numeric type (better be all\n      // ints) and the selected Vec type an categorical - whose String mapping\n      // may not be set yet.\n      (type==Vec.T_NUM && _vec._type==Vec.T_CAT) ||\n      // Another one: numeric Chunk and Time Vec (which will turn into all longs/zeros/nans Chunks)\n      (type==Vec.T_NUM && _vec._type == Vec.T_TIME && !res.hasFloat())\n      : \"NewChunk has type \"+Vec.TYPE_STR[type]+\", but the Vec is of type \"+_vec.get_type_str();\n    assert _len == res._len : \"NewChunk has length \"+_len+\", compressed Chunk has \"+res._len;\n    // Force everything to null after compress to free up the memory.  Seems\n    // like a non-issue in the land of GC, but the NewChunk *should* be dead\n    // after this, but might drag on.  The arrays are large, and during a big\n    // Parse there's lots and lots of them... so free early just in case a GC\n    // happens before the drag-time on the NewChunk finishes.\n    _id = null;\n    _xs = null;\n    _ds = null;\n    _ms = null;\n    _is = null;\n    _ss = null;\n    return res;\n  }",
  "children": [
    {
      "type": "method_declaration",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 27,
        "column": 3
      },
      "text": "public Chunk compress() {\n    Chunk res = compress2();\n    byte type = type();\n    assert _vec == null ||  // Various testing scenarios do not set a Vec\n      type == _vec._type || // Equal types\n      // Allow all-bad Chunks in any type of Vec\n      type == Vec.T_BAD ||\n      // Specifically allow the NewChunk to be a numeric type (better be all\n      // ints) and the selected Vec type an categorical - whose String mapping\n      // may not be set yet.\n      (type==Vec.T_NUM && _vec._type==Vec.T_CAT) ||\n      // Another one: numeric Chunk and Time Vec (which will turn into all longs/zeros/nans Chunks)\n      (type==Vec.T_NUM && _vec._type == Vec.T_TIME && !res.hasFloat())\n      : \"NewChunk has type \"+Vec.TYPE_STR[type]+\", but the Vec is of type \"+_vec.get_type_str();\n    assert _len == res._len : \"NewChunk has length \"+_len+\", compressed Chunk has \"+res._len;\n    // Force everything to null after compress to free up the memory.  Seems\n    // like a non-issue in the land of GC, but the NewChunk *should* be dead\n    // after this, but might drag on.  The arrays are large, and during a big\n    // Parse there's lots and lots of them... so free early just in case a GC\n    // happens before the drag-time on the NewChunk finishes.\n    _id = null;\n    _xs = null;\n    _ds = null;\n    _ms = null;\n    _is = null;\n    _ss = null;\n    return res;\n  }",
      "children": [
        {
          "type": "modifiers",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 6
          },
          "text": "public",
          "children": [
            {
              "type": "public",
              "start": {
                "row": 0,
                "column": 0
              },
              "end": {
                "row": 0,
                "column": 6
              },
              "text": "public"
            }
          ]
        },
        {
          "type": "type_identifier",
          "start": {
            "row": 0,
            "column": 7
          },
          "end": {
            "row": 0,
            "column": 12
          },
          "text": "Chunk"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 13
          },
          "end": {
            "row": 0,
            "column": 21
          },
          "text": "compress"
        },
        {
          "type": "formal_parameters",
          "start": {
            "row": 0,
            "column": 21
          },
          "end": {
            "row": 0,
            "column": 23
          },
          "text": "()",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 21
              },
              "end": {
                "row": 0,
                "column": 22
              },
              "text": "("
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 22
              },
              "end": {
                "row": 0,
                "column": 23
              },
              "text": ")"
            }
          ]
        },
        {
          "type": "block",
          "start": {
            "row": 0,
            "column": 24
          },
          "end": {
            "row": 27,
            "column": 3
          },
          "text": "{\n    Chunk res = compress2();\n    byte type = type();\n    assert _vec == null ||  // Various testing scenarios do not set a Vec\n      type == _vec._type || // Equal types\n      // Allow all-bad Chunks in any type of Vec\n      type == Vec.T_BAD ||\n      // Specifically allow the NewChunk to be a numeric type (better be all\n      // ints) and the selected Vec type an categorical - whose String mapping\n      // may not be set yet.\n      (type==Vec.T_NUM && _vec._type==Vec.T_CAT) ||\n      // Another one: numeric Chunk and Time Vec (which will turn into all longs/zeros/nans Chunks)\n      (type==Vec.T_NUM && _vec._type == Vec.T_TIME && !res.hasFloat())\n      : \"NewChunk has type \"+Vec.TYPE_STR[type]+\", but the Vec is of type \"+_vec.get_type_str();\n    assert _len == res._len : \"NewChunk has length \"+_len+\", compressed Chunk has \"+res._len;\n    // Force everything to null after compress to free up the memory.  Seems\n    // like a non-issue in the land of GC, but the NewChunk *should* be dead\n    // after this, but might drag on.  The arrays are large, and during a big\n    // Parse there's lots and lots of them... so free early just in case a GC\n    // happens before the drag-time on the NewChunk finishes.\n    _id = null;\n    _xs = null;\n    _ds = null;\n    _ms = null;\n    _is = null;\n    _ss = null;\n    return res;\n  }",
          "children": [
            {
              "type": "{",
              "start": {
                "row": 0,
                "column": 24
              },
              "end": {
                "row": 0,
                "column": 25
              },
              "text": "{"
            },
            {
              "type": "local_variable_declaration",
              "start": {
                "row": 1,
                "column": 4
              },
              "end": {
                "row": 1,
                "column": 28
              },
              "text": "Chunk res = compress2();",
              "children": [
                {
                  "type": "type_identifier",
                  "start": {
                    "row": 1,
                    "column": 4
                  },
                  "end": {
                    "row": 1,
                    "column": 9
                  },
                  "text": "Chunk"
                },
                {
                  "type": "variable_declarator",
                  "start": {
                    "row": 1,
                    "column": 10
                  },
                  "end": {
                    "row": 1,
                    "column": 27
                  },
                  "text": "res = compress2()",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 1,
                        "column": 10
                      },
                      "end": {
                        "row": 1,
                        "column": 13
                      },
                      "text": "res"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 1,
                        "column": 14
                      },
                      "end": {
                        "row": 1,
                        "column": 15
                      },
                      "text": "="
                    },
                    {
                      "type": "method_invocation",
                      "start": {
                        "row": 1,
                        "column": 16
                      },
                      "end": {
                        "row": 1,
                        "column": 27
                      },
                      "text": "compress2()",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 1,
                            "column": 16
                          },
                          "end": {
                            "row": 1,
                            "column": 25
                          },
                          "text": "compress2"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 1,
                            "column": 25
                          },
                          "end": {
                            "row": 1,
                            "column": 27
                          },
                          "text": "()",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 1,
                                "column": 25
                              },
                              "end": {
                                "row": 1,
                                "column": 26
                              },
                              "text": "("
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 1,
                                "column": 26
                              },
                              "end": {
                                "row": 1,
                                "column": 27
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 1,
                    "column": 27
                  },
                  "end": {
                    "row": 1,
                    "column": 28
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "local_variable_declaration",
              "start": {
                "row": 2,
                "column": 4
              },
              "end": {
                "row": 2,
                "column": 23
              },
              "text": "byte type = type();",
              "children": [
                {
                  "type": "integral_type",
                  "start": {
                    "row": 2,
                    "column": 4
                  },
                  "end": {
                    "row": 2,
                    "column": 8
                  },
                  "text": "byte",
                  "children": [
                    {
                      "type": "byte",
                      "start": {
                        "row": 2,
                        "column": 4
                      },
                      "end": {
                        "row": 2,
                        "column": 8
                      },
                      "text": "byte"
                    }
                  ]
                },
                {
                  "type": "variable_declarator",
                  "start": {
                    "row": 2,
                    "column": 9
                  },
                  "end": {
                    "row": 2,
                    "column": 22
                  },
                  "text": "type = type()",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 2,
                        "column": 9
                      },
                      "end": {
                        "row": 2,
                        "column": 13
                      },
                      "text": "type"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 2,
                        "column": 14
                      },
                      "end": {
                        "row": 2,
                        "column": 15
                      },
                      "text": "="
                    },
                    {
                      "type": "method_invocation",
                      "start": {
                        "row": 2,
                        "column": 16
                      },
                      "end": {
                        "row": 2,
                        "column": 22
                      },
                      "text": "type()",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 2,
                            "column": 16
                          },
                          "end": {
                            "row": 2,
                            "column": 20
                          },
                          "text": "type"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 2,
                            "column": 20
                          },
                          "end": {
                            "row": 2,
                            "column": 22
                          },
                          "text": "()",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 2,
                                "column": 20
                              },
                              "end": {
                                "row": 2,
                                "column": 21
                              },
                              "text": "("
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 2,
                                "column": 21
                              },
                              "end": {
                                "row": 2,
                                "column": 22
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 2,
                    "column": 22
                  },
                  "end": {
                    "row": 2,
                    "column": 23
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "assert_statement",
              "start": {
                "row": 3,
                "column": 4
              },
              "end": {
                "row": 13,
                "column": 96
              },
              "text": "assert _vec == null ||  // Various testing scenarios do not set a Vec\n      type == _vec._type || // Equal types\n      // Allow all-bad Chunks in any type of Vec\n      type == Vec.T_BAD ||\n      // Specifically allow the NewChunk to be a numeric type (better be all\n      // ints) and the selected Vec type an categorical - whose String mapping\n      // may not be set yet.\n      (type==Vec.T_NUM && _vec._type==Vec.T_CAT) ||\n      // Another one: numeric Chunk and Time Vec (which will turn into all longs/zeros/nans Chunks)\n      (type==Vec.T_NUM && _vec._type == Vec.T_TIME && !res.hasFloat())\n      : \"NewChunk has type \"+Vec.TYPE_STR[type]+\", but the Vec is of type \"+_vec.get_type_str();",
              "children": [
                {
                  "type": "assert",
                  "start": {
                    "row": 3,
                    "column": 4
                  },
                  "end": {
                    "row": 3,
                    "column": 10
                  },
                  "text": "assert"
                },
                {
                  "type": "binary_expression",
                  "start": {
                    "row": 3,
                    "column": 11
                  },
                  "end": {
                    "row": 12,
                    "column": 70
                  },
                  "text": "_vec == null ||  // Various testing scenarios do not set a Vec\n      type == _vec._type || // Equal types\n      // Allow all-bad Chunks in any type of Vec\n      type == Vec.T_BAD ||\n      // Specifically allow the NewChunk to be a numeric type (better be all\n      // ints) and the selected Vec type an categorical - whose String mapping\n      // may not be set yet.\n      (type==Vec.T_NUM && _vec._type==Vec.T_CAT) ||\n      // Another one: numeric Chunk and Time Vec (which will turn into all longs/zeros/nans Chunks)\n      (type==Vec.T_NUM && _vec._type == Vec.T_TIME && !res.hasFloat())",
                  "children": [
                    {
                      "type": "binary_expression",
                      "start": {
                        "row": 3,
                        "column": 11
                      },
                      "end": {
                        "row": 10,
                        "column": 48
                      },
                      "text": "_vec == null ||  // Various testing scenarios do not set a Vec\n      type == _vec._type || // Equal types\n      // Allow all-bad Chunks in any type of Vec\n      type == Vec.T_BAD ||\n      // Specifically allow the NewChunk to be a numeric type (better be all\n      // ints) and the selected Vec type an categorical - whose String mapping\n      // may not be set yet.\n      (type==Vec.T_NUM && _vec._type==Vec.T_CAT)",
                      "children": [
                        {
                          "type": "binary_expression",
                          "start": {
                            "row": 3,
                            "column": 11
                          },
                          "end": {
                            "row": 6,
                            "column": 23
                          },
                          "text": "_vec == null ||  // Various testing scenarios do not set a Vec\n      type == _vec._type || // Equal types\n      // Allow all-bad Chunks in any type of Vec\n      type == Vec.T_BAD",
                          "children": [
                            {
                              "type": "binary_expression",
                              "start": {
                                "row": 3,
                                "column": 11
                              },
                              "end": {
                                "row": 4,
                                "column": 24
                              },
                              "text": "_vec == null ||  // Various testing scenarios do not set a Vec\n      type == _vec._type",
                              "children": [
                                {
                                  "type": "binary_expression",
                                  "start": {
                                    "row": 3,
                                    "column": 11
                                  },
                                  "end": {
                                    "row": 3,
                                    "column": 23
                                  },
                                  "text": "_vec == null",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 3,
                                        "column": 11
                                      },
                                      "end": {
                                        "row": 3,
                                        "column": 15
                                      },
                                      "text": "_vec"
                                    },
                                    {
                                      "type": "==",
                                      "start": {
                                        "row": 3,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 3,
                                        "column": 18
                                      },
                                      "text": "=="
                                    },
                                    {
                                      "type": "null_literal",
                                      "start": {
                                        "row": 3,
                                        "column": 19
                                      },
                                      "end": {
                                        "row": 3,
                                        "column": 23
                                      },
                                      "text": "null"
                                    }
                                  ]
                                },
                                {
                                  "type": "||",
                                  "start": {
                                    "row": 3,
                                    "column": 24
                                  },
                                  "end": {
                                    "row": 3,
                                    "column": 26
                                  },
                                  "text": "||"
                                },
                                {
                                  "type": "line_comment",
                                  "start": {
                                    "row": 3,
                                    "column": 28
                                  },
                                  "end": {
                                    "row": 3,
                                    "column": 73
                                  },
                                  "text": "// Various testing scenarios do not set a Vec"
                                },
                                {
                                  "type": "binary_expression",
                                  "start": {
                                    "row": 4,
                                    "column": 6
                                  },
                                  "end": {
                                    "row": 4,
                                    "column": 24
                                  },
                                  "text": "type == _vec._type",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 4,
                                        "column": 6
                                      },
                                      "end": {
                                        "row": 4,
                                        "column": 10
                                      },
                                      "text": "type"
                                    },
                                    {
                                      "type": "==",
                                      "start": {
                                        "row": 4,
                                        "column": 11
                                      },
                                      "end": {
                                        "row": 4,
                                        "column": 13
                                      },
                                      "text": "=="
                                    },
                                    {
                                      "type": "field_access",
                                      "start": {
                                        "row": 4,
                                        "column": 14
                                      },
                                      "end": {
                                        "row": 4,
                                        "column": 24
                                      },
                                      "text": "_vec._type",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 4,
                                            "column": 14
                                          },
                                          "end": {
                                            "row": 4,
                                            "column": 18
                                          },
                                          "text": "_vec"
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 4,
                                            "column": 18
                                          },
                                          "end": {
                                            "row": 4,
                                            "column": 19
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 4,
                                            "column": 19
                                          },
                                          "end": {
                                            "row": 4,
                                            "column": 24
                                          },
                                          "text": "_type"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "||",
                              "start": {
                                "row": 4,
                                "column": 25
                              },
                              "end": {
                                "row": 4,
                                "column": 27
                              },
                              "text": "||"
                            },
                            {
                              "type": "line_comment",
                              "start": {
                                "row": 4,
                                "column": 28
                              },
                              "end": {
                                "row": 4,
                                "column": 42
                              },
                              "text": "// Equal types"
                            },
                            {
                              "type": "line_comment",
                              "start": {
                                "row": 5,
                                "column": 6
                              },
                              "end": {
                                "row": 5,
                                "column": 48
                              },
                              "text": "// Allow all-bad Chunks in any type of Vec"
                            },
                            {
                              "type": "binary_expression",
                              "start": {
                                "row": 6,
                                "column": 6
                              },
                              "end": {
                                "row": 6,
                                "column": 23
                              },
                              "text": "type == Vec.T_BAD",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 6,
                                    "column": 6
                                  },
                                  "end": {
                                    "row": 6,
                                    "column": 10
                                  },
                                  "text": "type"
                                },
                                {
                                  "type": "==",
                                  "start": {
                                    "row": 6,
                                    "column": 11
                                  },
                                  "end": {
                                    "row": 6,
                                    "column": 13
                                  },
                                  "text": "=="
                                },
                                {
                                  "type": "field_access",
                                  "start": {
                                    "row": 6,
                                    "column": 14
                                  },
                                  "end": {
                                    "row": 6,
                                    "column": 23
                                  },
                                  "text": "Vec.T_BAD",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 6,
                                        "column": 14
                                      },
                                      "end": {
                                        "row": 6,
                                        "column": 17
                                      },
                                      "text": "Vec"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 6,
                                        "column": 17
                                      },
                                      "end": {
                                        "row": 6,
                                        "column": 18
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 6,
                                        "column": 18
                                      },
                                      "end": {
                                        "row": 6,
                                        "column": 23
                                      },
                                      "text": "T_BAD"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "||",
                          "start": {
                            "row": 6,
                            "column": 24
                          },
                          "end": {
                            "row": 6,
                            "column": 26
                          },
                          "text": "||"
                        },
                        {
                          "type": "line_comment",
                          "start": {
                            "row": 7,
                            "column": 6
                          },
                          "end": {
                            "row": 7,
                            "column": 76
                          },
                          "text": "// Specifically allow the NewChunk to be a numeric type (better be all"
                        },
                        {
                          "type": "line_comment",
                          "start": {
                            "row": 8,
                            "column": 6
                          },
                          "end": {
                            "row": 8,
                            "column": 78
                          },
                          "text": "// ints) and the selected Vec type an categorical - whose String mapping"
                        },
                        {
                          "type": "line_comment",
                          "start": {
                            "row": 9,
                            "column": 6
                          },
                          "end": {
                            "row": 9,
                            "column": 28
                          },
                          "text": "// may not be set yet."
                        },
                        {
                          "type": "parenthesized_expression",
                          "start": {
                            "row": 10,
                            "column": 6
                          },
                          "end": {
                            "row": 10,
                            "column": 48
                          },
                          "text": "(type==Vec.T_NUM && _vec._type==Vec.T_CAT)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 10,
                                "column": 6
                              },
                              "end": {
                                "row": 10,
                                "column": 7
                              },
                              "text": "("
                            },
                            {
                              "type": "binary_expression",
                              "start": {
                                "row": 10,
                                "column": 7
                              },
                              "end": {
                                "row": 10,
                                "column": 47
                              },
                              "text": "type==Vec.T_NUM && _vec._type==Vec.T_CAT",
                              "children": [
                                {
                                  "type": "binary_expression",
                                  "start": {
                                    "row": 10,
                                    "column": 7
                                  },
                                  "end": {
                                    "row": 10,
                                    "column": 22
                                  },
                                  "text": "type==Vec.T_NUM",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 10,
                                        "column": 7
                                      },
                                      "end": {
                                        "row": 10,
                                        "column": 11
                                      },
                                      "text": "type"
                                    },
                                    {
                                      "type": "==",
                                      "start": {
                                        "row": 10,
                                        "column": 11
                                      },
                                      "end": {
                                        "row": 10,
                                        "column": 13
                                      },
                                      "text": "=="
                                    },
                                    {
                                      "type": "field_access",
                                      "start": {
                                        "row": 10,
                                        "column": 13
                                      },
                                      "end": {
                                        "row": 10,
                                        "column": 22
                                      },
                                      "text": "Vec.T_NUM",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 10,
                                            "column": 13
                                          },
                                          "end": {
                                            "row": 10,
                                            "column": 16
                                          },
                                          "text": "Vec"
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 10,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 10,
                                            "column": 17
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 10,
                                            "column": 17
                                          },
                                          "end": {
                                            "row": 10,
                                            "column": 22
                                          },
                                          "text": "T_NUM"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "&&",
                                  "start": {
                                    "row": 10,
                                    "column": 23
                                  },
                                  "end": {
                                    "row": 10,
                                    "column": 25
                                  },
                                  "text": "&&"
                                },
                                {
                                  "type": "binary_expression",
                                  "start": {
                                    "row": 10,
                                    "column": 26
                                  },
                                  "end": {
                                    "row": 10,
                                    "column": 47
                                  },
                                  "text": "_vec._type==Vec.T_CAT",
                                  "children": [
                                    {
                                      "type": "field_access",
                                      "start": {
                                        "row": 10,
                                        "column": 26
                                      },
                                      "end": {
                                        "row": 10,
                                        "column": 36
                                      },
                                      "text": "_vec._type",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 10,
                                            "column": 26
                                          },
                                          "end": {
                                            "row": 10,
                                            "column": 30
                                          },
                                          "text": "_vec"
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 10,
                                            "column": 30
                                          },
                                          "end": {
                                            "row": 10,
                                            "column": 31
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 10,
                                            "column": 31
                                          },
                                          "end": {
                                            "row": 10,
                                            "column": 36
                                          },
                                          "text": "_type"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "==",
                                      "start": {
                                        "row": 10,
                                        "column": 36
                                      },
                                      "end": {
                                        "row": 10,
                                        "column": 38
                                      },
                                      "text": "=="
                                    },
                                    {
                                      "type": "field_access",
                                      "start": {
                                        "row": 10,
                                        "column": 38
                                      },
                                      "end": {
                                        "row": 10,
                                        "column": 47
                                      },
                                      "text": "Vec.T_CAT",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 10,
                                            "column": 38
                                          },
                                          "end": {
                                            "row": 10,
                                            "column": 41
                                          },
                                          "text": "Vec"
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 10,
                                            "column": 41
                                          },
                                          "end": {
                                            "row": 10,
                                            "column": 42
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 10,
                                            "column": 42
                                          },
                                          "end": {
                                            "row": 10,
                                            "column": 47
                                          },
                                          "text": "T_CAT"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 10,
                                "column": 47
                              },
                              "end": {
                                "row": 10,
                                "column": 48
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "||",
                      "start": {
                        "row": 10,
                        "column": 49
                      },
                      "end": {
                        "row": 10,
                        "column": 51
                      },
                      "text": "||"
                    },
                    {
                      "type": "line_comment",
                      "start": {
                        "row": 11,
                        "column": 6
                      },
                      "end": {
                        "row": 11,
                        "column": 99
                      },
                      "text": "// Another one: numeric Chunk and Time Vec (which will turn into all longs/zeros/nans Chunks)"
                    },
                    {
                      "type": "parenthesized_expression",
                      "start": {
                        "row": 12,
                        "column": 6
                      },
                      "end": {
                        "row": 12,
                        "column": 70
                      },
                      "text": "(type==Vec.T_NUM && _vec._type == Vec.T_TIME && !res.hasFloat())",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 12,
                            "column": 6
                          },
                          "end": {
                            "row": 12,
                            "column": 7
                          },
                          "text": "("
                        },
                        {
                          "type": "binary_expression",
                          "start": {
                            "row": 12,
                            "column": 7
                          },
                          "end": {
                            "row": 12,
                            "column": 69
                          },
                          "text": "type==Vec.T_NUM && _vec._type == Vec.T_TIME && !res.hasFloat()",
                          "children": [
                            {
                              "type": "binary_expression",
                              "start": {
                                "row": 12,
                                "column": 7
                              },
                              "end": {
                                "row": 12,
                                "column": 50
                              },
                              "text": "type==Vec.T_NUM && _vec._type == Vec.T_TIME",
                              "children": [
                                {
                                  "type": "binary_expression",
                                  "start": {
                                    "row": 12,
                                    "column": 7
                                  },
                                  "end": {
                                    "row": 12,
                                    "column": 22
                                  },
                                  "text": "type==Vec.T_NUM",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 12,
                                        "column": 7
                                      },
                                      "end": {
                                        "row": 12,
                                        "column": 11
                                      },
                                      "text": "type"
                                    },
                                    {
                                      "type": "==",
                                      "start": {
                                        "row": 12,
                                        "column": 11
                                      },
                                      "end": {
                                        "row": 12,
                                        "column": 13
                                      },
                                      "text": "=="
                                    },
                                    {
                                      "type": "field_access",
                                      "start": {
                                        "row": 12,
                                        "column": 13
                                      },
                                      "end": {
                                        "row": 12,
                                        "column": 22
                                      },
                                      "text": "Vec.T_NUM",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 12,
                                            "column": 13
                                          },
                                          "end": {
                                            "row": 12,
                                            "column": 16
                                          },
                                          "text": "Vec"
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 12,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 12,
                                            "column": 17
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 12,
                                            "column": 17
                                          },
                                          "end": {
                                            "row": 12,
                                            "column": 22
                                          },
                                          "text": "T_NUM"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "&&",
                                  "start": {
                                    "row": 12,
                                    "column": 23
                                  },
                                  "end": {
                                    "row": 12,
                                    "column": 25
                                  },
                                  "text": "&&"
                                },
                                {
                                  "type": "binary_expression",
                                  "start": {
                                    "row": 12,
                                    "column": 26
                                  },
                                  "end": {
                                    "row": 12,
                                    "column": 50
                                  },
                                  "text": "_vec._type == Vec.T_TIME",
                                  "children": [
                                    {
                                      "type": "field_access",
                                      "start": {
                                        "row": 12,
                                        "column": 26
                                      },
                                      "end": {
                                        "row": 12,
                                        "column": 36
                                      },
                                      "text": "_vec._type",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 12,
                                            "column": 26
                                          },
                                          "end": {
                                            "row": 12,
                                            "column": 30
                                          },
                                          "text": "_vec"
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 12,
                                            "column": 30
                                          },
                                          "end": {
                                            "row": 12,
                                            "column": 31
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 12,
                                            "column": 31
                                          },
                                          "end": {
                                            "row": 12,
                                            "column": 36
                                          },
                                          "text": "_type"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "==",
                                      "start": {
                                        "row": 12,
                                        "column": 37
                                      },
                                      "end": {
                                        "row": 12,
                                        "column": 39
                                      },
                                      "text": "=="
                                    },
                                    {
                                      "type": "field_access",
                                      "start": {
                                        "row": 12,
                                        "column": 40
                                      },
                                      "end": {
                                        "row": 12,
                                        "column": 50
                                      },
                                      "text": "Vec.T_TIME",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 12,
                                            "column": 40
                                          },
                                          "end": {
                                            "row": 12,
                                            "column": 43
                                          },
                                          "text": "Vec"
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 12,
                                            "column": 43
                                          },
                                          "end": {
                                            "row": 12,
                                            "column": 44
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 12,
                                            "column": 44
                                          },
                                          "end": {
                                            "row": 12,
                                            "column": 50
                                          },
                                          "text": "T_TIME"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "&&",
                              "start": {
                                "row": 12,
                                "column": 51
                              },
                              "end": {
                                "row": 12,
                                "column": 53
                              },
                              "text": "&&"
                            },
                            {
                              "type": "unary_expression",
                              "start": {
                                "row": 12,
                                "column": 54
                              },
                              "end": {
                                "row": 12,
                                "column": 69
                              },
                              "text": "!res.hasFloat()",
                              "children": [
                                {
                                  "type": "!",
                                  "start": {
                                    "row": 12,
                                    "column": 54
                                  },
                                  "end": {
                                    "row": 12,
                                    "column": 55
                                  },
                                  "text": "!"
                                },
                                {
                                  "type": "method_invocation",
                                  "start": {
                                    "row": 12,
                                    "column": 55
                                  },
                                  "end": {
                                    "row": 12,
                                    "column": 69
                                  },
                                  "text": "res.hasFloat()",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 12,
                                        "column": 55
                                      },
                                      "end": {
                                        "row": 12,
                                        "column": 58
                                      },
                                      "text": "res"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 12,
                                        "column": 58
                                      },
                                      "end": {
                                        "row": 12,
                                        "column": 59
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 12,
                                        "column": 59
                                      },
                                      "end": {
                                        "row": 12,
                                        "column": 67
                                      },
                                      "text": "hasFloat"
                                    },
                                    {
                                      "type": "argument_list",
                                      "start": {
                                        "row": 12,
                                        "column": 67
                                      },
                                      "end": {
                                        "row": 12,
                                        "column": 69
                                      },
                                      "text": "()",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 12,
                                            "column": 67
                                          },
                                          "end": {
                                            "row": 12,
                                            "column": 68
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 12,
                                            "column": 68
                                          },
                                          "end": {
                                            "row": 12,
                                            "column": 69
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 12,
                            "column": 69
                          },
                          "end": {
                            "row": 12,
                            "column": 70
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 13,
                    "column": 6
                  },
                  "end": {
                    "row": 13,
                    "column": 7
                  },
                  "text": ":"
                },
                {
                  "type": "binary_expression",
                  "start": {
                    "row": 13,
                    "column": 8
                  },
                  "end": {
                    "row": 13,
                    "column": 95
                  },
                  "text": "\"NewChunk has type \"+Vec.TYPE_STR[type]+\", but the Vec is of type \"+_vec.get_type_str()",
                  "children": [
                    {
                      "type": "binary_expression",
                      "start": {
                        "row": 13,
                        "column": 8
                      },
                      "end": {
                        "row": 13,
                        "column": 75
                      },
                      "text": "\"NewChunk has type \"+Vec.TYPE_STR[type]+\", but the Vec is of type \"",
                      "children": [
                        {
                          "type": "binary_expression",
                          "start": {
                            "row": 13,
                            "column": 8
                          },
                          "end": {
                            "row": 13,
                            "column": 47
                          },
                          "text": "\"NewChunk has type \"+Vec.TYPE_STR[type]",
                          "children": [
                            {
                              "type": "string_literal",
                              "start": {
                                "row": 13,
                                "column": 8
                              },
                              "end": {
                                "row": 13,
                                "column": 28
                              },
                              "text": "\"NewChunk has type \"",
                              "children": [
                                {
                                  "type": "\"",
                                  "start": {
                                    "row": 13,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 9
                                  },
                                  "text": "\""
                                },
                                {
                                  "type": "string_fragment",
                                  "start": {
                                    "row": 13,
                                    "column": 9
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 27
                                  },
                                  "text": "NewChunk has type "
                                },
                                {
                                  "type": "\"",
                                  "start": {
                                    "row": 13,
                                    "column": 27
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 28
                                  },
                                  "text": "\""
                                }
                              ]
                            },
                            {
                              "type": "+",
                              "start": {
                                "row": 13,
                                "column": 28
                              },
                              "end": {
                                "row": 13,
                                "column": 29
                              },
                              "text": "+"
                            },
                            {
                              "type": "array_access",
                              "start": {
                                "row": 13,
                                "column": 29
                              },
                              "end": {
                                "row": 13,
                                "column": 47
                              },
                              "text": "Vec.TYPE_STR[type]",
                              "children": [
                                {
                                  "type": "field_access",
                                  "start": {
                                    "row": 13,
                                    "column": 29
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 41
                                  },
                                  "text": "Vec.TYPE_STR",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 13,
                                        "column": 29
                                      },
                                      "end": {
                                        "row": 13,
                                        "column": 32
                                      },
                                      "text": "Vec"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 13,
                                        "column": 32
                                      },
                                      "end": {
                                        "row": 13,
                                        "column": 33
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 13,
                                        "column": 33
                                      },
                                      "end": {
                                        "row": 13,
                                        "column": 41
                                      },
                                      "text": "TYPE_STR"
                                    }
                                  ]
                                },
                                {
                                  "type": "[",
                                  "start": {
                                    "row": 13,
                                    "column": 41
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 42
                                  },
                                  "text": "["
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 13,
                                    "column": 42
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 46
                                  },
                                  "text": "type"
                                },
                                {
                                  "type": "]",
                                  "start": {
                                    "row": 13,
                                    "column": 46
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 47
                                  },
                                  "text": "]"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "+",
                          "start": {
                            "row": 13,
                            "column": 47
                          },
                          "end": {
                            "row": 13,
                            "column": 48
                          },
                          "text": "+"
                        },
                        {
                          "type": "string_literal",
                          "start": {
                            "row": 13,
                            "column": 48
                          },
                          "end": {
                            "row": 13,
                            "column": 75
                          },
                          "text": "\", but the Vec is of type \"",
                          "children": [
                            {
                              "type": "\"",
                              "start": {
                                "row": 13,
                                "column": 48
                              },
                              "end": {
                                "row": 13,
                                "column": 49
                              },
                              "text": "\""
                            },
                            {
                              "type": "string_fragment",
                              "start": {
                                "row": 13,
                                "column": 49
                              },
                              "end": {
                                "row": 13,
                                "column": 74
                              },
                              "text": ", but the Vec is of type "
                            },
                            {
                              "type": "\"",
                              "start": {
                                "row": 13,
                                "column": 74
                              },
                              "end": {
                                "row": 13,
                                "column": 75
                              },
                              "text": "\""
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "+",
                      "start": {
                        "row": 13,
                        "column": 75
                      },
                      "end": {
                        "row": 13,
                        "column": 76
                      },
                      "text": "+"
                    },
                    {
                      "type": "method_invocation",
                      "start": {
                        "row": 13,
                        "column": 76
                      },
                      "end": {
                        "row": 13,
                        "column": 95
                      },
                      "text": "_vec.get_type_str()",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 13,
                            "column": 76
                          },
                          "end": {
                            "row": 13,
                            "column": 80
                          },
                          "text": "_vec"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 13,
                            "column": 80
                          },
                          "end": {
                            "row": 13,
                            "column": 81
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 13,
                            "column": 81
                          },
                          "end": {
                            "row": 13,
                            "column": 93
                          },
                          "text": "get_type_str"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 13,
                            "column": 93
                          },
                          "end": {
                            "row": 13,
                            "column": 95
                          },
                          "text": "()",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 13,
                                "column": 93
                              },
                              "end": {
                                "row": 13,
                                "column": 94
                              },
                              "text": "("
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 13,
                                "column": 94
                              },
                              "end": {
                                "row": 13,
                                "column": 95
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 13,
                    "column": 95
                  },
                  "end": {
                    "row": 13,
                    "column": 96
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "assert_statement",
              "start": {
                "row": 14,
                "column": 4
              },
              "end": {
                "row": 14,
                "column": 93
              },
              "text": "assert _len == res._len : \"NewChunk has length \"+_len+\", compressed Chunk has \"+res._len;",
              "children": [
                {
                  "type": "assert",
                  "start": {
                    "row": 14,
                    "column": 4
                  },
                  "end": {
                    "row": 14,
                    "column": 10
                  },
                  "text": "assert"
                },
                {
                  "type": "binary_expression",
                  "start": {
                    "row": 14,
                    "column": 11
                  },
                  "end": {
                    "row": 14,
                    "column": 27
                  },
                  "text": "_len == res._len",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 14,
                        "column": 11
                      },
                      "end": {
                        "row": 14,
                        "column": 15
                      },
                      "text": "_len"
                    },
                    {
                      "type": "==",
                      "start": {
                        "row": 14,
                        "column": 16
                      },
                      "end": {
                        "row": 14,
                        "column": 18
                      },
                      "text": "=="
                    },
                    {
                      "type": "field_access",
                      "start": {
                        "row": 14,
                        "column": 19
                      },
                      "end": {
                        "row": 14,
                        "column": 27
                      },
                      "text": "res._len",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 14,
                            "column": 19
                          },
                          "end": {
                            "row": 14,
                            "column": 22
                          },
                          "text": "res"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 14,
                            "column": 22
                          },
                          "end": {
                            "row": 14,
                            "column": 23
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 14,
                            "column": 23
                          },
                          "end": {
                            "row": 14,
                            "column": 27
                          },
                          "text": "_len"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 14,
                    "column": 28
                  },
                  "end": {
                    "row": 14,
                    "column": 29
                  },
                  "text": ":"
                },
                {
                  "type": "binary_expression",
                  "start": {
                    "row": 14,
                    "column": 30
                  },
                  "end": {
                    "row": 14,
                    "column": 92
                  },
                  "text": "\"NewChunk has length \"+_len+\", compressed Chunk has \"+res._len",
                  "children": [
                    {
                      "type": "binary_expression",
                      "start": {
                        "row": 14,
                        "column": 30
                      },
                      "end": {
                        "row": 14,
                        "column": 83
                      },
                      "text": "\"NewChunk has length \"+_len+\", compressed Chunk has \"",
                      "children": [
                        {
                          "type": "binary_expression",
                          "start": {
                            "row": 14,
                            "column": 30
                          },
                          "end": {
                            "row": 14,
                            "column": 57
                          },
                          "text": "\"NewChunk has length \"+_len",
                          "children": [
                            {
                              "type": "string_literal",
                              "start": {
                                "row": 14,
                                "column": 30
                              },
                              "end": {
                                "row": 14,
                                "column": 52
                              },
                              "text": "\"NewChunk has length \"",
                              "children": [
                                {
                                  "type": "\"",
                                  "start": {
                                    "row": 14,
                                    "column": 30
                                  },
                                  "end": {
                                    "row": 14,
                                    "column": 31
                                  },
                                  "text": "\""
                                },
                                {
                                  "type": "string_fragment",
                                  "start": {
                                    "row": 14,
                                    "column": 31
                                  },
                                  "end": {
                                    "row": 14,
                                    "column": 51
                                  },
                                  "text": "NewChunk has length "
                                },
                                {
                                  "type": "\"",
                                  "start": {
                                    "row": 14,
                                    "column": 51
                                  },
                                  "end": {
                                    "row": 14,
                                    "column": 52
                                  },
                                  "text": "\""
                                }
                              ]
                            },
                            {
                              "type": "+",
                              "start": {
                                "row": 14,
                                "column": 52
                              },
                              "end": {
                                "row": 14,
                                "column": 53
                              },
                              "text": "+"
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 14,
                                "column": 53
                              },
                              "end": {
                                "row": 14,
                                "column": 57
                              },
                              "text": "_len"
                            }
                          ]
                        },
                        {
                          "type": "+",
                          "start": {
                            "row": 14,
                            "column": 57
                          },
                          "end": {
                            "row": 14,
                            "column": 58
                          },
                          "text": "+"
                        },
                        {
                          "type": "string_literal",
                          "start": {
                            "row": 14,
                            "column": 58
                          },
                          "end": {
                            "row": 14,
                            "column": 83
                          },
                          "text": "\", compressed Chunk has \"",
                          "children": [
                            {
                              "type": "\"",
                              "start": {
                                "row": 14,
                                "column": 58
                              },
                              "end": {
                                "row": 14,
                                "column": 59
                              },
                              "text": "\""
                            },
                            {
                              "type": "string_fragment",
                              "start": {
                                "row": 14,
                                "column": 59
                              },
                              "end": {
                                "row": 14,
                                "column": 82
                              },
                              "text": ", compressed Chunk has "
                            },
                            {
                              "type": "\"",
                              "start": {
                                "row": 14,
                                "column": 82
                              },
                              "end": {
                                "row": 14,
                                "column": 83
                              },
                              "text": "\""
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "+",
                      "start": {
                        "row": 14,
                        "column": 83
                      },
                      "end": {
                        "row": 14,
                        "column": 84
                      },
                      "text": "+"
                    },
                    {
                      "type": "field_access",
                      "start": {
                        "row": 14,
                        "column": 84
                      },
                      "end": {
                        "row": 14,
                        "column": 92
                      },
                      "text": "res._len",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 14,
                            "column": 84
                          },
                          "end": {
                            "row": 14,
                            "column": 87
                          },
                          "text": "res"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 14,
                            "column": 87
                          },
                          "end": {
                            "row": 14,
                            "column": 88
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 14,
                            "column": 88
                          },
                          "end": {
                            "row": 14,
                            "column": 92
                          },
                          "text": "_len"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 14,
                    "column": 92
                  },
                  "end": {
                    "row": 14,
                    "column": 93
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "line_comment",
              "start": {
                "row": 15,
                "column": 4
              },
              "end": {
                "row": 15,
                "column": 76
              },
              "text": "// Force everything to null after compress to free up the memory.  Seems"
            },
            {
              "type": "line_comment",
              "start": {
                "row": 16,
                "column": 4
              },
              "end": {
                "row": 16,
                "column": 76
              },
              "text": "// like a non-issue in the land of GC, but the NewChunk *should* be dead"
            },
            {
              "type": "line_comment",
              "start": {
                "row": 17,
                "column": 4
              },
              "end": {
                "row": 17,
                "column": 77
              },
              "text": "// after this, but might drag on.  The arrays are large, and during a big"
            },
            {
              "type": "line_comment",
              "start": {
                "row": 18,
                "column": 4
              },
              "end": {
                "row": 18,
                "column": 77
              },
              "text": "// Parse there's lots and lots of them... so free early just in case a GC"
            },
            {
              "type": "line_comment",
              "start": {
                "row": 19,
                "column": 4
              },
              "end": {
                "row": 19,
                "column": 61
              },
              "text": "// happens before the drag-time on the NewChunk finishes."
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 20,
                "column": 4
              },
              "end": {
                "row": 20,
                "column": 15
              },
              "text": "_id = null;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start": {
                    "row": 20,
                    "column": 4
                  },
                  "end": {
                    "row": 20,
                    "column": 14
                  },
                  "text": "_id = null",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 20,
                        "column": 4
                      },
                      "end": {
                        "row": 20,
                        "column": 7
                      },
                      "text": "_id"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 20,
                        "column": 8
                      },
                      "end": {
                        "row": 20,
                        "column": 9
                      },
                      "text": "="
                    },
                    {
                      "type": "null_literal",
                      "start": {
                        "row": 20,
                        "column": 10
                      },
                      "end": {
                        "row": 20,
                        "column": 14
                      },
                      "text": "null"
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 20,
                    "column": 14
                  },
                  "end": {
                    "row": 20,
                    "column": 15
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 21,
                "column": 4
              },
              "end": {
                "row": 21,
                "column": 15
              },
              "text": "_xs = null;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start": {
                    "row": 21,
                    "column": 4
                  },
                  "end": {
                    "row": 21,
                    "column": 14
                  },
                  "text": "_xs = null",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 21,
                        "column": 4
                      },
                      "end": {
                        "row": 21,
                        "column": 7
                      },
                      "text": "_xs"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 21,
                        "column": 8
                      },
                      "end": {
                        "row": 21,
                        "column": 9
                      },
                      "text": "="
                    },
                    {
                      "type": "null_literal",
                      "start": {
                        "row": 21,
                        "column": 10
                      },
                      "end": {
                        "row": 21,
                        "column": 14
                      },
                      "text": "null"
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 21,
                    "column": 14
                  },
                  "end": {
                    "row": 21,
                    "column": 15
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 22,
                "column": 4
              },
              "end": {
                "row": 22,
                "column": 15
              },
              "text": "_ds = null;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start": {
                    "row": 22,
                    "column": 4
                  },
                  "end": {
                    "row": 22,
                    "column": 14
                  },
                  "text": "_ds = null",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 22,
                        "column": 4
                      },
                      "end": {
                        "row": 22,
                        "column": 7
                      },
                      "text": "_ds"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 22,
                        "column": 8
                      },
                      "end": {
                        "row": 22,
                        "column": 9
                      },
                      "text": "="
                    },
                    {
                      "type": "null_literal",
                      "start": {
                        "row": 22,
                        "column": 10
                      },
                      "end": {
                        "row": 22,
                        "column": 14
                      },
                      "text": "null"
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 22,
                    "column": 14
                  },
                  "end": {
                    "row": 22,
                    "column": 15
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 23,
                "column": 4
              },
              "end": {
                "row": 23,
                "column": 15
              },
              "text": "_ms = null;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start": {
                    "row": 23,
                    "column": 4
                  },
                  "end": {
                    "row": 23,
                    "column": 14
                  },
                  "text": "_ms = null",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 23,
                        "column": 4
                      },
                      "end": {
                        "row": 23,
                        "column": 7
                      },
                      "text": "_ms"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 23,
                        "column": 8
                      },
                      "end": {
                        "row": 23,
                        "column": 9
                      },
                      "text": "="
                    },
                    {
                      "type": "null_literal",
                      "start": {
                        "row": 23,
                        "column": 10
                      },
                      "end": {
                        "row": 23,
                        "column": 14
                      },
                      "text": "null"
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 23,
                    "column": 14
                  },
                  "end": {
                    "row": 23,
                    "column": 15
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 24,
                "column": 4
              },
              "end": {
                "row": 24,
                "column": 15
              },
              "text": "_is = null;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start": {
                    "row": 24,
                    "column": 4
                  },
                  "end": {
                    "row": 24,
                    "column": 14
                  },
                  "text": "_is = null",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 24,
                        "column": 4
                      },
                      "end": {
                        "row": 24,
                        "column": 7
                      },
                      "text": "_is"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 24,
                        "column": 8
                      },
                      "end": {
                        "row": 24,
                        "column": 9
                      },
                      "text": "="
                    },
                    {
                      "type": "null_literal",
                      "start": {
                        "row": 24,
                        "column": 10
                      },
                      "end": {
                        "row": 24,
                        "column": 14
                      },
                      "text": "null"
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 24,
                    "column": 14
                  },
                  "end": {
                    "row": 24,
                    "column": 15
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 25,
                "column": 4
              },
              "end": {
                "row": 25,
                "column": 15
              },
              "text": "_ss = null;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start": {
                    "row": 25,
                    "column": 4
                  },
                  "end": {
                    "row": 25,
                    "column": 14
                  },
                  "text": "_ss = null",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 25,
                        "column": 4
                      },
                      "end": {
                        "row": 25,
                        "column": 7
                      },
                      "text": "_ss"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 25,
                        "column": 8
                      },
                      "end": {
                        "row": 25,
                        "column": 9
                      },
                      "text": "="
                    },
                    {
                      "type": "null_literal",
                      "start": {
                        "row": 25,
                        "column": 10
                      },
                      "end": {
                        "row": 25,
                        "column": 14
                      },
                      "text": "null"
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 25,
                    "column": 14
                  },
                  "end": {
                    "row": 25,
                    "column": 15
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 26,
                "column": 4
              },
              "end": {
                "row": 26,
                "column": 15
              },
              "text": "return res;",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 26,
                    "column": 4
                  },
                  "end": {
                    "row": 26,
                    "column": 10
                  },
                  "text": "return"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 26,
                    "column": 11
                  },
                  "end": {
                    "row": 26,
                    "column": 14
                  },
                  "text": "res"
                },
                {
                  "type": ";",
                  "start": {
                    "row": 26,
                    "column": 14
                  },
                  "end": {
                    "row": 26,
                    "column": 15
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "}",
              "start": {
                "row": 27,
                "column": 2
              },
              "end": {
                "row": 27,
                "column": 3
              },
              "text": "}"
            }
          ]
        }
      ]
    }
  ]
}