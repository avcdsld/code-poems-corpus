{
  "type": "program",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 12,
    "column": 5
  },
  "text": "public static void validateCnn1DKernelStridePadding(int kernel, int stride, int padding) {\n\n        if (kernel <= 0) {\n            throw new IllegalStateException(\"Invalid kernel size: value must be positive (> 0). Got: \" + kernel);\n        }\n        if (stride <= 0) {\n            throw new IllegalStateException(\"Invalid kernel size: value must be positive (> 0). Got: \" + stride);\n\n        }\n        if (padding < 0) {\n            throw new IllegalStateException(\"Invalid kernel size: value must be positive (> 0). Got: \" + padding);\n        }\n    }",
  "children": [
    {
      "type": "method_declaration",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 12,
        "column": 5
      },
      "text": "public static void validateCnn1DKernelStridePadding(int kernel, int stride, int padding) {\n\n        if (kernel <= 0) {\n            throw new IllegalStateException(\"Invalid kernel size: value must be positive (> 0). Got: \" + kernel);\n        }\n        if (stride <= 0) {\n            throw new IllegalStateException(\"Invalid kernel size: value must be positive (> 0). Got: \" + stride);\n\n        }\n        if (padding < 0) {\n            throw new IllegalStateException(\"Invalid kernel size: value must be positive (> 0). Got: \" + padding);\n        }\n    }",
      "children": [
        {
          "type": "modifiers",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 13
          },
          "text": "public static",
          "children": [
            {
              "type": "public",
              "start": {
                "row": 0,
                "column": 0
              },
              "end": {
                "row": 0,
                "column": 6
              },
              "text": "public"
            },
            {
              "type": "static",
              "start": {
                "row": 0,
                "column": 7
              },
              "end": {
                "row": 0,
                "column": 13
              },
              "text": "static"
            }
          ]
        },
        {
          "type": "void_type",
          "start": {
            "row": 0,
            "column": 14
          },
          "end": {
            "row": 0,
            "column": 18
          },
          "text": "void"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 19
          },
          "end": {
            "row": 0,
            "column": 51
          },
          "text": "validateCnn1DKernelStridePadding"
        },
        {
          "type": "formal_parameters",
          "start": {
            "row": 0,
            "column": 51
          },
          "end": {
            "row": 0,
            "column": 88
          },
          "text": "(int kernel, int stride, int padding)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 51
              },
              "end": {
                "row": 0,
                "column": 52
              },
              "text": "("
            },
            {
              "type": "formal_parameter",
              "start": {
                "row": 0,
                "column": 52
              },
              "end": {
                "row": 0,
                "column": 62
              },
              "text": "int kernel",
              "children": [
                {
                  "type": "integral_type",
                  "start": {
                    "row": 0,
                    "column": 52
                  },
                  "end": {
                    "row": 0,
                    "column": 55
                  },
                  "text": "int",
                  "children": [
                    {
                      "type": "int",
                      "start": {
                        "row": 0,
                        "column": 52
                      },
                      "end": {
                        "row": 0,
                        "column": 55
                      },
                      "text": "int"
                    }
                  ]
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 56
                  },
                  "end": {
                    "row": 0,
                    "column": 62
                  },
                  "text": "kernel"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 62
              },
              "end": {
                "row": 0,
                "column": 63
              },
              "text": ","
            },
            {
              "type": "formal_parameter",
              "start": {
                "row": 0,
                "column": 64
              },
              "end": {
                "row": 0,
                "column": 74
              },
              "text": "int stride",
              "children": [
                {
                  "type": "integral_type",
                  "start": {
                    "row": 0,
                    "column": 64
                  },
                  "end": {
                    "row": 0,
                    "column": 67
                  },
                  "text": "int",
                  "children": [
                    {
                      "type": "int",
                      "start": {
                        "row": 0,
                        "column": 64
                      },
                      "end": {
                        "row": 0,
                        "column": 67
                      },
                      "text": "int"
                    }
                  ]
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 68
                  },
                  "end": {
                    "row": 0,
                    "column": 74
                  },
                  "text": "stride"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 74
              },
              "end": {
                "row": 0,
                "column": 75
              },
              "text": ","
            },
            {
              "type": "formal_parameter",
              "start": {
                "row": 0,
                "column": 76
              },
              "end": {
                "row": 0,
                "column": 87
              },
              "text": "int padding",
              "children": [
                {
                  "type": "integral_type",
                  "start": {
                    "row": 0,
                    "column": 76
                  },
                  "end": {
                    "row": 0,
                    "column": 79
                  },
                  "text": "int",
                  "children": [
                    {
                      "type": "int",
                      "start": {
                        "row": 0,
                        "column": 76
                      },
                      "end": {
                        "row": 0,
                        "column": 79
                      },
                      "text": "int"
                    }
                  ]
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 80
                  },
                  "end": {
                    "row": 0,
                    "column": 87
                  },
                  "text": "padding"
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 87
              },
              "end": {
                "row": 0,
                "column": 88
              },
              "text": ")"
            }
          ]
        },
        {
          "type": "block",
          "start": {
            "row": 0,
            "column": 89
          },
          "end": {
            "row": 12,
            "column": 5
          },
          "text": "{\n\n        if (kernel <= 0) {\n            throw new IllegalStateException(\"Invalid kernel size: value must be positive (> 0). Got: \" + kernel);\n        }\n        if (stride <= 0) {\n            throw new IllegalStateException(\"Invalid kernel size: value must be positive (> 0). Got: \" + stride);\n\n        }\n        if (padding < 0) {\n            throw new IllegalStateException(\"Invalid kernel size: value must be positive (> 0). Got: \" + padding);\n        }\n    }",
          "children": [
            {
              "type": "{",
              "start": {
                "row": 0,
                "column": 89
              },
              "end": {
                "row": 0,
                "column": 90
              },
              "text": "{"
            },
            {
              "type": "if_statement",
              "start": {
                "row": 2,
                "column": 8
              },
              "end": {
                "row": 4,
                "column": 9
              },
              "text": "if (kernel <= 0) {\n            throw new IllegalStateException(\"Invalid kernel size: value must be positive (> 0). Got: \" + kernel);\n        }",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 2,
                    "column": 8
                  },
                  "end": {
                    "row": 2,
                    "column": 10
                  },
                  "text": "if"
                },
                {
                  "type": "condition",
                  "start": {
                    "row": 2,
                    "column": 11
                  },
                  "end": {
                    "row": 2,
                    "column": 24
                  },
                  "text": "(kernel <= 0)",
                  "children": [
                    {
                      "type": "(",
                      "start": {
                        "row": 2,
                        "column": 11
                      },
                      "end": {
                        "row": 2,
                        "column": 12
                      },
                      "text": "("
                    },
                    {
                      "type": "binary_expression",
                      "start": {
                        "row": 2,
                        "column": 12
                      },
                      "end": {
                        "row": 2,
                        "column": 23
                      },
                      "text": "kernel <= 0",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 2,
                            "column": 12
                          },
                          "end": {
                            "row": 2,
                            "column": 18
                          },
                          "text": "kernel"
                        },
                        {
                          "type": "<=",
                          "start": {
                            "row": 2,
                            "column": 19
                          },
                          "end": {
                            "row": 2,
                            "column": 21
                          },
                          "text": "<="
                        },
                        {
                          "type": "decimal_integer_literal",
                          "start": {
                            "row": 2,
                            "column": 22
                          },
                          "end": {
                            "row": 2,
                            "column": 23
                          },
                          "text": "0"
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start": {
                        "row": 2,
                        "column": 23
                      },
                      "end": {
                        "row": 2,
                        "column": 24
                      },
                      "text": ")"
                    }
                  ]
                },
                {
                  "type": "block",
                  "start": {
                    "row": 2,
                    "column": 25
                  },
                  "end": {
                    "row": 4,
                    "column": 9
                  },
                  "text": "{\n            throw new IllegalStateException(\"Invalid kernel size: value must be positive (> 0). Got: \" + kernel);\n        }",
                  "children": [
                    {
                      "type": "{",
                      "start": {
                        "row": 2,
                        "column": 25
                      },
                      "end": {
                        "row": 2,
                        "column": 26
                      },
                      "text": "{"
                    },
                    {
                      "type": "throw_statement",
                      "start": {
                        "row": 3,
                        "column": 12
                      },
                      "end": {
                        "row": 3,
                        "column": 113
                      },
                      "text": "throw new IllegalStateException(\"Invalid kernel size: value must be positive (> 0). Got: \" + kernel);",
                      "children": [
                        {
                          "type": "throw",
                          "start": {
                            "row": 3,
                            "column": 12
                          },
                          "end": {
                            "row": 3,
                            "column": 17
                          },
                          "text": "throw"
                        },
                        {
                          "type": "object_creation_expression",
                          "start": {
                            "row": 3,
                            "column": 18
                          },
                          "end": {
                            "row": 3,
                            "column": 112
                          },
                          "text": "new IllegalStateException(\"Invalid kernel size: value must be positive (> 0). Got: \" + kernel)",
                          "children": [
                            {
                              "type": "new",
                              "start": {
                                "row": 3,
                                "column": 18
                              },
                              "end": {
                                "row": 3,
                                "column": 21
                              },
                              "text": "new"
                            },
                            {
                              "type": "type_identifier",
                              "start": {
                                "row": 3,
                                "column": 22
                              },
                              "end": {
                                "row": 3,
                                "column": 43
                              },
                              "text": "IllegalStateException"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 3,
                                "column": 43
                              },
                              "end": {
                                "row": 3,
                                "column": 112
                              },
                              "text": "(\"Invalid kernel size: value must be positive (> 0). Got: \" + kernel)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 3,
                                    "column": 43
                                  },
                                  "end": {
                                    "row": 3,
                                    "column": 44
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "binary_expression",
                                  "start": {
                                    "row": 3,
                                    "column": 44
                                  },
                                  "end": {
                                    "row": 3,
                                    "column": 111
                                  },
                                  "text": "\"Invalid kernel size: value must be positive (> 0). Got: \" + kernel",
                                  "children": [
                                    {
                                      "type": "string_literal",
                                      "start": {
                                        "row": 3,
                                        "column": 44
                                      },
                                      "end": {
                                        "row": 3,
                                        "column": 102
                                      },
                                      "text": "\"Invalid kernel size: value must be positive (> 0). Got: \"",
                                      "children": [
                                        {
                                          "type": "\"",
                                          "start": {
                                            "row": 3,
                                            "column": 44
                                          },
                                          "end": {
                                            "row": 3,
                                            "column": 45
                                          },
                                          "text": "\""
                                        },
                                        {
                                          "type": "string_fragment",
                                          "start": {
                                            "row": 3,
                                            "column": 45
                                          },
                                          "end": {
                                            "row": 3,
                                            "column": 101
                                          },
                                          "text": "Invalid kernel size: value must be positive (> 0). Got: "
                                        },
                                        {
                                          "type": "\"",
                                          "start": {
                                            "row": 3,
                                            "column": 101
                                          },
                                          "end": {
                                            "row": 3,
                                            "column": 102
                                          },
                                          "text": "\""
                                        }
                                      ]
                                    },
                                    {
                                      "type": "+",
                                      "start": {
                                        "row": 3,
                                        "column": 103
                                      },
                                      "end": {
                                        "row": 3,
                                        "column": 104
                                      },
                                      "text": "+"
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 3,
                                        "column": 105
                                      },
                                      "end": {
                                        "row": 3,
                                        "column": 111
                                      },
                                      "text": "kernel"
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 3,
                                    "column": 111
                                  },
                                  "end": {
                                    "row": 3,
                                    "column": 112
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start": {
                            "row": 3,
                            "column": 112
                          },
                          "end": {
                            "row": 3,
                            "column": 113
                          },
                          "text": ";"
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start": {
                        "row": 4,
                        "column": 8
                      },
                      "end": {
                        "row": 4,
                        "column": 9
                      },
                      "text": "}"
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 5,
                "column": 8
              },
              "end": {
                "row": 8,
                "column": 9
              },
              "text": "if (stride <= 0) {\n            throw new IllegalStateException(\"Invalid kernel size: value must be positive (> 0). Got: \" + stride);\n\n        }",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 5,
                    "column": 8
                  },
                  "end": {
                    "row": 5,
                    "column": 10
                  },
                  "text": "if"
                },
                {
                  "type": "condition",
                  "start": {
                    "row": 5,
                    "column": 11
                  },
                  "end": {
                    "row": 5,
                    "column": 24
                  },
                  "text": "(stride <= 0)",
                  "children": [
                    {
                      "type": "(",
                      "start": {
                        "row": 5,
                        "column": 11
                      },
                      "end": {
                        "row": 5,
                        "column": 12
                      },
                      "text": "("
                    },
                    {
                      "type": "binary_expression",
                      "start": {
                        "row": 5,
                        "column": 12
                      },
                      "end": {
                        "row": 5,
                        "column": 23
                      },
                      "text": "stride <= 0",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 5,
                            "column": 12
                          },
                          "end": {
                            "row": 5,
                            "column": 18
                          },
                          "text": "stride"
                        },
                        {
                          "type": "<=",
                          "start": {
                            "row": 5,
                            "column": 19
                          },
                          "end": {
                            "row": 5,
                            "column": 21
                          },
                          "text": "<="
                        },
                        {
                          "type": "decimal_integer_literal",
                          "start": {
                            "row": 5,
                            "column": 22
                          },
                          "end": {
                            "row": 5,
                            "column": 23
                          },
                          "text": "0"
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start": {
                        "row": 5,
                        "column": 23
                      },
                      "end": {
                        "row": 5,
                        "column": 24
                      },
                      "text": ")"
                    }
                  ]
                },
                {
                  "type": "block",
                  "start": {
                    "row": 5,
                    "column": 25
                  },
                  "end": {
                    "row": 8,
                    "column": 9
                  },
                  "text": "{\n            throw new IllegalStateException(\"Invalid kernel size: value must be positive (> 0). Got: \" + stride);\n\n        }",
                  "children": [
                    {
                      "type": "{",
                      "start": {
                        "row": 5,
                        "column": 25
                      },
                      "end": {
                        "row": 5,
                        "column": 26
                      },
                      "text": "{"
                    },
                    {
                      "type": "throw_statement",
                      "start": {
                        "row": 6,
                        "column": 12
                      },
                      "end": {
                        "row": 6,
                        "column": 113
                      },
                      "text": "throw new IllegalStateException(\"Invalid kernel size: value must be positive (> 0). Got: \" + stride);",
                      "children": [
                        {
                          "type": "throw",
                          "start": {
                            "row": 6,
                            "column": 12
                          },
                          "end": {
                            "row": 6,
                            "column": 17
                          },
                          "text": "throw"
                        },
                        {
                          "type": "object_creation_expression",
                          "start": {
                            "row": 6,
                            "column": 18
                          },
                          "end": {
                            "row": 6,
                            "column": 112
                          },
                          "text": "new IllegalStateException(\"Invalid kernel size: value must be positive (> 0). Got: \" + stride)",
                          "children": [
                            {
                              "type": "new",
                              "start": {
                                "row": 6,
                                "column": 18
                              },
                              "end": {
                                "row": 6,
                                "column": 21
                              },
                              "text": "new"
                            },
                            {
                              "type": "type_identifier",
                              "start": {
                                "row": 6,
                                "column": 22
                              },
                              "end": {
                                "row": 6,
                                "column": 43
                              },
                              "text": "IllegalStateException"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 6,
                                "column": 43
                              },
                              "end": {
                                "row": 6,
                                "column": 112
                              },
                              "text": "(\"Invalid kernel size: value must be positive (> 0). Got: \" + stride)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 6,
                                    "column": 43
                                  },
                                  "end": {
                                    "row": 6,
                                    "column": 44
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "binary_expression",
                                  "start": {
                                    "row": 6,
                                    "column": 44
                                  },
                                  "end": {
                                    "row": 6,
                                    "column": 111
                                  },
                                  "text": "\"Invalid kernel size: value must be positive (> 0). Got: \" + stride",
                                  "children": [
                                    {
                                      "type": "string_literal",
                                      "start": {
                                        "row": 6,
                                        "column": 44
                                      },
                                      "end": {
                                        "row": 6,
                                        "column": 102
                                      },
                                      "text": "\"Invalid kernel size: value must be positive (> 0). Got: \"",
                                      "children": [
                                        {
                                          "type": "\"",
                                          "start": {
                                            "row": 6,
                                            "column": 44
                                          },
                                          "end": {
                                            "row": 6,
                                            "column": 45
                                          },
                                          "text": "\""
                                        },
                                        {
                                          "type": "string_fragment",
                                          "start": {
                                            "row": 6,
                                            "column": 45
                                          },
                                          "end": {
                                            "row": 6,
                                            "column": 101
                                          },
                                          "text": "Invalid kernel size: value must be positive (> 0). Got: "
                                        },
                                        {
                                          "type": "\"",
                                          "start": {
                                            "row": 6,
                                            "column": 101
                                          },
                                          "end": {
                                            "row": 6,
                                            "column": 102
                                          },
                                          "text": "\""
                                        }
                                      ]
                                    },
                                    {
                                      "type": "+",
                                      "start": {
                                        "row": 6,
                                        "column": 103
                                      },
                                      "end": {
                                        "row": 6,
                                        "column": 104
                                      },
                                      "text": "+"
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 6,
                                        "column": 105
                                      },
                                      "end": {
                                        "row": 6,
                                        "column": 111
                                      },
                                      "text": "stride"
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 6,
                                    "column": 111
                                  },
                                  "end": {
                                    "row": 6,
                                    "column": 112
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start": {
                            "row": 6,
                            "column": 112
                          },
                          "end": {
                            "row": 6,
                            "column": 113
                          },
                          "text": ";"
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start": {
                        "row": 8,
                        "column": 8
                      },
                      "end": {
                        "row": 8,
                        "column": 9
                      },
                      "text": "}"
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 9,
                "column": 8
              },
              "end": {
                "row": 11,
                "column": 9
              },
              "text": "if (padding < 0) {\n            throw new IllegalStateException(\"Invalid kernel size: value must be positive (> 0). Got: \" + padding);\n        }",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 9,
                    "column": 8
                  },
                  "end": {
                    "row": 9,
                    "column": 10
                  },
                  "text": "if"
                },
                {
                  "type": "condition",
                  "start": {
                    "row": 9,
                    "column": 11
                  },
                  "end": {
                    "row": 9,
                    "column": 24
                  },
                  "text": "(padding < 0)",
                  "children": [
                    {
                      "type": "(",
                      "start": {
                        "row": 9,
                        "column": 11
                      },
                      "end": {
                        "row": 9,
                        "column": 12
                      },
                      "text": "("
                    },
                    {
                      "type": "binary_expression",
                      "start": {
                        "row": 9,
                        "column": 12
                      },
                      "end": {
                        "row": 9,
                        "column": 23
                      },
                      "text": "padding < 0",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 9,
                            "column": 12
                          },
                          "end": {
                            "row": 9,
                            "column": 19
                          },
                          "text": "padding"
                        },
                        {
                          "type": "<",
                          "start": {
                            "row": 9,
                            "column": 20
                          },
                          "end": {
                            "row": 9,
                            "column": 21
                          },
                          "text": "<"
                        },
                        {
                          "type": "decimal_integer_literal",
                          "start": {
                            "row": 9,
                            "column": 22
                          },
                          "end": {
                            "row": 9,
                            "column": 23
                          },
                          "text": "0"
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start": {
                        "row": 9,
                        "column": 23
                      },
                      "end": {
                        "row": 9,
                        "column": 24
                      },
                      "text": ")"
                    }
                  ]
                },
                {
                  "type": "block",
                  "start": {
                    "row": 9,
                    "column": 25
                  },
                  "end": {
                    "row": 11,
                    "column": 9
                  },
                  "text": "{\n            throw new IllegalStateException(\"Invalid kernel size: value must be positive (> 0). Got: \" + padding);\n        }",
                  "children": [
                    {
                      "type": "{",
                      "start": {
                        "row": 9,
                        "column": 25
                      },
                      "end": {
                        "row": 9,
                        "column": 26
                      },
                      "text": "{"
                    },
                    {
                      "type": "throw_statement",
                      "start": {
                        "row": 10,
                        "column": 12
                      },
                      "end": {
                        "row": 10,
                        "column": 114
                      },
                      "text": "throw new IllegalStateException(\"Invalid kernel size: value must be positive (> 0). Got: \" + padding);",
                      "children": [
                        {
                          "type": "throw",
                          "start": {
                            "row": 10,
                            "column": 12
                          },
                          "end": {
                            "row": 10,
                            "column": 17
                          },
                          "text": "throw"
                        },
                        {
                          "type": "object_creation_expression",
                          "start": {
                            "row": 10,
                            "column": 18
                          },
                          "end": {
                            "row": 10,
                            "column": 113
                          },
                          "text": "new IllegalStateException(\"Invalid kernel size: value must be positive (> 0). Got: \" + padding)",
                          "children": [
                            {
                              "type": "new",
                              "start": {
                                "row": 10,
                                "column": 18
                              },
                              "end": {
                                "row": 10,
                                "column": 21
                              },
                              "text": "new"
                            },
                            {
                              "type": "type_identifier",
                              "start": {
                                "row": 10,
                                "column": 22
                              },
                              "end": {
                                "row": 10,
                                "column": 43
                              },
                              "text": "IllegalStateException"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 10,
                                "column": 43
                              },
                              "end": {
                                "row": 10,
                                "column": 113
                              },
                              "text": "(\"Invalid kernel size: value must be positive (> 0). Got: \" + padding)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 10,
                                    "column": 43
                                  },
                                  "end": {
                                    "row": 10,
                                    "column": 44
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "binary_expression",
                                  "start": {
                                    "row": 10,
                                    "column": 44
                                  },
                                  "end": {
                                    "row": 10,
                                    "column": 112
                                  },
                                  "text": "\"Invalid kernel size: value must be positive (> 0). Got: \" + padding",
                                  "children": [
                                    {
                                      "type": "string_literal",
                                      "start": {
                                        "row": 10,
                                        "column": 44
                                      },
                                      "end": {
                                        "row": 10,
                                        "column": 102
                                      },
                                      "text": "\"Invalid kernel size: value must be positive (> 0). Got: \"",
                                      "children": [
                                        {
                                          "type": "\"",
                                          "start": {
                                            "row": 10,
                                            "column": 44
                                          },
                                          "end": {
                                            "row": 10,
                                            "column": 45
                                          },
                                          "text": "\""
                                        },
                                        {
                                          "type": "string_fragment",
                                          "start": {
                                            "row": 10,
                                            "column": 45
                                          },
                                          "end": {
                                            "row": 10,
                                            "column": 101
                                          },
                                          "text": "Invalid kernel size: value must be positive (> 0). Got: "
                                        },
                                        {
                                          "type": "\"",
                                          "start": {
                                            "row": 10,
                                            "column": 101
                                          },
                                          "end": {
                                            "row": 10,
                                            "column": 102
                                          },
                                          "text": "\""
                                        }
                                      ]
                                    },
                                    {
                                      "type": "+",
                                      "start": {
                                        "row": 10,
                                        "column": 103
                                      },
                                      "end": {
                                        "row": 10,
                                        "column": 104
                                      },
                                      "text": "+"
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 10,
                                        "column": 105
                                      },
                                      "end": {
                                        "row": 10,
                                        "column": 112
                                      },
                                      "text": "padding"
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 10,
                                    "column": 112
                                  },
                                  "end": {
                                    "row": 10,
                                    "column": 113
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start": {
                            "row": 10,
                            "column": 113
                          },
                          "end": {
                            "row": 10,
                            "column": 114
                          },
                          "text": ";"
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start": {
                        "row": 11,
                        "column": 8
                      },
                      "end": {
                        "row": 11,
                        "column": 9
                      },
                      "text": "}"
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start": {
                "row": 12,
                "column": 4
              },
              "end": {
                "row": 12,
                "column": 5
              },
              "text": "}"
            }
          ]
        }
      ]
    }
  ]
}