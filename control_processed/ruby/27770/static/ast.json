{
  "type": "program",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 18,
    "column": 7
  },
  "text": "def merged(revision)\n      # By hand, build a list of all branches known to be merged into master\n      git_args = ['branch', '-a', '--merged', revision]\n      all_merged = []\n      @repo.git_output(git_args).lines.each do |line|\n        line.strip!\n        all_merged << Branch.new(@repo, line)\n      end\n\n      # Filter the contents of this collection according to the big list\n      merged = []\n      @branches.each do |candidate|\n        # For some reason Set#include? does not play nice with our overridden comparison operators\n        # for branches, so we need to do this the hard way :(\n        merged << candidate if all_merged.detect { |b| candidate == b }\n      end\n\n      BranchCollection.new(@repo, merged)\n    end",
  "children": [
    {
      "type": "method",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 18,
        "column": 7
      },
      "text": "def merged(revision)\n      # By hand, build a list of all branches known to be merged into master\n      git_args = ['branch', '-a', '--merged', revision]\n      all_merged = []\n      @repo.git_output(git_args).lines.each do |line|\n        line.strip!\n        all_merged << Branch.new(@repo, line)\n      end\n\n      # Filter the contents of this collection according to the big list\n      merged = []\n      @branches.each do |candidate|\n        # For some reason Set#include? does not play nice with our overridden comparison operators\n        # for branches, so we need to do this the hard way :(\n        merged << candidate if all_merged.detect { |b| candidate == b }\n      end\n\n      BranchCollection.new(@repo, merged)\n    end",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 10
          },
          "text": "merged"
        },
        {
          "type": "method_parameters",
          "start": {
            "row": 0,
            "column": 10
          },
          "end": {
            "row": 0,
            "column": 20
          },
          "text": "(revision)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 10
              },
              "end": {
                "row": 0,
                "column": 11
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 11
              },
              "end": {
                "row": 0,
                "column": 19
              },
              "text": "revision"
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 19
              },
              "end": {
                "row": 0,
                "column": 20
              },
              "text": ")"
            }
          ]
        },
        {
          "type": "comment",
          "start": {
            "row": 1,
            "column": 6
          },
          "end": {
            "row": 1,
            "column": 76
          },
          "text": "# By hand, build a list of all branches known to be merged into master"
        },
        {
          "type": "body_statement",
          "start": {
            "row": 2,
            "column": 6
          },
          "end": {
            "row": 17,
            "column": 41
          },
          "text": "git_args = ['branch', '-a', '--merged', revision]\n      all_merged = []\n      @repo.git_output(git_args).lines.each do |line|\n        line.strip!\n        all_merged << Branch.new(@repo, line)\n      end\n\n      # Filter the contents of this collection according to the big list\n      merged = []\n      @branches.each do |candidate|\n        # For some reason Set#include? does not play nice with our overridden comparison operators\n        # for branches, so we need to do this the hard way :(\n        merged << candidate if all_merged.detect { |b| candidate == b }\n      end\n\n      BranchCollection.new(@repo, merged)",
          "children": [
            {
              "type": "assignment",
              "start": {
                "row": 2,
                "column": 6
              },
              "end": {
                "row": 2,
                "column": 55
              },
              "text": "git_args = ['branch', '-a', '--merged', revision]",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 2,
                    "column": 6
                  },
                  "end": {
                    "row": 2,
                    "column": 14
                  },
                  "text": "git_args"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 2,
                    "column": 15
                  },
                  "end": {
                    "row": 2,
                    "column": 16
                  },
                  "text": "="
                },
                {
                  "type": "array",
                  "start": {
                    "row": 2,
                    "column": 17
                  },
                  "end": {
                    "row": 2,
                    "column": 55
                  },
                  "text": "['branch', '-a', '--merged', revision]",
                  "children": [
                    {
                      "type": "[",
                      "start": {
                        "row": 2,
                        "column": 17
                      },
                      "end": {
                        "row": 2,
                        "column": 18
                      },
                      "text": "["
                    },
                    {
                      "type": "string",
                      "start": {
                        "row": 2,
                        "column": 18
                      },
                      "end": {
                        "row": 2,
                        "column": 26
                      },
                      "text": "'branch'",
                      "children": [
                        {
                          "type": "\"",
                          "start": {
                            "row": 2,
                            "column": 18
                          },
                          "end": {
                            "row": 2,
                            "column": 19
                          },
                          "text": "'"
                        },
                        {
                          "type": "string_content",
                          "start": {
                            "row": 2,
                            "column": 19
                          },
                          "end": {
                            "row": 2,
                            "column": 25
                          },
                          "text": "branch"
                        },
                        {
                          "type": "\"",
                          "start": {
                            "row": 2,
                            "column": 25
                          },
                          "end": {
                            "row": 2,
                            "column": 26
                          },
                          "text": "'"
                        }
                      ]
                    },
                    {
                      "type": ",",
                      "start": {
                        "row": 2,
                        "column": 26
                      },
                      "end": {
                        "row": 2,
                        "column": 27
                      },
                      "text": ","
                    },
                    {
                      "type": "string",
                      "start": {
                        "row": 2,
                        "column": 28
                      },
                      "end": {
                        "row": 2,
                        "column": 32
                      },
                      "text": "'-a'",
                      "children": [
                        {
                          "type": "\"",
                          "start": {
                            "row": 2,
                            "column": 28
                          },
                          "end": {
                            "row": 2,
                            "column": 29
                          },
                          "text": "'"
                        },
                        {
                          "type": "string_content",
                          "start": {
                            "row": 2,
                            "column": 29
                          },
                          "end": {
                            "row": 2,
                            "column": 31
                          },
                          "text": "-a"
                        },
                        {
                          "type": "\"",
                          "start": {
                            "row": 2,
                            "column": 31
                          },
                          "end": {
                            "row": 2,
                            "column": 32
                          },
                          "text": "'"
                        }
                      ]
                    },
                    {
                      "type": ",",
                      "start": {
                        "row": 2,
                        "column": 32
                      },
                      "end": {
                        "row": 2,
                        "column": 33
                      },
                      "text": ","
                    },
                    {
                      "type": "string",
                      "start": {
                        "row": 2,
                        "column": 34
                      },
                      "end": {
                        "row": 2,
                        "column": 44
                      },
                      "text": "'--merged'",
                      "children": [
                        {
                          "type": "\"",
                          "start": {
                            "row": 2,
                            "column": 34
                          },
                          "end": {
                            "row": 2,
                            "column": 35
                          },
                          "text": "'"
                        },
                        {
                          "type": "string_content",
                          "start": {
                            "row": 2,
                            "column": 35
                          },
                          "end": {
                            "row": 2,
                            "column": 43
                          },
                          "text": "--merged"
                        },
                        {
                          "type": "\"",
                          "start": {
                            "row": 2,
                            "column": 43
                          },
                          "end": {
                            "row": 2,
                            "column": 44
                          },
                          "text": "'"
                        }
                      ]
                    },
                    {
                      "type": ",",
                      "start": {
                        "row": 2,
                        "column": 44
                      },
                      "end": {
                        "row": 2,
                        "column": 45
                      },
                      "text": ","
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 2,
                        "column": 46
                      },
                      "end": {
                        "row": 2,
                        "column": 54
                      },
                      "text": "revision"
                    },
                    {
                      "type": "]",
                      "start": {
                        "row": 2,
                        "column": 54
                      },
                      "end": {
                        "row": 2,
                        "column": 55
                      },
                      "text": "]"
                    }
                  ]
                }
              ]
            },
            {
              "type": "assignment",
              "start": {
                "row": 3,
                "column": 6
              },
              "end": {
                "row": 3,
                "column": 21
              },
              "text": "all_merged = []",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 3,
                    "column": 6
                  },
                  "end": {
                    "row": 3,
                    "column": 16
                  },
                  "text": "all_merged"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 3,
                    "column": 17
                  },
                  "end": {
                    "row": 3,
                    "column": 18
                  },
                  "text": "="
                },
                {
                  "type": "array",
                  "start": {
                    "row": 3,
                    "column": 19
                  },
                  "end": {
                    "row": 3,
                    "column": 21
                  },
                  "text": "[]",
                  "children": [
                    {
                      "type": "[",
                      "start": {
                        "row": 3,
                        "column": 19
                      },
                      "end": {
                        "row": 3,
                        "column": 20
                      },
                      "text": "["
                    },
                    {
                      "type": "]",
                      "start": {
                        "row": 3,
                        "column": 20
                      },
                      "end": {
                        "row": 3,
                        "column": 21
                      },
                      "text": "]"
                    }
                  ]
                }
              ]
            },
            {
              "type": "call",
              "start": {
                "row": 4,
                "column": 6
              },
              "end": {
                "row": 7,
                "column": 9
              },
              "text": "@repo.git_output(git_args).lines.each do |line|\n        line.strip!\n        all_merged << Branch.new(@repo, line)\n      end",
              "children": [
                {
                  "type": "call",
                  "start": {
                    "row": 4,
                    "column": 6
                  },
                  "end": {
                    "row": 4,
                    "column": 38
                  },
                  "text": "@repo.git_output(git_args).lines",
                  "children": [
                    {
                      "type": "call",
                      "start": {
                        "row": 4,
                        "column": 6
                      },
                      "end": {
                        "row": 4,
                        "column": 32
                      },
                      "text": "@repo.git_output(git_args)",
                      "children": [
                        {
                          "type": "instance_variable",
                          "start": {
                            "row": 4,
                            "column": 6
                          },
                          "end": {
                            "row": 4,
                            "column": 11
                          },
                          "text": "@repo"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 4,
                            "column": 11
                          },
                          "end": {
                            "row": 4,
                            "column": 12
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 4,
                            "column": 12
                          },
                          "end": {
                            "row": 4,
                            "column": 22
                          },
                          "text": "git_output"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 4,
                            "column": 22
                          },
                          "end": {
                            "row": 4,
                            "column": 32
                          },
                          "text": "(git_args)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 4,
                                "column": 22
                              },
                              "end": {
                                "row": 4,
                                "column": 23
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 4,
                                "column": 23
                              },
                              "end": {
                                "row": 4,
                                "column": 31
                              },
                              "text": "git_args"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 4,
                                "column": 31
                              },
                              "end": {
                                "row": 4,
                                "column": 32
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ".",
                      "start": {
                        "row": 4,
                        "column": 32
                      },
                      "end": {
                        "row": 4,
                        "column": 33
                      },
                      "text": "."
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 4,
                        "column": 33
                      },
                      "end": {
                        "row": 4,
                        "column": 38
                      },
                      "text": "lines"
                    }
                  ]
                },
                {
                  "type": ".",
                  "start": {
                    "row": 4,
                    "column": 38
                  },
                  "end": {
                    "row": 4,
                    "column": 39
                  },
                  "text": "."
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 4,
                    "column": 39
                  },
                  "end": {
                    "row": 4,
                    "column": 43
                  },
                  "text": "each"
                },
                {
                  "type": "do_block",
                  "start": {
                    "row": 4,
                    "column": 44
                  },
                  "end": {
                    "row": 7,
                    "column": 9
                  },
                  "text": "do |line|\n        line.strip!\n        all_merged << Branch.new(@repo, line)\n      end",
                  "children": [
                    {
                      "type": "do",
                      "start": {
                        "row": 4,
                        "column": 44
                      },
                      "end": {
                        "row": 4,
                        "column": 46
                      },
                      "text": "do"
                    },
                    {
                      "type": "block_parameters",
                      "start": {
                        "row": 4,
                        "column": 47
                      },
                      "end": {
                        "row": 4,
                        "column": 53
                      },
                      "text": "|line|",
                      "children": [
                        {
                          "type": "|",
                          "start": {
                            "row": 4,
                            "column": 47
                          },
                          "end": {
                            "row": 4,
                            "column": 48
                          },
                          "text": "|"
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 4,
                            "column": 48
                          },
                          "end": {
                            "row": 4,
                            "column": 52
                          },
                          "text": "line"
                        },
                        {
                          "type": "|",
                          "start": {
                            "row": 4,
                            "column": 52
                          },
                          "end": {
                            "row": 4,
                            "column": 53
                          },
                          "text": "|"
                        }
                      ]
                    },
                    {
                      "type": "body_statement",
                      "start": {
                        "row": 5,
                        "column": 8
                      },
                      "end": {
                        "row": 6,
                        "column": 45
                      },
                      "text": "line.strip!\n        all_merged << Branch.new(@repo, line)",
                      "children": [
                        {
                          "type": "call",
                          "start": {
                            "row": 5,
                            "column": 8
                          },
                          "end": {
                            "row": 5,
                            "column": 19
                          },
                          "text": "line.strip!",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 5,
                                "column": 8
                              },
                              "end": {
                                "row": 5,
                                "column": 12
                              },
                              "text": "line"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 5,
                                "column": 12
                              },
                              "end": {
                                "row": 5,
                                "column": 13
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 5,
                                "column": 13
                              },
                              "end": {
                                "row": 5,
                                "column": 19
                              },
                              "text": "strip!"
                            }
                          ]
                        },
                        {
                          "type": "binary",
                          "start": {
                            "row": 6,
                            "column": 8
                          },
                          "end": {
                            "row": 6,
                            "column": 45
                          },
                          "text": "all_merged << Branch.new(@repo, line)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 6,
                                "column": 8
                              },
                              "end": {
                                "row": 6,
                                "column": 18
                              },
                              "text": "all_merged"
                            },
                            {
                              "type": "<<",
                              "start": {
                                "row": 6,
                                "column": 19
                              },
                              "end": {
                                "row": 6,
                                "column": 21
                              },
                              "text": "<<"
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 6,
                                "column": 22
                              },
                              "end": {
                                "row": 6,
                                "column": 45
                              },
                              "text": "Branch.new(@repo, line)",
                              "children": [
                                {
                                  "type": "constant",
                                  "start": {
                                    "row": 6,
                                    "column": 22
                                  },
                                  "end": {
                                    "row": 6,
                                    "column": 28
                                  },
                                  "text": "Branch"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 6,
                                    "column": 28
                                  },
                                  "end": {
                                    "row": 6,
                                    "column": 29
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 6,
                                    "column": 29
                                  },
                                  "end": {
                                    "row": 6,
                                    "column": 32
                                  },
                                  "text": "new"
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 6,
                                    "column": 32
                                  },
                                  "end": {
                                    "row": 6,
                                    "column": 45
                                  },
                                  "text": "(@repo, line)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 6,
                                        "column": 32
                                      },
                                      "end": {
                                        "row": 6,
                                        "column": 33
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "instance_variable",
                                      "start": {
                                        "row": 6,
                                        "column": 33
                                      },
                                      "end": {
                                        "row": 6,
                                        "column": 38
                                      },
                                      "text": "@repo"
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 6,
                                        "column": 38
                                      },
                                      "end": {
                                        "row": 6,
                                        "column": 39
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 6,
                                        "column": 40
                                      },
                                      "end": {
                                        "row": 6,
                                        "column": 44
                                      },
                                      "text": "line"
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 6,
                                        "column": 44
                                      },
                                      "end": {
                                        "row": 6,
                                        "column": 45
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "end",
                      "start": {
                        "row": 7,
                        "column": 6
                      },
                      "end": {
                        "row": 7,
                        "column": 9
                      },
                      "text": "end"
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 9,
                "column": 6
              },
              "end": {
                "row": 9,
                "column": 72
              },
              "text": "# Filter the contents of this collection according to the big list"
            },
            {
              "type": "assignment",
              "start": {
                "row": 10,
                "column": 6
              },
              "end": {
                "row": 10,
                "column": 17
              },
              "text": "merged = []",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 10,
                    "column": 6
                  },
                  "end": {
                    "row": 10,
                    "column": 12
                  },
                  "text": "merged"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 10,
                    "column": 13
                  },
                  "end": {
                    "row": 10,
                    "column": 14
                  },
                  "text": "="
                },
                {
                  "type": "array",
                  "start": {
                    "row": 10,
                    "column": 15
                  },
                  "end": {
                    "row": 10,
                    "column": 17
                  },
                  "text": "[]",
                  "children": [
                    {
                      "type": "[",
                      "start": {
                        "row": 10,
                        "column": 15
                      },
                      "end": {
                        "row": 10,
                        "column": 16
                      },
                      "text": "["
                    },
                    {
                      "type": "]",
                      "start": {
                        "row": 10,
                        "column": 16
                      },
                      "end": {
                        "row": 10,
                        "column": 17
                      },
                      "text": "]"
                    }
                  ]
                }
              ]
            },
            {
              "type": "call",
              "start": {
                "row": 11,
                "column": 6
              },
              "end": {
                "row": 15,
                "column": 9
              },
              "text": "@branches.each do |candidate|\n        # For some reason Set#include? does not play nice with our overridden comparison operators\n        # for branches, so we need to do this the hard way :(\n        merged << candidate if all_merged.detect { |b| candidate == b }\n      end",
              "children": [
                {
                  "type": "instance_variable",
                  "start": {
                    "row": 11,
                    "column": 6
                  },
                  "end": {
                    "row": 11,
                    "column": 15
                  },
                  "text": "@branches"
                },
                {
                  "type": ".",
                  "start": {
                    "row": 11,
                    "column": 15
                  },
                  "end": {
                    "row": 11,
                    "column": 16
                  },
                  "text": "."
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 11,
                    "column": 16
                  },
                  "end": {
                    "row": 11,
                    "column": 20
                  },
                  "text": "each"
                },
                {
                  "type": "do_block",
                  "start": {
                    "row": 11,
                    "column": 21
                  },
                  "end": {
                    "row": 15,
                    "column": 9
                  },
                  "text": "do |candidate|\n        # For some reason Set#include? does not play nice with our overridden comparison operators\n        # for branches, so we need to do this the hard way :(\n        merged << candidate if all_merged.detect { |b| candidate == b }\n      end",
                  "children": [
                    {
                      "type": "do",
                      "start": {
                        "row": 11,
                        "column": 21
                      },
                      "end": {
                        "row": 11,
                        "column": 23
                      },
                      "text": "do"
                    },
                    {
                      "type": "block_parameters",
                      "start": {
                        "row": 11,
                        "column": 24
                      },
                      "end": {
                        "row": 11,
                        "column": 35
                      },
                      "text": "|candidate|",
                      "children": [
                        {
                          "type": "|",
                          "start": {
                            "row": 11,
                            "column": 24
                          },
                          "end": {
                            "row": 11,
                            "column": 25
                          },
                          "text": "|"
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 11,
                            "column": 25
                          },
                          "end": {
                            "row": 11,
                            "column": 34
                          },
                          "text": "candidate"
                        },
                        {
                          "type": "|",
                          "start": {
                            "row": 11,
                            "column": 34
                          },
                          "end": {
                            "row": 11,
                            "column": 35
                          },
                          "text": "|"
                        }
                      ]
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 12,
                        "column": 8
                      },
                      "end": {
                        "row": 12,
                        "column": 98
                      },
                      "text": "# For some reason Set#include? does not play nice with our overridden comparison operators"
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 13,
                        "column": 8
                      },
                      "end": {
                        "row": 13,
                        "column": 61
                      },
                      "text": "# for branches, so we need to do this the hard way :("
                    },
                    {
                      "type": "body_statement",
                      "start": {
                        "row": 14,
                        "column": 8
                      },
                      "end": {
                        "row": 14,
                        "column": 71
                      },
                      "text": "merged << candidate if all_merged.detect { |b| candidate == b }",
                      "children": [
                        {
                          "type": "if_modifier",
                          "start": {
                            "row": 14,
                            "column": 8
                          },
                          "end": {
                            "row": 14,
                            "column": 71
                          },
                          "text": "merged << candidate if all_merged.detect { |b| candidate == b }",
                          "children": [
                            {
                              "type": "binary",
                              "start": {
                                "row": 14,
                                "column": 8
                              },
                              "end": {
                                "row": 14,
                                "column": 27
                              },
                              "text": "merged << candidate",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 14,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 14,
                                    "column": 14
                                  },
                                  "text": "merged"
                                },
                                {
                                  "type": "<<",
                                  "start": {
                                    "row": 14,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 14,
                                    "column": 17
                                  },
                                  "text": "<<"
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 14,
                                    "column": 18
                                  },
                                  "end": {
                                    "row": 14,
                                    "column": 27
                                  },
                                  "text": "candidate"
                                }
                              ]
                            },
                            {
                              "type": "if",
                              "start": {
                                "row": 14,
                                "column": 28
                              },
                              "end": {
                                "row": 14,
                                "column": 30
                              },
                              "text": "if"
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 14,
                                "column": 31
                              },
                              "end": {
                                "row": 14,
                                "column": 71
                              },
                              "text": "all_merged.detect { |b| candidate == b }",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 14,
                                    "column": 31
                                  },
                                  "end": {
                                    "row": 14,
                                    "column": 41
                                  },
                                  "text": "all_merged"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 14,
                                    "column": 41
                                  },
                                  "end": {
                                    "row": 14,
                                    "column": 42
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 14,
                                    "column": 42
                                  },
                                  "end": {
                                    "row": 14,
                                    "column": 48
                                  },
                                  "text": "detect"
                                },
                                {
                                  "type": "block",
                                  "start": {
                                    "row": 14,
                                    "column": 49
                                  },
                                  "end": {
                                    "row": 14,
                                    "column": 71
                                  },
                                  "text": "{ |b| candidate == b }",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start": {
                                        "row": 14,
                                        "column": 49
                                      },
                                      "end": {
                                        "row": 14,
                                        "column": 50
                                      },
                                      "text": "{"
                                    },
                                    {
                                      "type": "block_parameters",
                                      "start": {
                                        "row": 14,
                                        "column": 51
                                      },
                                      "end": {
                                        "row": 14,
                                        "column": 54
                                      },
                                      "text": "|b|",
                                      "children": [
                                        {
                                          "type": "|",
                                          "start": {
                                            "row": 14,
                                            "column": 51
                                          },
                                          "end": {
                                            "row": 14,
                                            "column": 52
                                          },
                                          "text": "|"
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 14,
                                            "column": 52
                                          },
                                          "end": {
                                            "row": 14,
                                            "column": 53
                                          },
                                          "text": "b"
                                        },
                                        {
                                          "type": "|",
                                          "start": {
                                            "row": 14,
                                            "column": 53
                                          },
                                          "end": {
                                            "row": 14,
                                            "column": 54
                                          },
                                          "text": "|"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "block_body",
                                      "start": {
                                        "row": 14,
                                        "column": 55
                                      },
                                      "end": {
                                        "row": 14,
                                        "column": 69
                                      },
                                      "text": "candidate == b",
                                      "children": [
                                        {
                                          "type": "binary",
                                          "start": {
                                            "row": 14,
                                            "column": 55
                                          },
                                          "end": {
                                            "row": 14,
                                            "column": 69
                                          },
                                          "text": "candidate == b",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 14,
                                                "column": 55
                                              },
                                              "end": {
                                                "row": 14,
                                                "column": 64
                                              },
                                              "text": "candidate"
                                            },
                                            {
                                              "type": "==",
                                              "start": {
                                                "row": 14,
                                                "column": 65
                                              },
                                              "end": {
                                                "row": 14,
                                                "column": 67
                                              },
                                              "text": "=="
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 14,
                                                "column": 68
                                              },
                                              "end": {
                                                "row": 14,
                                                "column": 69
                                              },
                                              "text": "b"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start": {
                                        "row": 14,
                                        "column": 70
                                      },
                                      "end": {
                                        "row": 14,
                                        "column": 71
                                      },
                                      "text": "}"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "end",
                      "start": {
                        "row": 15,
                        "column": 6
                      },
                      "end": {
                        "row": 15,
                        "column": 9
                      },
                      "text": "end"
                    }
                  ]
                }
              ]
            },
            {
              "type": "call",
              "start": {
                "row": 17,
                "column": 6
              },
              "end": {
                "row": 17,
                "column": 41
              },
              "text": "BranchCollection.new(@repo, merged)",
              "children": [
                {
                  "type": "constant",
                  "start": {
                    "row": 17,
                    "column": 6
                  },
                  "end": {
                    "row": 17,
                    "column": 22
                  },
                  "text": "BranchCollection"
                },
                {
                  "type": ".",
                  "start": {
                    "row": 17,
                    "column": 22
                  },
                  "end": {
                    "row": 17,
                    "column": 23
                  },
                  "text": "."
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 17,
                    "column": 23
                  },
                  "end": {
                    "row": 17,
                    "column": 26
                  },
                  "text": "new"
                },
                {
                  "type": "argument_list",
                  "start": {
                    "row": 17,
                    "column": 26
                  },
                  "end": {
                    "row": 17,
                    "column": 41
                  },
                  "text": "(@repo, merged)",
                  "children": [
                    {
                      "type": "(",
                      "start": {
                        "row": 17,
                        "column": 26
                      },
                      "end": {
                        "row": 17,
                        "column": 27
                      },
                      "text": "("
                    },
                    {
                      "type": "instance_variable",
                      "start": {
                        "row": 17,
                        "column": 27
                      },
                      "end": {
                        "row": 17,
                        "column": 32
                      },
                      "text": "@repo"
                    },
                    {
                      "type": ",",
                      "start": {
                        "row": 17,
                        "column": 32
                      },
                      "end": {
                        "row": 17,
                        "column": 33
                      },
                      "text": ","
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 17,
                        "column": 34
                      },
                      "end": {
                        "row": 17,
                        "column": 40
                      },
                      "text": "merged"
                    },
                    {
                      "type": ")",
                      "start": {
                        "row": 17,
                        "column": 40
                      },
                      "end": {
                        "row": 17,
                        "column": 41
                      },
                      "text": ")"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "end",
          "start": {
            "row": 18,
            "column": 4
          },
          "end": {
            "row": 18,
            "column": 7
          },
          "text": "end"
        }
      ]
    }
  ]
}