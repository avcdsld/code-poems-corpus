{
  "type": "program",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 37,
    "column": 7
  },
  "text": "def _digest(x, n)\n      # Use 'first' and 'last' instead of min/max because of performance reasons\n      # This works because RBTree is sorted\n      min = @centroids.first\n      max = @centroids.last\n\n      min = min.nil? ? nil : min[1]\n      max = max.nil? ? nil : max[1]\n      nearest = find_nearest(x)\n\n      @n += n\n\n      if nearest && nearest.mean == x\n        _add_weight(nearest, x, n)\n      elsif nearest == min\n        _new_centroid(x, n, 0)\n      elsif nearest == max\n        _new_centroid(x, n, @n)\n      else\n        p = nearest.mean_cumn.to_f / @n\n        max_n = (4 * @n * @delta * p * (1 - p)).floor\n        if max_n - nearest.n >= n\n          _add_weight(nearest, x, n)\n        else\n          _new_centroid(x, n, nearest.cumn)\n        end\n      end\n\n      _cumulate(false)\n\n      # If the number of centroids has grown to a very large size,\n      # it may be due to values being inserted in sorted order.\n      # We combat that by replaying the centroids in random order,\n      # which is what compress! does\n      compress! if @centroids.size > (@k / @delta)\n\n      nil\n    end",
  "children": [
    {
      "type": "method",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 37,
        "column": 7
      },
      "text": "def _digest(x, n)\n      # Use 'first' and 'last' instead of min/max because of performance reasons\n      # This works because RBTree is sorted\n      min = @centroids.first\n      max = @centroids.last\n\n      min = min.nil? ? nil : min[1]\n      max = max.nil? ? nil : max[1]\n      nearest = find_nearest(x)\n\n      @n += n\n\n      if nearest && nearest.mean == x\n        _add_weight(nearest, x, n)\n      elsif nearest == min\n        _new_centroid(x, n, 0)\n      elsif nearest == max\n        _new_centroid(x, n, @n)\n      else\n        p = nearest.mean_cumn.to_f / @n\n        max_n = (4 * @n * @delta * p * (1 - p)).floor\n        if max_n - nearest.n >= n\n          _add_weight(nearest, x, n)\n        else\n          _new_centroid(x, n, nearest.cumn)\n        end\n      end\n\n      _cumulate(false)\n\n      # If the number of centroids has grown to a very large size,\n      # it may be due to values being inserted in sorted order.\n      # We combat that by replaying the centroids in random order,\n      # which is what compress! does\n      compress! if @centroids.size > (@k / @delta)\n\n      nil\n    end",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 11
          },
          "text": "_digest"
        },
        {
          "type": "method_parameters",
          "start": {
            "row": 0,
            "column": 11
          },
          "end": {
            "row": 0,
            "column": 17
          },
          "text": "(x, n)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 11
              },
              "end": {
                "row": 0,
                "column": 12
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 12
              },
              "end": {
                "row": 0,
                "column": 13
              },
              "text": "x"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 13
              },
              "end": {
                "row": 0,
                "column": 14
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 15
              },
              "end": {
                "row": 0,
                "column": 16
              },
              "text": "n"
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 16
              },
              "end": {
                "row": 0,
                "column": 17
              },
              "text": ")"
            }
          ]
        },
        {
          "type": "comment",
          "start": {
            "row": 1,
            "column": 6
          },
          "end": {
            "row": 1,
            "column": 80
          },
          "text": "# Use 'first' and 'last' instead of min/max because of performance reasons"
        },
        {
          "type": "comment",
          "start": {
            "row": 2,
            "column": 6
          },
          "end": {
            "row": 2,
            "column": 43
          },
          "text": "# This works because RBTree is sorted"
        },
        {
          "type": "body_statement",
          "start": {
            "row": 3,
            "column": 6
          },
          "end": {
            "row": 36,
            "column": 9
          },
          "text": "min = @centroids.first\n      max = @centroids.last\n\n      min = min.nil? ? nil : min[1]\n      max = max.nil? ? nil : max[1]\n      nearest = find_nearest(x)\n\n      @n += n\n\n      if nearest && nearest.mean == x\n        _add_weight(nearest, x, n)\n      elsif nearest == min\n        _new_centroid(x, n, 0)\n      elsif nearest == max\n        _new_centroid(x, n, @n)\n      else\n        p = nearest.mean_cumn.to_f / @n\n        max_n = (4 * @n * @delta * p * (1 - p)).floor\n        if max_n - nearest.n >= n\n          _add_weight(nearest, x, n)\n        else\n          _new_centroid(x, n, nearest.cumn)\n        end\n      end\n\n      _cumulate(false)\n\n      # If the number of centroids has grown to a very large size,\n      # it may be due to values being inserted in sorted order.\n      # We combat that by replaying the centroids in random order,\n      # which is what compress! does\n      compress! if @centroids.size > (@k / @delta)\n\n      nil",
          "children": [
            {
              "type": "assignment",
              "start": {
                "row": 3,
                "column": 6
              },
              "end": {
                "row": 3,
                "column": 28
              },
              "text": "min = @centroids.first",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 3,
                    "column": 6
                  },
                  "end": {
                    "row": 3,
                    "column": 9
                  },
                  "text": "min"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 3,
                    "column": 10
                  },
                  "end": {
                    "row": 3,
                    "column": 11
                  },
                  "text": "="
                },
                {
                  "type": "call",
                  "start": {
                    "row": 3,
                    "column": 12
                  },
                  "end": {
                    "row": 3,
                    "column": 28
                  },
                  "text": "@centroids.first",
                  "children": [
                    {
                      "type": "instance_variable",
                      "start": {
                        "row": 3,
                        "column": 12
                      },
                      "end": {
                        "row": 3,
                        "column": 22
                      },
                      "text": "@centroids"
                    },
                    {
                      "type": ".",
                      "start": {
                        "row": 3,
                        "column": 22
                      },
                      "end": {
                        "row": 3,
                        "column": 23
                      },
                      "text": "."
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 3,
                        "column": 23
                      },
                      "end": {
                        "row": 3,
                        "column": 28
                      },
                      "text": "first"
                    }
                  ]
                }
              ]
            },
            {
              "type": "assignment",
              "start": {
                "row": 4,
                "column": 6
              },
              "end": {
                "row": 4,
                "column": 27
              },
              "text": "max = @centroids.last",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 4,
                    "column": 6
                  },
                  "end": {
                    "row": 4,
                    "column": 9
                  },
                  "text": "max"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 4,
                    "column": 10
                  },
                  "end": {
                    "row": 4,
                    "column": 11
                  },
                  "text": "="
                },
                {
                  "type": "call",
                  "start": {
                    "row": 4,
                    "column": 12
                  },
                  "end": {
                    "row": 4,
                    "column": 27
                  },
                  "text": "@centroids.last",
                  "children": [
                    {
                      "type": "instance_variable",
                      "start": {
                        "row": 4,
                        "column": 12
                      },
                      "end": {
                        "row": 4,
                        "column": 22
                      },
                      "text": "@centroids"
                    },
                    {
                      "type": ".",
                      "start": {
                        "row": 4,
                        "column": 22
                      },
                      "end": {
                        "row": 4,
                        "column": 23
                      },
                      "text": "."
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 4,
                        "column": 23
                      },
                      "end": {
                        "row": 4,
                        "column": 27
                      },
                      "text": "last"
                    }
                  ]
                }
              ]
            },
            {
              "type": "assignment",
              "start": {
                "row": 6,
                "column": 6
              },
              "end": {
                "row": 6,
                "column": 35
              },
              "text": "min = min.nil? ? nil : min[1]",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 6,
                    "column": 6
                  },
                  "end": {
                    "row": 6,
                    "column": 9
                  },
                  "text": "min"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 6,
                    "column": 10
                  },
                  "end": {
                    "row": 6,
                    "column": 11
                  },
                  "text": "="
                },
                {
                  "type": "conditional",
                  "start": {
                    "row": 6,
                    "column": 12
                  },
                  "end": {
                    "row": 6,
                    "column": 35
                  },
                  "text": "min.nil? ? nil : min[1]",
                  "children": [
                    {
                      "type": "call",
                      "start": {
                        "row": 6,
                        "column": 12
                      },
                      "end": {
                        "row": 6,
                        "column": 20
                      },
                      "text": "min.nil?",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 6,
                            "column": 12
                          },
                          "end": {
                            "row": 6,
                            "column": 15
                          },
                          "text": "min"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 6,
                            "column": 15
                          },
                          "end": {
                            "row": 6,
                            "column": 16
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 6,
                            "column": 16
                          },
                          "end": {
                            "row": 6,
                            "column": 20
                          },
                          "text": "nil?"
                        }
                      ]
                    },
                    {
                      "type": "?",
                      "start": {
                        "row": 6,
                        "column": 21
                      },
                      "end": {
                        "row": 6,
                        "column": 22
                      },
                      "text": "?"
                    },
                    {
                      "type": "nil",
                      "start": {
                        "row": 6,
                        "column": 23
                      },
                      "end": {
                        "row": 6,
                        "column": 26
                      },
                      "text": "nil",
                      "children": [
                        {
                          "type": "nil",
                          "start": {
                            "row": 6,
                            "column": 23
                          },
                          "end": {
                            "row": 6,
                            "column": 26
                          },
                          "text": "nil"
                        }
                      ]
                    },
                    {
                      "type": ":",
                      "start": {
                        "row": 6,
                        "column": 27
                      },
                      "end": {
                        "row": 6,
                        "column": 28
                      },
                      "text": ":"
                    },
                    {
                      "type": "element_reference",
                      "start": {
                        "row": 6,
                        "column": 29
                      },
                      "end": {
                        "row": 6,
                        "column": 35
                      },
                      "text": "min[1]",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 6,
                            "column": 29
                          },
                          "end": {
                            "row": 6,
                            "column": 32
                          },
                          "text": "min"
                        },
                        {
                          "type": "[",
                          "start": {
                            "row": 6,
                            "column": 32
                          },
                          "end": {
                            "row": 6,
                            "column": 33
                          },
                          "text": "["
                        },
                        {
                          "type": "integer",
                          "start": {
                            "row": 6,
                            "column": 33
                          },
                          "end": {
                            "row": 6,
                            "column": 34
                          },
                          "text": "1"
                        },
                        {
                          "type": "]",
                          "start": {
                            "row": 6,
                            "column": 34
                          },
                          "end": {
                            "row": 6,
                            "column": 35
                          },
                          "text": "]"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "assignment",
              "start": {
                "row": 7,
                "column": 6
              },
              "end": {
                "row": 7,
                "column": 35
              },
              "text": "max = max.nil? ? nil : max[1]",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 7,
                    "column": 6
                  },
                  "end": {
                    "row": 7,
                    "column": 9
                  },
                  "text": "max"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 7,
                    "column": 10
                  },
                  "end": {
                    "row": 7,
                    "column": 11
                  },
                  "text": "="
                },
                {
                  "type": "conditional",
                  "start": {
                    "row": 7,
                    "column": 12
                  },
                  "end": {
                    "row": 7,
                    "column": 35
                  },
                  "text": "max.nil? ? nil : max[1]",
                  "children": [
                    {
                      "type": "call",
                      "start": {
                        "row": 7,
                        "column": 12
                      },
                      "end": {
                        "row": 7,
                        "column": 20
                      },
                      "text": "max.nil?",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 7,
                            "column": 12
                          },
                          "end": {
                            "row": 7,
                            "column": 15
                          },
                          "text": "max"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 7,
                            "column": 15
                          },
                          "end": {
                            "row": 7,
                            "column": 16
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 7,
                            "column": 16
                          },
                          "end": {
                            "row": 7,
                            "column": 20
                          },
                          "text": "nil?"
                        }
                      ]
                    },
                    {
                      "type": "?",
                      "start": {
                        "row": 7,
                        "column": 21
                      },
                      "end": {
                        "row": 7,
                        "column": 22
                      },
                      "text": "?"
                    },
                    {
                      "type": "nil",
                      "start": {
                        "row": 7,
                        "column": 23
                      },
                      "end": {
                        "row": 7,
                        "column": 26
                      },
                      "text": "nil",
                      "children": [
                        {
                          "type": "nil",
                          "start": {
                            "row": 7,
                            "column": 23
                          },
                          "end": {
                            "row": 7,
                            "column": 26
                          },
                          "text": "nil"
                        }
                      ]
                    },
                    {
                      "type": ":",
                      "start": {
                        "row": 7,
                        "column": 27
                      },
                      "end": {
                        "row": 7,
                        "column": 28
                      },
                      "text": ":"
                    },
                    {
                      "type": "element_reference",
                      "start": {
                        "row": 7,
                        "column": 29
                      },
                      "end": {
                        "row": 7,
                        "column": 35
                      },
                      "text": "max[1]",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 7,
                            "column": 29
                          },
                          "end": {
                            "row": 7,
                            "column": 32
                          },
                          "text": "max"
                        },
                        {
                          "type": "[",
                          "start": {
                            "row": 7,
                            "column": 32
                          },
                          "end": {
                            "row": 7,
                            "column": 33
                          },
                          "text": "["
                        },
                        {
                          "type": "integer",
                          "start": {
                            "row": 7,
                            "column": 33
                          },
                          "end": {
                            "row": 7,
                            "column": 34
                          },
                          "text": "1"
                        },
                        {
                          "type": "]",
                          "start": {
                            "row": 7,
                            "column": 34
                          },
                          "end": {
                            "row": 7,
                            "column": 35
                          },
                          "text": "]"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "assignment",
              "start": {
                "row": 8,
                "column": 6
              },
              "end": {
                "row": 8,
                "column": 31
              },
              "text": "nearest = find_nearest(x)",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 8,
                    "column": 6
                  },
                  "end": {
                    "row": 8,
                    "column": 13
                  },
                  "text": "nearest"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 8,
                    "column": 14
                  },
                  "end": {
                    "row": 8,
                    "column": 15
                  },
                  "text": "="
                },
                {
                  "type": "call",
                  "start": {
                    "row": 8,
                    "column": 16
                  },
                  "end": {
                    "row": 8,
                    "column": 31
                  },
                  "text": "find_nearest(x)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 8,
                        "column": 16
                      },
                      "end": {
                        "row": 8,
                        "column": 28
                      },
                      "text": "find_nearest"
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 8,
                        "column": 28
                      },
                      "end": {
                        "row": 8,
                        "column": 31
                      },
                      "text": "(x)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 8,
                            "column": 28
                          },
                          "end": {
                            "row": 8,
                            "column": 29
                          },
                          "text": "("
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 8,
                            "column": 29
                          },
                          "end": {
                            "row": 8,
                            "column": 30
                          },
                          "text": "x"
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 8,
                            "column": 30
                          },
                          "end": {
                            "row": 8,
                            "column": 31
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "operator_assignment",
              "start": {
                "row": 10,
                "column": 6
              },
              "end": {
                "row": 10,
                "column": 13
              },
              "text": "@n += n",
              "children": [
                {
                  "type": "instance_variable",
                  "start": {
                    "row": 10,
                    "column": 6
                  },
                  "end": {
                    "row": 10,
                    "column": 8
                  },
                  "text": "@n"
                },
                {
                  "type": "+=",
                  "start": {
                    "row": 10,
                    "column": 9
                  },
                  "end": {
                    "row": 10,
                    "column": 11
                  },
                  "text": "+="
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 10,
                    "column": 12
                  },
                  "end": {
                    "row": 10,
                    "column": 13
                  },
                  "text": "n"
                }
              ]
            },
            {
              "type": "if",
              "start": {
                "row": 12,
                "column": 6
              },
              "end": {
                "row": 26,
                "column": 9
              },
              "text": "if nearest && nearest.mean == x\n        _add_weight(nearest, x, n)\n      elsif nearest == min\n        _new_centroid(x, n, 0)\n      elsif nearest == max\n        _new_centroid(x, n, @n)\n      else\n        p = nearest.mean_cumn.to_f / @n\n        max_n = (4 * @n * @delta * p * (1 - p)).floor\n        if max_n - nearest.n >= n\n          _add_weight(nearest, x, n)\n        else\n          _new_centroid(x, n, nearest.cumn)\n        end\n      end",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 12,
                    "column": 6
                  },
                  "end": {
                    "row": 12,
                    "column": 8
                  },
                  "text": "if"
                },
                {
                  "type": "binary",
                  "start": {
                    "row": 12,
                    "column": 9
                  },
                  "end": {
                    "row": 12,
                    "column": 37
                  },
                  "text": "nearest && nearest.mean == x",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 12,
                        "column": 9
                      },
                      "end": {
                        "row": 12,
                        "column": 16
                      },
                      "text": "nearest"
                    },
                    {
                      "type": "&&",
                      "start": {
                        "row": 12,
                        "column": 17
                      },
                      "end": {
                        "row": 12,
                        "column": 19
                      },
                      "text": "&&"
                    },
                    {
                      "type": "binary",
                      "start": {
                        "row": 12,
                        "column": 20
                      },
                      "end": {
                        "row": 12,
                        "column": 37
                      },
                      "text": "nearest.mean == x",
                      "children": [
                        {
                          "type": "call",
                          "start": {
                            "row": 12,
                            "column": 20
                          },
                          "end": {
                            "row": 12,
                            "column": 32
                          },
                          "text": "nearest.mean",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 12,
                                "column": 20
                              },
                              "end": {
                                "row": 12,
                                "column": 27
                              },
                              "text": "nearest"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 12,
                                "column": 27
                              },
                              "end": {
                                "row": 12,
                                "column": 28
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 12,
                                "column": 28
                              },
                              "end": {
                                "row": 12,
                                "column": 32
                              },
                              "text": "mean"
                            }
                          ]
                        },
                        {
                          "type": "==",
                          "start": {
                            "row": 12,
                            "column": 33
                          },
                          "end": {
                            "row": 12,
                            "column": 35
                          },
                          "text": "=="
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 12,
                            "column": 36
                          },
                          "end": {
                            "row": 12,
                            "column": 37
                          },
                          "text": "x"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "then",
                  "start": {
                    "row": 12,
                    "column": 37
                  },
                  "end": {
                    "row": 13,
                    "column": 34
                  },
                  "text": "\n        _add_weight(nearest, x, n)",
                  "children": [
                    {
                      "type": "call",
                      "start": {
                        "row": 13,
                        "column": 8
                      },
                      "end": {
                        "row": 13,
                        "column": 34
                      },
                      "text": "_add_weight(nearest, x, n)",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 13,
                            "column": 8
                          },
                          "end": {
                            "row": 13,
                            "column": 19
                          },
                          "text": "_add_weight"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 13,
                            "column": 19
                          },
                          "end": {
                            "row": 13,
                            "column": 34
                          },
                          "text": "(nearest, x, n)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 13,
                                "column": 19
                              },
                              "end": {
                                "row": 13,
                                "column": 20
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 13,
                                "column": 20
                              },
                              "end": {
                                "row": 13,
                                "column": 27
                              },
                              "text": "nearest"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 13,
                                "column": 27
                              },
                              "end": {
                                "row": 13,
                                "column": 28
                              },
                              "text": ","
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 13,
                                "column": 29
                              },
                              "end": {
                                "row": 13,
                                "column": 30
                              },
                              "text": "x"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 13,
                                "column": 30
                              },
                              "end": {
                                "row": 13,
                                "column": 31
                              },
                              "text": ","
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 13,
                                "column": 32
                              },
                              "end": {
                                "row": 13,
                                "column": 33
                              },
                              "text": "n"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 13,
                                "column": 33
                              },
                              "end": {
                                "row": 13,
                                "column": 34
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "elsif",
                  "start": {
                    "row": 14,
                    "column": 6
                  },
                  "end": {
                    "row": 25,
                    "column": 11
                  },
                  "text": "elsif nearest == min\n        _new_centroid(x, n, 0)\n      elsif nearest == max\n        _new_centroid(x, n, @n)\n      else\n        p = nearest.mean_cumn.to_f / @n\n        max_n = (4 * @n * @delta * p * (1 - p)).floor\n        if max_n - nearest.n >= n\n          _add_weight(nearest, x, n)\n        else\n          _new_centroid(x, n, nearest.cumn)\n        end",
                  "children": [
                    {
                      "type": "elsif",
                      "start": {
                        "row": 14,
                        "column": 6
                      },
                      "end": {
                        "row": 14,
                        "column": 11
                      },
                      "text": "elsif"
                    },
                    {
                      "type": "binary",
                      "start": {
                        "row": 14,
                        "column": 12
                      },
                      "end": {
                        "row": 14,
                        "column": 26
                      },
                      "text": "nearest == min",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 14,
                            "column": 12
                          },
                          "end": {
                            "row": 14,
                            "column": 19
                          },
                          "text": "nearest"
                        },
                        {
                          "type": "==",
                          "start": {
                            "row": 14,
                            "column": 20
                          },
                          "end": {
                            "row": 14,
                            "column": 22
                          },
                          "text": "=="
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 14,
                            "column": 23
                          },
                          "end": {
                            "row": 14,
                            "column": 26
                          },
                          "text": "min"
                        }
                      ]
                    },
                    {
                      "type": "then",
                      "start": {
                        "row": 14,
                        "column": 26
                      },
                      "end": {
                        "row": 15,
                        "column": 30
                      },
                      "text": "\n        _new_centroid(x, n, 0)",
                      "children": [
                        {
                          "type": "call",
                          "start": {
                            "row": 15,
                            "column": 8
                          },
                          "end": {
                            "row": 15,
                            "column": 30
                          },
                          "text": "_new_centroid(x, n, 0)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 15,
                                "column": 8
                              },
                              "end": {
                                "row": 15,
                                "column": 21
                              },
                              "text": "_new_centroid"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 15,
                                "column": 21
                              },
                              "end": {
                                "row": 15,
                                "column": 30
                              },
                              "text": "(x, n, 0)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 15,
                                    "column": 21
                                  },
                                  "end": {
                                    "row": 15,
                                    "column": 22
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 15,
                                    "column": 22
                                  },
                                  "end": {
                                    "row": 15,
                                    "column": 23
                                  },
                                  "text": "x"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 15,
                                    "column": 23
                                  },
                                  "end": {
                                    "row": 15,
                                    "column": 24
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 15,
                                    "column": 25
                                  },
                                  "end": {
                                    "row": 15,
                                    "column": 26
                                  },
                                  "text": "n"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 15,
                                    "column": 26
                                  },
                                  "end": {
                                    "row": 15,
                                    "column": 27
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "integer",
                                  "start": {
                                    "row": 15,
                                    "column": 28
                                  },
                                  "end": {
                                    "row": 15,
                                    "column": 29
                                  },
                                  "text": "0"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 15,
                                    "column": 29
                                  },
                                  "end": {
                                    "row": 15,
                                    "column": 30
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "elsif",
                      "start": {
                        "row": 16,
                        "column": 6
                      },
                      "end": {
                        "row": 25,
                        "column": 11
                      },
                      "text": "elsif nearest == max\n        _new_centroid(x, n, @n)\n      else\n        p = nearest.mean_cumn.to_f / @n\n        max_n = (4 * @n * @delta * p * (1 - p)).floor\n        if max_n - nearest.n >= n\n          _add_weight(nearest, x, n)\n        else\n          _new_centroid(x, n, nearest.cumn)\n        end",
                      "children": [
                        {
                          "type": "elsif",
                          "start": {
                            "row": 16,
                            "column": 6
                          },
                          "end": {
                            "row": 16,
                            "column": 11
                          },
                          "text": "elsif"
                        },
                        {
                          "type": "binary",
                          "start": {
                            "row": 16,
                            "column": 12
                          },
                          "end": {
                            "row": 16,
                            "column": 26
                          },
                          "text": "nearest == max",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 16,
                                "column": 12
                              },
                              "end": {
                                "row": 16,
                                "column": 19
                              },
                              "text": "nearest"
                            },
                            {
                              "type": "==",
                              "start": {
                                "row": 16,
                                "column": 20
                              },
                              "end": {
                                "row": 16,
                                "column": 22
                              },
                              "text": "=="
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 16,
                                "column": 23
                              },
                              "end": {
                                "row": 16,
                                "column": 26
                              },
                              "text": "max"
                            }
                          ]
                        },
                        {
                          "type": "then",
                          "start": {
                            "row": 16,
                            "column": 26
                          },
                          "end": {
                            "row": 17,
                            "column": 31
                          },
                          "text": "\n        _new_centroid(x, n, @n)",
                          "children": [
                            {
                              "type": "call",
                              "start": {
                                "row": 17,
                                "column": 8
                              },
                              "end": {
                                "row": 17,
                                "column": 31
                              },
                              "text": "_new_centroid(x, n, @n)",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 17,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 17,
                                    "column": 21
                                  },
                                  "text": "_new_centroid"
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 17,
                                    "column": 21
                                  },
                                  "end": {
                                    "row": 17,
                                    "column": 31
                                  },
                                  "text": "(x, n, @n)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 17,
                                        "column": 21
                                      },
                                      "end": {
                                        "row": 17,
                                        "column": 22
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 17,
                                        "column": 22
                                      },
                                      "end": {
                                        "row": 17,
                                        "column": 23
                                      },
                                      "text": "x"
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 17,
                                        "column": 23
                                      },
                                      "end": {
                                        "row": 17,
                                        "column": 24
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 17,
                                        "column": 25
                                      },
                                      "end": {
                                        "row": 17,
                                        "column": 26
                                      },
                                      "text": "n"
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 17,
                                        "column": 26
                                      },
                                      "end": {
                                        "row": 17,
                                        "column": 27
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "instance_variable",
                                      "start": {
                                        "row": 17,
                                        "column": 28
                                      },
                                      "end": {
                                        "row": 17,
                                        "column": 30
                                      },
                                      "text": "@n"
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 17,
                                        "column": 30
                                      },
                                      "end": {
                                        "row": 17,
                                        "column": 31
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "else",
                          "start": {
                            "row": 18,
                            "column": 6
                          },
                          "end": {
                            "row": 25,
                            "column": 11
                          },
                          "text": "else\n        p = nearest.mean_cumn.to_f / @n\n        max_n = (4 * @n * @delta * p * (1 - p)).floor\n        if max_n - nearest.n >= n\n          _add_weight(nearest, x, n)\n        else\n          _new_centroid(x, n, nearest.cumn)\n        end",
                          "children": [
                            {
                              "type": "else",
                              "start": {
                                "row": 18,
                                "column": 6
                              },
                              "end": {
                                "row": 18,
                                "column": 10
                              },
                              "text": "else"
                            },
                            {
                              "type": "assignment",
                              "start": {
                                "row": 19,
                                "column": 8
                              },
                              "end": {
                                "row": 19,
                                "column": 39
                              },
                              "text": "p = nearest.mean_cumn.to_f / @n",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 19,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 19,
                                    "column": 9
                                  },
                                  "text": "p"
                                },
                                {
                                  "type": "=",
                                  "start": {
                                    "row": 19,
                                    "column": 10
                                  },
                                  "end": {
                                    "row": 19,
                                    "column": 11
                                  },
                                  "text": "="
                                },
                                {
                                  "type": "binary",
                                  "start": {
                                    "row": 19,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 19,
                                    "column": 39
                                  },
                                  "text": "nearest.mean_cumn.to_f / @n",
                                  "children": [
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 19,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 19,
                                        "column": 34
                                      },
                                      "text": "nearest.mean_cumn.to_f",
                                      "children": [
                                        {
                                          "type": "call",
                                          "start": {
                                            "row": 19,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 19,
                                            "column": 29
                                          },
                                          "text": "nearest.mean_cumn",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 19,
                                                "column": 12
                                              },
                                              "end": {
                                                "row": 19,
                                                "column": 19
                                              },
                                              "text": "nearest"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 19,
                                                "column": 19
                                              },
                                              "end": {
                                                "row": 19,
                                                "column": 20
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 19,
                                                "column": 20
                                              },
                                              "end": {
                                                "row": 19,
                                                "column": 29
                                              },
                                              "text": "mean_cumn"
                                            }
                                          ]
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 19,
                                            "column": 29
                                          },
                                          "end": {
                                            "row": 19,
                                            "column": 30
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 19,
                                            "column": 30
                                          },
                                          "end": {
                                            "row": 19,
                                            "column": 34
                                          },
                                          "text": "to_f"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "/",
                                      "start": {
                                        "row": 19,
                                        "column": 35
                                      },
                                      "end": {
                                        "row": 19,
                                        "column": 36
                                      },
                                      "text": "/"
                                    },
                                    {
                                      "type": "instance_variable",
                                      "start": {
                                        "row": 19,
                                        "column": 37
                                      },
                                      "end": {
                                        "row": 19,
                                        "column": 39
                                      },
                                      "text": "@n"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "assignment",
                              "start": {
                                "row": 20,
                                "column": 8
                              },
                              "end": {
                                "row": 20,
                                "column": 53
                              },
                              "text": "max_n = (4 * @n * @delta * p * (1 - p)).floor",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 20,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 20,
                                    "column": 13
                                  },
                                  "text": "max_n"
                                },
                                {
                                  "type": "=",
                                  "start": {
                                    "row": 20,
                                    "column": 14
                                  },
                                  "end": {
                                    "row": 20,
                                    "column": 15
                                  },
                                  "text": "="
                                },
                                {
                                  "type": "call",
                                  "start": {
                                    "row": 20,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 20,
                                    "column": 53
                                  },
                                  "text": "(4 * @n * @delta * p * (1 - p)).floor",
                                  "children": [
                                    {
                                      "type": "parenthesized_statements",
                                      "start": {
                                        "row": 20,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 20,
                                        "column": 47
                                      },
                                      "text": "(4 * @n * @delta * p * (1 - p))",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 20,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 20,
                                            "column": 17
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "binary",
                                          "start": {
                                            "row": 20,
                                            "column": 17
                                          },
                                          "end": {
                                            "row": 20,
                                            "column": 46
                                          },
                                          "text": "4 * @n * @delta * p * (1 - p)",
                                          "children": [
                                            {
                                              "type": "binary",
                                              "start": {
                                                "row": 20,
                                                "column": 17
                                              },
                                              "end": {
                                                "row": 20,
                                                "column": 36
                                              },
                                              "text": "4 * @n * @delta * p",
                                              "children": [
                                                {
                                                  "type": "binary",
                                                  "start": {
                                                    "row": 20,
                                                    "column": 17
                                                  },
                                                  "end": {
                                                    "row": 20,
                                                    "column": 32
                                                  },
                                                  "text": "4 * @n * @delta",
                                                  "children": [
                                                    {
                                                      "type": "binary",
                                                      "start": {
                                                        "row": 20,
                                                        "column": 17
                                                      },
                                                      "end": {
                                                        "row": 20,
                                                        "column": 23
                                                      },
                                                      "text": "4 * @n",
                                                      "children": [
                                                        {
                                                          "type": "integer",
                                                          "start": {
                                                            "row": 20,
                                                            "column": 17
                                                          },
                                                          "end": {
                                                            "row": 20,
                                                            "column": 18
                                                          },
                                                          "text": "4"
                                                        },
                                                        {
                                                          "type": "*",
                                                          "start": {
                                                            "row": 20,
                                                            "column": 19
                                                          },
                                                          "end": {
                                                            "row": 20,
                                                            "column": 20
                                                          },
                                                          "text": "*"
                                                        },
                                                        {
                                                          "type": "instance_variable",
                                                          "start": {
                                                            "row": 20,
                                                            "column": 21
                                                          },
                                                          "end": {
                                                            "row": 20,
                                                            "column": 23
                                                          },
                                                          "text": "@n"
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "*",
                                                      "start": {
                                                        "row": 20,
                                                        "column": 24
                                                      },
                                                      "end": {
                                                        "row": 20,
                                                        "column": 25
                                                      },
                                                      "text": "*"
                                                    },
                                                    {
                                                      "type": "instance_variable",
                                                      "start": {
                                                        "row": 20,
                                                        "column": 26
                                                      },
                                                      "end": {
                                                        "row": 20,
                                                        "column": 32
                                                      },
                                                      "text": "@delta"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "*",
                                                  "start": {
                                                    "row": 20,
                                                    "column": 33
                                                  },
                                                  "end": {
                                                    "row": 20,
                                                    "column": 34
                                                  },
                                                  "text": "*"
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 20,
                                                    "column": 35
                                                  },
                                                  "end": {
                                                    "row": 20,
                                                    "column": 36
                                                  },
                                                  "text": "p"
                                                }
                                              ]
                                            },
                                            {
                                              "type": "*",
                                              "start": {
                                                "row": 20,
                                                "column": 37
                                              },
                                              "end": {
                                                "row": 20,
                                                "column": 38
                                              },
                                              "text": "*"
                                            },
                                            {
                                              "type": "parenthesized_statements",
                                              "start": {
                                                "row": 20,
                                                "column": 39
                                              },
                                              "end": {
                                                "row": 20,
                                                "column": 46
                                              },
                                              "text": "(1 - p)",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 20,
                                                    "column": 39
                                                  },
                                                  "end": {
                                                    "row": 20,
                                                    "column": 40
                                                  },
                                                  "text": "("
                                                },
                                                {
                                                  "type": "binary",
                                                  "start": {
                                                    "row": 20,
                                                    "column": 40
                                                  },
                                                  "end": {
                                                    "row": 20,
                                                    "column": 45
                                                  },
                                                  "text": "1 - p",
                                                  "children": [
                                                    {
                                                      "type": "integer",
                                                      "start": {
                                                        "row": 20,
                                                        "column": 40
                                                      },
                                                      "end": {
                                                        "row": 20,
                                                        "column": 41
                                                      },
                                                      "text": "1"
                                                    },
                                                    {
                                                      "type": "-",
                                                      "start": {
                                                        "row": 20,
                                                        "column": 42
                                                      },
                                                      "end": {
                                                        "row": 20,
                                                        "column": 43
                                                      },
                                                      "text": "-"
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 20,
                                                        "column": 44
                                                      },
                                                      "end": {
                                                        "row": 20,
                                                        "column": 45
                                                      },
                                                      "text": "p"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 20,
                                                    "column": 45
                                                  },
                                                  "end": {
                                                    "row": 20,
                                                    "column": 46
                                                  },
                                                  "text": ")"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 20,
                                            "column": 46
                                          },
                                          "end": {
                                            "row": 20,
                                            "column": 47
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 20,
                                        "column": 47
                                      },
                                      "end": {
                                        "row": 20,
                                        "column": 48
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 20,
                                        "column": 48
                                      },
                                      "end": {
                                        "row": 20,
                                        "column": 53
                                      },
                                      "text": "floor"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "if",
                              "start": {
                                "row": 21,
                                "column": 8
                              },
                              "end": {
                                "row": 25,
                                "column": 11
                              },
                              "text": "if max_n - nearest.n >= n\n          _add_weight(nearest, x, n)\n        else\n          _new_centroid(x, n, nearest.cumn)\n        end",
                              "children": [
                                {
                                  "type": "if",
                                  "start": {
                                    "row": 21,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 21,
                                    "column": 10
                                  },
                                  "text": "if"
                                },
                                {
                                  "type": "binary",
                                  "start": {
                                    "row": 21,
                                    "column": 11
                                  },
                                  "end": {
                                    "row": 21,
                                    "column": 33
                                  },
                                  "text": "max_n - nearest.n >= n",
                                  "children": [
                                    {
                                      "type": "binary",
                                      "start": {
                                        "row": 21,
                                        "column": 11
                                      },
                                      "end": {
                                        "row": 21,
                                        "column": 28
                                      },
                                      "text": "max_n - nearest.n",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 21,
                                            "column": 11
                                          },
                                          "end": {
                                            "row": 21,
                                            "column": 16
                                          },
                                          "text": "max_n"
                                        },
                                        {
                                          "type": "-",
                                          "start": {
                                            "row": 21,
                                            "column": 17
                                          },
                                          "end": {
                                            "row": 21,
                                            "column": 18
                                          },
                                          "text": "-"
                                        },
                                        {
                                          "type": "call",
                                          "start": {
                                            "row": 21,
                                            "column": 19
                                          },
                                          "end": {
                                            "row": 21,
                                            "column": 28
                                          },
                                          "text": "nearest.n",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 21,
                                                "column": 19
                                              },
                                              "end": {
                                                "row": 21,
                                                "column": 26
                                              },
                                              "text": "nearest"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 21,
                                                "column": 26
                                              },
                                              "end": {
                                                "row": 21,
                                                "column": 27
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 21,
                                                "column": 27
                                              },
                                              "end": {
                                                "row": 21,
                                                "column": 28
                                              },
                                              "text": "n"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ">=",
                                      "start": {
                                        "row": 21,
                                        "column": 29
                                      },
                                      "end": {
                                        "row": 21,
                                        "column": 31
                                      },
                                      "text": ">="
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 21,
                                        "column": 32
                                      },
                                      "end": {
                                        "row": 21,
                                        "column": 33
                                      },
                                      "text": "n"
                                    }
                                  ]
                                },
                                {
                                  "type": "then",
                                  "start": {
                                    "row": 21,
                                    "column": 33
                                  },
                                  "end": {
                                    "row": 22,
                                    "column": 36
                                  },
                                  "text": "\n          _add_weight(nearest, x, n)",
                                  "children": [
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 22,
                                        "column": 10
                                      },
                                      "end": {
                                        "row": 22,
                                        "column": 36
                                      },
                                      "text": "_add_weight(nearest, x, n)",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 22,
                                            "column": 10
                                          },
                                          "end": {
                                            "row": 22,
                                            "column": 21
                                          },
                                          "text": "_add_weight"
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 22,
                                            "column": 21
                                          },
                                          "end": {
                                            "row": 22,
                                            "column": 36
                                          },
                                          "text": "(nearest, x, n)",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 22,
                                                "column": 21
                                              },
                                              "end": {
                                                "row": 22,
                                                "column": 22
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 22,
                                                "column": 22
                                              },
                                              "end": {
                                                "row": 22,
                                                "column": 29
                                              },
                                              "text": "nearest"
                                            },
                                            {
                                              "type": ",",
                                              "start": {
                                                "row": 22,
                                                "column": 29
                                              },
                                              "end": {
                                                "row": 22,
                                                "column": 30
                                              },
                                              "text": ","
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 22,
                                                "column": 31
                                              },
                                              "end": {
                                                "row": 22,
                                                "column": 32
                                              },
                                              "text": "x"
                                            },
                                            {
                                              "type": ",",
                                              "start": {
                                                "row": 22,
                                                "column": 32
                                              },
                                              "end": {
                                                "row": 22,
                                                "column": 33
                                              },
                                              "text": ","
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 22,
                                                "column": 34
                                              },
                                              "end": {
                                                "row": 22,
                                                "column": 35
                                              },
                                              "text": "n"
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 22,
                                                "column": 35
                                              },
                                              "end": {
                                                "row": 22,
                                                "column": 36
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "else",
                                  "start": {
                                    "row": 23,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 24,
                                    "column": 43
                                  },
                                  "text": "else\n          _new_centroid(x, n, nearest.cumn)",
                                  "children": [
                                    {
                                      "type": "else",
                                      "start": {
                                        "row": 23,
                                        "column": 8
                                      },
                                      "end": {
                                        "row": 23,
                                        "column": 12
                                      },
                                      "text": "else"
                                    },
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 24,
                                        "column": 10
                                      },
                                      "end": {
                                        "row": 24,
                                        "column": 43
                                      },
                                      "text": "_new_centroid(x, n, nearest.cumn)",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 24,
                                            "column": 10
                                          },
                                          "end": {
                                            "row": 24,
                                            "column": 23
                                          },
                                          "text": "_new_centroid"
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 24,
                                            "column": 23
                                          },
                                          "end": {
                                            "row": 24,
                                            "column": 43
                                          },
                                          "text": "(x, n, nearest.cumn)",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 24,
                                                "column": 23
                                              },
                                              "end": {
                                                "row": 24,
                                                "column": 24
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 24,
                                                "column": 24
                                              },
                                              "end": {
                                                "row": 24,
                                                "column": 25
                                              },
                                              "text": "x"
                                            },
                                            {
                                              "type": ",",
                                              "start": {
                                                "row": 24,
                                                "column": 25
                                              },
                                              "end": {
                                                "row": 24,
                                                "column": 26
                                              },
                                              "text": ","
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 24,
                                                "column": 27
                                              },
                                              "end": {
                                                "row": 24,
                                                "column": 28
                                              },
                                              "text": "n"
                                            },
                                            {
                                              "type": ",",
                                              "start": {
                                                "row": 24,
                                                "column": 28
                                              },
                                              "end": {
                                                "row": 24,
                                                "column": 29
                                              },
                                              "text": ","
                                            },
                                            {
                                              "type": "call",
                                              "start": {
                                                "row": 24,
                                                "column": 30
                                              },
                                              "end": {
                                                "row": 24,
                                                "column": 42
                                              },
                                              "text": "nearest.cumn",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 24,
                                                    "column": 30
                                                  },
                                                  "end": {
                                                    "row": 24,
                                                    "column": 37
                                                  },
                                                  "text": "nearest"
                                                },
                                                {
                                                  "type": ".",
                                                  "start": {
                                                    "row": 24,
                                                    "column": 37
                                                  },
                                                  "end": {
                                                    "row": 24,
                                                    "column": 38
                                                  },
                                                  "text": "."
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 24,
                                                    "column": 38
                                                  },
                                                  "end": {
                                                    "row": 24,
                                                    "column": 42
                                                  },
                                                  "text": "cumn"
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 24,
                                                "column": 42
                                              },
                                              "end": {
                                                "row": 24,
                                                "column": 43
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "end",
                                  "start": {
                                    "row": 25,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 25,
                                    "column": 11
                                  },
                                  "text": "end"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "end",
                  "start": {
                    "row": 26,
                    "column": 6
                  },
                  "end": {
                    "row": 26,
                    "column": 9
                  },
                  "text": "end"
                }
              ]
            },
            {
              "type": "call",
              "start": {
                "row": 28,
                "column": 6
              },
              "end": {
                "row": 28,
                "column": 22
              },
              "text": "_cumulate(false)",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 28,
                    "column": 6
                  },
                  "end": {
                    "row": 28,
                    "column": 15
                  },
                  "text": "_cumulate"
                },
                {
                  "type": "argument_list",
                  "start": {
                    "row": 28,
                    "column": 15
                  },
                  "end": {
                    "row": 28,
                    "column": 22
                  },
                  "text": "(false)",
                  "children": [
                    {
                      "type": "(",
                      "start": {
                        "row": 28,
                        "column": 15
                      },
                      "end": {
                        "row": 28,
                        "column": 16
                      },
                      "text": "("
                    },
                    {
                      "type": "false",
                      "start": {
                        "row": 28,
                        "column": 16
                      },
                      "end": {
                        "row": 28,
                        "column": 21
                      },
                      "text": "false"
                    },
                    {
                      "type": ")",
                      "start": {
                        "row": 28,
                        "column": 21
                      },
                      "end": {
                        "row": 28,
                        "column": 22
                      },
                      "text": ")"
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 30,
                "column": 6
              },
              "end": {
                "row": 30,
                "column": 66
              },
              "text": "# If the number of centroids has grown to a very large size,"
            },
            {
              "type": "comment",
              "start": {
                "row": 31,
                "column": 6
              },
              "end": {
                "row": 31,
                "column": 63
              },
              "text": "# it may be due to values being inserted in sorted order."
            },
            {
              "type": "comment",
              "start": {
                "row": 32,
                "column": 6
              },
              "end": {
                "row": 32,
                "column": 66
              },
              "text": "# We combat that by replaying the centroids in random order,"
            },
            {
              "type": "comment",
              "start": {
                "row": 33,
                "column": 6
              },
              "end": {
                "row": 33,
                "column": 36
              },
              "text": "# which is what compress! does"
            },
            {
              "type": "if_modifier",
              "start": {
                "row": 34,
                "column": 6
              },
              "end": {
                "row": 34,
                "column": 50
              },
              "text": "compress! if @centroids.size > (@k / @delta)",
              "children": [
                {
                  "type": "call",
                  "start": {
                    "row": 34,
                    "column": 6
                  },
                  "end": {
                    "row": 34,
                    "column": 15
                  },
                  "text": "compress!",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 34,
                        "column": 6
                      },
                      "end": {
                        "row": 34,
                        "column": 15
                      },
                      "text": "compress!"
                    }
                  ]
                },
                {
                  "type": "if",
                  "start": {
                    "row": 34,
                    "column": 16
                  },
                  "end": {
                    "row": 34,
                    "column": 18
                  },
                  "text": "if"
                },
                {
                  "type": "binary",
                  "start": {
                    "row": 34,
                    "column": 19
                  },
                  "end": {
                    "row": 34,
                    "column": 50
                  },
                  "text": "@centroids.size > (@k / @delta)",
                  "children": [
                    {
                      "type": "call",
                      "start": {
                        "row": 34,
                        "column": 19
                      },
                      "end": {
                        "row": 34,
                        "column": 34
                      },
                      "text": "@centroids.size",
                      "children": [
                        {
                          "type": "instance_variable",
                          "start": {
                            "row": 34,
                            "column": 19
                          },
                          "end": {
                            "row": 34,
                            "column": 29
                          },
                          "text": "@centroids"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 34,
                            "column": 29
                          },
                          "end": {
                            "row": 34,
                            "column": 30
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 34,
                            "column": 30
                          },
                          "end": {
                            "row": 34,
                            "column": 34
                          },
                          "text": "size"
                        }
                      ]
                    },
                    {
                      "type": ">",
                      "start": {
                        "row": 34,
                        "column": 35
                      },
                      "end": {
                        "row": 34,
                        "column": 36
                      },
                      "text": ">"
                    },
                    {
                      "type": "parenthesized_statements",
                      "start": {
                        "row": 34,
                        "column": 37
                      },
                      "end": {
                        "row": 34,
                        "column": 50
                      },
                      "text": "(@k / @delta)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 34,
                            "column": 37
                          },
                          "end": {
                            "row": 34,
                            "column": 38
                          },
                          "text": "("
                        },
                        {
                          "type": "binary",
                          "start": {
                            "row": 34,
                            "column": 38
                          },
                          "end": {
                            "row": 34,
                            "column": 49
                          },
                          "text": "@k / @delta",
                          "children": [
                            {
                              "type": "instance_variable",
                              "start": {
                                "row": 34,
                                "column": 38
                              },
                              "end": {
                                "row": 34,
                                "column": 40
                              },
                              "text": "@k"
                            },
                            {
                              "type": "/",
                              "start": {
                                "row": 34,
                                "column": 41
                              },
                              "end": {
                                "row": 34,
                                "column": 42
                              },
                              "text": "/"
                            },
                            {
                              "type": "instance_variable",
                              "start": {
                                "row": 34,
                                "column": 43
                              },
                              "end": {
                                "row": 34,
                                "column": 49
                              },
                              "text": "@delta"
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 34,
                            "column": 49
                          },
                          "end": {
                            "row": 34,
                            "column": 50
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "nil",
              "start": {
                "row": 36,
                "column": 6
              },
              "end": {
                "row": 36,
                "column": 9
              },
              "text": "nil",
              "children": [
                {
                  "type": "nil",
                  "start": {
                    "row": 36,
                    "column": 6
                  },
                  "end": {
                    "row": 36,
                    "column": 9
                  },
                  "text": "nil"
                }
              ]
            }
          ]
        },
        {
          "type": "end",
          "start": {
            "row": 37,
            "column": 4
          },
          "end": {
            "row": 37,
            "column": 7
          },
          "text": "end"
        }
      ]
    }
  ]
}