{
  "type": "program",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 10,
    "column": 7
  },
  "text": "def coerce_non_null_input(value_name, ctx)\n      if @values_by_name.key?(value_name)\n        @values_by_name.fetch(value_name).value\n      elsif match_by_value = @values_by_name.find { |k, v| v.value == value_name }\n        # this is for matching default values, which are \"inputs\", but they're\n        # the Ruby value, not the GraphQL string.\n        match_by_value[1].value\n      else\n        nil\n      end\n    end",
  "children": [
    {
      "type": "method",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 10,
        "column": 7
      },
      "text": "def coerce_non_null_input(value_name, ctx)\n      if @values_by_name.key?(value_name)\n        @values_by_name.fetch(value_name).value\n      elsif match_by_value = @values_by_name.find { |k, v| v.value == value_name }\n        # this is for matching default values, which are \"inputs\", but they're\n        # the Ruby value, not the GraphQL string.\n        match_by_value[1].value\n      else\n        nil\n      end\n    end",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 25
          },
          "text": "coerce_non_null_input"
        },
        {
          "type": "method_parameters",
          "start": {
            "row": 0,
            "column": 25
          },
          "end": {
            "row": 0,
            "column": 42
          },
          "text": "(value_name, ctx)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 25
              },
              "end": {
                "row": 0,
                "column": 26
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 26
              },
              "end": {
                "row": 0,
                "column": 36
              },
              "text": "value_name"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 36
              },
              "end": {
                "row": 0,
                "column": 37
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 38
              },
              "end": {
                "row": 0,
                "column": 41
              },
              "text": "ctx"
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 41
              },
              "end": {
                "row": 0,
                "column": 42
              },
              "text": ")"
            }
          ]
        },
        {
          "type": "body_statement",
          "start": {
            "row": 1,
            "column": 6
          },
          "end": {
            "row": 9,
            "column": 9
          },
          "text": "if @values_by_name.key?(value_name)\n        @values_by_name.fetch(value_name).value\n      elsif match_by_value = @values_by_name.find { |k, v| v.value == value_name }\n        # this is for matching default values, which are \"inputs\", but they're\n        # the Ruby value, not the GraphQL string.\n        match_by_value[1].value\n      else\n        nil\n      end",
          "children": [
            {
              "type": "if",
              "start": {
                "row": 1,
                "column": 6
              },
              "end": {
                "row": 9,
                "column": 9
              },
              "text": "if @values_by_name.key?(value_name)\n        @values_by_name.fetch(value_name).value\n      elsif match_by_value = @values_by_name.find { |k, v| v.value == value_name }\n        # this is for matching default values, which are \"inputs\", but they're\n        # the Ruby value, not the GraphQL string.\n        match_by_value[1].value\n      else\n        nil\n      end",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 1,
                    "column": 6
                  },
                  "end": {
                    "row": 1,
                    "column": 8
                  },
                  "text": "if"
                },
                {
                  "type": "call",
                  "start": {
                    "row": 1,
                    "column": 9
                  },
                  "end": {
                    "row": 1,
                    "column": 41
                  },
                  "text": "@values_by_name.key?(value_name)",
                  "children": [
                    {
                      "type": "instance_variable",
                      "start": {
                        "row": 1,
                        "column": 9
                      },
                      "end": {
                        "row": 1,
                        "column": 24
                      },
                      "text": "@values_by_name"
                    },
                    {
                      "type": ".",
                      "start": {
                        "row": 1,
                        "column": 24
                      },
                      "end": {
                        "row": 1,
                        "column": 25
                      },
                      "text": "."
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 1,
                        "column": 25
                      },
                      "end": {
                        "row": 1,
                        "column": 29
                      },
                      "text": "key?"
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 1,
                        "column": 29
                      },
                      "end": {
                        "row": 1,
                        "column": 41
                      },
                      "text": "(value_name)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 1,
                            "column": 29
                          },
                          "end": {
                            "row": 1,
                            "column": 30
                          },
                          "text": "("
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 1,
                            "column": 30
                          },
                          "end": {
                            "row": 1,
                            "column": 40
                          },
                          "text": "value_name"
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 1,
                            "column": 40
                          },
                          "end": {
                            "row": 1,
                            "column": 41
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "then",
                  "start": {
                    "row": 1,
                    "column": 41
                  },
                  "end": {
                    "row": 2,
                    "column": 47
                  },
                  "text": "\n        @values_by_name.fetch(value_name).value",
                  "children": [
                    {
                      "type": "call",
                      "start": {
                        "row": 2,
                        "column": 8
                      },
                      "end": {
                        "row": 2,
                        "column": 47
                      },
                      "text": "@values_by_name.fetch(value_name).value",
                      "children": [
                        {
                          "type": "call",
                          "start": {
                            "row": 2,
                            "column": 8
                          },
                          "end": {
                            "row": 2,
                            "column": 41
                          },
                          "text": "@values_by_name.fetch(value_name)",
                          "children": [
                            {
                              "type": "instance_variable",
                              "start": {
                                "row": 2,
                                "column": 8
                              },
                              "end": {
                                "row": 2,
                                "column": 23
                              },
                              "text": "@values_by_name"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 2,
                                "column": 23
                              },
                              "end": {
                                "row": 2,
                                "column": 24
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 2,
                                "column": 24
                              },
                              "end": {
                                "row": 2,
                                "column": 29
                              },
                              "text": "fetch"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 2,
                                "column": 29
                              },
                              "end": {
                                "row": 2,
                                "column": 41
                              },
                              "text": "(value_name)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 2,
                                    "column": 29
                                  },
                                  "end": {
                                    "row": 2,
                                    "column": 30
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 2,
                                    "column": 30
                                  },
                                  "end": {
                                    "row": 2,
                                    "column": 40
                                  },
                                  "text": "value_name"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 2,
                                    "column": 40
                                  },
                                  "end": {
                                    "row": 2,
                                    "column": 41
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 2,
                            "column": 41
                          },
                          "end": {
                            "row": 2,
                            "column": 42
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 2,
                            "column": 42
                          },
                          "end": {
                            "row": 2,
                            "column": 47
                          },
                          "text": "value"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "elsif",
                  "start": {
                    "row": 3,
                    "column": 6
                  },
                  "end": {
                    "row": 8,
                    "column": 11
                  },
                  "text": "elsif match_by_value = @values_by_name.find { |k, v| v.value == value_name }\n        # this is for matching default values, which are \"inputs\", but they're\n        # the Ruby value, not the GraphQL string.\n        match_by_value[1].value\n      else\n        nil",
                  "children": [
                    {
                      "type": "elsif",
                      "start": {
                        "row": 3,
                        "column": 6
                      },
                      "end": {
                        "row": 3,
                        "column": 11
                      },
                      "text": "elsif"
                    },
                    {
                      "type": "assignment",
                      "start": {
                        "row": 3,
                        "column": 12
                      },
                      "end": {
                        "row": 3,
                        "column": 82
                      },
                      "text": "match_by_value = @values_by_name.find { |k, v| v.value == value_name }",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 3,
                            "column": 12
                          },
                          "end": {
                            "row": 3,
                            "column": 26
                          },
                          "text": "match_by_value"
                        },
                        {
                          "type": "=",
                          "start": {
                            "row": 3,
                            "column": 27
                          },
                          "end": {
                            "row": 3,
                            "column": 28
                          },
                          "text": "="
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 3,
                            "column": 29
                          },
                          "end": {
                            "row": 3,
                            "column": 82
                          },
                          "text": "@values_by_name.find { |k, v| v.value == value_name }",
                          "children": [
                            {
                              "type": "instance_variable",
                              "start": {
                                "row": 3,
                                "column": 29
                              },
                              "end": {
                                "row": 3,
                                "column": 44
                              },
                              "text": "@values_by_name"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 3,
                                "column": 44
                              },
                              "end": {
                                "row": 3,
                                "column": 45
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 3,
                                "column": 45
                              },
                              "end": {
                                "row": 3,
                                "column": 49
                              },
                              "text": "find"
                            },
                            {
                              "type": "block",
                              "start": {
                                "row": 3,
                                "column": 50
                              },
                              "end": {
                                "row": 3,
                                "column": 82
                              },
                              "text": "{ |k, v| v.value == value_name }",
                              "children": [
                                {
                                  "type": "{",
                                  "start": {
                                    "row": 3,
                                    "column": 50
                                  },
                                  "end": {
                                    "row": 3,
                                    "column": 51
                                  },
                                  "text": "{"
                                },
                                {
                                  "type": "block_parameters",
                                  "start": {
                                    "row": 3,
                                    "column": 52
                                  },
                                  "end": {
                                    "row": 3,
                                    "column": 58
                                  },
                                  "text": "|k, v|",
                                  "children": [
                                    {
                                      "type": "|",
                                      "start": {
                                        "row": 3,
                                        "column": 52
                                      },
                                      "end": {
                                        "row": 3,
                                        "column": 53
                                      },
                                      "text": "|"
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 3,
                                        "column": 53
                                      },
                                      "end": {
                                        "row": 3,
                                        "column": 54
                                      },
                                      "text": "k"
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 3,
                                        "column": 54
                                      },
                                      "end": {
                                        "row": 3,
                                        "column": 55
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 3,
                                        "column": 56
                                      },
                                      "end": {
                                        "row": 3,
                                        "column": 57
                                      },
                                      "text": "v"
                                    },
                                    {
                                      "type": "|",
                                      "start": {
                                        "row": 3,
                                        "column": 57
                                      },
                                      "end": {
                                        "row": 3,
                                        "column": 58
                                      },
                                      "text": "|"
                                    }
                                  ]
                                },
                                {
                                  "type": "block_body",
                                  "start": {
                                    "row": 3,
                                    "column": 59
                                  },
                                  "end": {
                                    "row": 3,
                                    "column": 80
                                  },
                                  "text": "v.value == value_name",
                                  "children": [
                                    {
                                      "type": "binary",
                                      "start": {
                                        "row": 3,
                                        "column": 59
                                      },
                                      "end": {
                                        "row": 3,
                                        "column": 80
                                      },
                                      "text": "v.value == value_name",
                                      "children": [
                                        {
                                          "type": "call",
                                          "start": {
                                            "row": 3,
                                            "column": 59
                                          },
                                          "end": {
                                            "row": 3,
                                            "column": 66
                                          },
                                          "text": "v.value",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 3,
                                                "column": 59
                                              },
                                              "end": {
                                                "row": 3,
                                                "column": 60
                                              },
                                              "text": "v"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 3,
                                                "column": 60
                                              },
                                              "end": {
                                                "row": 3,
                                                "column": 61
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 3,
                                                "column": 61
                                              },
                                              "end": {
                                                "row": 3,
                                                "column": 66
                                              },
                                              "text": "value"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "==",
                                          "start": {
                                            "row": 3,
                                            "column": 67
                                          },
                                          "end": {
                                            "row": 3,
                                            "column": 69
                                          },
                                          "text": "=="
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 3,
                                            "column": 70
                                          },
                                          "end": {
                                            "row": 3,
                                            "column": 80
                                          },
                                          "text": "value_name"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "}",
                                  "start": {
                                    "row": 3,
                                    "column": 81
                                  },
                                  "end": {
                                    "row": 3,
                                    "column": 82
                                  },
                                  "text": "}"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 4,
                        "column": 8
                      },
                      "end": {
                        "row": 4,
                        "column": 78
                      },
                      "text": "# this is for matching default values, which are \"inputs\", but they're"
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 5,
                        "column": 8
                      },
                      "end": {
                        "row": 5,
                        "column": 49
                      },
                      "text": "# the Ruby value, not the GraphQL string."
                    },
                    {
                      "type": "then",
                      "start": {
                        "row": 5,
                        "column": 49
                      },
                      "end": {
                        "row": 6,
                        "column": 31
                      },
                      "text": "\n        match_by_value[1].value",
                      "children": [
                        {
                          "type": "call",
                          "start": {
                            "row": 6,
                            "column": 8
                          },
                          "end": {
                            "row": 6,
                            "column": 31
                          },
                          "text": "match_by_value[1].value",
                          "children": [
                            {
                              "type": "element_reference",
                              "start": {
                                "row": 6,
                                "column": 8
                              },
                              "end": {
                                "row": 6,
                                "column": 25
                              },
                              "text": "match_by_value[1]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 6,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 6,
                                    "column": 22
                                  },
                                  "text": "match_by_value"
                                },
                                {
                                  "type": "[",
                                  "start": {
                                    "row": 6,
                                    "column": 22
                                  },
                                  "end": {
                                    "row": 6,
                                    "column": 23
                                  },
                                  "text": "["
                                },
                                {
                                  "type": "integer",
                                  "start": {
                                    "row": 6,
                                    "column": 23
                                  },
                                  "end": {
                                    "row": 6,
                                    "column": 24
                                  },
                                  "text": "1"
                                },
                                {
                                  "type": "]",
                                  "start": {
                                    "row": 6,
                                    "column": 24
                                  },
                                  "end": {
                                    "row": 6,
                                    "column": 25
                                  },
                                  "text": "]"
                                }
                              ]
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 6,
                                "column": 25
                              },
                              "end": {
                                "row": 6,
                                "column": 26
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 6,
                                "column": 26
                              },
                              "end": {
                                "row": 6,
                                "column": 31
                              },
                              "text": "value"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "else",
                      "start": {
                        "row": 7,
                        "column": 6
                      },
                      "end": {
                        "row": 8,
                        "column": 11
                      },
                      "text": "else\n        nil",
                      "children": [
                        {
                          "type": "else",
                          "start": {
                            "row": 7,
                            "column": 6
                          },
                          "end": {
                            "row": 7,
                            "column": 10
                          },
                          "text": "else"
                        },
                        {
                          "type": "nil",
                          "start": {
                            "row": 8,
                            "column": 8
                          },
                          "end": {
                            "row": 8,
                            "column": 11
                          },
                          "text": "nil",
                          "children": [
                            {
                              "type": "nil",
                              "start": {
                                "row": 8,
                                "column": 8
                              },
                              "end": {
                                "row": 8,
                                "column": 11
                              },
                              "text": "nil"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "end",
                  "start": {
                    "row": 9,
                    "column": 6
                  },
                  "end": {
                    "row": 9,
                    "column": 9
                  },
                  "text": "end"
                }
              ]
            }
          ]
        },
        {
          "type": "end",
          "start": {
            "row": 10,
            "column": 4
          },
          "end": {
            "row": 10,
            "column": 7
          },
          "text": "end"
        }
      ]
    }
  ]
}