{
  "type": "program",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 47,
    "column": 7
  },
  "text": "def diff_args(user_args = [])\n      upstream_item = upstream_item_for_revision(base_revision)\n\n      # We do not need to spend the time to copy the content outside the\n      # mirror from HEAD because --relative will exclude it anyway.  Rename\n      # detection seems to apply only to the files included in the diff, so we\n      # shouldn't have another bug like\n      # https://github.com/cristibalan/braid/issues/41.\n      base_tree = git.make_tree_with_item(nil, path, upstream_item)\n\n      # Note: --relative does a naive prefix comparison.  If we set (for\n      # example) `--relative=a/b`, that will match an unrelated file or\n      # directory name `a/bb`.  If the mirror is a directory, we can avoid this\n      # by adding a trailing slash to the prefix.\n      #\n      # If the mirror is a file, the only way we can avoid matching a path like\n      # `a/bb` is to pass a path argument to limit the diff.  This means if the\n      # user passes additional path arguments, we won't get the behavior we\n      # expect, which is the intersection of the user-specified paths with the\n      # mirror.  However, it's probably unreasonable for a user to pass path\n      # arguments when diffing a single-file mirror, so we ignore the issue.\n      #\n      # Note: This code doesn't handle various cases in which a directory at the\n      # root of a mirror turns into a file or vice versa.  If that happens,\n      # hopefully the user takes corrective action manually.\n      if upstream_item.is_a?(git.BlobWithMode)\n        # For a single-file mirror, we use the upstream basename for the\n        # upstream side of the diff and the downstream basename for the\n        # downstream side, like what `git diff` does when given two blobs as\n        # arguments.  Use --relative to strip away the entire downstream path\n        # before we add the basenames.\n        return [\n          '--relative=' + path,\n          '--src-prefix=a/' + File.basename(remote_path),\n          '--dst-prefix=b/' + File.basename(path),\n          base_tree,\n          # user_args may contain options, which must come before paths.\n          *user_args,\n          path\n        ]\n      else\n        return [\n          '--relative=' + path + '/',\n          base_tree,\n          *user_args\n        ]\n      end\n    end",
  "children": [
    {
      "type": "method",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 47,
        "column": 7
      },
      "text": "def diff_args(user_args = [])\n      upstream_item = upstream_item_for_revision(base_revision)\n\n      # We do not need to spend the time to copy the content outside the\n      # mirror from HEAD because --relative will exclude it anyway.  Rename\n      # detection seems to apply only to the files included in the diff, so we\n      # shouldn't have another bug like\n      # https://github.com/cristibalan/braid/issues/41.\n      base_tree = git.make_tree_with_item(nil, path, upstream_item)\n\n      # Note: --relative does a naive prefix comparison.  If we set (for\n      # example) `--relative=a/b`, that will match an unrelated file or\n      # directory name `a/bb`.  If the mirror is a directory, we can avoid this\n      # by adding a trailing slash to the prefix.\n      #\n      # If the mirror is a file, the only way we can avoid matching a path like\n      # `a/bb` is to pass a path argument to limit the diff.  This means if the\n      # user passes additional path arguments, we won't get the behavior we\n      # expect, which is the intersection of the user-specified paths with the\n      # mirror.  However, it's probably unreasonable for a user to pass path\n      # arguments when diffing a single-file mirror, so we ignore the issue.\n      #\n      # Note: This code doesn't handle various cases in which a directory at the\n      # root of a mirror turns into a file or vice versa.  If that happens,\n      # hopefully the user takes corrective action manually.\n      if upstream_item.is_a?(git.BlobWithMode)\n        # For a single-file mirror, we use the upstream basename for the\n        # upstream side of the diff and the downstream basename for the\n        # downstream side, like what `git diff` does when given two blobs as\n        # arguments.  Use --relative to strip away the entire downstream path\n        # before we add the basenames.\n        return [\n          '--relative=' + path,\n          '--src-prefix=a/' + File.basename(remote_path),\n          '--dst-prefix=b/' + File.basename(path),\n          base_tree,\n          # user_args may contain options, which must come before paths.\n          *user_args,\n          path\n        ]\n      else\n        return [\n          '--relative=' + path + '/',\n          base_tree,\n          *user_args\n        ]\n      end\n    end",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 13
          },
          "text": "diff_args"
        },
        {
          "type": "method_parameters",
          "start": {
            "row": 0,
            "column": 13
          },
          "end": {
            "row": 0,
            "column": 29
          },
          "text": "(user_args = [])",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 13
              },
              "end": {
                "row": 0,
                "column": 14
              },
              "text": "("
            },
            {
              "type": "optional_parameter",
              "start": {
                "row": 0,
                "column": 14
              },
              "end": {
                "row": 0,
                "column": 28
              },
              "text": "user_args = []",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 14
                  },
                  "end": {
                    "row": 0,
                    "column": 23
                  },
                  "text": "user_args"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 0,
                    "column": 24
                  },
                  "end": {
                    "row": 0,
                    "column": 25
                  },
                  "text": "="
                },
                {
                  "type": "array",
                  "start": {
                    "row": 0,
                    "column": 26
                  },
                  "end": {
                    "row": 0,
                    "column": 28
                  },
                  "text": "[]",
                  "children": [
                    {
                      "type": "[",
                      "start": {
                        "row": 0,
                        "column": 26
                      },
                      "end": {
                        "row": 0,
                        "column": 27
                      },
                      "text": "["
                    },
                    {
                      "type": "]",
                      "start": {
                        "row": 0,
                        "column": 27
                      },
                      "end": {
                        "row": 0,
                        "column": 28
                      },
                      "text": "]"
                    }
                  ]
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 28
              },
              "end": {
                "row": 0,
                "column": 29
              },
              "text": ")"
            }
          ]
        },
        {
          "type": "body_statement",
          "start": {
            "row": 1,
            "column": 6
          },
          "end": {
            "row": 46,
            "column": 9
          },
          "text": "upstream_item = upstream_item_for_revision(base_revision)\n\n      # We do not need to spend the time to copy the content outside the\n      # mirror from HEAD because --relative will exclude it anyway.  Rename\n      # detection seems to apply only to the files included in the diff, so we\n      # shouldn't have another bug like\n      # https://github.com/cristibalan/braid/issues/41.\n      base_tree = git.make_tree_with_item(nil, path, upstream_item)\n\n      # Note: --relative does a naive prefix comparison.  If we set (for\n      # example) `--relative=a/b`, that will match an unrelated file or\n      # directory name `a/bb`.  If the mirror is a directory, we can avoid this\n      # by adding a trailing slash to the prefix.\n      #\n      # If the mirror is a file, the only way we can avoid matching a path like\n      # `a/bb` is to pass a path argument to limit the diff.  This means if the\n      # user passes additional path arguments, we won't get the behavior we\n      # expect, which is the intersection of the user-specified paths with the\n      # mirror.  However, it's probably unreasonable for a user to pass path\n      # arguments when diffing a single-file mirror, so we ignore the issue.\n      #\n      # Note: This code doesn't handle various cases in which a directory at the\n      # root of a mirror turns into a file or vice versa.  If that happens,\n      # hopefully the user takes corrective action manually.\n      if upstream_item.is_a?(git.BlobWithMode)\n        # For a single-file mirror, we use the upstream basename for the\n        # upstream side of the diff and the downstream basename for the\n        # downstream side, like what `git diff` does when given two blobs as\n        # arguments.  Use --relative to strip away the entire downstream path\n        # before we add the basenames.\n        return [\n          '--relative=' + path,\n          '--src-prefix=a/' + File.basename(remote_path),\n          '--dst-prefix=b/' + File.basename(path),\n          base_tree,\n          # user_args may contain options, which must come before paths.\n          *user_args,\n          path\n        ]\n      else\n        return [\n          '--relative=' + path + '/',\n          base_tree,\n          *user_args\n        ]\n      end",
          "children": [
            {
              "type": "assignment",
              "start": {
                "row": 1,
                "column": 6
              },
              "end": {
                "row": 1,
                "column": 63
              },
              "text": "upstream_item = upstream_item_for_revision(base_revision)",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 1,
                    "column": 6
                  },
                  "end": {
                    "row": 1,
                    "column": 19
                  },
                  "text": "upstream_item"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 1,
                    "column": 20
                  },
                  "end": {
                    "row": 1,
                    "column": 21
                  },
                  "text": "="
                },
                {
                  "type": "call",
                  "start": {
                    "row": 1,
                    "column": 22
                  },
                  "end": {
                    "row": 1,
                    "column": 63
                  },
                  "text": "upstream_item_for_revision(base_revision)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 1,
                        "column": 22
                      },
                      "end": {
                        "row": 1,
                        "column": 48
                      },
                      "text": "upstream_item_for_revision"
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 1,
                        "column": 48
                      },
                      "end": {
                        "row": 1,
                        "column": 63
                      },
                      "text": "(base_revision)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 1,
                            "column": 48
                          },
                          "end": {
                            "row": 1,
                            "column": 49
                          },
                          "text": "("
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 1,
                            "column": 49
                          },
                          "end": {
                            "row": 1,
                            "column": 62
                          },
                          "text": "base_revision"
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 1,
                            "column": 62
                          },
                          "end": {
                            "row": 1,
                            "column": 63
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 3,
                "column": 6
              },
              "end": {
                "row": 3,
                "column": 72
              },
              "text": "# We do not need to spend the time to copy the content outside the"
            },
            {
              "type": "comment",
              "start": {
                "row": 4,
                "column": 6
              },
              "end": {
                "row": 4,
                "column": 75
              },
              "text": "# mirror from HEAD because --relative will exclude it anyway.  Rename"
            },
            {
              "type": "comment",
              "start": {
                "row": 5,
                "column": 6
              },
              "end": {
                "row": 5,
                "column": 78
              },
              "text": "# detection seems to apply only to the files included in the diff, so we"
            },
            {
              "type": "comment",
              "start": {
                "row": 6,
                "column": 6
              },
              "end": {
                "row": 6,
                "column": 39
              },
              "text": "# shouldn't have another bug like"
            },
            {
              "type": "comment",
              "start": {
                "row": 7,
                "column": 6
              },
              "end": {
                "row": 7,
                "column": 55
              },
              "text": "# https://github.com/cristibalan/braid/issues/41."
            },
            {
              "type": "assignment",
              "start": {
                "row": 8,
                "column": 6
              },
              "end": {
                "row": 8,
                "column": 67
              },
              "text": "base_tree = git.make_tree_with_item(nil, path, upstream_item)",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 8,
                    "column": 6
                  },
                  "end": {
                    "row": 8,
                    "column": 15
                  },
                  "text": "base_tree"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 8,
                    "column": 16
                  },
                  "end": {
                    "row": 8,
                    "column": 17
                  },
                  "text": "="
                },
                {
                  "type": "call",
                  "start": {
                    "row": 8,
                    "column": 18
                  },
                  "end": {
                    "row": 8,
                    "column": 67
                  },
                  "text": "git.make_tree_with_item(nil, path, upstream_item)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 8,
                        "column": 18
                      },
                      "end": {
                        "row": 8,
                        "column": 21
                      },
                      "text": "git"
                    },
                    {
                      "type": ".",
                      "start": {
                        "row": 8,
                        "column": 21
                      },
                      "end": {
                        "row": 8,
                        "column": 22
                      },
                      "text": "."
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 8,
                        "column": 22
                      },
                      "end": {
                        "row": 8,
                        "column": 41
                      },
                      "text": "make_tree_with_item"
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 8,
                        "column": 41
                      },
                      "end": {
                        "row": 8,
                        "column": 67
                      },
                      "text": "(nil, path, upstream_item)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 8,
                            "column": 41
                          },
                          "end": {
                            "row": 8,
                            "column": 42
                          },
                          "text": "("
                        },
                        {
                          "type": "nil",
                          "start": {
                            "row": 8,
                            "column": 42
                          },
                          "end": {
                            "row": 8,
                            "column": 45
                          },
                          "text": "nil",
                          "children": [
                            {
                              "type": "nil",
                              "start": {
                                "row": 8,
                                "column": 42
                              },
                              "end": {
                                "row": 8,
                                "column": 45
                              },
                              "text": "nil"
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 8,
                            "column": 45
                          },
                          "end": {
                            "row": 8,
                            "column": 46
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 8,
                            "column": 47
                          },
                          "end": {
                            "row": 8,
                            "column": 51
                          },
                          "text": "path"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 8,
                            "column": 51
                          },
                          "end": {
                            "row": 8,
                            "column": 52
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 8,
                            "column": 53
                          },
                          "end": {
                            "row": 8,
                            "column": 66
                          },
                          "text": "upstream_item"
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 8,
                            "column": 66
                          },
                          "end": {
                            "row": 8,
                            "column": 67
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 10,
                "column": 6
              },
              "end": {
                "row": 10,
                "column": 72
              },
              "text": "# Note: --relative does a naive prefix comparison.  If we set (for"
            },
            {
              "type": "comment",
              "start": {
                "row": 11,
                "column": 6
              },
              "end": {
                "row": 11,
                "column": 71
              },
              "text": "# example) `--relative=a/b`, that will match an unrelated file or"
            },
            {
              "type": "comment",
              "start": {
                "row": 12,
                "column": 6
              },
              "end": {
                "row": 12,
                "column": 79
              },
              "text": "# directory name `a/bb`.  If the mirror is a directory, we can avoid this"
            },
            {
              "type": "comment",
              "start": {
                "row": 13,
                "column": 6
              },
              "end": {
                "row": 13,
                "column": 49
              },
              "text": "# by adding a trailing slash to the prefix."
            },
            {
              "type": "comment",
              "start": {
                "row": 14,
                "column": 6
              },
              "end": {
                "row": 14,
                "column": 7
              },
              "text": "#"
            },
            {
              "type": "comment",
              "start": {
                "row": 15,
                "column": 6
              },
              "end": {
                "row": 15,
                "column": 79
              },
              "text": "# If the mirror is a file, the only way we can avoid matching a path like"
            },
            {
              "type": "comment",
              "start": {
                "row": 16,
                "column": 6
              },
              "end": {
                "row": 16,
                "column": 79
              },
              "text": "# `a/bb` is to pass a path argument to limit the diff.  This means if the"
            },
            {
              "type": "comment",
              "start": {
                "row": 17,
                "column": 6
              },
              "end": {
                "row": 17,
                "column": 75
              },
              "text": "# user passes additional path arguments, we won't get the behavior we"
            },
            {
              "type": "comment",
              "start": {
                "row": 18,
                "column": 6
              },
              "end": {
                "row": 18,
                "column": 78
              },
              "text": "# expect, which is the intersection of the user-specified paths with the"
            },
            {
              "type": "comment",
              "start": {
                "row": 19,
                "column": 6
              },
              "end": {
                "row": 19,
                "column": 76
              },
              "text": "# mirror.  However, it's probably unreasonable for a user to pass path"
            },
            {
              "type": "comment",
              "start": {
                "row": 20,
                "column": 6
              },
              "end": {
                "row": 20,
                "column": 76
              },
              "text": "# arguments when diffing a single-file mirror, so we ignore the issue."
            },
            {
              "type": "comment",
              "start": {
                "row": 21,
                "column": 6
              },
              "end": {
                "row": 21,
                "column": 7
              },
              "text": "#"
            },
            {
              "type": "comment",
              "start": {
                "row": 22,
                "column": 6
              },
              "end": {
                "row": 22,
                "column": 80
              },
              "text": "# Note: This code doesn't handle various cases in which a directory at the"
            },
            {
              "type": "comment",
              "start": {
                "row": 23,
                "column": 6
              },
              "end": {
                "row": 23,
                "column": 75
              },
              "text": "# root of a mirror turns into a file or vice versa.  If that happens,"
            },
            {
              "type": "comment",
              "start": {
                "row": 24,
                "column": 6
              },
              "end": {
                "row": 24,
                "column": 60
              },
              "text": "# hopefully the user takes corrective action manually."
            },
            {
              "type": "if",
              "start": {
                "row": 25,
                "column": 6
              },
              "end": {
                "row": 46,
                "column": 9
              },
              "text": "if upstream_item.is_a?(git.BlobWithMode)\n        # For a single-file mirror, we use the upstream basename for the\n        # upstream side of the diff and the downstream basename for the\n        # downstream side, like what `git diff` does when given two blobs as\n        # arguments.  Use --relative to strip away the entire downstream path\n        # before we add the basenames.\n        return [\n          '--relative=' + path,\n          '--src-prefix=a/' + File.basename(remote_path),\n          '--dst-prefix=b/' + File.basename(path),\n          base_tree,\n          # user_args may contain options, which must come before paths.\n          *user_args,\n          path\n        ]\n      else\n        return [\n          '--relative=' + path + '/',\n          base_tree,\n          *user_args\n        ]\n      end",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 25,
                    "column": 6
                  },
                  "end": {
                    "row": 25,
                    "column": 8
                  },
                  "text": "if"
                },
                {
                  "type": "call",
                  "start": {
                    "row": 25,
                    "column": 9
                  },
                  "end": {
                    "row": 25,
                    "column": 46
                  },
                  "text": "upstream_item.is_a?(git.BlobWithMode)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 25,
                        "column": 9
                      },
                      "end": {
                        "row": 25,
                        "column": 22
                      },
                      "text": "upstream_item"
                    },
                    {
                      "type": ".",
                      "start": {
                        "row": 25,
                        "column": 22
                      },
                      "end": {
                        "row": 25,
                        "column": 23
                      },
                      "text": "."
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 25,
                        "column": 23
                      },
                      "end": {
                        "row": 25,
                        "column": 28
                      },
                      "text": "is_a?"
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 25,
                        "column": 28
                      },
                      "end": {
                        "row": 25,
                        "column": 46
                      },
                      "text": "(git.BlobWithMode)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 25,
                            "column": 28
                          },
                          "end": {
                            "row": 25,
                            "column": 29
                          },
                          "text": "("
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 25,
                            "column": 29
                          },
                          "end": {
                            "row": 25,
                            "column": 45
                          },
                          "text": "git.BlobWithMode",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 25,
                                "column": 29
                              },
                              "end": {
                                "row": 25,
                                "column": 32
                              },
                              "text": "git"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 25,
                                "column": 32
                              },
                              "end": {
                                "row": 25,
                                "column": 33
                              },
                              "text": "."
                            },
                            {
                              "type": "constant",
                              "start": {
                                "row": 25,
                                "column": 33
                              },
                              "end": {
                                "row": 25,
                                "column": 45
                              },
                              "text": "BlobWithMode"
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 25,
                            "column": 45
                          },
                          "end": {
                            "row": 25,
                            "column": 46
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "comment",
                  "start": {
                    "row": 26,
                    "column": 8
                  },
                  "end": {
                    "row": 26,
                    "column": 72
                  },
                  "text": "# For a single-file mirror, we use the upstream basename for the"
                },
                {
                  "type": "comment",
                  "start": {
                    "row": 27,
                    "column": 8
                  },
                  "end": {
                    "row": 27,
                    "column": 71
                  },
                  "text": "# upstream side of the diff and the downstream basename for the"
                },
                {
                  "type": "comment",
                  "start": {
                    "row": 28,
                    "column": 8
                  },
                  "end": {
                    "row": 28,
                    "column": 76
                  },
                  "text": "# downstream side, like what `git diff` does when given two blobs as"
                },
                {
                  "type": "comment",
                  "start": {
                    "row": 29,
                    "column": 8
                  },
                  "end": {
                    "row": 29,
                    "column": 77
                  },
                  "text": "# arguments.  Use --relative to strip away the entire downstream path"
                },
                {
                  "type": "comment",
                  "start": {
                    "row": 30,
                    "column": 8
                  },
                  "end": {
                    "row": 30,
                    "column": 38
                  },
                  "text": "# before we add the basenames."
                },
                {
                  "type": "then",
                  "start": {
                    "row": 30,
                    "column": 38
                  },
                  "end": {
                    "row": 39,
                    "column": 9
                  },
                  "text": "\n        return [\n          '--relative=' + path,\n          '--src-prefix=a/' + File.basename(remote_path),\n          '--dst-prefix=b/' + File.basename(path),\n          base_tree,\n          # user_args may contain options, which must come before paths.\n          *user_args,\n          path\n        ]",
                  "children": [
                    {
                      "type": "return",
                      "start": {
                        "row": 31,
                        "column": 8
                      },
                      "end": {
                        "row": 39,
                        "column": 9
                      },
                      "text": "return [\n          '--relative=' + path,\n          '--src-prefix=a/' + File.basename(remote_path),\n          '--dst-prefix=b/' + File.basename(path),\n          base_tree,\n          # user_args may contain options, which must come before paths.\n          *user_args,\n          path\n        ]",
                      "children": [
                        {
                          "type": "return",
                          "start": {
                            "row": 31,
                            "column": 8
                          },
                          "end": {
                            "row": 31,
                            "column": 14
                          },
                          "text": "return"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 31,
                            "column": 15
                          },
                          "end": {
                            "row": 39,
                            "column": 9
                          },
                          "text": "[\n          '--relative=' + path,\n          '--src-prefix=a/' + File.basename(remote_path),\n          '--dst-prefix=b/' + File.basename(path),\n          base_tree,\n          # user_args may contain options, which must come before paths.\n          *user_args,\n          path\n        ]",
                          "children": [
                            {
                              "type": "array",
                              "start": {
                                "row": 31,
                                "column": 15
                              },
                              "end": {
                                "row": 39,
                                "column": 9
                              },
                              "text": "[\n          '--relative=' + path,\n          '--src-prefix=a/' + File.basename(remote_path),\n          '--dst-prefix=b/' + File.basename(path),\n          base_tree,\n          # user_args may contain options, which must come before paths.\n          *user_args,\n          path\n        ]",
                              "children": [
                                {
                                  "type": "[",
                                  "start": {
                                    "row": 31,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 31,
                                    "column": 16
                                  },
                                  "text": "["
                                },
                                {
                                  "type": "binary",
                                  "start": {
                                    "row": 32,
                                    "column": 10
                                  },
                                  "end": {
                                    "row": 32,
                                    "column": 30
                                  },
                                  "text": "'--relative=' + path",
                                  "children": [
                                    {
                                      "type": "string",
                                      "start": {
                                        "row": 32,
                                        "column": 10
                                      },
                                      "end": {
                                        "row": 32,
                                        "column": 23
                                      },
                                      "text": "'--relative='",
                                      "children": [
                                        {
                                          "type": "\"",
                                          "start": {
                                            "row": 32,
                                            "column": 10
                                          },
                                          "end": {
                                            "row": 32,
                                            "column": 11
                                          },
                                          "text": "'"
                                        },
                                        {
                                          "type": "string_content",
                                          "start": {
                                            "row": 32,
                                            "column": 11
                                          },
                                          "end": {
                                            "row": 32,
                                            "column": 22
                                          },
                                          "text": "--relative="
                                        },
                                        {
                                          "type": "\"",
                                          "start": {
                                            "row": 32,
                                            "column": 22
                                          },
                                          "end": {
                                            "row": 32,
                                            "column": 23
                                          },
                                          "text": "'"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "+",
                                      "start": {
                                        "row": 32,
                                        "column": 24
                                      },
                                      "end": {
                                        "row": 32,
                                        "column": 25
                                      },
                                      "text": "+"
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 32,
                                        "column": 26
                                      },
                                      "end": {
                                        "row": 32,
                                        "column": 30
                                      },
                                      "text": "path"
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 32,
                                    "column": 30
                                  },
                                  "end": {
                                    "row": 32,
                                    "column": 31
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "binary",
                                  "start": {
                                    "row": 33,
                                    "column": 10
                                  },
                                  "end": {
                                    "row": 33,
                                    "column": 56
                                  },
                                  "text": "'--src-prefix=a/' + File.basename(remote_path)",
                                  "children": [
                                    {
                                      "type": "string",
                                      "start": {
                                        "row": 33,
                                        "column": 10
                                      },
                                      "end": {
                                        "row": 33,
                                        "column": 27
                                      },
                                      "text": "'--src-prefix=a/'",
                                      "children": [
                                        {
                                          "type": "\"",
                                          "start": {
                                            "row": 33,
                                            "column": 10
                                          },
                                          "end": {
                                            "row": 33,
                                            "column": 11
                                          },
                                          "text": "'"
                                        },
                                        {
                                          "type": "string_content",
                                          "start": {
                                            "row": 33,
                                            "column": 11
                                          },
                                          "end": {
                                            "row": 33,
                                            "column": 26
                                          },
                                          "text": "--src-prefix=a/"
                                        },
                                        {
                                          "type": "\"",
                                          "start": {
                                            "row": 33,
                                            "column": 26
                                          },
                                          "end": {
                                            "row": 33,
                                            "column": 27
                                          },
                                          "text": "'"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "+",
                                      "start": {
                                        "row": 33,
                                        "column": 28
                                      },
                                      "end": {
                                        "row": 33,
                                        "column": 29
                                      },
                                      "text": "+"
                                    },
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 33,
                                        "column": 30
                                      },
                                      "end": {
                                        "row": 33,
                                        "column": 56
                                      },
                                      "text": "File.basename(remote_path)",
                                      "children": [
                                        {
                                          "type": "constant",
                                          "start": {
                                            "row": 33,
                                            "column": 30
                                          },
                                          "end": {
                                            "row": 33,
                                            "column": 34
                                          },
                                          "text": "File"
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 33,
                                            "column": 34
                                          },
                                          "end": {
                                            "row": 33,
                                            "column": 35
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 33,
                                            "column": 35
                                          },
                                          "end": {
                                            "row": 33,
                                            "column": 43
                                          },
                                          "text": "basename"
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 33,
                                            "column": 43
                                          },
                                          "end": {
                                            "row": 33,
                                            "column": 56
                                          },
                                          "text": "(remote_path)",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 33,
                                                "column": 43
                                              },
                                              "end": {
                                                "row": 33,
                                                "column": 44
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 33,
                                                "column": 44
                                              },
                                              "end": {
                                                "row": 33,
                                                "column": 55
                                              },
                                              "text": "remote_path"
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 33,
                                                "column": 55
                                              },
                                              "end": {
                                                "row": 33,
                                                "column": 56
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 33,
                                    "column": 56
                                  },
                                  "end": {
                                    "row": 33,
                                    "column": 57
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "binary",
                                  "start": {
                                    "row": 34,
                                    "column": 10
                                  },
                                  "end": {
                                    "row": 34,
                                    "column": 49
                                  },
                                  "text": "'--dst-prefix=b/' + File.basename(path)",
                                  "children": [
                                    {
                                      "type": "string",
                                      "start": {
                                        "row": 34,
                                        "column": 10
                                      },
                                      "end": {
                                        "row": 34,
                                        "column": 27
                                      },
                                      "text": "'--dst-prefix=b/'",
                                      "children": [
                                        {
                                          "type": "\"",
                                          "start": {
                                            "row": 34,
                                            "column": 10
                                          },
                                          "end": {
                                            "row": 34,
                                            "column": 11
                                          },
                                          "text": "'"
                                        },
                                        {
                                          "type": "string_content",
                                          "start": {
                                            "row": 34,
                                            "column": 11
                                          },
                                          "end": {
                                            "row": 34,
                                            "column": 26
                                          },
                                          "text": "--dst-prefix=b/"
                                        },
                                        {
                                          "type": "\"",
                                          "start": {
                                            "row": 34,
                                            "column": 26
                                          },
                                          "end": {
                                            "row": 34,
                                            "column": 27
                                          },
                                          "text": "'"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "+",
                                      "start": {
                                        "row": 34,
                                        "column": 28
                                      },
                                      "end": {
                                        "row": 34,
                                        "column": 29
                                      },
                                      "text": "+"
                                    },
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 34,
                                        "column": 30
                                      },
                                      "end": {
                                        "row": 34,
                                        "column": 49
                                      },
                                      "text": "File.basename(path)",
                                      "children": [
                                        {
                                          "type": "constant",
                                          "start": {
                                            "row": 34,
                                            "column": 30
                                          },
                                          "end": {
                                            "row": 34,
                                            "column": 34
                                          },
                                          "text": "File"
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 34,
                                            "column": 34
                                          },
                                          "end": {
                                            "row": 34,
                                            "column": 35
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 34,
                                            "column": 35
                                          },
                                          "end": {
                                            "row": 34,
                                            "column": 43
                                          },
                                          "text": "basename"
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 34,
                                            "column": 43
                                          },
                                          "end": {
                                            "row": 34,
                                            "column": 49
                                          },
                                          "text": "(path)",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 34,
                                                "column": 43
                                              },
                                              "end": {
                                                "row": 34,
                                                "column": 44
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 34,
                                                "column": 44
                                              },
                                              "end": {
                                                "row": 34,
                                                "column": 48
                                              },
                                              "text": "path"
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 34,
                                                "column": 48
                                              },
                                              "end": {
                                                "row": 34,
                                                "column": 49
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 34,
                                    "column": 49
                                  },
                                  "end": {
                                    "row": 34,
                                    "column": 50
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 35,
                                    "column": 10
                                  },
                                  "end": {
                                    "row": 35,
                                    "column": 19
                                  },
                                  "text": "base_tree"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 35,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 35,
                                    "column": 20
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "comment",
                                  "start": {
                                    "row": 36,
                                    "column": 10
                                  },
                                  "end": {
                                    "row": 36,
                                    "column": 72
                                  },
                                  "text": "# user_args may contain options, which must come before paths."
                                },
                                {
                                  "type": "splat_argument",
                                  "start": {
                                    "row": 37,
                                    "column": 10
                                  },
                                  "end": {
                                    "row": 37,
                                    "column": 20
                                  },
                                  "text": "*user_args",
                                  "children": [
                                    {
                                      "type": "*",
                                      "start": {
                                        "row": 37,
                                        "column": 10
                                      },
                                      "end": {
                                        "row": 37,
                                        "column": 11
                                      },
                                      "text": "*"
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 37,
                                        "column": 11
                                      },
                                      "end": {
                                        "row": 37,
                                        "column": 20
                                      },
                                      "text": "user_args"
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 37,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 37,
                                    "column": 21
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 38,
                                    "column": 10
                                  },
                                  "end": {
                                    "row": 38,
                                    "column": 14
                                  },
                                  "text": "path"
                                },
                                {
                                  "type": "]",
                                  "start": {
                                    "row": 39,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 39,
                                    "column": 9
                                  },
                                  "text": "]"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "else",
                  "start": {
                    "row": 40,
                    "column": 6
                  },
                  "end": {
                    "row": 45,
                    "column": 9
                  },
                  "text": "else\n        return [\n          '--relative=' + path + '/',\n          base_tree,\n          *user_args\n        ]",
                  "children": [
                    {
                      "type": "else",
                      "start": {
                        "row": 40,
                        "column": 6
                      },
                      "end": {
                        "row": 40,
                        "column": 10
                      },
                      "text": "else"
                    },
                    {
                      "type": "return",
                      "start": {
                        "row": 41,
                        "column": 8
                      },
                      "end": {
                        "row": 45,
                        "column": 9
                      },
                      "text": "return [\n          '--relative=' + path + '/',\n          base_tree,\n          *user_args\n        ]",
                      "children": [
                        {
                          "type": "return",
                          "start": {
                            "row": 41,
                            "column": 8
                          },
                          "end": {
                            "row": 41,
                            "column": 14
                          },
                          "text": "return"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 41,
                            "column": 15
                          },
                          "end": {
                            "row": 45,
                            "column": 9
                          },
                          "text": "[\n          '--relative=' + path + '/',\n          base_tree,\n          *user_args\n        ]",
                          "children": [
                            {
                              "type": "array",
                              "start": {
                                "row": 41,
                                "column": 15
                              },
                              "end": {
                                "row": 45,
                                "column": 9
                              },
                              "text": "[\n          '--relative=' + path + '/',\n          base_tree,\n          *user_args\n        ]",
                              "children": [
                                {
                                  "type": "[",
                                  "start": {
                                    "row": 41,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 41,
                                    "column": 16
                                  },
                                  "text": "["
                                },
                                {
                                  "type": "binary",
                                  "start": {
                                    "row": 42,
                                    "column": 10
                                  },
                                  "end": {
                                    "row": 42,
                                    "column": 36
                                  },
                                  "text": "'--relative=' + path + '/'",
                                  "children": [
                                    {
                                      "type": "binary",
                                      "start": {
                                        "row": 42,
                                        "column": 10
                                      },
                                      "end": {
                                        "row": 42,
                                        "column": 30
                                      },
                                      "text": "'--relative=' + path",
                                      "children": [
                                        {
                                          "type": "string",
                                          "start": {
                                            "row": 42,
                                            "column": 10
                                          },
                                          "end": {
                                            "row": 42,
                                            "column": 23
                                          },
                                          "text": "'--relative='",
                                          "children": [
                                            {
                                              "type": "\"",
                                              "start": {
                                                "row": 42,
                                                "column": 10
                                              },
                                              "end": {
                                                "row": 42,
                                                "column": 11
                                              },
                                              "text": "'"
                                            },
                                            {
                                              "type": "string_content",
                                              "start": {
                                                "row": 42,
                                                "column": 11
                                              },
                                              "end": {
                                                "row": 42,
                                                "column": 22
                                              },
                                              "text": "--relative="
                                            },
                                            {
                                              "type": "\"",
                                              "start": {
                                                "row": 42,
                                                "column": 22
                                              },
                                              "end": {
                                                "row": 42,
                                                "column": 23
                                              },
                                              "text": "'"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "+",
                                          "start": {
                                            "row": 42,
                                            "column": 24
                                          },
                                          "end": {
                                            "row": 42,
                                            "column": 25
                                          },
                                          "text": "+"
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 42,
                                            "column": 26
                                          },
                                          "end": {
                                            "row": 42,
                                            "column": 30
                                          },
                                          "text": "path"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "+",
                                      "start": {
                                        "row": 42,
                                        "column": 31
                                      },
                                      "end": {
                                        "row": 42,
                                        "column": 32
                                      },
                                      "text": "+"
                                    },
                                    {
                                      "type": "string",
                                      "start": {
                                        "row": 42,
                                        "column": 33
                                      },
                                      "end": {
                                        "row": 42,
                                        "column": 36
                                      },
                                      "text": "'/'",
                                      "children": [
                                        {
                                          "type": "\"",
                                          "start": {
                                            "row": 42,
                                            "column": 33
                                          },
                                          "end": {
                                            "row": 42,
                                            "column": 34
                                          },
                                          "text": "'"
                                        },
                                        {
                                          "type": "string_content",
                                          "start": {
                                            "row": 42,
                                            "column": 34
                                          },
                                          "end": {
                                            "row": 42,
                                            "column": 35
                                          },
                                          "text": "/"
                                        },
                                        {
                                          "type": "\"",
                                          "start": {
                                            "row": 42,
                                            "column": 35
                                          },
                                          "end": {
                                            "row": 42,
                                            "column": 36
                                          },
                                          "text": "'"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 42,
                                    "column": 36
                                  },
                                  "end": {
                                    "row": 42,
                                    "column": 37
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 43,
                                    "column": 10
                                  },
                                  "end": {
                                    "row": 43,
                                    "column": 19
                                  },
                                  "text": "base_tree"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 43,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 43,
                                    "column": 20
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "splat_argument",
                                  "start": {
                                    "row": 44,
                                    "column": 10
                                  },
                                  "end": {
                                    "row": 44,
                                    "column": 20
                                  },
                                  "text": "*user_args",
                                  "children": [
                                    {
                                      "type": "*",
                                      "start": {
                                        "row": 44,
                                        "column": 10
                                      },
                                      "end": {
                                        "row": 44,
                                        "column": 11
                                      },
                                      "text": "*"
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 44,
                                        "column": 11
                                      },
                                      "end": {
                                        "row": 44,
                                        "column": 20
                                      },
                                      "text": "user_args"
                                    }
                                  ]
                                },
                                {
                                  "type": "]",
                                  "start": {
                                    "row": 45,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 45,
                                    "column": 9
                                  },
                                  "text": "]"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "end",
                  "start": {
                    "row": 46,
                    "column": 6
                  },
                  "end": {
                    "row": 46,
                    "column": 9
                  },
                  "text": "end"
                }
              ]
            }
          ]
        },
        {
          "type": "end",
          "start": {
            "row": 47,
            "column": 4
          },
          "end": {
            "row": 47,
            "column": 7
          },
          "text": "end"
        }
      ]
    }
  ]
}