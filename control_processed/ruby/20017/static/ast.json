{
  "type": "program",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 17,
    "column": 7
  },
  "text": "def write_date_time(*args)\n      # Check for a cell reference in A1 notation and substitute row and column\n      row, col, str, xf = row_col_notation(args)\n      raise WriteXLSXInsufficientArgumentError if [row, col, str].include?(nil)\n\n      # Check that row and col are valid and store max and min values\n      check_dimensions(row, col)\n      store_row_col_max_min_values(row, col)\n\n      date_time = convert_date_time(str)\n\n      if date_time\n        store_data_to_table(NumberCellData.new(self, row, col, date_time, xf))\n      else\n        # If the date isn't valid then write it as a string.\n        write_string(*args)\n      end\n    end",
  "children": [
    {
      "type": "method",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 17,
        "column": 7
      },
      "text": "def write_date_time(*args)\n      # Check for a cell reference in A1 notation and substitute row and column\n      row, col, str, xf = row_col_notation(args)\n      raise WriteXLSXInsufficientArgumentError if [row, col, str].include?(nil)\n\n      # Check that row and col are valid and store max and min values\n      check_dimensions(row, col)\n      store_row_col_max_min_values(row, col)\n\n      date_time = convert_date_time(str)\n\n      if date_time\n        store_data_to_table(NumberCellData.new(self, row, col, date_time, xf))\n      else\n        # If the date isn't valid then write it as a string.\n        write_string(*args)\n      end\n    end",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 19
          },
          "text": "write_date_time"
        },
        {
          "type": "method_parameters",
          "start": {
            "row": 0,
            "column": 19
          },
          "end": {
            "row": 0,
            "column": 26
          },
          "text": "(*args)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 19
              },
              "end": {
                "row": 0,
                "column": 20
              },
              "text": "("
            },
            {
              "type": "splat_parameter",
              "start": {
                "row": 0,
                "column": 20
              },
              "end": {
                "row": 0,
                "column": 25
              },
              "text": "*args",
              "children": [
                {
                  "type": "*",
                  "start": {
                    "row": 0,
                    "column": 20
                  },
                  "end": {
                    "row": 0,
                    "column": 21
                  },
                  "text": "*"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 21
                  },
                  "end": {
                    "row": 0,
                    "column": 25
                  },
                  "text": "args"
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 25
              },
              "end": {
                "row": 0,
                "column": 26
              },
              "text": ")"
            }
          ]
        },
        {
          "type": "comment",
          "start": {
            "row": 1,
            "column": 6
          },
          "end": {
            "row": 1,
            "column": 79
          },
          "text": "# Check for a cell reference in A1 notation and substitute row and column"
        },
        {
          "type": "body_statement",
          "start": {
            "row": 2,
            "column": 6
          },
          "end": {
            "row": 16,
            "column": 9
          },
          "text": "row, col, str, xf = row_col_notation(args)\n      raise WriteXLSXInsufficientArgumentError if [row, col, str].include?(nil)\n\n      # Check that row and col are valid and store max and min values\n      check_dimensions(row, col)\n      store_row_col_max_min_values(row, col)\n\n      date_time = convert_date_time(str)\n\n      if date_time\n        store_data_to_table(NumberCellData.new(self, row, col, date_time, xf))\n      else\n        # If the date isn't valid then write it as a string.\n        write_string(*args)\n      end",
          "children": [
            {
              "type": "assignment",
              "start": {
                "row": 2,
                "column": 6
              },
              "end": {
                "row": 2,
                "column": 48
              },
              "text": "row, col, str, xf = row_col_notation(args)",
              "children": [
                {
                  "type": "left_assignment_list",
                  "start": {
                    "row": 2,
                    "column": 6
                  },
                  "end": {
                    "row": 2,
                    "column": 23
                  },
                  "text": "row, col, str, xf",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 2,
                        "column": 6
                      },
                      "end": {
                        "row": 2,
                        "column": 9
                      },
                      "text": "row"
                    },
                    {
                      "type": ",",
                      "start": {
                        "row": 2,
                        "column": 9
                      },
                      "end": {
                        "row": 2,
                        "column": 10
                      },
                      "text": ","
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 2,
                        "column": 11
                      },
                      "end": {
                        "row": 2,
                        "column": 14
                      },
                      "text": "col"
                    },
                    {
                      "type": ",",
                      "start": {
                        "row": 2,
                        "column": 14
                      },
                      "end": {
                        "row": 2,
                        "column": 15
                      },
                      "text": ","
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 2,
                        "column": 16
                      },
                      "end": {
                        "row": 2,
                        "column": 19
                      },
                      "text": "str"
                    },
                    {
                      "type": ",",
                      "start": {
                        "row": 2,
                        "column": 19
                      },
                      "end": {
                        "row": 2,
                        "column": 20
                      },
                      "text": ","
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 2,
                        "column": 21
                      },
                      "end": {
                        "row": 2,
                        "column": 23
                      },
                      "text": "xf"
                    }
                  ]
                },
                {
                  "type": "=",
                  "start": {
                    "row": 2,
                    "column": 24
                  },
                  "end": {
                    "row": 2,
                    "column": 25
                  },
                  "text": "="
                },
                {
                  "type": "call",
                  "start": {
                    "row": 2,
                    "column": 26
                  },
                  "end": {
                    "row": 2,
                    "column": 48
                  },
                  "text": "row_col_notation(args)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 2,
                        "column": 26
                      },
                      "end": {
                        "row": 2,
                        "column": 42
                      },
                      "text": "row_col_notation"
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 2,
                        "column": 42
                      },
                      "end": {
                        "row": 2,
                        "column": 48
                      },
                      "text": "(args)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 2,
                            "column": 42
                          },
                          "end": {
                            "row": 2,
                            "column": 43
                          },
                          "text": "("
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 2,
                            "column": 43
                          },
                          "end": {
                            "row": 2,
                            "column": 47
                          },
                          "text": "args"
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 2,
                            "column": 47
                          },
                          "end": {
                            "row": 2,
                            "column": 48
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_modifier",
              "start": {
                "row": 3,
                "column": 6
              },
              "end": {
                "row": 3,
                "column": 79
              },
              "text": "raise WriteXLSXInsufficientArgumentError if [row, col, str].include?(nil)",
              "children": [
                {
                  "type": "call",
                  "start": {
                    "row": 3,
                    "column": 6
                  },
                  "end": {
                    "row": 3,
                    "column": 46
                  },
                  "text": "raise WriteXLSXInsufficientArgumentError",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 3,
                        "column": 6
                      },
                      "end": {
                        "row": 3,
                        "column": 11
                      },
                      "text": "raise"
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 3,
                        "column": 12
                      },
                      "end": {
                        "row": 3,
                        "column": 46
                      },
                      "text": "WriteXLSXInsufficientArgumentError",
                      "children": [
                        {
                          "type": "constant",
                          "start": {
                            "row": 3,
                            "column": 12
                          },
                          "end": {
                            "row": 3,
                            "column": 46
                          },
                          "text": "WriteXLSXInsufficientArgumentError"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "if",
                  "start": {
                    "row": 3,
                    "column": 47
                  },
                  "end": {
                    "row": 3,
                    "column": 49
                  },
                  "text": "if"
                },
                {
                  "type": "call",
                  "start": {
                    "row": 3,
                    "column": 50
                  },
                  "end": {
                    "row": 3,
                    "column": 79
                  },
                  "text": "[row, col, str].include?(nil)",
                  "children": [
                    {
                      "type": "array",
                      "start": {
                        "row": 3,
                        "column": 50
                      },
                      "end": {
                        "row": 3,
                        "column": 65
                      },
                      "text": "[row, col, str]",
                      "children": [
                        {
                          "type": "[",
                          "start": {
                            "row": 3,
                            "column": 50
                          },
                          "end": {
                            "row": 3,
                            "column": 51
                          },
                          "text": "["
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 3,
                            "column": 51
                          },
                          "end": {
                            "row": 3,
                            "column": 54
                          },
                          "text": "row"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 3,
                            "column": 54
                          },
                          "end": {
                            "row": 3,
                            "column": 55
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 3,
                            "column": 56
                          },
                          "end": {
                            "row": 3,
                            "column": 59
                          },
                          "text": "col"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 3,
                            "column": 59
                          },
                          "end": {
                            "row": 3,
                            "column": 60
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 3,
                            "column": 61
                          },
                          "end": {
                            "row": 3,
                            "column": 64
                          },
                          "text": "str"
                        },
                        {
                          "type": "]",
                          "start": {
                            "row": 3,
                            "column": 64
                          },
                          "end": {
                            "row": 3,
                            "column": 65
                          },
                          "text": "]"
                        }
                      ]
                    },
                    {
                      "type": ".",
                      "start": {
                        "row": 3,
                        "column": 65
                      },
                      "end": {
                        "row": 3,
                        "column": 66
                      },
                      "text": "."
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 3,
                        "column": 66
                      },
                      "end": {
                        "row": 3,
                        "column": 74
                      },
                      "text": "include?"
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 3,
                        "column": 74
                      },
                      "end": {
                        "row": 3,
                        "column": 79
                      },
                      "text": "(nil)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 3,
                            "column": 74
                          },
                          "end": {
                            "row": 3,
                            "column": 75
                          },
                          "text": "("
                        },
                        {
                          "type": "nil",
                          "start": {
                            "row": 3,
                            "column": 75
                          },
                          "end": {
                            "row": 3,
                            "column": 78
                          },
                          "text": "nil",
                          "children": [
                            {
                              "type": "nil",
                              "start": {
                                "row": 3,
                                "column": 75
                              },
                              "end": {
                                "row": 3,
                                "column": 78
                              },
                              "text": "nil"
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 3,
                            "column": 78
                          },
                          "end": {
                            "row": 3,
                            "column": 79
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 5,
                "column": 6
              },
              "end": {
                "row": 5,
                "column": 69
              },
              "text": "# Check that row and col are valid and store max and min values"
            },
            {
              "type": "call",
              "start": {
                "row": 6,
                "column": 6
              },
              "end": {
                "row": 6,
                "column": 32
              },
              "text": "check_dimensions(row, col)",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 6,
                    "column": 6
                  },
                  "end": {
                    "row": 6,
                    "column": 22
                  },
                  "text": "check_dimensions"
                },
                {
                  "type": "argument_list",
                  "start": {
                    "row": 6,
                    "column": 22
                  },
                  "end": {
                    "row": 6,
                    "column": 32
                  },
                  "text": "(row, col)",
                  "children": [
                    {
                      "type": "(",
                      "start": {
                        "row": 6,
                        "column": 22
                      },
                      "end": {
                        "row": 6,
                        "column": 23
                      },
                      "text": "("
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 6,
                        "column": 23
                      },
                      "end": {
                        "row": 6,
                        "column": 26
                      },
                      "text": "row"
                    },
                    {
                      "type": ",",
                      "start": {
                        "row": 6,
                        "column": 26
                      },
                      "end": {
                        "row": 6,
                        "column": 27
                      },
                      "text": ","
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 6,
                        "column": 28
                      },
                      "end": {
                        "row": 6,
                        "column": 31
                      },
                      "text": "col"
                    },
                    {
                      "type": ")",
                      "start": {
                        "row": 6,
                        "column": 31
                      },
                      "end": {
                        "row": 6,
                        "column": 32
                      },
                      "text": ")"
                    }
                  ]
                }
              ]
            },
            {
              "type": "call",
              "start": {
                "row": 7,
                "column": 6
              },
              "end": {
                "row": 7,
                "column": 44
              },
              "text": "store_row_col_max_min_values(row, col)",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 7,
                    "column": 6
                  },
                  "end": {
                    "row": 7,
                    "column": 34
                  },
                  "text": "store_row_col_max_min_values"
                },
                {
                  "type": "argument_list",
                  "start": {
                    "row": 7,
                    "column": 34
                  },
                  "end": {
                    "row": 7,
                    "column": 44
                  },
                  "text": "(row, col)",
                  "children": [
                    {
                      "type": "(",
                      "start": {
                        "row": 7,
                        "column": 34
                      },
                      "end": {
                        "row": 7,
                        "column": 35
                      },
                      "text": "("
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 7,
                        "column": 35
                      },
                      "end": {
                        "row": 7,
                        "column": 38
                      },
                      "text": "row"
                    },
                    {
                      "type": ",",
                      "start": {
                        "row": 7,
                        "column": 38
                      },
                      "end": {
                        "row": 7,
                        "column": 39
                      },
                      "text": ","
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 7,
                        "column": 40
                      },
                      "end": {
                        "row": 7,
                        "column": 43
                      },
                      "text": "col"
                    },
                    {
                      "type": ")",
                      "start": {
                        "row": 7,
                        "column": 43
                      },
                      "end": {
                        "row": 7,
                        "column": 44
                      },
                      "text": ")"
                    }
                  ]
                }
              ]
            },
            {
              "type": "assignment",
              "start": {
                "row": 9,
                "column": 6
              },
              "end": {
                "row": 9,
                "column": 40
              },
              "text": "date_time = convert_date_time(str)",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 9,
                    "column": 6
                  },
                  "end": {
                    "row": 9,
                    "column": 15
                  },
                  "text": "date_time"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 9,
                    "column": 16
                  },
                  "end": {
                    "row": 9,
                    "column": 17
                  },
                  "text": "="
                },
                {
                  "type": "call",
                  "start": {
                    "row": 9,
                    "column": 18
                  },
                  "end": {
                    "row": 9,
                    "column": 40
                  },
                  "text": "convert_date_time(str)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 9,
                        "column": 18
                      },
                      "end": {
                        "row": 9,
                        "column": 35
                      },
                      "text": "convert_date_time"
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 9,
                        "column": 35
                      },
                      "end": {
                        "row": 9,
                        "column": 40
                      },
                      "text": "(str)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 9,
                            "column": 35
                          },
                          "end": {
                            "row": 9,
                            "column": 36
                          },
                          "text": "("
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 9,
                            "column": 36
                          },
                          "end": {
                            "row": 9,
                            "column": 39
                          },
                          "text": "str"
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 9,
                            "column": 39
                          },
                          "end": {
                            "row": 9,
                            "column": 40
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "if",
              "start": {
                "row": 11,
                "column": 6
              },
              "end": {
                "row": 16,
                "column": 9
              },
              "text": "if date_time\n        store_data_to_table(NumberCellData.new(self, row, col, date_time, xf))\n      else\n        # If the date isn't valid then write it as a string.\n        write_string(*args)\n      end",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 11,
                    "column": 6
                  },
                  "end": {
                    "row": 11,
                    "column": 8
                  },
                  "text": "if"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 11,
                    "column": 9
                  },
                  "end": {
                    "row": 11,
                    "column": 18
                  },
                  "text": "date_time"
                },
                {
                  "type": "then",
                  "start": {
                    "row": 11,
                    "column": 18
                  },
                  "end": {
                    "row": 12,
                    "column": 78
                  },
                  "text": "\n        store_data_to_table(NumberCellData.new(self, row, col, date_time, xf))",
                  "children": [
                    {
                      "type": "call",
                      "start": {
                        "row": 12,
                        "column": 8
                      },
                      "end": {
                        "row": 12,
                        "column": 78
                      },
                      "text": "store_data_to_table(NumberCellData.new(self, row, col, date_time, xf))",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 12,
                            "column": 8
                          },
                          "end": {
                            "row": 12,
                            "column": 27
                          },
                          "text": "store_data_to_table"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 12,
                            "column": 27
                          },
                          "end": {
                            "row": 12,
                            "column": 78
                          },
                          "text": "(NumberCellData.new(self, row, col, date_time, xf))",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 12,
                                "column": 27
                              },
                              "end": {
                                "row": 12,
                                "column": 28
                              },
                              "text": "("
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 12,
                                "column": 28
                              },
                              "end": {
                                "row": 12,
                                "column": 77
                              },
                              "text": "NumberCellData.new(self, row, col, date_time, xf)",
                              "children": [
                                {
                                  "type": "constant",
                                  "start": {
                                    "row": 12,
                                    "column": 28
                                  },
                                  "end": {
                                    "row": 12,
                                    "column": 42
                                  },
                                  "text": "NumberCellData"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 12,
                                    "column": 42
                                  },
                                  "end": {
                                    "row": 12,
                                    "column": 43
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 12,
                                    "column": 43
                                  },
                                  "end": {
                                    "row": 12,
                                    "column": 46
                                  },
                                  "text": "new"
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 12,
                                    "column": 46
                                  },
                                  "end": {
                                    "row": 12,
                                    "column": 77
                                  },
                                  "text": "(self, row, col, date_time, xf)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 12,
                                        "column": 46
                                      },
                                      "end": {
                                        "row": 12,
                                        "column": 47
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "self",
                                      "start": {
                                        "row": 12,
                                        "column": 47
                                      },
                                      "end": {
                                        "row": 12,
                                        "column": 51
                                      },
                                      "text": "self"
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 12,
                                        "column": 51
                                      },
                                      "end": {
                                        "row": 12,
                                        "column": 52
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 12,
                                        "column": 53
                                      },
                                      "end": {
                                        "row": 12,
                                        "column": 56
                                      },
                                      "text": "row"
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 12,
                                        "column": 56
                                      },
                                      "end": {
                                        "row": 12,
                                        "column": 57
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 12,
                                        "column": 58
                                      },
                                      "end": {
                                        "row": 12,
                                        "column": 61
                                      },
                                      "text": "col"
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 12,
                                        "column": 61
                                      },
                                      "end": {
                                        "row": 12,
                                        "column": 62
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 12,
                                        "column": 63
                                      },
                                      "end": {
                                        "row": 12,
                                        "column": 72
                                      },
                                      "text": "date_time"
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 12,
                                        "column": 72
                                      },
                                      "end": {
                                        "row": 12,
                                        "column": 73
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 12,
                                        "column": 74
                                      },
                                      "end": {
                                        "row": 12,
                                        "column": 76
                                      },
                                      "text": "xf"
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 12,
                                        "column": 76
                                      },
                                      "end": {
                                        "row": 12,
                                        "column": 77
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 12,
                                "column": 77
                              },
                              "end": {
                                "row": 12,
                                "column": 78
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "else",
                  "start": {
                    "row": 13,
                    "column": 6
                  },
                  "end": {
                    "row": 15,
                    "column": 27
                  },
                  "text": "else\n        # If the date isn't valid then write it as a string.\n        write_string(*args)",
                  "children": [
                    {
                      "type": "else",
                      "start": {
                        "row": 13,
                        "column": 6
                      },
                      "end": {
                        "row": 13,
                        "column": 10
                      },
                      "text": "else"
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 14,
                        "column": 8
                      },
                      "end": {
                        "row": 14,
                        "column": 60
                      },
                      "text": "# If the date isn't valid then write it as a string."
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 15,
                        "column": 8
                      },
                      "end": {
                        "row": 15,
                        "column": 27
                      },
                      "text": "write_string(*args)",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 15,
                            "column": 8
                          },
                          "end": {
                            "row": 15,
                            "column": 20
                          },
                          "text": "write_string"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 15,
                            "column": 20
                          },
                          "end": {
                            "row": 15,
                            "column": 27
                          },
                          "text": "(*args)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 15,
                                "column": 20
                              },
                              "end": {
                                "row": 15,
                                "column": 21
                              },
                              "text": "("
                            },
                            {
                              "type": "splat_argument",
                              "start": {
                                "row": 15,
                                "column": 21
                              },
                              "end": {
                                "row": 15,
                                "column": 26
                              },
                              "text": "*args",
                              "children": [
                                {
                                  "type": "*",
                                  "start": {
                                    "row": 15,
                                    "column": 21
                                  },
                                  "end": {
                                    "row": 15,
                                    "column": 22
                                  },
                                  "text": "*"
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 15,
                                    "column": 22
                                  },
                                  "end": {
                                    "row": 15,
                                    "column": 26
                                  },
                                  "text": "args"
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 15,
                                "column": 26
                              },
                              "end": {
                                "row": 15,
                                "column": 27
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "end",
                  "start": {
                    "row": 16,
                    "column": 6
                  },
                  "end": {
                    "row": 16,
                    "column": 9
                  },
                  "text": "end"
                }
              ]
            }
          ]
        },
        {
          "type": "end",
          "start": {
            "row": 17,
            "column": 4
          },
          "end": {
            "row": 17,
            "column": 7
          },
          "text": "end"
        }
      ]
    }
  ]
}