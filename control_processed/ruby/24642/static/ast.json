{
  "type": "program",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 90,
    "column": 7
  },
  "text": "def signature_hash(input_index: nil, output_script: nil, hash_type: BTC::SIGHASH_ALL, version: 0, amount: 0)\n\n      raise ArgumentError, \"Should specify input_index in Transaction#signature_hash.\" if !input_index\n      raise ArgumentError, \"Should specify output_script in Transaction#signature_hash.\" if !output_script\n      raise ArgumentError, \"Should specify hash_type in Transaction#signature_hash.\" if !hash_type\n\n      # Create a temporary copy of the transaction to apply modifications to it.\n      tx = self.dup\n\n      # Note: BitcoinQT returns a 256-bit little-endian number 1 in such case,\n      # but it does not matter because it would crash before that in CScriptCheck::operator()().\n      # We normally won't enter this condition if script machine is instantiated\n      # with transaction and input index, but it's better to check anyway.\n      if (input_index >= tx.inputs.size)\n        raise ArgumentError, \"Input index is out of bounds for transaction: #{input_index} >= #{tx.inputs.size}\"\n      end\n\n      # In case concatenating two scripts ends up with two codeseparators,\n      # or an extra one at the end, this prevents all those possible incompatibilities.\n      # Note: this normally never happens because there is no use for OP_CODESEPARATOR.\n      # But we have to do that cleanup anyway to not break on rare transaction that use that for lulz.\n      # Also: we modify the same subscript which is used several times for multisig check,\n      # but that's what BitcoinQT does as well.\n      output_script.delete_opcode(BTC::OP_CODESEPARATOR)\n\n      # Blank out other inputs' signature scripts\n      # and replace our input script with a subscript (which is typically a full\n      # output script from the previous transaction).\n      tx.inputs.each do |txin|\n        txin.signature_script = BTC::Script.new\n      end\n      tx.inputs[input_index].signature_script = output_script\n\n      # Blank out some of the outputs depending on BTCSignatureHashType\n      # Default is SIGHASH_ALL - all inputs and outputs are signed.\n      if (hash_type & BTC::SIGHASH_OUTPUT_MASK) == BTC::SIGHASH_NONE\n        # Wildcard payee - we can pay anywhere.\n        tx.remove_all_outputs\n\n        # Blank out others' input sequence numbers to let others update transaction at will.\n        tx.inputs.each_with_index do |txin, i|\n          if i != input_index\n            tx.inputs[i].sequence = 0\n          end\n        end\n\n      # Single mode assumes we sign an output at the same index as an input.\n      # Outputs before the one we need are blanked out. All outputs after are simply removed.\n      elsif (hash_type & BTC::SIGHASH_OUTPUT_MASK) == BTC::SIGHASH_SINGLE\n        # Only lock-in the txout payee at same index as txin.\n        output_index = input_index;\n\n        # If output_index is out of bounds, BitcoinQT is returning a 256-bit little-endian 0x01 instead of failing with error.\n        # We should do the same to stay compatible.\n        if output_index >= tx.outputs.size\n          return \"\\x01\" + \"\\x00\"*31\n        end\n\n        # All outputs before the one we need are blanked out. All outputs after are simply removed.\n        # This is equivalent to replacing outputs with (i-1) empty outputs and a i-th original one.\n        my_output = tx.outputs[output_index]\n        tx.remove_all_outputs\n        (0...output_index).each do |i|\n          tx.add_output(BTC::TransactionOutput.new)\n        end\n        tx.add_output(my_output)\n\n        # Blank out others' input sequence numbers to let others update transaction at will.\n        tx.inputs.each_with_index do |txin, i|\n          if i != input_index\n            txin.sequence = 0\n          end\n        end\n      end # if hashtype is none or single\n\n      # Blank out other inputs completely. This is not recommended for open transactions.\n      if (hash_type & BTC::SIGHASH_ANYONECANPAY) != 0\n        input = tx.inputs[input_index]\n        tx.remove_all_inputs\n        tx.add_input(input)\n      end\n\n      # Important: we have to hash transaction together with its hash type.\n      # Hash type is appended as a little endian uint32 unlike 1-byte suffix of the signature.\n      data = tx.data + BTC::WireFormat.encode_uint32le(hash_type)\n      hash = BTC.hash256(data)\n      # puts \"\"\n      # puts \"SIGHASH[#{self.transaction_id}, input #{input_index}, hashtype 0x#{hash_type.to_s(16)}]: hash = #{BTC.id_from_hash(hash)}; tx = \" + tx.inspect\n      # puts \"\"\n      return hash\n    end",
  "children": [
    {
      "type": "method",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 90,
        "column": 7
      },
      "text": "def signature_hash(input_index: nil, output_script: nil, hash_type: BTC::SIGHASH_ALL, version: 0, amount: 0)\n\n      raise ArgumentError, \"Should specify input_index in Transaction#signature_hash.\" if !input_index\n      raise ArgumentError, \"Should specify output_script in Transaction#signature_hash.\" if !output_script\n      raise ArgumentError, \"Should specify hash_type in Transaction#signature_hash.\" if !hash_type\n\n      # Create a temporary copy of the transaction to apply modifications to it.\n      tx = self.dup\n\n      # Note: BitcoinQT returns a 256-bit little-endian number 1 in such case,\n      # but it does not matter because it would crash before that in CScriptCheck::operator()().\n      # We normally won't enter this condition if script machine is instantiated\n      # with transaction and input index, but it's better to check anyway.\n      if (input_index >= tx.inputs.size)\n        raise ArgumentError, \"Input index is out of bounds for transaction: #{input_index} >= #{tx.inputs.size}\"\n      end\n\n      # In case concatenating two scripts ends up with two codeseparators,\n      # or an extra one at the end, this prevents all those possible incompatibilities.\n      # Note: this normally never happens because there is no use for OP_CODESEPARATOR.\n      # But we have to do that cleanup anyway to not break on rare transaction that use that for lulz.\n      # Also: we modify the same subscript which is used several times for multisig check,\n      # but that's what BitcoinQT does as well.\n      output_script.delete_opcode(BTC::OP_CODESEPARATOR)\n\n      # Blank out other inputs' signature scripts\n      # and replace our input script with a subscript (which is typically a full\n      # output script from the previous transaction).\n      tx.inputs.each do |txin|\n        txin.signature_script = BTC::Script.new\n      end\n      tx.inputs[input_index].signature_script = output_script\n\n      # Blank out some of the outputs depending on BTCSignatureHashType\n      # Default is SIGHASH_ALL - all inputs and outputs are signed.\n      if (hash_type & BTC::SIGHASH_OUTPUT_MASK) == BTC::SIGHASH_NONE\n        # Wildcard payee - we can pay anywhere.\n        tx.remove_all_outputs\n\n        # Blank out others' input sequence numbers to let others update transaction at will.\n        tx.inputs.each_with_index do |txin, i|\n          if i != input_index\n            tx.inputs[i].sequence = 0\n          end\n        end\n\n      # Single mode assumes we sign an output at the same index as an input.\n      # Outputs before the one we need are blanked out. All outputs after are simply removed.\n      elsif (hash_type & BTC::SIGHASH_OUTPUT_MASK) == BTC::SIGHASH_SINGLE\n        # Only lock-in the txout payee at same index as txin.\n        output_index = input_index;\n\n        # If output_index is out of bounds, BitcoinQT is returning a 256-bit little-endian 0x01 instead of failing with error.\n        # We should do the same to stay compatible.\n        if output_index >= tx.outputs.size\n          return \"\\x01\" + \"\\x00\"*31\n        end\n\n        # All outputs before the one we need are blanked out. All outputs after are simply removed.\n        # This is equivalent to replacing outputs with (i-1) empty outputs and a i-th original one.\n        my_output = tx.outputs[output_index]\n        tx.remove_all_outputs\n        (0...output_index).each do |i|\n          tx.add_output(BTC::TransactionOutput.new)\n        end\n        tx.add_output(my_output)\n\n        # Blank out others' input sequence numbers to let others update transaction at will.\n        tx.inputs.each_with_index do |txin, i|\n          if i != input_index\n            txin.sequence = 0\n          end\n        end\n      end # if hashtype is none or single\n\n      # Blank out other inputs completely. This is not recommended for open transactions.\n      if (hash_type & BTC::SIGHASH_ANYONECANPAY) != 0\n        input = tx.inputs[input_index]\n        tx.remove_all_inputs\n        tx.add_input(input)\n      end\n\n      # Important: we have to hash transaction together with its hash type.\n      # Hash type is appended as a little endian uint32 unlike 1-byte suffix of the signature.\n      data = tx.data + BTC::WireFormat.encode_uint32le(hash_type)\n      hash = BTC.hash256(data)\n      # puts \"\"\n      # puts \"SIGHASH[#{self.transaction_id}, input #{input_index}, hashtype 0x#{hash_type.to_s(16)}]: hash = #{BTC.id_from_hash(hash)}; tx = \" + tx.inspect\n      # puts \"\"\n      return hash\n    end",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 18
          },
          "text": "signature_hash"
        },
        {
          "type": "method_parameters",
          "start": {
            "row": 0,
            "column": 18
          },
          "end": {
            "row": 0,
            "column": 108
          },
          "text": "(input_index: nil, output_script: nil, hash_type: BTC::SIGHASH_ALL, version: 0, amount: 0)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 18
              },
              "end": {
                "row": 0,
                "column": 19
              },
              "text": "("
            },
            {
              "type": "keyword_parameter",
              "start": {
                "row": 0,
                "column": 19
              },
              "end": {
                "row": 0,
                "column": 35
              },
              "text": "input_index: nil",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 19
                  },
                  "end": {
                    "row": 0,
                    "column": 30
                  },
                  "text": "input_index"
                },
                {
                  "type": ":",
                  "start": {
                    "row": 0,
                    "column": 30
                  },
                  "end": {
                    "row": 0,
                    "column": 31
                  },
                  "text": ":"
                },
                {
                  "type": "nil",
                  "start": {
                    "row": 0,
                    "column": 32
                  },
                  "end": {
                    "row": 0,
                    "column": 35
                  },
                  "text": "nil",
                  "children": [
                    {
                      "type": "nil",
                      "start": {
                        "row": 0,
                        "column": 32
                      },
                      "end": {
                        "row": 0,
                        "column": 35
                      },
                      "text": "nil"
                    }
                  ]
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 35
              },
              "end": {
                "row": 0,
                "column": 36
              },
              "text": ","
            },
            {
              "type": "keyword_parameter",
              "start": {
                "row": 0,
                "column": 37
              },
              "end": {
                "row": 0,
                "column": 55
              },
              "text": "output_script: nil",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 37
                  },
                  "end": {
                    "row": 0,
                    "column": 50
                  },
                  "text": "output_script"
                },
                {
                  "type": ":",
                  "start": {
                    "row": 0,
                    "column": 50
                  },
                  "end": {
                    "row": 0,
                    "column": 51
                  },
                  "text": ":"
                },
                {
                  "type": "nil",
                  "start": {
                    "row": 0,
                    "column": 52
                  },
                  "end": {
                    "row": 0,
                    "column": 55
                  },
                  "text": "nil",
                  "children": [
                    {
                      "type": "nil",
                      "start": {
                        "row": 0,
                        "column": 52
                      },
                      "end": {
                        "row": 0,
                        "column": 55
                      },
                      "text": "nil"
                    }
                  ]
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 55
              },
              "end": {
                "row": 0,
                "column": 56
              },
              "text": ","
            },
            {
              "type": "keyword_parameter",
              "start": {
                "row": 0,
                "column": 57
              },
              "end": {
                "row": 0,
                "column": 84
              },
              "text": "hash_type: BTC::SIGHASH_ALL",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 57
                  },
                  "end": {
                    "row": 0,
                    "column": 66
                  },
                  "text": "hash_type"
                },
                {
                  "type": ":",
                  "start": {
                    "row": 0,
                    "column": 66
                  },
                  "end": {
                    "row": 0,
                    "column": 67
                  },
                  "text": ":"
                },
                {
                  "type": "scope_resolution",
                  "start": {
                    "row": 0,
                    "column": 68
                  },
                  "end": {
                    "row": 0,
                    "column": 84
                  },
                  "text": "BTC::SIGHASH_ALL",
                  "children": [
                    {
                      "type": "constant",
                      "start": {
                        "row": 0,
                        "column": 68
                      },
                      "end": {
                        "row": 0,
                        "column": 71
                      },
                      "text": "BTC"
                    },
                    {
                      "type": "::",
                      "start": {
                        "row": 0,
                        "column": 71
                      },
                      "end": {
                        "row": 0,
                        "column": 73
                      },
                      "text": "::"
                    },
                    {
                      "type": "constant",
                      "start": {
                        "row": 0,
                        "column": 73
                      },
                      "end": {
                        "row": 0,
                        "column": 84
                      },
                      "text": "SIGHASH_ALL"
                    }
                  ]
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 84
              },
              "end": {
                "row": 0,
                "column": 85
              },
              "text": ","
            },
            {
              "type": "keyword_parameter",
              "start": {
                "row": 0,
                "column": 86
              },
              "end": {
                "row": 0,
                "column": 96
              },
              "text": "version: 0",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 86
                  },
                  "end": {
                    "row": 0,
                    "column": 93
                  },
                  "text": "version"
                },
                {
                  "type": ":",
                  "start": {
                    "row": 0,
                    "column": 93
                  },
                  "end": {
                    "row": 0,
                    "column": 94
                  },
                  "text": ":"
                },
                {
                  "type": "integer",
                  "start": {
                    "row": 0,
                    "column": 95
                  },
                  "end": {
                    "row": 0,
                    "column": 96
                  },
                  "text": "0"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 96
              },
              "end": {
                "row": 0,
                "column": 97
              },
              "text": ","
            },
            {
              "type": "keyword_parameter",
              "start": {
                "row": 0,
                "column": 98
              },
              "end": {
                "row": 0,
                "column": 107
              },
              "text": "amount: 0",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 98
                  },
                  "end": {
                    "row": 0,
                    "column": 104
                  },
                  "text": "amount"
                },
                {
                  "type": ":",
                  "start": {
                    "row": 0,
                    "column": 104
                  },
                  "end": {
                    "row": 0,
                    "column": 105
                  },
                  "text": ":"
                },
                {
                  "type": "integer",
                  "start": {
                    "row": 0,
                    "column": 106
                  },
                  "end": {
                    "row": 0,
                    "column": 107
                  },
                  "text": "0"
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 107
              },
              "end": {
                "row": 0,
                "column": 108
              },
              "text": ")"
            }
          ]
        },
        {
          "type": "body_statement",
          "start": {
            "row": 2,
            "column": 6
          },
          "end": {
            "row": 89,
            "column": 17
          },
          "text": "raise ArgumentError, \"Should specify input_index in Transaction#signature_hash.\" if !input_index\n      raise ArgumentError, \"Should specify output_script in Transaction#signature_hash.\" if !output_script\n      raise ArgumentError, \"Should specify hash_type in Transaction#signature_hash.\" if !hash_type\n\n      # Create a temporary copy of the transaction to apply modifications to it.\n      tx = self.dup\n\n      # Note: BitcoinQT returns a 256-bit little-endian number 1 in such case,\n      # but it does not matter because it would crash before that in CScriptCheck::operator()().\n      # We normally won't enter this condition if script machine is instantiated\n      # with transaction and input index, but it's better to check anyway.\n      if (input_index >= tx.inputs.size)\n        raise ArgumentError, \"Input index is out of bounds for transaction: #{input_index} >= #{tx.inputs.size}\"\n      end\n\n      # In case concatenating two scripts ends up with two codeseparators,\n      # or an extra one at the end, this prevents all those possible incompatibilities.\n      # Note: this normally never happens because there is no use for OP_CODESEPARATOR.\n      # But we have to do that cleanup anyway to not break on rare transaction that use that for lulz.\n      # Also: we modify the same subscript which is used several times for multisig check,\n      # but that's what BitcoinQT does as well.\n      output_script.delete_opcode(BTC::OP_CODESEPARATOR)\n\n      # Blank out other inputs' signature scripts\n      # and replace our input script with a subscript (which is typically a full\n      # output script from the previous transaction).\n      tx.inputs.each do |txin|\n        txin.signature_script = BTC::Script.new\n      end\n      tx.inputs[input_index].signature_script = output_script\n\n      # Blank out some of the outputs depending on BTCSignatureHashType\n      # Default is SIGHASH_ALL - all inputs and outputs are signed.\n      if (hash_type & BTC::SIGHASH_OUTPUT_MASK) == BTC::SIGHASH_NONE\n        # Wildcard payee - we can pay anywhere.\n        tx.remove_all_outputs\n\n        # Blank out others' input sequence numbers to let others update transaction at will.\n        tx.inputs.each_with_index do |txin, i|\n          if i != input_index\n            tx.inputs[i].sequence = 0\n          end\n        end\n\n      # Single mode assumes we sign an output at the same index as an input.\n      # Outputs before the one we need are blanked out. All outputs after are simply removed.\n      elsif (hash_type & BTC::SIGHASH_OUTPUT_MASK) == BTC::SIGHASH_SINGLE\n        # Only lock-in the txout payee at same index as txin.\n        output_index = input_index;\n\n        # If output_index is out of bounds, BitcoinQT is returning a 256-bit little-endian 0x01 instead of failing with error.\n        # We should do the same to stay compatible.\n        if output_index >= tx.outputs.size\n          return \"\\x01\" + \"\\x00\"*31\n        end\n\n        # All outputs before the one we need are blanked out. All outputs after are simply removed.\n        # This is equivalent to replacing outputs with (i-1) empty outputs and a i-th original one.\n        my_output = tx.outputs[output_index]\n        tx.remove_all_outputs\n        (0...output_index).each do |i|\n          tx.add_output(BTC::TransactionOutput.new)\n        end\n        tx.add_output(my_output)\n\n        # Blank out others' input sequence numbers to let others update transaction at will.\n        tx.inputs.each_with_index do |txin, i|\n          if i != input_index\n            txin.sequence = 0\n          end\n        end\n      end # if hashtype is none or single\n\n      # Blank out other inputs completely. This is not recommended for open transactions.\n      if (hash_type & BTC::SIGHASH_ANYONECANPAY) != 0\n        input = tx.inputs[input_index]\n        tx.remove_all_inputs\n        tx.add_input(input)\n      end\n\n      # Important: we have to hash transaction together with its hash type.\n      # Hash type is appended as a little endian uint32 unlike 1-byte suffix of the signature.\n      data = tx.data + BTC::WireFormat.encode_uint32le(hash_type)\n      hash = BTC.hash256(data)\n      # puts \"\"\n      # puts \"SIGHASH[#{self.transaction_id}, input #{input_index}, hashtype 0x#{hash_type.to_s(16)}]: hash = #{BTC.id_from_hash(hash)}; tx = \" + tx.inspect\n      # puts \"\"\n      return hash",
          "children": [
            {
              "type": "if_modifier",
              "start": {
                "row": 2,
                "column": 6
              },
              "end": {
                "row": 2,
                "column": 102
              },
              "text": "raise ArgumentError, \"Should specify input_index in Transaction#signature_hash.\" if !input_index",
              "children": [
                {
                  "type": "call",
                  "start": {
                    "row": 2,
                    "column": 6
                  },
                  "end": {
                    "row": 2,
                    "column": 86
                  },
                  "text": "raise ArgumentError, \"Should specify input_index in Transaction#signature_hash.\"",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 2,
                        "column": 6
                      },
                      "end": {
                        "row": 2,
                        "column": 11
                      },
                      "text": "raise"
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 2,
                        "column": 12
                      },
                      "end": {
                        "row": 2,
                        "column": 86
                      },
                      "text": "ArgumentError, \"Should specify input_index in Transaction#signature_hash.\"",
                      "children": [
                        {
                          "type": "constant",
                          "start": {
                            "row": 2,
                            "column": 12
                          },
                          "end": {
                            "row": 2,
                            "column": 25
                          },
                          "text": "ArgumentError"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 2,
                            "column": 25
                          },
                          "end": {
                            "row": 2,
                            "column": 26
                          },
                          "text": ","
                        },
                        {
                          "type": "string",
                          "start": {
                            "row": 2,
                            "column": 27
                          },
                          "end": {
                            "row": 2,
                            "column": 86
                          },
                          "text": "\"Should specify input_index in Transaction#signature_hash.\"",
                          "children": [
                            {
                              "type": "\"",
                              "start": {
                                "row": 2,
                                "column": 27
                              },
                              "end": {
                                "row": 2,
                                "column": 28
                              },
                              "text": "\""
                            },
                            {
                              "type": "string_content",
                              "start": {
                                "row": 2,
                                "column": 28
                              },
                              "end": {
                                "row": 2,
                                "column": 85
                              },
                              "text": "Should specify input_index in Transaction#signature_hash."
                            },
                            {
                              "type": "\"",
                              "start": {
                                "row": 2,
                                "column": 85
                              },
                              "end": {
                                "row": 2,
                                "column": 86
                              },
                              "text": "\""
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "if",
                  "start": {
                    "row": 2,
                    "column": 87
                  },
                  "end": {
                    "row": 2,
                    "column": 89
                  },
                  "text": "if"
                },
                {
                  "type": "unary",
                  "start": {
                    "row": 2,
                    "column": 90
                  },
                  "end": {
                    "row": 2,
                    "column": 102
                  },
                  "text": "!input_index",
                  "children": [
                    {
                      "type": "!",
                      "start": {
                        "row": 2,
                        "column": 90
                      },
                      "end": {
                        "row": 2,
                        "column": 91
                      },
                      "text": "!"
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 2,
                        "column": 91
                      },
                      "end": {
                        "row": 2,
                        "column": 102
                      },
                      "text": "input_index"
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_modifier",
              "start": {
                "row": 3,
                "column": 6
              },
              "end": {
                "row": 3,
                "column": 106
              },
              "text": "raise ArgumentError, \"Should specify output_script in Transaction#signature_hash.\" if !output_script",
              "children": [
                {
                  "type": "call",
                  "start": {
                    "row": 3,
                    "column": 6
                  },
                  "end": {
                    "row": 3,
                    "column": 88
                  },
                  "text": "raise ArgumentError, \"Should specify output_script in Transaction#signature_hash.\"",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 3,
                        "column": 6
                      },
                      "end": {
                        "row": 3,
                        "column": 11
                      },
                      "text": "raise"
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 3,
                        "column": 12
                      },
                      "end": {
                        "row": 3,
                        "column": 88
                      },
                      "text": "ArgumentError, \"Should specify output_script in Transaction#signature_hash.\"",
                      "children": [
                        {
                          "type": "constant",
                          "start": {
                            "row": 3,
                            "column": 12
                          },
                          "end": {
                            "row": 3,
                            "column": 25
                          },
                          "text": "ArgumentError"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 3,
                            "column": 25
                          },
                          "end": {
                            "row": 3,
                            "column": 26
                          },
                          "text": ","
                        },
                        {
                          "type": "string",
                          "start": {
                            "row": 3,
                            "column": 27
                          },
                          "end": {
                            "row": 3,
                            "column": 88
                          },
                          "text": "\"Should specify output_script in Transaction#signature_hash.\"",
                          "children": [
                            {
                              "type": "\"",
                              "start": {
                                "row": 3,
                                "column": 27
                              },
                              "end": {
                                "row": 3,
                                "column": 28
                              },
                              "text": "\""
                            },
                            {
                              "type": "string_content",
                              "start": {
                                "row": 3,
                                "column": 28
                              },
                              "end": {
                                "row": 3,
                                "column": 87
                              },
                              "text": "Should specify output_script in Transaction#signature_hash."
                            },
                            {
                              "type": "\"",
                              "start": {
                                "row": 3,
                                "column": 87
                              },
                              "end": {
                                "row": 3,
                                "column": 88
                              },
                              "text": "\""
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "if",
                  "start": {
                    "row": 3,
                    "column": 89
                  },
                  "end": {
                    "row": 3,
                    "column": 91
                  },
                  "text": "if"
                },
                {
                  "type": "unary",
                  "start": {
                    "row": 3,
                    "column": 92
                  },
                  "end": {
                    "row": 3,
                    "column": 106
                  },
                  "text": "!output_script",
                  "children": [
                    {
                      "type": "!",
                      "start": {
                        "row": 3,
                        "column": 92
                      },
                      "end": {
                        "row": 3,
                        "column": 93
                      },
                      "text": "!"
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 3,
                        "column": 93
                      },
                      "end": {
                        "row": 3,
                        "column": 106
                      },
                      "text": "output_script"
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_modifier",
              "start": {
                "row": 4,
                "column": 6
              },
              "end": {
                "row": 4,
                "column": 98
              },
              "text": "raise ArgumentError, \"Should specify hash_type in Transaction#signature_hash.\" if !hash_type",
              "children": [
                {
                  "type": "call",
                  "start": {
                    "row": 4,
                    "column": 6
                  },
                  "end": {
                    "row": 4,
                    "column": 84
                  },
                  "text": "raise ArgumentError, \"Should specify hash_type in Transaction#signature_hash.\"",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 4,
                        "column": 6
                      },
                      "end": {
                        "row": 4,
                        "column": 11
                      },
                      "text": "raise"
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 4,
                        "column": 12
                      },
                      "end": {
                        "row": 4,
                        "column": 84
                      },
                      "text": "ArgumentError, \"Should specify hash_type in Transaction#signature_hash.\"",
                      "children": [
                        {
                          "type": "constant",
                          "start": {
                            "row": 4,
                            "column": 12
                          },
                          "end": {
                            "row": 4,
                            "column": 25
                          },
                          "text": "ArgumentError"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 4,
                            "column": 25
                          },
                          "end": {
                            "row": 4,
                            "column": 26
                          },
                          "text": ","
                        },
                        {
                          "type": "string",
                          "start": {
                            "row": 4,
                            "column": 27
                          },
                          "end": {
                            "row": 4,
                            "column": 84
                          },
                          "text": "\"Should specify hash_type in Transaction#signature_hash.\"",
                          "children": [
                            {
                              "type": "\"",
                              "start": {
                                "row": 4,
                                "column": 27
                              },
                              "end": {
                                "row": 4,
                                "column": 28
                              },
                              "text": "\""
                            },
                            {
                              "type": "string_content",
                              "start": {
                                "row": 4,
                                "column": 28
                              },
                              "end": {
                                "row": 4,
                                "column": 83
                              },
                              "text": "Should specify hash_type in Transaction#signature_hash."
                            },
                            {
                              "type": "\"",
                              "start": {
                                "row": 4,
                                "column": 83
                              },
                              "end": {
                                "row": 4,
                                "column": 84
                              },
                              "text": "\""
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "if",
                  "start": {
                    "row": 4,
                    "column": 85
                  },
                  "end": {
                    "row": 4,
                    "column": 87
                  },
                  "text": "if"
                },
                {
                  "type": "unary",
                  "start": {
                    "row": 4,
                    "column": 88
                  },
                  "end": {
                    "row": 4,
                    "column": 98
                  },
                  "text": "!hash_type",
                  "children": [
                    {
                      "type": "!",
                      "start": {
                        "row": 4,
                        "column": 88
                      },
                      "end": {
                        "row": 4,
                        "column": 89
                      },
                      "text": "!"
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 4,
                        "column": 89
                      },
                      "end": {
                        "row": 4,
                        "column": 98
                      },
                      "text": "hash_type"
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 6,
                "column": 6
              },
              "end": {
                "row": 6,
                "column": 80
              },
              "text": "# Create a temporary copy of the transaction to apply modifications to it."
            },
            {
              "type": "assignment",
              "start": {
                "row": 7,
                "column": 6
              },
              "end": {
                "row": 7,
                "column": 19
              },
              "text": "tx = self.dup",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 7,
                    "column": 6
                  },
                  "end": {
                    "row": 7,
                    "column": 8
                  },
                  "text": "tx"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 7,
                    "column": 9
                  },
                  "end": {
                    "row": 7,
                    "column": 10
                  },
                  "text": "="
                },
                {
                  "type": "call",
                  "start": {
                    "row": 7,
                    "column": 11
                  },
                  "end": {
                    "row": 7,
                    "column": 19
                  },
                  "text": "self.dup",
                  "children": [
                    {
                      "type": "self",
                      "start": {
                        "row": 7,
                        "column": 11
                      },
                      "end": {
                        "row": 7,
                        "column": 15
                      },
                      "text": "self"
                    },
                    {
                      "type": ".",
                      "start": {
                        "row": 7,
                        "column": 15
                      },
                      "end": {
                        "row": 7,
                        "column": 16
                      },
                      "text": "."
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 7,
                        "column": 16
                      },
                      "end": {
                        "row": 7,
                        "column": 19
                      },
                      "text": "dup"
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 9,
                "column": 6
              },
              "end": {
                "row": 9,
                "column": 78
              },
              "text": "# Note: BitcoinQT returns a 256-bit little-endian number 1 in such case,"
            },
            {
              "type": "comment",
              "start": {
                "row": 10,
                "column": 6
              },
              "end": {
                "row": 10,
                "column": 96
              },
              "text": "# but it does not matter because it would crash before that in CScriptCheck::operator()()."
            },
            {
              "type": "comment",
              "start": {
                "row": 11,
                "column": 6
              },
              "end": {
                "row": 11,
                "column": 80
              },
              "text": "# We normally won't enter this condition if script machine is instantiated"
            },
            {
              "type": "comment",
              "start": {
                "row": 12,
                "column": 6
              },
              "end": {
                "row": 12,
                "column": 74
              },
              "text": "# with transaction and input index, but it's better to check anyway."
            },
            {
              "type": "if",
              "start": {
                "row": 13,
                "column": 6
              },
              "end": {
                "row": 15,
                "column": 9
              },
              "text": "if (input_index >= tx.inputs.size)\n        raise ArgumentError, \"Input index is out of bounds for transaction: #{input_index} >= #{tx.inputs.size}\"\n      end",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 13,
                    "column": 6
                  },
                  "end": {
                    "row": 13,
                    "column": 8
                  },
                  "text": "if"
                },
                {
                  "type": "parenthesized_statements",
                  "start": {
                    "row": 13,
                    "column": 9
                  },
                  "end": {
                    "row": 13,
                    "column": 40
                  },
                  "text": "(input_index >= tx.inputs.size)",
                  "children": [
                    {
                      "type": "(",
                      "start": {
                        "row": 13,
                        "column": 9
                      },
                      "end": {
                        "row": 13,
                        "column": 10
                      },
                      "text": "("
                    },
                    {
                      "type": "binary",
                      "start": {
                        "row": 13,
                        "column": 10
                      },
                      "end": {
                        "row": 13,
                        "column": 39
                      },
                      "text": "input_index >= tx.inputs.size",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 13,
                            "column": 10
                          },
                          "end": {
                            "row": 13,
                            "column": 21
                          },
                          "text": "input_index"
                        },
                        {
                          "type": ">=",
                          "start": {
                            "row": 13,
                            "column": 22
                          },
                          "end": {
                            "row": 13,
                            "column": 24
                          },
                          "text": ">="
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 13,
                            "column": 25
                          },
                          "end": {
                            "row": 13,
                            "column": 39
                          },
                          "text": "tx.inputs.size",
                          "children": [
                            {
                              "type": "call",
                              "start": {
                                "row": 13,
                                "column": 25
                              },
                              "end": {
                                "row": 13,
                                "column": 34
                              },
                              "text": "tx.inputs",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 13,
                                    "column": 25
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 27
                                  },
                                  "text": "tx"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 13,
                                    "column": 27
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 28
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 13,
                                    "column": 28
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 34
                                  },
                                  "text": "inputs"
                                }
                              ]
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 13,
                                "column": 34
                              },
                              "end": {
                                "row": 13,
                                "column": 35
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 13,
                                "column": 35
                              },
                              "end": {
                                "row": 13,
                                "column": 39
                              },
                              "text": "size"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start": {
                        "row": 13,
                        "column": 39
                      },
                      "end": {
                        "row": 13,
                        "column": 40
                      },
                      "text": ")"
                    }
                  ]
                },
                {
                  "type": "then",
                  "start": {
                    "row": 13,
                    "column": 40
                  },
                  "end": {
                    "row": 14,
                    "column": 112
                  },
                  "text": "\n        raise ArgumentError, \"Input index is out of bounds for transaction: #{input_index} >= #{tx.inputs.size}\"",
                  "children": [
                    {
                      "type": "call",
                      "start": {
                        "row": 14,
                        "column": 8
                      },
                      "end": {
                        "row": 14,
                        "column": 112
                      },
                      "text": "raise ArgumentError, \"Input index is out of bounds for transaction: #{input_index} >= #{tx.inputs.size}\"",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 14,
                            "column": 8
                          },
                          "end": {
                            "row": 14,
                            "column": 13
                          },
                          "text": "raise"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 14,
                            "column": 14
                          },
                          "end": {
                            "row": 14,
                            "column": 112
                          },
                          "text": "ArgumentError, \"Input index is out of bounds for transaction: #{input_index} >= #{tx.inputs.size}\"",
                          "children": [
                            {
                              "type": "constant",
                              "start": {
                                "row": 14,
                                "column": 14
                              },
                              "end": {
                                "row": 14,
                                "column": 27
                              },
                              "text": "ArgumentError"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 14,
                                "column": 27
                              },
                              "end": {
                                "row": 14,
                                "column": 28
                              },
                              "text": ","
                            },
                            {
                              "type": "string",
                              "start": {
                                "row": 14,
                                "column": 29
                              },
                              "end": {
                                "row": 14,
                                "column": 112
                              },
                              "text": "\"Input index is out of bounds for transaction: #{input_index} >= #{tx.inputs.size}\"",
                              "children": [
                                {
                                  "type": "\"",
                                  "start": {
                                    "row": 14,
                                    "column": 29
                                  },
                                  "end": {
                                    "row": 14,
                                    "column": 30
                                  },
                                  "text": "\""
                                },
                                {
                                  "type": "string_content",
                                  "start": {
                                    "row": 14,
                                    "column": 30
                                  },
                                  "end": {
                                    "row": 14,
                                    "column": 76
                                  },
                                  "text": "Input index is out of bounds for transaction: "
                                },
                                {
                                  "type": "interpolation",
                                  "start": {
                                    "row": 14,
                                    "column": 76
                                  },
                                  "end": {
                                    "row": 14,
                                    "column": 90
                                  },
                                  "text": "#{input_index}",
                                  "children": [
                                    {
                                      "type": "#{",
                                      "start": {
                                        "row": 14,
                                        "column": 76
                                      },
                                      "end": {
                                        "row": 14,
                                        "column": 78
                                      },
                                      "text": "#{"
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 14,
                                        "column": 78
                                      },
                                      "end": {
                                        "row": 14,
                                        "column": 89
                                      },
                                      "text": "input_index"
                                    },
                                    {
                                      "type": "}",
                                      "start": {
                                        "row": 14,
                                        "column": 89
                                      },
                                      "end": {
                                        "row": 14,
                                        "column": 90
                                      },
                                      "text": "}"
                                    }
                                  ]
                                },
                                {
                                  "type": "string_content",
                                  "start": {
                                    "row": 14,
                                    "column": 90
                                  },
                                  "end": {
                                    "row": 14,
                                    "column": 94
                                  },
                                  "text": " >= "
                                },
                                {
                                  "type": "interpolation",
                                  "start": {
                                    "row": 14,
                                    "column": 94
                                  },
                                  "end": {
                                    "row": 14,
                                    "column": 111
                                  },
                                  "text": "#{tx.inputs.size}",
                                  "children": [
                                    {
                                      "type": "#{",
                                      "start": {
                                        "row": 14,
                                        "column": 94
                                      },
                                      "end": {
                                        "row": 14,
                                        "column": 96
                                      },
                                      "text": "#{"
                                    },
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 14,
                                        "column": 96
                                      },
                                      "end": {
                                        "row": 14,
                                        "column": 110
                                      },
                                      "text": "tx.inputs.size",
                                      "children": [
                                        {
                                          "type": "call",
                                          "start": {
                                            "row": 14,
                                            "column": 96
                                          },
                                          "end": {
                                            "row": 14,
                                            "column": 105
                                          },
                                          "text": "tx.inputs",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 14,
                                                "column": 96
                                              },
                                              "end": {
                                                "row": 14,
                                                "column": 98
                                              },
                                              "text": "tx"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 14,
                                                "column": 98
                                              },
                                              "end": {
                                                "row": 14,
                                                "column": 99
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 14,
                                                "column": 99
                                              },
                                              "end": {
                                                "row": 14,
                                                "column": 105
                                              },
                                              "text": "inputs"
                                            }
                                          ]
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 14,
                                            "column": 105
                                          },
                                          "end": {
                                            "row": 14,
                                            "column": 106
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 14,
                                            "column": 106
                                          },
                                          "end": {
                                            "row": 14,
                                            "column": 110
                                          },
                                          "text": "size"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start": {
                                        "row": 14,
                                        "column": 110
                                      },
                                      "end": {
                                        "row": 14,
                                        "column": 111
                                      },
                                      "text": "}"
                                    }
                                  ]
                                },
                                {
                                  "type": "\"",
                                  "start": {
                                    "row": 14,
                                    "column": 111
                                  },
                                  "end": {
                                    "row": 14,
                                    "column": 112
                                  },
                                  "text": "\""
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "end",
                  "start": {
                    "row": 15,
                    "column": 6
                  },
                  "end": {
                    "row": 15,
                    "column": 9
                  },
                  "text": "end"
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 17,
                "column": 6
              },
              "end": {
                "row": 17,
                "column": 74
              },
              "text": "# In case concatenating two scripts ends up with two codeseparators,"
            },
            {
              "type": "comment",
              "start": {
                "row": 18,
                "column": 6
              },
              "end": {
                "row": 18,
                "column": 87
              },
              "text": "# or an extra one at the end, this prevents all those possible incompatibilities."
            },
            {
              "type": "comment",
              "start": {
                "row": 19,
                "column": 6
              },
              "end": {
                "row": 19,
                "column": 87
              },
              "text": "# Note: this normally never happens because there is no use for OP_CODESEPARATOR."
            },
            {
              "type": "comment",
              "start": {
                "row": 20,
                "column": 6
              },
              "end": {
                "row": 20,
                "column": 102
              },
              "text": "# But we have to do that cleanup anyway to not break on rare transaction that use that for lulz."
            },
            {
              "type": "comment",
              "start": {
                "row": 21,
                "column": 6
              },
              "end": {
                "row": 21,
                "column": 90
              },
              "text": "# Also: we modify the same subscript which is used several times for multisig check,"
            },
            {
              "type": "comment",
              "start": {
                "row": 22,
                "column": 6
              },
              "end": {
                "row": 22,
                "column": 47
              },
              "text": "# but that's what BitcoinQT does as well."
            },
            {
              "type": "call",
              "start": {
                "row": 23,
                "column": 6
              },
              "end": {
                "row": 23,
                "column": 56
              },
              "text": "output_script.delete_opcode(BTC::OP_CODESEPARATOR)",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 23,
                    "column": 6
                  },
                  "end": {
                    "row": 23,
                    "column": 19
                  },
                  "text": "output_script"
                },
                {
                  "type": ".",
                  "start": {
                    "row": 23,
                    "column": 19
                  },
                  "end": {
                    "row": 23,
                    "column": 20
                  },
                  "text": "."
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 23,
                    "column": 20
                  },
                  "end": {
                    "row": 23,
                    "column": 33
                  },
                  "text": "delete_opcode"
                },
                {
                  "type": "argument_list",
                  "start": {
                    "row": 23,
                    "column": 33
                  },
                  "end": {
                    "row": 23,
                    "column": 56
                  },
                  "text": "(BTC::OP_CODESEPARATOR)",
                  "children": [
                    {
                      "type": "(",
                      "start": {
                        "row": 23,
                        "column": 33
                      },
                      "end": {
                        "row": 23,
                        "column": 34
                      },
                      "text": "("
                    },
                    {
                      "type": "scope_resolution",
                      "start": {
                        "row": 23,
                        "column": 34
                      },
                      "end": {
                        "row": 23,
                        "column": 55
                      },
                      "text": "BTC::OP_CODESEPARATOR",
                      "children": [
                        {
                          "type": "constant",
                          "start": {
                            "row": 23,
                            "column": 34
                          },
                          "end": {
                            "row": 23,
                            "column": 37
                          },
                          "text": "BTC"
                        },
                        {
                          "type": "::",
                          "start": {
                            "row": 23,
                            "column": 37
                          },
                          "end": {
                            "row": 23,
                            "column": 39
                          },
                          "text": "::"
                        },
                        {
                          "type": "constant",
                          "start": {
                            "row": 23,
                            "column": 39
                          },
                          "end": {
                            "row": 23,
                            "column": 55
                          },
                          "text": "OP_CODESEPARATOR"
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start": {
                        "row": 23,
                        "column": 55
                      },
                      "end": {
                        "row": 23,
                        "column": 56
                      },
                      "text": ")"
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 25,
                "column": 6
              },
              "end": {
                "row": 25,
                "column": 49
              },
              "text": "# Blank out other inputs' signature scripts"
            },
            {
              "type": "comment",
              "start": {
                "row": 26,
                "column": 6
              },
              "end": {
                "row": 26,
                "column": 80
              },
              "text": "# and replace our input script with a subscript (which is typically a full"
            },
            {
              "type": "comment",
              "start": {
                "row": 27,
                "column": 6
              },
              "end": {
                "row": 27,
                "column": 53
              },
              "text": "# output script from the previous transaction)."
            },
            {
              "type": "call",
              "start": {
                "row": 28,
                "column": 6
              },
              "end": {
                "row": 30,
                "column": 9
              },
              "text": "tx.inputs.each do |txin|\n        txin.signature_script = BTC::Script.new\n      end",
              "children": [
                {
                  "type": "call",
                  "start": {
                    "row": 28,
                    "column": 6
                  },
                  "end": {
                    "row": 28,
                    "column": 15
                  },
                  "text": "tx.inputs",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 28,
                        "column": 6
                      },
                      "end": {
                        "row": 28,
                        "column": 8
                      },
                      "text": "tx"
                    },
                    {
                      "type": ".",
                      "start": {
                        "row": 28,
                        "column": 8
                      },
                      "end": {
                        "row": 28,
                        "column": 9
                      },
                      "text": "."
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 28,
                        "column": 9
                      },
                      "end": {
                        "row": 28,
                        "column": 15
                      },
                      "text": "inputs"
                    }
                  ]
                },
                {
                  "type": ".",
                  "start": {
                    "row": 28,
                    "column": 15
                  },
                  "end": {
                    "row": 28,
                    "column": 16
                  },
                  "text": "."
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 28,
                    "column": 16
                  },
                  "end": {
                    "row": 28,
                    "column": 20
                  },
                  "text": "each"
                },
                {
                  "type": "do_block",
                  "start": {
                    "row": 28,
                    "column": 21
                  },
                  "end": {
                    "row": 30,
                    "column": 9
                  },
                  "text": "do |txin|\n        txin.signature_script = BTC::Script.new\n      end",
                  "children": [
                    {
                      "type": "do",
                      "start": {
                        "row": 28,
                        "column": 21
                      },
                      "end": {
                        "row": 28,
                        "column": 23
                      },
                      "text": "do"
                    },
                    {
                      "type": "block_parameters",
                      "start": {
                        "row": 28,
                        "column": 24
                      },
                      "end": {
                        "row": 28,
                        "column": 30
                      },
                      "text": "|txin|",
                      "children": [
                        {
                          "type": "|",
                          "start": {
                            "row": 28,
                            "column": 24
                          },
                          "end": {
                            "row": 28,
                            "column": 25
                          },
                          "text": "|"
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 28,
                            "column": 25
                          },
                          "end": {
                            "row": 28,
                            "column": 29
                          },
                          "text": "txin"
                        },
                        {
                          "type": "|",
                          "start": {
                            "row": 28,
                            "column": 29
                          },
                          "end": {
                            "row": 28,
                            "column": 30
                          },
                          "text": "|"
                        }
                      ]
                    },
                    {
                      "type": "body_statement",
                      "start": {
                        "row": 29,
                        "column": 8
                      },
                      "end": {
                        "row": 29,
                        "column": 47
                      },
                      "text": "txin.signature_script = BTC::Script.new",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 29,
                            "column": 8
                          },
                          "end": {
                            "row": 29,
                            "column": 47
                          },
                          "text": "txin.signature_script = BTC::Script.new",
                          "children": [
                            {
                              "type": "call",
                              "start": {
                                "row": 29,
                                "column": 8
                              },
                              "end": {
                                "row": 29,
                                "column": 29
                              },
                              "text": "txin.signature_script",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 29,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 29,
                                    "column": 12
                                  },
                                  "text": "txin"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 29,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 29,
                                    "column": 13
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 29,
                                    "column": 13
                                  },
                                  "end": {
                                    "row": 29,
                                    "column": 29
                                  },
                                  "text": "signature_script"
                                }
                              ]
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 29,
                                "column": 30
                              },
                              "end": {
                                "row": 29,
                                "column": 31
                              },
                              "text": "="
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 29,
                                "column": 32
                              },
                              "end": {
                                "row": 29,
                                "column": 47
                              },
                              "text": "BTC::Script.new",
                              "children": [
                                {
                                  "type": "scope_resolution",
                                  "start": {
                                    "row": 29,
                                    "column": 32
                                  },
                                  "end": {
                                    "row": 29,
                                    "column": 43
                                  },
                                  "text": "BTC::Script",
                                  "children": [
                                    {
                                      "type": "constant",
                                      "start": {
                                        "row": 29,
                                        "column": 32
                                      },
                                      "end": {
                                        "row": 29,
                                        "column": 35
                                      },
                                      "text": "BTC"
                                    },
                                    {
                                      "type": "::",
                                      "start": {
                                        "row": 29,
                                        "column": 35
                                      },
                                      "end": {
                                        "row": 29,
                                        "column": 37
                                      },
                                      "text": "::"
                                    },
                                    {
                                      "type": "constant",
                                      "start": {
                                        "row": 29,
                                        "column": 37
                                      },
                                      "end": {
                                        "row": 29,
                                        "column": 43
                                      },
                                      "text": "Script"
                                    }
                                  ]
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 29,
                                    "column": 43
                                  },
                                  "end": {
                                    "row": 29,
                                    "column": 44
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 29,
                                    "column": 44
                                  },
                                  "end": {
                                    "row": 29,
                                    "column": 47
                                  },
                                  "text": "new"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "end",
                      "start": {
                        "row": 30,
                        "column": 6
                      },
                      "end": {
                        "row": 30,
                        "column": 9
                      },
                      "text": "end"
                    }
                  ]
                }
              ]
            },
            {
              "type": "assignment",
              "start": {
                "row": 31,
                "column": 6
              },
              "end": {
                "row": 31,
                "column": 61
              },
              "text": "tx.inputs[input_index].signature_script = output_script",
              "children": [
                {
                  "type": "call",
                  "start": {
                    "row": 31,
                    "column": 6
                  },
                  "end": {
                    "row": 31,
                    "column": 45
                  },
                  "text": "tx.inputs[input_index].signature_script",
                  "children": [
                    {
                      "type": "element_reference",
                      "start": {
                        "row": 31,
                        "column": 6
                      },
                      "end": {
                        "row": 31,
                        "column": 28
                      },
                      "text": "tx.inputs[input_index]",
                      "children": [
                        {
                          "type": "call",
                          "start": {
                            "row": 31,
                            "column": 6
                          },
                          "end": {
                            "row": 31,
                            "column": 15
                          },
                          "text": "tx.inputs",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 31,
                                "column": 6
                              },
                              "end": {
                                "row": 31,
                                "column": 8
                              },
                              "text": "tx"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 31,
                                "column": 8
                              },
                              "end": {
                                "row": 31,
                                "column": 9
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 31,
                                "column": 9
                              },
                              "end": {
                                "row": 31,
                                "column": 15
                              },
                              "text": "inputs"
                            }
                          ]
                        },
                        {
                          "type": "[",
                          "start": {
                            "row": 31,
                            "column": 15
                          },
                          "end": {
                            "row": 31,
                            "column": 16
                          },
                          "text": "["
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 31,
                            "column": 16
                          },
                          "end": {
                            "row": 31,
                            "column": 27
                          },
                          "text": "input_index"
                        },
                        {
                          "type": "]",
                          "start": {
                            "row": 31,
                            "column": 27
                          },
                          "end": {
                            "row": 31,
                            "column": 28
                          },
                          "text": "]"
                        }
                      ]
                    },
                    {
                      "type": ".",
                      "start": {
                        "row": 31,
                        "column": 28
                      },
                      "end": {
                        "row": 31,
                        "column": 29
                      },
                      "text": "."
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 31,
                        "column": 29
                      },
                      "end": {
                        "row": 31,
                        "column": 45
                      },
                      "text": "signature_script"
                    }
                  ]
                },
                {
                  "type": "=",
                  "start": {
                    "row": 31,
                    "column": 46
                  },
                  "end": {
                    "row": 31,
                    "column": 47
                  },
                  "text": "="
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 31,
                    "column": 48
                  },
                  "end": {
                    "row": 31,
                    "column": 61
                  },
                  "text": "output_script"
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 33,
                "column": 6
              },
              "end": {
                "row": 33,
                "column": 71
              },
              "text": "# Blank out some of the outputs depending on BTCSignatureHashType"
            },
            {
              "type": "comment",
              "start": {
                "row": 34,
                "column": 6
              },
              "end": {
                "row": 34,
                "column": 67
              },
              "text": "# Default is SIGHASH_ALL - all inputs and outputs are signed."
            },
            {
              "type": "if",
              "start": {
                "row": 35,
                "column": 6
              },
              "end": {
                "row": 73,
                "column": 9
              },
              "text": "if (hash_type & BTC::SIGHASH_OUTPUT_MASK) == BTC::SIGHASH_NONE\n        # Wildcard payee - we can pay anywhere.\n        tx.remove_all_outputs\n\n        # Blank out others' input sequence numbers to let others update transaction at will.\n        tx.inputs.each_with_index do |txin, i|\n          if i != input_index\n            tx.inputs[i].sequence = 0\n          end\n        end\n\n      # Single mode assumes we sign an output at the same index as an input.\n      # Outputs before the one we need are blanked out. All outputs after are simply removed.\n      elsif (hash_type & BTC::SIGHASH_OUTPUT_MASK) == BTC::SIGHASH_SINGLE\n        # Only lock-in the txout payee at same index as txin.\n        output_index = input_index;\n\n        # If output_index is out of bounds, BitcoinQT is returning a 256-bit little-endian 0x01 instead of failing with error.\n        # We should do the same to stay compatible.\n        if output_index >= tx.outputs.size\n          return \"\\x01\" + \"\\x00\"*31\n        end\n\n        # All outputs before the one we need are blanked out. All outputs after are simply removed.\n        # This is equivalent to replacing outputs with (i-1) empty outputs and a i-th original one.\n        my_output = tx.outputs[output_index]\n        tx.remove_all_outputs\n        (0...output_index).each do |i|\n          tx.add_output(BTC::TransactionOutput.new)\n        end\n        tx.add_output(my_output)\n\n        # Blank out others' input sequence numbers to let others update transaction at will.\n        tx.inputs.each_with_index do |txin, i|\n          if i != input_index\n            txin.sequence = 0\n          end\n        end\n      end",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 35,
                    "column": 6
                  },
                  "end": {
                    "row": 35,
                    "column": 8
                  },
                  "text": "if"
                },
                {
                  "type": "binary",
                  "start": {
                    "row": 35,
                    "column": 9
                  },
                  "end": {
                    "row": 35,
                    "column": 68
                  },
                  "text": "(hash_type & BTC::SIGHASH_OUTPUT_MASK) == BTC::SIGHASH_NONE",
                  "children": [
                    {
                      "type": "parenthesized_statements",
                      "start": {
                        "row": 35,
                        "column": 9
                      },
                      "end": {
                        "row": 35,
                        "column": 47
                      },
                      "text": "(hash_type & BTC::SIGHASH_OUTPUT_MASK)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 35,
                            "column": 9
                          },
                          "end": {
                            "row": 35,
                            "column": 10
                          },
                          "text": "("
                        },
                        {
                          "type": "binary",
                          "start": {
                            "row": 35,
                            "column": 10
                          },
                          "end": {
                            "row": 35,
                            "column": 46
                          },
                          "text": "hash_type & BTC::SIGHASH_OUTPUT_MASK",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 35,
                                "column": 10
                              },
                              "end": {
                                "row": 35,
                                "column": 19
                              },
                              "text": "hash_type"
                            },
                            {
                              "type": "&",
                              "start": {
                                "row": 35,
                                "column": 20
                              },
                              "end": {
                                "row": 35,
                                "column": 21
                              },
                              "text": "&"
                            },
                            {
                              "type": "scope_resolution",
                              "start": {
                                "row": 35,
                                "column": 22
                              },
                              "end": {
                                "row": 35,
                                "column": 46
                              },
                              "text": "BTC::SIGHASH_OUTPUT_MASK",
                              "children": [
                                {
                                  "type": "constant",
                                  "start": {
                                    "row": 35,
                                    "column": 22
                                  },
                                  "end": {
                                    "row": 35,
                                    "column": 25
                                  },
                                  "text": "BTC"
                                },
                                {
                                  "type": "::",
                                  "start": {
                                    "row": 35,
                                    "column": 25
                                  },
                                  "end": {
                                    "row": 35,
                                    "column": 27
                                  },
                                  "text": "::"
                                },
                                {
                                  "type": "constant",
                                  "start": {
                                    "row": 35,
                                    "column": 27
                                  },
                                  "end": {
                                    "row": 35,
                                    "column": 46
                                  },
                                  "text": "SIGHASH_OUTPUT_MASK"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 35,
                            "column": 46
                          },
                          "end": {
                            "row": 35,
                            "column": 47
                          },
                          "text": ")"
                        }
                      ]
                    },
                    {
                      "type": "==",
                      "start": {
                        "row": 35,
                        "column": 48
                      },
                      "end": {
                        "row": 35,
                        "column": 50
                      },
                      "text": "=="
                    },
                    {
                      "type": "scope_resolution",
                      "start": {
                        "row": 35,
                        "column": 51
                      },
                      "end": {
                        "row": 35,
                        "column": 68
                      },
                      "text": "BTC::SIGHASH_NONE",
                      "children": [
                        {
                          "type": "constant",
                          "start": {
                            "row": 35,
                            "column": 51
                          },
                          "end": {
                            "row": 35,
                            "column": 54
                          },
                          "text": "BTC"
                        },
                        {
                          "type": "::",
                          "start": {
                            "row": 35,
                            "column": 54
                          },
                          "end": {
                            "row": 35,
                            "column": 56
                          },
                          "text": "::"
                        },
                        {
                          "type": "constant",
                          "start": {
                            "row": 35,
                            "column": 56
                          },
                          "end": {
                            "row": 35,
                            "column": 68
                          },
                          "text": "SIGHASH_NONE"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "comment",
                  "start": {
                    "row": 36,
                    "column": 8
                  },
                  "end": {
                    "row": 36,
                    "column": 47
                  },
                  "text": "# Wildcard payee - we can pay anywhere."
                },
                {
                  "type": "then",
                  "start": {
                    "row": 36,
                    "column": 47
                  },
                  "end": {
                    "row": 47,
                    "column": 93
                  },
                  "text": "\n        tx.remove_all_outputs\n\n        # Blank out others' input sequence numbers to let others update transaction at will.\n        tx.inputs.each_with_index do |txin, i|\n          if i != input_index\n            tx.inputs[i].sequence = 0\n          end\n        end\n\n      # Single mode assumes we sign an output at the same index as an input.\n      # Outputs before the one we need are blanked out. All outputs after are simply removed.",
                  "children": [
                    {
                      "type": "call",
                      "start": {
                        "row": 37,
                        "column": 8
                      },
                      "end": {
                        "row": 37,
                        "column": 29
                      },
                      "text": "tx.remove_all_outputs",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 37,
                            "column": 8
                          },
                          "end": {
                            "row": 37,
                            "column": 10
                          },
                          "text": "tx"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 37,
                            "column": 10
                          },
                          "end": {
                            "row": 37,
                            "column": 11
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 37,
                            "column": 11
                          },
                          "end": {
                            "row": 37,
                            "column": 29
                          },
                          "text": "remove_all_outputs"
                        }
                      ]
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 39,
                        "column": 8
                      },
                      "end": {
                        "row": 39,
                        "column": 92
                      },
                      "text": "# Blank out others' input sequence numbers to let others update transaction at will."
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 40,
                        "column": 8
                      },
                      "end": {
                        "row": 44,
                        "column": 11
                      },
                      "text": "tx.inputs.each_with_index do |txin, i|\n          if i != input_index\n            tx.inputs[i].sequence = 0\n          end\n        end",
                      "children": [
                        {
                          "type": "call",
                          "start": {
                            "row": 40,
                            "column": 8
                          },
                          "end": {
                            "row": 40,
                            "column": 17
                          },
                          "text": "tx.inputs",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 40,
                                "column": 8
                              },
                              "end": {
                                "row": 40,
                                "column": 10
                              },
                              "text": "tx"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 40,
                                "column": 10
                              },
                              "end": {
                                "row": 40,
                                "column": 11
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 40,
                                "column": 11
                              },
                              "end": {
                                "row": 40,
                                "column": 17
                              },
                              "text": "inputs"
                            }
                          ]
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 40,
                            "column": 17
                          },
                          "end": {
                            "row": 40,
                            "column": 18
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 40,
                            "column": 18
                          },
                          "end": {
                            "row": 40,
                            "column": 33
                          },
                          "text": "each_with_index"
                        },
                        {
                          "type": "do_block",
                          "start": {
                            "row": 40,
                            "column": 34
                          },
                          "end": {
                            "row": 44,
                            "column": 11
                          },
                          "text": "do |txin, i|\n          if i != input_index\n            tx.inputs[i].sequence = 0\n          end\n        end",
                          "children": [
                            {
                              "type": "do",
                              "start": {
                                "row": 40,
                                "column": 34
                              },
                              "end": {
                                "row": 40,
                                "column": 36
                              },
                              "text": "do"
                            },
                            {
                              "type": "block_parameters",
                              "start": {
                                "row": 40,
                                "column": 37
                              },
                              "end": {
                                "row": 40,
                                "column": 46
                              },
                              "text": "|txin, i|",
                              "children": [
                                {
                                  "type": "|",
                                  "start": {
                                    "row": 40,
                                    "column": 37
                                  },
                                  "end": {
                                    "row": 40,
                                    "column": 38
                                  },
                                  "text": "|"
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 40,
                                    "column": 38
                                  },
                                  "end": {
                                    "row": 40,
                                    "column": 42
                                  },
                                  "text": "txin"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 40,
                                    "column": 42
                                  },
                                  "end": {
                                    "row": 40,
                                    "column": 43
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 40,
                                    "column": 44
                                  },
                                  "end": {
                                    "row": 40,
                                    "column": 45
                                  },
                                  "text": "i"
                                },
                                {
                                  "type": "|",
                                  "start": {
                                    "row": 40,
                                    "column": 45
                                  },
                                  "end": {
                                    "row": 40,
                                    "column": 46
                                  },
                                  "text": "|"
                                }
                              ]
                            },
                            {
                              "type": "body_statement",
                              "start": {
                                "row": 41,
                                "column": 10
                              },
                              "end": {
                                "row": 43,
                                "column": 13
                              },
                              "text": "if i != input_index\n            tx.inputs[i].sequence = 0\n          end",
                              "children": [
                                {
                                  "type": "if",
                                  "start": {
                                    "row": 41,
                                    "column": 10
                                  },
                                  "end": {
                                    "row": 43,
                                    "column": 13
                                  },
                                  "text": "if i != input_index\n            tx.inputs[i].sequence = 0\n          end",
                                  "children": [
                                    {
                                      "type": "if",
                                      "start": {
                                        "row": 41,
                                        "column": 10
                                      },
                                      "end": {
                                        "row": 41,
                                        "column": 12
                                      },
                                      "text": "if"
                                    },
                                    {
                                      "type": "binary",
                                      "start": {
                                        "row": 41,
                                        "column": 13
                                      },
                                      "end": {
                                        "row": 41,
                                        "column": 29
                                      },
                                      "text": "i != input_index",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 41,
                                            "column": 13
                                          },
                                          "end": {
                                            "row": 41,
                                            "column": 14
                                          },
                                          "text": "i"
                                        },
                                        {
                                          "type": "!=",
                                          "start": {
                                            "row": 41,
                                            "column": 15
                                          },
                                          "end": {
                                            "row": 41,
                                            "column": 17
                                          },
                                          "text": "!="
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 41,
                                            "column": 18
                                          },
                                          "end": {
                                            "row": 41,
                                            "column": 29
                                          },
                                          "text": "input_index"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "then",
                                      "start": {
                                        "row": 41,
                                        "column": 29
                                      },
                                      "end": {
                                        "row": 42,
                                        "column": 37
                                      },
                                      "text": "\n            tx.inputs[i].sequence = 0",
                                      "children": [
                                        {
                                          "type": "assignment",
                                          "start": {
                                            "row": 42,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 42,
                                            "column": 37
                                          },
                                          "text": "tx.inputs[i].sequence = 0",
                                          "children": [
                                            {
                                              "type": "call",
                                              "start": {
                                                "row": 42,
                                                "column": 12
                                              },
                                              "end": {
                                                "row": 42,
                                                "column": 33
                                              },
                                              "text": "tx.inputs[i].sequence",
                                              "children": [
                                                {
                                                  "type": "element_reference",
                                                  "start": {
                                                    "row": 42,
                                                    "column": 12
                                                  },
                                                  "end": {
                                                    "row": 42,
                                                    "column": 24
                                                  },
                                                  "text": "tx.inputs[i]",
                                                  "children": [
                                                    {
                                                      "type": "call",
                                                      "start": {
                                                        "row": 42,
                                                        "column": 12
                                                      },
                                                      "end": {
                                                        "row": 42,
                                                        "column": 21
                                                      },
                                                      "text": "tx.inputs",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 42,
                                                            "column": 12
                                                          },
                                                          "end": {
                                                            "row": 42,
                                                            "column": 14
                                                          },
                                                          "text": "tx"
                                                        },
                                                        {
                                                          "type": ".",
                                                          "start": {
                                                            "row": 42,
                                                            "column": 14
                                                          },
                                                          "end": {
                                                            "row": 42,
                                                            "column": 15
                                                          },
                                                          "text": "."
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 42,
                                                            "column": 15
                                                          },
                                                          "end": {
                                                            "row": 42,
                                                            "column": 21
                                                          },
                                                          "text": "inputs"
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "[",
                                                      "start": {
                                                        "row": 42,
                                                        "column": 21
                                                      },
                                                      "end": {
                                                        "row": 42,
                                                        "column": 22
                                                      },
                                                      "text": "["
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 42,
                                                        "column": 22
                                                      },
                                                      "end": {
                                                        "row": 42,
                                                        "column": 23
                                                      },
                                                      "text": "i"
                                                    },
                                                    {
                                                      "type": "]",
                                                      "start": {
                                                        "row": 42,
                                                        "column": 23
                                                      },
                                                      "end": {
                                                        "row": 42,
                                                        "column": 24
                                                      },
                                                      "text": "]"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ".",
                                                  "start": {
                                                    "row": 42,
                                                    "column": 24
                                                  },
                                                  "end": {
                                                    "row": 42,
                                                    "column": 25
                                                  },
                                                  "text": "."
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 42,
                                                    "column": 25
                                                  },
                                                  "end": {
                                                    "row": 42,
                                                    "column": 33
                                                  },
                                                  "text": "sequence"
                                                }
                                              ]
                                            },
                                            {
                                              "type": "=",
                                              "start": {
                                                "row": 42,
                                                "column": 34
                                              },
                                              "end": {
                                                "row": 42,
                                                "column": 35
                                              },
                                              "text": "="
                                            },
                                            {
                                              "type": "integer",
                                              "start": {
                                                "row": 42,
                                                "column": 36
                                              },
                                              "end": {
                                                "row": 42,
                                                "column": 37
                                              },
                                              "text": "0"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "end",
                                      "start": {
                                        "row": 43,
                                        "column": 10
                                      },
                                      "end": {
                                        "row": 43,
                                        "column": 13
                                      },
                                      "text": "end"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "end",
                              "start": {
                                "row": 44,
                                "column": 8
                              },
                              "end": {
                                "row": 44,
                                "column": 11
                              },
                              "text": "end"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 46,
                        "column": 6
                      },
                      "end": {
                        "row": 46,
                        "column": 76
                      },
                      "text": "# Single mode assumes we sign an output at the same index as an input."
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 47,
                        "column": 6
                      },
                      "end": {
                        "row": 47,
                        "column": 93
                      },
                      "text": "# Outputs before the one we need are blanked out. All outputs after are simply removed."
                    }
                  ]
                },
                {
                  "type": "elsif",
                  "start": {
                    "row": 48,
                    "column": 6
                  },
                  "end": {
                    "row": 72,
                    "column": 11
                  },
                  "text": "elsif (hash_type & BTC::SIGHASH_OUTPUT_MASK) == BTC::SIGHASH_SINGLE\n        # Only lock-in the txout payee at same index as txin.\n        output_index = input_index;\n\n        # If output_index is out of bounds, BitcoinQT is returning a 256-bit little-endian 0x01 instead of failing with error.\n        # We should do the same to stay compatible.\n        if output_index >= tx.outputs.size\n          return \"\\x01\" + \"\\x00\"*31\n        end\n\n        # All outputs before the one we need are blanked out. All outputs after are simply removed.\n        # This is equivalent to replacing outputs with (i-1) empty outputs and a i-th original one.\n        my_output = tx.outputs[output_index]\n        tx.remove_all_outputs\n        (0...output_index).each do |i|\n          tx.add_output(BTC::TransactionOutput.new)\n        end\n        tx.add_output(my_output)\n\n        # Blank out others' input sequence numbers to let others update transaction at will.\n        tx.inputs.each_with_index do |txin, i|\n          if i != input_index\n            txin.sequence = 0\n          end\n        end",
                  "children": [
                    {
                      "type": "elsif",
                      "start": {
                        "row": 48,
                        "column": 6
                      },
                      "end": {
                        "row": 48,
                        "column": 11
                      },
                      "text": "elsif"
                    },
                    {
                      "type": "binary",
                      "start": {
                        "row": 48,
                        "column": 12
                      },
                      "end": {
                        "row": 48,
                        "column": 73
                      },
                      "text": "(hash_type & BTC::SIGHASH_OUTPUT_MASK) == BTC::SIGHASH_SINGLE",
                      "children": [
                        {
                          "type": "parenthesized_statements",
                          "start": {
                            "row": 48,
                            "column": 12
                          },
                          "end": {
                            "row": 48,
                            "column": 50
                          },
                          "text": "(hash_type & BTC::SIGHASH_OUTPUT_MASK)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 48,
                                "column": 12
                              },
                              "end": {
                                "row": 48,
                                "column": 13
                              },
                              "text": "("
                            },
                            {
                              "type": "binary",
                              "start": {
                                "row": 48,
                                "column": 13
                              },
                              "end": {
                                "row": 48,
                                "column": 49
                              },
                              "text": "hash_type & BTC::SIGHASH_OUTPUT_MASK",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 48,
                                    "column": 13
                                  },
                                  "end": {
                                    "row": 48,
                                    "column": 22
                                  },
                                  "text": "hash_type"
                                },
                                {
                                  "type": "&",
                                  "start": {
                                    "row": 48,
                                    "column": 23
                                  },
                                  "end": {
                                    "row": 48,
                                    "column": 24
                                  },
                                  "text": "&"
                                },
                                {
                                  "type": "scope_resolution",
                                  "start": {
                                    "row": 48,
                                    "column": 25
                                  },
                                  "end": {
                                    "row": 48,
                                    "column": 49
                                  },
                                  "text": "BTC::SIGHASH_OUTPUT_MASK",
                                  "children": [
                                    {
                                      "type": "constant",
                                      "start": {
                                        "row": 48,
                                        "column": 25
                                      },
                                      "end": {
                                        "row": 48,
                                        "column": 28
                                      },
                                      "text": "BTC"
                                    },
                                    {
                                      "type": "::",
                                      "start": {
                                        "row": 48,
                                        "column": 28
                                      },
                                      "end": {
                                        "row": 48,
                                        "column": 30
                                      },
                                      "text": "::"
                                    },
                                    {
                                      "type": "constant",
                                      "start": {
                                        "row": 48,
                                        "column": 30
                                      },
                                      "end": {
                                        "row": 48,
                                        "column": 49
                                      },
                                      "text": "SIGHASH_OUTPUT_MASK"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 48,
                                "column": 49
                              },
                              "end": {
                                "row": 48,
                                "column": 50
                              },
                              "text": ")"
                            }
                          ]
                        },
                        {
                          "type": "==",
                          "start": {
                            "row": 48,
                            "column": 51
                          },
                          "end": {
                            "row": 48,
                            "column": 53
                          },
                          "text": "=="
                        },
                        {
                          "type": "scope_resolution",
                          "start": {
                            "row": 48,
                            "column": 54
                          },
                          "end": {
                            "row": 48,
                            "column": 73
                          },
                          "text": "BTC::SIGHASH_SINGLE",
                          "children": [
                            {
                              "type": "constant",
                              "start": {
                                "row": 48,
                                "column": 54
                              },
                              "end": {
                                "row": 48,
                                "column": 57
                              },
                              "text": "BTC"
                            },
                            {
                              "type": "::",
                              "start": {
                                "row": 48,
                                "column": 57
                              },
                              "end": {
                                "row": 48,
                                "column": 59
                              },
                              "text": "::"
                            },
                            {
                              "type": "constant",
                              "start": {
                                "row": 48,
                                "column": 59
                              },
                              "end": {
                                "row": 48,
                                "column": 73
                              },
                              "text": "SIGHASH_SINGLE"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 49,
                        "column": 8
                      },
                      "end": {
                        "row": 49,
                        "column": 61
                      },
                      "text": "# Only lock-in the txout payee at same index as txin."
                    },
                    {
                      "type": "then",
                      "start": {
                        "row": 49,
                        "column": 61
                      },
                      "end": {
                        "row": 72,
                        "column": 11
                      },
                      "text": "\n        output_index = input_index;\n\n        # If output_index is out of bounds, BitcoinQT is returning a 256-bit little-endian 0x01 instead of failing with error.\n        # We should do the same to stay compatible.\n        if output_index >= tx.outputs.size\n          return \"\\x01\" + \"\\x00\"*31\n        end\n\n        # All outputs before the one we need are blanked out. All outputs after are simply removed.\n        # This is equivalent to replacing outputs with (i-1) empty outputs and a i-th original one.\n        my_output = tx.outputs[output_index]\n        tx.remove_all_outputs\n        (0...output_index).each do |i|\n          tx.add_output(BTC::TransactionOutput.new)\n        end\n        tx.add_output(my_output)\n\n        # Blank out others' input sequence numbers to let others update transaction at will.\n        tx.inputs.each_with_index do |txin, i|\n          if i != input_index\n            txin.sequence = 0\n          end\n        end",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 50,
                            "column": 8
                          },
                          "end": {
                            "row": 50,
                            "column": 34
                          },
                          "text": "output_index = input_index",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 50,
                                "column": 8
                              },
                              "end": {
                                "row": 50,
                                "column": 20
                              },
                              "text": "output_index"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 50,
                                "column": 21
                              },
                              "end": {
                                "row": 50,
                                "column": 22
                              },
                              "text": "="
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 50,
                                "column": 23
                              },
                              "end": {
                                "row": 50,
                                "column": 34
                              },
                              "text": "input_index"
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start": {
                            "row": 50,
                            "column": 34
                          },
                          "end": {
                            "row": 50,
                            "column": 35
                          },
                          "text": ";"
                        },
                        {
                          "type": "comment",
                          "start": {
                            "row": 52,
                            "column": 8
                          },
                          "end": {
                            "row": 52,
                            "column": 126
                          },
                          "text": "# If output_index is out of bounds, BitcoinQT is returning a 256-bit little-endian 0x01 instead of failing with error."
                        },
                        {
                          "type": "comment",
                          "start": {
                            "row": 53,
                            "column": 8
                          },
                          "end": {
                            "row": 53,
                            "column": 51
                          },
                          "text": "# We should do the same to stay compatible."
                        },
                        {
                          "type": "if",
                          "start": {
                            "row": 54,
                            "column": 8
                          },
                          "end": {
                            "row": 56,
                            "column": 11
                          },
                          "text": "if output_index >= tx.outputs.size\n          return \"\\x01\" + \"\\x00\"*31\n        end",
                          "children": [
                            {
                              "type": "if",
                              "start": {
                                "row": 54,
                                "column": 8
                              },
                              "end": {
                                "row": 54,
                                "column": 10
                              },
                              "text": "if"
                            },
                            {
                              "type": "binary",
                              "start": {
                                "row": 54,
                                "column": 11
                              },
                              "end": {
                                "row": 54,
                                "column": 42
                              },
                              "text": "output_index >= tx.outputs.size",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 54,
                                    "column": 11
                                  },
                                  "end": {
                                    "row": 54,
                                    "column": 23
                                  },
                                  "text": "output_index"
                                },
                                {
                                  "type": ">=",
                                  "start": {
                                    "row": 54,
                                    "column": 24
                                  },
                                  "end": {
                                    "row": 54,
                                    "column": 26
                                  },
                                  "text": ">="
                                },
                                {
                                  "type": "call",
                                  "start": {
                                    "row": 54,
                                    "column": 27
                                  },
                                  "end": {
                                    "row": 54,
                                    "column": 42
                                  },
                                  "text": "tx.outputs.size",
                                  "children": [
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 54,
                                        "column": 27
                                      },
                                      "end": {
                                        "row": 54,
                                        "column": 37
                                      },
                                      "text": "tx.outputs",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 54,
                                            "column": 27
                                          },
                                          "end": {
                                            "row": 54,
                                            "column": 29
                                          },
                                          "text": "tx"
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 54,
                                            "column": 29
                                          },
                                          "end": {
                                            "row": 54,
                                            "column": 30
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 54,
                                            "column": 30
                                          },
                                          "end": {
                                            "row": 54,
                                            "column": 37
                                          },
                                          "text": "outputs"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 54,
                                        "column": 37
                                      },
                                      "end": {
                                        "row": 54,
                                        "column": 38
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 54,
                                        "column": 38
                                      },
                                      "end": {
                                        "row": 54,
                                        "column": 42
                                      },
                                      "text": "size"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "then",
                              "start": {
                                "row": 54,
                                "column": 42
                              },
                              "end": {
                                "row": 55,
                                "column": 35
                              },
                              "text": "\n          return \"\\x01\" + \"\\x00\"*31",
                              "children": [
                                {
                                  "type": "return",
                                  "start": {
                                    "row": 55,
                                    "column": 10
                                  },
                                  "end": {
                                    "row": 55,
                                    "column": 35
                                  },
                                  "text": "return \"\\x01\" + \"\\x00\"*31",
                                  "children": [
                                    {
                                      "type": "return",
                                      "start": {
                                        "row": 55,
                                        "column": 10
                                      },
                                      "end": {
                                        "row": 55,
                                        "column": 16
                                      },
                                      "text": "return"
                                    },
                                    {
                                      "type": "argument_list",
                                      "start": {
                                        "row": 55,
                                        "column": 17
                                      },
                                      "end": {
                                        "row": 55,
                                        "column": 35
                                      },
                                      "text": "\"\\x01\" + \"\\x00\"*31",
                                      "children": [
                                        {
                                          "type": "binary",
                                          "start": {
                                            "row": 55,
                                            "column": 17
                                          },
                                          "end": {
                                            "row": 55,
                                            "column": 35
                                          },
                                          "text": "\"\\x01\" + \"\\x00\"*31",
                                          "children": [
                                            {
                                              "type": "string",
                                              "start": {
                                                "row": 55,
                                                "column": 17
                                              },
                                              "end": {
                                                "row": 55,
                                                "column": 23
                                              },
                                              "text": "\"\\x01\"",
                                              "children": [
                                                {
                                                  "type": "\"",
                                                  "start": {
                                                    "row": 55,
                                                    "column": 17
                                                  },
                                                  "end": {
                                                    "row": 55,
                                                    "column": 18
                                                  },
                                                  "text": "\""
                                                },
                                                {
                                                  "type": "escape_sequence",
                                                  "start": {
                                                    "row": 55,
                                                    "column": 18
                                                  },
                                                  "end": {
                                                    "row": 55,
                                                    "column": 22
                                                  },
                                                  "text": "\\x01"
                                                },
                                                {
                                                  "type": "\"",
                                                  "start": {
                                                    "row": 55,
                                                    "column": 22
                                                  },
                                                  "end": {
                                                    "row": 55,
                                                    "column": 23
                                                  },
                                                  "text": "\""
                                                }
                                              ]
                                            },
                                            {
                                              "type": "+",
                                              "start": {
                                                "row": 55,
                                                "column": 24
                                              },
                                              "end": {
                                                "row": 55,
                                                "column": 25
                                              },
                                              "text": "+"
                                            },
                                            {
                                              "type": "binary",
                                              "start": {
                                                "row": 55,
                                                "column": 26
                                              },
                                              "end": {
                                                "row": 55,
                                                "column": 35
                                              },
                                              "text": "\"\\x00\"*31",
                                              "children": [
                                                {
                                                  "type": "string",
                                                  "start": {
                                                    "row": 55,
                                                    "column": 26
                                                  },
                                                  "end": {
                                                    "row": 55,
                                                    "column": 32
                                                  },
                                                  "text": "\"\\x00\"",
                                                  "children": [
                                                    {
                                                      "type": "\"",
                                                      "start": {
                                                        "row": 55,
                                                        "column": 26
                                                      },
                                                      "end": {
                                                        "row": 55,
                                                        "column": 27
                                                      },
                                                      "text": "\""
                                                    },
                                                    {
                                                      "type": "escape_sequence",
                                                      "start": {
                                                        "row": 55,
                                                        "column": 27
                                                      },
                                                      "end": {
                                                        "row": 55,
                                                        "column": 31
                                                      },
                                                      "text": "\\x00"
                                                    },
                                                    {
                                                      "type": "\"",
                                                      "start": {
                                                        "row": 55,
                                                        "column": 31
                                                      },
                                                      "end": {
                                                        "row": 55,
                                                        "column": 32
                                                      },
                                                      "text": "\""
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "*",
                                                  "start": {
                                                    "row": 55,
                                                    "column": 32
                                                  },
                                                  "end": {
                                                    "row": 55,
                                                    "column": 33
                                                  },
                                                  "text": "*"
                                                },
                                                {
                                                  "type": "integer",
                                                  "start": {
                                                    "row": 55,
                                                    "column": 33
                                                  },
                                                  "end": {
                                                    "row": 55,
                                                    "column": 35
                                                  },
                                                  "text": "31"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "end",
                              "start": {
                                "row": 56,
                                "column": 8
                              },
                              "end": {
                                "row": 56,
                                "column": 11
                              },
                              "text": "end"
                            }
                          ]
                        },
                        {
                          "type": "comment",
                          "start": {
                            "row": 58,
                            "column": 8
                          },
                          "end": {
                            "row": 58,
                            "column": 99
                          },
                          "text": "# All outputs before the one we need are blanked out. All outputs after are simply removed."
                        },
                        {
                          "type": "comment",
                          "start": {
                            "row": 59,
                            "column": 8
                          },
                          "end": {
                            "row": 59,
                            "column": 99
                          },
                          "text": "# This is equivalent to replacing outputs with (i-1) empty outputs and a i-th original one."
                        },
                        {
                          "type": "assignment",
                          "start": {
                            "row": 60,
                            "column": 8
                          },
                          "end": {
                            "row": 60,
                            "column": 44
                          },
                          "text": "my_output = tx.outputs[output_index]",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 60,
                                "column": 8
                              },
                              "end": {
                                "row": 60,
                                "column": 17
                              },
                              "text": "my_output"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 60,
                                "column": 18
                              },
                              "end": {
                                "row": 60,
                                "column": 19
                              },
                              "text": "="
                            },
                            {
                              "type": "element_reference",
                              "start": {
                                "row": 60,
                                "column": 20
                              },
                              "end": {
                                "row": 60,
                                "column": 44
                              },
                              "text": "tx.outputs[output_index]",
                              "children": [
                                {
                                  "type": "call",
                                  "start": {
                                    "row": 60,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 60,
                                    "column": 30
                                  },
                                  "text": "tx.outputs",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 60,
                                        "column": 20
                                      },
                                      "end": {
                                        "row": 60,
                                        "column": 22
                                      },
                                      "text": "tx"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 60,
                                        "column": 22
                                      },
                                      "end": {
                                        "row": 60,
                                        "column": 23
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 60,
                                        "column": 23
                                      },
                                      "end": {
                                        "row": 60,
                                        "column": 30
                                      },
                                      "text": "outputs"
                                    }
                                  ]
                                },
                                {
                                  "type": "[",
                                  "start": {
                                    "row": 60,
                                    "column": 30
                                  },
                                  "end": {
                                    "row": 60,
                                    "column": 31
                                  },
                                  "text": "["
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 60,
                                    "column": 31
                                  },
                                  "end": {
                                    "row": 60,
                                    "column": 43
                                  },
                                  "text": "output_index"
                                },
                                {
                                  "type": "]",
                                  "start": {
                                    "row": 60,
                                    "column": 43
                                  },
                                  "end": {
                                    "row": 60,
                                    "column": 44
                                  },
                                  "text": "]"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 61,
                            "column": 8
                          },
                          "end": {
                            "row": 61,
                            "column": 29
                          },
                          "text": "tx.remove_all_outputs",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 61,
                                "column": 8
                              },
                              "end": {
                                "row": 61,
                                "column": 10
                              },
                              "text": "tx"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 61,
                                "column": 10
                              },
                              "end": {
                                "row": 61,
                                "column": 11
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 61,
                                "column": 11
                              },
                              "end": {
                                "row": 61,
                                "column": 29
                              },
                              "text": "remove_all_outputs"
                            }
                          ]
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 62,
                            "column": 8
                          },
                          "end": {
                            "row": 64,
                            "column": 11
                          },
                          "text": "(0...output_index).each do |i|\n          tx.add_output(BTC::TransactionOutput.new)\n        end",
                          "children": [
                            {
                              "type": "parenthesized_statements",
                              "start": {
                                "row": 62,
                                "column": 8
                              },
                              "end": {
                                "row": 62,
                                "column": 26
                              },
                              "text": "(0...output_index)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 62,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 62,
                                    "column": 9
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "range",
                                  "start": {
                                    "row": 62,
                                    "column": 9
                                  },
                                  "end": {
                                    "row": 62,
                                    "column": 25
                                  },
                                  "text": "0...output_index",
                                  "children": [
                                    {
                                      "type": "integer",
                                      "start": {
                                        "row": 62,
                                        "column": 9
                                      },
                                      "end": {
                                        "row": 62,
                                        "column": 10
                                      },
                                      "text": "0"
                                    },
                                    {
                                      "type": "...",
                                      "start": {
                                        "row": 62,
                                        "column": 10
                                      },
                                      "end": {
                                        "row": 62,
                                        "column": 13
                                      },
                                      "text": "..."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 62,
                                        "column": 13
                                      },
                                      "end": {
                                        "row": 62,
                                        "column": 25
                                      },
                                      "text": "output_index"
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 62,
                                    "column": 25
                                  },
                                  "end": {
                                    "row": 62,
                                    "column": 26
                                  },
                                  "text": ")"
                                }
                              ]
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 62,
                                "column": 26
                              },
                              "end": {
                                "row": 62,
                                "column": 27
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 62,
                                "column": 27
                              },
                              "end": {
                                "row": 62,
                                "column": 31
                              },
                              "text": "each"
                            },
                            {
                              "type": "do_block",
                              "start": {
                                "row": 62,
                                "column": 32
                              },
                              "end": {
                                "row": 64,
                                "column": 11
                              },
                              "text": "do |i|\n          tx.add_output(BTC::TransactionOutput.new)\n        end",
                              "children": [
                                {
                                  "type": "do",
                                  "start": {
                                    "row": 62,
                                    "column": 32
                                  },
                                  "end": {
                                    "row": 62,
                                    "column": 34
                                  },
                                  "text": "do"
                                },
                                {
                                  "type": "block_parameters",
                                  "start": {
                                    "row": 62,
                                    "column": 35
                                  },
                                  "end": {
                                    "row": 62,
                                    "column": 38
                                  },
                                  "text": "|i|",
                                  "children": [
                                    {
                                      "type": "|",
                                      "start": {
                                        "row": 62,
                                        "column": 35
                                      },
                                      "end": {
                                        "row": 62,
                                        "column": 36
                                      },
                                      "text": "|"
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 62,
                                        "column": 36
                                      },
                                      "end": {
                                        "row": 62,
                                        "column": 37
                                      },
                                      "text": "i"
                                    },
                                    {
                                      "type": "|",
                                      "start": {
                                        "row": 62,
                                        "column": 37
                                      },
                                      "end": {
                                        "row": 62,
                                        "column": 38
                                      },
                                      "text": "|"
                                    }
                                  ]
                                },
                                {
                                  "type": "body_statement",
                                  "start": {
                                    "row": 63,
                                    "column": 10
                                  },
                                  "end": {
                                    "row": 63,
                                    "column": 51
                                  },
                                  "text": "tx.add_output(BTC::TransactionOutput.new)",
                                  "children": [
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 63,
                                        "column": 10
                                      },
                                      "end": {
                                        "row": 63,
                                        "column": 51
                                      },
                                      "text": "tx.add_output(BTC::TransactionOutput.new)",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 63,
                                            "column": 10
                                          },
                                          "end": {
                                            "row": 63,
                                            "column": 12
                                          },
                                          "text": "tx"
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 63,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 63,
                                            "column": 13
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 63,
                                            "column": 13
                                          },
                                          "end": {
                                            "row": 63,
                                            "column": 23
                                          },
                                          "text": "add_output"
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 63,
                                            "column": 23
                                          },
                                          "end": {
                                            "row": 63,
                                            "column": 51
                                          },
                                          "text": "(BTC::TransactionOutput.new)",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 63,
                                                "column": 23
                                              },
                                              "end": {
                                                "row": 63,
                                                "column": 24
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "call",
                                              "start": {
                                                "row": 63,
                                                "column": 24
                                              },
                                              "end": {
                                                "row": 63,
                                                "column": 50
                                              },
                                              "text": "BTC::TransactionOutput.new",
                                              "children": [
                                                {
                                                  "type": "scope_resolution",
                                                  "start": {
                                                    "row": 63,
                                                    "column": 24
                                                  },
                                                  "end": {
                                                    "row": 63,
                                                    "column": 46
                                                  },
                                                  "text": "BTC::TransactionOutput",
                                                  "children": [
                                                    {
                                                      "type": "constant",
                                                      "start": {
                                                        "row": 63,
                                                        "column": 24
                                                      },
                                                      "end": {
                                                        "row": 63,
                                                        "column": 27
                                                      },
                                                      "text": "BTC"
                                                    },
                                                    {
                                                      "type": "::",
                                                      "start": {
                                                        "row": 63,
                                                        "column": 27
                                                      },
                                                      "end": {
                                                        "row": 63,
                                                        "column": 29
                                                      },
                                                      "text": "::"
                                                    },
                                                    {
                                                      "type": "constant",
                                                      "start": {
                                                        "row": 63,
                                                        "column": 29
                                                      },
                                                      "end": {
                                                        "row": 63,
                                                        "column": 46
                                                      },
                                                      "text": "TransactionOutput"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ".",
                                                  "start": {
                                                    "row": 63,
                                                    "column": 46
                                                  },
                                                  "end": {
                                                    "row": 63,
                                                    "column": 47
                                                  },
                                                  "text": "."
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 63,
                                                    "column": 47
                                                  },
                                                  "end": {
                                                    "row": 63,
                                                    "column": 50
                                                  },
                                                  "text": "new"
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 63,
                                                "column": 50
                                              },
                                              "end": {
                                                "row": 63,
                                                "column": 51
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "end",
                                  "start": {
                                    "row": 64,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 64,
                                    "column": 11
                                  },
                                  "text": "end"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 65,
                            "column": 8
                          },
                          "end": {
                            "row": 65,
                            "column": 32
                          },
                          "text": "tx.add_output(my_output)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 65,
                                "column": 8
                              },
                              "end": {
                                "row": 65,
                                "column": 10
                              },
                              "text": "tx"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 65,
                                "column": 10
                              },
                              "end": {
                                "row": 65,
                                "column": 11
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 65,
                                "column": 11
                              },
                              "end": {
                                "row": 65,
                                "column": 21
                              },
                              "text": "add_output"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 65,
                                "column": 21
                              },
                              "end": {
                                "row": 65,
                                "column": 32
                              },
                              "text": "(my_output)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 65,
                                    "column": 21
                                  },
                                  "end": {
                                    "row": 65,
                                    "column": 22
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 65,
                                    "column": 22
                                  },
                                  "end": {
                                    "row": 65,
                                    "column": 31
                                  },
                                  "text": "my_output"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 65,
                                    "column": 31
                                  },
                                  "end": {
                                    "row": 65,
                                    "column": 32
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "comment",
                          "start": {
                            "row": 67,
                            "column": 8
                          },
                          "end": {
                            "row": 67,
                            "column": 92
                          },
                          "text": "# Blank out others' input sequence numbers to let others update transaction at will."
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 68,
                            "column": 8
                          },
                          "end": {
                            "row": 72,
                            "column": 11
                          },
                          "text": "tx.inputs.each_with_index do |txin, i|\n          if i != input_index\n            txin.sequence = 0\n          end\n        end",
                          "children": [
                            {
                              "type": "call",
                              "start": {
                                "row": 68,
                                "column": 8
                              },
                              "end": {
                                "row": 68,
                                "column": 17
                              },
                              "text": "tx.inputs",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 68,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 68,
                                    "column": 10
                                  },
                                  "text": "tx"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 68,
                                    "column": 10
                                  },
                                  "end": {
                                    "row": 68,
                                    "column": 11
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 68,
                                    "column": 11
                                  },
                                  "end": {
                                    "row": 68,
                                    "column": 17
                                  },
                                  "text": "inputs"
                                }
                              ]
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 68,
                                "column": 17
                              },
                              "end": {
                                "row": 68,
                                "column": 18
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 68,
                                "column": 18
                              },
                              "end": {
                                "row": 68,
                                "column": 33
                              },
                              "text": "each_with_index"
                            },
                            {
                              "type": "do_block",
                              "start": {
                                "row": 68,
                                "column": 34
                              },
                              "end": {
                                "row": 72,
                                "column": 11
                              },
                              "text": "do |txin, i|\n          if i != input_index\n            txin.sequence = 0\n          end\n        end",
                              "children": [
                                {
                                  "type": "do",
                                  "start": {
                                    "row": 68,
                                    "column": 34
                                  },
                                  "end": {
                                    "row": 68,
                                    "column": 36
                                  },
                                  "text": "do"
                                },
                                {
                                  "type": "block_parameters",
                                  "start": {
                                    "row": 68,
                                    "column": 37
                                  },
                                  "end": {
                                    "row": 68,
                                    "column": 46
                                  },
                                  "text": "|txin, i|",
                                  "children": [
                                    {
                                      "type": "|",
                                      "start": {
                                        "row": 68,
                                        "column": 37
                                      },
                                      "end": {
                                        "row": 68,
                                        "column": 38
                                      },
                                      "text": "|"
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 68,
                                        "column": 38
                                      },
                                      "end": {
                                        "row": 68,
                                        "column": 42
                                      },
                                      "text": "txin"
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 68,
                                        "column": 42
                                      },
                                      "end": {
                                        "row": 68,
                                        "column": 43
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 68,
                                        "column": 44
                                      },
                                      "end": {
                                        "row": 68,
                                        "column": 45
                                      },
                                      "text": "i"
                                    },
                                    {
                                      "type": "|",
                                      "start": {
                                        "row": 68,
                                        "column": 45
                                      },
                                      "end": {
                                        "row": 68,
                                        "column": 46
                                      },
                                      "text": "|"
                                    }
                                  ]
                                },
                                {
                                  "type": "body_statement",
                                  "start": {
                                    "row": 69,
                                    "column": 10
                                  },
                                  "end": {
                                    "row": 71,
                                    "column": 13
                                  },
                                  "text": "if i != input_index\n            txin.sequence = 0\n          end",
                                  "children": [
                                    {
                                      "type": "if",
                                      "start": {
                                        "row": 69,
                                        "column": 10
                                      },
                                      "end": {
                                        "row": 71,
                                        "column": 13
                                      },
                                      "text": "if i != input_index\n            txin.sequence = 0\n          end",
                                      "children": [
                                        {
                                          "type": "if",
                                          "start": {
                                            "row": 69,
                                            "column": 10
                                          },
                                          "end": {
                                            "row": 69,
                                            "column": 12
                                          },
                                          "text": "if"
                                        },
                                        {
                                          "type": "binary",
                                          "start": {
                                            "row": 69,
                                            "column": 13
                                          },
                                          "end": {
                                            "row": 69,
                                            "column": 29
                                          },
                                          "text": "i != input_index",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 69,
                                                "column": 13
                                              },
                                              "end": {
                                                "row": 69,
                                                "column": 14
                                              },
                                              "text": "i"
                                            },
                                            {
                                              "type": "!=",
                                              "start": {
                                                "row": 69,
                                                "column": 15
                                              },
                                              "end": {
                                                "row": 69,
                                                "column": 17
                                              },
                                              "text": "!="
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 69,
                                                "column": 18
                                              },
                                              "end": {
                                                "row": 69,
                                                "column": 29
                                              },
                                              "text": "input_index"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "then",
                                          "start": {
                                            "row": 69,
                                            "column": 29
                                          },
                                          "end": {
                                            "row": 70,
                                            "column": 29
                                          },
                                          "text": "\n            txin.sequence = 0",
                                          "children": [
                                            {
                                              "type": "assignment",
                                              "start": {
                                                "row": 70,
                                                "column": 12
                                              },
                                              "end": {
                                                "row": 70,
                                                "column": 29
                                              },
                                              "text": "txin.sequence = 0",
                                              "children": [
                                                {
                                                  "type": "call",
                                                  "start": {
                                                    "row": 70,
                                                    "column": 12
                                                  },
                                                  "end": {
                                                    "row": 70,
                                                    "column": 25
                                                  },
                                                  "text": "txin.sequence",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 70,
                                                        "column": 12
                                                      },
                                                      "end": {
                                                        "row": 70,
                                                        "column": 16
                                                      },
                                                      "text": "txin"
                                                    },
                                                    {
                                                      "type": ".",
                                                      "start": {
                                                        "row": 70,
                                                        "column": 16
                                                      },
                                                      "end": {
                                                        "row": 70,
                                                        "column": 17
                                                      },
                                                      "text": "."
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 70,
                                                        "column": 17
                                                      },
                                                      "end": {
                                                        "row": 70,
                                                        "column": 25
                                                      },
                                                      "text": "sequence"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "=",
                                                  "start": {
                                                    "row": 70,
                                                    "column": 26
                                                  },
                                                  "end": {
                                                    "row": 70,
                                                    "column": 27
                                                  },
                                                  "text": "="
                                                },
                                                {
                                                  "type": "integer",
                                                  "start": {
                                                    "row": 70,
                                                    "column": 28
                                                  },
                                                  "end": {
                                                    "row": 70,
                                                    "column": 29
                                                  },
                                                  "text": "0"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "end",
                                          "start": {
                                            "row": 71,
                                            "column": 10
                                          },
                                          "end": {
                                            "row": 71,
                                            "column": 13
                                          },
                                          "text": "end"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "end",
                                  "start": {
                                    "row": 72,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 72,
                                    "column": 11
                                  },
                                  "text": "end"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "end",
                  "start": {
                    "row": 73,
                    "column": 6
                  },
                  "end": {
                    "row": 73,
                    "column": 9
                  },
                  "text": "end"
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 73,
                "column": 10
              },
              "end": {
                "row": 73,
                "column": 41
              },
              "text": "# if hashtype is none or single"
            },
            {
              "type": "comment",
              "start": {
                "row": 75,
                "column": 6
              },
              "end": {
                "row": 75,
                "column": 89
              },
              "text": "# Blank out other inputs completely. This is not recommended for open transactions."
            },
            {
              "type": "if",
              "start": {
                "row": 76,
                "column": 6
              },
              "end": {
                "row": 80,
                "column": 9
              },
              "text": "if (hash_type & BTC::SIGHASH_ANYONECANPAY) != 0\n        input = tx.inputs[input_index]\n        tx.remove_all_inputs\n        tx.add_input(input)\n      end",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 76,
                    "column": 6
                  },
                  "end": {
                    "row": 76,
                    "column": 8
                  },
                  "text": "if"
                },
                {
                  "type": "binary",
                  "start": {
                    "row": 76,
                    "column": 9
                  },
                  "end": {
                    "row": 76,
                    "column": 53
                  },
                  "text": "(hash_type & BTC::SIGHASH_ANYONECANPAY) != 0",
                  "children": [
                    {
                      "type": "parenthesized_statements",
                      "start": {
                        "row": 76,
                        "column": 9
                      },
                      "end": {
                        "row": 76,
                        "column": 48
                      },
                      "text": "(hash_type & BTC::SIGHASH_ANYONECANPAY)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 76,
                            "column": 9
                          },
                          "end": {
                            "row": 76,
                            "column": 10
                          },
                          "text": "("
                        },
                        {
                          "type": "binary",
                          "start": {
                            "row": 76,
                            "column": 10
                          },
                          "end": {
                            "row": 76,
                            "column": 47
                          },
                          "text": "hash_type & BTC::SIGHASH_ANYONECANPAY",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 76,
                                "column": 10
                              },
                              "end": {
                                "row": 76,
                                "column": 19
                              },
                              "text": "hash_type"
                            },
                            {
                              "type": "&",
                              "start": {
                                "row": 76,
                                "column": 20
                              },
                              "end": {
                                "row": 76,
                                "column": 21
                              },
                              "text": "&"
                            },
                            {
                              "type": "scope_resolution",
                              "start": {
                                "row": 76,
                                "column": 22
                              },
                              "end": {
                                "row": 76,
                                "column": 47
                              },
                              "text": "BTC::SIGHASH_ANYONECANPAY",
                              "children": [
                                {
                                  "type": "constant",
                                  "start": {
                                    "row": 76,
                                    "column": 22
                                  },
                                  "end": {
                                    "row": 76,
                                    "column": 25
                                  },
                                  "text": "BTC"
                                },
                                {
                                  "type": "::",
                                  "start": {
                                    "row": 76,
                                    "column": 25
                                  },
                                  "end": {
                                    "row": 76,
                                    "column": 27
                                  },
                                  "text": "::"
                                },
                                {
                                  "type": "constant",
                                  "start": {
                                    "row": 76,
                                    "column": 27
                                  },
                                  "end": {
                                    "row": 76,
                                    "column": 47
                                  },
                                  "text": "SIGHASH_ANYONECANPAY"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 76,
                            "column": 47
                          },
                          "end": {
                            "row": 76,
                            "column": 48
                          },
                          "text": ")"
                        }
                      ]
                    },
                    {
                      "type": "!=",
                      "start": {
                        "row": 76,
                        "column": 49
                      },
                      "end": {
                        "row": 76,
                        "column": 51
                      },
                      "text": "!="
                    },
                    {
                      "type": "integer",
                      "start": {
                        "row": 76,
                        "column": 52
                      },
                      "end": {
                        "row": 76,
                        "column": 53
                      },
                      "text": "0"
                    }
                  ]
                },
                {
                  "type": "then",
                  "start": {
                    "row": 76,
                    "column": 53
                  },
                  "end": {
                    "row": 79,
                    "column": 27
                  },
                  "text": "\n        input = tx.inputs[input_index]\n        tx.remove_all_inputs\n        tx.add_input(input)",
                  "children": [
                    {
                      "type": "assignment",
                      "start": {
                        "row": 77,
                        "column": 8
                      },
                      "end": {
                        "row": 77,
                        "column": 38
                      },
                      "text": "input = tx.inputs[input_index]",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 77,
                            "column": 8
                          },
                          "end": {
                            "row": 77,
                            "column": 13
                          },
                          "text": "input"
                        },
                        {
                          "type": "=",
                          "start": {
                            "row": 77,
                            "column": 14
                          },
                          "end": {
                            "row": 77,
                            "column": 15
                          },
                          "text": "="
                        },
                        {
                          "type": "element_reference",
                          "start": {
                            "row": 77,
                            "column": 16
                          },
                          "end": {
                            "row": 77,
                            "column": 38
                          },
                          "text": "tx.inputs[input_index]",
                          "children": [
                            {
                              "type": "call",
                              "start": {
                                "row": 77,
                                "column": 16
                              },
                              "end": {
                                "row": 77,
                                "column": 25
                              },
                              "text": "tx.inputs",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 77,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 77,
                                    "column": 18
                                  },
                                  "text": "tx"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 77,
                                    "column": 18
                                  },
                                  "end": {
                                    "row": 77,
                                    "column": 19
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 77,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 77,
                                    "column": 25
                                  },
                                  "text": "inputs"
                                }
                              ]
                            },
                            {
                              "type": "[",
                              "start": {
                                "row": 77,
                                "column": 25
                              },
                              "end": {
                                "row": 77,
                                "column": 26
                              },
                              "text": "["
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 77,
                                "column": 26
                              },
                              "end": {
                                "row": 77,
                                "column": 37
                              },
                              "text": "input_index"
                            },
                            {
                              "type": "]",
                              "start": {
                                "row": 77,
                                "column": 37
                              },
                              "end": {
                                "row": 77,
                                "column": 38
                              },
                              "text": "]"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 78,
                        "column": 8
                      },
                      "end": {
                        "row": 78,
                        "column": 28
                      },
                      "text": "tx.remove_all_inputs",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 78,
                            "column": 8
                          },
                          "end": {
                            "row": 78,
                            "column": 10
                          },
                          "text": "tx"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 78,
                            "column": 10
                          },
                          "end": {
                            "row": 78,
                            "column": 11
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 78,
                            "column": 11
                          },
                          "end": {
                            "row": 78,
                            "column": 28
                          },
                          "text": "remove_all_inputs"
                        }
                      ]
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 79,
                        "column": 8
                      },
                      "end": {
                        "row": 79,
                        "column": 27
                      },
                      "text": "tx.add_input(input)",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 79,
                            "column": 8
                          },
                          "end": {
                            "row": 79,
                            "column": 10
                          },
                          "text": "tx"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 79,
                            "column": 10
                          },
                          "end": {
                            "row": 79,
                            "column": 11
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 79,
                            "column": 11
                          },
                          "end": {
                            "row": 79,
                            "column": 20
                          },
                          "text": "add_input"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 79,
                            "column": 20
                          },
                          "end": {
                            "row": 79,
                            "column": 27
                          },
                          "text": "(input)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 79,
                                "column": 20
                              },
                              "end": {
                                "row": 79,
                                "column": 21
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 79,
                                "column": 21
                              },
                              "end": {
                                "row": 79,
                                "column": 26
                              },
                              "text": "input"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 79,
                                "column": 26
                              },
                              "end": {
                                "row": 79,
                                "column": 27
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "end",
                  "start": {
                    "row": 80,
                    "column": 6
                  },
                  "end": {
                    "row": 80,
                    "column": 9
                  },
                  "text": "end"
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 82,
                "column": 6
              },
              "end": {
                "row": 82,
                "column": 75
              },
              "text": "# Important: we have to hash transaction together with its hash type."
            },
            {
              "type": "comment",
              "start": {
                "row": 83,
                "column": 6
              },
              "end": {
                "row": 83,
                "column": 94
              },
              "text": "# Hash type is appended as a little endian uint32 unlike 1-byte suffix of the signature."
            },
            {
              "type": "assignment",
              "start": {
                "row": 84,
                "column": 6
              },
              "end": {
                "row": 84,
                "column": 65
              },
              "text": "data = tx.data + BTC::WireFormat.encode_uint32le(hash_type)",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 84,
                    "column": 6
                  },
                  "end": {
                    "row": 84,
                    "column": 10
                  },
                  "text": "data"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 84,
                    "column": 11
                  },
                  "end": {
                    "row": 84,
                    "column": 12
                  },
                  "text": "="
                },
                {
                  "type": "binary",
                  "start": {
                    "row": 84,
                    "column": 13
                  },
                  "end": {
                    "row": 84,
                    "column": 65
                  },
                  "text": "tx.data + BTC::WireFormat.encode_uint32le(hash_type)",
                  "children": [
                    {
                      "type": "call",
                      "start": {
                        "row": 84,
                        "column": 13
                      },
                      "end": {
                        "row": 84,
                        "column": 20
                      },
                      "text": "tx.data",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 84,
                            "column": 13
                          },
                          "end": {
                            "row": 84,
                            "column": 15
                          },
                          "text": "tx"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 84,
                            "column": 15
                          },
                          "end": {
                            "row": 84,
                            "column": 16
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 84,
                            "column": 16
                          },
                          "end": {
                            "row": 84,
                            "column": 20
                          },
                          "text": "data"
                        }
                      ]
                    },
                    {
                      "type": "+",
                      "start": {
                        "row": 84,
                        "column": 21
                      },
                      "end": {
                        "row": 84,
                        "column": 22
                      },
                      "text": "+"
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 84,
                        "column": 23
                      },
                      "end": {
                        "row": 84,
                        "column": 65
                      },
                      "text": "BTC::WireFormat.encode_uint32le(hash_type)",
                      "children": [
                        {
                          "type": "scope_resolution",
                          "start": {
                            "row": 84,
                            "column": 23
                          },
                          "end": {
                            "row": 84,
                            "column": 38
                          },
                          "text": "BTC::WireFormat",
                          "children": [
                            {
                              "type": "constant",
                              "start": {
                                "row": 84,
                                "column": 23
                              },
                              "end": {
                                "row": 84,
                                "column": 26
                              },
                              "text": "BTC"
                            },
                            {
                              "type": "::",
                              "start": {
                                "row": 84,
                                "column": 26
                              },
                              "end": {
                                "row": 84,
                                "column": 28
                              },
                              "text": "::"
                            },
                            {
                              "type": "constant",
                              "start": {
                                "row": 84,
                                "column": 28
                              },
                              "end": {
                                "row": 84,
                                "column": 38
                              },
                              "text": "WireFormat"
                            }
                          ]
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 84,
                            "column": 38
                          },
                          "end": {
                            "row": 84,
                            "column": 39
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 84,
                            "column": 39
                          },
                          "end": {
                            "row": 84,
                            "column": 54
                          },
                          "text": "encode_uint32le"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 84,
                            "column": 54
                          },
                          "end": {
                            "row": 84,
                            "column": 65
                          },
                          "text": "(hash_type)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 84,
                                "column": 54
                              },
                              "end": {
                                "row": 84,
                                "column": 55
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 84,
                                "column": 55
                              },
                              "end": {
                                "row": 84,
                                "column": 64
                              },
                              "text": "hash_type"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 84,
                                "column": 64
                              },
                              "end": {
                                "row": 84,
                                "column": 65
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "assignment",
              "start": {
                "row": 85,
                "column": 6
              },
              "end": {
                "row": 85,
                "column": 30
              },
              "text": "hash = BTC.hash256(data)",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 85,
                    "column": 6
                  },
                  "end": {
                    "row": 85,
                    "column": 10
                  },
                  "text": "hash"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 85,
                    "column": 11
                  },
                  "end": {
                    "row": 85,
                    "column": 12
                  },
                  "text": "="
                },
                {
                  "type": "call",
                  "start": {
                    "row": 85,
                    "column": 13
                  },
                  "end": {
                    "row": 85,
                    "column": 30
                  },
                  "text": "BTC.hash256(data)",
                  "children": [
                    {
                      "type": "constant",
                      "start": {
                        "row": 85,
                        "column": 13
                      },
                      "end": {
                        "row": 85,
                        "column": 16
                      },
                      "text": "BTC"
                    },
                    {
                      "type": ".",
                      "start": {
                        "row": 85,
                        "column": 16
                      },
                      "end": {
                        "row": 85,
                        "column": 17
                      },
                      "text": "."
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 85,
                        "column": 17
                      },
                      "end": {
                        "row": 85,
                        "column": 24
                      },
                      "text": "hash256"
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 85,
                        "column": 24
                      },
                      "end": {
                        "row": 85,
                        "column": 30
                      },
                      "text": "(data)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 85,
                            "column": 24
                          },
                          "end": {
                            "row": 85,
                            "column": 25
                          },
                          "text": "("
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 85,
                            "column": 25
                          },
                          "end": {
                            "row": 85,
                            "column": 29
                          },
                          "text": "data"
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 85,
                            "column": 29
                          },
                          "end": {
                            "row": 85,
                            "column": 30
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 86,
                "column": 6
              },
              "end": {
                "row": 86,
                "column": 15
              },
              "text": "# puts \"\""
            },
            {
              "type": "comment",
              "start": {
                "row": 87,
                "column": 6
              },
              "end": {
                "row": 87,
                "column": 156
              },
              "text": "# puts \"SIGHASH[#{self.transaction_id}, input #{input_index}, hashtype 0x#{hash_type.to_s(16)}]: hash = #{BTC.id_from_hash(hash)}; tx = \" + tx.inspect"
            },
            {
              "type": "comment",
              "start": {
                "row": 88,
                "column": 6
              },
              "end": {
                "row": 88,
                "column": 15
              },
              "text": "# puts \"\""
            },
            {
              "type": "return",
              "start": {
                "row": 89,
                "column": 6
              },
              "end": {
                "row": 89,
                "column": 17
              },
              "text": "return hash",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 89,
                    "column": 6
                  },
                  "end": {
                    "row": 89,
                    "column": 12
                  },
                  "text": "return"
                },
                {
                  "type": "argument_list",
                  "start": {
                    "row": 89,
                    "column": 13
                  },
                  "end": {
                    "row": 89,
                    "column": 17
                  },
                  "text": "hash",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 89,
                        "column": 13
                      },
                      "end": {
                        "row": 89,
                        "column": 17
                      },
                      "text": "hash"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "end",
          "start": {
            "row": 90,
            "column": 4
          },
          "end": {
            "row": 90,
            "column": 7
          },
          "text": "end"
        }
      ]
    }
  ]
}