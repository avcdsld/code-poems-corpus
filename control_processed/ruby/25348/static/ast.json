{
  "type": "program",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 29,
    "column": 7
  },
  "text": "def decode(length, type)\n      raise ArgumentError, \"Invalid argument length. Expected Integer, got #{length.class}\" unless length.is_a?(Integer)\n      raise ArgumentError, \"Invalid argument type. Expected string, got #{type.class}\" unless type.is_a?(String)\n      value = nil\n      if (@index + length) <= @string.length\n        # There are sufficient bytes remaining to extract the value:\n        if type == 'AT'\n          # We need to guard ourselves against the case where a string contains an invalid 'AT' value:\n          if length == 4\n            value = decode_tag\n          else\n            # Invalid. Just return nil.\n            skip(length)\n          end\n        else\n          # Decode the binary string and return value:\n          value = @string.slice(@index, length).unpack(vr_to_str(type))\n          # If the result is an array of one element, return the element instead of the array.\n          # If result is contained in a multi-element array, the original array is returned.\n          if value.length == 1\n            value = value[0]\n            # If value is a string, strip away possible trailing whitespace:\n            value = value.rstrip if value.is_a?(String)\n          end\n          # Update our position in the string:\n          skip(length)\n        end\n      end\n      value\n    end",
  "children": [
    {
      "type": "method",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 29,
        "column": 7
      },
      "text": "def decode(length, type)\n      raise ArgumentError, \"Invalid argument length. Expected Integer, got #{length.class}\" unless length.is_a?(Integer)\n      raise ArgumentError, \"Invalid argument type. Expected string, got #{type.class}\" unless type.is_a?(String)\n      value = nil\n      if (@index + length) <= @string.length\n        # There are sufficient bytes remaining to extract the value:\n        if type == 'AT'\n          # We need to guard ourselves against the case where a string contains an invalid 'AT' value:\n          if length == 4\n            value = decode_tag\n          else\n            # Invalid. Just return nil.\n            skip(length)\n          end\n        else\n          # Decode the binary string and return value:\n          value = @string.slice(@index, length).unpack(vr_to_str(type))\n          # If the result is an array of one element, return the element instead of the array.\n          # If result is contained in a multi-element array, the original array is returned.\n          if value.length == 1\n            value = value[0]\n            # If value is a string, strip away possible trailing whitespace:\n            value = value.rstrip if value.is_a?(String)\n          end\n          # Update our position in the string:\n          skip(length)\n        end\n      end\n      value\n    end",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 10
          },
          "text": "decode"
        },
        {
          "type": "method_parameters",
          "start": {
            "row": 0,
            "column": 10
          },
          "end": {
            "row": 0,
            "column": 24
          },
          "text": "(length, type)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 10
              },
              "end": {
                "row": 0,
                "column": 11
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 11
              },
              "end": {
                "row": 0,
                "column": 17
              },
              "text": "length"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 17
              },
              "end": {
                "row": 0,
                "column": 18
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 19
              },
              "end": {
                "row": 0,
                "column": 23
              },
              "text": "type"
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 23
              },
              "end": {
                "row": 0,
                "column": 24
              },
              "text": ")"
            }
          ]
        },
        {
          "type": "body_statement",
          "start": {
            "row": 1,
            "column": 6
          },
          "end": {
            "row": 28,
            "column": 11
          },
          "text": "raise ArgumentError, \"Invalid argument length. Expected Integer, got #{length.class}\" unless length.is_a?(Integer)\n      raise ArgumentError, \"Invalid argument type. Expected string, got #{type.class}\" unless type.is_a?(String)\n      value = nil\n      if (@index + length) <= @string.length\n        # There are sufficient bytes remaining to extract the value:\n        if type == 'AT'\n          # We need to guard ourselves against the case where a string contains an invalid 'AT' value:\n          if length == 4\n            value = decode_tag\n          else\n            # Invalid. Just return nil.\n            skip(length)\n          end\n        else\n          # Decode the binary string and return value:\n          value = @string.slice(@index, length).unpack(vr_to_str(type))\n          # If the result is an array of one element, return the element instead of the array.\n          # If result is contained in a multi-element array, the original array is returned.\n          if value.length == 1\n            value = value[0]\n            # If value is a string, strip away possible trailing whitespace:\n            value = value.rstrip if value.is_a?(String)\n          end\n          # Update our position in the string:\n          skip(length)\n        end\n      end\n      value",
          "children": [
            {
              "type": "unless_modifier",
              "start": {
                "row": 1,
                "column": 6
              },
              "end": {
                "row": 1,
                "column": 120
              },
              "text": "raise ArgumentError, \"Invalid argument length. Expected Integer, got #{length.class}\" unless length.is_a?(Integer)",
              "children": [
                {
                  "type": "call",
                  "start": {
                    "row": 1,
                    "column": 6
                  },
                  "end": {
                    "row": 1,
                    "column": 91
                  },
                  "text": "raise ArgumentError, \"Invalid argument length. Expected Integer, got #{length.class}\"",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 1,
                        "column": 6
                      },
                      "end": {
                        "row": 1,
                        "column": 11
                      },
                      "text": "raise"
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 1,
                        "column": 12
                      },
                      "end": {
                        "row": 1,
                        "column": 91
                      },
                      "text": "ArgumentError, \"Invalid argument length. Expected Integer, got #{length.class}\"",
                      "children": [
                        {
                          "type": "constant",
                          "start": {
                            "row": 1,
                            "column": 12
                          },
                          "end": {
                            "row": 1,
                            "column": 25
                          },
                          "text": "ArgumentError"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 1,
                            "column": 25
                          },
                          "end": {
                            "row": 1,
                            "column": 26
                          },
                          "text": ","
                        },
                        {
                          "type": "string",
                          "start": {
                            "row": 1,
                            "column": 27
                          },
                          "end": {
                            "row": 1,
                            "column": 91
                          },
                          "text": "\"Invalid argument length. Expected Integer, got #{length.class}\"",
                          "children": [
                            {
                              "type": "\"",
                              "start": {
                                "row": 1,
                                "column": 27
                              },
                              "end": {
                                "row": 1,
                                "column": 28
                              },
                              "text": "\""
                            },
                            {
                              "type": "string_content",
                              "start": {
                                "row": 1,
                                "column": 28
                              },
                              "end": {
                                "row": 1,
                                "column": 75
                              },
                              "text": "Invalid argument length. Expected Integer, got "
                            },
                            {
                              "type": "interpolation",
                              "start": {
                                "row": 1,
                                "column": 75
                              },
                              "end": {
                                "row": 1,
                                "column": 90
                              },
                              "text": "#{length.class}",
                              "children": [
                                {
                                  "type": "#{",
                                  "start": {
                                    "row": 1,
                                    "column": 75
                                  },
                                  "end": {
                                    "row": 1,
                                    "column": 77
                                  },
                                  "text": "#{"
                                },
                                {
                                  "type": "call",
                                  "start": {
                                    "row": 1,
                                    "column": 77
                                  },
                                  "end": {
                                    "row": 1,
                                    "column": 89
                                  },
                                  "text": "length.class",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 1,
                                        "column": 77
                                      },
                                      "end": {
                                        "row": 1,
                                        "column": 83
                                      },
                                      "text": "length"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 1,
                                        "column": 83
                                      },
                                      "end": {
                                        "row": 1,
                                        "column": 84
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 1,
                                        "column": 84
                                      },
                                      "end": {
                                        "row": 1,
                                        "column": 89
                                      },
                                      "text": "class"
                                    }
                                  ]
                                },
                                {
                                  "type": "}",
                                  "start": {
                                    "row": 1,
                                    "column": 89
                                  },
                                  "end": {
                                    "row": 1,
                                    "column": 90
                                  },
                                  "text": "}"
                                }
                              ]
                            },
                            {
                              "type": "\"",
                              "start": {
                                "row": 1,
                                "column": 90
                              },
                              "end": {
                                "row": 1,
                                "column": 91
                              },
                              "text": "\""
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "unless",
                  "start": {
                    "row": 1,
                    "column": 92
                  },
                  "end": {
                    "row": 1,
                    "column": 98
                  },
                  "text": "unless"
                },
                {
                  "type": "call",
                  "start": {
                    "row": 1,
                    "column": 99
                  },
                  "end": {
                    "row": 1,
                    "column": 120
                  },
                  "text": "length.is_a?(Integer)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 1,
                        "column": 99
                      },
                      "end": {
                        "row": 1,
                        "column": 105
                      },
                      "text": "length"
                    },
                    {
                      "type": ".",
                      "start": {
                        "row": 1,
                        "column": 105
                      },
                      "end": {
                        "row": 1,
                        "column": 106
                      },
                      "text": "."
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 1,
                        "column": 106
                      },
                      "end": {
                        "row": 1,
                        "column": 111
                      },
                      "text": "is_a?"
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 1,
                        "column": 111
                      },
                      "end": {
                        "row": 1,
                        "column": 120
                      },
                      "text": "(Integer)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 1,
                            "column": 111
                          },
                          "end": {
                            "row": 1,
                            "column": 112
                          },
                          "text": "("
                        },
                        {
                          "type": "constant",
                          "start": {
                            "row": 1,
                            "column": 112
                          },
                          "end": {
                            "row": 1,
                            "column": 119
                          },
                          "text": "Integer"
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 1,
                            "column": 119
                          },
                          "end": {
                            "row": 1,
                            "column": 120
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "unless_modifier",
              "start": {
                "row": 2,
                "column": 6
              },
              "end": {
                "row": 2,
                "column": 112
              },
              "text": "raise ArgumentError, \"Invalid argument type. Expected string, got #{type.class}\" unless type.is_a?(String)",
              "children": [
                {
                  "type": "call",
                  "start": {
                    "row": 2,
                    "column": 6
                  },
                  "end": {
                    "row": 2,
                    "column": 86
                  },
                  "text": "raise ArgumentError, \"Invalid argument type. Expected string, got #{type.class}\"",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 2,
                        "column": 6
                      },
                      "end": {
                        "row": 2,
                        "column": 11
                      },
                      "text": "raise"
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 2,
                        "column": 12
                      },
                      "end": {
                        "row": 2,
                        "column": 86
                      },
                      "text": "ArgumentError, \"Invalid argument type. Expected string, got #{type.class}\"",
                      "children": [
                        {
                          "type": "constant",
                          "start": {
                            "row": 2,
                            "column": 12
                          },
                          "end": {
                            "row": 2,
                            "column": 25
                          },
                          "text": "ArgumentError"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 2,
                            "column": 25
                          },
                          "end": {
                            "row": 2,
                            "column": 26
                          },
                          "text": ","
                        },
                        {
                          "type": "string",
                          "start": {
                            "row": 2,
                            "column": 27
                          },
                          "end": {
                            "row": 2,
                            "column": 86
                          },
                          "text": "\"Invalid argument type. Expected string, got #{type.class}\"",
                          "children": [
                            {
                              "type": "\"",
                              "start": {
                                "row": 2,
                                "column": 27
                              },
                              "end": {
                                "row": 2,
                                "column": 28
                              },
                              "text": "\""
                            },
                            {
                              "type": "string_content",
                              "start": {
                                "row": 2,
                                "column": 28
                              },
                              "end": {
                                "row": 2,
                                "column": 72
                              },
                              "text": "Invalid argument type. Expected string, got "
                            },
                            {
                              "type": "interpolation",
                              "start": {
                                "row": 2,
                                "column": 72
                              },
                              "end": {
                                "row": 2,
                                "column": 85
                              },
                              "text": "#{type.class}",
                              "children": [
                                {
                                  "type": "#{",
                                  "start": {
                                    "row": 2,
                                    "column": 72
                                  },
                                  "end": {
                                    "row": 2,
                                    "column": 74
                                  },
                                  "text": "#{"
                                },
                                {
                                  "type": "call",
                                  "start": {
                                    "row": 2,
                                    "column": 74
                                  },
                                  "end": {
                                    "row": 2,
                                    "column": 84
                                  },
                                  "text": "type.class",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 2,
                                        "column": 74
                                      },
                                      "end": {
                                        "row": 2,
                                        "column": 78
                                      },
                                      "text": "type"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 2,
                                        "column": 78
                                      },
                                      "end": {
                                        "row": 2,
                                        "column": 79
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 2,
                                        "column": 79
                                      },
                                      "end": {
                                        "row": 2,
                                        "column": 84
                                      },
                                      "text": "class"
                                    }
                                  ]
                                },
                                {
                                  "type": "}",
                                  "start": {
                                    "row": 2,
                                    "column": 84
                                  },
                                  "end": {
                                    "row": 2,
                                    "column": 85
                                  },
                                  "text": "}"
                                }
                              ]
                            },
                            {
                              "type": "\"",
                              "start": {
                                "row": 2,
                                "column": 85
                              },
                              "end": {
                                "row": 2,
                                "column": 86
                              },
                              "text": "\""
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "unless",
                  "start": {
                    "row": 2,
                    "column": 87
                  },
                  "end": {
                    "row": 2,
                    "column": 93
                  },
                  "text": "unless"
                },
                {
                  "type": "call",
                  "start": {
                    "row": 2,
                    "column": 94
                  },
                  "end": {
                    "row": 2,
                    "column": 112
                  },
                  "text": "type.is_a?(String)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 2,
                        "column": 94
                      },
                      "end": {
                        "row": 2,
                        "column": 98
                      },
                      "text": "type"
                    },
                    {
                      "type": ".",
                      "start": {
                        "row": 2,
                        "column": 98
                      },
                      "end": {
                        "row": 2,
                        "column": 99
                      },
                      "text": "."
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 2,
                        "column": 99
                      },
                      "end": {
                        "row": 2,
                        "column": 104
                      },
                      "text": "is_a?"
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 2,
                        "column": 104
                      },
                      "end": {
                        "row": 2,
                        "column": 112
                      },
                      "text": "(String)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 2,
                            "column": 104
                          },
                          "end": {
                            "row": 2,
                            "column": 105
                          },
                          "text": "("
                        },
                        {
                          "type": "constant",
                          "start": {
                            "row": 2,
                            "column": 105
                          },
                          "end": {
                            "row": 2,
                            "column": 111
                          },
                          "text": "String"
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 2,
                            "column": 111
                          },
                          "end": {
                            "row": 2,
                            "column": 112
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "assignment",
              "start": {
                "row": 3,
                "column": 6
              },
              "end": {
                "row": 3,
                "column": 17
              },
              "text": "value = nil",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 3,
                    "column": 6
                  },
                  "end": {
                    "row": 3,
                    "column": 11
                  },
                  "text": "value"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 3,
                    "column": 12
                  },
                  "end": {
                    "row": 3,
                    "column": 13
                  },
                  "text": "="
                },
                {
                  "type": "nil",
                  "start": {
                    "row": 3,
                    "column": 14
                  },
                  "end": {
                    "row": 3,
                    "column": 17
                  },
                  "text": "nil",
                  "children": [
                    {
                      "type": "nil",
                      "start": {
                        "row": 3,
                        "column": 14
                      },
                      "end": {
                        "row": 3,
                        "column": 17
                      },
                      "text": "nil"
                    }
                  ]
                }
              ]
            },
            {
              "type": "if",
              "start": {
                "row": 4,
                "column": 6
              },
              "end": {
                "row": 27,
                "column": 9
              },
              "text": "if (@index + length) <= @string.length\n        # There are sufficient bytes remaining to extract the value:\n        if type == 'AT'\n          # We need to guard ourselves against the case where a string contains an invalid 'AT' value:\n          if length == 4\n            value = decode_tag\n          else\n            # Invalid. Just return nil.\n            skip(length)\n          end\n        else\n          # Decode the binary string and return value:\n          value = @string.slice(@index, length).unpack(vr_to_str(type))\n          # If the result is an array of one element, return the element instead of the array.\n          # If result is contained in a multi-element array, the original array is returned.\n          if value.length == 1\n            value = value[0]\n            # If value is a string, strip away possible trailing whitespace:\n            value = value.rstrip if value.is_a?(String)\n          end\n          # Update our position in the string:\n          skip(length)\n        end\n      end",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 4,
                    "column": 6
                  },
                  "end": {
                    "row": 4,
                    "column": 8
                  },
                  "text": "if"
                },
                {
                  "type": "binary",
                  "start": {
                    "row": 4,
                    "column": 9
                  },
                  "end": {
                    "row": 4,
                    "column": 44
                  },
                  "text": "(@index + length) <= @string.length",
                  "children": [
                    {
                      "type": "parenthesized_statements",
                      "start": {
                        "row": 4,
                        "column": 9
                      },
                      "end": {
                        "row": 4,
                        "column": 26
                      },
                      "text": "(@index + length)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 4,
                            "column": 9
                          },
                          "end": {
                            "row": 4,
                            "column": 10
                          },
                          "text": "("
                        },
                        {
                          "type": "binary",
                          "start": {
                            "row": 4,
                            "column": 10
                          },
                          "end": {
                            "row": 4,
                            "column": 25
                          },
                          "text": "@index + length",
                          "children": [
                            {
                              "type": "instance_variable",
                              "start": {
                                "row": 4,
                                "column": 10
                              },
                              "end": {
                                "row": 4,
                                "column": 16
                              },
                              "text": "@index"
                            },
                            {
                              "type": "+",
                              "start": {
                                "row": 4,
                                "column": 17
                              },
                              "end": {
                                "row": 4,
                                "column": 18
                              },
                              "text": "+"
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 4,
                                "column": 19
                              },
                              "end": {
                                "row": 4,
                                "column": 25
                              },
                              "text": "length"
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 4,
                            "column": 25
                          },
                          "end": {
                            "row": 4,
                            "column": 26
                          },
                          "text": ")"
                        }
                      ]
                    },
                    {
                      "type": "<=",
                      "start": {
                        "row": 4,
                        "column": 27
                      },
                      "end": {
                        "row": 4,
                        "column": 29
                      },
                      "text": "<="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 4,
                        "column": 30
                      },
                      "end": {
                        "row": 4,
                        "column": 44
                      },
                      "text": "@string.length",
                      "children": [
                        {
                          "type": "instance_variable",
                          "start": {
                            "row": 4,
                            "column": 30
                          },
                          "end": {
                            "row": 4,
                            "column": 37
                          },
                          "text": "@string"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 4,
                            "column": 37
                          },
                          "end": {
                            "row": 4,
                            "column": 38
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 4,
                            "column": 38
                          },
                          "end": {
                            "row": 4,
                            "column": 44
                          },
                          "text": "length"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "comment",
                  "start": {
                    "row": 5,
                    "column": 8
                  },
                  "end": {
                    "row": 5,
                    "column": 68
                  },
                  "text": "# There are sufficient bytes remaining to extract the value:"
                },
                {
                  "type": "then",
                  "start": {
                    "row": 5,
                    "column": 68
                  },
                  "end": {
                    "row": 26,
                    "column": 11
                  },
                  "text": "\n        if type == 'AT'\n          # We need to guard ourselves against the case where a string contains an invalid 'AT' value:\n          if length == 4\n            value = decode_tag\n          else\n            # Invalid. Just return nil.\n            skip(length)\n          end\n        else\n          # Decode the binary string and return value:\n          value = @string.slice(@index, length).unpack(vr_to_str(type))\n          # If the result is an array of one element, return the element instead of the array.\n          # If result is contained in a multi-element array, the original array is returned.\n          if value.length == 1\n            value = value[0]\n            # If value is a string, strip away possible trailing whitespace:\n            value = value.rstrip if value.is_a?(String)\n          end\n          # Update our position in the string:\n          skip(length)\n        end",
                  "children": [
                    {
                      "type": "if",
                      "start": {
                        "row": 6,
                        "column": 8
                      },
                      "end": {
                        "row": 26,
                        "column": 11
                      },
                      "text": "if type == 'AT'\n          # We need to guard ourselves against the case where a string contains an invalid 'AT' value:\n          if length == 4\n            value = decode_tag\n          else\n            # Invalid. Just return nil.\n            skip(length)\n          end\n        else\n          # Decode the binary string and return value:\n          value = @string.slice(@index, length).unpack(vr_to_str(type))\n          # If the result is an array of one element, return the element instead of the array.\n          # If result is contained in a multi-element array, the original array is returned.\n          if value.length == 1\n            value = value[0]\n            # If value is a string, strip away possible trailing whitespace:\n            value = value.rstrip if value.is_a?(String)\n          end\n          # Update our position in the string:\n          skip(length)\n        end",
                      "children": [
                        {
                          "type": "if",
                          "start": {
                            "row": 6,
                            "column": 8
                          },
                          "end": {
                            "row": 6,
                            "column": 10
                          },
                          "text": "if"
                        },
                        {
                          "type": "binary",
                          "start": {
                            "row": 6,
                            "column": 11
                          },
                          "end": {
                            "row": 6,
                            "column": 23
                          },
                          "text": "type == 'AT'",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 6,
                                "column": 11
                              },
                              "end": {
                                "row": 6,
                                "column": 15
                              },
                              "text": "type"
                            },
                            {
                              "type": "==",
                              "start": {
                                "row": 6,
                                "column": 16
                              },
                              "end": {
                                "row": 6,
                                "column": 18
                              },
                              "text": "=="
                            },
                            {
                              "type": "string",
                              "start": {
                                "row": 6,
                                "column": 19
                              },
                              "end": {
                                "row": 6,
                                "column": 23
                              },
                              "text": "'AT'",
                              "children": [
                                {
                                  "type": "\"",
                                  "start": {
                                    "row": 6,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 6,
                                    "column": 20
                                  },
                                  "text": "'"
                                },
                                {
                                  "type": "string_content",
                                  "start": {
                                    "row": 6,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 6,
                                    "column": 22
                                  },
                                  "text": "AT"
                                },
                                {
                                  "type": "\"",
                                  "start": {
                                    "row": 6,
                                    "column": 22
                                  },
                                  "end": {
                                    "row": 6,
                                    "column": 23
                                  },
                                  "text": "'"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "comment",
                          "start": {
                            "row": 7,
                            "column": 10
                          },
                          "end": {
                            "row": 7,
                            "column": 102
                          },
                          "text": "# We need to guard ourselves against the case where a string contains an invalid 'AT' value:"
                        },
                        {
                          "type": "then",
                          "start": {
                            "row": 7,
                            "column": 102
                          },
                          "end": {
                            "row": 13,
                            "column": 13
                          },
                          "text": "\n          if length == 4\n            value = decode_tag\n          else\n            # Invalid. Just return nil.\n            skip(length)\n          end",
                          "children": [
                            {
                              "type": "if",
                              "start": {
                                "row": 8,
                                "column": 10
                              },
                              "end": {
                                "row": 13,
                                "column": 13
                              },
                              "text": "if length == 4\n            value = decode_tag\n          else\n            # Invalid. Just return nil.\n            skip(length)\n          end",
                              "children": [
                                {
                                  "type": "if",
                                  "start": {
                                    "row": 8,
                                    "column": 10
                                  },
                                  "end": {
                                    "row": 8,
                                    "column": 12
                                  },
                                  "text": "if"
                                },
                                {
                                  "type": "binary",
                                  "start": {
                                    "row": 8,
                                    "column": 13
                                  },
                                  "end": {
                                    "row": 8,
                                    "column": 24
                                  },
                                  "text": "length == 4",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 8,
                                        "column": 13
                                      },
                                      "end": {
                                        "row": 8,
                                        "column": 19
                                      },
                                      "text": "length"
                                    },
                                    {
                                      "type": "==",
                                      "start": {
                                        "row": 8,
                                        "column": 20
                                      },
                                      "end": {
                                        "row": 8,
                                        "column": 22
                                      },
                                      "text": "=="
                                    },
                                    {
                                      "type": "integer",
                                      "start": {
                                        "row": 8,
                                        "column": 23
                                      },
                                      "end": {
                                        "row": 8,
                                        "column": 24
                                      },
                                      "text": "4"
                                    }
                                  ]
                                },
                                {
                                  "type": "then",
                                  "start": {
                                    "row": 8,
                                    "column": 24
                                  },
                                  "end": {
                                    "row": 9,
                                    "column": 30
                                  },
                                  "text": "\n            value = decode_tag",
                                  "children": [
                                    {
                                      "type": "assignment",
                                      "start": {
                                        "row": 9,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 9,
                                        "column": 30
                                      },
                                      "text": "value = decode_tag",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 9,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 9,
                                            "column": 17
                                          },
                                          "text": "value"
                                        },
                                        {
                                          "type": "=",
                                          "start": {
                                            "row": 9,
                                            "column": 18
                                          },
                                          "end": {
                                            "row": 9,
                                            "column": 19
                                          },
                                          "text": "="
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 9,
                                            "column": 20
                                          },
                                          "end": {
                                            "row": 9,
                                            "column": 30
                                          },
                                          "text": "decode_tag"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "else",
                                  "start": {
                                    "row": 10,
                                    "column": 10
                                  },
                                  "end": {
                                    "row": 12,
                                    "column": 24
                                  },
                                  "text": "else\n            # Invalid. Just return nil.\n            skip(length)",
                                  "children": [
                                    {
                                      "type": "else",
                                      "start": {
                                        "row": 10,
                                        "column": 10
                                      },
                                      "end": {
                                        "row": 10,
                                        "column": 14
                                      },
                                      "text": "else"
                                    },
                                    {
                                      "type": "comment",
                                      "start": {
                                        "row": 11,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 11,
                                        "column": 39
                                      },
                                      "text": "# Invalid. Just return nil."
                                    },
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 12,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 12,
                                        "column": 24
                                      },
                                      "text": "skip(length)",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 12,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 12,
                                            "column": 16
                                          },
                                          "text": "skip"
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 12,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 12,
                                            "column": 24
                                          },
                                          "text": "(length)",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 12,
                                                "column": 16
                                              },
                                              "end": {
                                                "row": 12,
                                                "column": 17
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 12,
                                                "column": 17
                                              },
                                              "end": {
                                                "row": 12,
                                                "column": 23
                                              },
                                              "text": "length"
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 12,
                                                "column": 23
                                              },
                                              "end": {
                                                "row": 12,
                                                "column": 24
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "end",
                                  "start": {
                                    "row": 13,
                                    "column": 10
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 13
                                  },
                                  "text": "end"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "else",
                          "start": {
                            "row": 14,
                            "column": 8
                          },
                          "end": {
                            "row": 25,
                            "column": 22
                          },
                          "text": "else\n          # Decode the binary string and return value:\n          value = @string.slice(@index, length).unpack(vr_to_str(type))\n          # If the result is an array of one element, return the element instead of the array.\n          # If result is contained in a multi-element array, the original array is returned.\n          if value.length == 1\n            value = value[0]\n            # If value is a string, strip away possible trailing whitespace:\n            value = value.rstrip if value.is_a?(String)\n          end\n          # Update our position in the string:\n          skip(length)",
                          "children": [
                            {
                              "type": "else",
                              "start": {
                                "row": 14,
                                "column": 8
                              },
                              "end": {
                                "row": 14,
                                "column": 12
                              },
                              "text": "else"
                            },
                            {
                              "type": "comment",
                              "start": {
                                "row": 15,
                                "column": 10
                              },
                              "end": {
                                "row": 15,
                                "column": 54
                              },
                              "text": "# Decode the binary string and return value:"
                            },
                            {
                              "type": "assignment",
                              "start": {
                                "row": 16,
                                "column": 10
                              },
                              "end": {
                                "row": 16,
                                "column": 71
                              },
                              "text": "value = @string.slice(@index, length).unpack(vr_to_str(type))",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 16,
                                    "column": 10
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 15
                                  },
                                  "text": "value"
                                },
                                {
                                  "type": "=",
                                  "start": {
                                    "row": 16,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 17
                                  },
                                  "text": "="
                                },
                                {
                                  "type": "call",
                                  "start": {
                                    "row": 16,
                                    "column": 18
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 71
                                  },
                                  "text": "@string.slice(@index, length).unpack(vr_to_str(type))",
                                  "children": [
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 16,
                                        "column": 18
                                      },
                                      "end": {
                                        "row": 16,
                                        "column": 47
                                      },
                                      "text": "@string.slice(@index, length)",
                                      "children": [
                                        {
                                          "type": "instance_variable",
                                          "start": {
                                            "row": 16,
                                            "column": 18
                                          },
                                          "end": {
                                            "row": 16,
                                            "column": 25
                                          },
                                          "text": "@string"
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 16,
                                            "column": 25
                                          },
                                          "end": {
                                            "row": 16,
                                            "column": 26
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 16,
                                            "column": 26
                                          },
                                          "end": {
                                            "row": 16,
                                            "column": 31
                                          },
                                          "text": "slice"
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 16,
                                            "column": 31
                                          },
                                          "end": {
                                            "row": 16,
                                            "column": 47
                                          },
                                          "text": "(@index, length)",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 16,
                                                "column": 31
                                              },
                                              "end": {
                                                "row": 16,
                                                "column": 32
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "instance_variable",
                                              "start": {
                                                "row": 16,
                                                "column": 32
                                              },
                                              "end": {
                                                "row": 16,
                                                "column": 38
                                              },
                                              "text": "@index"
                                            },
                                            {
                                              "type": ",",
                                              "start": {
                                                "row": 16,
                                                "column": 38
                                              },
                                              "end": {
                                                "row": 16,
                                                "column": 39
                                              },
                                              "text": ","
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 16,
                                                "column": 40
                                              },
                                              "end": {
                                                "row": 16,
                                                "column": 46
                                              },
                                              "text": "length"
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 16,
                                                "column": 46
                                              },
                                              "end": {
                                                "row": 16,
                                                "column": 47
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 16,
                                        "column": 47
                                      },
                                      "end": {
                                        "row": 16,
                                        "column": 48
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 16,
                                        "column": 48
                                      },
                                      "end": {
                                        "row": 16,
                                        "column": 54
                                      },
                                      "text": "unpack"
                                    },
                                    {
                                      "type": "argument_list",
                                      "start": {
                                        "row": 16,
                                        "column": 54
                                      },
                                      "end": {
                                        "row": 16,
                                        "column": 71
                                      },
                                      "text": "(vr_to_str(type))",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 16,
                                            "column": 54
                                          },
                                          "end": {
                                            "row": 16,
                                            "column": 55
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "call",
                                          "start": {
                                            "row": 16,
                                            "column": 55
                                          },
                                          "end": {
                                            "row": 16,
                                            "column": 70
                                          },
                                          "text": "vr_to_str(type)",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 16,
                                                "column": 55
                                              },
                                              "end": {
                                                "row": 16,
                                                "column": 64
                                              },
                                              "text": "vr_to_str"
                                            },
                                            {
                                              "type": "argument_list",
                                              "start": {
                                                "row": 16,
                                                "column": 64
                                              },
                                              "end": {
                                                "row": 16,
                                                "column": 70
                                              },
                                              "text": "(type)",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 16,
                                                    "column": 64
                                                  },
                                                  "end": {
                                                    "row": 16,
                                                    "column": 65
                                                  },
                                                  "text": "("
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 16,
                                                    "column": 65
                                                  },
                                                  "end": {
                                                    "row": 16,
                                                    "column": 69
                                                  },
                                                  "text": "type"
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 16,
                                                    "column": 69
                                                  },
                                                  "end": {
                                                    "row": 16,
                                                    "column": 70
                                                  },
                                                  "text": ")"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 16,
                                            "column": 70
                                          },
                                          "end": {
                                            "row": 16,
                                            "column": 71
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "comment",
                              "start": {
                                "row": 17,
                                "column": 10
                              },
                              "end": {
                                "row": 17,
                                "column": 94
                              },
                              "text": "# If the result is an array of one element, return the element instead of the array."
                            },
                            {
                              "type": "comment",
                              "start": {
                                "row": 18,
                                "column": 10
                              },
                              "end": {
                                "row": 18,
                                "column": 92
                              },
                              "text": "# If result is contained in a multi-element array, the original array is returned."
                            },
                            {
                              "type": "if",
                              "start": {
                                "row": 19,
                                "column": 10
                              },
                              "end": {
                                "row": 23,
                                "column": 13
                              },
                              "text": "if value.length == 1\n            value = value[0]\n            # If value is a string, strip away possible trailing whitespace:\n            value = value.rstrip if value.is_a?(String)\n          end",
                              "children": [
                                {
                                  "type": "if",
                                  "start": {
                                    "row": 19,
                                    "column": 10
                                  },
                                  "end": {
                                    "row": 19,
                                    "column": 12
                                  },
                                  "text": "if"
                                },
                                {
                                  "type": "binary",
                                  "start": {
                                    "row": 19,
                                    "column": 13
                                  },
                                  "end": {
                                    "row": 19,
                                    "column": 30
                                  },
                                  "text": "value.length == 1",
                                  "children": [
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 19,
                                        "column": 13
                                      },
                                      "end": {
                                        "row": 19,
                                        "column": 25
                                      },
                                      "text": "value.length",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 19,
                                            "column": 13
                                          },
                                          "end": {
                                            "row": 19,
                                            "column": 18
                                          },
                                          "text": "value"
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 19,
                                            "column": 18
                                          },
                                          "end": {
                                            "row": 19,
                                            "column": 19
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 19,
                                            "column": 19
                                          },
                                          "end": {
                                            "row": 19,
                                            "column": 25
                                          },
                                          "text": "length"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "==",
                                      "start": {
                                        "row": 19,
                                        "column": 26
                                      },
                                      "end": {
                                        "row": 19,
                                        "column": 28
                                      },
                                      "text": "=="
                                    },
                                    {
                                      "type": "integer",
                                      "start": {
                                        "row": 19,
                                        "column": 29
                                      },
                                      "end": {
                                        "row": 19,
                                        "column": 30
                                      },
                                      "text": "1"
                                    }
                                  ]
                                },
                                {
                                  "type": "then",
                                  "start": {
                                    "row": 19,
                                    "column": 30
                                  },
                                  "end": {
                                    "row": 22,
                                    "column": 55
                                  },
                                  "text": "\n            value = value[0]\n            # If value is a string, strip away possible trailing whitespace:\n            value = value.rstrip if value.is_a?(String)",
                                  "children": [
                                    {
                                      "type": "assignment",
                                      "start": {
                                        "row": 20,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 20,
                                        "column": 28
                                      },
                                      "text": "value = value[0]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 20,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 20,
                                            "column": 17
                                          },
                                          "text": "value"
                                        },
                                        {
                                          "type": "=",
                                          "start": {
                                            "row": 20,
                                            "column": 18
                                          },
                                          "end": {
                                            "row": 20,
                                            "column": 19
                                          },
                                          "text": "="
                                        },
                                        {
                                          "type": "element_reference",
                                          "start": {
                                            "row": 20,
                                            "column": 20
                                          },
                                          "end": {
                                            "row": 20,
                                            "column": 28
                                          },
                                          "text": "value[0]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 20,
                                                "column": 20
                                              },
                                              "end": {
                                                "row": 20,
                                                "column": 25
                                              },
                                              "text": "value"
                                            },
                                            {
                                              "type": "[",
                                              "start": {
                                                "row": 20,
                                                "column": 25
                                              },
                                              "end": {
                                                "row": 20,
                                                "column": 26
                                              },
                                              "text": "["
                                            },
                                            {
                                              "type": "integer",
                                              "start": {
                                                "row": 20,
                                                "column": 26
                                              },
                                              "end": {
                                                "row": 20,
                                                "column": 27
                                              },
                                              "text": "0"
                                            },
                                            {
                                              "type": "]",
                                              "start": {
                                                "row": 20,
                                                "column": 27
                                              },
                                              "end": {
                                                "row": 20,
                                                "column": 28
                                              },
                                              "text": "]"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "comment",
                                      "start": {
                                        "row": 21,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 21,
                                        "column": 76
                                      },
                                      "text": "# If value is a string, strip away possible trailing whitespace:"
                                    },
                                    {
                                      "type": "if_modifier",
                                      "start": {
                                        "row": 22,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 22,
                                        "column": 55
                                      },
                                      "text": "value = value.rstrip if value.is_a?(String)",
                                      "children": [
                                        {
                                          "type": "assignment",
                                          "start": {
                                            "row": 22,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 22,
                                            "column": 32
                                          },
                                          "text": "value = value.rstrip",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 22,
                                                "column": 12
                                              },
                                              "end": {
                                                "row": 22,
                                                "column": 17
                                              },
                                              "text": "value"
                                            },
                                            {
                                              "type": "=",
                                              "start": {
                                                "row": 22,
                                                "column": 18
                                              },
                                              "end": {
                                                "row": 22,
                                                "column": 19
                                              },
                                              "text": "="
                                            },
                                            {
                                              "type": "call",
                                              "start": {
                                                "row": 22,
                                                "column": 20
                                              },
                                              "end": {
                                                "row": 22,
                                                "column": 32
                                              },
                                              "text": "value.rstrip",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 22,
                                                    "column": 20
                                                  },
                                                  "end": {
                                                    "row": 22,
                                                    "column": 25
                                                  },
                                                  "text": "value"
                                                },
                                                {
                                                  "type": ".",
                                                  "start": {
                                                    "row": 22,
                                                    "column": 25
                                                  },
                                                  "end": {
                                                    "row": 22,
                                                    "column": 26
                                                  },
                                                  "text": "."
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 22,
                                                    "column": 26
                                                  },
                                                  "end": {
                                                    "row": 22,
                                                    "column": 32
                                                  },
                                                  "text": "rstrip"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "if",
                                          "start": {
                                            "row": 22,
                                            "column": 33
                                          },
                                          "end": {
                                            "row": 22,
                                            "column": 35
                                          },
                                          "text": "if"
                                        },
                                        {
                                          "type": "call",
                                          "start": {
                                            "row": 22,
                                            "column": 36
                                          },
                                          "end": {
                                            "row": 22,
                                            "column": 55
                                          },
                                          "text": "value.is_a?(String)",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 22,
                                                "column": 36
                                              },
                                              "end": {
                                                "row": 22,
                                                "column": 41
                                              },
                                              "text": "value"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 22,
                                                "column": 41
                                              },
                                              "end": {
                                                "row": 22,
                                                "column": 42
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 22,
                                                "column": 42
                                              },
                                              "end": {
                                                "row": 22,
                                                "column": 47
                                              },
                                              "text": "is_a?"
                                            },
                                            {
                                              "type": "argument_list",
                                              "start": {
                                                "row": 22,
                                                "column": 47
                                              },
                                              "end": {
                                                "row": 22,
                                                "column": 55
                                              },
                                              "text": "(String)",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 22,
                                                    "column": 47
                                                  },
                                                  "end": {
                                                    "row": 22,
                                                    "column": 48
                                                  },
                                                  "text": "("
                                                },
                                                {
                                                  "type": "constant",
                                                  "start": {
                                                    "row": 22,
                                                    "column": 48
                                                  },
                                                  "end": {
                                                    "row": 22,
                                                    "column": 54
                                                  },
                                                  "text": "String"
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 22,
                                                    "column": 54
                                                  },
                                                  "end": {
                                                    "row": 22,
                                                    "column": 55
                                                  },
                                                  "text": ")"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "end",
                                  "start": {
                                    "row": 23,
                                    "column": 10
                                  },
                                  "end": {
                                    "row": 23,
                                    "column": 13
                                  },
                                  "text": "end"
                                }
                              ]
                            },
                            {
                              "type": "comment",
                              "start": {
                                "row": 24,
                                "column": 10
                              },
                              "end": {
                                "row": 24,
                                "column": 46
                              },
                              "text": "# Update our position in the string:"
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 25,
                                "column": 10
                              },
                              "end": {
                                "row": 25,
                                "column": 22
                              },
                              "text": "skip(length)",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 25,
                                    "column": 10
                                  },
                                  "end": {
                                    "row": 25,
                                    "column": 14
                                  },
                                  "text": "skip"
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 25,
                                    "column": 14
                                  },
                                  "end": {
                                    "row": 25,
                                    "column": 22
                                  },
                                  "text": "(length)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 25,
                                        "column": 14
                                      },
                                      "end": {
                                        "row": 25,
                                        "column": 15
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 25,
                                        "column": 15
                                      },
                                      "end": {
                                        "row": 25,
                                        "column": 21
                                      },
                                      "text": "length"
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 25,
                                        "column": 21
                                      },
                                      "end": {
                                        "row": 25,
                                        "column": 22
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "end",
                          "start": {
                            "row": 26,
                            "column": 8
                          },
                          "end": {
                            "row": 26,
                            "column": 11
                          },
                          "text": "end"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "end",
                  "start": {
                    "row": 27,
                    "column": 6
                  },
                  "end": {
                    "row": 27,
                    "column": 9
                  },
                  "text": "end"
                }
              ]
            },
            {
              "type": "identifier",
              "start": {
                "row": 28,
                "column": 6
              },
              "end": {
                "row": 28,
                "column": 11
              },
              "text": "value"
            }
          ]
        },
        {
          "type": "end",
          "start": {
            "row": 29,
            "column": 4
          },
          "end": {
            "row": 29,
            "column": 7
          },
          "text": "end"
        }
      ]
    }
  ]
}