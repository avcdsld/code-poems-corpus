{
  "type": "program",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 7,
    "column": 7
  },
  "text": "def name(gender = :any)\n      case gender\n      when :any then rand(0..1) == 0 ? name(:male) : name(:female)\n      when :male then fetch_sample(MALE_FIRST_NAMES)\n      when :female then fetch_sample(FEMALE_FIRST_NAMES)\n      else raise ArgumentError, 'Invalid gender, must be one of :any, :male, :female'\n      end\n    end",
  "children": [
    {
      "type": "method",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 7,
        "column": 7
      },
      "text": "def name(gender = :any)\n      case gender\n      when :any then rand(0..1) == 0 ? name(:male) : name(:female)\n      when :male then fetch_sample(MALE_FIRST_NAMES)\n      when :female then fetch_sample(FEMALE_FIRST_NAMES)\n      else raise ArgumentError, 'Invalid gender, must be one of :any, :male, :female'\n      end\n    end",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 8
          },
          "text": "name"
        },
        {
          "type": "method_parameters",
          "start": {
            "row": 0,
            "column": 8
          },
          "end": {
            "row": 0,
            "column": 23
          },
          "text": "(gender = :any)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 8
              },
              "end": {
                "row": 0,
                "column": 9
              },
              "text": "("
            },
            {
              "type": "optional_parameter",
              "start": {
                "row": 0,
                "column": 9
              },
              "end": {
                "row": 0,
                "column": 22
              },
              "text": "gender = :any",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 9
                  },
                  "end": {
                    "row": 0,
                    "column": 15
                  },
                  "text": "gender"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 0,
                    "column": 16
                  },
                  "end": {
                    "row": 0,
                    "column": 17
                  },
                  "text": "="
                },
                {
                  "type": "simple_symbol",
                  "start": {
                    "row": 0,
                    "column": 18
                  },
                  "end": {
                    "row": 0,
                    "column": 22
                  },
                  "text": ":any"
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 22
              },
              "end": {
                "row": 0,
                "column": 23
              },
              "text": ")"
            }
          ]
        },
        {
          "type": "body_statement",
          "start": {
            "row": 1,
            "column": 6
          },
          "end": {
            "row": 6,
            "column": 9
          },
          "text": "case gender\n      when :any then rand(0..1) == 0 ? name(:male) : name(:female)\n      when :male then fetch_sample(MALE_FIRST_NAMES)\n      when :female then fetch_sample(FEMALE_FIRST_NAMES)\n      else raise ArgumentError, 'Invalid gender, must be one of :any, :male, :female'\n      end",
          "children": [
            {
              "type": "case",
              "start": {
                "row": 1,
                "column": 6
              },
              "end": {
                "row": 6,
                "column": 9
              },
              "text": "case gender\n      when :any then rand(0..1) == 0 ? name(:male) : name(:female)\n      when :male then fetch_sample(MALE_FIRST_NAMES)\n      when :female then fetch_sample(FEMALE_FIRST_NAMES)\n      else raise ArgumentError, 'Invalid gender, must be one of :any, :male, :female'\n      end",
              "children": [
                {
                  "type": "case",
                  "start": {
                    "row": 1,
                    "column": 6
                  },
                  "end": {
                    "row": 1,
                    "column": 10
                  },
                  "text": "case"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 1,
                    "column": 11
                  },
                  "end": {
                    "row": 1,
                    "column": 17
                  },
                  "text": "gender"
                },
                {
                  "type": "when",
                  "start": {
                    "row": 2,
                    "column": 6
                  },
                  "end": {
                    "row": 2,
                    "column": 66
                  },
                  "text": "when :any then rand(0..1) == 0 ? name(:male) : name(:female)",
                  "children": [
                    {
                      "type": "when",
                      "start": {
                        "row": 2,
                        "column": 6
                      },
                      "end": {
                        "row": 2,
                        "column": 10
                      },
                      "text": "when"
                    },
                    {
                      "type": "pattern",
                      "start": {
                        "row": 2,
                        "column": 11
                      },
                      "end": {
                        "row": 2,
                        "column": 15
                      },
                      "text": ":any",
                      "children": [
                        {
                          "type": "simple_symbol",
                          "start": {
                            "row": 2,
                            "column": 11
                          },
                          "end": {
                            "row": 2,
                            "column": 15
                          },
                          "text": ":any"
                        }
                      ]
                    },
                    {
                      "type": "then",
                      "start": {
                        "row": 2,
                        "column": 16
                      },
                      "end": {
                        "row": 2,
                        "column": 66
                      },
                      "text": "then rand(0..1) == 0 ? name(:male) : name(:female)",
                      "children": [
                        {
                          "type": "then",
                          "start": {
                            "row": 2,
                            "column": 16
                          },
                          "end": {
                            "row": 2,
                            "column": 20
                          },
                          "text": "then"
                        },
                        {
                          "type": "conditional",
                          "start": {
                            "row": 2,
                            "column": 21
                          },
                          "end": {
                            "row": 2,
                            "column": 66
                          },
                          "text": "rand(0..1) == 0 ? name(:male) : name(:female)",
                          "children": [
                            {
                              "type": "binary",
                              "start": {
                                "row": 2,
                                "column": 21
                              },
                              "end": {
                                "row": 2,
                                "column": 36
                              },
                              "text": "rand(0..1) == 0",
                              "children": [
                                {
                                  "type": "call",
                                  "start": {
                                    "row": 2,
                                    "column": 21
                                  },
                                  "end": {
                                    "row": 2,
                                    "column": 31
                                  },
                                  "text": "rand(0..1)",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 2,
                                        "column": 21
                                      },
                                      "end": {
                                        "row": 2,
                                        "column": 25
                                      },
                                      "text": "rand"
                                    },
                                    {
                                      "type": "argument_list",
                                      "start": {
                                        "row": 2,
                                        "column": 25
                                      },
                                      "end": {
                                        "row": 2,
                                        "column": 31
                                      },
                                      "text": "(0..1)",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 2,
                                            "column": 25
                                          },
                                          "end": {
                                            "row": 2,
                                            "column": 26
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "range",
                                          "start": {
                                            "row": 2,
                                            "column": 26
                                          },
                                          "end": {
                                            "row": 2,
                                            "column": 30
                                          },
                                          "text": "0..1",
                                          "children": [
                                            {
                                              "type": "integer",
                                              "start": {
                                                "row": 2,
                                                "column": 26
                                              },
                                              "end": {
                                                "row": 2,
                                                "column": 27
                                              },
                                              "text": "0"
                                            },
                                            {
                                              "type": "..",
                                              "start": {
                                                "row": 2,
                                                "column": 27
                                              },
                                              "end": {
                                                "row": 2,
                                                "column": 29
                                              },
                                              "text": ".."
                                            },
                                            {
                                              "type": "integer",
                                              "start": {
                                                "row": 2,
                                                "column": 29
                                              },
                                              "end": {
                                                "row": 2,
                                                "column": 30
                                              },
                                              "text": "1"
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 2,
                                            "column": 30
                                          },
                                          "end": {
                                            "row": 2,
                                            "column": 31
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "==",
                                  "start": {
                                    "row": 2,
                                    "column": 32
                                  },
                                  "end": {
                                    "row": 2,
                                    "column": 34
                                  },
                                  "text": "=="
                                },
                                {
                                  "type": "integer",
                                  "start": {
                                    "row": 2,
                                    "column": 35
                                  },
                                  "end": {
                                    "row": 2,
                                    "column": 36
                                  },
                                  "text": "0"
                                }
                              ]
                            },
                            {
                              "type": "?",
                              "start": {
                                "row": 2,
                                "column": 37
                              },
                              "end": {
                                "row": 2,
                                "column": 38
                              },
                              "text": "?"
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 2,
                                "column": 39
                              },
                              "end": {
                                "row": 2,
                                "column": 50
                              },
                              "text": "name(:male)",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 2,
                                    "column": 39
                                  },
                                  "end": {
                                    "row": 2,
                                    "column": 43
                                  },
                                  "text": "name"
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 2,
                                    "column": 43
                                  },
                                  "end": {
                                    "row": 2,
                                    "column": 50
                                  },
                                  "text": "(:male)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 2,
                                        "column": 43
                                      },
                                      "end": {
                                        "row": 2,
                                        "column": 44
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "simple_symbol",
                                      "start": {
                                        "row": 2,
                                        "column": 44
                                      },
                                      "end": {
                                        "row": 2,
                                        "column": 49
                                      },
                                      "text": ":male"
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 2,
                                        "column": 49
                                      },
                                      "end": {
                                        "row": 2,
                                        "column": 50
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ":",
                              "start": {
                                "row": 2,
                                "column": 51
                              },
                              "end": {
                                "row": 2,
                                "column": 52
                              },
                              "text": ":"
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 2,
                                "column": 53
                              },
                              "end": {
                                "row": 2,
                                "column": 66
                              },
                              "text": "name(:female)",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 2,
                                    "column": 53
                                  },
                                  "end": {
                                    "row": 2,
                                    "column": 57
                                  },
                                  "text": "name"
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 2,
                                    "column": 57
                                  },
                                  "end": {
                                    "row": 2,
                                    "column": 66
                                  },
                                  "text": "(:female)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 2,
                                        "column": 57
                                      },
                                      "end": {
                                        "row": 2,
                                        "column": 58
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "simple_symbol",
                                      "start": {
                                        "row": 2,
                                        "column": 58
                                      },
                                      "end": {
                                        "row": 2,
                                        "column": 65
                                      },
                                      "text": ":female"
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 2,
                                        "column": 65
                                      },
                                      "end": {
                                        "row": 2,
                                        "column": 66
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "when",
                  "start": {
                    "row": 3,
                    "column": 6
                  },
                  "end": {
                    "row": 3,
                    "column": 52
                  },
                  "text": "when :male then fetch_sample(MALE_FIRST_NAMES)",
                  "children": [
                    {
                      "type": "when",
                      "start": {
                        "row": 3,
                        "column": 6
                      },
                      "end": {
                        "row": 3,
                        "column": 10
                      },
                      "text": "when"
                    },
                    {
                      "type": "pattern",
                      "start": {
                        "row": 3,
                        "column": 11
                      },
                      "end": {
                        "row": 3,
                        "column": 16
                      },
                      "text": ":male",
                      "children": [
                        {
                          "type": "simple_symbol",
                          "start": {
                            "row": 3,
                            "column": 11
                          },
                          "end": {
                            "row": 3,
                            "column": 16
                          },
                          "text": ":male"
                        }
                      ]
                    },
                    {
                      "type": "then",
                      "start": {
                        "row": 3,
                        "column": 17
                      },
                      "end": {
                        "row": 3,
                        "column": 52
                      },
                      "text": "then fetch_sample(MALE_FIRST_NAMES)",
                      "children": [
                        {
                          "type": "then",
                          "start": {
                            "row": 3,
                            "column": 17
                          },
                          "end": {
                            "row": 3,
                            "column": 21
                          },
                          "text": "then"
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 3,
                            "column": 22
                          },
                          "end": {
                            "row": 3,
                            "column": 52
                          },
                          "text": "fetch_sample(MALE_FIRST_NAMES)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 3,
                                "column": 22
                              },
                              "end": {
                                "row": 3,
                                "column": 34
                              },
                              "text": "fetch_sample"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 3,
                                "column": 34
                              },
                              "end": {
                                "row": 3,
                                "column": 52
                              },
                              "text": "(MALE_FIRST_NAMES)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 3,
                                    "column": 34
                                  },
                                  "end": {
                                    "row": 3,
                                    "column": 35
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "constant",
                                  "start": {
                                    "row": 3,
                                    "column": 35
                                  },
                                  "end": {
                                    "row": 3,
                                    "column": 51
                                  },
                                  "text": "MALE_FIRST_NAMES"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 3,
                                    "column": 51
                                  },
                                  "end": {
                                    "row": 3,
                                    "column": 52
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "when",
                  "start": {
                    "row": 4,
                    "column": 6
                  },
                  "end": {
                    "row": 4,
                    "column": 56
                  },
                  "text": "when :female then fetch_sample(FEMALE_FIRST_NAMES)",
                  "children": [
                    {
                      "type": "when",
                      "start": {
                        "row": 4,
                        "column": 6
                      },
                      "end": {
                        "row": 4,
                        "column": 10
                      },
                      "text": "when"
                    },
                    {
                      "type": "pattern",
                      "start": {
                        "row": 4,
                        "column": 11
                      },
                      "end": {
                        "row": 4,
                        "column": 18
                      },
                      "text": ":female",
                      "children": [
                        {
                          "type": "simple_symbol",
                          "start": {
                            "row": 4,
                            "column": 11
                          },
                          "end": {
                            "row": 4,
                            "column": 18
                          },
                          "text": ":female"
                        }
                      ]
                    },
                    {
                      "type": "then",
                      "start": {
                        "row": 4,
                        "column": 19
                      },
                      "end": {
                        "row": 4,
                        "column": 56
                      },
                      "text": "then fetch_sample(FEMALE_FIRST_NAMES)",
                      "children": [
                        {
                          "type": "then",
                          "start": {
                            "row": 4,
                            "column": 19
                          },
                          "end": {
                            "row": 4,
                            "column": 23
                          },
                          "text": "then"
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 4,
                            "column": 24
                          },
                          "end": {
                            "row": 4,
                            "column": 56
                          },
                          "text": "fetch_sample(FEMALE_FIRST_NAMES)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 4,
                                "column": 24
                              },
                              "end": {
                                "row": 4,
                                "column": 36
                              },
                              "text": "fetch_sample"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 4,
                                "column": 36
                              },
                              "end": {
                                "row": 4,
                                "column": 56
                              },
                              "text": "(FEMALE_FIRST_NAMES)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 4,
                                    "column": 36
                                  },
                                  "end": {
                                    "row": 4,
                                    "column": 37
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "constant",
                                  "start": {
                                    "row": 4,
                                    "column": 37
                                  },
                                  "end": {
                                    "row": 4,
                                    "column": 55
                                  },
                                  "text": "FEMALE_FIRST_NAMES"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 4,
                                    "column": 55
                                  },
                                  "end": {
                                    "row": 4,
                                    "column": 56
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "else",
                  "start": {
                    "row": 5,
                    "column": 6
                  },
                  "end": {
                    "row": 5,
                    "column": 85
                  },
                  "text": "else raise ArgumentError, 'Invalid gender, must be one of :any, :male, :female'",
                  "children": [
                    {
                      "type": "else",
                      "start": {
                        "row": 5,
                        "column": 6
                      },
                      "end": {
                        "row": 5,
                        "column": 10
                      },
                      "text": "else"
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 5,
                        "column": 11
                      },
                      "end": {
                        "row": 5,
                        "column": 85
                      },
                      "text": "raise ArgumentError, 'Invalid gender, must be one of :any, :male, :female'",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 5,
                            "column": 11
                          },
                          "end": {
                            "row": 5,
                            "column": 16
                          },
                          "text": "raise"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 5,
                            "column": 17
                          },
                          "end": {
                            "row": 5,
                            "column": 85
                          },
                          "text": "ArgumentError, 'Invalid gender, must be one of :any, :male, :female'",
                          "children": [
                            {
                              "type": "constant",
                              "start": {
                                "row": 5,
                                "column": 17
                              },
                              "end": {
                                "row": 5,
                                "column": 30
                              },
                              "text": "ArgumentError"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 5,
                                "column": 30
                              },
                              "end": {
                                "row": 5,
                                "column": 31
                              },
                              "text": ","
                            },
                            {
                              "type": "string",
                              "start": {
                                "row": 5,
                                "column": 32
                              },
                              "end": {
                                "row": 5,
                                "column": 85
                              },
                              "text": "'Invalid gender, must be one of :any, :male, :female'",
                              "children": [
                                {
                                  "type": "\"",
                                  "start": {
                                    "row": 5,
                                    "column": 32
                                  },
                                  "end": {
                                    "row": 5,
                                    "column": 33
                                  },
                                  "text": "'"
                                },
                                {
                                  "type": "string_content",
                                  "start": {
                                    "row": 5,
                                    "column": 33
                                  },
                                  "end": {
                                    "row": 5,
                                    "column": 84
                                  },
                                  "text": "Invalid gender, must be one of :any, :male, :female"
                                },
                                {
                                  "type": "\"",
                                  "start": {
                                    "row": 5,
                                    "column": 84
                                  },
                                  "end": {
                                    "row": 5,
                                    "column": 85
                                  },
                                  "text": "'"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "end",
                  "start": {
                    "row": 6,
                    "column": 6
                  },
                  "end": {
                    "row": 6,
                    "column": 9
                  },
                  "text": "end"
                }
              ]
            }
          ]
        },
        {
          "type": "end",
          "start": {
            "row": 7,
            "column": 4
          },
          "end": {
            "row": 7,
            "column": 7
          },
          "text": "end"
        }
      ]
    }
  ]
}