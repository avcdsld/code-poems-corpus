{
  "type": "program",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 99,
    "column": 7
  },
  "text": "def interpret_command_and_data(message, file=nil)\n      info = Hash.new\n      msg = Stream.new(message, @net_endian)\n      # Length (of remaining PDV data) (4 bytes)\n      info[:presentation_data_value_length] = msg.decode(4, \"UL\")\n      # Calculate the last index position of this message element:\n      last_index = info[:presentation_data_value_length] + msg.index\n      # Presentation context ID (1 byte)\n      info[:presentation_context_id] = msg.decode(1, \"BY\")\n      @presentation_context_id = info[:presentation_context_id]\n      # Flags (1 byte)\n      info[:presentation_context_flag] = msg.decode(1, \"HEX\") # \"03\" for command (last fragment), \"02\" for data\n      # Apply the proper transfer syntax for this presentation context:\n      set_transfer_syntax(@presentation_contexts[info[:presentation_context_id]])\n      # \"Data endian\" encoding from now on:\n      msg.endian = @data_endian\n      # We will put the results in a hash:\n      results = Hash.new\n      if info[:presentation_context_flag] == COMMAND_LAST_FRAGMENT\n        # COMMAND, LAST FRAGMENT:\n        while msg.index < last_index do\n          # Tag (4 bytes)\n          tag = msg.decode_tag\n          # Length (2 bytes)\n          length = msg.decode(2, \"US\")\n          if length > msg.rest_length\n            logger.error(\"Specified length of command element value exceeds remaining length of the received message! Something is wrong.\")\n          end\n          # Reserved (2 bytes)\n          msg.skip(2)\n          # VR (from library - not the stream):\n          vr = LIBRARY.element(tag).vr\n          # Value (variable length)\n          value = msg.decode(length, vr)\n          # Put tag and value in a hash:\n          results[tag] = value\n        end\n        # The results hash is put in an array along with (possibly) other results:\n        info[:results] = results\n        # Store the results in an instance variable (to be used later when sending a receipt for received data):\n        @command_request = results\n        # Check if the command fragment indicates that this was the last of the response fragments for this query:\n        status = results[\"0000,0900\"]\n        if status\n          # Note: This method will also stop the packet receiver if indicated by the status mesasge.\n          process_status(status)\n        end\n        # Special case: Handle a possible C-ECHO-RQ:\n        if info[:results][\"0000,0100\"] == C_ECHO_RQ\n          logger.info(\"Received an Echo request. Returning an Echo response.\")\n          handle_response\n        end\n      elsif info[:presentation_context_flag] == DATA_MORE_FRAGMENTS or info[:presentation_context_flag] == DATA_LAST_FRAGMENT\n        # DATA FRAGMENT:\n        # If this is a file transmission, we will delay the decoding for later:\n        if file\n          # Just store the binary string:\n          info[:bin] = msg.rest_string\n          # If this was the last data fragment of a C-STORE, we need to send a receipt:\n          # (However, for, say a C-FIND-RSP, which indicates the end of the query results, this method shall not be called) (Command Field (0000,0100) holds information on this)\n          handle_response if info[:presentation_context_flag] == DATA_LAST_FRAGMENT\n        else\n          # Decode data elements:\n          while msg.index < last_index do\n            # Tag (4 bytes)\n            tag = msg.decode_tag\n            if @explicit\n              # Type (VR) (2 bytes):\n              type = msg.decode(2, \"STR\")\n              # Length (2 bytes)\n              length = msg.decode(2, \"US\")\n            else\n              # Implicit:\n              type = nil # (needs to be defined as nil here or it will take the value from the previous step in the loop)\n              # Length (4 bytes)\n              length = msg.decode(4, \"UL\")\n            end\n            if length > msg.rest_length\n              logger.error(\"The specified length of the data element value exceeds the remaining length of the received message!\")\n            end\n            # Fetch type (if not defined already) for this data element:\n            type = LIBRARY.element(tag).vr unless type\n            # Value (variable length)\n            value = msg.decode(length, type)\n            # Put tag and value in a hash:\n            results[tag] = value\n          end\n          # The results hash is put in an array along with (possibly) other results:\n          info[:results] = results\n        end\n      else\n        # Unknown.\n        logger.error(\"Unknown presentation context flag received in the query/command response. (#{info[:presentation_context_flag]})\")\n        stop_receiving\n      end\n      # If only parts of the string was read, return the rest:\n      info[:rest_string] = msg.rest_string if last_index < msg.length\n      info[:valid] = true\n      return info\n    end",
  "children": [
    {
      "type": "method",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 99,
        "column": 7
      },
      "text": "def interpret_command_and_data(message, file=nil)\n      info = Hash.new\n      msg = Stream.new(message, @net_endian)\n      # Length (of remaining PDV data) (4 bytes)\n      info[:presentation_data_value_length] = msg.decode(4, \"UL\")\n      # Calculate the last index position of this message element:\n      last_index = info[:presentation_data_value_length] + msg.index\n      # Presentation context ID (1 byte)\n      info[:presentation_context_id] = msg.decode(1, \"BY\")\n      @presentation_context_id = info[:presentation_context_id]\n      # Flags (1 byte)\n      info[:presentation_context_flag] = msg.decode(1, \"HEX\") # \"03\" for command (last fragment), \"02\" for data\n      # Apply the proper transfer syntax for this presentation context:\n      set_transfer_syntax(@presentation_contexts[info[:presentation_context_id]])\n      # \"Data endian\" encoding from now on:\n      msg.endian = @data_endian\n      # We will put the results in a hash:\n      results = Hash.new\n      if info[:presentation_context_flag] == COMMAND_LAST_FRAGMENT\n        # COMMAND, LAST FRAGMENT:\n        while msg.index < last_index do\n          # Tag (4 bytes)\n          tag = msg.decode_tag\n          # Length (2 bytes)\n          length = msg.decode(2, \"US\")\n          if length > msg.rest_length\n            logger.error(\"Specified length of command element value exceeds remaining length of the received message! Something is wrong.\")\n          end\n          # Reserved (2 bytes)\n          msg.skip(2)\n          # VR (from library - not the stream):\n          vr = LIBRARY.element(tag).vr\n          # Value (variable length)\n          value = msg.decode(length, vr)\n          # Put tag and value in a hash:\n          results[tag] = value\n        end\n        # The results hash is put in an array along with (possibly) other results:\n        info[:results] = results\n        # Store the results in an instance variable (to be used later when sending a receipt for received data):\n        @command_request = results\n        # Check if the command fragment indicates that this was the last of the response fragments for this query:\n        status = results[\"0000,0900\"]\n        if status\n          # Note: This method will also stop the packet receiver if indicated by the status mesasge.\n          process_status(status)\n        end\n        # Special case: Handle a possible C-ECHO-RQ:\n        if info[:results][\"0000,0100\"] == C_ECHO_RQ\n          logger.info(\"Received an Echo request. Returning an Echo response.\")\n          handle_response\n        end\n      elsif info[:presentation_context_flag] == DATA_MORE_FRAGMENTS or info[:presentation_context_flag] == DATA_LAST_FRAGMENT\n        # DATA FRAGMENT:\n        # If this is a file transmission, we will delay the decoding for later:\n        if file\n          # Just store the binary string:\n          info[:bin] = msg.rest_string\n          # If this was the last data fragment of a C-STORE, we need to send a receipt:\n          # (However, for, say a C-FIND-RSP, which indicates the end of the query results, this method shall not be called) (Command Field (0000,0100) holds information on this)\n          handle_response if info[:presentation_context_flag] == DATA_LAST_FRAGMENT\n        else\n          # Decode data elements:\n          while msg.index < last_index do\n            # Tag (4 bytes)\n            tag = msg.decode_tag\n            if @explicit\n              # Type (VR) (2 bytes):\n              type = msg.decode(2, \"STR\")\n              # Length (2 bytes)\n              length = msg.decode(2, \"US\")\n            else\n              # Implicit:\n              type = nil # (needs to be defined as nil here or it will take the value from the previous step in the loop)\n              # Length (4 bytes)\n              length = msg.decode(4, \"UL\")\n            end\n            if length > msg.rest_length\n              logger.error(\"The specified length of the data element value exceeds the remaining length of the received message!\")\n            end\n            # Fetch type (if not defined already) for this data element:\n            type = LIBRARY.element(tag).vr unless type\n            # Value (variable length)\n            value = msg.decode(length, type)\n            # Put tag and value in a hash:\n            results[tag] = value\n          end\n          # The results hash is put in an array along with (possibly) other results:\n          info[:results] = results\n        end\n      else\n        # Unknown.\n        logger.error(\"Unknown presentation context flag received in the query/command response. (#{info[:presentation_context_flag]})\")\n        stop_receiving\n      end\n      # If only parts of the string was read, return the rest:\n      info[:rest_string] = msg.rest_string if last_index < msg.length\n      info[:valid] = true\n      return info\n    end",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 30
          },
          "text": "interpret_command_and_data"
        },
        {
          "type": "method_parameters",
          "start": {
            "row": 0,
            "column": 30
          },
          "end": {
            "row": 0,
            "column": 49
          },
          "text": "(message, file=nil)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 30
              },
              "end": {
                "row": 0,
                "column": 31
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 31
              },
              "end": {
                "row": 0,
                "column": 38
              },
              "text": "message"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 38
              },
              "end": {
                "row": 0,
                "column": 39
              },
              "text": ","
            },
            {
              "type": "optional_parameter",
              "start": {
                "row": 0,
                "column": 40
              },
              "end": {
                "row": 0,
                "column": 48
              },
              "text": "file=nil",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 40
                  },
                  "end": {
                    "row": 0,
                    "column": 44
                  },
                  "text": "file"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 0,
                    "column": 44
                  },
                  "end": {
                    "row": 0,
                    "column": 45
                  },
                  "text": "="
                },
                {
                  "type": "nil",
                  "start": {
                    "row": 0,
                    "column": 45
                  },
                  "end": {
                    "row": 0,
                    "column": 48
                  },
                  "text": "nil",
                  "children": [
                    {
                      "type": "nil",
                      "start": {
                        "row": 0,
                        "column": 45
                      },
                      "end": {
                        "row": 0,
                        "column": 48
                      },
                      "text": "nil"
                    }
                  ]
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 48
              },
              "end": {
                "row": 0,
                "column": 49
              },
              "text": ")"
            }
          ]
        },
        {
          "type": "body_statement",
          "start": {
            "row": 1,
            "column": 6
          },
          "end": {
            "row": 98,
            "column": 17
          },
          "text": "info = Hash.new\n      msg = Stream.new(message, @net_endian)\n      # Length (of remaining PDV data) (4 bytes)\n      info[:presentation_data_value_length] = msg.decode(4, \"UL\")\n      # Calculate the last index position of this message element:\n      last_index = info[:presentation_data_value_length] + msg.index\n      # Presentation context ID (1 byte)\n      info[:presentation_context_id] = msg.decode(1, \"BY\")\n      @presentation_context_id = info[:presentation_context_id]\n      # Flags (1 byte)\n      info[:presentation_context_flag] = msg.decode(1, \"HEX\") # \"03\" for command (last fragment), \"02\" for data\n      # Apply the proper transfer syntax for this presentation context:\n      set_transfer_syntax(@presentation_contexts[info[:presentation_context_id]])\n      # \"Data endian\" encoding from now on:\n      msg.endian = @data_endian\n      # We will put the results in a hash:\n      results = Hash.new\n      if info[:presentation_context_flag] == COMMAND_LAST_FRAGMENT\n        # COMMAND, LAST FRAGMENT:\n        while msg.index < last_index do\n          # Tag (4 bytes)\n          tag = msg.decode_tag\n          # Length (2 bytes)\n          length = msg.decode(2, \"US\")\n          if length > msg.rest_length\n            logger.error(\"Specified length of command element value exceeds remaining length of the received message! Something is wrong.\")\n          end\n          # Reserved (2 bytes)\n          msg.skip(2)\n          # VR (from library - not the stream):\n          vr = LIBRARY.element(tag).vr\n          # Value (variable length)\n          value = msg.decode(length, vr)\n          # Put tag and value in a hash:\n          results[tag] = value\n        end\n        # The results hash is put in an array along with (possibly) other results:\n        info[:results] = results\n        # Store the results in an instance variable (to be used later when sending a receipt for received data):\n        @command_request = results\n        # Check if the command fragment indicates that this was the last of the response fragments for this query:\n        status = results[\"0000,0900\"]\n        if status\n          # Note: This method will also stop the packet receiver if indicated by the status mesasge.\n          process_status(status)\n        end\n        # Special case: Handle a possible C-ECHO-RQ:\n        if info[:results][\"0000,0100\"] == C_ECHO_RQ\n          logger.info(\"Received an Echo request. Returning an Echo response.\")\n          handle_response\n        end\n      elsif info[:presentation_context_flag] == DATA_MORE_FRAGMENTS or info[:presentation_context_flag] == DATA_LAST_FRAGMENT\n        # DATA FRAGMENT:\n        # If this is a file transmission, we will delay the decoding for later:\n        if file\n          # Just store the binary string:\n          info[:bin] = msg.rest_string\n          # If this was the last data fragment of a C-STORE, we need to send a receipt:\n          # (However, for, say a C-FIND-RSP, which indicates the end of the query results, this method shall not be called) (Command Field (0000,0100) holds information on this)\n          handle_response if info[:presentation_context_flag] == DATA_LAST_FRAGMENT\n        else\n          # Decode data elements:\n          while msg.index < last_index do\n            # Tag (4 bytes)\n            tag = msg.decode_tag\n            if @explicit\n              # Type (VR) (2 bytes):\n              type = msg.decode(2, \"STR\")\n              # Length (2 bytes)\n              length = msg.decode(2, \"US\")\n            else\n              # Implicit:\n              type = nil # (needs to be defined as nil here or it will take the value from the previous step in the loop)\n              # Length (4 bytes)\n              length = msg.decode(4, \"UL\")\n            end\n            if length > msg.rest_length\n              logger.error(\"The specified length of the data element value exceeds the remaining length of the received message!\")\n            end\n            # Fetch type (if not defined already) for this data element:\n            type = LIBRARY.element(tag).vr unless type\n            # Value (variable length)\n            value = msg.decode(length, type)\n            # Put tag and value in a hash:\n            results[tag] = value\n          end\n          # The results hash is put in an array along with (possibly) other results:\n          info[:results] = results\n        end\n      else\n        # Unknown.\n        logger.error(\"Unknown presentation context flag received in the query/command response. (#{info[:presentation_context_flag]})\")\n        stop_receiving\n      end\n      # If only parts of the string was read, return the rest:\n      info[:rest_string] = msg.rest_string if last_index < msg.length\n      info[:valid] = true\n      return info",
          "children": [
            {
              "type": "assignment",
              "start": {
                "row": 1,
                "column": 6
              },
              "end": {
                "row": 1,
                "column": 21
              },
              "text": "info = Hash.new",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 1,
                    "column": 6
                  },
                  "end": {
                    "row": 1,
                    "column": 10
                  },
                  "text": "info"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 1,
                    "column": 11
                  },
                  "end": {
                    "row": 1,
                    "column": 12
                  },
                  "text": "="
                },
                {
                  "type": "call",
                  "start": {
                    "row": 1,
                    "column": 13
                  },
                  "end": {
                    "row": 1,
                    "column": 21
                  },
                  "text": "Hash.new",
                  "children": [
                    {
                      "type": "constant",
                      "start": {
                        "row": 1,
                        "column": 13
                      },
                      "end": {
                        "row": 1,
                        "column": 17
                      },
                      "text": "Hash"
                    },
                    {
                      "type": ".",
                      "start": {
                        "row": 1,
                        "column": 17
                      },
                      "end": {
                        "row": 1,
                        "column": 18
                      },
                      "text": "."
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 1,
                        "column": 18
                      },
                      "end": {
                        "row": 1,
                        "column": 21
                      },
                      "text": "new"
                    }
                  ]
                }
              ]
            },
            {
              "type": "assignment",
              "start": {
                "row": 2,
                "column": 6
              },
              "end": {
                "row": 2,
                "column": 44
              },
              "text": "msg = Stream.new(message, @net_endian)",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 2,
                    "column": 6
                  },
                  "end": {
                    "row": 2,
                    "column": 9
                  },
                  "text": "msg"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 2,
                    "column": 10
                  },
                  "end": {
                    "row": 2,
                    "column": 11
                  },
                  "text": "="
                },
                {
                  "type": "call",
                  "start": {
                    "row": 2,
                    "column": 12
                  },
                  "end": {
                    "row": 2,
                    "column": 44
                  },
                  "text": "Stream.new(message, @net_endian)",
                  "children": [
                    {
                      "type": "constant",
                      "start": {
                        "row": 2,
                        "column": 12
                      },
                      "end": {
                        "row": 2,
                        "column": 18
                      },
                      "text": "Stream"
                    },
                    {
                      "type": ".",
                      "start": {
                        "row": 2,
                        "column": 18
                      },
                      "end": {
                        "row": 2,
                        "column": 19
                      },
                      "text": "."
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 2,
                        "column": 19
                      },
                      "end": {
                        "row": 2,
                        "column": 22
                      },
                      "text": "new"
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 2,
                        "column": 22
                      },
                      "end": {
                        "row": 2,
                        "column": 44
                      },
                      "text": "(message, @net_endian)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 2,
                            "column": 22
                          },
                          "end": {
                            "row": 2,
                            "column": 23
                          },
                          "text": "("
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 2,
                            "column": 23
                          },
                          "end": {
                            "row": 2,
                            "column": 30
                          },
                          "text": "message"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 2,
                            "column": 30
                          },
                          "end": {
                            "row": 2,
                            "column": 31
                          },
                          "text": ","
                        },
                        {
                          "type": "instance_variable",
                          "start": {
                            "row": 2,
                            "column": 32
                          },
                          "end": {
                            "row": 2,
                            "column": 43
                          },
                          "text": "@net_endian"
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 2,
                            "column": 43
                          },
                          "end": {
                            "row": 2,
                            "column": 44
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 3,
                "column": 6
              },
              "end": {
                "row": 3,
                "column": 48
              },
              "text": "# Length (of remaining PDV data) (4 bytes)"
            },
            {
              "type": "assignment",
              "start": {
                "row": 4,
                "column": 6
              },
              "end": {
                "row": 4,
                "column": 65
              },
              "text": "info[:presentation_data_value_length] = msg.decode(4, \"UL\")",
              "children": [
                {
                  "type": "element_reference",
                  "start": {
                    "row": 4,
                    "column": 6
                  },
                  "end": {
                    "row": 4,
                    "column": 43
                  },
                  "text": "info[:presentation_data_value_length]",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 4,
                        "column": 6
                      },
                      "end": {
                        "row": 4,
                        "column": 10
                      },
                      "text": "info"
                    },
                    {
                      "type": "[",
                      "start": {
                        "row": 4,
                        "column": 10
                      },
                      "end": {
                        "row": 4,
                        "column": 11
                      },
                      "text": "["
                    },
                    {
                      "type": "simple_symbol",
                      "start": {
                        "row": 4,
                        "column": 11
                      },
                      "end": {
                        "row": 4,
                        "column": 42
                      },
                      "text": ":presentation_data_value_length"
                    },
                    {
                      "type": "]",
                      "start": {
                        "row": 4,
                        "column": 42
                      },
                      "end": {
                        "row": 4,
                        "column": 43
                      },
                      "text": "]"
                    }
                  ]
                },
                {
                  "type": "=",
                  "start": {
                    "row": 4,
                    "column": 44
                  },
                  "end": {
                    "row": 4,
                    "column": 45
                  },
                  "text": "="
                },
                {
                  "type": "call",
                  "start": {
                    "row": 4,
                    "column": 46
                  },
                  "end": {
                    "row": 4,
                    "column": 65
                  },
                  "text": "msg.decode(4, \"UL\")",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 4,
                        "column": 46
                      },
                      "end": {
                        "row": 4,
                        "column": 49
                      },
                      "text": "msg"
                    },
                    {
                      "type": ".",
                      "start": {
                        "row": 4,
                        "column": 49
                      },
                      "end": {
                        "row": 4,
                        "column": 50
                      },
                      "text": "."
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 4,
                        "column": 50
                      },
                      "end": {
                        "row": 4,
                        "column": 56
                      },
                      "text": "decode"
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 4,
                        "column": 56
                      },
                      "end": {
                        "row": 4,
                        "column": 65
                      },
                      "text": "(4, \"UL\")",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 4,
                            "column": 56
                          },
                          "end": {
                            "row": 4,
                            "column": 57
                          },
                          "text": "("
                        },
                        {
                          "type": "integer",
                          "start": {
                            "row": 4,
                            "column": 57
                          },
                          "end": {
                            "row": 4,
                            "column": 58
                          },
                          "text": "4"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 4,
                            "column": 58
                          },
                          "end": {
                            "row": 4,
                            "column": 59
                          },
                          "text": ","
                        },
                        {
                          "type": "string",
                          "start": {
                            "row": 4,
                            "column": 60
                          },
                          "end": {
                            "row": 4,
                            "column": 64
                          },
                          "text": "\"UL\"",
                          "children": [
                            {
                              "type": "\"",
                              "start": {
                                "row": 4,
                                "column": 60
                              },
                              "end": {
                                "row": 4,
                                "column": 61
                              },
                              "text": "\""
                            },
                            {
                              "type": "string_content",
                              "start": {
                                "row": 4,
                                "column": 61
                              },
                              "end": {
                                "row": 4,
                                "column": 63
                              },
                              "text": "UL"
                            },
                            {
                              "type": "\"",
                              "start": {
                                "row": 4,
                                "column": 63
                              },
                              "end": {
                                "row": 4,
                                "column": 64
                              },
                              "text": "\""
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 4,
                            "column": 64
                          },
                          "end": {
                            "row": 4,
                            "column": 65
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 5,
                "column": 6
              },
              "end": {
                "row": 5,
                "column": 66
              },
              "text": "# Calculate the last index position of this message element:"
            },
            {
              "type": "assignment",
              "start": {
                "row": 6,
                "column": 6
              },
              "end": {
                "row": 6,
                "column": 68
              },
              "text": "last_index = info[:presentation_data_value_length] + msg.index",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 6,
                    "column": 6
                  },
                  "end": {
                    "row": 6,
                    "column": 16
                  },
                  "text": "last_index"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 6,
                    "column": 17
                  },
                  "end": {
                    "row": 6,
                    "column": 18
                  },
                  "text": "="
                },
                {
                  "type": "binary",
                  "start": {
                    "row": 6,
                    "column": 19
                  },
                  "end": {
                    "row": 6,
                    "column": 68
                  },
                  "text": "info[:presentation_data_value_length] + msg.index",
                  "children": [
                    {
                      "type": "element_reference",
                      "start": {
                        "row": 6,
                        "column": 19
                      },
                      "end": {
                        "row": 6,
                        "column": 56
                      },
                      "text": "info[:presentation_data_value_length]",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 6,
                            "column": 19
                          },
                          "end": {
                            "row": 6,
                            "column": 23
                          },
                          "text": "info"
                        },
                        {
                          "type": "[",
                          "start": {
                            "row": 6,
                            "column": 23
                          },
                          "end": {
                            "row": 6,
                            "column": 24
                          },
                          "text": "["
                        },
                        {
                          "type": "simple_symbol",
                          "start": {
                            "row": 6,
                            "column": 24
                          },
                          "end": {
                            "row": 6,
                            "column": 55
                          },
                          "text": ":presentation_data_value_length"
                        },
                        {
                          "type": "]",
                          "start": {
                            "row": 6,
                            "column": 55
                          },
                          "end": {
                            "row": 6,
                            "column": 56
                          },
                          "text": "]"
                        }
                      ]
                    },
                    {
                      "type": "+",
                      "start": {
                        "row": 6,
                        "column": 57
                      },
                      "end": {
                        "row": 6,
                        "column": 58
                      },
                      "text": "+"
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 6,
                        "column": 59
                      },
                      "end": {
                        "row": 6,
                        "column": 68
                      },
                      "text": "msg.index",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 6,
                            "column": 59
                          },
                          "end": {
                            "row": 6,
                            "column": 62
                          },
                          "text": "msg"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 6,
                            "column": 62
                          },
                          "end": {
                            "row": 6,
                            "column": 63
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 6,
                            "column": 63
                          },
                          "end": {
                            "row": 6,
                            "column": 68
                          },
                          "text": "index"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 7,
                "column": 6
              },
              "end": {
                "row": 7,
                "column": 40
              },
              "text": "# Presentation context ID (1 byte)"
            },
            {
              "type": "assignment",
              "start": {
                "row": 8,
                "column": 6
              },
              "end": {
                "row": 8,
                "column": 58
              },
              "text": "info[:presentation_context_id] = msg.decode(1, \"BY\")",
              "children": [
                {
                  "type": "element_reference",
                  "start": {
                    "row": 8,
                    "column": 6
                  },
                  "end": {
                    "row": 8,
                    "column": 36
                  },
                  "text": "info[:presentation_context_id]",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 8,
                        "column": 6
                      },
                      "end": {
                        "row": 8,
                        "column": 10
                      },
                      "text": "info"
                    },
                    {
                      "type": "[",
                      "start": {
                        "row": 8,
                        "column": 10
                      },
                      "end": {
                        "row": 8,
                        "column": 11
                      },
                      "text": "["
                    },
                    {
                      "type": "simple_symbol",
                      "start": {
                        "row": 8,
                        "column": 11
                      },
                      "end": {
                        "row": 8,
                        "column": 35
                      },
                      "text": ":presentation_context_id"
                    },
                    {
                      "type": "]",
                      "start": {
                        "row": 8,
                        "column": 35
                      },
                      "end": {
                        "row": 8,
                        "column": 36
                      },
                      "text": "]"
                    }
                  ]
                },
                {
                  "type": "=",
                  "start": {
                    "row": 8,
                    "column": 37
                  },
                  "end": {
                    "row": 8,
                    "column": 38
                  },
                  "text": "="
                },
                {
                  "type": "call",
                  "start": {
                    "row": 8,
                    "column": 39
                  },
                  "end": {
                    "row": 8,
                    "column": 58
                  },
                  "text": "msg.decode(1, \"BY\")",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 8,
                        "column": 39
                      },
                      "end": {
                        "row": 8,
                        "column": 42
                      },
                      "text": "msg"
                    },
                    {
                      "type": ".",
                      "start": {
                        "row": 8,
                        "column": 42
                      },
                      "end": {
                        "row": 8,
                        "column": 43
                      },
                      "text": "."
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 8,
                        "column": 43
                      },
                      "end": {
                        "row": 8,
                        "column": 49
                      },
                      "text": "decode"
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 8,
                        "column": 49
                      },
                      "end": {
                        "row": 8,
                        "column": 58
                      },
                      "text": "(1, \"BY\")",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 8,
                            "column": 49
                          },
                          "end": {
                            "row": 8,
                            "column": 50
                          },
                          "text": "("
                        },
                        {
                          "type": "integer",
                          "start": {
                            "row": 8,
                            "column": 50
                          },
                          "end": {
                            "row": 8,
                            "column": 51
                          },
                          "text": "1"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 8,
                            "column": 51
                          },
                          "end": {
                            "row": 8,
                            "column": 52
                          },
                          "text": ","
                        },
                        {
                          "type": "string",
                          "start": {
                            "row": 8,
                            "column": 53
                          },
                          "end": {
                            "row": 8,
                            "column": 57
                          },
                          "text": "\"BY\"",
                          "children": [
                            {
                              "type": "\"",
                              "start": {
                                "row": 8,
                                "column": 53
                              },
                              "end": {
                                "row": 8,
                                "column": 54
                              },
                              "text": "\""
                            },
                            {
                              "type": "string_content",
                              "start": {
                                "row": 8,
                                "column": 54
                              },
                              "end": {
                                "row": 8,
                                "column": 56
                              },
                              "text": "BY"
                            },
                            {
                              "type": "\"",
                              "start": {
                                "row": 8,
                                "column": 56
                              },
                              "end": {
                                "row": 8,
                                "column": 57
                              },
                              "text": "\""
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 8,
                            "column": 57
                          },
                          "end": {
                            "row": 8,
                            "column": 58
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "assignment",
              "start": {
                "row": 9,
                "column": 6
              },
              "end": {
                "row": 9,
                "column": 63
              },
              "text": "@presentation_context_id = info[:presentation_context_id]",
              "children": [
                {
                  "type": "instance_variable",
                  "start": {
                    "row": 9,
                    "column": 6
                  },
                  "end": {
                    "row": 9,
                    "column": 30
                  },
                  "text": "@presentation_context_id"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 9,
                    "column": 31
                  },
                  "end": {
                    "row": 9,
                    "column": 32
                  },
                  "text": "="
                },
                {
                  "type": "element_reference",
                  "start": {
                    "row": 9,
                    "column": 33
                  },
                  "end": {
                    "row": 9,
                    "column": 63
                  },
                  "text": "info[:presentation_context_id]",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 9,
                        "column": 33
                      },
                      "end": {
                        "row": 9,
                        "column": 37
                      },
                      "text": "info"
                    },
                    {
                      "type": "[",
                      "start": {
                        "row": 9,
                        "column": 37
                      },
                      "end": {
                        "row": 9,
                        "column": 38
                      },
                      "text": "["
                    },
                    {
                      "type": "simple_symbol",
                      "start": {
                        "row": 9,
                        "column": 38
                      },
                      "end": {
                        "row": 9,
                        "column": 62
                      },
                      "text": ":presentation_context_id"
                    },
                    {
                      "type": "]",
                      "start": {
                        "row": 9,
                        "column": 62
                      },
                      "end": {
                        "row": 9,
                        "column": 63
                      },
                      "text": "]"
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 10,
                "column": 6
              },
              "end": {
                "row": 10,
                "column": 22
              },
              "text": "# Flags (1 byte)"
            },
            {
              "type": "assignment",
              "start": {
                "row": 11,
                "column": 6
              },
              "end": {
                "row": 11,
                "column": 61
              },
              "text": "info[:presentation_context_flag] = msg.decode(1, \"HEX\")",
              "children": [
                {
                  "type": "element_reference",
                  "start": {
                    "row": 11,
                    "column": 6
                  },
                  "end": {
                    "row": 11,
                    "column": 38
                  },
                  "text": "info[:presentation_context_flag]",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 11,
                        "column": 6
                      },
                      "end": {
                        "row": 11,
                        "column": 10
                      },
                      "text": "info"
                    },
                    {
                      "type": "[",
                      "start": {
                        "row": 11,
                        "column": 10
                      },
                      "end": {
                        "row": 11,
                        "column": 11
                      },
                      "text": "["
                    },
                    {
                      "type": "simple_symbol",
                      "start": {
                        "row": 11,
                        "column": 11
                      },
                      "end": {
                        "row": 11,
                        "column": 37
                      },
                      "text": ":presentation_context_flag"
                    },
                    {
                      "type": "]",
                      "start": {
                        "row": 11,
                        "column": 37
                      },
                      "end": {
                        "row": 11,
                        "column": 38
                      },
                      "text": "]"
                    }
                  ]
                },
                {
                  "type": "=",
                  "start": {
                    "row": 11,
                    "column": 39
                  },
                  "end": {
                    "row": 11,
                    "column": 40
                  },
                  "text": "="
                },
                {
                  "type": "call",
                  "start": {
                    "row": 11,
                    "column": 41
                  },
                  "end": {
                    "row": 11,
                    "column": 61
                  },
                  "text": "msg.decode(1, \"HEX\")",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 11,
                        "column": 41
                      },
                      "end": {
                        "row": 11,
                        "column": 44
                      },
                      "text": "msg"
                    },
                    {
                      "type": ".",
                      "start": {
                        "row": 11,
                        "column": 44
                      },
                      "end": {
                        "row": 11,
                        "column": 45
                      },
                      "text": "."
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 11,
                        "column": 45
                      },
                      "end": {
                        "row": 11,
                        "column": 51
                      },
                      "text": "decode"
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 11,
                        "column": 51
                      },
                      "end": {
                        "row": 11,
                        "column": 61
                      },
                      "text": "(1, \"HEX\")",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 11,
                            "column": 51
                          },
                          "end": {
                            "row": 11,
                            "column": 52
                          },
                          "text": "("
                        },
                        {
                          "type": "integer",
                          "start": {
                            "row": 11,
                            "column": 52
                          },
                          "end": {
                            "row": 11,
                            "column": 53
                          },
                          "text": "1"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 11,
                            "column": 53
                          },
                          "end": {
                            "row": 11,
                            "column": 54
                          },
                          "text": ","
                        },
                        {
                          "type": "string",
                          "start": {
                            "row": 11,
                            "column": 55
                          },
                          "end": {
                            "row": 11,
                            "column": 60
                          },
                          "text": "\"HEX\"",
                          "children": [
                            {
                              "type": "\"",
                              "start": {
                                "row": 11,
                                "column": 55
                              },
                              "end": {
                                "row": 11,
                                "column": 56
                              },
                              "text": "\""
                            },
                            {
                              "type": "string_content",
                              "start": {
                                "row": 11,
                                "column": 56
                              },
                              "end": {
                                "row": 11,
                                "column": 59
                              },
                              "text": "HEX"
                            },
                            {
                              "type": "\"",
                              "start": {
                                "row": 11,
                                "column": 59
                              },
                              "end": {
                                "row": 11,
                                "column": 60
                              },
                              "text": "\""
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 11,
                            "column": 60
                          },
                          "end": {
                            "row": 11,
                            "column": 61
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 11,
                "column": 62
              },
              "end": {
                "row": 11,
                "column": 111
              },
              "text": "# \"03\" for command (last fragment), \"02\" for data"
            },
            {
              "type": "comment",
              "start": {
                "row": 12,
                "column": 6
              },
              "end": {
                "row": 12,
                "column": 71
              },
              "text": "# Apply the proper transfer syntax for this presentation context:"
            },
            {
              "type": "call",
              "start": {
                "row": 13,
                "column": 6
              },
              "end": {
                "row": 13,
                "column": 81
              },
              "text": "set_transfer_syntax(@presentation_contexts[info[:presentation_context_id]])",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 13,
                    "column": 6
                  },
                  "end": {
                    "row": 13,
                    "column": 25
                  },
                  "text": "set_transfer_syntax"
                },
                {
                  "type": "argument_list",
                  "start": {
                    "row": 13,
                    "column": 25
                  },
                  "end": {
                    "row": 13,
                    "column": 81
                  },
                  "text": "(@presentation_contexts[info[:presentation_context_id]])",
                  "children": [
                    {
                      "type": "(",
                      "start": {
                        "row": 13,
                        "column": 25
                      },
                      "end": {
                        "row": 13,
                        "column": 26
                      },
                      "text": "("
                    },
                    {
                      "type": "element_reference",
                      "start": {
                        "row": 13,
                        "column": 26
                      },
                      "end": {
                        "row": 13,
                        "column": 80
                      },
                      "text": "@presentation_contexts[info[:presentation_context_id]]",
                      "children": [
                        {
                          "type": "instance_variable",
                          "start": {
                            "row": 13,
                            "column": 26
                          },
                          "end": {
                            "row": 13,
                            "column": 48
                          },
                          "text": "@presentation_contexts"
                        },
                        {
                          "type": "[",
                          "start": {
                            "row": 13,
                            "column": 48
                          },
                          "end": {
                            "row": 13,
                            "column": 49
                          },
                          "text": "["
                        },
                        {
                          "type": "element_reference",
                          "start": {
                            "row": 13,
                            "column": 49
                          },
                          "end": {
                            "row": 13,
                            "column": 79
                          },
                          "text": "info[:presentation_context_id]",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 13,
                                "column": 49
                              },
                              "end": {
                                "row": 13,
                                "column": 53
                              },
                              "text": "info"
                            },
                            {
                              "type": "[",
                              "start": {
                                "row": 13,
                                "column": 53
                              },
                              "end": {
                                "row": 13,
                                "column": 54
                              },
                              "text": "["
                            },
                            {
                              "type": "simple_symbol",
                              "start": {
                                "row": 13,
                                "column": 54
                              },
                              "end": {
                                "row": 13,
                                "column": 78
                              },
                              "text": ":presentation_context_id"
                            },
                            {
                              "type": "]",
                              "start": {
                                "row": 13,
                                "column": 78
                              },
                              "end": {
                                "row": 13,
                                "column": 79
                              },
                              "text": "]"
                            }
                          ]
                        },
                        {
                          "type": "]",
                          "start": {
                            "row": 13,
                            "column": 79
                          },
                          "end": {
                            "row": 13,
                            "column": 80
                          },
                          "text": "]"
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start": {
                        "row": 13,
                        "column": 80
                      },
                      "end": {
                        "row": 13,
                        "column": 81
                      },
                      "text": ")"
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 14,
                "column": 6
              },
              "end": {
                "row": 14,
                "column": 43
              },
              "text": "# \"Data endian\" encoding from now on:"
            },
            {
              "type": "assignment",
              "start": {
                "row": 15,
                "column": 6
              },
              "end": {
                "row": 15,
                "column": 31
              },
              "text": "msg.endian = @data_endian",
              "children": [
                {
                  "type": "call",
                  "start": {
                    "row": 15,
                    "column": 6
                  },
                  "end": {
                    "row": 15,
                    "column": 16
                  },
                  "text": "msg.endian",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 15,
                        "column": 6
                      },
                      "end": {
                        "row": 15,
                        "column": 9
                      },
                      "text": "msg"
                    },
                    {
                      "type": ".",
                      "start": {
                        "row": 15,
                        "column": 9
                      },
                      "end": {
                        "row": 15,
                        "column": 10
                      },
                      "text": "."
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 15,
                        "column": 10
                      },
                      "end": {
                        "row": 15,
                        "column": 16
                      },
                      "text": "endian"
                    }
                  ]
                },
                {
                  "type": "=",
                  "start": {
                    "row": 15,
                    "column": 17
                  },
                  "end": {
                    "row": 15,
                    "column": 18
                  },
                  "text": "="
                },
                {
                  "type": "instance_variable",
                  "start": {
                    "row": 15,
                    "column": 19
                  },
                  "end": {
                    "row": 15,
                    "column": 31
                  },
                  "text": "@data_endian"
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 16,
                "column": 6
              },
              "end": {
                "row": 16,
                "column": 42
              },
              "text": "# We will put the results in a hash:"
            },
            {
              "type": "assignment",
              "start": {
                "row": 17,
                "column": 6
              },
              "end": {
                "row": 17,
                "column": 24
              },
              "text": "results = Hash.new",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 17,
                    "column": 6
                  },
                  "end": {
                    "row": 17,
                    "column": 13
                  },
                  "text": "results"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 17,
                    "column": 14
                  },
                  "end": {
                    "row": 17,
                    "column": 15
                  },
                  "text": "="
                },
                {
                  "type": "call",
                  "start": {
                    "row": 17,
                    "column": 16
                  },
                  "end": {
                    "row": 17,
                    "column": 24
                  },
                  "text": "Hash.new",
                  "children": [
                    {
                      "type": "constant",
                      "start": {
                        "row": 17,
                        "column": 16
                      },
                      "end": {
                        "row": 17,
                        "column": 20
                      },
                      "text": "Hash"
                    },
                    {
                      "type": ".",
                      "start": {
                        "row": 17,
                        "column": 20
                      },
                      "end": {
                        "row": 17,
                        "column": 21
                      },
                      "text": "."
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 17,
                        "column": 21
                      },
                      "end": {
                        "row": 17,
                        "column": 24
                      },
                      "text": "new"
                    }
                  ]
                }
              ]
            },
            {
              "type": "if",
              "start": {
                "row": 18,
                "column": 6
              },
              "end": {
                "row": 94,
                "column": 9
              },
              "text": "if info[:presentation_context_flag] == COMMAND_LAST_FRAGMENT\n        # COMMAND, LAST FRAGMENT:\n        while msg.index < last_index do\n          # Tag (4 bytes)\n          tag = msg.decode_tag\n          # Length (2 bytes)\n          length = msg.decode(2, \"US\")\n          if length > msg.rest_length\n            logger.error(\"Specified length of command element value exceeds remaining length of the received message! Something is wrong.\")\n          end\n          # Reserved (2 bytes)\n          msg.skip(2)\n          # VR (from library - not the stream):\n          vr = LIBRARY.element(tag).vr\n          # Value (variable length)\n          value = msg.decode(length, vr)\n          # Put tag and value in a hash:\n          results[tag] = value\n        end\n        # The results hash is put in an array along with (possibly) other results:\n        info[:results] = results\n        # Store the results in an instance variable (to be used later when sending a receipt for received data):\n        @command_request = results\n        # Check if the command fragment indicates that this was the last of the response fragments for this query:\n        status = results[\"0000,0900\"]\n        if status\n          # Note: This method will also stop the packet receiver if indicated by the status mesasge.\n          process_status(status)\n        end\n        # Special case: Handle a possible C-ECHO-RQ:\n        if info[:results][\"0000,0100\"] == C_ECHO_RQ\n          logger.info(\"Received an Echo request. Returning an Echo response.\")\n          handle_response\n        end\n      elsif info[:presentation_context_flag] == DATA_MORE_FRAGMENTS or info[:presentation_context_flag] == DATA_LAST_FRAGMENT\n        # DATA FRAGMENT:\n        # If this is a file transmission, we will delay the decoding for later:\n        if file\n          # Just store the binary string:\n          info[:bin] = msg.rest_string\n          # If this was the last data fragment of a C-STORE, we need to send a receipt:\n          # (However, for, say a C-FIND-RSP, which indicates the end of the query results, this method shall not be called) (Command Field (0000,0100) holds information on this)\n          handle_response if info[:presentation_context_flag] == DATA_LAST_FRAGMENT\n        else\n          # Decode data elements:\n          while msg.index < last_index do\n            # Tag (4 bytes)\n            tag = msg.decode_tag\n            if @explicit\n              # Type (VR) (2 bytes):\n              type = msg.decode(2, \"STR\")\n              # Length (2 bytes)\n              length = msg.decode(2, \"US\")\n            else\n              # Implicit:\n              type = nil # (needs to be defined as nil here or it will take the value from the previous step in the loop)\n              # Length (4 bytes)\n              length = msg.decode(4, \"UL\")\n            end\n            if length > msg.rest_length\n              logger.error(\"The specified length of the data element value exceeds the remaining length of the received message!\")\n            end\n            # Fetch type (if not defined already) for this data element:\n            type = LIBRARY.element(tag).vr unless type\n            # Value (variable length)\n            value = msg.decode(length, type)\n            # Put tag and value in a hash:\n            results[tag] = value\n          end\n          # The results hash is put in an array along with (possibly) other results:\n          info[:results] = results\n        end\n      else\n        # Unknown.\n        logger.error(\"Unknown presentation context flag received in the query/command response. (#{info[:presentation_context_flag]})\")\n        stop_receiving\n      end",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 18,
                    "column": 6
                  },
                  "end": {
                    "row": 18,
                    "column": 8
                  },
                  "text": "if"
                },
                {
                  "type": "binary",
                  "start": {
                    "row": 18,
                    "column": 9
                  },
                  "end": {
                    "row": 18,
                    "column": 66
                  },
                  "text": "info[:presentation_context_flag] == COMMAND_LAST_FRAGMENT",
                  "children": [
                    {
                      "type": "element_reference",
                      "start": {
                        "row": 18,
                        "column": 9
                      },
                      "end": {
                        "row": 18,
                        "column": 41
                      },
                      "text": "info[:presentation_context_flag]",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 18,
                            "column": 9
                          },
                          "end": {
                            "row": 18,
                            "column": 13
                          },
                          "text": "info"
                        },
                        {
                          "type": "[",
                          "start": {
                            "row": 18,
                            "column": 13
                          },
                          "end": {
                            "row": 18,
                            "column": 14
                          },
                          "text": "["
                        },
                        {
                          "type": "simple_symbol",
                          "start": {
                            "row": 18,
                            "column": 14
                          },
                          "end": {
                            "row": 18,
                            "column": 40
                          },
                          "text": ":presentation_context_flag"
                        },
                        {
                          "type": "]",
                          "start": {
                            "row": 18,
                            "column": 40
                          },
                          "end": {
                            "row": 18,
                            "column": 41
                          },
                          "text": "]"
                        }
                      ]
                    },
                    {
                      "type": "==",
                      "start": {
                        "row": 18,
                        "column": 42
                      },
                      "end": {
                        "row": 18,
                        "column": 44
                      },
                      "text": "=="
                    },
                    {
                      "type": "constant",
                      "start": {
                        "row": 18,
                        "column": 45
                      },
                      "end": {
                        "row": 18,
                        "column": 66
                      },
                      "text": "COMMAND_LAST_FRAGMENT"
                    }
                  ]
                },
                {
                  "type": "comment",
                  "start": {
                    "row": 19,
                    "column": 8
                  },
                  "end": {
                    "row": 19,
                    "column": 33
                  },
                  "text": "# COMMAND, LAST FRAGMENT:"
                },
                {
                  "type": "then",
                  "start": {
                    "row": 19,
                    "column": 33
                  },
                  "end": {
                    "row": 51,
                    "column": 11
                  },
                  "text": "\n        while msg.index < last_index do\n          # Tag (4 bytes)\n          tag = msg.decode_tag\n          # Length (2 bytes)\n          length = msg.decode(2, \"US\")\n          if length > msg.rest_length\n            logger.error(\"Specified length of command element value exceeds remaining length of the received message! Something is wrong.\")\n          end\n          # Reserved (2 bytes)\n          msg.skip(2)\n          # VR (from library - not the stream):\n          vr = LIBRARY.element(tag).vr\n          # Value (variable length)\n          value = msg.decode(length, vr)\n          # Put tag and value in a hash:\n          results[tag] = value\n        end\n        # The results hash is put in an array along with (possibly) other results:\n        info[:results] = results\n        # Store the results in an instance variable (to be used later when sending a receipt for received data):\n        @command_request = results\n        # Check if the command fragment indicates that this was the last of the response fragments for this query:\n        status = results[\"0000,0900\"]\n        if status\n          # Note: This method will also stop the packet receiver if indicated by the status mesasge.\n          process_status(status)\n        end\n        # Special case: Handle a possible C-ECHO-RQ:\n        if info[:results][\"0000,0100\"] == C_ECHO_RQ\n          logger.info(\"Received an Echo request. Returning an Echo response.\")\n          handle_response\n        end",
                  "children": [
                    {
                      "type": "while",
                      "start": {
                        "row": 20,
                        "column": 8
                      },
                      "end": {
                        "row": 36,
                        "column": 11
                      },
                      "text": "while msg.index < last_index do\n          # Tag (4 bytes)\n          tag = msg.decode_tag\n          # Length (2 bytes)\n          length = msg.decode(2, \"US\")\n          if length > msg.rest_length\n            logger.error(\"Specified length of command element value exceeds remaining length of the received message! Something is wrong.\")\n          end\n          # Reserved (2 bytes)\n          msg.skip(2)\n          # VR (from library - not the stream):\n          vr = LIBRARY.element(tag).vr\n          # Value (variable length)\n          value = msg.decode(length, vr)\n          # Put tag and value in a hash:\n          results[tag] = value\n        end",
                      "children": [
                        {
                          "type": "while",
                          "start": {
                            "row": 20,
                            "column": 8
                          },
                          "end": {
                            "row": 20,
                            "column": 13
                          },
                          "text": "while"
                        },
                        {
                          "type": "binary",
                          "start": {
                            "row": 20,
                            "column": 14
                          },
                          "end": {
                            "row": 20,
                            "column": 36
                          },
                          "text": "msg.index < last_index",
                          "children": [
                            {
                              "type": "call",
                              "start": {
                                "row": 20,
                                "column": 14
                              },
                              "end": {
                                "row": 20,
                                "column": 23
                              },
                              "text": "msg.index",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 20,
                                    "column": 14
                                  },
                                  "end": {
                                    "row": 20,
                                    "column": 17
                                  },
                                  "text": "msg"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 20,
                                    "column": 17
                                  },
                                  "end": {
                                    "row": 20,
                                    "column": 18
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 20,
                                    "column": 18
                                  },
                                  "end": {
                                    "row": 20,
                                    "column": 23
                                  },
                                  "text": "index"
                                }
                              ]
                            },
                            {
                              "type": "<",
                              "start": {
                                "row": 20,
                                "column": 24
                              },
                              "end": {
                                "row": 20,
                                "column": 25
                              },
                              "text": "<"
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 20,
                                "column": 26
                              },
                              "end": {
                                "row": 20,
                                "column": 36
                              },
                              "text": "last_index"
                            }
                          ]
                        },
                        {
                          "type": "do",
                          "start": {
                            "row": 20,
                            "column": 37
                          },
                          "end": {
                            "row": 36,
                            "column": 11
                          },
                          "text": "do\n          # Tag (4 bytes)\n          tag = msg.decode_tag\n          # Length (2 bytes)\n          length = msg.decode(2, \"US\")\n          if length > msg.rest_length\n            logger.error(\"Specified length of command element value exceeds remaining length of the received message! Something is wrong.\")\n          end\n          # Reserved (2 bytes)\n          msg.skip(2)\n          # VR (from library - not the stream):\n          vr = LIBRARY.element(tag).vr\n          # Value (variable length)\n          value = msg.decode(length, vr)\n          # Put tag and value in a hash:\n          results[tag] = value\n        end",
                          "children": [
                            {
                              "type": "do",
                              "start": {
                                "row": 20,
                                "column": 37
                              },
                              "end": {
                                "row": 20,
                                "column": 39
                              },
                              "text": "do"
                            },
                            {
                              "type": "comment",
                              "start": {
                                "row": 21,
                                "column": 10
                              },
                              "end": {
                                "row": 21,
                                "column": 25
                              },
                              "text": "# Tag (4 bytes)"
                            },
                            {
                              "type": "assignment",
                              "start": {
                                "row": 22,
                                "column": 10
                              },
                              "end": {
                                "row": 22,
                                "column": 30
                              },
                              "text": "tag = msg.decode_tag",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 22,
                                    "column": 10
                                  },
                                  "end": {
                                    "row": 22,
                                    "column": 13
                                  },
                                  "text": "tag"
                                },
                                {
                                  "type": "=",
                                  "start": {
                                    "row": 22,
                                    "column": 14
                                  },
                                  "end": {
                                    "row": 22,
                                    "column": 15
                                  },
                                  "text": "="
                                },
                                {
                                  "type": "call",
                                  "start": {
                                    "row": 22,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 22,
                                    "column": 30
                                  },
                                  "text": "msg.decode_tag",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 22,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 22,
                                        "column": 19
                                      },
                                      "text": "msg"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 22,
                                        "column": 19
                                      },
                                      "end": {
                                        "row": 22,
                                        "column": 20
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 22,
                                        "column": 20
                                      },
                                      "end": {
                                        "row": 22,
                                        "column": 30
                                      },
                                      "text": "decode_tag"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "comment",
                              "start": {
                                "row": 23,
                                "column": 10
                              },
                              "end": {
                                "row": 23,
                                "column": 28
                              },
                              "text": "# Length (2 bytes)"
                            },
                            {
                              "type": "assignment",
                              "start": {
                                "row": 24,
                                "column": 10
                              },
                              "end": {
                                "row": 24,
                                "column": 38
                              },
                              "text": "length = msg.decode(2, \"US\")",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 24,
                                    "column": 10
                                  },
                                  "end": {
                                    "row": 24,
                                    "column": 16
                                  },
                                  "text": "length"
                                },
                                {
                                  "type": "=",
                                  "start": {
                                    "row": 24,
                                    "column": 17
                                  },
                                  "end": {
                                    "row": 24,
                                    "column": 18
                                  },
                                  "text": "="
                                },
                                {
                                  "type": "call",
                                  "start": {
                                    "row": 24,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 24,
                                    "column": 38
                                  },
                                  "text": "msg.decode(2, \"US\")",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 24,
                                        "column": 19
                                      },
                                      "end": {
                                        "row": 24,
                                        "column": 22
                                      },
                                      "text": "msg"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 24,
                                        "column": 22
                                      },
                                      "end": {
                                        "row": 24,
                                        "column": 23
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 24,
                                        "column": 23
                                      },
                                      "end": {
                                        "row": 24,
                                        "column": 29
                                      },
                                      "text": "decode"
                                    },
                                    {
                                      "type": "argument_list",
                                      "start": {
                                        "row": 24,
                                        "column": 29
                                      },
                                      "end": {
                                        "row": 24,
                                        "column": 38
                                      },
                                      "text": "(2, \"US\")",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 24,
                                            "column": 29
                                          },
                                          "end": {
                                            "row": 24,
                                            "column": 30
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "integer",
                                          "start": {
                                            "row": 24,
                                            "column": 30
                                          },
                                          "end": {
                                            "row": 24,
                                            "column": 31
                                          },
                                          "text": "2"
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 24,
                                            "column": 31
                                          },
                                          "end": {
                                            "row": 24,
                                            "column": 32
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "string",
                                          "start": {
                                            "row": 24,
                                            "column": 33
                                          },
                                          "end": {
                                            "row": 24,
                                            "column": 37
                                          },
                                          "text": "\"US\"",
                                          "children": [
                                            {
                                              "type": "\"",
                                              "start": {
                                                "row": 24,
                                                "column": 33
                                              },
                                              "end": {
                                                "row": 24,
                                                "column": 34
                                              },
                                              "text": "\""
                                            },
                                            {
                                              "type": "string_content",
                                              "start": {
                                                "row": 24,
                                                "column": 34
                                              },
                                              "end": {
                                                "row": 24,
                                                "column": 36
                                              },
                                              "text": "US"
                                            },
                                            {
                                              "type": "\"",
                                              "start": {
                                                "row": 24,
                                                "column": 36
                                              },
                                              "end": {
                                                "row": 24,
                                                "column": 37
                                              },
                                              "text": "\""
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 24,
                                            "column": 37
                                          },
                                          "end": {
                                            "row": 24,
                                            "column": 38
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "if",
                              "start": {
                                "row": 25,
                                "column": 10
                              },
                              "end": {
                                "row": 27,
                                "column": 13
                              },
                              "text": "if length > msg.rest_length\n            logger.error(\"Specified length of command element value exceeds remaining length of the received message! Something is wrong.\")\n          end",
                              "children": [
                                {
                                  "type": "if",
                                  "start": {
                                    "row": 25,
                                    "column": 10
                                  },
                                  "end": {
                                    "row": 25,
                                    "column": 12
                                  },
                                  "text": "if"
                                },
                                {
                                  "type": "binary",
                                  "start": {
                                    "row": 25,
                                    "column": 13
                                  },
                                  "end": {
                                    "row": 25,
                                    "column": 37
                                  },
                                  "text": "length > msg.rest_length",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 25,
                                        "column": 13
                                      },
                                      "end": {
                                        "row": 25,
                                        "column": 19
                                      },
                                      "text": "length"
                                    },
                                    {
                                      "type": ">",
                                      "start": {
                                        "row": 25,
                                        "column": 20
                                      },
                                      "end": {
                                        "row": 25,
                                        "column": 21
                                      },
                                      "text": ">"
                                    },
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 25,
                                        "column": 22
                                      },
                                      "end": {
                                        "row": 25,
                                        "column": 37
                                      },
                                      "text": "msg.rest_length",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 25,
                                            "column": 22
                                          },
                                          "end": {
                                            "row": 25,
                                            "column": 25
                                          },
                                          "text": "msg"
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 25,
                                            "column": 25
                                          },
                                          "end": {
                                            "row": 25,
                                            "column": 26
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 25,
                                            "column": 26
                                          },
                                          "end": {
                                            "row": 25,
                                            "column": 37
                                          },
                                          "text": "rest_length"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "then",
                                  "start": {
                                    "row": 25,
                                    "column": 37
                                  },
                                  "end": {
                                    "row": 26,
                                    "column": 139
                                  },
                                  "text": "\n            logger.error(\"Specified length of command element value exceeds remaining length of the received message! Something is wrong.\")",
                                  "children": [
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 26,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 26,
                                        "column": 139
                                      },
                                      "text": "logger.error(\"Specified length of command element value exceeds remaining length of the received message! Something is wrong.\")",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 26,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 26,
                                            "column": 18
                                          },
                                          "text": "logger"
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 26,
                                            "column": 18
                                          },
                                          "end": {
                                            "row": 26,
                                            "column": 19
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 26,
                                            "column": 19
                                          },
                                          "end": {
                                            "row": 26,
                                            "column": 24
                                          },
                                          "text": "error"
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 26,
                                            "column": 24
                                          },
                                          "end": {
                                            "row": 26,
                                            "column": 139
                                          },
                                          "text": "(\"Specified length of command element value exceeds remaining length of the received message! Something is wrong.\")",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 26,
                                                "column": 24
                                              },
                                              "end": {
                                                "row": 26,
                                                "column": 25
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "string",
                                              "start": {
                                                "row": 26,
                                                "column": 25
                                              },
                                              "end": {
                                                "row": 26,
                                                "column": 138
                                              },
                                              "text": "\"Specified length of command element value exceeds remaining length of the received message! Something is wrong.\"",
                                              "children": [
                                                {
                                                  "type": "\"",
                                                  "start": {
                                                    "row": 26,
                                                    "column": 25
                                                  },
                                                  "end": {
                                                    "row": 26,
                                                    "column": 26
                                                  },
                                                  "text": "\""
                                                },
                                                {
                                                  "type": "string_content",
                                                  "start": {
                                                    "row": 26,
                                                    "column": 26
                                                  },
                                                  "end": {
                                                    "row": 26,
                                                    "column": 137
                                                  },
                                                  "text": "Specified length of command element value exceeds remaining length of the received message! Something is wrong."
                                                },
                                                {
                                                  "type": "\"",
                                                  "start": {
                                                    "row": 26,
                                                    "column": 137
                                                  },
                                                  "end": {
                                                    "row": 26,
                                                    "column": 138
                                                  },
                                                  "text": "\""
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 26,
                                                "column": 138
                                              },
                                              "end": {
                                                "row": 26,
                                                "column": 139
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "end",
                                  "start": {
                                    "row": 27,
                                    "column": 10
                                  },
                                  "end": {
                                    "row": 27,
                                    "column": 13
                                  },
                                  "text": "end"
                                }
                              ]
                            },
                            {
                              "type": "comment",
                              "start": {
                                "row": 28,
                                "column": 10
                              },
                              "end": {
                                "row": 28,
                                "column": 30
                              },
                              "text": "# Reserved (2 bytes)"
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 29,
                                "column": 10
                              },
                              "end": {
                                "row": 29,
                                "column": 21
                              },
                              "text": "msg.skip(2)",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 29,
                                    "column": 10
                                  },
                                  "end": {
                                    "row": 29,
                                    "column": 13
                                  },
                                  "text": "msg"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 29,
                                    "column": 13
                                  },
                                  "end": {
                                    "row": 29,
                                    "column": 14
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 29,
                                    "column": 14
                                  },
                                  "end": {
                                    "row": 29,
                                    "column": 18
                                  },
                                  "text": "skip"
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 29,
                                    "column": 18
                                  },
                                  "end": {
                                    "row": 29,
                                    "column": 21
                                  },
                                  "text": "(2)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 29,
                                        "column": 18
                                      },
                                      "end": {
                                        "row": 29,
                                        "column": 19
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "integer",
                                      "start": {
                                        "row": 29,
                                        "column": 19
                                      },
                                      "end": {
                                        "row": 29,
                                        "column": 20
                                      },
                                      "text": "2"
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 29,
                                        "column": 20
                                      },
                                      "end": {
                                        "row": 29,
                                        "column": 21
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "comment",
                              "start": {
                                "row": 30,
                                "column": 10
                              },
                              "end": {
                                "row": 30,
                                "column": 47
                              },
                              "text": "# VR (from library - not the stream):"
                            },
                            {
                              "type": "assignment",
                              "start": {
                                "row": 31,
                                "column": 10
                              },
                              "end": {
                                "row": 31,
                                "column": 38
                              },
                              "text": "vr = LIBRARY.element(tag).vr",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 31,
                                    "column": 10
                                  },
                                  "end": {
                                    "row": 31,
                                    "column": 12
                                  },
                                  "text": "vr"
                                },
                                {
                                  "type": "=",
                                  "start": {
                                    "row": 31,
                                    "column": 13
                                  },
                                  "end": {
                                    "row": 31,
                                    "column": 14
                                  },
                                  "text": "="
                                },
                                {
                                  "type": "call",
                                  "start": {
                                    "row": 31,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 31,
                                    "column": 38
                                  },
                                  "text": "LIBRARY.element(tag).vr",
                                  "children": [
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 31,
                                        "column": 15
                                      },
                                      "end": {
                                        "row": 31,
                                        "column": 35
                                      },
                                      "text": "LIBRARY.element(tag)",
                                      "children": [
                                        {
                                          "type": "constant",
                                          "start": {
                                            "row": 31,
                                            "column": 15
                                          },
                                          "end": {
                                            "row": 31,
                                            "column": 22
                                          },
                                          "text": "LIBRARY"
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 31,
                                            "column": 22
                                          },
                                          "end": {
                                            "row": 31,
                                            "column": 23
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 31,
                                            "column": 23
                                          },
                                          "end": {
                                            "row": 31,
                                            "column": 30
                                          },
                                          "text": "element"
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 31,
                                            "column": 30
                                          },
                                          "end": {
                                            "row": 31,
                                            "column": 35
                                          },
                                          "text": "(tag)",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 31,
                                                "column": 30
                                              },
                                              "end": {
                                                "row": 31,
                                                "column": 31
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 31,
                                                "column": 31
                                              },
                                              "end": {
                                                "row": 31,
                                                "column": 34
                                              },
                                              "text": "tag"
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 31,
                                                "column": 34
                                              },
                                              "end": {
                                                "row": 31,
                                                "column": 35
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 31,
                                        "column": 35
                                      },
                                      "end": {
                                        "row": 31,
                                        "column": 36
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 31,
                                        "column": 36
                                      },
                                      "end": {
                                        "row": 31,
                                        "column": 38
                                      },
                                      "text": "vr"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "comment",
                              "start": {
                                "row": 32,
                                "column": 10
                              },
                              "end": {
                                "row": 32,
                                "column": 35
                              },
                              "text": "# Value (variable length)"
                            },
                            {
                              "type": "assignment",
                              "start": {
                                "row": 33,
                                "column": 10
                              },
                              "end": {
                                "row": 33,
                                "column": 40
                              },
                              "text": "value = msg.decode(length, vr)",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 33,
                                    "column": 10
                                  },
                                  "end": {
                                    "row": 33,
                                    "column": 15
                                  },
                                  "text": "value"
                                },
                                {
                                  "type": "=",
                                  "start": {
                                    "row": 33,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 33,
                                    "column": 17
                                  },
                                  "text": "="
                                },
                                {
                                  "type": "call",
                                  "start": {
                                    "row": 33,
                                    "column": 18
                                  },
                                  "end": {
                                    "row": 33,
                                    "column": 40
                                  },
                                  "text": "msg.decode(length, vr)",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 33,
                                        "column": 18
                                      },
                                      "end": {
                                        "row": 33,
                                        "column": 21
                                      },
                                      "text": "msg"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 33,
                                        "column": 21
                                      },
                                      "end": {
                                        "row": 33,
                                        "column": 22
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 33,
                                        "column": 22
                                      },
                                      "end": {
                                        "row": 33,
                                        "column": 28
                                      },
                                      "text": "decode"
                                    },
                                    {
                                      "type": "argument_list",
                                      "start": {
                                        "row": 33,
                                        "column": 28
                                      },
                                      "end": {
                                        "row": 33,
                                        "column": 40
                                      },
                                      "text": "(length, vr)",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 33,
                                            "column": 28
                                          },
                                          "end": {
                                            "row": 33,
                                            "column": 29
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 33,
                                            "column": 29
                                          },
                                          "end": {
                                            "row": 33,
                                            "column": 35
                                          },
                                          "text": "length"
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 33,
                                            "column": 35
                                          },
                                          "end": {
                                            "row": 33,
                                            "column": 36
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 33,
                                            "column": 37
                                          },
                                          "end": {
                                            "row": 33,
                                            "column": 39
                                          },
                                          "text": "vr"
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 33,
                                            "column": 39
                                          },
                                          "end": {
                                            "row": 33,
                                            "column": 40
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "comment",
                              "start": {
                                "row": 34,
                                "column": 10
                              },
                              "end": {
                                "row": 34,
                                "column": 40
                              },
                              "text": "# Put tag and value in a hash:"
                            },
                            {
                              "type": "assignment",
                              "start": {
                                "row": 35,
                                "column": 10
                              },
                              "end": {
                                "row": 35,
                                "column": 30
                              },
                              "text": "results[tag] = value",
                              "children": [
                                {
                                  "type": "element_reference",
                                  "start": {
                                    "row": 35,
                                    "column": 10
                                  },
                                  "end": {
                                    "row": 35,
                                    "column": 22
                                  },
                                  "text": "results[tag]",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 35,
                                        "column": 10
                                      },
                                      "end": {
                                        "row": 35,
                                        "column": 17
                                      },
                                      "text": "results"
                                    },
                                    {
                                      "type": "[",
                                      "start": {
                                        "row": 35,
                                        "column": 17
                                      },
                                      "end": {
                                        "row": 35,
                                        "column": 18
                                      },
                                      "text": "["
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 35,
                                        "column": 18
                                      },
                                      "end": {
                                        "row": 35,
                                        "column": 21
                                      },
                                      "text": "tag"
                                    },
                                    {
                                      "type": "]",
                                      "start": {
                                        "row": 35,
                                        "column": 21
                                      },
                                      "end": {
                                        "row": 35,
                                        "column": 22
                                      },
                                      "text": "]"
                                    }
                                  ]
                                },
                                {
                                  "type": "=",
                                  "start": {
                                    "row": 35,
                                    "column": 23
                                  },
                                  "end": {
                                    "row": 35,
                                    "column": 24
                                  },
                                  "text": "="
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 35,
                                    "column": 25
                                  },
                                  "end": {
                                    "row": 35,
                                    "column": 30
                                  },
                                  "text": "value"
                                }
                              ]
                            },
                            {
                              "type": "end",
                              "start": {
                                "row": 36,
                                "column": 8
                              },
                              "end": {
                                "row": 36,
                                "column": 11
                              },
                              "text": "end"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 37,
                        "column": 8
                      },
                      "end": {
                        "row": 37,
                        "column": 82
                      },
                      "text": "# The results hash is put in an array along with (possibly) other results:"
                    },
                    {
                      "type": "assignment",
                      "start": {
                        "row": 38,
                        "column": 8
                      },
                      "end": {
                        "row": 38,
                        "column": 32
                      },
                      "text": "info[:results] = results",
                      "children": [
                        {
                          "type": "element_reference",
                          "start": {
                            "row": 38,
                            "column": 8
                          },
                          "end": {
                            "row": 38,
                            "column": 22
                          },
                          "text": "info[:results]",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 38,
                                "column": 8
                              },
                              "end": {
                                "row": 38,
                                "column": 12
                              },
                              "text": "info"
                            },
                            {
                              "type": "[",
                              "start": {
                                "row": 38,
                                "column": 12
                              },
                              "end": {
                                "row": 38,
                                "column": 13
                              },
                              "text": "["
                            },
                            {
                              "type": "simple_symbol",
                              "start": {
                                "row": 38,
                                "column": 13
                              },
                              "end": {
                                "row": 38,
                                "column": 21
                              },
                              "text": ":results"
                            },
                            {
                              "type": "]",
                              "start": {
                                "row": 38,
                                "column": 21
                              },
                              "end": {
                                "row": 38,
                                "column": 22
                              },
                              "text": "]"
                            }
                          ]
                        },
                        {
                          "type": "=",
                          "start": {
                            "row": 38,
                            "column": 23
                          },
                          "end": {
                            "row": 38,
                            "column": 24
                          },
                          "text": "="
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 38,
                            "column": 25
                          },
                          "end": {
                            "row": 38,
                            "column": 32
                          },
                          "text": "results"
                        }
                      ]
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 39,
                        "column": 8
                      },
                      "end": {
                        "row": 39,
                        "column": 112
                      },
                      "text": "# Store the results in an instance variable (to be used later when sending a receipt for received data):"
                    },
                    {
                      "type": "assignment",
                      "start": {
                        "row": 40,
                        "column": 8
                      },
                      "end": {
                        "row": 40,
                        "column": 34
                      },
                      "text": "@command_request = results",
                      "children": [
                        {
                          "type": "instance_variable",
                          "start": {
                            "row": 40,
                            "column": 8
                          },
                          "end": {
                            "row": 40,
                            "column": 24
                          },
                          "text": "@command_request"
                        },
                        {
                          "type": "=",
                          "start": {
                            "row": 40,
                            "column": 25
                          },
                          "end": {
                            "row": 40,
                            "column": 26
                          },
                          "text": "="
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 40,
                            "column": 27
                          },
                          "end": {
                            "row": 40,
                            "column": 34
                          },
                          "text": "results"
                        }
                      ]
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 41,
                        "column": 8
                      },
                      "end": {
                        "row": 41,
                        "column": 114
                      },
                      "text": "# Check if the command fragment indicates that this was the last of the response fragments for this query:"
                    },
                    {
                      "type": "assignment",
                      "start": {
                        "row": 42,
                        "column": 8
                      },
                      "end": {
                        "row": 42,
                        "column": 37
                      },
                      "text": "status = results[\"0000,0900\"]",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 42,
                            "column": 8
                          },
                          "end": {
                            "row": 42,
                            "column": 14
                          },
                          "text": "status"
                        },
                        {
                          "type": "=",
                          "start": {
                            "row": 42,
                            "column": 15
                          },
                          "end": {
                            "row": 42,
                            "column": 16
                          },
                          "text": "="
                        },
                        {
                          "type": "element_reference",
                          "start": {
                            "row": 42,
                            "column": 17
                          },
                          "end": {
                            "row": 42,
                            "column": 37
                          },
                          "text": "results[\"0000,0900\"]",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 42,
                                "column": 17
                              },
                              "end": {
                                "row": 42,
                                "column": 24
                              },
                              "text": "results"
                            },
                            {
                              "type": "[",
                              "start": {
                                "row": 42,
                                "column": 24
                              },
                              "end": {
                                "row": 42,
                                "column": 25
                              },
                              "text": "["
                            },
                            {
                              "type": "string",
                              "start": {
                                "row": 42,
                                "column": 25
                              },
                              "end": {
                                "row": 42,
                                "column": 36
                              },
                              "text": "\"0000,0900\"",
                              "children": [
                                {
                                  "type": "\"",
                                  "start": {
                                    "row": 42,
                                    "column": 25
                                  },
                                  "end": {
                                    "row": 42,
                                    "column": 26
                                  },
                                  "text": "\""
                                },
                                {
                                  "type": "string_content",
                                  "start": {
                                    "row": 42,
                                    "column": 26
                                  },
                                  "end": {
                                    "row": 42,
                                    "column": 35
                                  },
                                  "text": "0000,0900"
                                },
                                {
                                  "type": "\"",
                                  "start": {
                                    "row": 42,
                                    "column": 35
                                  },
                                  "end": {
                                    "row": 42,
                                    "column": 36
                                  },
                                  "text": "\""
                                }
                              ]
                            },
                            {
                              "type": "]",
                              "start": {
                                "row": 42,
                                "column": 36
                              },
                              "end": {
                                "row": 42,
                                "column": 37
                              },
                              "text": "]"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "if",
                      "start": {
                        "row": 43,
                        "column": 8
                      },
                      "end": {
                        "row": 46,
                        "column": 11
                      },
                      "text": "if status\n          # Note: This method will also stop the packet receiver if indicated by the status mesasge.\n          process_status(status)\n        end",
                      "children": [
                        {
                          "type": "if",
                          "start": {
                            "row": 43,
                            "column": 8
                          },
                          "end": {
                            "row": 43,
                            "column": 10
                          },
                          "text": "if"
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 43,
                            "column": 11
                          },
                          "end": {
                            "row": 43,
                            "column": 17
                          },
                          "text": "status"
                        },
                        {
                          "type": "comment",
                          "start": {
                            "row": 44,
                            "column": 10
                          },
                          "end": {
                            "row": 44,
                            "column": 100
                          },
                          "text": "# Note: This method will also stop the packet receiver if indicated by the status mesasge."
                        },
                        {
                          "type": "then",
                          "start": {
                            "row": 44,
                            "column": 100
                          },
                          "end": {
                            "row": 45,
                            "column": 32
                          },
                          "text": "\n          process_status(status)",
                          "children": [
                            {
                              "type": "call",
                              "start": {
                                "row": 45,
                                "column": 10
                              },
                              "end": {
                                "row": 45,
                                "column": 32
                              },
                              "text": "process_status(status)",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 45,
                                    "column": 10
                                  },
                                  "end": {
                                    "row": 45,
                                    "column": 24
                                  },
                                  "text": "process_status"
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 45,
                                    "column": 24
                                  },
                                  "end": {
                                    "row": 45,
                                    "column": 32
                                  },
                                  "text": "(status)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 45,
                                        "column": 24
                                      },
                                      "end": {
                                        "row": 45,
                                        "column": 25
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 45,
                                        "column": 25
                                      },
                                      "end": {
                                        "row": 45,
                                        "column": 31
                                      },
                                      "text": "status"
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 45,
                                        "column": 31
                                      },
                                      "end": {
                                        "row": 45,
                                        "column": 32
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "end",
                          "start": {
                            "row": 46,
                            "column": 8
                          },
                          "end": {
                            "row": 46,
                            "column": 11
                          },
                          "text": "end"
                        }
                      ]
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 47,
                        "column": 8
                      },
                      "end": {
                        "row": 47,
                        "column": 52
                      },
                      "text": "# Special case: Handle a possible C-ECHO-RQ:"
                    },
                    {
                      "type": "if",
                      "start": {
                        "row": 48,
                        "column": 8
                      },
                      "end": {
                        "row": 51,
                        "column": 11
                      },
                      "text": "if info[:results][\"0000,0100\"] == C_ECHO_RQ\n          logger.info(\"Received an Echo request. Returning an Echo response.\")\n          handle_response\n        end",
                      "children": [
                        {
                          "type": "if",
                          "start": {
                            "row": 48,
                            "column": 8
                          },
                          "end": {
                            "row": 48,
                            "column": 10
                          },
                          "text": "if"
                        },
                        {
                          "type": "binary",
                          "start": {
                            "row": 48,
                            "column": 11
                          },
                          "end": {
                            "row": 48,
                            "column": 51
                          },
                          "text": "info[:results][\"0000,0100\"] == C_ECHO_RQ",
                          "children": [
                            {
                              "type": "element_reference",
                              "start": {
                                "row": 48,
                                "column": 11
                              },
                              "end": {
                                "row": 48,
                                "column": 38
                              },
                              "text": "info[:results][\"0000,0100\"]",
                              "children": [
                                {
                                  "type": "element_reference",
                                  "start": {
                                    "row": 48,
                                    "column": 11
                                  },
                                  "end": {
                                    "row": 48,
                                    "column": 25
                                  },
                                  "text": "info[:results]",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 48,
                                        "column": 11
                                      },
                                      "end": {
                                        "row": 48,
                                        "column": 15
                                      },
                                      "text": "info"
                                    },
                                    {
                                      "type": "[",
                                      "start": {
                                        "row": 48,
                                        "column": 15
                                      },
                                      "end": {
                                        "row": 48,
                                        "column": 16
                                      },
                                      "text": "["
                                    },
                                    {
                                      "type": "simple_symbol",
                                      "start": {
                                        "row": 48,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 48,
                                        "column": 24
                                      },
                                      "text": ":results"
                                    },
                                    {
                                      "type": "]",
                                      "start": {
                                        "row": 48,
                                        "column": 24
                                      },
                                      "end": {
                                        "row": 48,
                                        "column": 25
                                      },
                                      "text": "]"
                                    }
                                  ]
                                },
                                {
                                  "type": "[",
                                  "start": {
                                    "row": 48,
                                    "column": 25
                                  },
                                  "end": {
                                    "row": 48,
                                    "column": 26
                                  },
                                  "text": "["
                                },
                                {
                                  "type": "string",
                                  "start": {
                                    "row": 48,
                                    "column": 26
                                  },
                                  "end": {
                                    "row": 48,
                                    "column": 37
                                  },
                                  "text": "\"0000,0100\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start": {
                                        "row": 48,
                                        "column": 26
                                      },
                                      "end": {
                                        "row": 48,
                                        "column": 27
                                      },
                                      "text": "\""
                                    },
                                    {
                                      "type": "string_content",
                                      "start": {
                                        "row": 48,
                                        "column": 27
                                      },
                                      "end": {
                                        "row": 48,
                                        "column": 36
                                      },
                                      "text": "0000,0100"
                                    },
                                    {
                                      "type": "\"",
                                      "start": {
                                        "row": 48,
                                        "column": 36
                                      },
                                      "end": {
                                        "row": 48,
                                        "column": 37
                                      },
                                      "text": "\""
                                    }
                                  ]
                                },
                                {
                                  "type": "]",
                                  "start": {
                                    "row": 48,
                                    "column": 37
                                  },
                                  "end": {
                                    "row": 48,
                                    "column": 38
                                  },
                                  "text": "]"
                                }
                              ]
                            },
                            {
                              "type": "==",
                              "start": {
                                "row": 48,
                                "column": 39
                              },
                              "end": {
                                "row": 48,
                                "column": 41
                              },
                              "text": "=="
                            },
                            {
                              "type": "constant",
                              "start": {
                                "row": 48,
                                "column": 42
                              },
                              "end": {
                                "row": 48,
                                "column": 51
                              },
                              "text": "C_ECHO_RQ"
                            }
                          ]
                        },
                        {
                          "type": "then",
                          "start": {
                            "row": 48,
                            "column": 51
                          },
                          "end": {
                            "row": 50,
                            "column": 25
                          },
                          "text": "\n          logger.info(\"Received an Echo request. Returning an Echo response.\")\n          handle_response",
                          "children": [
                            {
                              "type": "call",
                              "start": {
                                "row": 49,
                                "column": 10
                              },
                              "end": {
                                "row": 49,
                                "column": 78
                              },
                              "text": "logger.info(\"Received an Echo request. Returning an Echo response.\")",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 49,
                                    "column": 10
                                  },
                                  "end": {
                                    "row": 49,
                                    "column": 16
                                  },
                                  "text": "logger"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 49,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 49,
                                    "column": 17
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 49,
                                    "column": 17
                                  },
                                  "end": {
                                    "row": 49,
                                    "column": 21
                                  },
                                  "text": "info"
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 49,
                                    "column": 21
                                  },
                                  "end": {
                                    "row": 49,
                                    "column": 78
                                  },
                                  "text": "(\"Received an Echo request. Returning an Echo response.\")",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 49,
                                        "column": 21
                                      },
                                      "end": {
                                        "row": 49,
                                        "column": 22
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "string",
                                      "start": {
                                        "row": 49,
                                        "column": 22
                                      },
                                      "end": {
                                        "row": 49,
                                        "column": 77
                                      },
                                      "text": "\"Received an Echo request. Returning an Echo response.\"",
                                      "children": [
                                        {
                                          "type": "\"",
                                          "start": {
                                            "row": 49,
                                            "column": 22
                                          },
                                          "end": {
                                            "row": 49,
                                            "column": 23
                                          },
                                          "text": "\""
                                        },
                                        {
                                          "type": "string_content",
                                          "start": {
                                            "row": 49,
                                            "column": 23
                                          },
                                          "end": {
                                            "row": 49,
                                            "column": 76
                                          },
                                          "text": "Received an Echo request. Returning an Echo response."
                                        },
                                        {
                                          "type": "\"",
                                          "start": {
                                            "row": 49,
                                            "column": 76
                                          },
                                          "end": {
                                            "row": 49,
                                            "column": 77
                                          },
                                          "text": "\""
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 49,
                                        "column": 77
                                      },
                                      "end": {
                                        "row": 49,
                                        "column": 78
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 50,
                                "column": 10
                              },
                              "end": {
                                "row": 50,
                                "column": 25
                              },
                              "text": "handle_response"
                            }
                          ]
                        },
                        {
                          "type": "end",
                          "start": {
                            "row": 51,
                            "column": 8
                          },
                          "end": {
                            "row": 51,
                            "column": 11
                          },
                          "text": "end"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "elsif",
                  "start": {
                    "row": 52,
                    "column": 6
                  },
                  "end": {
                    "row": 93,
                    "column": 22
                  },
                  "text": "elsif info[:presentation_context_flag] == DATA_MORE_FRAGMENTS or info[:presentation_context_flag] == DATA_LAST_FRAGMENT\n        # DATA FRAGMENT:\n        # If this is a file transmission, we will delay the decoding for later:\n        if file\n          # Just store the binary string:\n          info[:bin] = msg.rest_string\n          # If this was the last data fragment of a C-STORE, we need to send a receipt:\n          # (However, for, say a C-FIND-RSP, which indicates the end of the query results, this method shall not be called) (Command Field (0000,0100) holds information on this)\n          handle_response if info[:presentation_context_flag] == DATA_LAST_FRAGMENT\n        else\n          # Decode data elements:\n          while msg.index < last_index do\n            # Tag (4 bytes)\n            tag = msg.decode_tag\n            if @explicit\n              # Type (VR) (2 bytes):\n              type = msg.decode(2, \"STR\")\n              # Length (2 bytes)\n              length = msg.decode(2, \"US\")\n            else\n              # Implicit:\n              type = nil # (needs to be defined as nil here or it will take the value from the previous step in the loop)\n              # Length (4 bytes)\n              length = msg.decode(4, \"UL\")\n            end\n            if length > msg.rest_length\n              logger.error(\"The specified length of the data element value exceeds the remaining length of the received message!\")\n            end\n            # Fetch type (if not defined already) for this data element:\n            type = LIBRARY.element(tag).vr unless type\n            # Value (variable length)\n            value = msg.decode(length, type)\n            # Put tag and value in a hash:\n            results[tag] = value\n          end\n          # The results hash is put in an array along with (possibly) other results:\n          info[:results] = results\n        end\n      else\n        # Unknown.\n        logger.error(\"Unknown presentation context flag received in the query/command response. (#{info[:presentation_context_flag]})\")\n        stop_receiving",
                  "children": [
                    {
                      "type": "elsif",
                      "start": {
                        "row": 52,
                        "column": 6
                      },
                      "end": {
                        "row": 52,
                        "column": 11
                      },
                      "text": "elsif"
                    },
                    {
                      "type": "binary",
                      "start": {
                        "row": 52,
                        "column": 12
                      },
                      "end": {
                        "row": 52,
                        "column": 125
                      },
                      "text": "info[:presentation_context_flag] == DATA_MORE_FRAGMENTS or info[:presentation_context_flag] == DATA_LAST_FRAGMENT",
                      "children": [
                        {
                          "type": "binary",
                          "start": {
                            "row": 52,
                            "column": 12
                          },
                          "end": {
                            "row": 52,
                            "column": 67
                          },
                          "text": "info[:presentation_context_flag] == DATA_MORE_FRAGMENTS",
                          "children": [
                            {
                              "type": "element_reference",
                              "start": {
                                "row": 52,
                                "column": 12
                              },
                              "end": {
                                "row": 52,
                                "column": 44
                              },
                              "text": "info[:presentation_context_flag]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 52,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 52,
                                    "column": 16
                                  },
                                  "text": "info"
                                },
                                {
                                  "type": "[",
                                  "start": {
                                    "row": 52,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 52,
                                    "column": 17
                                  },
                                  "text": "["
                                },
                                {
                                  "type": "simple_symbol",
                                  "start": {
                                    "row": 52,
                                    "column": 17
                                  },
                                  "end": {
                                    "row": 52,
                                    "column": 43
                                  },
                                  "text": ":presentation_context_flag"
                                },
                                {
                                  "type": "]",
                                  "start": {
                                    "row": 52,
                                    "column": 43
                                  },
                                  "end": {
                                    "row": 52,
                                    "column": 44
                                  },
                                  "text": "]"
                                }
                              ]
                            },
                            {
                              "type": "==",
                              "start": {
                                "row": 52,
                                "column": 45
                              },
                              "end": {
                                "row": 52,
                                "column": 47
                              },
                              "text": "=="
                            },
                            {
                              "type": "constant",
                              "start": {
                                "row": 52,
                                "column": 48
                              },
                              "end": {
                                "row": 52,
                                "column": 67
                              },
                              "text": "DATA_MORE_FRAGMENTS"
                            }
                          ]
                        },
                        {
                          "type": "or",
                          "start": {
                            "row": 52,
                            "column": 68
                          },
                          "end": {
                            "row": 52,
                            "column": 70
                          },
                          "text": "or"
                        },
                        {
                          "type": "binary",
                          "start": {
                            "row": 52,
                            "column": 71
                          },
                          "end": {
                            "row": 52,
                            "column": 125
                          },
                          "text": "info[:presentation_context_flag] == DATA_LAST_FRAGMENT",
                          "children": [
                            {
                              "type": "element_reference",
                              "start": {
                                "row": 52,
                                "column": 71
                              },
                              "end": {
                                "row": 52,
                                "column": 103
                              },
                              "text": "info[:presentation_context_flag]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 52,
                                    "column": 71
                                  },
                                  "end": {
                                    "row": 52,
                                    "column": 75
                                  },
                                  "text": "info"
                                },
                                {
                                  "type": "[",
                                  "start": {
                                    "row": 52,
                                    "column": 75
                                  },
                                  "end": {
                                    "row": 52,
                                    "column": 76
                                  },
                                  "text": "["
                                },
                                {
                                  "type": "simple_symbol",
                                  "start": {
                                    "row": 52,
                                    "column": 76
                                  },
                                  "end": {
                                    "row": 52,
                                    "column": 102
                                  },
                                  "text": ":presentation_context_flag"
                                },
                                {
                                  "type": "]",
                                  "start": {
                                    "row": 52,
                                    "column": 102
                                  },
                                  "end": {
                                    "row": 52,
                                    "column": 103
                                  },
                                  "text": "]"
                                }
                              ]
                            },
                            {
                              "type": "==",
                              "start": {
                                "row": 52,
                                "column": 104
                              },
                              "end": {
                                "row": 52,
                                "column": 106
                              },
                              "text": "=="
                            },
                            {
                              "type": "constant",
                              "start": {
                                "row": 52,
                                "column": 107
                              },
                              "end": {
                                "row": 52,
                                "column": 125
                              },
                              "text": "DATA_LAST_FRAGMENT"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 53,
                        "column": 8
                      },
                      "end": {
                        "row": 53,
                        "column": 24
                      },
                      "text": "# DATA FRAGMENT:"
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 54,
                        "column": 8
                      },
                      "end": {
                        "row": 54,
                        "column": 79
                      },
                      "text": "# If this is a file transmission, we will delay the decoding for later:"
                    },
                    {
                      "type": "then",
                      "start": {
                        "row": 54,
                        "column": 79
                      },
                      "end": {
                        "row": 89,
                        "column": 11
                      },
                      "text": "\n        if file\n          # Just store the binary string:\n          info[:bin] = msg.rest_string\n          # If this was the last data fragment of a C-STORE, we need to send a receipt:\n          # (However, for, say a C-FIND-RSP, which indicates the end of the query results, this method shall not be called) (Command Field (0000,0100) holds information on this)\n          handle_response if info[:presentation_context_flag] == DATA_LAST_FRAGMENT\n        else\n          # Decode data elements:\n          while msg.index < last_index do\n            # Tag (4 bytes)\n            tag = msg.decode_tag\n            if @explicit\n              # Type (VR) (2 bytes):\n              type = msg.decode(2, \"STR\")\n              # Length (2 bytes)\n              length = msg.decode(2, \"US\")\n            else\n              # Implicit:\n              type = nil # (needs to be defined as nil here or it will take the value from the previous step in the loop)\n              # Length (4 bytes)\n              length = msg.decode(4, \"UL\")\n            end\n            if length > msg.rest_length\n              logger.error(\"The specified length of the data element value exceeds the remaining length of the received message!\")\n            end\n            # Fetch type (if not defined already) for this data element:\n            type = LIBRARY.element(tag).vr unless type\n            # Value (variable length)\n            value = msg.decode(length, type)\n            # Put tag and value in a hash:\n            results[tag] = value\n          end\n          # The results hash is put in an array along with (possibly) other results:\n          info[:results] = results\n        end",
                      "children": [
                        {
                          "type": "if",
                          "start": {
                            "row": 55,
                            "column": 8
                          },
                          "end": {
                            "row": 89,
                            "column": 11
                          },
                          "text": "if file\n          # Just store the binary string:\n          info[:bin] = msg.rest_string\n          # If this was the last data fragment of a C-STORE, we need to send a receipt:\n          # (However, for, say a C-FIND-RSP, which indicates the end of the query results, this method shall not be called) (Command Field (0000,0100) holds information on this)\n          handle_response if info[:presentation_context_flag] == DATA_LAST_FRAGMENT\n        else\n          # Decode data elements:\n          while msg.index < last_index do\n            # Tag (4 bytes)\n            tag = msg.decode_tag\n            if @explicit\n              # Type (VR) (2 bytes):\n              type = msg.decode(2, \"STR\")\n              # Length (2 bytes)\n              length = msg.decode(2, \"US\")\n            else\n              # Implicit:\n              type = nil # (needs to be defined as nil here or it will take the value from the previous step in the loop)\n              # Length (4 bytes)\n              length = msg.decode(4, \"UL\")\n            end\n            if length > msg.rest_length\n              logger.error(\"The specified length of the data element value exceeds the remaining length of the received message!\")\n            end\n            # Fetch type (if not defined already) for this data element:\n            type = LIBRARY.element(tag).vr unless type\n            # Value (variable length)\n            value = msg.decode(length, type)\n            # Put tag and value in a hash:\n            results[tag] = value\n          end\n          # The results hash is put in an array along with (possibly) other results:\n          info[:results] = results\n        end",
                          "children": [
                            {
                              "type": "if",
                              "start": {
                                "row": 55,
                                "column": 8
                              },
                              "end": {
                                "row": 55,
                                "column": 10
                              },
                              "text": "if"
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 55,
                                "column": 11
                              },
                              "end": {
                                "row": 55,
                                "column": 15
                              },
                              "text": "file"
                            },
                            {
                              "type": "comment",
                              "start": {
                                "row": 56,
                                "column": 10
                              },
                              "end": {
                                "row": 56,
                                "column": 41
                              },
                              "text": "# Just store the binary string:"
                            },
                            {
                              "type": "then",
                              "start": {
                                "row": 56,
                                "column": 41
                              },
                              "end": {
                                "row": 60,
                                "column": 83
                              },
                              "text": "\n          info[:bin] = msg.rest_string\n          # If this was the last data fragment of a C-STORE, we need to send a receipt:\n          # (However, for, say a C-FIND-RSP, which indicates the end of the query results, this method shall not be called) (Command Field (0000,0100) holds information on this)\n          handle_response if info[:presentation_context_flag] == DATA_LAST_FRAGMENT",
                              "children": [
                                {
                                  "type": "assignment",
                                  "start": {
                                    "row": 57,
                                    "column": 10
                                  },
                                  "end": {
                                    "row": 57,
                                    "column": 38
                                  },
                                  "text": "info[:bin] = msg.rest_string",
                                  "children": [
                                    {
                                      "type": "element_reference",
                                      "start": {
                                        "row": 57,
                                        "column": 10
                                      },
                                      "end": {
                                        "row": 57,
                                        "column": 20
                                      },
                                      "text": "info[:bin]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 57,
                                            "column": 10
                                          },
                                          "end": {
                                            "row": 57,
                                            "column": 14
                                          },
                                          "text": "info"
                                        },
                                        {
                                          "type": "[",
                                          "start": {
                                            "row": 57,
                                            "column": 14
                                          },
                                          "end": {
                                            "row": 57,
                                            "column": 15
                                          },
                                          "text": "["
                                        },
                                        {
                                          "type": "simple_symbol",
                                          "start": {
                                            "row": 57,
                                            "column": 15
                                          },
                                          "end": {
                                            "row": 57,
                                            "column": 19
                                          },
                                          "text": ":bin"
                                        },
                                        {
                                          "type": "]",
                                          "start": {
                                            "row": 57,
                                            "column": 19
                                          },
                                          "end": {
                                            "row": 57,
                                            "column": 20
                                          },
                                          "text": "]"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "=",
                                      "start": {
                                        "row": 57,
                                        "column": 21
                                      },
                                      "end": {
                                        "row": 57,
                                        "column": 22
                                      },
                                      "text": "="
                                    },
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 57,
                                        "column": 23
                                      },
                                      "end": {
                                        "row": 57,
                                        "column": 38
                                      },
                                      "text": "msg.rest_string",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 57,
                                            "column": 23
                                          },
                                          "end": {
                                            "row": 57,
                                            "column": 26
                                          },
                                          "text": "msg"
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 57,
                                            "column": 26
                                          },
                                          "end": {
                                            "row": 57,
                                            "column": 27
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 57,
                                            "column": 27
                                          },
                                          "end": {
                                            "row": 57,
                                            "column": 38
                                          },
                                          "text": "rest_string"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "comment",
                                  "start": {
                                    "row": 58,
                                    "column": 10
                                  },
                                  "end": {
                                    "row": 58,
                                    "column": 87
                                  },
                                  "text": "# If this was the last data fragment of a C-STORE, we need to send a receipt:"
                                },
                                {
                                  "type": "comment",
                                  "start": {
                                    "row": 59,
                                    "column": 10
                                  },
                                  "end": {
                                    "row": 59,
                                    "column": 177
                                  },
                                  "text": "# (However, for, say a C-FIND-RSP, which indicates the end of the query results, this method shall not be called) (Command Field (0000,0100) holds information on this)"
                                },
                                {
                                  "type": "if_modifier",
                                  "start": {
                                    "row": 60,
                                    "column": 10
                                  },
                                  "end": {
                                    "row": 60,
                                    "column": 83
                                  },
                                  "text": "handle_response if info[:presentation_context_flag] == DATA_LAST_FRAGMENT",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 60,
                                        "column": 10
                                      },
                                      "end": {
                                        "row": 60,
                                        "column": 25
                                      },
                                      "text": "handle_response"
                                    },
                                    {
                                      "type": "if",
                                      "start": {
                                        "row": 60,
                                        "column": 26
                                      },
                                      "end": {
                                        "row": 60,
                                        "column": 28
                                      },
                                      "text": "if"
                                    },
                                    {
                                      "type": "binary",
                                      "start": {
                                        "row": 60,
                                        "column": 29
                                      },
                                      "end": {
                                        "row": 60,
                                        "column": 83
                                      },
                                      "text": "info[:presentation_context_flag] == DATA_LAST_FRAGMENT",
                                      "children": [
                                        {
                                          "type": "element_reference",
                                          "start": {
                                            "row": 60,
                                            "column": 29
                                          },
                                          "end": {
                                            "row": 60,
                                            "column": 61
                                          },
                                          "text": "info[:presentation_context_flag]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 60,
                                                "column": 29
                                              },
                                              "end": {
                                                "row": 60,
                                                "column": 33
                                              },
                                              "text": "info"
                                            },
                                            {
                                              "type": "[",
                                              "start": {
                                                "row": 60,
                                                "column": 33
                                              },
                                              "end": {
                                                "row": 60,
                                                "column": 34
                                              },
                                              "text": "["
                                            },
                                            {
                                              "type": "simple_symbol",
                                              "start": {
                                                "row": 60,
                                                "column": 34
                                              },
                                              "end": {
                                                "row": 60,
                                                "column": 60
                                              },
                                              "text": ":presentation_context_flag"
                                            },
                                            {
                                              "type": "]",
                                              "start": {
                                                "row": 60,
                                                "column": 60
                                              },
                                              "end": {
                                                "row": 60,
                                                "column": 61
                                              },
                                              "text": "]"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "==",
                                          "start": {
                                            "row": 60,
                                            "column": 62
                                          },
                                          "end": {
                                            "row": 60,
                                            "column": 64
                                          },
                                          "text": "=="
                                        },
                                        {
                                          "type": "constant",
                                          "start": {
                                            "row": 60,
                                            "column": 65
                                          },
                                          "end": {
                                            "row": 60,
                                            "column": 83
                                          },
                                          "text": "DATA_LAST_FRAGMENT"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "else",
                              "start": {
                                "row": 61,
                                "column": 8
                              },
                              "end": {
                                "row": 88,
                                "column": 34
                              },
                              "text": "else\n          # Decode data elements:\n          while msg.index < last_index do\n            # Tag (4 bytes)\n            tag = msg.decode_tag\n            if @explicit\n              # Type (VR) (2 bytes):\n              type = msg.decode(2, \"STR\")\n              # Length (2 bytes)\n              length = msg.decode(2, \"US\")\n            else\n              # Implicit:\n              type = nil # (needs to be defined as nil here or it will take the value from the previous step in the loop)\n              # Length (4 bytes)\n              length = msg.decode(4, \"UL\")\n            end\n            if length > msg.rest_length\n              logger.error(\"The specified length of the data element value exceeds the remaining length of the received message!\")\n            end\n            # Fetch type (if not defined already) for this data element:\n            type = LIBRARY.element(tag).vr unless type\n            # Value (variable length)\n            value = msg.decode(length, type)\n            # Put tag and value in a hash:\n            results[tag] = value\n          end\n          # The results hash is put in an array along with (possibly) other results:\n          info[:results] = results",
                              "children": [
                                {
                                  "type": "else",
                                  "start": {
                                    "row": 61,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 61,
                                    "column": 12
                                  },
                                  "text": "else"
                                },
                                {
                                  "type": "comment",
                                  "start": {
                                    "row": 62,
                                    "column": 10
                                  },
                                  "end": {
                                    "row": 62,
                                    "column": 33
                                  },
                                  "text": "# Decode data elements:"
                                },
                                {
                                  "type": "while",
                                  "start": {
                                    "row": 63,
                                    "column": 10
                                  },
                                  "end": {
                                    "row": 86,
                                    "column": 13
                                  },
                                  "text": "while msg.index < last_index do\n            # Tag (4 bytes)\n            tag = msg.decode_tag\n            if @explicit\n              # Type (VR) (2 bytes):\n              type = msg.decode(2, \"STR\")\n              # Length (2 bytes)\n              length = msg.decode(2, \"US\")\n            else\n              # Implicit:\n              type = nil # (needs to be defined as nil here or it will take the value from the previous step in the loop)\n              # Length (4 bytes)\n              length = msg.decode(4, \"UL\")\n            end\n            if length > msg.rest_length\n              logger.error(\"The specified length of the data element value exceeds the remaining length of the received message!\")\n            end\n            # Fetch type (if not defined already) for this data element:\n            type = LIBRARY.element(tag).vr unless type\n            # Value (variable length)\n            value = msg.decode(length, type)\n            # Put tag and value in a hash:\n            results[tag] = value\n          end",
                                  "children": [
                                    {
                                      "type": "while",
                                      "start": {
                                        "row": 63,
                                        "column": 10
                                      },
                                      "end": {
                                        "row": 63,
                                        "column": 15
                                      },
                                      "text": "while"
                                    },
                                    {
                                      "type": "binary",
                                      "start": {
                                        "row": 63,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 63,
                                        "column": 38
                                      },
                                      "text": "msg.index < last_index",
                                      "children": [
                                        {
                                          "type": "call",
                                          "start": {
                                            "row": 63,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 63,
                                            "column": 25
                                          },
                                          "text": "msg.index",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 63,
                                                "column": 16
                                              },
                                              "end": {
                                                "row": 63,
                                                "column": 19
                                              },
                                              "text": "msg"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 63,
                                                "column": 19
                                              },
                                              "end": {
                                                "row": 63,
                                                "column": 20
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 63,
                                                "column": 20
                                              },
                                              "end": {
                                                "row": 63,
                                                "column": 25
                                              },
                                              "text": "index"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "<",
                                          "start": {
                                            "row": 63,
                                            "column": 26
                                          },
                                          "end": {
                                            "row": 63,
                                            "column": 27
                                          },
                                          "text": "<"
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 63,
                                            "column": 28
                                          },
                                          "end": {
                                            "row": 63,
                                            "column": 38
                                          },
                                          "text": "last_index"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "do",
                                      "start": {
                                        "row": 63,
                                        "column": 39
                                      },
                                      "end": {
                                        "row": 86,
                                        "column": 13
                                      },
                                      "text": "do\n            # Tag (4 bytes)\n            tag = msg.decode_tag\n            if @explicit\n              # Type (VR) (2 bytes):\n              type = msg.decode(2, \"STR\")\n              # Length (2 bytes)\n              length = msg.decode(2, \"US\")\n            else\n              # Implicit:\n              type = nil # (needs to be defined as nil here or it will take the value from the previous step in the loop)\n              # Length (4 bytes)\n              length = msg.decode(4, \"UL\")\n            end\n            if length > msg.rest_length\n              logger.error(\"The specified length of the data element value exceeds the remaining length of the received message!\")\n            end\n            # Fetch type (if not defined already) for this data element:\n            type = LIBRARY.element(tag).vr unless type\n            # Value (variable length)\n            value = msg.decode(length, type)\n            # Put tag and value in a hash:\n            results[tag] = value\n          end",
                                      "children": [
                                        {
                                          "type": "do",
                                          "start": {
                                            "row": 63,
                                            "column": 39
                                          },
                                          "end": {
                                            "row": 63,
                                            "column": 41
                                          },
                                          "text": "do"
                                        },
                                        {
                                          "type": "comment",
                                          "start": {
                                            "row": 64,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 64,
                                            "column": 27
                                          },
                                          "text": "# Tag (4 bytes)"
                                        },
                                        {
                                          "type": "assignment",
                                          "start": {
                                            "row": 65,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 65,
                                            "column": 32
                                          },
                                          "text": "tag = msg.decode_tag",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 65,
                                                "column": 12
                                              },
                                              "end": {
                                                "row": 65,
                                                "column": 15
                                              },
                                              "text": "tag"
                                            },
                                            {
                                              "type": "=",
                                              "start": {
                                                "row": 65,
                                                "column": 16
                                              },
                                              "end": {
                                                "row": 65,
                                                "column": 17
                                              },
                                              "text": "="
                                            },
                                            {
                                              "type": "call",
                                              "start": {
                                                "row": 65,
                                                "column": 18
                                              },
                                              "end": {
                                                "row": 65,
                                                "column": 32
                                              },
                                              "text": "msg.decode_tag",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 65,
                                                    "column": 18
                                                  },
                                                  "end": {
                                                    "row": 65,
                                                    "column": 21
                                                  },
                                                  "text": "msg"
                                                },
                                                {
                                                  "type": ".",
                                                  "start": {
                                                    "row": 65,
                                                    "column": 21
                                                  },
                                                  "end": {
                                                    "row": 65,
                                                    "column": 22
                                                  },
                                                  "text": "."
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 65,
                                                    "column": 22
                                                  },
                                                  "end": {
                                                    "row": 65,
                                                    "column": 32
                                                  },
                                                  "text": "decode_tag"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "if",
                                          "start": {
                                            "row": 66,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 76,
                                            "column": 15
                                          },
                                          "text": "if @explicit\n              # Type (VR) (2 bytes):\n              type = msg.decode(2, \"STR\")\n              # Length (2 bytes)\n              length = msg.decode(2, \"US\")\n            else\n              # Implicit:\n              type = nil # (needs to be defined as nil here or it will take the value from the previous step in the loop)\n              # Length (4 bytes)\n              length = msg.decode(4, \"UL\")\n            end",
                                          "children": [
                                            {
                                              "type": "if",
                                              "start": {
                                                "row": 66,
                                                "column": 12
                                              },
                                              "end": {
                                                "row": 66,
                                                "column": 14
                                              },
                                              "text": "if"
                                            },
                                            {
                                              "type": "instance_variable",
                                              "start": {
                                                "row": 66,
                                                "column": 15
                                              },
                                              "end": {
                                                "row": 66,
                                                "column": 24
                                              },
                                              "text": "@explicit"
                                            },
                                            {
                                              "type": "comment",
                                              "start": {
                                                "row": 67,
                                                "column": 14
                                              },
                                              "end": {
                                                "row": 67,
                                                "column": 36
                                              },
                                              "text": "# Type (VR) (2 bytes):"
                                            },
                                            {
                                              "type": "then",
                                              "start": {
                                                "row": 67,
                                                "column": 36
                                              },
                                              "end": {
                                                "row": 70,
                                                "column": 42
                                              },
                                              "text": "\n              type = msg.decode(2, \"STR\")\n              # Length (2 bytes)\n              length = msg.decode(2, \"US\")",
                                              "children": [
                                                {
                                                  "type": "assignment",
                                                  "start": {
                                                    "row": 68,
                                                    "column": 14
                                                  },
                                                  "end": {
                                                    "row": 68,
                                                    "column": 41
                                                  },
                                                  "text": "type = msg.decode(2, \"STR\")",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 68,
                                                        "column": 14
                                                      },
                                                      "end": {
                                                        "row": 68,
                                                        "column": 18
                                                      },
                                                      "text": "type"
                                                    },
                                                    {
                                                      "type": "=",
                                                      "start": {
                                                        "row": 68,
                                                        "column": 19
                                                      },
                                                      "end": {
                                                        "row": 68,
                                                        "column": 20
                                                      },
                                                      "text": "="
                                                    },
                                                    {
                                                      "type": "call",
                                                      "start": {
                                                        "row": 68,
                                                        "column": 21
                                                      },
                                                      "end": {
                                                        "row": 68,
                                                        "column": 41
                                                      },
                                                      "text": "msg.decode(2, \"STR\")",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 68,
                                                            "column": 21
                                                          },
                                                          "end": {
                                                            "row": 68,
                                                            "column": 24
                                                          },
                                                          "text": "msg"
                                                        },
                                                        {
                                                          "type": ".",
                                                          "start": {
                                                            "row": 68,
                                                            "column": 24
                                                          },
                                                          "end": {
                                                            "row": 68,
                                                            "column": 25
                                                          },
                                                          "text": "."
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 68,
                                                            "column": 25
                                                          },
                                                          "end": {
                                                            "row": 68,
                                                            "column": 31
                                                          },
                                                          "text": "decode"
                                                        },
                                                        {
                                                          "type": "argument_list",
                                                          "start": {
                                                            "row": 68,
                                                            "column": 31
                                                          },
                                                          "end": {
                                                            "row": 68,
                                                            "column": 41
                                                          },
                                                          "text": "(2, \"STR\")",
                                                          "children": [
                                                            {
                                                              "type": "(",
                                                              "start": {
                                                                "row": 68,
                                                                "column": 31
                                                              },
                                                              "end": {
                                                                "row": 68,
                                                                "column": 32
                                                              },
                                                              "text": "("
                                                            },
                                                            {
                                                              "type": "integer",
                                                              "start": {
                                                                "row": 68,
                                                                "column": 32
                                                              },
                                                              "end": {
                                                                "row": 68,
                                                                "column": 33
                                                              },
                                                              "text": "2"
                                                            },
                                                            {
                                                              "type": ",",
                                                              "start": {
                                                                "row": 68,
                                                                "column": 33
                                                              },
                                                              "end": {
                                                                "row": 68,
                                                                "column": 34
                                                              },
                                                              "text": ","
                                                            },
                                                            {
                                                              "type": "string",
                                                              "start": {
                                                                "row": 68,
                                                                "column": 35
                                                              },
                                                              "end": {
                                                                "row": 68,
                                                                "column": 40
                                                              },
                                                              "text": "\"STR\"",
                                                              "children": [
                                                                {
                                                                  "type": "\"",
                                                                  "start": {
                                                                    "row": 68,
                                                                    "column": 35
                                                                  },
                                                                  "end": {
                                                                    "row": 68,
                                                                    "column": 36
                                                                  },
                                                                  "text": "\""
                                                                },
                                                                {
                                                                  "type": "string_content",
                                                                  "start": {
                                                                    "row": 68,
                                                                    "column": 36
                                                                  },
                                                                  "end": {
                                                                    "row": 68,
                                                                    "column": 39
                                                                  },
                                                                  "text": "STR"
                                                                },
                                                                {
                                                                  "type": "\"",
                                                                  "start": {
                                                                    "row": 68,
                                                                    "column": 39
                                                                  },
                                                                  "end": {
                                                                    "row": 68,
                                                                    "column": 40
                                                                  },
                                                                  "text": "\""
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": ")",
                                                              "start": {
                                                                "row": 68,
                                                                "column": 40
                                                              },
                                                              "end": {
                                                                "row": 68,
                                                                "column": 41
                                                              },
                                                              "text": ")"
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "comment",
                                                  "start": {
                                                    "row": 69,
                                                    "column": 14
                                                  },
                                                  "end": {
                                                    "row": 69,
                                                    "column": 32
                                                  },
                                                  "text": "# Length (2 bytes)"
                                                },
                                                {
                                                  "type": "assignment",
                                                  "start": {
                                                    "row": 70,
                                                    "column": 14
                                                  },
                                                  "end": {
                                                    "row": 70,
                                                    "column": 42
                                                  },
                                                  "text": "length = msg.decode(2, \"US\")",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 70,
                                                        "column": 14
                                                      },
                                                      "end": {
                                                        "row": 70,
                                                        "column": 20
                                                      },
                                                      "text": "length"
                                                    },
                                                    {
                                                      "type": "=",
                                                      "start": {
                                                        "row": 70,
                                                        "column": 21
                                                      },
                                                      "end": {
                                                        "row": 70,
                                                        "column": 22
                                                      },
                                                      "text": "="
                                                    },
                                                    {
                                                      "type": "call",
                                                      "start": {
                                                        "row": 70,
                                                        "column": 23
                                                      },
                                                      "end": {
                                                        "row": 70,
                                                        "column": 42
                                                      },
                                                      "text": "msg.decode(2, \"US\")",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 70,
                                                            "column": 23
                                                          },
                                                          "end": {
                                                            "row": 70,
                                                            "column": 26
                                                          },
                                                          "text": "msg"
                                                        },
                                                        {
                                                          "type": ".",
                                                          "start": {
                                                            "row": 70,
                                                            "column": 26
                                                          },
                                                          "end": {
                                                            "row": 70,
                                                            "column": 27
                                                          },
                                                          "text": "."
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 70,
                                                            "column": 27
                                                          },
                                                          "end": {
                                                            "row": 70,
                                                            "column": 33
                                                          },
                                                          "text": "decode"
                                                        },
                                                        {
                                                          "type": "argument_list",
                                                          "start": {
                                                            "row": 70,
                                                            "column": 33
                                                          },
                                                          "end": {
                                                            "row": 70,
                                                            "column": 42
                                                          },
                                                          "text": "(2, \"US\")",
                                                          "children": [
                                                            {
                                                              "type": "(",
                                                              "start": {
                                                                "row": 70,
                                                                "column": 33
                                                              },
                                                              "end": {
                                                                "row": 70,
                                                                "column": 34
                                                              },
                                                              "text": "("
                                                            },
                                                            {
                                                              "type": "integer",
                                                              "start": {
                                                                "row": 70,
                                                                "column": 34
                                                              },
                                                              "end": {
                                                                "row": 70,
                                                                "column": 35
                                                              },
                                                              "text": "2"
                                                            },
                                                            {
                                                              "type": ",",
                                                              "start": {
                                                                "row": 70,
                                                                "column": 35
                                                              },
                                                              "end": {
                                                                "row": 70,
                                                                "column": 36
                                                              },
                                                              "text": ","
                                                            },
                                                            {
                                                              "type": "string",
                                                              "start": {
                                                                "row": 70,
                                                                "column": 37
                                                              },
                                                              "end": {
                                                                "row": 70,
                                                                "column": 41
                                                              },
                                                              "text": "\"US\"",
                                                              "children": [
                                                                {
                                                                  "type": "\"",
                                                                  "start": {
                                                                    "row": 70,
                                                                    "column": 37
                                                                  },
                                                                  "end": {
                                                                    "row": 70,
                                                                    "column": 38
                                                                  },
                                                                  "text": "\""
                                                                },
                                                                {
                                                                  "type": "string_content",
                                                                  "start": {
                                                                    "row": 70,
                                                                    "column": 38
                                                                  },
                                                                  "end": {
                                                                    "row": 70,
                                                                    "column": 40
                                                                  },
                                                                  "text": "US"
                                                                },
                                                                {
                                                                  "type": "\"",
                                                                  "start": {
                                                                    "row": 70,
                                                                    "column": 40
                                                                  },
                                                                  "end": {
                                                                    "row": 70,
                                                                    "column": 41
                                                                  },
                                                                  "text": "\""
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": ")",
                                                              "start": {
                                                                "row": 70,
                                                                "column": 41
                                                              },
                                                              "end": {
                                                                "row": 70,
                                                                "column": 42
                                                              },
                                                              "text": ")"
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "else",
                                              "start": {
                                                "row": 71,
                                                "column": 12
                                              },
                                              "end": {
                                                "row": 75,
                                                "column": 42
                                              },
                                              "text": "else\n              # Implicit:\n              type = nil # (needs to be defined as nil here or it will take the value from the previous step in the loop)\n              # Length (4 bytes)\n              length = msg.decode(4, \"UL\")",
                                              "children": [
                                                {
                                                  "type": "else",
                                                  "start": {
                                                    "row": 71,
                                                    "column": 12
                                                  },
                                                  "end": {
                                                    "row": 71,
                                                    "column": 16
                                                  },
                                                  "text": "else"
                                                },
                                                {
                                                  "type": "comment",
                                                  "start": {
                                                    "row": 72,
                                                    "column": 14
                                                  },
                                                  "end": {
                                                    "row": 72,
                                                    "column": 25
                                                  },
                                                  "text": "# Implicit:"
                                                },
                                                {
                                                  "type": "assignment",
                                                  "start": {
                                                    "row": 73,
                                                    "column": 14
                                                  },
                                                  "end": {
                                                    "row": 73,
                                                    "column": 24
                                                  },
                                                  "text": "type = nil",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 73,
                                                        "column": 14
                                                      },
                                                      "end": {
                                                        "row": 73,
                                                        "column": 18
                                                      },
                                                      "text": "type"
                                                    },
                                                    {
                                                      "type": "=",
                                                      "start": {
                                                        "row": 73,
                                                        "column": 19
                                                      },
                                                      "end": {
                                                        "row": 73,
                                                        "column": 20
                                                      },
                                                      "text": "="
                                                    },
                                                    {
                                                      "type": "nil",
                                                      "start": {
                                                        "row": 73,
                                                        "column": 21
                                                      },
                                                      "end": {
                                                        "row": 73,
                                                        "column": 24
                                                      },
                                                      "text": "nil",
                                                      "children": [
                                                        {
                                                          "type": "nil",
                                                          "start": {
                                                            "row": 73,
                                                            "column": 21
                                                          },
                                                          "end": {
                                                            "row": 73,
                                                            "column": 24
                                                          },
                                                          "text": "nil"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "comment",
                                                  "start": {
                                                    "row": 73,
                                                    "column": 25
                                                  },
                                                  "end": {
                                                    "row": 73,
                                                    "column": 121
                                                  },
                                                  "text": "# (needs to be defined as nil here or it will take the value from the previous step in the loop)"
                                                },
                                                {
                                                  "type": "comment",
                                                  "start": {
                                                    "row": 74,
                                                    "column": 14
                                                  },
                                                  "end": {
                                                    "row": 74,
                                                    "column": 32
                                                  },
                                                  "text": "# Length (4 bytes)"
                                                },
                                                {
                                                  "type": "assignment",
                                                  "start": {
                                                    "row": 75,
                                                    "column": 14
                                                  },
                                                  "end": {
                                                    "row": 75,
                                                    "column": 42
                                                  },
                                                  "text": "length = msg.decode(4, \"UL\")",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 75,
                                                        "column": 14
                                                      },
                                                      "end": {
                                                        "row": 75,
                                                        "column": 20
                                                      },
                                                      "text": "length"
                                                    },
                                                    {
                                                      "type": "=",
                                                      "start": {
                                                        "row": 75,
                                                        "column": 21
                                                      },
                                                      "end": {
                                                        "row": 75,
                                                        "column": 22
                                                      },
                                                      "text": "="
                                                    },
                                                    {
                                                      "type": "call",
                                                      "start": {
                                                        "row": 75,
                                                        "column": 23
                                                      },
                                                      "end": {
                                                        "row": 75,
                                                        "column": 42
                                                      },
                                                      "text": "msg.decode(4, \"UL\")",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 75,
                                                            "column": 23
                                                          },
                                                          "end": {
                                                            "row": 75,
                                                            "column": 26
                                                          },
                                                          "text": "msg"
                                                        },
                                                        {
                                                          "type": ".",
                                                          "start": {
                                                            "row": 75,
                                                            "column": 26
                                                          },
                                                          "end": {
                                                            "row": 75,
                                                            "column": 27
                                                          },
                                                          "text": "."
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 75,
                                                            "column": 27
                                                          },
                                                          "end": {
                                                            "row": 75,
                                                            "column": 33
                                                          },
                                                          "text": "decode"
                                                        },
                                                        {
                                                          "type": "argument_list",
                                                          "start": {
                                                            "row": 75,
                                                            "column": 33
                                                          },
                                                          "end": {
                                                            "row": 75,
                                                            "column": 42
                                                          },
                                                          "text": "(4, \"UL\")",
                                                          "children": [
                                                            {
                                                              "type": "(",
                                                              "start": {
                                                                "row": 75,
                                                                "column": 33
                                                              },
                                                              "end": {
                                                                "row": 75,
                                                                "column": 34
                                                              },
                                                              "text": "("
                                                            },
                                                            {
                                                              "type": "integer",
                                                              "start": {
                                                                "row": 75,
                                                                "column": 34
                                                              },
                                                              "end": {
                                                                "row": 75,
                                                                "column": 35
                                                              },
                                                              "text": "4"
                                                            },
                                                            {
                                                              "type": ",",
                                                              "start": {
                                                                "row": 75,
                                                                "column": 35
                                                              },
                                                              "end": {
                                                                "row": 75,
                                                                "column": 36
                                                              },
                                                              "text": ","
                                                            },
                                                            {
                                                              "type": "string",
                                                              "start": {
                                                                "row": 75,
                                                                "column": 37
                                                              },
                                                              "end": {
                                                                "row": 75,
                                                                "column": 41
                                                              },
                                                              "text": "\"UL\"",
                                                              "children": [
                                                                {
                                                                  "type": "\"",
                                                                  "start": {
                                                                    "row": 75,
                                                                    "column": 37
                                                                  },
                                                                  "end": {
                                                                    "row": 75,
                                                                    "column": 38
                                                                  },
                                                                  "text": "\""
                                                                },
                                                                {
                                                                  "type": "string_content",
                                                                  "start": {
                                                                    "row": 75,
                                                                    "column": 38
                                                                  },
                                                                  "end": {
                                                                    "row": 75,
                                                                    "column": 40
                                                                  },
                                                                  "text": "UL"
                                                                },
                                                                {
                                                                  "type": "\"",
                                                                  "start": {
                                                                    "row": 75,
                                                                    "column": 40
                                                                  },
                                                                  "end": {
                                                                    "row": 75,
                                                                    "column": 41
                                                                  },
                                                                  "text": "\""
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": ")",
                                                              "start": {
                                                                "row": 75,
                                                                "column": 41
                                                              },
                                                              "end": {
                                                                "row": 75,
                                                                "column": 42
                                                              },
                                                              "text": ")"
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "end",
                                              "start": {
                                                "row": 76,
                                                "column": 12
                                              },
                                              "end": {
                                                "row": 76,
                                                "column": 15
                                              },
                                              "text": "end"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "if",
                                          "start": {
                                            "row": 77,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 79,
                                            "column": 15
                                          },
                                          "text": "if length > msg.rest_length\n              logger.error(\"The specified length of the data element value exceeds the remaining length of the received message!\")\n            end",
                                          "children": [
                                            {
                                              "type": "if",
                                              "start": {
                                                "row": 77,
                                                "column": 12
                                              },
                                              "end": {
                                                "row": 77,
                                                "column": 14
                                              },
                                              "text": "if"
                                            },
                                            {
                                              "type": "binary",
                                              "start": {
                                                "row": 77,
                                                "column": 15
                                              },
                                              "end": {
                                                "row": 77,
                                                "column": 39
                                              },
                                              "text": "length > msg.rest_length",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 77,
                                                    "column": 15
                                                  },
                                                  "end": {
                                                    "row": 77,
                                                    "column": 21
                                                  },
                                                  "text": "length"
                                                },
                                                {
                                                  "type": ">",
                                                  "start": {
                                                    "row": 77,
                                                    "column": 22
                                                  },
                                                  "end": {
                                                    "row": 77,
                                                    "column": 23
                                                  },
                                                  "text": ">"
                                                },
                                                {
                                                  "type": "call",
                                                  "start": {
                                                    "row": 77,
                                                    "column": 24
                                                  },
                                                  "end": {
                                                    "row": 77,
                                                    "column": 39
                                                  },
                                                  "text": "msg.rest_length",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 77,
                                                        "column": 24
                                                      },
                                                      "end": {
                                                        "row": 77,
                                                        "column": 27
                                                      },
                                                      "text": "msg"
                                                    },
                                                    {
                                                      "type": ".",
                                                      "start": {
                                                        "row": 77,
                                                        "column": 27
                                                      },
                                                      "end": {
                                                        "row": 77,
                                                        "column": 28
                                                      },
                                                      "text": "."
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 77,
                                                        "column": 28
                                                      },
                                                      "end": {
                                                        "row": 77,
                                                        "column": 39
                                                      },
                                                      "text": "rest_length"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "then",
                                              "start": {
                                                "row": 77,
                                                "column": 39
                                              },
                                              "end": {
                                                "row": 78,
                                                "column": 130
                                              },
                                              "text": "\n              logger.error(\"The specified length of the data element value exceeds the remaining length of the received message!\")",
                                              "children": [
                                                {
                                                  "type": "call",
                                                  "start": {
                                                    "row": 78,
                                                    "column": 14
                                                  },
                                                  "end": {
                                                    "row": 78,
                                                    "column": 130
                                                  },
                                                  "text": "logger.error(\"The specified length of the data element value exceeds the remaining length of the received message!\")",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 78,
                                                        "column": 14
                                                      },
                                                      "end": {
                                                        "row": 78,
                                                        "column": 20
                                                      },
                                                      "text": "logger"
                                                    },
                                                    {
                                                      "type": ".",
                                                      "start": {
                                                        "row": 78,
                                                        "column": 20
                                                      },
                                                      "end": {
                                                        "row": 78,
                                                        "column": 21
                                                      },
                                                      "text": "."
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 78,
                                                        "column": 21
                                                      },
                                                      "end": {
                                                        "row": 78,
                                                        "column": 26
                                                      },
                                                      "text": "error"
                                                    },
                                                    {
                                                      "type": "argument_list",
                                                      "start": {
                                                        "row": 78,
                                                        "column": 26
                                                      },
                                                      "end": {
                                                        "row": 78,
                                                        "column": 130
                                                      },
                                                      "text": "(\"The specified length of the data element value exceeds the remaining length of the received message!\")",
                                                      "children": [
                                                        {
                                                          "type": "(",
                                                          "start": {
                                                            "row": 78,
                                                            "column": 26
                                                          },
                                                          "end": {
                                                            "row": 78,
                                                            "column": 27
                                                          },
                                                          "text": "("
                                                        },
                                                        {
                                                          "type": "string",
                                                          "start": {
                                                            "row": 78,
                                                            "column": 27
                                                          },
                                                          "end": {
                                                            "row": 78,
                                                            "column": 129
                                                          },
                                                          "text": "\"The specified length of the data element value exceeds the remaining length of the received message!\"",
                                                          "children": [
                                                            {
                                                              "type": "\"",
                                                              "start": {
                                                                "row": 78,
                                                                "column": 27
                                                              },
                                                              "end": {
                                                                "row": 78,
                                                                "column": 28
                                                              },
                                                              "text": "\""
                                                            },
                                                            {
                                                              "type": "string_content",
                                                              "start": {
                                                                "row": 78,
                                                                "column": 28
                                                              },
                                                              "end": {
                                                                "row": 78,
                                                                "column": 128
                                                              },
                                                              "text": "The specified length of the data element value exceeds the remaining length of the received message!"
                                                            },
                                                            {
                                                              "type": "\"",
                                                              "start": {
                                                                "row": 78,
                                                                "column": 128
                                                              },
                                                              "end": {
                                                                "row": 78,
                                                                "column": 129
                                                              },
                                                              "text": "\""
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": ")",
                                                          "start": {
                                                            "row": 78,
                                                            "column": 129
                                                          },
                                                          "end": {
                                                            "row": 78,
                                                            "column": 130
                                                          },
                                                          "text": ")"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "end",
                                              "start": {
                                                "row": 79,
                                                "column": 12
                                              },
                                              "end": {
                                                "row": 79,
                                                "column": 15
                                              },
                                              "text": "end"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "comment",
                                          "start": {
                                            "row": 80,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 80,
                                            "column": 72
                                          },
                                          "text": "# Fetch type (if not defined already) for this data element:"
                                        },
                                        {
                                          "type": "unless_modifier",
                                          "start": {
                                            "row": 81,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 81,
                                            "column": 54
                                          },
                                          "text": "type = LIBRARY.element(tag).vr unless type",
                                          "children": [
                                            {
                                              "type": "assignment",
                                              "start": {
                                                "row": 81,
                                                "column": 12
                                              },
                                              "end": {
                                                "row": 81,
                                                "column": 42
                                              },
                                              "text": "type = LIBRARY.element(tag).vr",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 81,
                                                    "column": 12
                                                  },
                                                  "end": {
                                                    "row": 81,
                                                    "column": 16
                                                  },
                                                  "text": "type"
                                                },
                                                {
                                                  "type": "=",
                                                  "start": {
                                                    "row": 81,
                                                    "column": 17
                                                  },
                                                  "end": {
                                                    "row": 81,
                                                    "column": 18
                                                  },
                                                  "text": "="
                                                },
                                                {
                                                  "type": "call",
                                                  "start": {
                                                    "row": 81,
                                                    "column": 19
                                                  },
                                                  "end": {
                                                    "row": 81,
                                                    "column": 42
                                                  },
                                                  "text": "LIBRARY.element(tag).vr",
                                                  "children": [
                                                    {
                                                      "type": "call",
                                                      "start": {
                                                        "row": 81,
                                                        "column": 19
                                                      },
                                                      "end": {
                                                        "row": 81,
                                                        "column": 39
                                                      },
                                                      "text": "LIBRARY.element(tag)",
                                                      "children": [
                                                        {
                                                          "type": "constant",
                                                          "start": {
                                                            "row": 81,
                                                            "column": 19
                                                          },
                                                          "end": {
                                                            "row": 81,
                                                            "column": 26
                                                          },
                                                          "text": "LIBRARY"
                                                        },
                                                        {
                                                          "type": ".",
                                                          "start": {
                                                            "row": 81,
                                                            "column": 26
                                                          },
                                                          "end": {
                                                            "row": 81,
                                                            "column": 27
                                                          },
                                                          "text": "."
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 81,
                                                            "column": 27
                                                          },
                                                          "end": {
                                                            "row": 81,
                                                            "column": 34
                                                          },
                                                          "text": "element"
                                                        },
                                                        {
                                                          "type": "argument_list",
                                                          "start": {
                                                            "row": 81,
                                                            "column": 34
                                                          },
                                                          "end": {
                                                            "row": 81,
                                                            "column": 39
                                                          },
                                                          "text": "(tag)",
                                                          "children": [
                                                            {
                                                              "type": "(",
                                                              "start": {
                                                                "row": 81,
                                                                "column": 34
                                                              },
                                                              "end": {
                                                                "row": 81,
                                                                "column": 35
                                                              },
                                                              "text": "("
                                                            },
                                                            {
                                                              "type": "identifier",
                                                              "start": {
                                                                "row": 81,
                                                                "column": 35
                                                              },
                                                              "end": {
                                                                "row": 81,
                                                                "column": 38
                                                              },
                                                              "text": "tag"
                                                            },
                                                            {
                                                              "type": ")",
                                                              "start": {
                                                                "row": 81,
                                                                "column": 38
                                                              },
                                                              "end": {
                                                                "row": 81,
                                                                "column": 39
                                                              },
                                                              "text": ")"
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ".",
                                                      "start": {
                                                        "row": 81,
                                                        "column": 39
                                                      },
                                                      "end": {
                                                        "row": 81,
                                                        "column": 40
                                                      },
                                                      "text": "."
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 81,
                                                        "column": 40
                                                      },
                                                      "end": {
                                                        "row": 81,
                                                        "column": 42
                                                      },
                                                      "text": "vr"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "unless",
                                              "start": {
                                                "row": 81,
                                                "column": 43
                                              },
                                              "end": {
                                                "row": 81,
                                                "column": 49
                                              },
                                              "text": "unless"
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 81,
                                                "column": 50
                                              },
                                              "end": {
                                                "row": 81,
                                                "column": 54
                                              },
                                              "text": "type"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "comment",
                                          "start": {
                                            "row": 82,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 82,
                                            "column": 37
                                          },
                                          "text": "# Value (variable length)"
                                        },
                                        {
                                          "type": "assignment",
                                          "start": {
                                            "row": 83,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 83,
                                            "column": 44
                                          },
                                          "text": "value = msg.decode(length, type)",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 83,
                                                "column": 12
                                              },
                                              "end": {
                                                "row": 83,
                                                "column": 17
                                              },
                                              "text": "value"
                                            },
                                            {
                                              "type": "=",
                                              "start": {
                                                "row": 83,
                                                "column": 18
                                              },
                                              "end": {
                                                "row": 83,
                                                "column": 19
                                              },
                                              "text": "="
                                            },
                                            {
                                              "type": "call",
                                              "start": {
                                                "row": 83,
                                                "column": 20
                                              },
                                              "end": {
                                                "row": 83,
                                                "column": 44
                                              },
                                              "text": "msg.decode(length, type)",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 83,
                                                    "column": 20
                                                  },
                                                  "end": {
                                                    "row": 83,
                                                    "column": 23
                                                  },
                                                  "text": "msg"
                                                },
                                                {
                                                  "type": ".",
                                                  "start": {
                                                    "row": 83,
                                                    "column": 23
                                                  },
                                                  "end": {
                                                    "row": 83,
                                                    "column": 24
                                                  },
                                                  "text": "."
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 83,
                                                    "column": 24
                                                  },
                                                  "end": {
                                                    "row": 83,
                                                    "column": 30
                                                  },
                                                  "text": "decode"
                                                },
                                                {
                                                  "type": "argument_list",
                                                  "start": {
                                                    "row": 83,
                                                    "column": 30
                                                  },
                                                  "end": {
                                                    "row": 83,
                                                    "column": 44
                                                  },
                                                  "text": "(length, type)",
                                                  "children": [
                                                    {
                                                      "type": "(",
                                                      "start": {
                                                        "row": 83,
                                                        "column": 30
                                                      },
                                                      "end": {
                                                        "row": 83,
                                                        "column": 31
                                                      },
                                                      "text": "("
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 83,
                                                        "column": 31
                                                      },
                                                      "end": {
                                                        "row": 83,
                                                        "column": 37
                                                      },
                                                      "text": "length"
                                                    },
                                                    {
                                                      "type": ",",
                                                      "start": {
                                                        "row": 83,
                                                        "column": 37
                                                      },
                                                      "end": {
                                                        "row": 83,
                                                        "column": 38
                                                      },
                                                      "text": ","
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 83,
                                                        "column": 39
                                                      },
                                                      "end": {
                                                        "row": 83,
                                                        "column": 43
                                                      },
                                                      "text": "type"
                                                    },
                                                    {
                                                      "type": ")",
                                                      "start": {
                                                        "row": 83,
                                                        "column": 43
                                                      },
                                                      "end": {
                                                        "row": 83,
                                                        "column": 44
                                                      },
                                                      "text": ")"
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "comment",
                                          "start": {
                                            "row": 84,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 84,
                                            "column": 42
                                          },
                                          "text": "# Put tag and value in a hash:"
                                        },
                                        {
                                          "type": "assignment",
                                          "start": {
                                            "row": 85,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 85,
                                            "column": 32
                                          },
                                          "text": "results[tag] = value",
                                          "children": [
                                            {
                                              "type": "element_reference",
                                              "start": {
                                                "row": 85,
                                                "column": 12
                                              },
                                              "end": {
                                                "row": 85,
                                                "column": 24
                                              },
                                              "text": "results[tag]",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 85,
                                                    "column": 12
                                                  },
                                                  "end": {
                                                    "row": 85,
                                                    "column": 19
                                                  },
                                                  "text": "results"
                                                },
                                                {
                                                  "type": "[",
                                                  "start": {
                                                    "row": 85,
                                                    "column": 19
                                                  },
                                                  "end": {
                                                    "row": 85,
                                                    "column": 20
                                                  },
                                                  "text": "["
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 85,
                                                    "column": 20
                                                  },
                                                  "end": {
                                                    "row": 85,
                                                    "column": 23
                                                  },
                                                  "text": "tag"
                                                },
                                                {
                                                  "type": "]",
                                                  "start": {
                                                    "row": 85,
                                                    "column": 23
                                                  },
                                                  "end": {
                                                    "row": 85,
                                                    "column": 24
                                                  },
                                                  "text": "]"
                                                }
                                              ]
                                            },
                                            {
                                              "type": "=",
                                              "start": {
                                                "row": 85,
                                                "column": 25
                                              },
                                              "end": {
                                                "row": 85,
                                                "column": 26
                                              },
                                              "text": "="
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 85,
                                                "column": 27
                                              },
                                              "end": {
                                                "row": 85,
                                                "column": 32
                                              },
                                              "text": "value"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "end",
                                          "start": {
                                            "row": 86,
                                            "column": 10
                                          },
                                          "end": {
                                            "row": 86,
                                            "column": 13
                                          },
                                          "text": "end"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "comment",
                                  "start": {
                                    "row": 87,
                                    "column": 10
                                  },
                                  "end": {
                                    "row": 87,
                                    "column": 84
                                  },
                                  "text": "# The results hash is put in an array along with (possibly) other results:"
                                },
                                {
                                  "type": "assignment",
                                  "start": {
                                    "row": 88,
                                    "column": 10
                                  },
                                  "end": {
                                    "row": 88,
                                    "column": 34
                                  },
                                  "text": "info[:results] = results",
                                  "children": [
                                    {
                                      "type": "element_reference",
                                      "start": {
                                        "row": 88,
                                        "column": 10
                                      },
                                      "end": {
                                        "row": 88,
                                        "column": 24
                                      },
                                      "text": "info[:results]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 88,
                                            "column": 10
                                          },
                                          "end": {
                                            "row": 88,
                                            "column": 14
                                          },
                                          "text": "info"
                                        },
                                        {
                                          "type": "[",
                                          "start": {
                                            "row": 88,
                                            "column": 14
                                          },
                                          "end": {
                                            "row": 88,
                                            "column": 15
                                          },
                                          "text": "["
                                        },
                                        {
                                          "type": "simple_symbol",
                                          "start": {
                                            "row": 88,
                                            "column": 15
                                          },
                                          "end": {
                                            "row": 88,
                                            "column": 23
                                          },
                                          "text": ":results"
                                        },
                                        {
                                          "type": "]",
                                          "start": {
                                            "row": 88,
                                            "column": 23
                                          },
                                          "end": {
                                            "row": 88,
                                            "column": 24
                                          },
                                          "text": "]"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "=",
                                      "start": {
                                        "row": 88,
                                        "column": 25
                                      },
                                      "end": {
                                        "row": 88,
                                        "column": 26
                                      },
                                      "text": "="
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 88,
                                        "column": 27
                                      },
                                      "end": {
                                        "row": 88,
                                        "column": 34
                                      },
                                      "text": "results"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "end",
                              "start": {
                                "row": 89,
                                "column": 8
                              },
                              "end": {
                                "row": 89,
                                "column": 11
                              },
                              "text": "end"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "else",
                      "start": {
                        "row": 90,
                        "column": 6
                      },
                      "end": {
                        "row": 93,
                        "column": 22
                      },
                      "text": "else\n        # Unknown.\n        logger.error(\"Unknown presentation context flag received in the query/command response. (#{info[:presentation_context_flag]})\")\n        stop_receiving",
                      "children": [
                        {
                          "type": "else",
                          "start": {
                            "row": 90,
                            "column": 6
                          },
                          "end": {
                            "row": 90,
                            "column": 10
                          },
                          "text": "else"
                        },
                        {
                          "type": "comment",
                          "start": {
                            "row": 91,
                            "column": 8
                          },
                          "end": {
                            "row": 91,
                            "column": 18
                          },
                          "text": "# Unknown."
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 92,
                            "column": 8
                          },
                          "end": {
                            "row": 92,
                            "column": 135
                          },
                          "text": "logger.error(\"Unknown presentation context flag received in the query/command response. (#{info[:presentation_context_flag]})\")",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 92,
                                "column": 8
                              },
                              "end": {
                                "row": 92,
                                "column": 14
                              },
                              "text": "logger"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 92,
                                "column": 14
                              },
                              "end": {
                                "row": 92,
                                "column": 15
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 92,
                                "column": 15
                              },
                              "end": {
                                "row": 92,
                                "column": 20
                              },
                              "text": "error"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 92,
                                "column": 20
                              },
                              "end": {
                                "row": 92,
                                "column": 135
                              },
                              "text": "(\"Unknown presentation context flag received in the query/command response. (#{info[:presentation_context_flag]})\")",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 92,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 92,
                                    "column": 21
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "string",
                                  "start": {
                                    "row": 92,
                                    "column": 21
                                  },
                                  "end": {
                                    "row": 92,
                                    "column": 134
                                  },
                                  "text": "\"Unknown presentation context flag received in the query/command response. (#{info[:presentation_context_flag]})\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start": {
                                        "row": 92,
                                        "column": 21
                                      },
                                      "end": {
                                        "row": 92,
                                        "column": 22
                                      },
                                      "text": "\""
                                    },
                                    {
                                      "type": "string_content",
                                      "start": {
                                        "row": 92,
                                        "column": 22
                                      },
                                      "end": {
                                        "row": 92,
                                        "column": 97
                                      },
                                      "text": "Unknown presentation context flag received in the query/command response. ("
                                    },
                                    {
                                      "type": "interpolation",
                                      "start": {
                                        "row": 92,
                                        "column": 97
                                      },
                                      "end": {
                                        "row": 92,
                                        "column": 132
                                      },
                                      "text": "#{info[:presentation_context_flag]}",
                                      "children": [
                                        {
                                          "type": "#{",
                                          "start": {
                                            "row": 92,
                                            "column": 97
                                          },
                                          "end": {
                                            "row": 92,
                                            "column": 99
                                          },
                                          "text": "#{"
                                        },
                                        {
                                          "type": "element_reference",
                                          "start": {
                                            "row": 92,
                                            "column": 99
                                          },
                                          "end": {
                                            "row": 92,
                                            "column": 131
                                          },
                                          "text": "info[:presentation_context_flag]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 92,
                                                "column": 99
                                              },
                                              "end": {
                                                "row": 92,
                                                "column": 103
                                              },
                                              "text": "info"
                                            },
                                            {
                                              "type": "[",
                                              "start": {
                                                "row": 92,
                                                "column": 103
                                              },
                                              "end": {
                                                "row": 92,
                                                "column": 104
                                              },
                                              "text": "["
                                            },
                                            {
                                              "type": "simple_symbol",
                                              "start": {
                                                "row": 92,
                                                "column": 104
                                              },
                                              "end": {
                                                "row": 92,
                                                "column": 130
                                              },
                                              "text": ":presentation_context_flag"
                                            },
                                            {
                                              "type": "]",
                                              "start": {
                                                "row": 92,
                                                "column": 130
                                              },
                                              "end": {
                                                "row": 92,
                                                "column": 131
                                              },
                                              "text": "]"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "}",
                                          "start": {
                                            "row": 92,
                                            "column": 131
                                          },
                                          "end": {
                                            "row": 92,
                                            "column": 132
                                          },
                                          "text": "}"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "string_content",
                                      "start": {
                                        "row": 92,
                                        "column": 132
                                      },
                                      "end": {
                                        "row": 92,
                                        "column": 133
                                      },
                                      "text": ")"
                                    },
                                    {
                                      "type": "\"",
                                      "start": {
                                        "row": 92,
                                        "column": 133
                                      },
                                      "end": {
                                        "row": 92,
                                        "column": 134
                                      },
                                      "text": "\""
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 92,
                                    "column": 134
                                  },
                                  "end": {
                                    "row": 92,
                                    "column": 135
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 93,
                            "column": 8
                          },
                          "end": {
                            "row": 93,
                            "column": 22
                          },
                          "text": "stop_receiving"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "end",
                  "start": {
                    "row": 94,
                    "column": 6
                  },
                  "end": {
                    "row": 94,
                    "column": 9
                  },
                  "text": "end"
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 95,
                "column": 6
              },
              "end": {
                "row": 95,
                "column": 62
              },
              "text": "# If only parts of the string was read, return the rest:"
            },
            {
              "type": "if_modifier",
              "start": {
                "row": 96,
                "column": 6
              },
              "end": {
                "row": 96,
                "column": 69
              },
              "text": "info[:rest_string] = msg.rest_string if last_index < msg.length",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 96,
                    "column": 6
                  },
                  "end": {
                    "row": 96,
                    "column": 42
                  },
                  "text": "info[:rest_string] = msg.rest_string",
                  "children": [
                    {
                      "type": "element_reference",
                      "start": {
                        "row": 96,
                        "column": 6
                      },
                      "end": {
                        "row": 96,
                        "column": 24
                      },
                      "text": "info[:rest_string]",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 96,
                            "column": 6
                          },
                          "end": {
                            "row": 96,
                            "column": 10
                          },
                          "text": "info"
                        },
                        {
                          "type": "[",
                          "start": {
                            "row": 96,
                            "column": 10
                          },
                          "end": {
                            "row": 96,
                            "column": 11
                          },
                          "text": "["
                        },
                        {
                          "type": "simple_symbol",
                          "start": {
                            "row": 96,
                            "column": 11
                          },
                          "end": {
                            "row": 96,
                            "column": 23
                          },
                          "text": ":rest_string"
                        },
                        {
                          "type": "]",
                          "start": {
                            "row": 96,
                            "column": 23
                          },
                          "end": {
                            "row": 96,
                            "column": 24
                          },
                          "text": "]"
                        }
                      ]
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 96,
                        "column": 25
                      },
                      "end": {
                        "row": 96,
                        "column": 26
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 96,
                        "column": 27
                      },
                      "end": {
                        "row": 96,
                        "column": 42
                      },
                      "text": "msg.rest_string",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 96,
                            "column": 27
                          },
                          "end": {
                            "row": 96,
                            "column": 30
                          },
                          "text": "msg"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 96,
                            "column": 30
                          },
                          "end": {
                            "row": 96,
                            "column": 31
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 96,
                            "column": 31
                          },
                          "end": {
                            "row": 96,
                            "column": 42
                          },
                          "text": "rest_string"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "if",
                  "start": {
                    "row": 96,
                    "column": 43
                  },
                  "end": {
                    "row": 96,
                    "column": 45
                  },
                  "text": "if"
                },
                {
                  "type": "binary",
                  "start": {
                    "row": 96,
                    "column": 46
                  },
                  "end": {
                    "row": 96,
                    "column": 69
                  },
                  "text": "last_index < msg.length",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 96,
                        "column": 46
                      },
                      "end": {
                        "row": 96,
                        "column": 56
                      },
                      "text": "last_index"
                    },
                    {
                      "type": "<",
                      "start": {
                        "row": 96,
                        "column": 57
                      },
                      "end": {
                        "row": 96,
                        "column": 58
                      },
                      "text": "<"
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 96,
                        "column": 59
                      },
                      "end": {
                        "row": 96,
                        "column": 69
                      },
                      "text": "msg.length",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 96,
                            "column": 59
                          },
                          "end": {
                            "row": 96,
                            "column": 62
                          },
                          "text": "msg"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 96,
                            "column": 62
                          },
                          "end": {
                            "row": 96,
                            "column": 63
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 96,
                            "column": 63
                          },
                          "end": {
                            "row": 96,
                            "column": 69
                          },
                          "text": "length"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "assignment",
              "start": {
                "row": 97,
                "column": 6
              },
              "end": {
                "row": 97,
                "column": 25
              },
              "text": "info[:valid] = true",
              "children": [
                {
                  "type": "element_reference",
                  "start": {
                    "row": 97,
                    "column": 6
                  },
                  "end": {
                    "row": 97,
                    "column": 18
                  },
                  "text": "info[:valid]",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 97,
                        "column": 6
                      },
                      "end": {
                        "row": 97,
                        "column": 10
                      },
                      "text": "info"
                    },
                    {
                      "type": "[",
                      "start": {
                        "row": 97,
                        "column": 10
                      },
                      "end": {
                        "row": 97,
                        "column": 11
                      },
                      "text": "["
                    },
                    {
                      "type": "simple_symbol",
                      "start": {
                        "row": 97,
                        "column": 11
                      },
                      "end": {
                        "row": 97,
                        "column": 17
                      },
                      "text": ":valid"
                    },
                    {
                      "type": "]",
                      "start": {
                        "row": 97,
                        "column": 17
                      },
                      "end": {
                        "row": 97,
                        "column": 18
                      },
                      "text": "]"
                    }
                  ]
                },
                {
                  "type": "=",
                  "start": {
                    "row": 97,
                    "column": 19
                  },
                  "end": {
                    "row": 97,
                    "column": 20
                  },
                  "text": "="
                },
                {
                  "type": "true",
                  "start": {
                    "row": 97,
                    "column": 21
                  },
                  "end": {
                    "row": 97,
                    "column": 25
                  },
                  "text": "true"
                }
              ]
            },
            {
              "type": "return",
              "start": {
                "row": 98,
                "column": 6
              },
              "end": {
                "row": 98,
                "column": 17
              },
              "text": "return info",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 98,
                    "column": 6
                  },
                  "end": {
                    "row": 98,
                    "column": 12
                  },
                  "text": "return"
                },
                {
                  "type": "argument_list",
                  "start": {
                    "row": 98,
                    "column": 13
                  },
                  "end": {
                    "row": 98,
                    "column": 17
                  },
                  "text": "info",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 98,
                        "column": 13
                      },
                      "end": {
                        "row": 98,
                        "column": 17
                      },
                      "text": "info"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "end",
          "start": {
            "row": 99,
            "column": 4
          },
          "end": {
            "row": 99,
            "column": 7
          },
          "text": "end"
        }
      ]
    }
  ]
}