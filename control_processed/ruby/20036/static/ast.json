{
  "type": "program",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 33,
    "column": 7
  },
  "text": "def rich_strings_fragments(rich_strings) # :nodoc:\n      # Create a temp format with the default font for unformatted fragments.\n      default = Format.new(0)\n\n      length = 0                     # String length.\n      last = 'format'\n      pos  = 0\n\n      fragments = []\n      rich_strings.each do |token|\n        if token.respond_to?(:xf_index)\n          # Can't allow 2 formats in a row\n          return nil if last == 'format' && pos > 0\n\n          # Token is a format object. Add it to the fragment list.\n          fragments << token\n          last = 'format'\n        else\n          # Token is a string.\n          if last != 'format'\n            # If previous token wasn't a format add one before the string.\n            fragments << default << token\n          else\n            # If previous token was a format just add the string.\n            fragments << token\n          end\n\n          length += token.size    # Keep track of actual string length.\n          last = 'string'\n        end\n        pos += 1\n      end\n      [fragments, length]\n    end",
  "children": [
    {
      "type": "method",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 33,
        "column": 7
      },
      "text": "def rich_strings_fragments(rich_strings) # :nodoc:\n      # Create a temp format with the default font for unformatted fragments.\n      default = Format.new(0)\n\n      length = 0                     # String length.\n      last = 'format'\n      pos  = 0\n\n      fragments = []\n      rich_strings.each do |token|\n        if token.respond_to?(:xf_index)\n          # Can't allow 2 formats in a row\n          return nil if last == 'format' && pos > 0\n\n          # Token is a format object. Add it to the fragment list.\n          fragments << token\n          last = 'format'\n        else\n          # Token is a string.\n          if last != 'format'\n            # If previous token wasn't a format add one before the string.\n            fragments << default << token\n          else\n            # If previous token was a format just add the string.\n            fragments << token\n          end\n\n          length += token.size    # Keep track of actual string length.\n          last = 'string'\n        end\n        pos += 1\n      end\n      [fragments, length]\n    end",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 26
          },
          "text": "rich_strings_fragments"
        },
        {
          "type": "method_parameters",
          "start": {
            "row": 0,
            "column": 26
          },
          "end": {
            "row": 0,
            "column": 40
          },
          "text": "(rich_strings)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 26
              },
              "end": {
                "row": 0,
                "column": 27
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 27
              },
              "end": {
                "row": 0,
                "column": 39
              },
              "text": "rich_strings"
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 39
              },
              "end": {
                "row": 0,
                "column": 40
              },
              "text": ")"
            }
          ]
        },
        {
          "type": "comment",
          "start": {
            "row": 0,
            "column": 41
          },
          "end": {
            "row": 0,
            "column": 50
          },
          "text": "# :nodoc:"
        },
        {
          "type": "comment",
          "start": {
            "row": 1,
            "column": 6
          },
          "end": {
            "row": 1,
            "column": 77
          },
          "text": "# Create a temp format with the default font for unformatted fragments."
        },
        {
          "type": "body_statement",
          "start": {
            "row": 2,
            "column": 6
          },
          "end": {
            "row": 32,
            "column": 25
          },
          "text": "default = Format.new(0)\n\n      length = 0                     # String length.\n      last = 'format'\n      pos  = 0\n\n      fragments = []\n      rich_strings.each do |token|\n        if token.respond_to?(:xf_index)\n          # Can't allow 2 formats in a row\n          return nil if last == 'format' && pos > 0\n\n          # Token is a format object. Add it to the fragment list.\n          fragments << token\n          last = 'format'\n        else\n          # Token is a string.\n          if last != 'format'\n            # If previous token wasn't a format add one before the string.\n            fragments << default << token\n          else\n            # If previous token was a format just add the string.\n            fragments << token\n          end\n\n          length += token.size    # Keep track of actual string length.\n          last = 'string'\n        end\n        pos += 1\n      end\n      [fragments, length]",
          "children": [
            {
              "type": "assignment",
              "start": {
                "row": 2,
                "column": 6
              },
              "end": {
                "row": 2,
                "column": 29
              },
              "text": "default = Format.new(0)",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 2,
                    "column": 6
                  },
                  "end": {
                    "row": 2,
                    "column": 13
                  },
                  "text": "default"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 2,
                    "column": 14
                  },
                  "end": {
                    "row": 2,
                    "column": 15
                  },
                  "text": "="
                },
                {
                  "type": "call",
                  "start": {
                    "row": 2,
                    "column": 16
                  },
                  "end": {
                    "row": 2,
                    "column": 29
                  },
                  "text": "Format.new(0)",
                  "children": [
                    {
                      "type": "constant",
                      "start": {
                        "row": 2,
                        "column": 16
                      },
                      "end": {
                        "row": 2,
                        "column": 22
                      },
                      "text": "Format"
                    },
                    {
                      "type": ".",
                      "start": {
                        "row": 2,
                        "column": 22
                      },
                      "end": {
                        "row": 2,
                        "column": 23
                      },
                      "text": "."
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 2,
                        "column": 23
                      },
                      "end": {
                        "row": 2,
                        "column": 26
                      },
                      "text": "new"
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 2,
                        "column": 26
                      },
                      "end": {
                        "row": 2,
                        "column": 29
                      },
                      "text": "(0)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 2,
                            "column": 26
                          },
                          "end": {
                            "row": 2,
                            "column": 27
                          },
                          "text": "("
                        },
                        {
                          "type": "integer",
                          "start": {
                            "row": 2,
                            "column": 27
                          },
                          "end": {
                            "row": 2,
                            "column": 28
                          },
                          "text": "0"
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 2,
                            "column": 28
                          },
                          "end": {
                            "row": 2,
                            "column": 29
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "assignment",
              "start": {
                "row": 4,
                "column": 6
              },
              "end": {
                "row": 4,
                "column": 16
              },
              "text": "length = 0",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 4,
                    "column": 6
                  },
                  "end": {
                    "row": 4,
                    "column": 12
                  },
                  "text": "length"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 4,
                    "column": 13
                  },
                  "end": {
                    "row": 4,
                    "column": 14
                  },
                  "text": "="
                },
                {
                  "type": "integer",
                  "start": {
                    "row": 4,
                    "column": 15
                  },
                  "end": {
                    "row": 4,
                    "column": 16
                  },
                  "text": "0"
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 4,
                "column": 37
              },
              "end": {
                "row": 4,
                "column": 53
              },
              "text": "# String length."
            },
            {
              "type": "assignment",
              "start": {
                "row": 5,
                "column": 6
              },
              "end": {
                "row": 5,
                "column": 21
              },
              "text": "last = 'format'",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 5,
                    "column": 6
                  },
                  "end": {
                    "row": 5,
                    "column": 10
                  },
                  "text": "last"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 5,
                    "column": 11
                  },
                  "end": {
                    "row": 5,
                    "column": 12
                  },
                  "text": "="
                },
                {
                  "type": "string",
                  "start": {
                    "row": 5,
                    "column": 13
                  },
                  "end": {
                    "row": 5,
                    "column": 21
                  },
                  "text": "'format'",
                  "children": [
                    {
                      "type": "\"",
                      "start": {
                        "row": 5,
                        "column": 13
                      },
                      "end": {
                        "row": 5,
                        "column": 14
                      },
                      "text": "'"
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 5,
                        "column": 14
                      },
                      "end": {
                        "row": 5,
                        "column": 20
                      },
                      "text": "format"
                    },
                    {
                      "type": "\"",
                      "start": {
                        "row": 5,
                        "column": 20
                      },
                      "end": {
                        "row": 5,
                        "column": 21
                      },
                      "text": "'"
                    }
                  ]
                }
              ]
            },
            {
              "type": "assignment",
              "start": {
                "row": 6,
                "column": 6
              },
              "end": {
                "row": 6,
                "column": 14
              },
              "text": "pos  = 0",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 6,
                    "column": 6
                  },
                  "end": {
                    "row": 6,
                    "column": 9
                  },
                  "text": "pos"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 6,
                    "column": 11
                  },
                  "end": {
                    "row": 6,
                    "column": 12
                  },
                  "text": "="
                },
                {
                  "type": "integer",
                  "start": {
                    "row": 6,
                    "column": 13
                  },
                  "end": {
                    "row": 6,
                    "column": 14
                  },
                  "text": "0"
                }
              ]
            },
            {
              "type": "assignment",
              "start": {
                "row": 8,
                "column": 6
              },
              "end": {
                "row": 8,
                "column": 20
              },
              "text": "fragments = []",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 8,
                    "column": 6
                  },
                  "end": {
                    "row": 8,
                    "column": 15
                  },
                  "text": "fragments"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 8,
                    "column": 16
                  },
                  "end": {
                    "row": 8,
                    "column": 17
                  },
                  "text": "="
                },
                {
                  "type": "array",
                  "start": {
                    "row": 8,
                    "column": 18
                  },
                  "end": {
                    "row": 8,
                    "column": 20
                  },
                  "text": "[]",
                  "children": [
                    {
                      "type": "[",
                      "start": {
                        "row": 8,
                        "column": 18
                      },
                      "end": {
                        "row": 8,
                        "column": 19
                      },
                      "text": "["
                    },
                    {
                      "type": "]",
                      "start": {
                        "row": 8,
                        "column": 19
                      },
                      "end": {
                        "row": 8,
                        "column": 20
                      },
                      "text": "]"
                    }
                  ]
                }
              ]
            },
            {
              "type": "call",
              "start": {
                "row": 9,
                "column": 6
              },
              "end": {
                "row": 31,
                "column": 9
              },
              "text": "rich_strings.each do |token|\n        if token.respond_to?(:xf_index)\n          # Can't allow 2 formats in a row\n          return nil if last == 'format' && pos > 0\n\n          # Token is a format object. Add it to the fragment list.\n          fragments << token\n          last = 'format'\n        else\n          # Token is a string.\n          if last != 'format'\n            # If previous token wasn't a format add one before the string.\n            fragments << default << token\n          else\n            # If previous token was a format just add the string.\n            fragments << token\n          end\n\n          length += token.size    # Keep track of actual string length.\n          last = 'string'\n        end\n        pos += 1\n      end",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 9,
                    "column": 6
                  },
                  "end": {
                    "row": 9,
                    "column": 18
                  },
                  "text": "rich_strings"
                },
                {
                  "type": ".",
                  "start": {
                    "row": 9,
                    "column": 18
                  },
                  "end": {
                    "row": 9,
                    "column": 19
                  },
                  "text": "."
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 9,
                    "column": 19
                  },
                  "end": {
                    "row": 9,
                    "column": 23
                  },
                  "text": "each"
                },
                {
                  "type": "do_block",
                  "start": {
                    "row": 9,
                    "column": 24
                  },
                  "end": {
                    "row": 31,
                    "column": 9
                  },
                  "text": "do |token|\n        if token.respond_to?(:xf_index)\n          # Can't allow 2 formats in a row\n          return nil if last == 'format' && pos > 0\n\n          # Token is a format object. Add it to the fragment list.\n          fragments << token\n          last = 'format'\n        else\n          # Token is a string.\n          if last != 'format'\n            # If previous token wasn't a format add one before the string.\n            fragments << default << token\n          else\n            # If previous token was a format just add the string.\n            fragments << token\n          end\n\n          length += token.size    # Keep track of actual string length.\n          last = 'string'\n        end\n        pos += 1\n      end",
                  "children": [
                    {
                      "type": "do",
                      "start": {
                        "row": 9,
                        "column": 24
                      },
                      "end": {
                        "row": 9,
                        "column": 26
                      },
                      "text": "do"
                    },
                    {
                      "type": "block_parameters",
                      "start": {
                        "row": 9,
                        "column": 27
                      },
                      "end": {
                        "row": 9,
                        "column": 34
                      },
                      "text": "|token|",
                      "children": [
                        {
                          "type": "|",
                          "start": {
                            "row": 9,
                            "column": 27
                          },
                          "end": {
                            "row": 9,
                            "column": 28
                          },
                          "text": "|"
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 9,
                            "column": 28
                          },
                          "end": {
                            "row": 9,
                            "column": 33
                          },
                          "text": "token"
                        },
                        {
                          "type": "|",
                          "start": {
                            "row": 9,
                            "column": 33
                          },
                          "end": {
                            "row": 9,
                            "column": 34
                          },
                          "text": "|"
                        }
                      ]
                    },
                    {
                      "type": "body_statement",
                      "start": {
                        "row": 10,
                        "column": 8
                      },
                      "end": {
                        "row": 30,
                        "column": 16
                      },
                      "text": "if token.respond_to?(:xf_index)\n          # Can't allow 2 formats in a row\n          return nil if last == 'format' && pos > 0\n\n          # Token is a format object. Add it to the fragment list.\n          fragments << token\n          last = 'format'\n        else\n          # Token is a string.\n          if last != 'format'\n            # If previous token wasn't a format add one before the string.\n            fragments << default << token\n          else\n            # If previous token was a format just add the string.\n            fragments << token\n          end\n\n          length += token.size    # Keep track of actual string length.\n          last = 'string'\n        end\n        pos += 1",
                      "children": [
                        {
                          "type": "if",
                          "start": {
                            "row": 10,
                            "column": 8
                          },
                          "end": {
                            "row": 29,
                            "column": 11
                          },
                          "text": "if token.respond_to?(:xf_index)\n          # Can't allow 2 formats in a row\n          return nil if last == 'format' && pos > 0\n\n          # Token is a format object. Add it to the fragment list.\n          fragments << token\n          last = 'format'\n        else\n          # Token is a string.\n          if last != 'format'\n            # If previous token wasn't a format add one before the string.\n            fragments << default << token\n          else\n            # If previous token was a format just add the string.\n            fragments << token\n          end\n\n          length += token.size    # Keep track of actual string length.\n          last = 'string'\n        end",
                          "children": [
                            {
                              "type": "if",
                              "start": {
                                "row": 10,
                                "column": 8
                              },
                              "end": {
                                "row": 10,
                                "column": 10
                              },
                              "text": "if"
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 10,
                                "column": 11
                              },
                              "end": {
                                "row": 10,
                                "column": 39
                              },
                              "text": "token.respond_to?(:xf_index)",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 10,
                                    "column": 11
                                  },
                                  "end": {
                                    "row": 10,
                                    "column": 16
                                  },
                                  "text": "token"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 10,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 10,
                                    "column": 17
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 10,
                                    "column": 17
                                  },
                                  "end": {
                                    "row": 10,
                                    "column": 28
                                  },
                                  "text": "respond_to?"
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 10,
                                    "column": 28
                                  },
                                  "end": {
                                    "row": 10,
                                    "column": 39
                                  },
                                  "text": "(:xf_index)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 10,
                                        "column": 28
                                      },
                                      "end": {
                                        "row": 10,
                                        "column": 29
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "simple_symbol",
                                      "start": {
                                        "row": 10,
                                        "column": 29
                                      },
                                      "end": {
                                        "row": 10,
                                        "column": 38
                                      },
                                      "text": ":xf_index"
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 10,
                                        "column": 38
                                      },
                                      "end": {
                                        "row": 10,
                                        "column": 39
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "comment",
                              "start": {
                                "row": 11,
                                "column": 10
                              },
                              "end": {
                                "row": 11,
                                "column": 42
                              },
                              "text": "# Can't allow 2 formats in a row"
                            },
                            {
                              "type": "then",
                              "start": {
                                "row": 11,
                                "column": 42
                              },
                              "end": {
                                "row": 16,
                                "column": 25
                              },
                              "text": "\n          return nil if last == 'format' && pos > 0\n\n          # Token is a format object. Add it to the fragment list.\n          fragments << token\n          last = 'format'",
                              "children": [
                                {
                                  "type": "if_modifier",
                                  "start": {
                                    "row": 12,
                                    "column": 10
                                  },
                                  "end": {
                                    "row": 12,
                                    "column": 51
                                  },
                                  "text": "return nil if last == 'format' && pos > 0",
                                  "children": [
                                    {
                                      "type": "return",
                                      "start": {
                                        "row": 12,
                                        "column": 10
                                      },
                                      "end": {
                                        "row": 12,
                                        "column": 20
                                      },
                                      "text": "return nil",
                                      "children": [
                                        {
                                          "type": "return",
                                          "start": {
                                            "row": 12,
                                            "column": 10
                                          },
                                          "end": {
                                            "row": 12,
                                            "column": 16
                                          },
                                          "text": "return"
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 12,
                                            "column": 17
                                          },
                                          "end": {
                                            "row": 12,
                                            "column": 20
                                          },
                                          "text": "nil",
                                          "children": [
                                            {
                                              "type": "nil",
                                              "start": {
                                                "row": 12,
                                                "column": 17
                                              },
                                              "end": {
                                                "row": 12,
                                                "column": 20
                                              },
                                              "text": "nil",
                                              "children": [
                                                {
                                                  "type": "nil",
                                                  "start": {
                                                    "row": 12,
                                                    "column": 17
                                                  },
                                                  "end": {
                                                    "row": 12,
                                                    "column": 20
                                                  },
                                                  "text": "nil"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "if",
                                      "start": {
                                        "row": 12,
                                        "column": 21
                                      },
                                      "end": {
                                        "row": 12,
                                        "column": 23
                                      },
                                      "text": "if"
                                    },
                                    {
                                      "type": "binary",
                                      "start": {
                                        "row": 12,
                                        "column": 24
                                      },
                                      "end": {
                                        "row": 12,
                                        "column": 51
                                      },
                                      "text": "last == 'format' && pos > 0",
                                      "children": [
                                        {
                                          "type": "binary",
                                          "start": {
                                            "row": 12,
                                            "column": 24
                                          },
                                          "end": {
                                            "row": 12,
                                            "column": 40
                                          },
                                          "text": "last == 'format'",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 12,
                                                "column": 24
                                              },
                                              "end": {
                                                "row": 12,
                                                "column": 28
                                              },
                                              "text": "last"
                                            },
                                            {
                                              "type": "==",
                                              "start": {
                                                "row": 12,
                                                "column": 29
                                              },
                                              "end": {
                                                "row": 12,
                                                "column": 31
                                              },
                                              "text": "=="
                                            },
                                            {
                                              "type": "string",
                                              "start": {
                                                "row": 12,
                                                "column": 32
                                              },
                                              "end": {
                                                "row": 12,
                                                "column": 40
                                              },
                                              "text": "'format'",
                                              "children": [
                                                {
                                                  "type": "\"",
                                                  "start": {
                                                    "row": 12,
                                                    "column": 32
                                                  },
                                                  "end": {
                                                    "row": 12,
                                                    "column": 33
                                                  },
                                                  "text": "'"
                                                },
                                                {
                                                  "type": "string_content",
                                                  "start": {
                                                    "row": 12,
                                                    "column": 33
                                                  },
                                                  "end": {
                                                    "row": 12,
                                                    "column": 39
                                                  },
                                                  "text": "format"
                                                },
                                                {
                                                  "type": "\"",
                                                  "start": {
                                                    "row": 12,
                                                    "column": 39
                                                  },
                                                  "end": {
                                                    "row": 12,
                                                    "column": 40
                                                  },
                                                  "text": "'"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "&&",
                                          "start": {
                                            "row": 12,
                                            "column": 41
                                          },
                                          "end": {
                                            "row": 12,
                                            "column": 43
                                          },
                                          "text": "&&"
                                        },
                                        {
                                          "type": "binary",
                                          "start": {
                                            "row": 12,
                                            "column": 44
                                          },
                                          "end": {
                                            "row": 12,
                                            "column": 51
                                          },
                                          "text": "pos > 0",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 12,
                                                "column": 44
                                              },
                                              "end": {
                                                "row": 12,
                                                "column": 47
                                              },
                                              "text": "pos"
                                            },
                                            {
                                              "type": ">",
                                              "start": {
                                                "row": 12,
                                                "column": 48
                                              },
                                              "end": {
                                                "row": 12,
                                                "column": 49
                                              },
                                              "text": ">"
                                            },
                                            {
                                              "type": "integer",
                                              "start": {
                                                "row": 12,
                                                "column": 50
                                              },
                                              "end": {
                                                "row": 12,
                                                "column": 51
                                              },
                                              "text": "0"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "comment",
                                  "start": {
                                    "row": 14,
                                    "column": 10
                                  },
                                  "end": {
                                    "row": 14,
                                    "column": 66
                                  },
                                  "text": "# Token is a format object. Add it to the fragment list."
                                },
                                {
                                  "type": "binary",
                                  "start": {
                                    "row": 15,
                                    "column": 10
                                  },
                                  "end": {
                                    "row": 15,
                                    "column": 28
                                  },
                                  "text": "fragments << token",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 15,
                                        "column": 10
                                      },
                                      "end": {
                                        "row": 15,
                                        "column": 19
                                      },
                                      "text": "fragments"
                                    },
                                    {
                                      "type": "<<",
                                      "start": {
                                        "row": 15,
                                        "column": 20
                                      },
                                      "end": {
                                        "row": 15,
                                        "column": 22
                                      },
                                      "text": "<<"
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 15,
                                        "column": 23
                                      },
                                      "end": {
                                        "row": 15,
                                        "column": 28
                                      },
                                      "text": "token"
                                    }
                                  ]
                                },
                                {
                                  "type": "assignment",
                                  "start": {
                                    "row": 16,
                                    "column": 10
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 25
                                  },
                                  "text": "last = 'format'",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 16,
                                        "column": 10
                                      },
                                      "end": {
                                        "row": 16,
                                        "column": 14
                                      },
                                      "text": "last"
                                    },
                                    {
                                      "type": "=",
                                      "start": {
                                        "row": 16,
                                        "column": 15
                                      },
                                      "end": {
                                        "row": 16,
                                        "column": 16
                                      },
                                      "text": "="
                                    },
                                    {
                                      "type": "string",
                                      "start": {
                                        "row": 16,
                                        "column": 17
                                      },
                                      "end": {
                                        "row": 16,
                                        "column": 25
                                      },
                                      "text": "'format'",
                                      "children": [
                                        {
                                          "type": "\"",
                                          "start": {
                                            "row": 16,
                                            "column": 17
                                          },
                                          "end": {
                                            "row": 16,
                                            "column": 18
                                          },
                                          "text": "'"
                                        },
                                        {
                                          "type": "string_content",
                                          "start": {
                                            "row": 16,
                                            "column": 18
                                          },
                                          "end": {
                                            "row": 16,
                                            "column": 24
                                          },
                                          "text": "format"
                                        },
                                        {
                                          "type": "\"",
                                          "start": {
                                            "row": 16,
                                            "column": 24
                                          },
                                          "end": {
                                            "row": 16,
                                            "column": 25
                                          },
                                          "text": "'"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "else",
                              "start": {
                                "row": 17,
                                "column": 8
                              },
                              "end": {
                                "row": 28,
                                "column": 25
                              },
                              "text": "else\n          # Token is a string.\n          if last != 'format'\n            # If previous token wasn't a format add one before the string.\n            fragments << default << token\n          else\n            # If previous token was a format just add the string.\n            fragments << token\n          end\n\n          length += token.size    # Keep track of actual string length.\n          last = 'string'",
                              "children": [
                                {
                                  "type": "else",
                                  "start": {
                                    "row": 17,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 17,
                                    "column": 12
                                  },
                                  "text": "else"
                                },
                                {
                                  "type": "comment",
                                  "start": {
                                    "row": 18,
                                    "column": 10
                                  },
                                  "end": {
                                    "row": 18,
                                    "column": 30
                                  },
                                  "text": "# Token is a string."
                                },
                                {
                                  "type": "if",
                                  "start": {
                                    "row": 19,
                                    "column": 10
                                  },
                                  "end": {
                                    "row": 25,
                                    "column": 13
                                  },
                                  "text": "if last != 'format'\n            # If previous token wasn't a format add one before the string.\n            fragments << default << token\n          else\n            # If previous token was a format just add the string.\n            fragments << token\n          end",
                                  "children": [
                                    {
                                      "type": "if",
                                      "start": {
                                        "row": 19,
                                        "column": 10
                                      },
                                      "end": {
                                        "row": 19,
                                        "column": 12
                                      },
                                      "text": "if"
                                    },
                                    {
                                      "type": "binary",
                                      "start": {
                                        "row": 19,
                                        "column": 13
                                      },
                                      "end": {
                                        "row": 19,
                                        "column": 29
                                      },
                                      "text": "last != 'format'",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 19,
                                            "column": 13
                                          },
                                          "end": {
                                            "row": 19,
                                            "column": 17
                                          },
                                          "text": "last"
                                        },
                                        {
                                          "type": "!=",
                                          "start": {
                                            "row": 19,
                                            "column": 18
                                          },
                                          "end": {
                                            "row": 19,
                                            "column": 20
                                          },
                                          "text": "!="
                                        },
                                        {
                                          "type": "string",
                                          "start": {
                                            "row": 19,
                                            "column": 21
                                          },
                                          "end": {
                                            "row": 19,
                                            "column": 29
                                          },
                                          "text": "'format'",
                                          "children": [
                                            {
                                              "type": "\"",
                                              "start": {
                                                "row": 19,
                                                "column": 21
                                              },
                                              "end": {
                                                "row": 19,
                                                "column": 22
                                              },
                                              "text": "'"
                                            },
                                            {
                                              "type": "string_content",
                                              "start": {
                                                "row": 19,
                                                "column": 22
                                              },
                                              "end": {
                                                "row": 19,
                                                "column": 28
                                              },
                                              "text": "format"
                                            },
                                            {
                                              "type": "\"",
                                              "start": {
                                                "row": 19,
                                                "column": 28
                                              },
                                              "end": {
                                                "row": 19,
                                                "column": 29
                                              },
                                              "text": "'"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "comment",
                                      "start": {
                                        "row": 20,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 20,
                                        "column": 74
                                      },
                                      "text": "# If previous token wasn't a format add one before the string."
                                    },
                                    {
                                      "type": "then",
                                      "start": {
                                        "row": 20,
                                        "column": 74
                                      },
                                      "end": {
                                        "row": 21,
                                        "column": 41
                                      },
                                      "text": "\n            fragments << default << token",
                                      "children": [
                                        {
                                          "type": "binary",
                                          "start": {
                                            "row": 21,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 21,
                                            "column": 41
                                          },
                                          "text": "fragments << default << token",
                                          "children": [
                                            {
                                              "type": "binary",
                                              "start": {
                                                "row": 21,
                                                "column": 12
                                              },
                                              "end": {
                                                "row": 21,
                                                "column": 32
                                              },
                                              "text": "fragments << default",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 21,
                                                    "column": 12
                                                  },
                                                  "end": {
                                                    "row": 21,
                                                    "column": 21
                                                  },
                                                  "text": "fragments"
                                                },
                                                {
                                                  "type": "<<",
                                                  "start": {
                                                    "row": 21,
                                                    "column": 22
                                                  },
                                                  "end": {
                                                    "row": 21,
                                                    "column": 24
                                                  },
                                                  "text": "<<"
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 21,
                                                    "column": 25
                                                  },
                                                  "end": {
                                                    "row": 21,
                                                    "column": 32
                                                  },
                                                  "text": "default"
                                                }
                                              ]
                                            },
                                            {
                                              "type": "<<",
                                              "start": {
                                                "row": 21,
                                                "column": 33
                                              },
                                              "end": {
                                                "row": 21,
                                                "column": 35
                                              },
                                              "text": "<<"
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 21,
                                                "column": 36
                                              },
                                              "end": {
                                                "row": 21,
                                                "column": 41
                                              },
                                              "text": "token"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "else",
                                      "start": {
                                        "row": 22,
                                        "column": 10
                                      },
                                      "end": {
                                        "row": 24,
                                        "column": 30
                                      },
                                      "text": "else\n            # If previous token was a format just add the string.\n            fragments << token",
                                      "children": [
                                        {
                                          "type": "else",
                                          "start": {
                                            "row": 22,
                                            "column": 10
                                          },
                                          "end": {
                                            "row": 22,
                                            "column": 14
                                          },
                                          "text": "else"
                                        },
                                        {
                                          "type": "comment",
                                          "start": {
                                            "row": 23,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 23,
                                            "column": 65
                                          },
                                          "text": "# If previous token was a format just add the string."
                                        },
                                        {
                                          "type": "binary",
                                          "start": {
                                            "row": 24,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 24,
                                            "column": 30
                                          },
                                          "text": "fragments << token",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 24,
                                                "column": 12
                                              },
                                              "end": {
                                                "row": 24,
                                                "column": 21
                                              },
                                              "text": "fragments"
                                            },
                                            {
                                              "type": "<<",
                                              "start": {
                                                "row": 24,
                                                "column": 22
                                              },
                                              "end": {
                                                "row": 24,
                                                "column": 24
                                              },
                                              "text": "<<"
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 24,
                                                "column": 25
                                              },
                                              "end": {
                                                "row": 24,
                                                "column": 30
                                              },
                                              "text": "token"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "end",
                                      "start": {
                                        "row": 25,
                                        "column": 10
                                      },
                                      "end": {
                                        "row": 25,
                                        "column": 13
                                      },
                                      "text": "end"
                                    }
                                  ]
                                },
                                {
                                  "type": "operator_assignment",
                                  "start": {
                                    "row": 27,
                                    "column": 10
                                  },
                                  "end": {
                                    "row": 27,
                                    "column": 30
                                  },
                                  "text": "length += token.size",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 27,
                                        "column": 10
                                      },
                                      "end": {
                                        "row": 27,
                                        "column": 16
                                      },
                                      "text": "length"
                                    },
                                    {
                                      "type": "+=",
                                      "start": {
                                        "row": 27,
                                        "column": 17
                                      },
                                      "end": {
                                        "row": 27,
                                        "column": 19
                                      },
                                      "text": "+="
                                    },
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 27,
                                        "column": 20
                                      },
                                      "end": {
                                        "row": 27,
                                        "column": 30
                                      },
                                      "text": "token.size",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 27,
                                            "column": 20
                                          },
                                          "end": {
                                            "row": 27,
                                            "column": 25
                                          },
                                          "text": "token"
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 27,
                                            "column": 25
                                          },
                                          "end": {
                                            "row": 27,
                                            "column": 26
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 27,
                                            "column": 26
                                          },
                                          "end": {
                                            "row": 27,
                                            "column": 30
                                          },
                                          "text": "size"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "comment",
                                  "start": {
                                    "row": 27,
                                    "column": 34
                                  },
                                  "end": {
                                    "row": 27,
                                    "column": 71
                                  },
                                  "text": "# Keep track of actual string length."
                                },
                                {
                                  "type": "assignment",
                                  "start": {
                                    "row": 28,
                                    "column": 10
                                  },
                                  "end": {
                                    "row": 28,
                                    "column": 25
                                  },
                                  "text": "last = 'string'",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 28,
                                        "column": 10
                                      },
                                      "end": {
                                        "row": 28,
                                        "column": 14
                                      },
                                      "text": "last"
                                    },
                                    {
                                      "type": "=",
                                      "start": {
                                        "row": 28,
                                        "column": 15
                                      },
                                      "end": {
                                        "row": 28,
                                        "column": 16
                                      },
                                      "text": "="
                                    },
                                    {
                                      "type": "string",
                                      "start": {
                                        "row": 28,
                                        "column": 17
                                      },
                                      "end": {
                                        "row": 28,
                                        "column": 25
                                      },
                                      "text": "'string'",
                                      "children": [
                                        {
                                          "type": "\"",
                                          "start": {
                                            "row": 28,
                                            "column": 17
                                          },
                                          "end": {
                                            "row": 28,
                                            "column": 18
                                          },
                                          "text": "'"
                                        },
                                        {
                                          "type": "string_content",
                                          "start": {
                                            "row": 28,
                                            "column": 18
                                          },
                                          "end": {
                                            "row": 28,
                                            "column": 24
                                          },
                                          "text": "string"
                                        },
                                        {
                                          "type": "\"",
                                          "start": {
                                            "row": 28,
                                            "column": 24
                                          },
                                          "end": {
                                            "row": 28,
                                            "column": 25
                                          },
                                          "text": "'"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "end",
                              "start": {
                                "row": 29,
                                "column": 8
                              },
                              "end": {
                                "row": 29,
                                "column": 11
                              },
                              "text": "end"
                            }
                          ]
                        },
                        {
                          "type": "operator_assignment",
                          "start": {
                            "row": 30,
                            "column": 8
                          },
                          "end": {
                            "row": 30,
                            "column": 16
                          },
                          "text": "pos += 1",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 30,
                                "column": 8
                              },
                              "end": {
                                "row": 30,
                                "column": 11
                              },
                              "text": "pos"
                            },
                            {
                              "type": "+=",
                              "start": {
                                "row": 30,
                                "column": 12
                              },
                              "end": {
                                "row": 30,
                                "column": 14
                              },
                              "text": "+="
                            },
                            {
                              "type": "integer",
                              "start": {
                                "row": 30,
                                "column": 15
                              },
                              "end": {
                                "row": 30,
                                "column": 16
                              },
                              "text": "1"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "end",
                      "start": {
                        "row": 31,
                        "column": 6
                      },
                      "end": {
                        "row": 31,
                        "column": 9
                      },
                      "text": "end"
                    }
                  ]
                }
              ]
            },
            {
              "type": "array",
              "start": {
                "row": 32,
                "column": 6
              },
              "end": {
                "row": 32,
                "column": 25
              },
              "text": "[fragments, length]",
              "children": [
                {
                  "type": "[",
                  "start": {
                    "row": 32,
                    "column": 6
                  },
                  "end": {
                    "row": 32,
                    "column": 7
                  },
                  "text": "["
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 32,
                    "column": 7
                  },
                  "end": {
                    "row": 32,
                    "column": 16
                  },
                  "text": "fragments"
                },
                {
                  "type": ",",
                  "start": {
                    "row": 32,
                    "column": 16
                  },
                  "end": {
                    "row": 32,
                    "column": 17
                  },
                  "text": ","
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 32,
                    "column": 18
                  },
                  "end": {
                    "row": 32,
                    "column": 24
                  },
                  "text": "length"
                },
                {
                  "type": "]",
                  "start": {
                    "row": 32,
                    "column": 24
                  },
                  "end": {
                    "row": 32,
                    "column": 25
                  },
                  "text": "]"
                }
              ]
            }
          ]
        },
        {
          "type": "end",
          "start": {
            "row": 33,
            "column": 4
          },
          "end": {
            "row": 33,
            "column": 7
          },
          "text": "end"
        }
      ]
    }
  ]
}