{
  "type": "program",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 43,
    "column": 7
  },
  "text": "def decrypt_if_necessary(\n      zip_file,\n      content_entry,\n      roo_content_xml_path, options\n    )\n      # Check if content.xml is encrypted by extracting manifest.xml\n      # and searching for a manifest:encryption-data element\n\n      if (manifest_entry = zip_file.glob('META-INF/manifest.xml').first)\n        roo_manifest_xml_path = File.join(@tmpdir, 'roo_manifest.xml')\n        manifest_entry.extract(roo_manifest_xml_path)\n        manifest        = ::Roo::Utils.load_xml(roo_manifest_xml_path)\n\n        # XPath search for manifest:encryption-data only for the content.xml\n        # file\n\n        encryption_data = manifest.xpath(\n          \"//manifest:file-entry[@manifest:full-path='content.xml']\"\\\n        \"/manifest:encryption-data\"\n        ).first\n\n        # If XPath returns a node, then we know content.xml is encrypted\n\n        unless encryption_data.nil?\n\n          # Since we know it's encrypted, we check for the password option\n          # and if it doesn't exist, raise an argument error\n\n          password = options[:password]\n          if !password.nil?\n            perform_decryption(\n              encryption_data,\n              password,\n              content_entry,\n              roo_content_xml_path\n            )\n          else\n            fail ArgumentError, 'file is encrypted but password was not supplied'\n          end\n        end\n      else\n        fail ArgumentError, 'file missing required META-INF/manifest.xml'\n      end\n    end",
  "children": [
    {
      "type": "method",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 43,
        "column": 7
      },
      "text": "def decrypt_if_necessary(\n      zip_file,\n      content_entry,\n      roo_content_xml_path, options\n    )\n      # Check if content.xml is encrypted by extracting manifest.xml\n      # and searching for a manifest:encryption-data element\n\n      if (manifest_entry = zip_file.glob('META-INF/manifest.xml').first)\n        roo_manifest_xml_path = File.join(@tmpdir, 'roo_manifest.xml')\n        manifest_entry.extract(roo_manifest_xml_path)\n        manifest        = ::Roo::Utils.load_xml(roo_manifest_xml_path)\n\n        # XPath search for manifest:encryption-data only for the content.xml\n        # file\n\n        encryption_data = manifest.xpath(\n          \"//manifest:file-entry[@manifest:full-path='content.xml']\"\\\n        \"/manifest:encryption-data\"\n        ).first\n\n        # If XPath returns a node, then we know content.xml is encrypted\n\n        unless encryption_data.nil?\n\n          # Since we know it's encrypted, we check for the password option\n          # and if it doesn't exist, raise an argument error\n\n          password = options[:password]\n          if !password.nil?\n            perform_decryption(\n              encryption_data,\n              password,\n              content_entry,\n              roo_content_xml_path\n            )\n          else\n            fail ArgumentError, 'file is encrypted but password was not supplied'\n          end\n        end\n      else\n        fail ArgumentError, 'file missing required META-INF/manifest.xml'\n      end\n    end",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 24
          },
          "text": "decrypt_if_necessary"
        },
        {
          "type": "method_parameters",
          "start": {
            "row": 0,
            "column": 24
          },
          "end": {
            "row": 4,
            "column": 5
          },
          "text": "(\n      zip_file,\n      content_entry,\n      roo_content_xml_path, options\n    )",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 24
              },
              "end": {
                "row": 0,
                "column": 25
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 1,
                "column": 6
              },
              "end": {
                "row": 1,
                "column": 14
              },
              "text": "zip_file"
            },
            {
              "type": ",",
              "start": {
                "row": 1,
                "column": 14
              },
              "end": {
                "row": 1,
                "column": 15
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 2,
                "column": 6
              },
              "end": {
                "row": 2,
                "column": 19
              },
              "text": "content_entry"
            },
            {
              "type": ",",
              "start": {
                "row": 2,
                "column": 19
              },
              "end": {
                "row": 2,
                "column": 20
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 3,
                "column": 6
              },
              "end": {
                "row": 3,
                "column": 26
              },
              "text": "roo_content_xml_path"
            },
            {
              "type": ",",
              "start": {
                "row": 3,
                "column": 26
              },
              "end": {
                "row": 3,
                "column": 27
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 3,
                "column": 28
              },
              "end": {
                "row": 3,
                "column": 35
              },
              "text": "options"
            },
            {
              "type": ")",
              "start": {
                "row": 4,
                "column": 4
              },
              "end": {
                "row": 4,
                "column": 5
              },
              "text": ")"
            }
          ]
        },
        {
          "type": "comment",
          "start": {
            "row": 5,
            "column": 6
          },
          "end": {
            "row": 5,
            "column": 68
          },
          "text": "# Check if content.xml is encrypted by extracting manifest.xml"
        },
        {
          "type": "comment",
          "start": {
            "row": 6,
            "column": 6
          },
          "end": {
            "row": 6,
            "column": 60
          },
          "text": "# and searching for a manifest:encryption-data element"
        },
        {
          "type": "body_statement",
          "start": {
            "row": 8,
            "column": 6
          },
          "end": {
            "row": 42,
            "column": 9
          },
          "text": "if (manifest_entry = zip_file.glob('META-INF/manifest.xml').first)\n        roo_manifest_xml_path = File.join(@tmpdir, 'roo_manifest.xml')\n        manifest_entry.extract(roo_manifest_xml_path)\n        manifest        = ::Roo::Utils.load_xml(roo_manifest_xml_path)\n\n        # XPath search for manifest:encryption-data only for the content.xml\n        # file\n\n        encryption_data = manifest.xpath(\n          \"//manifest:file-entry[@manifest:full-path='content.xml']\"\\\n        \"/manifest:encryption-data\"\n        ).first\n\n        # If XPath returns a node, then we know content.xml is encrypted\n\n        unless encryption_data.nil?\n\n          # Since we know it's encrypted, we check for the password option\n          # and if it doesn't exist, raise an argument error\n\n          password = options[:password]\n          if !password.nil?\n            perform_decryption(\n              encryption_data,\n              password,\n              content_entry,\n              roo_content_xml_path\n            )\n          else\n            fail ArgumentError, 'file is encrypted but password was not supplied'\n          end\n        end\n      else\n        fail ArgumentError, 'file missing required META-INF/manifest.xml'\n      end",
          "children": [
            {
              "type": "if",
              "start": {
                "row": 8,
                "column": 6
              },
              "end": {
                "row": 42,
                "column": 9
              },
              "text": "if (manifest_entry = zip_file.glob('META-INF/manifest.xml').first)\n        roo_manifest_xml_path = File.join(@tmpdir, 'roo_manifest.xml')\n        manifest_entry.extract(roo_manifest_xml_path)\n        manifest        = ::Roo::Utils.load_xml(roo_manifest_xml_path)\n\n        # XPath search for manifest:encryption-data only for the content.xml\n        # file\n\n        encryption_data = manifest.xpath(\n          \"//manifest:file-entry[@manifest:full-path='content.xml']\"\\\n        \"/manifest:encryption-data\"\n        ).first\n\n        # If XPath returns a node, then we know content.xml is encrypted\n\n        unless encryption_data.nil?\n\n          # Since we know it's encrypted, we check for the password option\n          # and if it doesn't exist, raise an argument error\n\n          password = options[:password]\n          if !password.nil?\n            perform_decryption(\n              encryption_data,\n              password,\n              content_entry,\n              roo_content_xml_path\n            )\n          else\n            fail ArgumentError, 'file is encrypted but password was not supplied'\n          end\n        end\n      else\n        fail ArgumentError, 'file missing required META-INF/manifest.xml'\n      end",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 8,
                    "column": 6
                  },
                  "end": {
                    "row": 8,
                    "column": 8
                  },
                  "text": "if"
                },
                {
                  "type": "parenthesized_statements",
                  "start": {
                    "row": 8,
                    "column": 9
                  },
                  "end": {
                    "row": 8,
                    "column": 72
                  },
                  "text": "(manifest_entry = zip_file.glob('META-INF/manifest.xml').first)",
                  "children": [
                    {
                      "type": "(",
                      "start": {
                        "row": 8,
                        "column": 9
                      },
                      "end": {
                        "row": 8,
                        "column": 10
                      },
                      "text": "("
                    },
                    {
                      "type": "assignment",
                      "start": {
                        "row": 8,
                        "column": 10
                      },
                      "end": {
                        "row": 8,
                        "column": 71
                      },
                      "text": "manifest_entry = zip_file.glob('META-INF/manifest.xml').first",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 8,
                            "column": 10
                          },
                          "end": {
                            "row": 8,
                            "column": 24
                          },
                          "text": "manifest_entry"
                        },
                        {
                          "type": "=",
                          "start": {
                            "row": 8,
                            "column": 25
                          },
                          "end": {
                            "row": 8,
                            "column": 26
                          },
                          "text": "="
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 8,
                            "column": 27
                          },
                          "end": {
                            "row": 8,
                            "column": 71
                          },
                          "text": "zip_file.glob('META-INF/manifest.xml').first",
                          "children": [
                            {
                              "type": "call",
                              "start": {
                                "row": 8,
                                "column": 27
                              },
                              "end": {
                                "row": 8,
                                "column": 65
                              },
                              "text": "zip_file.glob('META-INF/manifest.xml')",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 8,
                                    "column": 27
                                  },
                                  "end": {
                                    "row": 8,
                                    "column": 35
                                  },
                                  "text": "zip_file"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 8,
                                    "column": 35
                                  },
                                  "end": {
                                    "row": 8,
                                    "column": 36
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 8,
                                    "column": 36
                                  },
                                  "end": {
                                    "row": 8,
                                    "column": 40
                                  },
                                  "text": "glob"
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 8,
                                    "column": 40
                                  },
                                  "end": {
                                    "row": 8,
                                    "column": 65
                                  },
                                  "text": "('META-INF/manifest.xml')",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 8,
                                        "column": 40
                                      },
                                      "end": {
                                        "row": 8,
                                        "column": 41
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "string",
                                      "start": {
                                        "row": 8,
                                        "column": 41
                                      },
                                      "end": {
                                        "row": 8,
                                        "column": 64
                                      },
                                      "text": "'META-INF/manifest.xml'",
                                      "children": [
                                        {
                                          "type": "\"",
                                          "start": {
                                            "row": 8,
                                            "column": 41
                                          },
                                          "end": {
                                            "row": 8,
                                            "column": 42
                                          },
                                          "text": "'"
                                        },
                                        {
                                          "type": "string_content",
                                          "start": {
                                            "row": 8,
                                            "column": 42
                                          },
                                          "end": {
                                            "row": 8,
                                            "column": 63
                                          },
                                          "text": "META-INF/manifest.xml"
                                        },
                                        {
                                          "type": "\"",
                                          "start": {
                                            "row": 8,
                                            "column": 63
                                          },
                                          "end": {
                                            "row": 8,
                                            "column": 64
                                          },
                                          "text": "'"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 8,
                                        "column": 64
                                      },
                                      "end": {
                                        "row": 8,
                                        "column": 65
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 8,
                                "column": 65
                              },
                              "end": {
                                "row": 8,
                                "column": 66
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 8,
                                "column": 66
                              },
                              "end": {
                                "row": 8,
                                "column": 71
                              },
                              "text": "first"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start": {
                        "row": 8,
                        "column": 71
                      },
                      "end": {
                        "row": 8,
                        "column": 72
                      },
                      "text": ")"
                    }
                  ]
                },
                {
                  "type": "then",
                  "start": {
                    "row": 8,
                    "column": 72
                  },
                  "end": {
                    "row": 39,
                    "column": 11
                  },
                  "text": "\n        roo_manifest_xml_path = File.join(@tmpdir, 'roo_manifest.xml')\n        manifest_entry.extract(roo_manifest_xml_path)\n        manifest        = ::Roo::Utils.load_xml(roo_manifest_xml_path)\n\n        # XPath search for manifest:encryption-data only for the content.xml\n        # file\n\n        encryption_data = manifest.xpath(\n          \"//manifest:file-entry[@manifest:full-path='content.xml']\"\\\n        \"/manifest:encryption-data\"\n        ).first\n\n        # If XPath returns a node, then we know content.xml is encrypted\n\n        unless encryption_data.nil?\n\n          # Since we know it's encrypted, we check for the password option\n          # and if it doesn't exist, raise an argument error\n\n          password = options[:password]\n          if !password.nil?\n            perform_decryption(\n              encryption_data,\n              password,\n              content_entry,\n              roo_content_xml_path\n            )\n          else\n            fail ArgumentError, 'file is encrypted but password was not supplied'\n          end\n        end",
                  "children": [
                    {
                      "type": "assignment",
                      "start": {
                        "row": 9,
                        "column": 8
                      },
                      "end": {
                        "row": 9,
                        "column": 70
                      },
                      "text": "roo_manifest_xml_path = File.join(@tmpdir, 'roo_manifest.xml')",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 9,
                            "column": 8
                          },
                          "end": {
                            "row": 9,
                            "column": 29
                          },
                          "text": "roo_manifest_xml_path"
                        },
                        {
                          "type": "=",
                          "start": {
                            "row": 9,
                            "column": 30
                          },
                          "end": {
                            "row": 9,
                            "column": 31
                          },
                          "text": "="
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 9,
                            "column": 32
                          },
                          "end": {
                            "row": 9,
                            "column": 70
                          },
                          "text": "File.join(@tmpdir, 'roo_manifest.xml')",
                          "children": [
                            {
                              "type": "constant",
                              "start": {
                                "row": 9,
                                "column": 32
                              },
                              "end": {
                                "row": 9,
                                "column": 36
                              },
                              "text": "File"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 9,
                                "column": 36
                              },
                              "end": {
                                "row": 9,
                                "column": 37
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 9,
                                "column": 37
                              },
                              "end": {
                                "row": 9,
                                "column": 41
                              },
                              "text": "join"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 9,
                                "column": 41
                              },
                              "end": {
                                "row": 9,
                                "column": 70
                              },
                              "text": "(@tmpdir, 'roo_manifest.xml')",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 9,
                                    "column": 41
                                  },
                                  "end": {
                                    "row": 9,
                                    "column": 42
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "instance_variable",
                                  "start": {
                                    "row": 9,
                                    "column": 42
                                  },
                                  "end": {
                                    "row": 9,
                                    "column": 49
                                  },
                                  "text": "@tmpdir"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 9,
                                    "column": 49
                                  },
                                  "end": {
                                    "row": 9,
                                    "column": 50
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "string",
                                  "start": {
                                    "row": 9,
                                    "column": 51
                                  },
                                  "end": {
                                    "row": 9,
                                    "column": 69
                                  },
                                  "text": "'roo_manifest.xml'",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start": {
                                        "row": 9,
                                        "column": 51
                                      },
                                      "end": {
                                        "row": 9,
                                        "column": 52
                                      },
                                      "text": "'"
                                    },
                                    {
                                      "type": "string_content",
                                      "start": {
                                        "row": 9,
                                        "column": 52
                                      },
                                      "end": {
                                        "row": 9,
                                        "column": 68
                                      },
                                      "text": "roo_manifest.xml"
                                    },
                                    {
                                      "type": "\"",
                                      "start": {
                                        "row": 9,
                                        "column": 68
                                      },
                                      "end": {
                                        "row": 9,
                                        "column": 69
                                      },
                                      "text": "'"
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 9,
                                    "column": 69
                                  },
                                  "end": {
                                    "row": 9,
                                    "column": 70
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 10,
                        "column": 8
                      },
                      "end": {
                        "row": 10,
                        "column": 53
                      },
                      "text": "manifest_entry.extract(roo_manifest_xml_path)",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 10,
                            "column": 8
                          },
                          "end": {
                            "row": 10,
                            "column": 22
                          },
                          "text": "manifest_entry"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 10,
                            "column": 22
                          },
                          "end": {
                            "row": 10,
                            "column": 23
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 10,
                            "column": 23
                          },
                          "end": {
                            "row": 10,
                            "column": 30
                          },
                          "text": "extract"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 10,
                            "column": 30
                          },
                          "end": {
                            "row": 10,
                            "column": 53
                          },
                          "text": "(roo_manifest_xml_path)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 10,
                                "column": 30
                              },
                              "end": {
                                "row": 10,
                                "column": 31
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 10,
                                "column": 31
                              },
                              "end": {
                                "row": 10,
                                "column": 52
                              },
                              "text": "roo_manifest_xml_path"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 10,
                                "column": 52
                              },
                              "end": {
                                "row": 10,
                                "column": 53
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "assignment",
                      "start": {
                        "row": 11,
                        "column": 8
                      },
                      "end": {
                        "row": 11,
                        "column": 70
                      },
                      "text": "manifest        = ::Roo::Utils.load_xml(roo_manifest_xml_path)",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 11,
                            "column": 8
                          },
                          "end": {
                            "row": 11,
                            "column": 16
                          },
                          "text": "manifest"
                        },
                        {
                          "type": "=",
                          "start": {
                            "row": 11,
                            "column": 24
                          },
                          "end": {
                            "row": 11,
                            "column": 25
                          },
                          "text": "="
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 11,
                            "column": 26
                          },
                          "end": {
                            "row": 11,
                            "column": 70
                          },
                          "text": "::Roo::Utils.load_xml(roo_manifest_xml_path)",
                          "children": [
                            {
                              "type": "scope_resolution",
                              "start": {
                                "row": 11,
                                "column": 26
                              },
                              "end": {
                                "row": 11,
                                "column": 38
                              },
                              "text": "::Roo::Utils",
                              "children": [
                                {
                                  "type": "scope_resolution",
                                  "start": {
                                    "row": 11,
                                    "column": 26
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 31
                                  },
                                  "text": "::Roo",
                                  "children": [
                                    {
                                      "type": "::",
                                      "start": {
                                        "row": 11,
                                        "column": 26
                                      },
                                      "end": {
                                        "row": 11,
                                        "column": 28
                                      },
                                      "text": "::"
                                    },
                                    {
                                      "type": "constant",
                                      "start": {
                                        "row": 11,
                                        "column": 28
                                      },
                                      "end": {
                                        "row": 11,
                                        "column": 31
                                      },
                                      "text": "Roo"
                                    }
                                  ]
                                },
                                {
                                  "type": "::",
                                  "start": {
                                    "row": 11,
                                    "column": 31
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 33
                                  },
                                  "text": "::"
                                },
                                {
                                  "type": "constant",
                                  "start": {
                                    "row": 11,
                                    "column": 33
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 38
                                  },
                                  "text": "Utils"
                                }
                              ]
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 11,
                                "column": 38
                              },
                              "end": {
                                "row": 11,
                                "column": 39
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 11,
                                "column": 39
                              },
                              "end": {
                                "row": 11,
                                "column": 47
                              },
                              "text": "load_xml"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 11,
                                "column": 47
                              },
                              "end": {
                                "row": 11,
                                "column": 70
                              },
                              "text": "(roo_manifest_xml_path)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 11,
                                    "column": 47
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 48
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 11,
                                    "column": 48
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 69
                                  },
                                  "text": "roo_manifest_xml_path"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 11,
                                    "column": 69
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 70
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 13,
                        "column": 8
                      },
                      "end": {
                        "row": 13,
                        "column": 76
                      },
                      "text": "# XPath search for manifest:encryption-data only for the content.xml"
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 14,
                        "column": 8
                      },
                      "end": {
                        "row": 14,
                        "column": 14
                      },
                      "text": "# file"
                    },
                    {
                      "type": "assignment",
                      "start": {
                        "row": 16,
                        "column": 8
                      },
                      "end": {
                        "row": 19,
                        "column": 15
                      },
                      "text": "encryption_data = manifest.xpath(\n          \"//manifest:file-entry[@manifest:full-path='content.xml']\"\\\n        \"/manifest:encryption-data\"\n        ).first",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 16,
                            "column": 8
                          },
                          "end": {
                            "row": 16,
                            "column": 23
                          },
                          "text": "encryption_data"
                        },
                        {
                          "type": "=",
                          "start": {
                            "row": 16,
                            "column": 24
                          },
                          "end": {
                            "row": 16,
                            "column": 25
                          },
                          "text": "="
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 16,
                            "column": 26
                          },
                          "end": {
                            "row": 19,
                            "column": 15
                          },
                          "text": "manifest.xpath(\n          \"//manifest:file-entry[@manifest:full-path='content.xml']\"\\\n        \"/manifest:encryption-data\"\n        ).first",
                          "children": [
                            {
                              "type": "call",
                              "start": {
                                "row": 16,
                                "column": 26
                              },
                              "end": {
                                "row": 19,
                                "column": 9
                              },
                              "text": "manifest.xpath(\n          \"//manifest:file-entry[@manifest:full-path='content.xml']\"\\\n        \"/manifest:encryption-data\"\n        )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 16,
                                    "column": 26
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 34
                                  },
                                  "text": "manifest"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 16,
                                    "column": 34
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 35
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 16,
                                    "column": 35
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 40
                                  },
                                  "text": "xpath"
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 16,
                                    "column": 40
                                  },
                                  "end": {
                                    "row": 19,
                                    "column": 9
                                  },
                                  "text": "(\n          \"//manifest:file-entry[@manifest:full-path='content.xml']\"\\\n        \"/manifest:encryption-data\"\n        )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 16,
                                        "column": 40
                                      },
                                      "end": {
                                        "row": 16,
                                        "column": 41
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "chained_string",
                                      "start": {
                                        "row": 17,
                                        "column": 10
                                      },
                                      "end": {
                                        "row": 18,
                                        "column": 35
                                      },
                                      "text": "\"//manifest:file-entry[@manifest:full-path='content.xml']\"\\\n        \"/manifest:encryption-data\"",
                                      "children": [
                                        {
                                          "type": "string",
                                          "start": {
                                            "row": 17,
                                            "column": 10
                                          },
                                          "end": {
                                            "row": 17,
                                            "column": 68
                                          },
                                          "text": "\"//manifest:file-entry[@manifest:full-path='content.xml']\"",
                                          "children": [
                                            {
                                              "type": "\"",
                                              "start": {
                                                "row": 17,
                                                "column": 10
                                              },
                                              "end": {
                                                "row": 17,
                                                "column": 11
                                              },
                                              "text": "\""
                                            },
                                            {
                                              "type": "string_content",
                                              "start": {
                                                "row": 17,
                                                "column": 11
                                              },
                                              "end": {
                                                "row": 17,
                                                "column": 67
                                              },
                                              "text": "//manifest:file-entry[@manifest:full-path='content.xml']"
                                            },
                                            {
                                              "type": "\"",
                                              "start": {
                                                "row": 17,
                                                "column": 67
                                              },
                                              "end": {
                                                "row": 17,
                                                "column": 68
                                              },
                                              "text": "\""
                                            }
                                          ]
                                        },
                                        {
                                          "type": "string",
                                          "start": {
                                            "row": 18,
                                            "column": 8
                                          },
                                          "end": {
                                            "row": 18,
                                            "column": 35
                                          },
                                          "text": "\"/manifest:encryption-data\"",
                                          "children": [
                                            {
                                              "type": "\"",
                                              "start": {
                                                "row": 18,
                                                "column": 8
                                              },
                                              "end": {
                                                "row": 18,
                                                "column": 9
                                              },
                                              "text": "\""
                                            },
                                            {
                                              "type": "string_content",
                                              "start": {
                                                "row": 18,
                                                "column": 9
                                              },
                                              "end": {
                                                "row": 18,
                                                "column": 34
                                              },
                                              "text": "/manifest:encryption-data"
                                            },
                                            {
                                              "type": "\"",
                                              "start": {
                                                "row": 18,
                                                "column": 34
                                              },
                                              "end": {
                                                "row": 18,
                                                "column": 35
                                              },
                                              "text": "\""
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 19,
                                        "column": 8
                                      },
                                      "end": {
                                        "row": 19,
                                        "column": 9
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 19,
                                "column": 9
                              },
                              "end": {
                                "row": 19,
                                "column": 10
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 19,
                                "column": 10
                              },
                              "end": {
                                "row": 19,
                                "column": 15
                              },
                              "text": "first"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 21,
                        "column": 8
                      },
                      "end": {
                        "row": 21,
                        "column": 72
                      },
                      "text": "# If XPath returns a node, then we know content.xml is encrypted"
                    },
                    {
                      "type": "unless",
                      "start": {
                        "row": 23,
                        "column": 8
                      },
                      "end": {
                        "row": 39,
                        "column": 11
                      },
                      "text": "unless encryption_data.nil?\n\n          # Since we know it's encrypted, we check for the password option\n          # and if it doesn't exist, raise an argument error\n\n          password = options[:password]\n          if !password.nil?\n            perform_decryption(\n              encryption_data,\n              password,\n              content_entry,\n              roo_content_xml_path\n            )\n          else\n            fail ArgumentError, 'file is encrypted but password was not supplied'\n          end\n        end",
                      "children": [
                        {
                          "type": "unless",
                          "start": {
                            "row": 23,
                            "column": 8
                          },
                          "end": {
                            "row": 23,
                            "column": 14
                          },
                          "text": "unless"
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 23,
                            "column": 15
                          },
                          "end": {
                            "row": 23,
                            "column": 35
                          },
                          "text": "encryption_data.nil?",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 23,
                                "column": 15
                              },
                              "end": {
                                "row": 23,
                                "column": 30
                              },
                              "text": "encryption_data"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 23,
                                "column": 30
                              },
                              "end": {
                                "row": 23,
                                "column": 31
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 23,
                                "column": 31
                              },
                              "end": {
                                "row": 23,
                                "column": 35
                              },
                              "text": "nil?"
                            }
                          ]
                        },
                        {
                          "type": "comment",
                          "start": {
                            "row": 25,
                            "column": 10
                          },
                          "end": {
                            "row": 25,
                            "column": 74
                          },
                          "text": "# Since we know it's encrypted, we check for the password option"
                        },
                        {
                          "type": "comment",
                          "start": {
                            "row": 26,
                            "column": 10
                          },
                          "end": {
                            "row": 26,
                            "column": 60
                          },
                          "text": "# and if it doesn't exist, raise an argument error"
                        },
                        {
                          "type": "then",
                          "start": {
                            "row": 26,
                            "column": 60
                          },
                          "end": {
                            "row": 38,
                            "column": 13
                          },
                          "text": "\n\n          password = options[:password]\n          if !password.nil?\n            perform_decryption(\n              encryption_data,\n              password,\n              content_entry,\n              roo_content_xml_path\n            )\n          else\n            fail ArgumentError, 'file is encrypted but password was not supplied'\n          end",
                          "children": [
                            {
                              "type": "assignment",
                              "start": {
                                "row": 28,
                                "column": 10
                              },
                              "end": {
                                "row": 28,
                                "column": 39
                              },
                              "text": "password = options[:password]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 28,
                                    "column": 10
                                  },
                                  "end": {
                                    "row": 28,
                                    "column": 18
                                  },
                                  "text": "password"
                                },
                                {
                                  "type": "=",
                                  "start": {
                                    "row": 28,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 28,
                                    "column": 20
                                  },
                                  "text": "="
                                },
                                {
                                  "type": "element_reference",
                                  "start": {
                                    "row": 28,
                                    "column": 21
                                  },
                                  "end": {
                                    "row": 28,
                                    "column": 39
                                  },
                                  "text": "options[:password]",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 28,
                                        "column": 21
                                      },
                                      "end": {
                                        "row": 28,
                                        "column": 28
                                      },
                                      "text": "options"
                                    },
                                    {
                                      "type": "[",
                                      "start": {
                                        "row": 28,
                                        "column": 28
                                      },
                                      "end": {
                                        "row": 28,
                                        "column": 29
                                      },
                                      "text": "["
                                    },
                                    {
                                      "type": "simple_symbol",
                                      "start": {
                                        "row": 28,
                                        "column": 29
                                      },
                                      "end": {
                                        "row": 28,
                                        "column": 38
                                      },
                                      "text": ":password"
                                    },
                                    {
                                      "type": "]",
                                      "start": {
                                        "row": 28,
                                        "column": 38
                                      },
                                      "end": {
                                        "row": 28,
                                        "column": 39
                                      },
                                      "text": "]"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "if",
                              "start": {
                                "row": 29,
                                "column": 10
                              },
                              "end": {
                                "row": 38,
                                "column": 13
                              },
                              "text": "if !password.nil?\n            perform_decryption(\n              encryption_data,\n              password,\n              content_entry,\n              roo_content_xml_path\n            )\n          else\n            fail ArgumentError, 'file is encrypted but password was not supplied'\n          end",
                              "children": [
                                {
                                  "type": "if",
                                  "start": {
                                    "row": 29,
                                    "column": 10
                                  },
                                  "end": {
                                    "row": 29,
                                    "column": 12
                                  },
                                  "text": "if"
                                },
                                {
                                  "type": "unary",
                                  "start": {
                                    "row": 29,
                                    "column": 13
                                  },
                                  "end": {
                                    "row": 29,
                                    "column": 27
                                  },
                                  "text": "!password.nil?",
                                  "children": [
                                    {
                                      "type": "!",
                                      "start": {
                                        "row": 29,
                                        "column": 13
                                      },
                                      "end": {
                                        "row": 29,
                                        "column": 14
                                      },
                                      "text": "!"
                                    },
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 29,
                                        "column": 14
                                      },
                                      "end": {
                                        "row": 29,
                                        "column": 27
                                      },
                                      "text": "password.nil?",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 29,
                                            "column": 14
                                          },
                                          "end": {
                                            "row": 29,
                                            "column": 22
                                          },
                                          "text": "password"
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 29,
                                            "column": 22
                                          },
                                          "end": {
                                            "row": 29,
                                            "column": 23
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 29,
                                            "column": 23
                                          },
                                          "end": {
                                            "row": 29,
                                            "column": 27
                                          },
                                          "text": "nil?"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "then",
                                  "start": {
                                    "row": 29,
                                    "column": 27
                                  },
                                  "end": {
                                    "row": 35,
                                    "column": 13
                                  },
                                  "text": "\n            perform_decryption(\n              encryption_data,\n              password,\n              content_entry,\n              roo_content_xml_path\n            )",
                                  "children": [
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 30,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 35,
                                        "column": 13
                                      },
                                      "text": "perform_decryption(\n              encryption_data,\n              password,\n              content_entry,\n              roo_content_xml_path\n            )",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 30,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 30,
                                            "column": 30
                                          },
                                          "text": "perform_decryption"
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 30,
                                            "column": 30
                                          },
                                          "end": {
                                            "row": 35,
                                            "column": 13
                                          },
                                          "text": "(\n              encryption_data,\n              password,\n              content_entry,\n              roo_content_xml_path\n            )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 30,
                                                "column": 30
                                              },
                                              "end": {
                                                "row": 30,
                                                "column": 31
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 31,
                                                "column": 14
                                              },
                                              "end": {
                                                "row": 31,
                                                "column": 29
                                              },
                                              "text": "encryption_data"
                                            },
                                            {
                                              "type": ",",
                                              "start": {
                                                "row": 31,
                                                "column": 29
                                              },
                                              "end": {
                                                "row": 31,
                                                "column": 30
                                              },
                                              "text": ","
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 32,
                                                "column": 14
                                              },
                                              "end": {
                                                "row": 32,
                                                "column": 22
                                              },
                                              "text": "password"
                                            },
                                            {
                                              "type": ",",
                                              "start": {
                                                "row": 32,
                                                "column": 22
                                              },
                                              "end": {
                                                "row": 32,
                                                "column": 23
                                              },
                                              "text": ","
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 33,
                                                "column": 14
                                              },
                                              "end": {
                                                "row": 33,
                                                "column": 27
                                              },
                                              "text": "content_entry"
                                            },
                                            {
                                              "type": ",",
                                              "start": {
                                                "row": 33,
                                                "column": 27
                                              },
                                              "end": {
                                                "row": 33,
                                                "column": 28
                                              },
                                              "text": ","
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 34,
                                                "column": 14
                                              },
                                              "end": {
                                                "row": 34,
                                                "column": 34
                                              },
                                              "text": "roo_content_xml_path"
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 35,
                                                "column": 12
                                              },
                                              "end": {
                                                "row": 35,
                                                "column": 13
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "else",
                                  "start": {
                                    "row": 36,
                                    "column": 10
                                  },
                                  "end": {
                                    "row": 37,
                                    "column": 81
                                  },
                                  "text": "else\n            fail ArgumentError, 'file is encrypted but password was not supplied'",
                                  "children": [
                                    {
                                      "type": "else",
                                      "start": {
                                        "row": 36,
                                        "column": 10
                                      },
                                      "end": {
                                        "row": 36,
                                        "column": 14
                                      },
                                      "text": "else"
                                    },
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 37,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 37,
                                        "column": 81
                                      },
                                      "text": "fail ArgumentError, 'file is encrypted but password was not supplied'",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 37,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 37,
                                            "column": 16
                                          },
                                          "text": "fail"
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 37,
                                            "column": 17
                                          },
                                          "end": {
                                            "row": 37,
                                            "column": 81
                                          },
                                          "text": "ArgumentError, 'file is encrypted but password was not supplied'",
                                          "children": [
                                            {
                                              "type": "constant",
                                              "start": {
                                                "row": 37,
                                                "column": 17
                                              },
                                              "end": {
                                                "row": 37,
                                                "column": 30
                                              },
                                              "text": "ArgumentError"
                                            },
                                            {
                                              "type": ",",
                                              "start": {
                                                "row": 37,
                                                "column": 30
                                              },
                                              "end": {
                                                "row": 37,
                                                "column": 31
                                              },
                                              "text": ","
                                            },
                                            {
                                              "type": "string",
                                              "start": {
                                                "row": 37,
                                                "column": 32
                                              },
                                              "end": {
                                                "row": 37,
                                                "column": 81
                                              },
                                              "text": "'file is encrypted but password was not supplied'",
                                              "children": [
                                                {
                                                  "type": "\"",
                                                  "start": {
                                                    "row": 37,
                                                    "column": 32
                                                  },
                                                  "end": {
                                                    "row": 37,
                                                    "column": 33
                                                  },
                                                  "text": "'"
                                                },
                                                {
                                                  "type": "string_content",
                                                  "start": {
                                                    "row": 37,
                                                    "column": 33
                                                  },
                                                  "end": {
                                                    "row": 37,
                                                    "column": 80
                                                  },
                                                  "text": "file is encrypted but password was not supplied"
                                                },
                                                {
                                                  "type": "\"",
                                                  "start": {
                                                    "row": 37,
                                                    "column": 80
                                                  },
                                                  "end": {
                                                    "row": 37,
                                                    "column": 81
                                                  },
                                                  "text": "'"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "end",
                                  "start": {
                                    "row": 38,
                                    "column": 10
                                  },
                                  "end": {
                                    "row": 38,
                                    "column": 13
                                  },
                                  "text": "end"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "end",
                          "start": {
                            "row": 39,
                            "column": 8
                          },
                          "end": {
                            "row": 39,
                            "column": 11
                          },
                          "text": "end"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "else",
                  "start": {
                    "row": 40,
                    "column": 6
                  },
                  "end": {
                    "row": 41,
                    "column": 73
                  },
                  "text": "else\n        fail ArgumentError, 'file missing required META-INF/manifest.xml'",
                  "children": [
                    {
                      "type": "else",
                      "start": {
                        "row": 40,
                        "column": 6
                      },
                      "end": {
                        "row": 40,
                        "column": 10
                      },
                      "text": "else"
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 41,
                        "column": 8
                      },
                      "end": {
                        "row": 41,
                        "column": 73
                      },
                      "text": "fail ArgumentError, 'file missing required META-INF/manifest.xml'",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 41,
                            "column": 8
                          },
                          "end": {
                            "row": 41,
                            "column": 12
                          },
                          "text": "fail"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 41,
                            "column": 13
                          },
                          "end": {
                            "row": 41,
                            "column": 73
                          },
                          "text": "ArgumentError, 'file missing required META-INF/manifest.xml'",
                          "children": [
                            {
                              "type": "constant",
                              "start": {
                                "row": 41,
                                "column": 13
                              },
                              "end": {
                                "row": 41,
                                "column": 26
                              },
                              "text": "ArgumentError"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 41,
                                "column": 26
                              },
                              "end": {
                                "row": 41,
                                "column": 27
                              },
                              "text": ","
                            },
                            {
                              "type": "string",
                              "start": {
                                "row": 41,
                                "column": 28
                              },
                              "end": {
                                "row": 41,
                                "column": 73
                              },
                              "text": "'file missing required META-INF/manifest.xml'",
                              "children": [
                                {
                                  "type": "\"",
                                  "start": {
                                    "row": 41,
                                    "column": 28
                                  },
                                  "end": {
                                    "row": 41,
                                    "column": 29
                                  },
                                  "text": "'"
                                },
                                {
                                  "type": "string_content",
                                  "start": {
                                    "row": 41,
                                    "column": 29
                                  },
                                  "end": {
                                    "row": 41,
                                    "column": 72
                                  },
                                  "text": "file missing required META-INF/manifest.xml"
                                },
                                {
                                  "type": "\"",
                                  "start": {
                                    "row": 41,
                                    "column": 72
                                  },
                                  "end": {
                                    "row": 41,
                                    "column": 73
                                  },
                                  "text": "'"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "end",
                  "start": {
                    "row": 42,
                    "column": 6
                  },
                  "end": {
                    "row": 42,
                    "column": 9
                  },
                  "text": "end"
                }
              ]
            }
          ]
        },
        {
          "type": "end",
          "start": {
            "row": 43,
            "column": 4
          },
          "end": {
            "row": 43,
            "column": 7
          },
          "text": "end"
        }
      ]
    }
  ]
}