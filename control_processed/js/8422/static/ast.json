{
  "type": "program",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 17,
    "column": 4
  },
  "text": "function isParameter(sSegment, oOverload) {\n\t\t\t\tvar aMatches;\n\n\t\t\t\tif (sSegment && oOverload.$Parameter) {\n\t\t\t\t\taMatches = oOverload.$Parameter.filter(function (oParameter) {\n\t\t\t\t\t\treturn oParameter.$Name === sSegment;\n\t\t\t\t\t});\n\t\t\t\t\tif (aMatches.length) { // there can be at most one match\n\t\t\t\t\t\t// Note: annotations at parameter are handled before this method is called\n\t\t\t\t\t\t// @see annotationAtParameter\n\t\t\t\t\t\tvResult = aMatches[0];\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\t\t\t}",
  "children": [
    {
      "type": "function_declaration",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 17,
        "column": 4
      },
      "text": "function isParameter(sSegment, oOverload) {\n\t\t\t\tvar aMatches;\n\n\t\t\t\tif (sSegment && oOverload.$Parameter) {\n\t\t\t\t\taMatches = oOverload.$Parameter.filter(function (oParameter) {\n\t\t\t\t\t\treturn oParameter.$Name === sSegment;\n\t\t\t\t\t});\n\t\t\t\t\tif (aMatches.length) { // there can be at most one match\n\t\t\t\t\t\t// Note: annotations at parameter are handled before this method is called\n\t\t\t\t\t\t// @see annotationAtParameter\n\t\t\t\t\t\tvResult = aMatches[0];\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\t\t\t}",
      "children": [
        {
          "type": "function",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 8
          },
          "text": "function"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 9
          },
          "end": {
            "row": 0,
            "column": 20
          },
          "text": "isParameter"
        },
        {
          "type": "formal_parameters",
          "start": {
            "row": 0,
            "column": 20
          },
          "end": {
            "row": 0,
            "column": 41
          },
          "text": "(sSegment, oOverload)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 20
              },
              "end": {
                "row": 0,
                "column": 21
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 21
              },
              "end": {
                "row": 0,
                "column": 29
              },
              "text": "sSegment"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 29
              },
              "end": {
                "row": 0,
                "column": 30
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 31
              },
              "end": {
                "row": 0,
                "column": 40
              },
              "text": "oOverload"
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 40
              },
              "end": {
                "row": 0,
                "column": 41
              },
              "text": ")"
            }
          ]
        },
        {
          "type": "statement_block",
          "start": {
            "row": 0,
            "column": 42
          },
          "end": {
            "row": 17,
            "column": 4
          },
          "text": "{\n\t\t\t\tvar aMatches;\n\n\t\t\t\tif (sSegment && oOverload.$Parameter) {\n\t\t\t\t\taMatches = oOverload.$Parameter.filter(function (oParameter) {\n\t\t\t\t\t\treturn oParameter.$Name === sSegment;\n\t\t\t\t\t});\n\t\t\t\t\tif (aMatches.length) { // there can be at most one match\n\t\t\t\t\t\t// Note: annotations at parameter are handled before this method is called\n\t\t\t\t\t\t// @see annotationAtParameter\n\t\t\t\t\t\tvResult = aMatches[0];\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\t\t\t}",
          "children": [
            {
              "type": "{",
              "start": {
                "row": 0,
                "column": 42
              },
              "end": {
                "row": 0,
                "column": 43
              },
              "text": "{"
            },
            {
              "type": "variable_declaration",
              "start": {
                "row": 1,
                "column": 4
              },
              "end": {
                "row": 1,
                "column": 17
              },
              "text": "var aMatches;",
              "children": [
                {
                  "type": "var",
                  "start": {
                    "row": 1,
                    "column": 4
                  },
                  "end": {
                    "row": 1,
                    "column": 7
                  },
                  "text": "var"
                },
                {
                  "type": "variable_declarator",
                  "start": {
                    "row": 1,
                    "column": 8
                  },
                  "end": {
                    "row": 1,
                    "column": 16
                  },
                  "text": "aMatches",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 1,
                        "column": 8
                      },
                      "end": {
                        "row": 1,
                        "column": 16
                      },
                      "text": "aMatches"
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 1,
                    "column": 16
                  },
                  "end": {
                    "row": 1,
                    "column": 17
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 3,
                "column": 4
              },
              "end": {
                "row": 14,
                "column": 5
              },
              "text": "if (sSegment && oOverload.$Parameter) {\n\t\t\t\t\taMatches = oOverload.$Parameter.filter(function (oParameter) {\n\t\t\t\t\t\treturn oParameter.$Name === sSegment;\n\t\t\t\t\t});\n\t\t\t\t\tif (aMatches.length) { // there can be at most one match\n\t\t\t\t\t\t// Note: annotations at parameter are handled before this method is called\n\t\t\t\t\t\t// @see annotationAtParameter\n\t\t\t\t\t\tvResult = aMatches[0];\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 3,
                    "column": 4
                  },
                  "end": {
                    "row": 3,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "parenthesized_expression",
                  "start": {
                    "row": 3,
                    "column": 7
                  },
                  "end": {
                    "row": 3,
                    "column": 41
                  },
                  "text": "(sSegment && oOverload.$Parameter)",
                  "children": [
                    {
                      "type": "(",
                      "start": {
                        "row": 3,
                        "column": 7
                      },
                      "end": {
                        "row": 3,
                        "column": 8
                      },
                      "text": "("
                    },
                    {
                      "type": "binary_expression",
                      "start": {
                        "row": 3,
                        "column": 8
                      },
                      "end": {
                        "row": 3,
                        "column": 40
                      },
                      "text": "sSegment && oOverload.$Parameter",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 3,
                            "column": 8
                          },
                          "end": {
                            "row": 3,
                            "column": 16
                          },
                          "text": "sSegment"
                        },
                        {
                          "type": "&&",
                          "start": {
                            "row": 3,
                            "column": 17
                          },
                          "end": {
                            "row": 3,
                            "column": 19
                          },
                          "text": "&&"
                        },
                        {
                          "type": "member_expression",
                          "start": {
                            "row": 3,
                            "column": 20
                          },
                          "end": {
                            "row": 3,
                            "column": 40
                          },
                          "text": "oOverload.$Parameter",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 3,
                                "column": 20
                              },
                              "end": {
                                "row": 3,
                                "column": 29
                              },
                              "text": "oOverload"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 3,
                                "column": 29
                              },
                              "end": {
                                "row": 3,
                                "column": 30
                              },
                              "text": "."
                            },
                            {
                              "type": "property_identifier",
                              "start": {
                                "row": 3,
                                "column": 30
                              },
                              "end": {
                                "row": 3,
                                "column": 40
                              },
                              "text": "$Parameter"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start": {
                        "row": 3,
                        "column": 40
                      },
                      "end": {
                        "row": 3,
                        "column": 41
                      },
                      "text": ")"
                    }
                  ]
                },
                {
                  "type": "statement_block",
                  "start": {
                    "row": 3,
                    "column": 42
                  },
                  "end": {
                    "row": 14,
                    "column": 5
                  },
                  "text": "{\n\t\t\t\t\taMatches = oOverload.$Parameter.filter(function (oParameter) {\n\t\t\t\t\t\treturn oParameter.$Name === sSegment;\n\t\t\t\t\t});\n\t\t\t\t\tif (aMatches.length) { // there can be at most one match\n\t\t\t\t\t\t// Note: annotations at parameter are handled before this method is called\n\t\t\t\t\t\t// @see annotationAtParameter\n\t\t\t\t\t\tvResult = aMatches[0];\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}",
                  "children": [
                    {
                      "type": "{",
                      "start": {
                        "row": 3,
                        "column": 42
                      },
                      "end": {
                        "row": 3,
                        "column": 43
                      },
                      "text": "{"
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 4,
                        "column": 5
                      },
                      "end": {
                        "row": 6,
                        "column": 8
                      },
                      "text": "aMatches = oOverload.$Parameter.filter(function (oParameter) {\n\t\t\t\t\t\treturn oParameter.$Name === sSegment;\n\t\t\t\t\t});",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start": {
                            "row": 4,
                            "column": 5
                          },
                          "end": {
                            "row": 6,
                            "column": 7
                          },
                          "text": "aMatches = oOverload.$Parameter.filter(function (oParameter) {\n\t\t\t\t\t\treturn oParameter.$Name === sSegment;\n\t\t\t\t\t})",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 4,
                                "column": 5
                              },
                              "end": {
                                "row": 4,
                                "column": 13
                              },
                              "text": "aMatches"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 4,
                                "column": 14
                              },
                              "end": {
                                "row": 4,
                                "column": 15
                              },
                              "text": "="
                            },
                            {
                              "type": "call_expression",
                              "start": {
                                "row": 4,
                                "column": 16
                              },
                              "end": {
                                "row": 6,
                                "column": 7
                              },
                              "text": "oOverload.$Parameter.filter(function (oParameter) {\n\t\t\t\t\t\treturn oParameter.$Name === sSegment;\n\t\t\t\t\t})",
                              "children": [
                                {
                                  "type": "member_expression",
                                  "start": {
                                    "row": 4,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 4,
                                    "column": 43
                                  },
                                  "text": "oOverload.$Parameter.filter",
                                  "children": [
                                    {
                                      "type": "member_expression",
                                      "start": {
                                        "row": 4,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 4,
                                        "column": 36
                                      },
                                      "text": "oOverload.$Parameter",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 4,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 4,
                                            "column": 25
                                          },
                                          "text": "oOverload"
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 4,
                                            "column": 25
                                          },
                                          "end": {
                                            "row": 4,
                                            "column": 26
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "property_identifier",
                                          "start": {
                                            "row": 4,
                                            "column": 26
                                          },
                                          "end": {
                                            "row": 4,
                                            "column": 36
                                          },
                                          "text": "$Parameter"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 4,
                                        "column": 36
                                      },
                                      "end": {
                                        "row": 4,
                                        "column": 37
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "property_identifier",
                                      "start": {
                                        "row": 4,
                                        "column": 37
                                      },
                                      "end": {
                                        "row": 4,
                                        "column": 43
                                      },
                                      "text": "filter"
                                    }
                                  ]
                                },
                                {
                                  "type": "arguments",
                                  "start": {
                                    "row": 4,
                                    "column": 43
                                  },
                                  "end": {
                                    "row": 6,
                                    "column": 7
                                  },
                                  "text": "(function (oParameter) {\n\t\t\t\t\t\treturn oParameter.$Name === sSegment;\n\t\t\t\t\t})",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 4,
                                        "column": 43
                                      },
                                      "end": {
                                        "row": 4,
                                        "column": 44
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "function",
                                      "start": {
                                        "row": 4,
                                        "column": 44
                                      },
                                      "end": {
                                        "row": 6,
                                        "column": 6
                                      },
                                      "text": "function (oParameter) {\n\t\t\t\t\t\treturn oParameter.$Name === sSegment;\n\t\t\t\t\t}",
                                      "children": [
                                        {
                                          "type": "function",
                                          "start": {
                                            "row": 4,
                                            "column": 44
                                          },
                                          "end": {
                                            "row": 4,
                                            "column": 52
                                          },
                                          "text": "function"
                                        },
                                        {
                                          "type": "formal_parameters",
                                          "start": {
                                            "row": 4,
                                            "column": 53
                                          },
                                          "end": {
                                            "row": 4,
                                            "column": 65
                                          },
                                          "text": "(oParameter)",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 4,
                                                "column": 53
                                              },
                                              "end": {
                                                "row": 4,
                                                "column": 54
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 4,
                                                "column": 54
                                              },
                                              "end": {
                                                "row": 4,
                                                "column": 64
                                              },
                                              "text": "oParameter"
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 4,
                                                "column": 64
                                              },
                                              "end": {
                                                "row": 4,
                                                "column": 65
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "statement_block",
                                          "start": {
                                            "row": 4,
                                            "column": 66
                                          },
                                          "end": {
                                            "row": 6,
                                            "column": 6
                                          },
                                          "text": "{\n\t\t\t\t\t\treturn oParameter.$Name === sSegment;\n\t\t\t\t\t}",
                                          "children": [
                                            {
                                              "type": "{",
                                              "start": {
                                                "row": 4,
                                                "column": 66
                                              },
                                              "end": {
                                                "row": 4,
                                                "column": 67
                                              },
                                              "text": "{"
                                            },
                                            {
                                              "type": "return_statement",
                                              "start": {
                                                "row": 5,
                                                "column": 6
                                              },
                                              "end": {
                                                "row": 5,
                                                "column": 43
                                              },
                                              "text": "return oParameter.$Name === sSegment;",
                                              "children": [
                                                {
                                                  "type": "return",
                                                  "start": {
                                                    "row": 5,
                                                    "column": 6
                                                  },
                                                  "end": {
                                                    "row": 5,
                                                    "column": 12
                                                  },
                                                  "text": "return"
                                                },
                                                {
                                                  "type": "binary_expression",
                                                  "start": {
                                                    "row": 5,
                                                    "column": 13
                                                  },
                                                  "end": {
                                                    "row": 5,
                                                    "column": 42
                                                  },
                                                  "text": "oParameter.$Name === sSegment",
                                                  "children": [
                                                    {
                                                      "type": "member_expression",
                                                      "start": {
                                                        "row": 5,
                                                        "column": 13
                                                      },
                                                      "end": {
                                                        "row": 5,
                                                        "column": 29
                                                      },
                                                      "text": "oParameter.$Name",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 5,
                                                            "column": 13
                                                          },
                                                          "end": {
                                                            "row": 5,
                                                            "column": 23
                                                          },
                                                          "text": "oParameter"
                                                        },
                                                        {
                                                          "type": ".",
                                                          "start": {
                                                            "row": 5,
                                                            "column": 23
                                                          },
                                                          "end": {
                                                            "row": 5,
                                                            "column": 24
                                                          },
                                                          "text": "."
                                                        },
                                                        {
                                                          "type": "property_identifier",
                                                          "start": {
                                                            "row": 5,
                                                            "column": 24
                                                          },
                                                          "end": {
                                                            "row": 5,
                                                            "column": 29
                                                          },
                                                          "text": "$Name"
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "===",
                                                      "start": {
                                                        "row": 5,
                                                        "column": 30
                                                      },
                                                      "end": {
                                                        "row": 5,
                                                        "column": 33
                                                      },
                                                      "text": "==="
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 5,
                                                        "column": 34
                                                      },
                                                      "end": {
                                                        "row": 5,
                                                        "column": 42
                                                      },
                                                      "text": "sSegment"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ";",
                                                  "start": {
                                                    "row": 5,
                                                    "column": 42
                                                  },
                                                  "end": {
                                                    "row": 5,
                                                    "column": 43
                                                  },
                                                  "text": ";"
                                                }
                                              ]
                                            },
                                            {
                                              "type": "}",
                                              "start": {
                                                "row": 6,
                                                "column": 5
                                              },
                                              "end": {
                                                "row": 6,
                                                "column": 6
                                              },
                                              "text": "}"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 6,
                                        "column": 6
                                      },
                                      "end": {
                                        "row": 6,
                                        "column": 7
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start": {
                            "row": 6,
                            "column": 7
                          },
                          "end": {
                            "row": 6,
                            "column": 8
                          },
                          "text": ";"
                        }
                      ]
                    },
                    {
                      "type": "if_statement",
                      "start": {
                        "row": 7,
                        "column": 5
                      },
                      "end": {
                        "row": 13,
                        "column": 6
                      },
                      "text": "if (aMatches.length) { // there can be at most one match\n\t\t\t\t\t\t// Note: annotations at parameter are handled before this method is called\n\t\t\t\t\t\t// @see annotationAtParameter\n\t\t\t\t\t\tvResult = aMatches[0];\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}",
                      "children": [
                        {
                          "type": "if",
                          "start": {
                            "row": 7,
                            "column": 5
                          },
                          "end": {
                            "row": 7,
                            "column": 7
                          },
                          "text": "if"
                        },
                        {
                          "type": "parenthesized_expression",
                          "start": {
                            "row": 7,
                            "column": 8
                          },
                          "end": {
                            "row": 7,
                            "column": 25
                          },
                          "text": "(aMatches.length)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 7,
                                "column": 8
                              },
                              "end": {
                                "row": 7,
                                "column": 9
                              },
                              "text": "("
                            },
                            {
                              "type": "member_expression",
                              "start": {
                                "row": 7,
                                "column": 9
                              },
                              "end": {
                                "row": 7,
                                "column": 24
                              },
                              "text": "aMatches.length",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 7,
                                    "column": 9
                                  },
                                  "end": {
                                    "row": 7,
                                    "column": 17
                                  },
                                  "text": "aMatches"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 7,
                                    "column": 17
                                  },
                                  "end": {
                                    "row": 7,
                                    "column": 18
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "property_identifier",
                                  "start": {
                                    "row": 7,
                                    "column": 18
                                  },
                                  "end": {
                                    "row": 7,
                                    "column": 24
                                  },
                                  "text": "length"
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 7,
                                "column": 24
                              },
                              "end": {
                                "row": 7,
                                "column": 25
                              },
                              "text": ")"
                            }
                          ]
                        },
                        {
                          "type": "statement_block",
                          "start": {
                            "row": 7,
                            "column": 26
                          },
                          "end": {
                            "row": 13,
                            "column": 6
                          },
                          "text": "{ // there can be at most one match\n\t\t\t\t\t\t// Note: annotations at parameter are handled before this method is called\n\t\t\t\t\t\t// @see annotationAtParameter\n\t\t\t\t\t\tvResult = aMatches[0];\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}",
                          "children": [
                            {
                              "type": "{",
                              "start": {
                                "row": 7,
                                "column": 26
                              },
                              "end": {
                                "row": 7,
                                "column": 27
                              },
                              "text": "{"
                            },
                            {
                              "type": "comment",
                              "start": {
                                "row": 7,
                                "column": 28
                              },
                              "end": {
                                "row": 7,
                                "column": 61
                              },
                              "text": "// there can be at most one match"
                            },
                            {
                              "type": "comment",
                              "start": {
                                "row": 8,
                                "column": 6
                              },
                              "end": {
                                "row": 8,
                                "column": 80
                              },
                              "text": "// Note: annotations at parameter are handled before this method is called"
                            },
                            {
                              "type": "comment",
                              "start": {
                                "row": 9,
                                "column": 6
                              },
                              "end": {
                                "row": 9,
                                "column": 35
                              },
                              "text": "// @see annotationAtParameter"
                            },
                            {
                              "type": "expression_statement",
                              "start": {
                                "row": 10,
                                "column": 6
                              },
                              "end": {
                                "row": 10,
                                "column": 28
                              },
                              "text": "vResult = aMatches[0];",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start": {
                                    "row": 10,
                                    "column": 6
                                  },
                                  "end": {
                                    "row": 10,
                                    "column": 27
                                  },
                                  "text": "vResult = aMatches[0]",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 10,
                                        "column": 6
                                      },
                                      "end": {
                                        "row": 10,
                                        "column": 13
                                      },
                                      "text": "vResult"
                                    },
                                    {
                                      "type": "=",
                                      "start": {
                                        "row": 10,
                                        "column": 14
                                      },
                                      "end": {
                                        "row": 10,
                                        "column": 15
                                      },
                                      "text": "="
                                    },
                                    {
                                      "type": "subscript_expression",
                                      "start": {
                                        "row": 10,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 10,
                                        "column": 27
                                      },
                                      "text": "aMatches[0]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 10,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 10,
                                            "column": 24
                                          },
                                          "text": "aMatches"
                                        },
                                        {
                                          "type": "[",
                                          "start": {
                                            "row": 10,
                                            "column": 24
                                          },
                                          "end": {
                                            "row": 10,
                                            "column": 25
                                          },
                                          "text": "["
                                        },
                                        {
                                          "type": "number",
                                          "start": {
                                            "row": 10,
                                            "column": 25
                                          },
                                          "end": {
                                            "row": 10,
                                            "column": 26
                                          },
                                          "text": "0"
                                        },
                                        {
                                          "type": "]",
                                          "start": {
                                            "row": 10,
                                            "column": 26
                                          },
                                          "end": {
                                            "row": 10,
                                            "column": 27
                                          },
                                          "text": "]"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start": {
                                    "row": 10,
                                    "column": 27
                                  },
                                  "end": {
                                    "row": 10,
                                    "column": 28
                                  },
                                  "text": ";"
                                }
                              ]
                            },
                            {
                              "type": "return_statement",
                              "start": {
                                "row": 12,
                                "column": 6
                              },
                              "end": {
                                "row": 12,
                                "column": 18
                              },
                              "text": "return true;",
                              "children": [
                                {
                                  "type": "return",
                                  "start": {
                                    "row": 12,
                                    "column": 6
                                  },
                                  "end": {
                                    "row": 12,
                                    "column": 12
                                  },
                                  "text": "return"
                                },
                                {
                                  "type": "true",
                                  "start": {
                                    "row": 12,
                                    "column": 13
                                  },
                                  "end": {
                                    "row": 12,
                                    "column": 17
                                  },
                                  "text": "true"
                                },
                                {
                                  "type": ";",
                                  "start": {
                                    "row": 12,
                                    "column": 17
                                  },
                                  "end": {
                                    "row": 12,
                                    "column": 18
                                  },
                                  "text": ";"
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start": {
                                "row": 13,
                                "column": 5
                              },
                              "end": {
                                "row": 13,
                                "column": 6
                              },
                              "text": "}"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start": {
                        "row": 14,
                        "column": 4
                      },
                      "end": {
                        "row": 14,
                        "column": 5
                      },
                      "text": "}"
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 16,
                "column": 4
              },
              "end": {
                "row": 16,
                "column": 17
              },
              "text": "return false;",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 16,
                    "column": 4
                  },
                  "end": {
                    "row": 16,
                    "column": 10
                  },
                  "text": "return"
                },
                {
                  "type": "false",
                  "start": {
                    "row": 16,
                    "column": 11
                  },
                  "end": {
                    "row": 16,
                    "column": 16
                  },
                  "text": "false"
                },
                {
                  "type": ";",
                  "start": {
                    "row": 16,
                    "column": 16
                  },
                  "end": {
                    "row": 16,
                    "column": 17
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "}",
              "start": {
                "row": 17,
                "column": 3
              },
              "end": {
                "row": 17,
                "column": 4
              },
              "text": "}"
            }
          ]
        }
      ]
    }
  ]
}