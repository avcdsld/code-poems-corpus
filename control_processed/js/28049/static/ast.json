{
  "type": "program",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 23,
    "column": 1
  },
  "text": "function errorAndExit(msg, logMe) {\n  // @todo Only trigger if `verbosity > 1`\n  if (logMe) {\n    // Adding some empty lines before error message for readability\n    console.log();\n    console.log();\n    console.log(logMe);\n  }\n  error(`Error: ${msg}`);\n\n  // There's a few ways to handle exiting\n\n  // This is suggested and it's nice b/c it let's I/O finish up, but if an error happens on a watch task, it doesn't exit, b/c this will exit once the event loop is empty.\n  // process.exitCode = 1;\n\n  // This stops everything instantly and guarantees a killed program, but there's comments on the InterWebs about how it can be bad b/c I/O (like file writes) might not be done yet. I also have suspicions that this can lead to child processes never getting killed and running indefinitely - perhaps what leads to ports not being available\n  // process.exit(1);\n\n  // From docs for `process.nextTick` : \"Once the current turn of the event loop turn runs to completion, all callbacks currently in the next tick queue will be called. This is not a simple alias to setTimeout(fn, 0). It is much more efficient. It runs before any additional I/O events (including timers) fire in subsequent ticks of the event loop.\"\n  // This exits during watches correctly, and I *think* it'll let the I/O finish, but I'm not 100%\n  process.nextTick(() => {\n    process.exit(1);\n  });\n}",
  "children": [
    {
      "type": "function_declaration",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 23,
        "column": 1
      },
      "text": "function errorAndExit(msg, logMe) {\n  // @todo Only trigger if `verbosity > 1`\n  if (logMe) {\n    // Adding some empty lines before error message for readability\n    console.log();\n    console.log();\n    console.log(logMe);\n  }\n  error(`Error: ${msg}`);\n\n  // There's a few ways to handle exiting\n\n  // This is suggested and it's nice b/c it let's I/O finish up, but if an error happens on a watch task, it doesn't exit, b/c this will exit once the event loop is empty.\n  // process.exitCode = 1;\n\n  // This stops everything instantly and guarantees a killed program, but there's comments on the InterWebs about how it can be bad b/c I/O (like file writes) might not be done yet. I also have suspicions that this can lead to child processes never getting killed and running indefinitely - perhaps what leads to ports not being available\n  // process.exit(1);\n\n  // From docs for `process.nextTick` : \"Once the current turn of the event loop turn runs to completion, all callbacks currently in the next tick queue will be called. This is not a simple alias to setTimeout(fn, 0). It is much more efficient. It runs before any additional I/O events (including timers) fire in subsequent ticks of the event loop.\"\n  // This exits during watches correctly, and I *think* it'll let the I/O finish, but I'm not 100%\n  process.nextTick(() => {\n    process.exit(1);\n  });\n}",
      "children": [
        {
          "type": "function",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 8
          },
          "text": "function"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 9
          },
          "end": {
            "row": 0,
            "column": 21
          },
          "text": "errorAndExit"
        },
        {
          "type": "formal_parameters",
          "start": {
            "row": 0,
            "column": 21
          },
          "end": {
            "row": 0,
            "column": 33
          },
          "text": "(msg, logMe)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 21
              },
              "end": {
                "row": 0,
                "column": 22
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 22
              },
              "end": {
                "row": 0,
                "column": 25
              },
              "text": "msg"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 25
              },
              "end": {
                "row": 0,
                "column": 26
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 27
              },
              "end": {
                "row": 0,
                "column": 32
              },
              "text": "logMe"
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 32
              },
              "end": {
                "row": 0,
                "column": 33
              },
              "text": ")"
            }
          ]
        },
        {
          "type": "statement_block",
          "start": {
            "row": 0,
            "column": 34
          },
          "end": {
            "row": 23,
            "column": 1
          },
          "text": "{\n  // @todo Only trigger if `verbosity > 1`\n  if (logMe) {\n    // Adding some empty lines before error message for readability\n    console.log();\n    console.log();\n    console.log(logMe);\n  }\n  error(`Error: ${msg}`);\n\n  // There's a few ways to handle exiting\n\n  // This is suggested and it's nice b/c it let's I/O finish up, but if an error happens on a watch task, it doesn't exit, b/c this will exit once the event loop is empty.\n  // process.exitCode = 1;\n\n  // This stops everything instantly and guarantees a killed program, but there's comments on the InterWebs about how it can be bad b/c I/O (like file writes) might not be done yet. I also have suspicions that this can lead to child processes never getting killed and running indefinitely - perhaps what leads to ports not being available\n  // process.exit(1);\n\n  // From docs for `process.nextTick` : \"Once the current turn of the event loop turn runs to completion, all callbacks currently in the next tick queue will be called. This is not a simple alias to setTimeout(fn, 0). It is much more efficient. It runs before any additional I/O events (including timers) fire in subsequent ticks of the event loop.\"\n  // This exits during watches correctly, and I *think* it'll let the I/O finish, but I'm not 100%\n  process.nextTick(() => {\n    process.exit(1);\n  });\n}",
          "children": [
            {
              "type": "{",
              "start": {
                "row": 0,
                "column": 34
              },
              "end": {
                "row": 0,
                "column": 35
              },
              "text": "{"
            },
            {
              "type": "comment",
              "start": {
                "row": 1,
                "column": 2
              },
              "end": {
                "row": 1,
                "column": 42
              },
              "text": "// @todo Only trigger if `verbosity > 1`"
            },
            {
              "type": "if_statement",
              "start": {
                "row": 2,
                "column": 2
              },
              "end": {
                "row": 7,
                "column": 3
              },
              "text": "if (logMe) {\n    // Adding some empty lines before error message for readability\n    console.log();\n    console.log();\n    console.log(logMe);\n  }",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 2,
                    "column": 2
                  },
                  "end": {
                    "row": 2,
                    "column": 4
                  },
                  "text": "if"
                },
                {
                  "type": "parenthesized_expression",
                  "start": {
                    "row": 2,
                    "column": 5
                  },
                  "end": {
                    "row": 2,
                    "column": 12
                  },
                  "text": "(logMe)",
                  "children": [
                    {
                      "type": "(",
                      "start": {
                        "row": 2,
                        "column": 5
                      },
                      "end": {
                        "row": 2,
                        "column": 6
                      },
                      "text": "("
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 2,
                        "column": 6
                      },
                      "end": {
                        "row": 2,
                        "column": 11
                      },
                      "text": "logMe"
                    },
                    {
                      "type": ")",
                      "start": {
                        "row": 2,
                        "column": 11
                      },
                      "end": {
                        "row": 2,
                        "column": 12
                      },
                      "text": ")"
                    }
                  ]
                },
                {
                  "type": "statement_block",
                  "start": {
                    "row": 2,
                    "column": 13
                  },
                  "end": {
                    "row": 7,
                    "column": 3
                  },
                  "text": "{\n    // Adding some empty lines before error message for readability\n    console.log();\n    console.log();\n    console.log(logMe);\n  }",
                  "children": [
                    {
                      "type": "{",
                      "start": {
                        "row": 2,
                        "column": 13
                      },
                      "end": {
                        "row": 2,
                        "column": 14
                      },
                      "text": "{"
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 3,
                        "column": 4
                      },
                      "end": {
                        "row": 3,
                        "column": 67
                      },
                      "text": "// Adding some empty lines before error message for readability"
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 4,
                        "column": 4
                      },
                      "end": {
                        "row": 4,
                        "column": 18
                      },
                      "text": "console.log();",
                      "children": [
                        {
                          "type": "call_expression",
                          "start": {
                            "row": 4,
                            "column": 4
                          },
                          "end": {
                            "row": 4,
                            "column": 17
                          },
                          "text": "console.log()",
                          "children": [
                            {
                              "type": "member_expression",
                              "start": {
                                "row": 4,
                                "column": 4
                              },
                              "end": {
                                "row": 4,
                                "column": 15
                              },
                              "text": "console.log",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 4,
                                    "column": 4
                                  },
                                  "end": {
                                    "row": 4,
                                    "column": 11
                                  },
                                  "text": "console"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 4,
                                    "column": 11
                                  },
                                  "end": {
                                    "row": 4,
                                    "column": 12
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "property_identifier",
                                  "start": {
                                    "row": 4,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 4,
                                    "column": 15
                                  },
                                  "text": "log"
                                }
                              ]
                            },
                            {
                              "type": "arguments",
                              "start": {
                                "row": 4,
                                "column": 15
                              },
                              "end": {
                                "row": 4,
                                "column": 17
                              },
                              "text": "()",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 4,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 4,
                                    "column": 16
                                  },
                                  "text": "("
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 4,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 4,
                                    "column": 17
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start": {
                            "row": 4,
                            "column": 17
                          },
                          "end": {
                            "row": 4,
                            "column": 18
                          },
                          "text": ";"
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 5,
                        "column": 4
                      },
                      "end": {
                        "row": 5,
                        "column": 18
                      },
                      "text": "console.log();",
                      "children": [
                        {
                          "type": "call_expression",
                          "start": {
                            "row": 5,
                            "column": 4
                          },
                          "end": {
                            "row": 5,
                            "column": 17
                          },
                          "text": "console.log()",
                          "children": [
                            {
                              "type": "member_expression",
                              "start": {
                                "row": 5,
                                "column": 4
                              },
                              "end": {
                                "row": 5,
                                "column": 15
                              },
                              "text": "console.log",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 5,
                                    "column": 4
                                  },
                                  "end": {
                                    "row": 5,
                                    "column": 11
                                  },
                                  "text": "console"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 5,
                                    "column": 11
                                  },
                                  "end": {
                                    "row": 5,
                                    "column": 12
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "property_identifier",
                                  "start": {
                                    "row": 5,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 5,
                                    "column": 15
                                  },
                                  "text": "log"
                                }
                              ]
                            },
                            {
                              "type": "arguments",
                              "start": {
                                "row": 5,
                                "column": 15
                              },
                              "end": {
                                "row": 5,
                                "column": 17
                              },
                              "text": "()",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 5,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 5,
                                    "column": 16
                                  },
                                  "text": "("
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 5,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 5,
                                    "column": 17
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start": {
                            "row": 5,
                            "column": 17
                          },
                          "end": {
                            "row": 5,
                            "column": 18
                          },
                          "text": ";"
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 6,
                        "column": 4
                      },
                      "end": {
                        "row": 6,
                        "column": 23
                      },
                      "text": "console.log(logMe);",
                      "children": [
                        {
                          "type": "call_expression",
                          "start": {
                            "row": 6,
                            "column": 4
                          },
                          "end": {
                            "row": 6,
                            "column": 22
                          },
                          "text": "console.log(logMe)",
                          "children": [
                            {
                              "type": "member_expression",
                              "start": {
                                "row": 6,
                                "column": 4
                              },
                              "end": {
                                "row": 6,
                                "column": 15
                              },
                              "text": "console.log",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 6,
                                    "column": 4
                                  },
                                  "end": {
                                    "row": 6,
                                    "column": 11
                                  },
                                  "text": "console"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 6,
                                    "column": 11
                                  },
                                  "end": {
                                    "row": 6,
                                    "column": 12
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "property_identifier",
                                  "start": {
                                    "row": 6,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 6,
                                    "column": 15
                                  },
                                  "text": "log"
                                }
                              ]
                            },
                            {
                              "type": "arguments",
                              "start": {
                                "row": 6,
                                "column": 15
                              },
                              "end": {
                                "row": 6,
                                "column": 22
                              },
                              "text": "(logMe)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 6,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 6,
                                    "column": 16
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 6,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 6,
                                    "column": 21
                                  },
                                  "text": "logMe"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 6,
                                    "column": 21
                                  },
                                  "end": {
                                    "row": 6,
                                    "column": 22
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start": {
                            "row": 6,
                            "column": 22
                          },
                          "end": {
                            "row": 6,
                            "column": 23
                          },
                          "text": ";"
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start": {
                        "row": 7,
                        "column": 2
                      },
                      "end": {
                        "row": 7,
                        "column": 3
                      },
                      "text": "}"
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 8,
                "column": 2
              },
              "end": {
                "row": 8,
                "column": 25
              },
              "text": "error(`Error: ${msg}`);",
              "children": [
                {
                  "type": "call_expression",
                  "start": {
                    "row": 8,
                    "column": 2
                  },
                  "end": {
                    "row": 8,
                    "column": 24
                  },
                  "text": "error(`Error: ${msg}`)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 8,
                        "column": 2
                      },
                      "end": {
                        "row": 8,
                        "column": 7
                      },
                      "text": "error"
                    },
                    {
                      "type": "arguments",
                      "start": {
                        "row": 8,
                        "column": 7
                      },
                      "end": {
                        "row": 8,
                        "column": 24
                      },
                      "text": "(`Error: ${msg}`)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 8,
                            "column": 7
                          },
                          "end": {
                            "row": 8,
                            "column": 8
                          },
                          "text": "("
                        },
                        {
                          "type": "template_string",
                          "start": {
                            "row": 8,
                            "column": 8
                          },
                          "end": {
                            "row": 8,
                            "column": 23
                          },
                          "text": "`Error: ${msg}`",
                          "children": [
                            {
                              "type": "`",
                              "start": {
                                "row": 8,
                                "column": 8
                              },
                              "end": {
                                "row": 8,
                                "column": 9
                              },
                              "text": "`"
                            },
                            {
                              "type": "template_substitution",
                              "start": {
                                "row": 8,
                                "column": 16
                              },
                              "end": {
                                "row": 8,
                                "column": 22
                              },
                              "text": "${msg}",
                              "children": [
                                {
                                  "type": "${",
                                  "start": {
                                    "row": 8,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 8,
                                    "column": 18
                                  },
                                  "text": "${"
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 8,
                                    "column": 18
                                  },
                                  "end": {
                                    "row": 8,
                                    "column": 21
                                  },
                                  "text": "msg"
                                },
                                {
                                  "type": "}",
                                  "start": {
                                    "row": 8,
                                    "column": 21
                                  },
                                  "end": {
                                    "row": 8,
                                    "column": 22
                                  },
                                  "text": "}"
                                }
                              ]
                            },
                            {
                              "type": "`",
                              "start": {
                                "row": 8,
                                "column": 22
                              },
                              "end": {
                                "row": 8,
                                "column": 23
                              },
                              "text": "`"
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 8,
                            "column": 23
                          },
                          "end": {
                            "row": 8,
                            "column": 24
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 8,
                    "column": 24
                  },
                  "end": {
                    "row": 8,
                    "column": 25
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 10,
                "column": 2
              },
              "end": {
                "row": 10,
                "column": 41
              },
              "text": "// There's a few ways to handle exiting"
            },
            {
              "type": "comment",
              "start": {
                "row": 12,
                "column": 2
              },
              "end": {
                "row": 12,
                "column": 171
              },
              "text": "// This is suggested and it's nice b/c it let's I/O finish up, but if an error happens on a watch task, it doesn't exit, b/c this will exit once the event loop is empty."
            },
            {
              "type": "comment",
              "start": {
                "row": 13,
                "column": 2
              },
              "end": {
                "row": 13,
                "column": 26
              },
              "text": "// process.exitCode = 1;"
            },
            {
              "type": "comment",
              "start": {
                "row": 15,
                "column": 2
              },
              "end": {
                "row": 15,
                "column": 338
              },
              "text": "// This stops everything instantly and guarantees a killed program, but there's comments on the InterWebs about how it can be bad b/c I/O (like file writes) might not be done yet. I also have suspicions that this can lead to child processes never getting killed and running indefinitely - perhaps what leads to ports not being available"
            },
            {
              "type": "comment",
              "start": {
                "row": 16,
                "column": 2
              },
              "end": {
                "row": 16,
                "column": 21
              },
              "text": "// process.exit(1);"
            },
            {
              "type": "comment",
              "start": {
                "row": 18,
                "column": 2
              },
              "end": {
                "row": 18,
                "column": 349
              },
              "text": "// From docs for `process.nextTick` : \"Once the current turn of the event loop turn runs to completion, all callbacks currently in the next tick queue will be called. This is not a simple alias to setTimeout(fn, 0). It is much more efficient. It runs before any additional I/O events (including timers) fire in subsequent ticks of the event loop.\""
            },
            {
              "type": "comment",
              "start": {
                "row": 19,
                "column": 2
              },
              "end": {
                "row": 19,
                "column": 98
              },
              "text": "// This exits during watches correctly, and I *think* it'll let the I/O finish, but I'm not 100%"
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 20,
                "column": 2
              },
              "end": {
                "row": 22,
                "column": 5
              },
              "text": "process.nextTick(() => {\n    process.exit(1);\n  });",
              "children": [
                {
                  "type": "call_expression",
                  "start": {
                    "row": 20,
                    "column": 2
                  },
                  "end": {
                    "row": 22,
                    "column": 4
                  },
                  "text": "process.nextTick(() => {\n    process.exit(1);\n  })",
                  "children": [
                    {
                      "type": "member_expression",
                      "start": {
                        "row": 20,
                        "column": 2
                      },
                      "end": {
                        "row": 20,
                        "column": 18
                      },
                      "text": "process.nextTick",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 20,
                            "column": 2
                          },
                          "end": {
                            "row": 20,
                            "column": 9
                          },
                          "text": "process"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 20,
                            "column": 9
                          },
                          "end": {
                            "row": 20,
                            "column": 10
                          },
                          "text": "."
                        },
                        {
                          "type": "property_identifier",
                          "start": {
                            "row": 20,
                            "column": 10
                          },
                          "end": {
                            "row": 20,
                            "column": 18
                          },
                          "text": "nextTick"
                        }
                      ]
                    },
                    {
                      "type": "arguments",
                      "start": {
                        "row": 20,
                        "column": 18
                      },
                      "end": {
                        "row": 22,
                        "column": 4
                      },
                      "text": "(() => {\n    process.exit(1);\n  })",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 20,
                            "column": 18
                          },
                          "end": {
                            "row": 20,
                            "column": 19
                          },
                          "text": "("
                        },
                        {
                          "type": "arrow_function",
                          "start": {
                            "row": 20,
                            "column": 19
                          },
                          "end": {
                            "row": 22,
                            "column": 3
                          },
                          "text": "() => {\n    process.exit(1);\n  }",
                          "children": [
                            {
                              "type": "formal_parameters",
                              "start": {
                                "row": 20,
                                "column": 19
                              },
                              "end": {
                                "row": 20,
                                "column": 21
                              },
                              "text": "()",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 20,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 20,
                                    "column": 20
                                  },
                                  "text": "("
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 20,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 20,
                                    "column": 21
                                  },
                                  "text": ")"
                                }
                              ]
                            },
                            {
                              "type": "=>",
                              "start": {
                                "row": 20,
                                "column": 22
                              },
                              "end": {
                                "row": 20,
                                "column": 24
                              },
                              "text": "=>"
                            },
                            {
                              "type": "statement_block",
                              "start": {
                                "row": 20,
                                "column": 25
                              },
                              "end": {
                                "row": 22,
                                "column": 3
                              },
                              "text": "{\n    process.exit(1);\n  }",
                              "children": [
                                {
                                  "type": "{",
                                  "start": {
                                    "row": 20,
                                    "column": 25
                                  },
                                  "end": {
                                    "row": 20,
                                    "column": 26
                                  },
                                  "text": "{"
                                },
                                {
                                  "type": "expression_statement",
                                  "start": {
                                    "row": 21,
                                    "column": 4
                                  },
                                  "end": {
                                    "row": 21,
                                    "column": 20
                                  },
                                  "text": "process.exit(1);",
                                  "children": [
                                    {
                                      "type": "call_expression",
                                      "start": {
                                        "row": 21,
                                        "column": 4
                                      },
                                      "end": {
                                        "row": 21,
                                        "column": 19
                                      },
                                      "text": "process.exit(1)",
                                      "children": [
                                        {
                                          "type": "member_expression",
                                          "start": {
                                            "row": 21,
                                            "column": 4
                                          },
                                          "end": {
                                            "row": 21,
                                            "column": 16
                                          },
                                          "text": "process.exit",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 21,
                                                "column": 4
                                              },
                                              "end": {
                                                "row": 21,
                                                "column": 11
                                              },
                                              "text": "process"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 21,
                                                "column": 11
                                              },
                                              "end": {
                                                "row": 21,
                                                "column": 12
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "property_identifier",
                                              "start": {
                                                "row": 21,
                                                "column": 12
                                              },
                                              "end": {
                                                "row": 21,
                                                "column": 16
                                              },
                                              "text": "exit"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "arguments",
                                          "start": {
                                            "row": 21,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 21,
                                            "column": 19
                                          },
                                          "text": "(1)",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 21,
                                                "column": 16
                                              },
                                              "end": {
                                                "row": 21,
                                                "column": 17
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "number",
                                              "start": {
                                                "row": 21,
                                                "column": 17
                                              },
                                              "end": {
                                                "row": 21,
                                                "column": 18
                                              },
                                              "text": "1"
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 21,
                                                "column": 18
                                              },
                                              "end": {
                                                "row": 21,
                                                "column": 19
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start": {
                                        "row": 21,
                                        "column": 19
                                      },
                                      "end": {
                                        "row": 21,
                                        "column": 20
                                      },
                                      "text": ";"
                                    }
                                  ]
                                },
                                {
                                  "type": "}",
                                  "start": {
                                    "row": 22,
                                    "column": 2
                                  },
                                  "end": {
                                    "row": 22,
                                    "column": 3
                                  },
                                  "text": "}"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 22,
                            "column": 3
                          },
                          "end": {
                            "row": 22,
                            "column": 4
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 22,
                    "column": 4
                  },
                  "end": {
                    "row": 22,
                    "column": 5
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "}",
              "start": {
                "row": 23,
                "column": 0
              },
              "end": {
                "row": 23,
                "column": 1
              },
              "text": "}"
            }
          ]
        }
      ]
    }
  ]
}