{
  "type": "program",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 20,
    "column": 1
  },
  "text": "function normalizeSource(\n  source /*: string */,\n  map /*: BabelSourceMap */,\n) /*: string */ {\n  const {sourceRoot} = map;\n  source = String(source);\n  // Some source maps produce relative source paths like \"./foo.js\" instead of\n  // \"foo.js\".  Normalize these first so that future comparisons will succeed.\n  // See bugzil.la/1090768.\n  source = util.normalize(source);\n  // Always ensure that absolute sources are internally stored relative to\n  // the source root, if the source root is absolute. Not doing this would\n  // be particularly problematic when the source root is a prefix of the\n  // source (valid, but why??). See github issue #199 and bugzil.la/1188982.\n  source =\n    sourceRoot && util.isAbsolute(sourceRoot) && util.isAbsolute(source)\n      ? util.relative(sourceRoot, source)\n      : source;\n\n  return source;\n}",
  "children": [
    {
      "type": "function_declaration",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 20,
        "column": 1
      },
      "text": "function normalizeSource(\n  source /*: string */,\n  map /*: BabelSourceMap */,\n) /*: string */ {\n  const {sourceRoot} = map;\n  source = String(source);\n  // Some source maps produce relative source paths like \"./foo.js\" instead of\n  // \"foo.js\".  Normalize these first so that future comparisons will succeed.\n  // See bugzil.la/1090768.\n  source = util.normalize(source);\n  // Always ensure that absolute sources are internally stored relative to\n  // the source root, if the source root is absolute. Not doing this would\n  // be particularly problematic when the source root is a prefix of the\n  // source (valid, but why??). See github issue #199 and bugzil.la/1188982.\n  source =\n    sourceRoot && util.isAbsolute(sourceRoot) && util.isAbsolute(source)\n      ? util.relative(sourceRoot, source)\n      : source;\n\n  return source;\n}",
      "children": [
        {
          "type": "function",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 8
          },
          "text": "function"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 9
          },
          "end": {
            "row": 0,
            "column": 24
          },
          "text": "normalizeSource"
        },
        {
          "type": "formal_parameters",
          "start": {
            "row": 0,
            "column": 24
          },
          "end": {
            "row": 3,
            "column": 1
          },
          "text": "(\n  source /*: string */,\n  map /*: BabelSourceMap */,\n)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 24
              },
              "end": {
                "row": 0,
                "column": 25
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 1,
                "column": 2
              },
              "end": {
                "row": 1,
                "column": 8
              },
              "text": "source"
            },
            {
              "type": "comment",
              "start": {
                "row": 1,
                "column": 9
              },
              "end": {
                "row": 1,
                "column": 22
              },
              "text": "/*: string */"
            },
            {
              "type": ",",
              "start": {
                "row": 1,
                "column": 22
              },
              "end": {
                "row": 1,
                "column": 23
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 2,
                "column": 2
              },
              "end": {
                "row": 2,
                "column": 5
              },
              "text": "map"
            },
            {
              "type": "comment",
              "start": {
                "row": 2,
                "column": 6
              },
              "end": {
                "row": 2,
                "column": 27
              },
              "text": "/*: BabelSourceMap */"
            },
            {
              "type": ",",
              "start": {
                "row": 2,
                "column": 27
              },
              "end": {
                "row": 2,
                "column": 28
              },
              "text": ","
            },
            {
              "type": ")",
              "start": {
                "row": 3,
                "column": 0
              },
              "end": {
                "row": 3,
                "column": 1
              },
              "text": ")"
            }
          ]
        },
        {
          "type": "comment",
          "start": {
            "row": 3,
            "column": 2
          },
          "end": {
            "row": 3,
            "column": 15
          },
          "text": "/*: string */"
        },
        {
          "type": "statement_block",
          "start": {
            "row": 3,
            "column": 16
          },
          "end": {
            "row": 20,
            "column": 1
          },
          "text": "{\n  const {sourceRoot} = map;\n  source = String(source);\n  // Some source maps produce relative source paths like \"./foo.js\" instead of\n  // \"foo.js\".  Normalize these first so that future comparisons will succeed.\n  // See bugzil.la/1090768.\n  source = util.normalize(source);\n  // Always ensure that absolute sources are internally stored relative to\n  // the source root, if the source root is absolute. Not doing this would\n  // be particularly problematic when the source root is a prefix of the\n  // source (valid, but why??). See github issue #199 and bugzil.la/1188982.\n  source =\n    sourceRoot && util.isAbsolute(sourceRoot) && util.isAbsolute(source)\n      ? util.relative(sourceRoot, source)\n      : source;\n\n  return source;\n}",
          "children": [
            {
              "type": "{",
              "start": {
                "row": 3,
                "column": 16
              },
              "end": {
                "row": 3,
                "column": 17
              },
              "text": "{"
            },
            {
              "type": "lexical_declaration",
              "start": {
                "row": 4,
                "column": 2
              },
              "end": {
                "row": 4,
                "column": 27
              },
              "text": "const {sourceRoot} = map;",
              "children": [
                {
                  "type": "const",
                  "start": {
                    "row": 4,
                    "column": 2
                  },
                  "end": {
                    "row": 4,
                    "column": 7
                  },
                  "text": "const"
                },
                {
                  "type": "variable_declarator",
                  "start": {
                    "row": 4,
                    "column": 8
                  },
                  "end": {
                    "row": 4,
                    "column": 26
                  },
                  "text": "{sourceRoot} = map",
                  "children": [
                    {
                      "type": "object_pattern",
                      "start": {
                        "row": 4,
                        "column": 8
                      },
                      "end": {
                        "row": 4,
                        "column": 20
                      },
                      "text": "{sourceRoot}",
                      "children": [
                        {
                          "type": "{",
                          "start": {
                            "row": 4,
                            "column": 8
                          },
                          "end": {
                            "row": 4,
                            "column": 9
                          },
                          "text": "{"
                        },
                        {
                          "type": "shorthand_property_identifier_pattern",
                          "start": {
                            "row": 4,
                            "column": 9
                          },
                          "end": {
                            "row": 4,
                            "column": 19
                          },
                          "text": "sourceRoot"
                        },
                        {
                          "type": "}",
                          "start": {
                            "row": 4,
                            "column": 19
                          },
                          "end": {
                            "row": 4,
                            "column": 20
                          },
                          "text": "}"
                        }
                      ]
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 4,
                        "column": 21
                      },
                      "end": {
                        "row": 4,
                        "column": 22
                      },
                      "text": "="
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 4,
                        "column": 23
                      },
                      "end": {
                        "row": 4,
                        "column": 26
                      },
                      "text": "map"
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 4,
                    "column": 26
                  },
                  "end": {
                    "row": 4,
                    "column": 27
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 5,
                "column": 2
              },
              "end": {
                "row": 5,
                "column": 26
              },
              "text": "source = String(source);",
              "children": [
                {
                  "type": "assignment_expression",
                  "start": {
                    "row": 5,
                    "column": 2
                  },
                  "end": {
                    "row": 5,
                    "column": 25
                  },
                  "text": "source = String(source)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 5,
                        "column": 2
                      },
                      "end": {
                        "row": 5,
                        "column": 8
                      },
                      "text": "source"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 5,
                        "column": 9
                      },
                      "end": {
                        "row": 5,
                        "column": 10
                      },
                      "text": "="
                    },
                    {
                      "type": "call_expression",
                      "start": {
                        "row": 5,
                        "column": 11
                      },
                      "end": {
                        "row": 5,
                        "column": 25
                      },
                      "text": "String(source)",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 5,
                            "column": 11
                          },
                          "end": {
                            "row": 5,
                            "column": 17
                          },
                          "text": "String"
                        },
                        {
                          "type": "arguments",
                          "start": {
                            "row": 5,
                            "column": 17
                          },
                          "end": {
                            "row": 5,
                            "column": 25
                          },
                          "text": "(source)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 5,
                                "column": 17
                              },
                              "end": {
                                "row": 5,
                                "column": 18
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 5,
                                "column": 18
                              },
                              "end": {
                                "row": 5,
                                "column": 24
                              },
                              "text": "source"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 5,
                                "column": 24
                              },
                              "end": {
                                "row": 5,
                                "column": 25
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 5,
                    "column": 25
                  },
                  "end": {
                    "row": 5,
                    "column": 26
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 6,
                "column": 2
              },
              "end": {
                "row": 6,
                "column": 78
              },
              "text": "// Some source maps produce relative source paths like \"./foo.js\" instead of"
            },
            {
              "type": "comment",
              "start": {
                "row": 7,
                "column": 2
              },
              "end": {
                "row": 7,
                "column": 78
              },
              "text": "// \"foo.js\".  Normalize these first so that future comparisons will succeed."
            },
            {
              "type": "comment",
              "start": {
                "row": 8,
                "column": 2
              },
              "end": {
                "row": 8,
                "column": 27
              },
              "text": "// See bugzil.la/1090768."
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 9,
                "column": 2
              },
              "end": {
                "row": 9,
                "column": 34
              },
              "text": "source = util.normalize(source);",
              "children": [
                {
                  "type": "assignment_expression",
                  "start": {
                    "row": 9,
                    "column": 2
                  },
                  "end": {
                    "row": 9,
                    "column": 33
                  },
                  "text": "source = util.normalize(source)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 9,
                        "column": 2
                      },
                      "end": {
                        "row": 9,
                        "column": 8
                      },
                      "text": "source"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 9,
                        "column": 9
                      },
                      "end": {
                        "row": 9,
                        "column": 10
                      },
                      "text": "="
                    },
                    {
                      "type": "call_expression",
                      "start": {
                        "row": 9,
                        "column": 11
                      },
                      "end": {
                        "row": 9,
                        "column": 33
                      },
                      "text": "util.normalize(source)",
                      "children": [
                        {
                          "type": "member_expression",
                          "start": {
                            "row": 9,
                            "column": 11
                          },
                          "end": {
                            "row": 9,
                            "column": 25
                          },
                          "text": "util.normalize",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 9,
                                "column": 11
                              },
                              "end": {
                                "row": 9,
                                "column": 15
                              },
                              "text": "util"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 9,
                                "column": 15
                              },
                              "end": {
                                "row": 9,
                                "column": 16
                              },
                              "text": "."
                            },
                            {
                              "type": "property_identifier",
                              "start": {
                                "row": 9,
                                "column": 16
                              },
                              "end": {
                                "row": 9,
                                "column": 25
                              },
                              "text": "normalize"
                            }
                          ]
                        },
                        {
                          "type": "arguments",
                          "start": {
                            "row": 9,
                            "column": 25
                          },
                          "end": {
                            "row": 9,
                            "column": 33
                          },
                          "text": "(source)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 9,
                                "column": 25
                              },
                              "end": {
                                "row": 9,
                                "column": 26
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 9,
                                "column": 26
                              },
                              "end": {
                                "row": 9,
                                "column": 32
                              },
                              "text": "source"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 9,
                                "column": 32
                              },
                              "end": {
                                "row": 9,
                                "column": 33
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 9,
                    "column": 33
                  },
                  "end": {
                    "row": 9,
                    "column": 34
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 10,
                "column": 2
              },
              "end": {
                "row": 10,
                "column": 74
              },
              "text": "// Always ensure that absolute sources are internally stored relative to"
            },
            {
              "type": "comment",
              "start": {
                "row": 11,
                "column": 2
              },
              "end": {
                "row": 11,
                "column": 74
              },
              "text": "// the source root, if the source root is absolute. Not doing this would"
            },
            {
              "type": "comment",
              "start": {
                "row": 12,
                "column": 2
              },
              "end": {
                "row": 12,
                "column": 72
              },
              "text": "// be particularly problematic when the source root is a prefix of the"
            },
            {
              "type": "comment",
              "start": {
                "row": 13,
                "column": 2
              },
              "end": {
                "row": 13,
                "column": 76
              },
              "text": "// source (valid, but why??). See github issue #199 and bugzil.la/1188982."
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 14,
                "column": 2
              },
              "end": {
                "row": 17,
                "column": 15
              },
              "text": "source =\n    sourceRoot && util.isAbsolute(sourceRoot) && util.isAbsolute(source)\n      ? util.relative(sourceRoot, source)\n      : source;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start": {
                    "row": 14,
                    "column": 2
                  },
                  "end": {
                    "row": 17,
                    "column": 14
                  },
                  "text": "source =\n    sourceRoot && util.isAbsolute(sourceRoot) && util.isAbsolute(source)\n      ? util.relative(sourceRoot, source)\n      : source",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 14,
                        "column": 2
                      },
                      "end": {
                        "row": 14,
                        "column": 8
                      },
                      "text": "source"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 14,
                        "column": 9
                      },
                      "end": {
                        "row": 14,
                        "column": 10
                      },
                      "text": "="
                    },
                    {
                      "type": "ternary_expression",
                      "start": {
                        "row": 15,
                        "column": 4
                      },
                      "end": {
                        "row": 17,
                        "column": 14
                      },
                      "text": "sourceRoot && util.isAbsolute(sourceRoot) && util.isAbsolute(source)\n      ? util.relative(sourceRoot, source)\n      : source",
                      "children": [
                        {
                          "type": "binary_expression",
                          "start": {
                            "row": 15,
                            "column": 4
                          },
                          "end": {
                            "row": 15,
                            "column": 72
                          },
                          "text": "sourceRoot && util.isAbsolute(sourceRoot) && util.isAbsolute(source)",
                          "children": [
                            {
                              "type": "binary_expression",
                              "start": {
                                "row": 15,
                                "column": 4
                              },
                              "end": {
                                "row": 15,
                                "column": 45
                              },
                              "text": "sourceRoot && util.isAbsolute(sourceRoot)",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 15,
                                    "column": 4
                                  },
                                  "end": {
                                    "row": 15,
                                    "column": 14
                                  },
                                  "text": "sourceRoot"
                                },
                                {
                                  "type": "&&",
                                  "start": {
                                    "row": 15,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 15,
                                    "column": 17
                                  },
                                  "text": "&&"
                                },
                                {
                                  "type": "call_expression",
                                  "start": {
                                    "row": 15,
                                    "column": 18
                                  },
                                  "end": {
                                    "row": 15,
                                    "column": 45
                                  },
                                  "text": "util.isAbsolute(sourceRoot)",
                                  "children": [
                                    {
                                      "type": "member_expression",
                                      "start": {
                                        "row": 15,
                                        "column": 18
                                      },
                                      "end": {
                                        "row": 15,
                                        "column": 33
                                      },
                                      "text": "util.isAbsolute",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 15,
                                            "column": 18
                                          },
                                          "end": {
                                            "row": 15,
                                            "column": 22
                                          },
                                          "text": "util"
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 15,
                                            "column": 22
                                          },
                                          "end": {
                                            "row": 15,
                                            "column": 23
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "property_identifier",
                                          "start": {
                                            "row": 15,
                                            "column": 23
                                          },
                                          "end": {
                                            "row": 15,
                                            "column": 33
                                          },
                                          "text": "isAbsolute"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "arguments",
                                      "start": {
                                        "row": 15,
                                        "column": 33
                                      },
                                      "end": {
                                        "row": 15,
                                        "column": 45
                                      },
                                      "text": "(sourceRoot)",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 15,
                                            "column": 33
                                          },
                                          "end": {
                                            "row": 15,
                                            "column": 34
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 15,
                                            "column": 34
                                          },
                                          "end": {
                                            "row": 15,
                                            "column": 44
                                          },
                                          "text": "sourceRoot"
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 15,
                                            "column": 44
                                          },
                                          "end": {
                                            "row": 15,
                                            "column": 45
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "&&",
                              "start": {
                                "row": 15,
                                "column": 46
                              },
                              "end": {
                                "row": 15,
                                "column": 48
                              },
                              "text": "&&"
                            },
                            {
                              "type": "call_expression",
                              "start": {
                                "row": 15,
                                "column": 49
                              },
                              "end": {
                                "row": 15,
                                "column": 72
                              },
                              "text": "util.isAbsolute(source)",
                              "children": [
                                {
                                  "type": "member_expression",
                                  "start": {
                                    "row": 15,
                                    "column": 49
                                  },
                                  "end": {
                                    "row": 15,
                                    "column": 64
                                  },
                                  "text": "util.isAbsolute",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 15,
                                        "column": 49
                                      },
                                      "end": {
                                        "row": 15,
                                        "column": 53
                                      },
                                      "text": "util"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 15,
                                        "column": 53
                                      },
                                      "end": {
                                        "row": 15,
                                        "column": 54
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "property_identifier",
                                      "start": {
                                        "row": 15,
                                        "column": 54
                                      },
                                      "end": {
                                        "row": 15,
                                        "column": 64
                                      },
                                      "text": "isAbsolute"
                                    }
                                  ]
                                },
                                {
                                  "type": "arguments",
                                  "start": {
                                    "row": 15,
                                    "column": 64
                                  },
                                  "end": {
                                    "row": 15,
                                    "column": 72
                                  },
                                  "text": "(source)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 15,
                                        "column": 64
                                      },
                                      "end": {
                                        "row": 15,
                                        "column": 65
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 15,
                                        "column": 65
                                      },
                                      "end": {
                                        "row": 15,
                                        "column": 71
                                      },
                                      "text": "source"
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 15,
                                        "column": 71
                                      },
                                      "end": {
                                        "row": 15,
                                        "column": 72
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "?",
                          "start": {
                            "row": 16,
                            "column": 6
                          },
                          "end": {
                            "row": 16,
                            "column": 7
                          },
                          "text": "?"
                        },
                        {
                          "type": "call_expression",
                          "start": {
                            "row": 16,
                            "column": 8
                          },
                          "end": {
                            "row": 16,
                            "column": 41
                          },
                          "text": "util.relative(sourceRoot, source)",
                          "children": [
                            {
                              "type": "member_expression",
                              "start": {
                                "row": 16,
                                "column": 8
                              },
                              "end": {
                                "row": 16,
                                "column": 21
                              },
                              "text": "util.relative",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 16,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 12
                                  },
                                  "text": "util"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 16,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 13
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "property_identifier",
                                  "start": {
                                    "row": 16,
                                    "column": 13
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 21
                                  },
                                  "text": "relative"
                                }
                              ]
                            },
                            {
                              "type": "arguments",
                              "start": {
                                "row": 16,
                                "column": 21
                              },
                              "end": {
                                "row": 16,
                                "column": 41
                              },
                              "text": "(sourceRoot, source)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 16,
                                    "column": 21
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 22
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 16,
                                    "column": 22
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 32
                                  },
                                  "text": "sourceRoot"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 16,
                                    "column": 32
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 33
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 16,
                                    "column": 34
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 40
                                  },
                                  "text": "source"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 16,
                                    "column": 40
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 41
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ":",
                          "start": {
                            "row": 17,
                            "column": 6
                          },
                          "end": {
                            "row": 17,
                            "column": 7
                          },
                          "text": ":"
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 17,
                            "column": 8
                          },
                          "end": {
                            "row": 17,
                            "column": 14
                          },
                          "text": "source"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 17,
                    "column": 14
                  },
                  "end": {
                    "row": 17,
                    "column": 15
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 19,
                "column": 2
              },
              "end": {
                "row": 19,
                "column": 16
              },
              "text": "return source;",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 19,
                    "column": 2
                  },
                  "end": {
                    "row": 19,
                    "column": 8
                  },
                  "text": "return"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 19,
                    "column": 9
                  },
                  "end": {
                    "row": 19,
                    "column": 15
                  },
                  "text": "source"
                },
                {
                  "type": ";",
                  "start": {
                    "row": 19,
                    "column": 15
                  },
                  "end": {
                    "row": 19,
                    "column": 16
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "}",
              "start": {
                "row": 20,
                "column": 0
              },
              "end": {
                "row": 20,
                "column": 1
              },
              "text": "}"
            }
          ]
        }
      ]
    }
  ]
}