{
  "type": "program",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 20,
    "column": 3
  },
  "text": "function decodeCssEscape(s) {\n    var i = parseInt(s.substring(1), 16);\n    // If parseInt didn't find a hex diigt, it returns NaN so return the\n    // escaped character.\n    // Otherwise, parseInt will stop at the first non-hex digit so there's no\n    // need to worry about trailing whitespace.\n    if (i > 0xffff) {\n      // A supplemental codepoint.\n      return i -= 0x10000,\n        String.fromCharCode(\n            0xd800 + (i >> 10),\n            0xdc00 + (i & 0x3FF));\n    } else if (i == i) {\n      return String.fromCharCode(i);\n    } else if (s[1] < ' ') {\n      // \"a backslash followed by a newline is ignored\".\n      return '';\n    } else {\n      return s[1];\n    }\n  }",
  "children": [
    {
      "type": "function_declaration",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 20,
        "column": 3
      },
      "text": "function decodeCssEscape(s) {\n    var i = parseInt(s.substring(1), 16);\n    // If parseInt didn't find a hex diigt, it returns NaN so return the\n    // escaped character.\n    // Otherwise, parseInt will stop at the first non-hex digit so there's no\n    // need to worry about trailing whitespace.\n    if (i > 0xffff) {\n      // A supplemental codepoint.\n      return i -= 0x10000,\n        String.fromCharCode(\n            0xd800 + (i >> 10),\n            0xdc00 + (i & 0x3FF));\n    } else if (i == i) {\n      return String.fromCharCode(i);\n    } else if (s[1] < ' ') {\n      // \"a backslash followed by a newline is ignored\".\n      return '';\n    } else {\n      return s[1];\n    }\n  }",
      "children": [
        {
          "type": "function",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 8
          },
          "text": "function"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 9
          },
          "end": {
            "row": 0,
            "column": 24
          },
          "text": "decodeCssEscape"
        },
        {
          "type": "formal_parameters",
          "start": {
            "row": 0,
            "column": 24
          },
          "end": {
            "row": 0,
            "column": 27
          },
          "text": "(s)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 24
              },
              "end": {
                "row": 0,
                "column": 25
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 25
              },
              "end": {
                "row": 0,
                "column": 26
              },
              "text": "s"
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 26
              },
              "end": {
                "row": 0,
                "column": 27
              },
              "text": ")"
            }
          ]
        },
        {
          "type": "statement_block",
          "start": {
            "row": 0,
            "column": 28
          },
          "end": {
            "row": 20,
            "column": 3
          },
          "text": "{\n    var i = parseInt(s.substring(1), 16);\n    // If parseInt didn't find a hex diigt, it returns NaN so return the\n    // escaped character.\n    // Otherwise, parseInt will stop at the first non-hex digit so there's no\n    // need to worry about trailing whitespace.\n    if (i > 0xffff) {\n      // A supplemental codepoint.\n      return i -= 0x10000,\n        String.fromCharCode(\n            0xd800 + (i >> 10),\n            0xdc00 + (i & 0x3FF));\n    } else if (i == i) {\n      return String.fromCharCode(i);\n    } else if (s[1] < ' ') {\n      // \"a backslash followed by a newline is ignored\".\n      return '';\n    } else {\n      return s[1];\n    }\n  }",
          "children": [
            {
              "type": "{",
              "start": {
                "row": 0,
                "column": 28
              },
              "end": {
                "row": 0,
                "column": 29
              },
              "text": "{"
            },
            {
              "type": "variable_declaration",
              "start": {
                "row": 1,
                "column": 4
              },
              "end": {
                "row": 1,
                "column": 41
              },
              "text": "var i = parseInt(s.substring(1), 16);",
              "children": [
                {
                  "type": "var",
                  "start": {
                    "row": 1,
                    "column": 4
                  },
                  "end": {
                    "row": 1,
                    "column": 7
                  },
                  "text": "var"
                },
                {
                  "type": "variable_declarator",
                  "start": {
                    "row": 1,
                    "column": 8
                  },
                  "end": {
                    "row": 1,
                    "column": 40
                  },
                  "text": "i = parseInt(s.substring(1), 16)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 1,
                        "column": 8
                      },
                      "end": {
                        "row": 1,
                        "column": 9
                      },
                      "text": "i"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 1,
                        "column": 10
                      },
                      "end": {
                        "row": 1,
                        "column": 11
                      },
                      "text": "="
                    },
                    {
                      "type": "call_expression",
                      "start": {
                        "row": 1,
                        "column": 12
                      },
                      "end": {
                        "row": 1,
                        "column": 40
                      },
                      "text": "parseInt(s.substring(1), 16)",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 1,
                            "column": 12
                          },
                          "end": {
                            "row": 1,
                            "column": 20
                          },
                          "text": "parseInt"
                        },
                        {
                          "type": "arguments",
                          "start": {
                            "row": 1,
                            "column": 20
                          },
                          "end": {
                            "row": 1,
                            "column": 40
                          },
                          "text": "(s.substring(1), 16)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 1,
                                "column": 20
                              },
                              "end": {
                                "row": 1,
                                "column": 21
                              },
                              "text": "("
                            },
                            {
                              "type": "call_expression",
                              "start": {
                                "row": 1,
                                "column": 21
                              },
                              "end": {
                                "row": 1,
                                "column": 35
                              },
                              "text": "s.substring(1)",
                              "children": [
                                {
                                  "type": "member_expression",
                                  "start": {
                                    "row": 1,
                                    "column": 21
                                  },
                                  "end": {
                                    "row": 1,
                                    "column": 32
                                  },
                                  "text": "s.substring",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 1,
                                        "column": 21
                                      },
                                      "end": {
                                        "row": 1,
                                        "column": 22
                                      },
                                      "text": "s"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 1,
                                        "column": 22
                                      },
                                      "end": {
                                        "row": 1,
                                        "column": 23
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "property_identifier",
                                      "start": {
                                        "row": 1,
                                        "column": 23
                                      },
                                      "end": {
                                        "row": 1,
                                        "column": 32
                                      },
                                      "text": "substring"
                                    }
                                  ]
                                },
                                {
                                  "type": "arguments",
                                  "start": {
                                    "row": 1,
                                    "column": 32
                                  },
                                  "end": {
                                    "row": 1,
                                    "column": 35
                                  },
                                  "text": "(1)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 1,
                                        "column": 32
                                      },
                                      "end": {
                                        "row": 1,
                                        "column": 33
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "number",
                                      "start": {
                                        "row": 1,
                                        "column": 33
                                      },
                                      "end": {
                                        "row": 1,
                                        "column": 34
                                      },
                                      "text": "1"
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 1,
                                        "column": 34
                                      },
                                      "end": {
                                        "row": 1,
                                        "column": 35
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 1,
                                "column": 35
                              },
                              "end": {
                                "row": 1,
                                "column": 36
                              },
                              "text": ","
                            },
                            {
                              "type": "number",
                              "start": {
                                "row": 1,
                                "column": 37
                              },
                              "end": {
                                "row": 1,
                                "column": 39
                              },
                              "text": "16"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 1,
                                "column": 39
                              },
                              "end": {
                                "row": 1,
                                "column": 40
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 1,
                    "column": 40
                  },
                  "end": {
                    "row": 1,
                    "column": 41
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 2,
                "column": 4
              },
              "end": {
                "row": 2,
                "column": 72
              },
              "text": "// If parseInt didn't find a hex diigt, it returns NaN so return the"
            },
            {
              "type": "comment",
              "start": {
                "row": 3,
                "column": 4
              },
              "end": {
                "row": 3,
                "column": 25
              },
              "text": "// escaped character."
            },
            {
              "type": "comment",
              "start": {
                "row": 4,
                "column": 4
              },
              "end": {
                "row": 4,
                "column": 77
              },
              "text": "// Otherwise, parseInt will stop at the first non-hex digit so there's no"
            },
            {
              "type": "comment",
              "start": {
                "row": 5,
                "column": 4
              },
              "end": {
                "row": 5,
                "column": 47
              },
              "text": "// need to worry about trailing whitespace."
            },
            {
              "type": "if_statement",
              "start": {
                "row": 6,
                "column": 4
              },
              "end": {
                "row": 19,
                "column": 5
              },
              "text": "if (i > 0xffff) {\n      // A supplemental codepoint.\n      return i -= 0x10000,\n        String.fromCharCode(\n            0xd800 + (i >> 10),\n            0xdc00 + (i & 0x3FF));\n    } else if (i == i) {\n      return String.fromCharCode(i);\n    } else if (s[1] < ' ') {\n      // \"a backslash followed by a newline is ignored\".\n      return '';\n    } else {\n      return s[1];\n    }",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 6,
                    "column": 4
                  },
                  "end": {
                    "row": 6,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "parenthesized_expression",
                  "start": {
                    "row": 6,
                    "column": 7
                  },
                  "end": {
                    "row": 6,
                    "column": 19
                  },
                  "text": "(i > 0xffff)",
                  "children": [
                    {
                      "type": "(",
                      "start": {
                        "row": 6,
                        "column": 7
                      },
                      "end": {
                        "row": 6,
                        "column": 8
                      },
                      "text": "("
                    },
                    {
                      "type": "binary_expression",
                      "start": {
                        "row": 6,
                        "column": 8
                      },
                      "end": {
                        "row": 6,
                        "column": 18
                      },
                      "text": "i > 0xffff",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 6,
                            "column": 8
                          },
                          "end": {
                            "row": 6,
                            "column": 9
                          },
                          "text": "i"
                        },
                        {
                          "type": ">",
                          "start": {
                            "row": 6,
                            "column": 10
                          },
                          "end": {
                            "row": 6,
                            "column": 11
                          },
                          "text": ">"
                        },
                        {
                          "type": "number",
                          "start": {
                            "row": 6,
                            "column": 12
                          },
                          "end": {
                            "row": 6,
                            "column": 18
                          },
                          "text": "0xffff"
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start": {
                        "row": 6,
                        "column": 18
                      },
                      "end": {
                        "row": 6,
                        "column": 19
                      },
                      "text": ")"
                    }
                  ]
                },
                {
                  "type": "statement_block",
                  "start": {
                    "row": 6,
                    "column": 20
                  },
                  "end": {
                    "row": 12,
                    "column": 5
                  },
                  "text": "{\n      // A supplemental codepoint.\n      return i -= 0x10000,\n        String.fromCharCode(\n            0xd800 + (i >> 10),\n            0xdc00 + (i & 0x3FF));\n    }",
                  "children": [
                    {
                      "type": "{",
                      "start": {
                        "row": 6,
                        "column": 20
                      },
                      "end": {
                        "row": 6,
                        "column": 21
                      },
                      "text": "{"
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 7,
                        "column": 6
                      },
                      "end": {
                        "row": 7,
                        "column": 34
                      },
                      "text": "// A supplemental codepoint."
                    },
                    {
                      "type": "return_statement",
                      "start": {
                        "row": 8,
                        "column": 6
                      },
                      "end": {
                        "row": 11,
                        "column": 34
                      },
                      "text": "return i -= 0x10000,\n        String.fromCharCode(\n            0xd800 + (i >> 10),\n            0xdc00 + (i & 0x3FF));",
                      "children": [
                        {
                          "type": "return",
                          "start": {
                            "row": 8,
                            "column": 6
                          },
                          "end": {
                            "row": 8,
                            "column": 12
                          },
                          "text": "return"
                        },
                        {
                          "type": "sequence_expression",
                          "start": {
                            "row": 8,
                            "column": 13
                          },
                          "end": {
                            "row": 11,
                            "column": 33
                          },
                          "text": "i -= 0x10000,\n        String.fromCharCode(\n            0xd800 + (i >> 10),\n            0xdc00 + (i & 0x3FF))",
                          "children": [
                            {
                              "type": "augmented_assignment_expression",
                              "start": {
                                "row": 8,
                                "column": 13
                              },
                              "end": {
                                "row": 8,
                                "column": 25
                              },
                              "text": "i -= 0x10000",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 8,
                                    "column": 13
                                  },
                                  "end": {
                                    "row": 8,
                                    "column": 14
                                  },
                                  "text": "i"
                                },
                                {
                                  "type": "-=",
                                  "start": {
                                    "row": 8,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 8,
                                    "column": 17
                                  },
                                  "text": "-="
                                },
                                {
                                  "type": "number",
                                  "start": {
                                    "row": 8,
                                    "column": 18
                                  },
                                  "end": {
                                    "row": 8,
                                    "column": 25
                                  },
                                  "text": "0x10000"
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 8,
                                "column": 25
                              },
                              "end": {
                                "row": 8,
                                "column": 26
                              },
                              "text": ","
                            },
                            {
                              "type": "call_expression",
                              "start": {
                                "row": 9,
                                "column": 8
                              },
                              "end": {
                                "row": 11,
                                "column": 33
                              },
                              "text": "String.fromCharCode(\n            0xd800 + (i >> 10),\n            0xdc00 + (i & 0x3FF))",
                              "children": [
                                {
                                  "type": "member_expression",
                                  "start": {
                                    "row": 9,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 9,
                                    "column": 27
                                  },
                                  "text": "String.fromCharCode",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 9,
                                        "column": 8
                                      },
                                      "end": {
                                        "row": 9,
                                        "column": 14
                                      },
                                      "text": "String"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 9,
                                        "column": 14
                                      },
                                      "end": {
                                        "row": 9,
                                        "column": 15
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "property_identifier",
                                      "start": {
                                        "row": 9,
                                        "column": 15
                                      },
                                      "end": {
                                        "row": 9,
                                        "column": 27
                                      },
                                      "text": "fromCharCode"
                                    }
                                  ]
                                },
                                {
                                  "type": "arguments",
                                  "start": {
                                    "row": 9,
                                    "column": 27
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 33
                                  },
                                  "text": "(\n            0xd800 + (i >> 10),\n            0xdc00 + (i & 0x3FF))",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 9,
                                        "column": 27
                                      },
                                      "end": {
                                        "row": 9,
                                        "column": 28
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start": {
                                        "row": 10,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 10,
                                        "column": 30
                                      },
                                      "text": "0xd800 + (i >> 10)",
                                      "children": [
                                        {
                                          "type": "number",
                                          "start": {
                                            "row": 10,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 10,
                                            "column": 18
                                          },
                                          "text": "0xd800"
                                        },
                                        {
                                          "type": "+",
                                          "start": {
                                            "row": 10,
                                            "column": 19
                                          },
                                          "end": {
                                            "row": 10,
                                            "column": 20
                                          },
                                          "text": "+"
                                        },
                                        {
                                          "type": "parenthesized_expression",
                                          "start": {
                                            "row": 10,
                                            "column": 21
                                          },
                                          "end": {
                                            "row": 10,
                                            "column": 30
                                          },
                                          "text": "(i >> 10)",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 10,
                                                "column": 21
                                              },
                                              "end": {
                                                "row": 10,
                                                "column": 22
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start": {
                                                "row": 10,
                                                "column": 22
                                              },
                                              "end": {
                                                "row": 10,
                                                "column": 29
                                              },
                                              "text": "i >> 10",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 10,
                                                    "column": 22
                                                  },
                                                  "end": {
                                                    "row": 10,
                                                    "column": 23
                                                  },
                                                  "text": "i"
                                                },
                                                {
                                                  "type": ">>",
                                                  "start": {
                                                    "row": 10,
                                                    "column": 24
                                                  },
                                                  "end": {
                                                    "row": 10,
                                                    "column": 26
                                                  },
                                                  "text": ">>"
                                                },
                                                {
                                                  "type": "number",
                                                  "start": {
                                                    "row": 10,
                                                    "column": 27
                                                  },
                                                  "end": {
                                                    "row": 10,
                                                    "column": 29
                                                  },
                                                  "text": "10"
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 10,
                                                "column": 29
                                              },
                                              "end": {
                                                "row": 10,
                                                "column": 30
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 10,
                                        "column": 30
                                      },
                                      "end": {
                                        "row": 10,
                                        "column": 31
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start": {
                                        "row": 11,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 11,
                                        "column": 32
                                      },
                                      "text": "0xdc00 + (i & 0x3FF)",
                                      "children": [
                                        {
                                          "type": "number",
                                          "start": {
                                            "row": 11,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 11,
                                            "column": 18
                                          },
                                          "text": "0xdc00"
                                        },
                                        {
                                          "type": "+",
                                          "start": {
                                            "row": 11,
                                            "column": 19
                                          },
                                          "end": {
                                            "row": 11,
                                            "column": 20
                                          },
                                          "text": "+"
                                        },
                                        {
                                          "type": "parenthesized_expression",
                                          "start": {
                                            "row": 11,
                                            "column": 21
                                          },
                                          "end": {
                                            "row": 11,
                                            "column": 32
                                          },
                                          "text": "(i & 0x3FF)",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 11,
                                                "column": 21
                                              },
                                              "end": {
                                                "row": 11,
                                                "column": 22
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start": {
                                                "row": 11,
                                                "column": 22
                                              },
                                              "end": {
                                                "row": 11,
                                                "column": 31
                                              },
                                              "text": "i & 0x3FF",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 11,
                                                    "column": 22
                                                  },
                                                  "end": {
                                                    "row": 11,
                                                    "column": 23
                                                  },
                                                  "text": "i"
                                                },
                                                {
                                                  "type": "&",
                                                  "start": {
                                                    "row": 11,
                                                    "column": 24
                                                  },
                                                  "end": {
                                                    "row": 11,
                                                    "column": 25
                                                  },
                                                  "text": "&"
                                                },
                                                {
                                                  "type": "number",
                                                  "start": {
                                                    "row": 11,
                                                    "column": 26
                                                  },
                                                  "end": {
                                                    "row": 11,
                                                    "column": 31
                                                  },
                                                  "text": "0x3FF"
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 11,
                                                "column": 31
                                              },
                                              "end": {
                                                "row": 11,
                                                "column": 32
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 11,
                                        "column": 32
                                      },
                                      "end": {
                                        "row": 11,
                                        "column": 33
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start": {
                            "row": 11,
                            "column": 33
                          },
                          "end": {
                            "row": 11,
                            "column": 34
                          },
                          "text": ";"
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start": {
                        "row": 12,
                        "column": 4
                      },
                      "end": {
                        "row": 12,
                        "column": 5
                      },
                      "text": "}"
                    }
                  ]
                },
                {
                  "type": "else_clause",
                  "start": {
                    "row": 12,
                    "column": 6
                  },
                  "end": {
                    "row": 19,
                    "column": 5
                  },
                  "text": "else if (i == i) {\n      return String.fromCharCode(i);\n    } else if (s[1] < ' ') {\n      // \"a backslash followed by a newline is ignored\".\n      return '';\n    } else {\n      return s[1];\n    }",
                  "children": [
                    {
                      "type": "else",
                      "start": {
                        "row": 12,
                        "column": 6
                      },
                      "end": {
                        "row": 12,
                        "column": 10
                      },
                      "text": "else"
                    },
                    {
                      "type": "if_statement",
                      "start": {
                        "row": 12,
                        "column": 11
                      },
                      "end": {
                        "row": 19,
                        "column": 5
                      },
                      "text": "if (i == i) {\n      return String.fromCharCode(i);\n    } else if (s[1] < ' ') {\n      // \"a backslash followed by a newline is ignored\".\n      return '';\n    } else {\n      return s[1];\n    }",
                      "children": [
                        {
                          "type": "if",
                          "start": {
                            "row": 12,
                            "column": 11
                          },
                          "end": {
                            "row": 12,
                            "column": 13
                          },
                          "text": "if"
                        },
                        {
                          "type": "parenthesized_expression",
                          "start": {
                            "row": 12,
                            "column": 14
                          },
                          "end": {
                            "row": 12,
                            "column": 22
                          },
                          "text": "(i == i)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 12,
                                "column": 14
                              },
                              "end": {
                                "row": 12,
                                "column": 15
                              },
                              "text": "("
                            },
                            {
                              "type": "binary_expression",
                              "start": {
                                "row": 12,
                                "column": 15
                              },
                              "end": {
                                "row": 12,
                                "column": 21
                              },
                              "text": "i == i",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 12,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 12,
                                    "column": 16
                                  },
                                  "text": "i"
                                },
                                {
                                  "type": "==",
                                  "start": {
                                    "row": 12,
                                    "column": 17
                                  },
                                  "end": {
                                    "row": 12,
                                    "column": 19
                                  },
                                  "text": "=="
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 12,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 12,
                                    "column": 21
                                  },
                                  "text": "i"
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 12,
                                "column": 21
                              },
                              "end": {
                                "row": 12,
                                "column": 22
                              },
                              "text": ")"
                            }
                          ]
                        },
                        {
                          "type": "statement_block",
                          "start": {
                            "row": 12,
                            "column": 23
                          },
                          "end": {
                            "row": 14,
                            "column": 5
                          },
                          "text": "{\n      return String.fromCharCode(i);\n    }",
                          "children": [
                            {
                              "type": "{",
                              "start": {
                                "row": 12,
                                "column": 23
                              },
                              "end": {
                                "row": 12,
                                "column": 24
                              },
                              "text": "{"
                            },
                            {
                              "type": "return_statement",
                              "start": {
                                "row": 13,
                                "column": 6
                              },
                              "end": {
                                "row": 13,
                                "column": 36
                              },
                              "text": "return String.fromCharCode(i);",
                              "children": [
                                {
                                  "type": "return",
                                  "start": {
                                    "row": 13,
                                    "column": 6
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 12
                                  },
                                  "text": "return"
                                },
                                {
                                  "type": "call_expression",
                                  "start": {
                                    "row": 13,
                                    "column": 13
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 35
                                  },
                                  "text": "String.fromCharCode(i)",
                                  "children": [
                                    {
                                      "type": "member_expression",
                                      "start": {
                                        "row": 13,
                                        "column": 13
                                      },
                                      "end": {
                                        "row": 13,
                                        "column": 32
                                      },
                                      "text": "String.fromCharCode",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 13,
                                            "column": 13
                                          },
                                          "end": {
                                            "row": 13,
                                            "column": 19
                                          },
                                          "text": "String"
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 13,
                                            "column": 19
                                          },
                                          "end": {
                                            "row": 13,
                                            "column": 20
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "property_identifier",
                                          "start": {
                                            "row": 13,
                                            "column": 20
                                          },
                                          "end": {
                                            "row": 13,
                                            "column": 32
                                          },
                                          "text": "fromCharCode"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "arguments",
                                      "start": {
                                        "row": 13,
                                        "column": 32
                                      },
                                      "end": {
                                        "row": 13,
                                        "column": 35
                                      },
                                      "text": "(i)",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 13,
                                            "column": 32
                                          },
                                          "end": {
                                            "row": 13,
                                            "column": 33
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 13,
                                            "column": 33
                                          },
                                          "end": {
                                            "row": 13,
                                            "column": 34
                                          },
                                          "text": "i"
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 13,
                                            "column": 34
                                          },
                                          "end": {
                                            "row": 13,
                                            "column": 35
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start": {
                                    "row": 13,
                                    "column": 35
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 36
                                  },
                                  "text": ";"
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start": {
                                "row": 14,
                                "column": 4
                              },
                              "end": {
                                "row": 14,
                                "column": 5
                              },
                              "text": "}"
                            }
                          ]
                        },
                        {
                          "type": "else_clause",
                          "start": {
                            "row": 14,
                            "column": 6
                          },
                          "end": {
                            "row": 19,
                            "column": 5
                          },
                          "text": "else if (s[1] < ' ') {\n      // \"a backslash followed by a newline is ignored\".\n      return '';\n    } else {\n      return s[1];\n    }",
                          "children": [
                            {
                              "type": "else",
                              "start": {
                                "row": 14,
                                "column": 6
                              },
                              "end": {
                                "row": 14,
                                "column": 10
                              },
                              "text": "else"
                            },
                            {
                              "type": "if_statement",
                              "start": {
                                "row": 14,
                                "column": 11
                              },
                              "end": {
                                "row": 19,
                                "column": 5
                              },
                              "text": "if (s[1] < ' ') {\n      // \"a backslash followed by a newline is ignored\".\n      return '';\n    } else {\n      return s[1];\n    }",
                              "children": [
                                {
                                  "type": "if",
                                  "start": {
                                    "row": 14,
                                    "column": 11
                                  },
                                  "end": {
                                    "row": 14,
                                    "column": 13
                                  },
                                  "text": "if"
                                },
                                {
                                  "type": "parenthesized_expression",
                                  "start": {
                                    "row": 14,
                                    "column": 14
                                  },
                                  "end": {
                                    "row": 14,
                                    "column": 26
                                  },
                                  "text": "(s[1] < ' ')",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 14,
                                        "column": 14
                                      },
                                      "end": {
                                        "row": 14,
                                        "column": 15
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start": {
                                        "row": 14,
                                        "column": 15
                                      },
                                      "end": {
                                        "row": 14,
                                        "column": 25
                                      },
                                      "text": "s[1] < ' '",
                                      "children": [
                                        {
                                          "type": "subscript_expression",
                                          "start": {
                                            "row": 14,
                                            "column": 15
                                          },
                                          "end": {
                                            "row": 14,
                                            "column": 19
                                          },
                                          "text": "s[1]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 14,
                                                "column": 15
                                              },
                                              "end": {
                                                "row": 14,
                                                "column": 16
                                              },
                                              "text": "s"
                                            },
                                            {
                                              "type": "[",
                                              "start": {
                                                "row": 14,
                                                "column": 16
                                              },
                                              "end": {
                                                "row": 14,
                                                "column": 17
                                              },
                                              "text": "["
                                            },
                                            {
                                              "type": "number",
                                              "start": {
                                                "row": 14,
                                                "column": 17
                                              },
                                              "end": {
                                                "row": 14,
                                                "column": 18
                                              },
                                              "text": "1"
                                            },
                                            {
                                              "type": "]",
                                              "start": {
                                                "row": 14,
                                                "column": 18
                                              },
                                              "end": {
                                                "row": 14,
                                                "column": 19
                                              },
                                              "text": "]"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "<",
                                          "start": {
                                            "row": 14,
                                            "column": 20
                                          },
                                          "end": {
                                            "row": 14,
                                            "column": 21
                                          },
                                          "text": "<"
                                        },
                                        {
                                          "type": "string",
                                          "start": {
                                            "row": 14,
                                            "column": 22
                                          },
                                          "end": {
                                            "row": 14,
                                            "column": 25
                                          },
                                          "text": "' '",
                                          "children": [
                                            {
                                              "type": "'",
                                              "start": {
                                                "row": 14,
                                                "column": 22
                                              },
                                              "end": {
                                                "row": 14,
                                                "column": 23
                                              },
                                              "text": "'"
                                            },
                                            {
                                              "type": "string_fragment",
                                              "start": {
                                                "row": 14,
                                                "column": 23
                                              },
                                              "end": {
                                                "row": 14,
                                                "column": 24
                                              },
                                              "text": " "
                                            },
                                            {
                                              "type": "'",
                                              "start": {
                                                "row": 14,
                                                "column": 24
                                              },
                                              "end": {
                                                "row": 14,
                                                "column": 25
                                              },
                                              "text": "'"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 14,
                                        "column": 25
                                      },
                                      "end": {
                                        "row": 14,
                                        "column": 26
                                      },
                                      "text": ")"
                                    }
                                  ]
                                },
                                {
                                  "type": "statement_block",
                                  "start": {
                                    "row": 14,
                                    "column": 27
                                  },
                                  "end": {
                                    "row": 17,
                                    "column": 5
                                  },
                                  "text": "{\n      // \"a backslash followed by a newline is ignored\".\n      return '';\n    }",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start": {
                                        "row": 14,
                                        "column": 27
                                      },
                                      "end": {
                                        "row": 14,
                                        "column": 28
                                      },
                                      "text": "{"
                                    },
                                    {
                                      "type": "comment",
                                      "start": {
                                        "row": 15,
                                        "column": 6
                                      },
                                      "end": {
                                        "row": 15,
                                        "column": 56
                                      },
                                      "text": "// \"a backslash followed by a newline is ignored\"."
                                    },
                                    {
                                      "type": "return_statement",
                                      "start": {
                                        "row": 16,
                                        "column": 6
                                      },
                                      "end": {
                                        "row": 16,
                                        "column": 16
                                      },
                                      "text": "return '';",
                                      "children": [
                                        {
                                          "type": "return",
                                          "start": {
                                            "row": 16,
                                            "column": 6
                                          },
                                          "end": {
                                            "row": 16,
                                            "column": 12
                                          },
                                          "text": "return"
                                        },
                                        {
                                          "type": "string",
                                          "start": {
                                            "row": 16,
                                            "column": 13
                                          },
                                          "end": {
                                            "row": 16,
                                            "column": 15
                                          },
                                          "text": "''",
                                          "children": [
                                            {
                                              "type": "'",
                                              "start": {
                                                "row": 16,
                                                "column": 13
                                              },
                                              "end": {
                                                "row": 16,
                                                "column": 14
                                              },
                                              "text": "'"
                                            },
                                            {
                                              "type": "'",
                                              "start": {
                                                "row": 16,
                                                "column": 14
                                              },
                                              "end": {
                                                "row": 16,
                                                "column": 15
                                              },
                                              "text": "'"
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start": {
                                            "row": 16,
                                            "column": 15
                                          },
                                          "end": {
                                            "row": 16,
                                            "column": 16
                                          },
                                          "text": ";"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start": {
                                        "row": 17,
                                        "column": 4
                                      },
                                      "end": {
                                        "row": 17,
                                        "column": 5
                                      },
                                      "text": "}"
                                    }
                                  ]
                                },
                                {
                                  "type": "else_clause",
                                  "start": {
                                    "row": 17,
                                    "column": 6
                                  },
                                  "end": {
                                    "row": 19,
                                    "column": 5
                                  },
                                  "text": "else {\n      return s[1];\n    }",
                                  "children": [
                                    {
                                      "type": "else",
                                      "start": {
                                        "row": 17,
                                        "column": 6
                                      },
                                      "end": {
                                        "row": 17,
                                        "column": 10
                                      },
                                      "text": "else"
                                    },
                                    {
                                      "type": "statement_block",
                                      "start": {
                                        "row": 17,
                                        "column": 11
                                      },
                                      "end": {
                                        "row": 19,
                                        "column": 5
                                      },
                                      "text": "{\n      return s[1];\n    }",
                                      "children": [
                                        {
                                          "type": "{",
                                          "start": {
                                            "row": 17,
                                            "column": 11
                                          },
                                          "end": {
                                            "row": 17,
                                            "column": 12
                                          },
                                          "text": "{"
                                        },
                                        {
                                          "type": "return_statement",
                                          "start": {
                                            "row": 18,
                                            "column": 6
                                          },
                                          "end": {
                                            "row": 18,
                                            "column": 18
                                          },
                                          "text": "return s[1];",
                                          "children": [
                                            {
                                              "type": "return",
                                              "start": {
                                                "row": 18,
                                                "column": 6
                                              },
                                              "end": {
                                                "row": 18,
                                                "column": 12
                                              },
                                              "text": "return"
                                            },
                                            {
                                              "type": "subscript_expression",
                                              "start": {
                                                "row": 18,
                                                "column": 13
                                              },
                                              "end": {
                                                "row": 18,
                                                "column": 17
                                              },
                                              "text": "s[1]",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 18,
                                                    "column": 13
                                                  },
                                                  "end": {
                                                    "row": 18,
                                                    "column": 14
                                                  },
                                                  "text": "s"
                                                },
                                                {
                                                  "type": "[",
                                                  "start": {
                                                    "row": 18,
                                                    "column": 14
                                                  },
                                                  "end": {
                                                    "row": 18,
                                                    "column": 15
                                                  },
                                                  "text": "["
                                                },
                                                {
                                                  "type": "number",
                                                  "start": {
                                                    "row": 18,
                                                    "column": 15
                                                  },
                                                  "end": {
                                                    "row": 18,
                                                    "column": 16
                                                  },
                                                  "text": "1"
                                                },
                                                {
                                                  "type": "]",
                                                  "start": {
                                                    "row": 18,
                                                    "column": 16
                                                  },
                                                  "end": {
                                                    "row": 18,
                                                    "column": 17
                                                  },
                                                  "text": "]"
                                                }
                                              ]
                                            },
                                            {
                                              "type": ";",
                                              "start": {
                                                "row": 18,
                                                "column": 17
                                              },
                                              "end": {
                                                "row": 18,
                                                "column": 18
                                              },
                                              "text": ";"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "}",
                                          "start": {
                                            "row": 19,
                                            "column": 4
                                          },
                                          "end": {
                                            "row": 19,
                                            "column": 5
                                          },
                                          "text": "}"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start": {
                "row": 20,
                "column": 2
              },
              "end": {
                "row": 20,
                "column": 3
              },
              "text": "}"
            }
          ]
        }
      ]
    }
  ]
}