{
  "type": "program",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 64,
    "column": 1
  },
  "text": "function getOrCreateInjectable(di, token, flags) {\n    if (flags === void 0) { flags = 0 /* Default */; }\n    var bloomHash = bloomHashBit(token);\n    // If the token has a bloom hash, then it is a directive that is public to the injection system\n    // (diPublic). If there is no hash, fall back to the module injector.\n    if (bloomHash === null) {\n        var moduleInjector = getPreviousOrParentNode().view[INJECTOR$1];\n        var formerInjector = setCurrentInjector(moduleInjector);\n        try {\n            return inject(token, flags);\n        }\n        finally {\n            setCurrentInjector(formerInjector);\n        }\n    }\n    else {\n        var injector = di;\n        while (injector) {\n            // Get the closest potential matching injector (upwards in the injector tree) that\n            // *potentially* has the token.\n            injector = bloomFindPossibleInjector(injector, bloomHash, flags);\n            // If no injector is found, we *know* that there is no ancestor injector that contains the\n            // token, so we abort.\n            if (!injector) {\n                break;\n            }\n            // At this point, we have an injector which *may* contain the token, so we step through the\n            // directives associated with the injector's corresponding node to get the directive instance.\n            var node = injector.node;\n            var nodeFlags = node.tNode.flags;\n            var count = nodeFlags & 4095 /* DirectiveCountMask */;\n            if (count !== 0) {\n                var start = nodeFlags >> 14 /* DirectiveStartingIndexShift */;\n                var end = start + count;\n                var defs = node.view[TVIEW].directives;\n                for (var i = start; i < end; i++) {\n                    // Get the definition for the directive at this index and, if it is injectable (diPublic),\n                    // and matches the given token, return the directive instance.\n                    var directiveDef = defs[i];\n                    if (directiveDef.type === token && directiveDef.diPublic) {\n                        return node.view[DIRECTIVES][i];\n                    }\n                }\n            }\n            // If we *didn't* find the directive for the token and we are searching the current node's\n            // injector, it's possible the directive is on this node and hasn't been created yet.\n            var instance = void 0;\n            if (injector === di && (instance = searchMatchesQueuedForCreation(node, token))) {\n                return instance;\n            }\n            // The def wasn't found anywhere on this node, so it was a false positive.\n            // If flags permit, traverse up the tree and continue searching.\n            if (flags & 2 /* Self */ || flags & 1 /* Host */ && !sameHostView(injector)) {\n                injector = null;\n            }\n            else {\n                injector = injector.parent;\n            }\n        }\n    }\n    // No directive was found for the given token.\n    if (flags & 8 /* Optional */)\n        return null;\n    throw new Error(\"Injector: NOT_FOUND [\" + stringify$1(token) + \"]\");\n}",
  "children": [
    {
      "type": "function_declaration",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 64,
        "column": 1
      },
      "text": "function getOrCreateInjectable(di, token, flags) {\n    if (flags === void 0) { flags = 0 /* Default */; }\n    var bloomHash = bloomHashBit(token);\n    // If the token has a bloom hash, then it is a directive that is public to the injection system\n    // (diPublic). If there is no hash, fall back to the module injector.\n    if (bloomHash === null) {\n        var moduleInjector = getPreviousOrParentNode().view[INJECTOR$1];\n        var formerInjector = setCurrentInjector(moduleInjector);\n        try {\n            return inject(token, flags);\n        }\n        finally {\n            setCurrentInjector(formerInjector);\n        }\n    }\n    else {\n        var injector = di;\n        while (injector) {\n            // Get the closest potential matching injector (upwards in the injector tree) that\n            // *potentially* has the token.\n            injector = bloomFindPossibleInjector(injector, bloomHash, flags);\n            // If no injector is found, we *know* that there is no ancestor injector that contains the\n            // token, so we abort.\n            if (!injector) {\n                break;\n            }\n            // At this point, we have an injector which *may* contain the token, so we step through the\n            // directives associated with the injector's corresponding node to get the directive instance.\n            var node = injector.node;\n            var nodeFlags = node.tNode.flags;\n            var count = nodeFlags & 4095 /* DirectiveCountMask */;\n            if (count !== 0) {\n                var start = nodeFlags >> 14 /* DirectiveStartingIndexShift */;\n                var end = start + count;\n                var defs = node.view[TVIEW].directives;\n                for (var i = start; i < end; i++) {\n                    // Get the definition for the directive at this index and, if it is injectable (diPublic),\n                    // and matches the given token, return the directive instance.\n                    var directiveDef = defs[i];\n                    if (directiveDef.type === token && directiveDef.diPublic) {\n                        return node.view[DIRECTIVES][i];\n                    }\n                }\n            }\n            // If we *didn't* find the directive for the token and we are searching the current node's\n            // injector, it's possible the directive is on this node and hasn't been created yet.\n            var instance = void 0;\n            if (injector === di && (instance = searchMatchesQueuedForCreation(node, token))) {\n                return instance;\n            }\n            // The def wasn't found anywhere on this node, so it was a false positive.\n            // If flags permit, traverse up the tree and continue searching.\n            if (flags & 2 /* Self */ || flags & 1 /* Host */ && !sameHostView(injector)) {\n                injector = null;\n            }\n            else {\n                injector = injector.parent;\n            }\n        }\n    }\n    // No directive was found for the given token.\n    if (flags & 8 /* Optional */)\n        return null;\n    throw new Error(\"Injector: NOT_FOUND [\" + stringify$1(token) + \"]\");\n}",
      "children": [
        {
          "type": "function",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 8
          },
          "text": "function"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 9
          },
          "end": {
            "row": 0,
            "column": 30
          },
          "text": "getOrCreateInjectable"
        },
        {
          "type": "formal_parameters",
          "start": {
            "row": 0,
            "column": 30
          },
          "end": {
            "row": 0,
            "column": 48
          },
          "text": "(di, token, flags)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 30
              },
              "end": {
                "row": 0,
                "column": 31
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 31
              },
              "end": {
                "row": 0,
                "column": 33
              },
              "text": "di"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 33
              },
              "end": {
                "row": 0,
                "column": 34
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 35
              },
              "end": {
                "row": 0,
                "column": 40
              },
              "text": "token"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 40
              },
              "end": {
                "row": 0,
                "column": 41
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 42
              },
              "end": {
                "row": 0,
                "column": 47
              },
              "text": "flags"
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 47
              },
              "end": {
                "row": 0,
                "column": 48
              },
              "text": ")"
            }
          ]
        },
        {
          "type": "statement_block",
          "start": {
            "row": 0,
            "column": 49
          },
          "end": {
            "row": 64,
            "column": 1
          },
          "text": "{\n    if (flags === void 0) { flags = 0 /* Default */; }\n    var bloomHash = bloomHashBit(token);\n    // If the token has a bloom hash, then it is a directive that is public to the injection system\n    // (diPublic). If there is no hash, fall back to the module injector.\n    if (bloomHash === null) {\n        var moduleInjector = getPreviousOrParentNode().view[INJECTOR$1];\n        var formerInjector = setCurrentInjector(moduleInjector);\n        try {\n            return inject(token, flags);\n        }\n        finally {\n            setCurrentInjector(formerInjector);\n        }\n    }\n    else {\n        var injector = di;\n        while (injector) {\n            // Get the closest potential matching injector (upwards in the injector tree) that\n            // *potentially* has the token.\n            injector = bloomFindPossibleInjector(injector, bloomHash, flags);\n            // If no injector is found, we *know* that there is no ancestor injector that contains the\n            // token, so we abort.\n            if (!injector) {\n                break;\n            }\n            // At this point, we have an injector which *may* contain the token, so we step through the\n            // directives associated with the injector's corresponding node to get the directive instance.\n            var node = injector.node;\n            var nodeFlags = node.tNode.flags;\n            var count = nodeFlags & 4095 /* DirectiveCountMask */;\n            if (count !== 0) {\n                var start = nodeFlags >> 14 /* DirectiveStartingIndexShift */;\n                var end = start + count;\n                var defs = node.view[TVIEW].directives;\n                for (var i = start; i < end; i++) {\n                    // Get the definition for the directive at this index and, if it is injectable (diPublic),\n                    // and matches the given token, return the directive instance.\n                    var directiveDef = defs[i];\n                    if (directiveDef.type === token && directiveDef.diPublic) {\n                        return node.view[DIRECTIVES][i];\n                    }\n                }\n            }\n            // If we *didn't* find the directive for the token and we are searching the current node's\n            // injector, it's possible the directive is on this node and hasn't been created yet.\n            var instance = void 0;\n            if (injector === di && (instance = searchMatchesQueuedForCreation(node, token))) {\n                return instance;\n            }\n            // The def wasn't found anywhere on this node, so it was a false positive.\n            // If flags permit, traverse up the tree and continue searching.\n            if (flags & 2 /* Self */ || flags & 1 /* Host */ && !sameHostView(injector)) {\n                injector = null;\n            }\n            else {\n                injector = injector.parent;\n            }\n        }\n    }\n    // No directive was found for the given token.\n    if (flags & 8 /* Optional */)\n        return null;\n    throw new Error(\"Injector: NOT_FOUND [\" + stringify$1(token) + \"]\");\n}",
          "children": [
            {
              "type": "{",
              "start": {
                "row": 0,
                "column": 49
              },
              "end": {
                "row": 0,
                "column": 50
              },
              "text": "{"
            },
            {
              "type": "if_statement",
              "start": {
                "row": 1,
                "column": 4
              },
              "end": {
                "row": 1,
                "column": 54
              },
              "text": "if (flags === void 0) { flags = 0 /* Default */; }",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 1,
                    "column": 4
                  },
                  "end": {
                    "row": 1,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "parenthesized_expression",
                  "start": {
                    "row": 1,
                    "column": 7
                  },
                  "end": {
                    "row": 1,
                    "column": 25
                  },
                  "text": "(flags === void 0)",
                  "children": [
                    {
                      "type": "(",
                      "start": {
                        "row": 1,
                        "column": 7
                      },
                      "end": {
                        "row": 1,
                        "column": 8
                      },
                      "text": "("
                    },
                    {
                      "type": "binary_expression",
                      "start": {
                        "row": 1,
                        "column": 8
                      },
                      "end": {
                        "row": 1,
                        "column": 24
                      },
                      "text": "flags === void 0",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 1,
                            "column": 8
                          },
                          "end": {
                            "row": 1,
                            "column": 13
                          },
                          "text": "flags"
                        },
                        {
                          "type": "===",
                          "start": {
                            "row": 1,
                            "column": 14
                          },
                          "end": {
                            "row": 1,
                            "column": 17
                          },
                          "text": "==="
                        },
                        {
                          "type": "unary_expression",
                          "start": {
                            "row": 1,
                            "column": 18
                          },
                          "end": {
                            "row": 1,
                            "column": 24
                          },
                          "text": "void 0",
                          "children": [
                            {
                              "type": "void",
                              "start": {
                                "row": 1,
                                "column": 18
                              },
                              "end": {
                                "row": 1,
                                "column": 22
                              },
                              "text": "void"
                            },
                            {
                              "type": "number",
                              "start": {
                                "row": 1,
                                "column": 23
                              },
                              "end": {
                                "row": 1,
                                "column": 24
                              },
                              "text": "0"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start": {
                        "row": 1,
                        "column": 24
                      },
                      "end": {
                        "row": 1,
                        "column": 25
                      },
                      "text": ")"
                    }
                  ]
                },
                {
                  "type": "statement_block",
                  "start": {
                    "row": 1,
                    "column": 26
                  },
                  "end": {
                    "row": 1,
                    "column": 54
                  },
                  "text": "{ flags = 0 /* Default */; }",
                  "children": [
                    {
                      "type": "{",
                      "start": {
                        "row": 1,
                        "column": 26
                      },
                      "end": {
                        "row": 1,
                        "column": 27
                      },
                      "text": "{"
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 1,
                        "column": 28
                      },
                      "end": {
                        "row": 1,
                        "column": 52
                      },
                      "text": "flags = 0 /* Default */;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start": {
                            "row": 1,
                            "column": 28
                          },
                          "end": {
                            "row": 1,
                            "column": 37
                          },
                          "text": "flags = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 1,
                                "column": 28
                              },
                              "end": {
                                "row": 1,
                                "column": 33
                              },
                              "text": "flags"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 1,
                                "column": 34
                              },
                              "end": {
                                "row": 1,
                                "column": 35
                              },
                              "text": "="
                            },
                            {
                              "type": "number",
                              "start": {
                                "row": 1,
                                "column": 36
                              },
                              "end": {
                                "row": 1,
                                "column": 37
                              },
                              "text": "0"
                            }
                          ]
                        },
                        {
                          "type": "comment",
                          "start": {
                            "row": 1,
                            "column": 38
                          },
                          "end": {
                            "row": 1,
                            "column": 51
                          },
                          "text": "/* Default */"
                        },
                        {
                          "type": ";",
                          "start": {
                            "row": 1,
                            "column": 51
                          },
                          "end": {
                            "row": 1,
                            "column": 52
                          },
                          "text": ";"
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start": {
                        "row": 1,
                        "column": 53
                      },
                      "end": {
                        "row": 1,
                        "column": 54
                      },
                      "text": "}"
                    }
                  ]
                }
              ]
            },
            {
              "type": "variable_declaration",
              "start": {
                "row": 2,
                "column": 4
              },
              "end": {
                "row": 2,
                "column": 40
              },
              "text": "var bloomHash = bloomHashBit(token);",
              "children": [
                {
                  "type": "var",
                  "start": {
                    "row": 2,
                    "column": 4
                  },
                  "end": {
                    "row": 2,
                    "column": 7
                  },
                  "text": "var"
                },
                {
                  "type": "variable_declarator",
                  "start": {
                    "row": 2,
                    "column": 8
                  },
                  "end": {
                    "row": 2,
                    "column": 39
                  },
                  "text": "bloomHash = bloomHashBit(token)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 2,
                        "column": 8
                      },
                      "end": {
                        "row": 2,
                        "column": 17
                      },
                      "text": "bloomHash"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 2,
                        "column": 18
                      },
                      "end": {
                        "row": 2,
                        "column": 19
                      },
                      "text": "="
                    },
                    {
                      "type": "call_expression",
                      "start": {
                        "row": 2,
                        "column": 20
                      },
                      "end": {
                        "row": 2,
                        "column": 39
                      },
                      "text": "bloomHashBit(token)",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 2,
                            "column": 20
                          },
                          "end": {
                            "row": 2,
                            "column": 32
                          },
                          "text": "bloomHashBit"
                        },
                        {
                          "type": "arguments",
                          "start": {
                            "row": 2,
                            "column": 32
                          },
                          "end": {
                            "row": 2,
                            "column": 39
                          },
                          "text": "(token)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 2,
                                "column": 32
                              },
                              "end": {
                                "row": 2,
                                "column": 33
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 2,
                                "column": 33
                              },
                              "end": {
                                "row": 2,
                                "column": 38
                              },
                              "text": "token"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 2,
                                "column": 38
                              },
                              "end": {
                                "row": 2,
                                "column": 39
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 2,
                    "column": 39
                  },
                  "end": {
                    "row": 2,
                    "column": 40
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 3,
                "column": 4
              },
              "end": {
                "row": 3,
                "column": 99
              },
              "text": "// If the token has a bloom hash, then it is a directive that is public to the injection system"
            },
            {
              "type": "comment",
              "start": {
                "row": 4,
                "column": 4
              },
              "end": {
                "row": 4,
                "column": 73
              },
              "text": "// (diPublic). If there is no hash, fall back to the module injector."
            },
            {
              "type": "if_statement",
              "start": {
                "row": 5,
                "column": 4
              },
              "end": {
                "row": 59,
                "column": 5
              },
              "text": "if (bloomHash === null) {\n        var moduleInjector = getPreviousOrParentNode().view[INJECTOR$1];\n        var formerInjector = setCurrentInjector(moduleInjector);\n        try {\n            return inject(token, flags);\n        }\n        finally {\n            setCurrentInjector(formerInjector);\n        }\n    }\n    else {\n        var injector = di;\n        while (injector) {\n            // Get the closest potential matching injector (upwards in the injector tree) that\n            // *potentially* has the token.\n            injector = bloomFindPossibleInjector(injector, bloomHash, flags);\n            // If no injector is found, we *know* that there is no ancestor injector that contains the\n            // token, so we abort.\n            if (!injector) {\n                break;\n            }\n            // At this point, we have an injector which *may* contain the token, so we step through the\n            // directives associated with the injector's corresponding node to get the directive instance.\n            var node = injector.node;\n            var nodeFlags = node.tNode.flags;\n            var count = nodeFlags & 4095 /* DirectiveCountMask */;\n            if (count !== 0) {\n                var start = nodeFlags >> 14 /* DirectiveStartingIndexShift */;\n                var end = start + count;\n                var defs = node.view[TVIEW].directives;\n                for (var i = start; i < end; i++) {\n                    // Get the definition for the directive at this index and, if it is injectable (diPublic),\n                    // and matches the given token, return the directive instance.\n                    var directiveDef = defs[i];\n                    if (directiveDef.type === token && directiveDef.diPublic) {\n                        return node.view[DIRECTIVES][i];\n                    }\n                }\n            }\n            // If we *didn't* find the directive for the token and we are searching the current node's\n            // injector, it's possible the directive is on this node and hasn't been created yet.\n            var instance = void 0;\n            if (injector === di && (instance = searchMatchesQueuedForCreation(node, token))) {\n                return instance;\n            }\n            // The def wasn't found anywhere on this node, so it was a false positive.\n            // If flags permit, traverse up the tree and continue searching.\n            if (flags & 2 /* Self */ || flags & 1 /* Host */ && !sameHostView(injector)) {\n                injector = null;\n            }\n            else {\n                injector = injector.parent;\n            }\n        }\n    }",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 5,
                    "column": 4
                  },
                  "end": {
                    "row": 5,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "parenthesized_expression",
                  "start": {
                    "row": 5,
                    "column": 7
                  },
                  "end": {
                    "row": 5,
                    "column": 27
                  },
                  "text": "(bloomHash === null)",
                  "children": [
                    {
                      "type": "(",
                      "start": {
                        "row": 5,
                        "column": 7
                      },
                      "end": {
                        "row": 5,
                        "column": 8
                      },
                      "text": "("
                    },
                    {
                      "type": "binary_expression",
                      "start": {
                        "row": 5,
                        "column": 8
                      },
                      "end": {
                        "row": 5,
                        "column": 26
                      },
                      "text": "bloomHash === null",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 5,
                            "column": 8
                          },
                          "end": {
                            "row": 5,
                            "column": 17
                          },
                          "text": "bloomHash"
                        },
                        {
                          "type": "===",
                          "start": {
                            "row": 5,
                            "column": 18
                          },
                          "end": {
                            "row": 5,
                            "column": 21
                          },
                          "text": "==="
                        },
                        {
                          "type": "null",
                          "start": {
                            "row": 5,
                            "column": 22
                          },
                          "end": {
                            "row": 5,
                            "column": 26
                          },
                          "text": "null"
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start": {
                        "row": 5,
                        "column": 26
                      },
                      "end": {
                        "row": 5,
                        "column": 27
                      },
                      "text": ")"
                    }
                  ]
                },
                {
                  "type": "statement_block",
                  "start": {
                    "row": 5,
                    "column": 28
                  },
                  "end": {
                    "row": 14,
                    "column": 5
                  },
                  "text": "{\n        var moduleInjector = getPreviousOrParentNode().view[INJECTOR$1];\n        var formerInjector = setCurrentInjector(moduleInjector);\n        try {\n            return inject(token, flags);\n        }\n        finally {\n            setCurrentInjector(formerInjector);\n        }\n    }",
                  "children": [
                    {
                      "type": "{",
                      "start": {
                        "row": 5,
                        "column": 28
                      },
                      "end": {
                        "row": 5,
                        "column": 29
                      },
                      "text": "{"
                    },
                    {
                      "type": "variable_declaration",
                      "start": {
                        "row": 6,
                        "column": 8
                      },
                      "end": {
                        "row": 6,
                        "column": 72
                      },
                      "text": "var moduleInjector = getPreviousOrParentNode().view[INJECTOR$1];",
                      "children": [
                        {
                          "type": "var",
                          "start": {
                            "row": 6,
                            "column": 8
                          },
                          "end": {
                            "row": 6,
                            "column": 11
                          },
                          "text": "var"
                        },
                        {
                          "type": "variable_declarator",
                          "start": {
                            "row": 6,
                            "column": 12
                          },
                          "end": {
                            "row": 6,
                            "column": 71
                          },
                          "text": "moduleInjector = getPreviousOrParentNode().view[INJECTOR$1]",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 6,
                                "column": 12
                              },
                              "end": {
                                "row": 6,
                                "column": 26
                              },
                              "text": "moduleInjector"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 6,
                                "column": 27
                              },
                              "end": {
                                "row": 6,
                                "column": 28
                              },
                              "text": "="
                            },
                            {
                              "type": "subscript_expression",
                              "start": {
                                "row": 6,
                                "column": 29
                              },
                              "end": {
                                "row": 6,
                                "column": 71
                              },
                              "text": "getPreviousOrParentNode().view[INJECTOR$1]",
                              "children": [
                                {
                                  "type": "member_expression",
                                  "start": {
                                    "row": 6,
                                    "column": 29
                                  },
                                  "end": {
                                    "row": 6,
                                    "column": 59
                                  },
                                  "text": "getPreviousOrParentNode().view",
                                  "children": [
                                    {
                                      "type": "call_expression",
                                      "start": {
                                        "row": 6,
                                        "column": 29
                                      },
                                      "end": {
                                        "row": 6,
                                        "column": 54
                                      },
                                      "text": "getPreviousOrParentNode()",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 6,
                                            "column": 29
                                          },
                                          "end": {
                                            "row": 6,
                                            "column": 52
                                          },
                                          "text": "getPreviousOrParentNode"
                                        },
                                        {
                                          "type": "arguments",
                                          "start": {
                                            "row": 6,
                                            "column": 52
                                          },
                                          "end": {
                                            "row": 6,
                                            "column": 54
                                          },
                                          "text": "()",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 6,
                                                "column": 52
                                              },
                                              "end": {
                                                "row": 6,
                                                "column": 53
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 6,
                                                "column": 53
                                              },
                                              "end": {
                                                "row": 6,
                                                "column": 54
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 6,
                                        "column": 54
                                      },
                                      "end": {
                                        "row": 6,
                                        "column": 55
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "property_identifier",
                                      "start": {
                                        "row": 6,
                                        "column": 55
                                      },
                                      "end": {
                                        "row": 6,
                                        "column": 59
                                      },
                                      "text": "view"
                                    }
                                  ]
                                },
                                {
                                  "type": "[",
                                  "start": {
                                    "row": 6,
                                    "column": 59
                                  },
                                  "end": {
                                    "row": 6,
                                    "column": 60
                                  },
                                  "text": "["
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 6,
                                    "column": 60
                                  },
                                  "end": {
                                    "row": 6,
                                    "column": 70
                                  },
                                  "text": "INJECTOR$1"
                                },
                                {
                                  "type": "]",
                                  "start": {
                                    "row": 6,
                                    "column": 70
                                  },
                                  "end": {
                                    "row": 6,
                                    "column": 71
                                  },
                                  "text": "]"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start": {
                            "row": 6,
                            "column": 71
                          },
                          "end": {
                            "row": 6,
                            "column": 72
                          },
                          "text": ";"
                        }
                      ]
                    },
                    {
                      "type": "variable_declaration",
                      "start": {
                        "row": 7,
                        "column": 8
                      },
                      "end": {
                        "row": 7,
                        "column": 64
                      },
                      "text": "var formerInjector = setCurrentInjector(moduleInjector);",
                      "children": [
                        {
                          "type": "var",
                          "start": {
                            "row": 7,
                            "column": 8
                          },
                          "end": {
                            "row": 7,
                            "column": 11
                          },
                          "text": "var"
                        },
                        {
                          "type": "variable_declarator",
                          "start": {
                            "row": 7,
                            "column": 12
                          },
                          "end": {
                            "row": 7,
                            "column": 63
                          },
                          "text": "formerInjector = setCurrentInjector(moduleInjector)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 7,
                                "column": 12
                              },
                              "end": {
                                "row": 7,
                                "column": 26
                              },
                              "text": "formerInjector"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 7,
                                "column": 27
                              },
                              "end": {
                                "row": 7,
                                "column": 28
                              },
                              "text": "="
                            },
                            {
                              "type": "call_expression",
                              "start": {
                                "row": 7,
                                "column": 29
                              },
                              "end": {
                                "row": 7,
                                "column": 63
                              },
                              "text": "setCurrentInjector(moduleInjector)",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 7,
                                    "column": 29
                                  },
                                  "end": {
                                    "row": 7,
                                    "column": 47
                                  },
                                  "text": "setCurrentInjector"
                                },
                                {
                                  "type": "arguments",
                                  "start": {
                                    "row": 7,
                                    "column": 47
                                  },
                                  "end": {
                                    "row": 7,
                                    "column": 63
                                  },
                                  "text": "(moduleInjector)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 7,
                                        "column": 47
                                      },
                                      "end": {
                                        "row": 7,
                                        "column": 48
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 7,
                                        "column": 48
                                      },
                                      "end": {
                                        "row": 7,
                                        "column": 62
                                      },
                                      "text": "moduleInjector"
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 7,
                                        "column": 62
                                      },
                                      "end": {
                                        "row": 7,
                                        "column": 63
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start": {
                            "row": 7,
                            "column": 63
                          },
                          "end": {
                            "row": 7,
                            "column": 64
                          },
                          "text": ";"
                        }
                      ]
                    },
                    {
                      "type": "try_statement",
                      "start": {
                        "row": 8,
                        "column": 8
                      },
                      "end": {
                        "row": 13,
                        "column": 9
                      },
                      "text": "try {\n            return inject(token, flags);\n        }\n        finally {\n            setCurrentInjector(formerInjector);\n        }",
                      "children": [
                        {
                          "type": "try",
                          "start": {
                            "row": 8,
                            "column": 8
                          },
                          "end": {
                            "row": 8,
                            "column": 11
                          },
                          "text": "try"
                        },
                        {
                          "type": "statement_block",
                          "start": {
                            "row": 8,
                            "column": 12
                          },
                          "end": {
                            "row": 10,
                            "column": 9
                          },
                          "text": "{\n            return inject(token, flags);\n        }",
                          "children": [
                            {
                              "type": "{",
                              "start": {
                                "row": 8,
                                "column": 12
                              },
                              "end": {
                                "row": 8,
                                "column": 13
                              },
                              "text": "{"
                            },
                            {
                              "type": "return_statement",
                              "start": {
                                "row": 9,
                                "column": 12
                              },
                              "end": {
                                "row": 9,
                                "column": 40
                              },
                              "text": "return inject(token, flags);",
                              "children": [
                                {
                                  "type": "return",
                                  "start": {
                                    "row": 9,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 9,
                                    "column": 18
                                  },
                                  "text": "return"
                                },
                                {
                                  "type": "call_expression",
                                  "start": {
                                    "row": 9,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 9,
                                    "column": 39
                                  },
                                  "text": "inject(token, flags)",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 9,
                                        "column": 19
                                      },
                                      "end": {
                                        "row": 9,
                                        "column": 25
                                      },
                                      "text": "inject"
                                    },
                                    {
                                      "type": "arguments",
                                      "start": {
                                        "row": 9,
                                        "column": 25
                                      },
                                      "end": {
                                        "row": 9,
                                        "column": 39
                                      },
                                      "text": "(token, flags)",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 9,
                                            "column": 25
                                          },
                                          "end": {
                                            "row": 9,
                                            "column": 26
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 9,
                                            "column": 26
                                          },
                                          "end": {
                                            "row": 9,
                                            "column": 31
                                          },
                                          "text": "token"
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 9,
                                            "column": 31
                                          },
                                          "end": {
                                            "row": 9,
                                            "column": 32
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 9,
                                            "column": 33
                                          },
                                          "end": {
                                            "row": 9,
                                            "column": 38
                                          },
                                          "text": "flags"
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 9,
                                            "column": 38
                                          },
                                          "end": {
                                            "row": 9,
                                            "column": 39
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start": {
                                    "row": 9,
                                    "column": 39
                                  },
                                  "end": {
                                    "row": 9,
                                    "column": 40
                                  },
                                  "text": ";"
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start": {
                                "row": 10,
                                "column": 8
                              },
                              "end": {
                                "row": 10,
                                "column": 9
                              },
                              "text": "}"
                            }
                          ]
                        },
                        {
                          "type": "finally_clause",
                          "start": {
                            "row": 11,
                            "column": 8
                          },
                          "end": {
                            "row": 13,
                            "column": 9
                          },
                          "text": "finally {\n            setCurrentInjector(formerInjector);\n        }",
                          "children": [
                            {
                              "type": "finally",
                              "start": {
                                "row": 11,
                                "column": 8
                              },
                              "end": {
                                "row": 11,
                                "column": 15
                              },
                              "text": "finally"
                            },
                            {
                              "type": "statement_block",
                              "start": {
                                "row": 11,
                                "column": 16
                              },
                              "end": {
                                "row": 13,
                                "column": 9
                              },
                              "text": "{\n            setCurrentInjector(formerInjector);\n        }",
                              "children": [
                                {
                                  "type": "{",
                                  "start": {
                                    "row": 11,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 17
                                  },
                                  "text": "{"
                                },
                                {
                                  "type": "expression_statement",
                                  "start": {
                                    "row": 12,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 12,
                                    "column": 47
                                  },
                                  "text": "setCurrentInjector(formerInjector);",
                                  "children": [
                                    {
                                      "type": "call_expression",
                                      "start": {
                                        "row": 12,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 12,
                                        "column": 46
                                      },
                                      "text": "setCurrentInjector(formerInjector)",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 12,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 12,
                                            "column": 30
                                          },
                                          "text": "setCurrentInjector"
                                        },
                                        {
                                          "type": "arguments",
                                          "start": {
                                            "row": 12,
                                            "column": 30
                                          },
                                          "end": {
                                            "row": 12,
                                            "column": 46
                                          },
                                          "text": "(formerInjector)",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 12,
                                                "column": 30
                                              },
                                              "end": {
                                                "row": 12,
                                                "column": 31
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 12,
                                                "column": 31
                                              },
                                              "end": {
                                                "row": 12,
                                                "column": 45
                                              },
                                              "text": "formerInjector"
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 12,
                                                "column": 45
                                              },
                                              "end": {
                                                "row": 12,
                                                "column": 46
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start": {
                                        "row": 12,
                                        "column": 46
                                      },
                                      "end": {
                                        "row": 12,
                                        "column": 47
                                      },
                                      "text": ";"
                                    }
                                  ]
                                },
                                {
                                  "type": "}",
                                  "start": {
                                    "row": 13,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 9
                                  },
                                  "text": "}"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start": {
                        "row": 14,
                        "column": 4
                      },
                      "end": {
                        "row": 14,
                        "column": 5
                      },
                      "text": "}"
                    }
                  ]
                },
                {
                  "type": "else_clause",
                  "start": {
                    "row": 15,
                    "column": 4
                  },
                  "end": {
                    "row": 59,
                    "column": 5
                  },
                  "text": "else {\n        var injector = di;\n        while (injector) {\n            // Get the closest potential matching injector (upwards in the injector tree) that\n            // *potentially* has the token.\n            injector = bloomFindPossibleInjector(injector, bloomHash, flags);\n            // If no injector is found, we *know* that there is no ancestor injector that contains the\n            // token, so we abort.\n            if (!injector) {\n                break;\n            }\n            // At this point, we have an injector which *may* contain the token, so we step through the\n            // directives associated with the injector's corresponding node to get the directive instance.\n            var node = injector.node;\n            var nodeFlags = node.tNode.flags;\n            var count = nodeFlags & 4095 /* DirectiveCountMask */;\n            if (count !== 0) {\n                var start = nodeFlags >> 14 /* DirectiveStartingIndexShift */;\n                var end = start + count;\n                var defs = node.view[TVIEW].directives;\n                for (var i = start; i < end; i++) {\n                    // Get the definition for the directive at this index and, if it is injectable (diPublic),\n                    // and matches the given token, return the directive instance.\n                    var directiveDef = defs[i];\n                    if (directiveDef.type === token && directiveDef.diPublic) {\n                        return node.view[DIRECTIVES][i];\n                    }\n                }\n            }\n            // If we *didn't* find the directive for the token and we are searching the current node's\n            // injector, it's possible the directive is on this node and hasn't been created yet.\n            var instance = void 0;\n            if (injector === di && (instance = searchMatchesQueuedForCreation(node, token))) {\n                return instance;\n            }\n            // The def wasn't found anywhere on this node, so it was a false positive.\n            // If flags permit, traverse up the tree and continue searching.\n            if (flags & 2 /* Self */ || flags & 1 /* Host */ && !sameHostView(injector)) {\n                injector = null;\n            }\n            else {\n                injector = injector.parent;\n            }\n        }\n    }",
                  "children": [
                    {
                      "type": "else",
                      "start": {
                        "row": 15,
                        "column": 4
                      },
                      "end": {
                        "row": 15,
                        "column": 8
                      },
                      "text": "else"
                    },
                    {
                      "type": "statement_block",
                      "start": {
                        "row": 15,
                        "column": 9
                      },
                      "end": {
                        "row": 59,
                        "column": 5
                      },
                      "text": "{\n        var injector = di;\n        while (injector) {\n            // Get the closest potential matching injector (upwards in the injector tree) that\n            // *potentially* has the token.\n            injector = bloomFindPossibleInjector(injector, bloomHash, flags);\n            // If no injector is found, we *know* that there is no ancestor injector that contains the\n            // token, so we abort.\n            if (!injector) {\n                break;\n            }\n            // At this point, we have an injector which *may* contain the token, so we step through the\n            // directives associated with the injector's corresponding node to get the directive instance.\n            var node = injector.node;\n            var nodeFlags = node.tNode.flags;\n            var count = nodeFlags & 4095 /* DirectiveCountMask */;\n            if (count !== 0) {\n                var start = nodeFlags >> 14 /* DirectiveStartingIndexShift */;\n                var end = start + count;\n                var defs = node.view[TVIEW].directives;\n                for (var i = start; i < end; i++) {\n                    // Get the definition for the directive at this index and, if it is injectable (diPublic),\n                    // and matches the given token, return the directive instance.\n                    var directiveDef = defs[i];\n                    if (directiveDef.type === token && directiveDef.diPublic) {\n                        return node.view[DIRECTIVES][i];\n                    }\n                }\n            }\n            // If we *didn't* find the directive for the token and we are searching the current node's\n            // injector, it's possible the directive is on this node and hasn't been created yet.\n            var instance = void 0;\n            if (injector === di && (instance = searchMatchesQueuedForCreation(node, token))) {\n                return instance;\n            }\n            // The def wasn't found anywhere on this node, so it was a false positive.\n            // If flags permit, traverse up the tree and continue searching.\n            if (flags & 2 /* Self */ || flags & 1 /* Host */ && !sameHostView(injector)) {\n                injector = null;\n            }\n            else {\n                injector = injector.parent;\n            }\n        }\n    }",
                      "children": [
                        {
                          "type": "{",
                          "start": {
                            "row": 15,
                            "column": 9
                          },
                          "end": {
                            "row": 15,
                            "column": 10
                          },
                          "text": "{"
                        },
                        {
                          "type": "variable_declaration",
                          "start": {
                            "row": 16,
                            "column": 8
                          },
                          "end": {
                            "row": 16,
                            "column": 26
                          },
                          "text": "var injector = di;",
                          "children": [
                            {
                              "type": "var",
                              "start": {
                                "row": 16,
                                "column": 8
                              },
                              "end": {
                                "row": 16,
                                "column": 11
                              },
                              "text": "var"
                            },
                            {
                              "type": "variable_declarator",
                              "start": {
                                "row": 16,
                                "column": 12
                              },
                              "end": {
                                "row": 16,
                                "column": 25
                              },
                              "text": "injector = di",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 16,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 20
                                  },
                                  "text": "injector"
                                },
                                {
                                  "type": "=",
                                  "start": {
                                    "row": 16,
                                    "column": 21
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 22
                                  },
                                  "text": "="
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 16,
                                    "column": 23
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 25
                                  },
                                  "text": "di"
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start": {
                                "row": 16,
                                "column": 25
                              },
                              "end": {
                                "row": 16,
                                "column": 26
                              },
                              "text": ";"
                            }
                          ]
                        },
                        {
                          "type": "while_statement",
                          "start": {
                            "row": 17,
                            "column": 8
                          },
                          "end": {
                            "row": 58,
                            "column": 9
                          },
                          "text": "while (injector) {\n            // Get the closest potential matching injector (upwards in the injector tree) that\n            // *potentially* has the token.\n            injector = bloomFindPossibleInjector(injector, bloomHash, flags);\n            // If no injector is found, we *know* that there is no ancestor injector that contains the\n            // token, so we abort.\n            if (!injector) {\n                break;\n            }\n            // At this point, we have an injector which *may* contain the token, so we step through the\n            // directives associated with the injector's corresponding node to get the directive instance.\n            var node = injector.node;\n            var nodeFlags = node.tNode.flags;\n            var count = nodeFlags & 4095 /* DirectiveCountMask */;\n            if (count !== 0) {\n                var start = nodeFlags >> 14 /* DirectiveStartingIndexShift */;\n                var end = start + count;\n                var defs = node.view[TVIEW].directives;\n                for (var i = start; i < end; i++) {\n                    // Get the definition for the directive at this index and, if it is injectable (diPublic),\n                    // and matches the given token, return the directive instance.\n                    var directiveDef = defs[i];\n                    if (directiveDef.type === token && directiveDef.diPublic) {\n                        return node.view[DIRECTIVES][i];\n                    }\n                }\n            }\n            // If we *didn't* find the directive for the token and we are searching the current node's\n            // injector, it's possible the directive is on this node and hasn't been created yet.\n            var instance = void 0;\n            if (injector === di && (instance = searchMatchesQueuedForCreation(node, token))) {\n                return instance;\n            }\n            // The def wasn't found anywhere on this node, so it was a false positive.\n            // If flags permit, traverse up the tree and continue searching.\n            if (flags & 2 /* Self */ || flags & 1 /* Host */ && !sameHostView(injector)) {\n                injector = null;\n            }\n            else {\n                injector = injector.parent;\n            }\n        }",
                          "children": [
                            {
                              "type": "while",
                              "start": {
                                "row": 17,
                                "column": 8
                              },
                              "end": {
                                "row": 17,
                                "column": 13
                              },
                              "text": "while"
                            },
                            {
                              "type": "parenthesized_expression",
                              "start": {
                                "row": 17,
                                "column": 14
                              },
                              "end": {
                                "row": 17,
                                "column": 24
                              },
                              "text": "(injector)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 17,
                                    "column": 14
                                  },
                                  "end": {
                                    "row": 17,
                                    "column": 15
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 17,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 17,
                                    "column": 23
                                  },
                                  "text": "injector"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 17,
                                    "column": 23
                                  },
                                  "end": {
                                    "row": 17,
                                    "column": 24
                                  },
                                  "text": ")"
                                }
                              ]
                            },
                            {
                              "type": "statement_block",
                              "start": {
                                "row": 17,
                                "column": 25
                              },
                              "end": {
                                "row": 58,
                                "column": 9
                              },
                              "text": "{\n            // Get the closest potential matching injector (upwards in the injector tree) that\n            // *potentially* has the token.\n            injector = bloomFindPossibleInjector(injector, bloomHash, flags);\n            // If no injector is found, we *know* that there is no ancestor injector that contains the\n            // token, so we abort.\n            if (!injector) {\n                break;\n            }\n            // At this point, we have an injector which *may* contain the token, so we step through the\n            // directives associated with the injector's corresponding node to get the directive instance.\n            var node = injector.node;\n            var nodeFlags = node.tNode.flags;\n            var count = nodeFlags & 4095 /* DirectiveCountMask */;\n            if (count !== 0) {\n                var start = nodeFlags >> 14 /* DirectiveStartingIndexShift */;\n                var end = start + count;\n                var defs = node.view[TVIEW].directives;\n                for (var i = start; i < end; i++) {\n                    // Get the definition for the directive at this index and, if it is injectable (diPublic),\n                    // and matches the given token, return the directive instance.\n                    var directiveDef = defs[i];\n                    if (directiveDef.type === token && directiveDef.diPublic) {\n                        return node.view[DIRECTIVES][i];\n                    }\n                }\n            }\n            // If we *didn't* find the directive for the token and we are searching the current node's\n            // injector, it's possible the directive is on this node and hasn't been created yet.\n            var instance = void 0;\n            if (injector === di && (instance = searchMatchesQueuedForCreation(node, token))) {\n                return instance;\n            }\n            // The def wasn't found anywhere on this node, so it was a false positive.\n            // If flags permit, traverse up the tree and continue searching.\n            if (flags & 2 /* Self */ || flags & 1 /* Host */ && !sameHostView(injector)) {\n                injector = null;\n            }\n            else {\n                injector = injector.parent;\n            }\n        }",
                              "children": [
                                {
                                  "type": "{",
                                  "start": {
                                    "row": 17,
                                    "column": 25
                                  },
                                  "end": {
                                    "row": 17,
                                    "column": 26
                                  },
                                  "text": "{"
                                },
                                {
                                  "type": "comment",
                                  "start": {
                                    "row": 18,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 18,
                                    "column": 94
                                  },
                                  "text": "// Get the closest potential matching injector (upwards in the injector tree) that"
                                },
                                {
                                  "type": "comment",
                                  "start": {
                                    "row": 19,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 19,
                                    "column": 43
                                  },
                                  "text": "// *potentially* has the token."
                                },
                                {
                                  "type": "expression_statement",
                                  "start": {
                                    "row": 20,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 20,
                                    "column": 77
                                  },
                                  "text": "injector = bloomFindPossibleInjector(injector, bloomHash, flags);",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start": {
                                        "row": 20,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 20,
                                        "column": 76
                                      },
                                      "text": "injector = bloomFindPossibleInjector(injector, bloomHash, flags)",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 20,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 20,
                                            "column": 20
                                          },
                                          "text": "injector"
                                        },
                                        {
                                          "type": "=",
                                          "start": {
                                            "row": 20,
                                            "column": 21
                                          },
                                          "end": {
                                            "row": 20,
                                            "column": 22
                                          },
                                          "text": "="
                                        },
                                        {
                                          "type": "call_expression",
                                          "start": {
                                            "row": 20,
                                            "column": 23
                                          },
                                          "end": {
                                            "row": 20,
                                            "column": 76
                                          },
                                          "text": "bloomFindPossibleInjector(injector, bloomHash, flags)",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 20,
                                                "column": 23
                                              },
                                              "end": {
                                                "row": 20,
                                                "column": 48
                                              },
                                              "text": "bloomFindPossibleInjector"
                                            },
                                            {
                                              "type": "arguments",
                                              "start": {
                                                "row": 20,
                                                "column": 48
                                              },
                                              "end": {
                                                "row": 20,
                                                "column": 76
                                              },
                                              "text": "(injector, bloomHash, flags)",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 20,
                                                    "column": 48
                                                  },
                                                  "end": {
                                                    "row": 20,
                                                    "column": 49
                                                  },
                                                  "text": "("
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 20,
                                                    "column": 49
                                                  },
                                                  "end": {
                                                    "row": 20,
                                                    "column": 57
                                                  },
                                                  "text": "injector"
                                                },
                                                {
                                                  "type": ",",
                                                  "start": {
                                                    "row": 20,
                                                    "column": 57
                                                  },
                                                  "end": {
                                                    "row": 20,
                                                    "column": 58
                                                  },
                                                  "text": ","
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 20,
                                                    "column": 59
                                                  },
                                                  "end": {
                                                    "row": 20,
                                                    "column": 68
                                                  },
                                                  "text": "bloomHash"
                                                },
                                                {
                                                  "type": ",",
                                                  "start": {
                                                    "row": 20,
                                                    "column": 68
                                                  },
                                                  "end": {
                                                    "row": 20,
                                                    "column": 69
                                                  },
                                                  "text": ","
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 20,
                                                    "column": 70
                                                  },
                                                  "end": {
                                                    "row": 20,
                                                    "column": 75
                                                  },
                                                  "text": "flags"
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 20,
                                                    "column": 75
                                                  },
                                                  "end": {
                                                    "row": 20,
                                                    "column": 76
                                                  },
                                                  "text": ")"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start": {
                                        "row": 20,
                                        "column": 76
                                      },
                                      "end": {
                                        "row": 20,
                                        "column": 77
                                      },
                                      "text": ";"
                                    }
                                  ]
                                },
                                {
                                  "type": "comment",
                                  "start": {
                                    "row": 21,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 21,
                                    "column": 102
                                  },
                                  "text": "// If no injector is found, we *know* that there is no ancestor injector that contains the"
                                },
                                {
                                  "type": "comment",
                                  "start": {
                                    "row": 22,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 22,
                                    "column": 34
                                  },
                                  "text": "// token, so we abort."
                                },
                                {
                                  "type": "if_statement",
                                  "start": {
                                    "row": 23,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 25,
                                    "column": 13
                                  },
                                  "text": "if (!injector) {\n                break;\n            }",
                                  "children": [
                                    {
                                      "type": "if",
                                      "start": {
                                        "row": 23,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 23,
                                        "column": 14
                                      },
                                      "text": "if"
                                    },
                                    {
                                      "type": "parenthesized_expression",
                                      "start": {
                                        "row": 23,
                                        "column": 15
                                      },
                                      "end": {
                                        "row": 23,
                                        "column": 26
                                      },
                                      "text": "(!injector)",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 23,
                                            "column": 15
                                          },
                                          "end": {
                                            "row": 23,
                                            "column": 16
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "unary_expression",
                                          "start": {
                                            "row": 23,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 23,
                                            "column": 25
                                          },
                                          "text": "!injector",
                                          "children": [
                                            {
                                              "type": "!",
                                              "start": {
                                                "row": 23,
                                                "column": 16
                                              },
                                              "end": {
                                                "row": 23,
                                                "column": 17
                                              },
                                              "text": "!"
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 23,
                                                "column": 17
                                              },
                                              "end": {
                                                "row": 23,
                                                "column": 25
                                              },
                                              "text": "injector"
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 23,
                                            "column": 25
                                          },
                                          "end": {
                                            "row": 23,
                                            "column": 26
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "statement_block",
                                      "start": {
                                        "row": 23,
                                        "column": 27
                                      },
                                      "end": {
                                        "row": 25,
                                        "column": 13
                                      },
                                      "text": "{\n                break;\n            }",
                                      "children": [
                                        {
                                          "type": "{",
                                          "start": {
                                            "row": 23,
                                            "column": 27
                                          },
                                          "end": {
                                            "row": 23,
                                            "column": 28
                                          },
                                          "text": "{"
                                        },
                                        {
                                          "type": "break_statement",
                                          "start": {
                                            "row": 24,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 24,
                                            "column": 22
                                          },
                                          "text": "break;",
                                          "children": [
                                            {
                                              "type": "break",
                                              "start": {
                                                "row": 24,
                                                "column": 16
                                              },
                                              "end": {
                                                "row": 24,
                                                "column": 21
                                              },
                                              "text": "break"
                                            },
                                            {
                                              "type": ";",
                                              "start": {
                                                "row": 24,
                                                "column": 21
                                              },
                                              "end": {
                                                "row": 24,
                                                "column": 22
                                              },
                                              "text": ";"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "}",
                                          "start": {
                                            "row": 25,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 25,
                                            "column": 13
                                          },
                                          "text": "}"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "comment",
                                  "start": {
                                    "row": 26,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 26,
                                    "column": 103
                                  },
                                  "text": "// At this point, we have an injector which *may* contain the token, so we step through the"
                                },
                                {
                                  "type": "comment",
                                  "start": {
                                    "row": 27,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 27,
                                    "column": 106
                                  },
                                  "text": "// directives associated with the injector's corresponding node to get the directive instance."
                                },
                                {
                                  "type": "variable_declaration",
                                  "start": {
                                    "row": 28,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 28,
                                    "column": 37
                                  },
                                  "text": "var node = injector.node;",
                                  "children": [
                                    {
                                      "type": "var",
                                      "start": {
                                        "row": 28,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 28,
                                        "column": 15
                                      },
                                      "text": "var"
                                    },
                                    {
                                      "type": "variable_declarator",
                                      "start": {
                                        "row": 28,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 28,
                                        "column": 36
                                      },
                                      "text": "node = injector.node",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 28,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 28,
                                            "column": 20
                                          },
                                          "text": "node"
                                        },
                                        {
                                          "type": "=",
                                          "start": {
                                            "row": 28,
                                            "column": 21
                                          },
                                          "end": {
                                            "row": 28,
                                            "column": 22
                                          },
                                          "text": "="
                                        },
                                        {
                                          "type": "member_expression",
                                          "start": {
                                            "row": 28,
                                            "column": 23
                                          },
                                          "end": {
                                            "row": 28,
                                            "column": 36
                                          },
                                          "text": "injector.node",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 28,
                                                "column": 23
                                              },
                                              "end": {
                                                "row": 28,
                                                "column": 31
                                              },
                                              "text": "injector"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 28,
                                                "column": 31
                                              },
                                              "end": {
                                                "row": 28,
                                                "column": 32
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "property_identifier",
                                              "start": {
                                                "row": 28,
                                                "column": 32
                                              },
                                              "end": {
                                                "row": 28,
                                                "column": 36
                                              },
                                              "text": "node"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start": {
                                        "row": 28,
                                        "column": 36
                                      },
                                      "end": {
                                        "row": 28,
                                        "column": 37
                                      },
                                      "text": ";"
                                    }
                                  ]
                                },
                                {
                                  "type": "variable_declaration",
                                  "start": {
                                    "row": 29,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 29,
                                    "column": 45
                                  },
                                  "text": "var nodeFlags = node.tNode.flags;",
                                  "children": [
                                    {
                                      "type": "var",
                                      "start": {
                                        "row": 29,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 29,
                                        "column": 15
                                      },
                                      "text": "var"
                                    },
                                    {
                                      "type": "variable_declarator",
                                      "start": {
                                        "row": 29,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 29,
                                        "column": 44
                                      },
                                      "text": "nodeFlags = node.tNode.flags",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 29,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 29,
                                            "column": 25
                                          },
                                          "text": "nodeFlags"
                                        },
                                        {
                                          "type": "=",
                                          "start": {
                                            "row": 29,
                                            "column": 26
                                          },
                                          "end": {
                                            "row": 29,
                                            "column": 27
                                          },
                                          "text": "="
                                        },
                                        {
                                          "type": "member_expression",
                                          "start": {
                                            "row": 29,
                                            "column": 28
                                          },
                                          "end": {
                                            "row": 29,
                                            "column": 44
                                          },
                                          "text": "node.tNode.flags",
                                          "children": [
                                            {
                                              "type": "member_expression",
                                              "start": {
                                                "row": 29,
                                                "column": 28
                                              },
                                              "end": {
                                                "row": 29,
                                                "column": 38
                                              },
                                              "text": "node.tNode",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 29,
                                                    "column": 28
                                                  },
                                                  "end": {
                                                    "row": 29,
                                                    "column": 32
                                                  },
                                                  "text": "node"
                                                },
                                                {
                                                  "type": ".",
                                                  "start": {
                                                    "row": 29,
                                                    "column": 32
                                                  },
                                                  "end": {
                                                    "row": 29,
                                                    "column": 33
                                                  },
                                                  "text": "."
                                                },
                                                {
                                                  "type": "property_identifier",
                                                  "start": {
                                                    "row": 29,
                                                    "column": 33
                                                  },
                                                  "end": {
                                                    "row": 29,
                                                    "column": 38
                                                  },
                                                  "text": "tNode"
                                                }
                                              ]
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 29,
                                                "column": 38
                                              },
                                              "end": {
                                                "row": 29,
                                                "column": 39
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "property_identifier",
                                              "start": {
                                                "row": 29,
                                                "column": 39
                                              },
                                              "end": {
                                                "row": 29,
                                                "column": 44
                                              },
                                              "text": "flags"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start": {
                                        "row": 29,
                                        "column": 44
                                      },
                                      "end": {
                                        "row": 29,
                                        "column": 45
                                      },
                                      "text": ";"
                                    }
                                  ]
                                },
                                {
                                  "type": "variable_declaration",
                                  "start": {
                                    "row": 30,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 30,
                                    "column": 66
                                  },
                                  "text": "var count = nodeFlags & 4095 /* DirectiveCountMask */;",
                                  "children": [
                                    {
                                      "type": "var",
                                      "start": {
                                        "row": 30,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 30,
                                        "column": 15
                                      },
                                      "text": "var"
                                    },
                                    {
                                      "type": "variable_declarator",
                                      "start": {
                                        "row": 30,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 30,
                                        "column": 40
                                      },
                                      "text": "count = nodeFlags & 4095",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 30,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 30,
                                            "column": 21
                                          },
                                          "text": "count"
                                        },
                                        {
                                          "type": "=",
                                          "start": {
                                            "row": 30,
                                            "column": 22
                                          },
                                          "end": {
                                            "row": 30,
                                            "column": 23
                                          },
                                          "text": "="
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start": {
                                            "row": 30,
                                            "column": 24
                                          },
                                          "end": {
                                            "row": 30,
                                            "column": 40
                                          },
                                          "text": "nodeFlags & 4095",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 30,
                                                "column": 24
                                              },
                                              "end": {
                                                "row": 30,
                                                "column": 33
                                              },
                                              "text": "nodeFlags"
                                            },
                                            {
                                              "type": "&",
                                              "start": {
                                                "row": 30,
                                                "column": 34
                                              },
                                              "end": {
                                                "row": 30,
                                                "column": 35
                                              },
                                              "text": "&"
                                            },
                                            {
                                              "type": "number",
                                              "start": {
                                                "row": 30,
                                                "column": 36
                                              },
                                              "end": {
                                                "row": 30,
                                                "column": 40
                                              },
                                              "text": "4095"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "comment",
                                      "start": {
                                        "row": 30,
                                        "column": 41
                                      },
                                      "end": {
                                        "row": 30,
                                        "column": 65
                                      },
                                      "text": "/* DirectiveCountMask */"
                                    },
                                    {
                                      "type": ";",
                                      "start": {
                                        "row": 30,
                                        "column": 65
                                      },
                                      "end": {
                                        "row": 30,
                                        "column": 66
                                      },
                                      "text": ";"
                                    }
                                  ]
                                },
                                {
                                  "type": "if_statement",
                                  "start": {
                                    "row": 31,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 43,
                                    "column": 13
                                  },
                                  "text": "if (count !== 0) {\n                var start = nodeFlags >> 14 /* DirectiveStartingIndexShift */;\n                var end = start + count;\n                var defs = node.view[TVIEW].directives;\n                for (var i = start; i < end; i++) {\n                    // Get the definition for the directive at this index and, if it is injectable (diPublic),\n                    // and matches the given token, return the directive instance.\n                    var directiveDef = defs[i];\n                    if (directiveDef.type === token && directiveDef.diPublic) {\n                        return node.view[DIRECTIVES][i];\n                    }\n                }\n            }",
                                  "children": [
                                    {
                                      "type": "if",
                                      "start": {
                                        "row": 31,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 31,
                                        "column": 14
                                      },
                                      "text": "if"
                                    },
                                    {
                                      "type": "parenthesized_expression",
                                      "start": {
                                        "row": 31,
                                        "column": 15
                                      },
                                      "end": {
                                        "row": 31,
                                        "column": 28
                                      },
                                      "text": "(count !== 0)",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 31,
                                            "column": 15
                                          },
                                          "end": {
                                            "row": 31,
                                            "column": 16
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start": {
                                            "row": 31,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 31,
                                            "column": 27
                                          },
                                          "text": "count !== 0",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 31,
                                                "column": 16
                                              },
                                              "end": {
                                                "row": 31,
                                                "column": 21
                                              },
                                              "text": "count"
                                            },
                                            {
                                              "type": "!==",
                                              "start": {
                                                "row": 31,
                                                "column": 22
                                              },
                                              "end": {
                                                "row": 31,
                                                "column": 25
                                              },
                                              "text": "!=="
                                            },
                                            {
                                              "type": "number",
                                              "start": {
                                                "row": 31,
                                                "column": 26
                                              },
                                              "end": {
                                                "row": 31,
                                                "column": 27
                                              },
                                              "text": "0"
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 31,
                                            "column": 27
                                          },
                                          "end": {
                                            "row": 31,
                                            "column": 28
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "statement_block",
                                      "start": {
                                        "row": 31,
                                        "column": 29
                                      },
                                      "end": {
                                        "row": 43,
                                        "column": 13
                                      },
                                      "text": "{\n                var start = nodeFlags >> 14 /* DirectiveStartingIndexShift */;\n                var end = start + count;\n                var defs = node.view[TVIEW].directives;\n                for (var i = start; i < end; i++) {\n                    // Get the definition for the directive at this index and, if it is injectable (diPublic),\n                    // and matches the given token, return the directive instance.\n                    var directiveDef = defs[i];\n                    if (directiveDef.type === token && directiveDef.diPublic) {\n                        return node.view[DIRECTIVES][i];\n                    }\n                }\n            }",
                                      "children": [
                                        {
                                          "type": "{",
                                          "start": {
                                            "row": 31,
                                            "column": 29
                                          },
                                          "end": {
                                            "row": 31,
                                            "column": 30
                                          },
                                          "text": "{"
                                        },
                                        {
                                          "type": "variable_declaration",
                                          "start": {
                                            "row": 32,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 32,
                                            "column": 78
                                          },
                                          "text": "var start = nodeFlags >> 14 /* DirectiveStartingIndexShift */;",
                                          "children": [
                                            {
                                              "type": "var",
                                              "start": {
                                                "row": 32,
                                                "column": 16
                                              },
                                              "end": {
                                                "row": 32,
                                                "column": 19
                                              },
                                              "text": "var"
                                            },
                                            {
                                              "type": "variable_declarator",
                                              "start": {
                                                "row": 32,
                                                "column": 20
                                              },
                                              "end": {
                                                "row": 32,
                                                "column": 43
                                              },
                                              "text": "start = nodeFlags >> 14",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 32,
                                                    "column": 20
                                                  },
                                                  "end": {
                                                    "row": 32,
                                                    "column": 25
                                                  },
                                                  "text": "start"
                                                },
                                                {
                                                  "type": "=",
                                                  "start": {
                                                    "row": 32,
                                                    "column": 26
                                                  },
                                                  "end": {
                                                    "row": 32,
                                                    "column": 27
                                                  },
                                                  "text": "="
                                                },
                                                {
                                                  "type": "binary_expression",
                                                  "start": {
                                                    "row": 32,
                                                    "column": 28
                                                  },
                                                  "end": {
                                                    "row": 32,
                                                    "column": 43
                                                  },
                                                  "text": "nodeFlags >> 14",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 32,
                                                        "column": 28
                                                      },
                                                      "end": {
                                                        "row": 32,
                                                        "column": 37
                                                      },
                                                      "text": "nodeFlags"
                                                    },
                                                    {
                                                      "type": ">>",
                                                      "start": {
                                                        "row": 32,
                                                        "column": 38
                                                      },
                                                      "end": {
                                                        "row": 32,
                                                        "column": 40
                                                      },
                                                      "text": ">>"
                                                    },
                                                    {
                                                      "type": "number",
                                                      "start": {
                                                        "row": 32,
                                                        "column": 41
                                                      },
                                                      "end": {
                                                        "row": 32,
                                                        "column": 43
                                                      },
                                                      "text": "14"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "comment",
                                              "start": {
                                                "row": 32,
                                                "column": 44
                                              },
                                              "end": {
                                                "row": 32,
                                                "column": 77
                                              },
                                              "text": "/* DirectiveStartingIndexShift */"
                                            },
                                            {
                                              "type": ";",
                                              "start": {
                                                "row": 32,
                                                "column": 77
                                              },
                                              "end": {
                                                "row": 32,
                                                "column": 78
                                              },
                                              "text": ";"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "variable_declaration",
                                          "start": {
                                            "row": 33,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 33,
                                            "column": 40
                                          },
                                          "text": "var end = start + count;",
                                          "children": [
                                            {
                                              "type": "var",
                                              "start": {
                                                "row": 33,
                                                "column": 16
                                              },
                                              "end": {
                                                "row": 33,
                                                "column": 19
                                              },
                                              "text": "var"
                                            },
                                            {
                                              "type": "variable_declarator",
                                              "start": {
                                                "row": 33,
                                                "column": 20
                                              },
                                              "end": {
                                                "row": 33,
                                                "column": 39
                                              },
                                              "text": "end = start + count",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 33,
                                                    "column": 20
                                                  },
                                                  "end": {
                                                    "row": 33,
                                                    "column": 23
                                                  },
                                                  "text": "end"
                                                },
                                                {
                                                  "type": "=",
                                                  "start": {
                                                    "row": 33,
                                                    "column": 24
                                                  },
                                                  "end": {
                                                    "row": 33,
                                                    "column": 25
                                                  },
                                                  "text": "="
                                                },
                                                {
                                                  "type": "binary_expression",
                                                  "start": {
                                                    "row": 33,
                                                    "column": 26
                                                  },
                                                  "end": {
                                                    "row": 33,
                                                    "column": 39
                                                  },
                                                  "text": "start + count",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 33,
                                                        "column": 26
                                                      },
                                                      "end": {
                                                        "row": 33,
                                                        "column": 31
                                                      },
                                                      "text": "start"
                                                    },
                                                    {
                                                      "type": "+",
                                                      "start": {
                                                        "row": 33,
                                                        "column": 32
                                                      },
                                                      "end": {
                                                        "row": 33,
                                                        "column": 33
                                                      },
                                                      "text": "+"
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 33,
                                                        "column": 34
                                                      },
                                                      "end": {
                                                        "row": 33,
                                                        "column": 39
                                                      },
                                                      "text": "count"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ";",
                                              "start": {
                                                "row": 33,
                                                "column": 39
                                              },
                                              "end": {
                                                "row": 33,
                                                "column": 40
                                              },
                                              "text": ";"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "variable_declaration",
                                          "start": {
                                            "row": 34,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 34,
                                            "column": 55
                                          },
                                          "text": "var defs = node.view[TVIEW].directives;",
                                          "children": [
                                            {
                                              "type": "var",
                                              "start": {
                                                "row": 34,
                                                "column": 16
                                              },
                                              "end": {
                                                "row": 34,
                                                "column": 19
                                              },
                                              "text": "var"
                                            },
                                            {
                                              "type": "variable_declarator",
                                              "start": {
                                                "row": 34,
                                                "column": 20
                                              },
                                              "end": {
                                                "row": 34,
                                                "column": 54
                                              },
                                              "text": "defs = node.view[TVIEW].directives",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 34,
                                                    "column": 20
                                                  },
                                                  "end": {
                                                    "row": 34,
                                                    "column": 24
                                                  },
                                                  "text": "defs"
                                                },
                                                {
                                                  "type": "=",
                                                  "start": {
                                                    "row": 34,
                                                    "column": 25
                                                  },
                                                  "end": {
                                                    "row": 34,
                                                    "column": 26
                                                  },
                                                  "text": "="
                                                },
                                                {
                                                  "type": "member_expression",
                                                  "start": {
                                                    "row": 34,
                                                    "column": 27
                                                  },
                                                  "end": {
                                                    "row": 34,
                                                    "column": 54
                                                  },
                                                  "text": "node.view[TVIEW].directives",
                                                  "children": [
                                                    {
                                                      "type": "subscript_expression",
                                                      "start": {
                                                        "row": 34,
                                                        "column": 27
                                                      },
                                                      "end": {
                                                        "row": 34,
                                                        "column": 43
                                                      },
                                                      "text": "node.view[TVIEW]",
                                                      "children": [
                                                        {
                                                          "type": "member_expression",
                                                          "start": {
                                                            "row": 34,
                                                            "column": 27
                                                          },
                                                          "end": {
                                                            "row": 34,
                                                            "column": 36
                                                          },
                                                          "text": "node.view",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start": {
                                                                "row": 34,
                                                                "column": 27
                                                              },
                                                              "end": {
                                                                "row": 34,
                                                                "column": 31
                                                              },
                                                              "text": "node"
                                                            },
                                                            {
                                                              "type": ".",
                                                              "start": {
                                                                "row": 34,
                                                                "column": 31
                                                              },
                                                              "end": {
                                                                "row": 34,
                                                                "column": 32
                                                              },
                                                              "text": "."
                                                            },
                                                            {
                                                              "type": "property_identifier",
                                                              "start": {
                                                                "row": 34,
                                                                "column": 32
                                                              },
                                                              "end": {
                                                                "row": 34,
                                                                "column": 36
                                                              },
                                                              "text": "view"
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "[",
                                                          "start": {
                                                            "row": 34,
                                                            "column": 36
                                                          },
                                                          "end": {
                                                            "row": 34,
                                                            "column": 37
                                                          },
                                                          "text": "["
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 34,
                                                            "column": 37
                                                          },
                                                          "end": {
                                                            "row": 34,
                                                            "column": 42
                                                          },
                                                          "text": "TVIEW"
                                                        },
                                                        {
                                                          "type": "]",
                                                          "start": {
                                                            "row": 34,
                                                            "column": 42
                                                          },
                                                          "end": {
                                                            "row": 34,
                                                            "column": 43
                                                          },
                                                          "text": "]"
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ".",
                                                      "start": {
                                                        "row": 34,
                                                        "column": 43
                                                      },
                                                      "end": {
                                                        "row": 34,
                                                        "column": 44
                                                      },
                                                      "text": "."
                                                    },
                                                    {
                                                      "type": "property_identifier",
                                                      "start": {
                                                        "row": 34,
                                                        "column": 44
                                                      },
                                                      "end": {
                                                        "row": 34,
                                                        "column": 54
                                                      },
                                                      "text": "directives"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ";",
                                              "start": {
                                                "row": 34,
                                                "column": 54
                                              },
                                              "end": {
                                                "row": 34,
                                                "column": 55
                                              },
                                              "text": ";"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "for_statement",
                                          "start": {
                                            "row": 35,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 42,
                                            "column": 17
                                          },
                                          "text": "for (var i = start; i < end; i++) {\n                    // Get the definition for the directive at this index and, if it is injectable (diPublic),\n                    // and matches the given token, return the directive instance.\n                    var directiveDef = defs[i];\n                    if (directiveDef.type === token && directiveDef.diPublic) {\n                        return node.view[DIRECTIVES][i];\n                    }\n                }",
                                          "children": [
                                            {
                                              "type": "for",
                                              "start": {
                                                "row": 35,
                                                "column": 16
                                              },
                                              "end": {
                                                "row": 35,
                                                "column": 19
                                              },
                                              "text": "for"
                                            },
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 35,
                                                "column": 20
                                              },
                                              "end": {
                                                "row": 35,
                                                "column": 21
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "variable_declaration",
                                              "start": {
                                                "row": 35,
                                                "column": 21
                                              },
                                              "end": {
                                                "row": 35,
                                                "column": 35
                                              },
                                              "text": "var i = start;",
                                              "children": [
                                                {
                                                  "type": "var",
                                                  "start": {
                                                    "row": 35,
                                                    "column": 21
                                                  },
                                                  "end": {
                                                    "row": 35,
                                                    "column": 24
                                                  },
                                                  "text": "var"
                                                },
                                                {
                                                  "type": "variable_declarator",
                                                  "start": {
                                                    "row": 35,
                                                    "column": 25
                                                  },
                                                  "end": {
                                                    "row": 35,
                                                    "column": 34
                                                  },
                                                  "text": "i = start",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 35,
                                                        "column": 25
                                                      },
                                                      "end": {
                                                        "row": 35,
                                                        "column": 26
                                                      },
                                                      "text": "i"
                                                    },
                                                    {
                                                      "type": "=",
                                                      "start": {
                                                        "row": 35,
                                                        "column": 27
                                                      },
                                                      "end": {
                                                        "row": 35,
                                                        "column": 28
                                                      },
                                                      "text": "="
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 35,
                                                        "column": 29
                                                      },
                                                      "end": {
                                                        "row": 35,
                                                        "column": 34
                                                      },
                                                      "text": "start"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ";",
                                                  "start": {
                                                    "row": 35,
                                                    "column": 34
                                                  },
                                                  "end": {
                                                    "row": 35,
                                                    "column": 35
                                                  },
                                                  "text": ";"
                                                }
                                              ]
                                            },
                                            {
                                              "type": "expression_statement",
                                              "start": {
                                                "row": 35,
                                                "column": 36
                                              },
                                              "end": {
                                                "row": 35,
                                                "column": 44
                                              },
                                              "text": "i < end;",
                                              "children": [
                                                {
                                                  "type": "binary_expression",
                                                  "start": {
                                                    "row": 35,
                                                    "column": 36
                                                  },
                                                  "end": {
                                                    "row": 35,
                                                    "column": 43
                                                  },
                                                  "text": "i < end",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 35,
                                                        "column": 36
                                                      },
                                                      "end": {
                                                        "row": 35,
                                                        "column": 37
                                                      },
                                                      "text": "i"
                                                    },
                                                    {
                                                      "type": "<",
                                                      "start": {
                                                        "row": 35,
                                                        "column": 38
                                                      },
                                                      "end": {
                                                        "row": 35,
                                                        "column": 39
                                                      },
                                                      "text": "<"
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 35,
                                                        "column": 40
                                                      },
                                                      "end": {
                                                        "row": 35,
                                                        "column": 43
                                                      },
                                                      "text": "end"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ";",
                                                  "start": {
                                                    "row": 35,
                                                    "column": 43
                                                  },
                                                  "end": {
                                                    "row": 35,
                                                    "column": 44
                                                  },
                                                  "text": ";"
                                                }
                                              ]
                                            },
                                            {
                                              "type": "update_expression",
                                              "start": {
                                                "row": 35,
                                                "column": 45
                                              },
                                              "end": {
                                                "row": 35,
                                                "column": 48
                                              },
                                              "text": "i++",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 35,
                                                    "column": 45
                                                  },
                                                  "end": {
                                                    "row": 35,
                                                    "column": 46
                                                  },
                                                  "text": "i"
                                                },
                                                {
                                                  "type": "++",
                                                  "start": {
                                                    "row": 35,
                                                    "column": 46
                                                  },
                                                  "end": {
                                                    "row": 35,
                                                    "column": 48
                                                  },
                                                  "text": "++"
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 35,
                                                "column": 48
                                              },
                                              "end": {
                                                "row": 35,
                                                "column": 49
                                              },
                                              "text": ")"
                                            },
                                            {
                                              "type": "statement_block",
                                              "start": {
                                                "row": 35,
                                                "column": 50
                                              },
                                              "end": {
                                                "row": 42,
                                                "column": 17
                                              },
                                              "text": "{\n                    // Get the definition for the directive at this index and, if it is injectable (diPublic),\n                    // and matches the given token, return the directive instance.\n                    var directiveDef = defs[i];\n                    if (directiveDef.type === token && directiveDef.diPublic) {\n                        return node.view[DIRECTIVES][i];\n                    }\n                }",
                                              "children": [
                                                {
                                                  "type": "{",
                                                  "start": {
                                                    "row": 35,
                                                    "column": 50
                                                  },
                                                  "end": {
                                                    "row": 35,
                                                    "column": 51
                                                  },
                                                  "text": "{"
                                                },
                                                {
                                                  "type": "comment",
                                                  "start": {
                                                    "row": 36,
                                                    "column": 20
                                                  },
                                                  "end": {
                                                    "row": 36,
                                                    "column": 110
                                                  },
                                                  "text": "// Get the definition for the directive at this index and, if it is injectable (diPublic),"
                                                },
                                                {
                                                  "type": "comment",
                                                  "start": {
                                                    "row": 37,
                                                    "column": 20
                                                  },
                                                  "end": {
                                                    "row": 37,
                                                    "column": 82
                                                  },
                                                  "text": "// and matches the given token, return the directive instance."
                                                },
                                                {
                                                  "type": "variable_declaration",
                                                  "start": {
                                                    "row": 38,
                                                    "column": 20
                                                  },
                                                  "end": {
                                                    "row": 38,
                                                    "column": 47
                                                  },
                                                  "text": "var directiveDef = defs[i];",
                                                  "children": [
                                                    {
                                                      "type": "var",
                                                      "start": {
                                                        "row": 38,
                                                        "column": 20
                                                      },
                                                      "end": {
                                                        "row": 38,
                                                        "column": 23
                                                      },
                                                      "text": "var"
                                                    },
                                                    {
                                                      "type": "variable_declarator",
                                                      "start": {
                                                        "row": 38,
                                                        "column": 24
                                                      },
                                                      "end": {
                                                        "row": 38,
                                                        "column": 46
                                                      },
                                                      "text": "directiveDef = defs[i]",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 38,
                                                            "column": 24
                                                          },
                                                          "end": {
                                                            "row": 38,
                                                            "column": 36
                                                          },
                                                          "text": "directiveDef"
                                                        },
                                                        {
                                                          "type": "=",
                                                          "start": {
                                                            "row": 38,
                                                            "column": 37
                                                          },
                                                          "end": {
                                                            "row": 38,
                                                            "column": 38
                                                          },
                                                          "text": "="
                                                        },
                                                        {
                                                          "type": "subscript_expression",
                                                          "start": {
                                                            "row": 38,
                                                            "column": 39
                                                          },
                                                          "end": {
                                                            "row": 38,
                                                            "column": 46
                                                          },
                                                          "text": "defs[i]",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start": {
                                                                "row": 38,
                                                                "column": 39
                                                              },
                                                              "end": {
                                                                "row": 38,
                                                                "column": 43
                                                              },
                                                              "text": "defs"
                                                            },
                                                            {
                                                              "type": "[",
                                                              "start": {
                                                                "row": 38,
                                                                "column": 43
                                                              },
                                                              "end": {
                                                                "row": 38,
                                                                "column": 44
                                                              },
                                                              "text": "["
                                                            },
                                                            {
                                                              "type": "identifier",
                                                              "start": {
                                                                "row": 38,
                                                                "column": 44
                                                              },
                                                              "end": {
                                                                "row": 38,
                                                                "column": 45
                                                              },
                                                              "text": "i"
                                                            },
                                                            {
                                                              "type": "]",
                                                              "start": {
                                                                "row": 38,
                                                                "column": 45
                                                              },
                                                              "end": {
                                                                "row": 38,
                                                                "column": 46
                                                              },
                                                              "text": "]"
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ";",
                                                      "start": {
                                                        "row": 38,
                                                        "column": 46
                                                      },
                                                      "end": {
                                                        "row": 38,
                                                        "column": 47
                                                      },
                                                      "text": ";"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "if_statement",
                                                  "start": {
                                                    "row": 39,
                                                    "column": 20
                                                  },
                                                  "end": {
                                                    "row": 41,
                                                    "column": 21
                                                  },
                                                  "text": "if (directiveDef.type === token && directiveDef.diPublic) {\n                        return node.view[DIRECTIVES][i];\n                    }",
                                                  "children": [
                                                    {
                                                      "type": "if",
                                                      "start": {
                                                        "row": 39,
                                                        "column": 20
                                                      },
                                                      "end": {
                                                        "row": 39,
                                                        "column": 22
                                                      },
                                                      "text": "if"
                                                    },
                                                    {
                                                      "type": "parenthesized_expression",
                                                      "start": {
                                                        "row": 39,
                                                        "column": 23
                                                      },
                                                      "end": {
                                                        "row": 39,
                                                        "column": 77
                                                      },
                                                      "text": "(directiveDef.type === token && directiveDef.diPublic)",
                                                      "children": [
                                                        {
                                                          "type": "(",
                                                          "start": {
                                                            "row": 39,
                                                            "column": 23
                                                          },
                                                          "end": {
                                                            "row": 39,
                                                            "column": 24
                                                          },
                                                          "text": "("
                                                        },
                                                        {
                                                          "type": "binary_expression",
                                                          "start": {
                                                            "row": 39,
                                                            "column": 24
                                                          },
                                                          "end": {
                                                            "row": 39,
                                                            "column": 76
                                                          },
                                                          "text": "directiveDef.type === token && directiveDef.diPublic",
                                                          "children": [
                                                            {
                                                              "type": "binary_expression",
                                                              "start": {
                                                                "row": 39,
                                                                "column": 24
                                                              },
                                                              "end": {
                                                                "row": 39,
                                                                "column": 51
                                                              },
                                                              "text": "directiveDef.type === token",
                                                              "children": [
                                                                {
                                                                  "type": "member_expression",
                                                                  "start": {
                                                                    "row": 39,
                                                                    "column": 24
                                                                  },
                                                                  "end": {
                                                                    "row": 39,
                                                                    "column": 41
                                                                  },
                                                                  "text": "directiveDef.type",
                                                                  "children": [
                                                                    {
                                                                      "type": "identifier",
                                                                      "start": {
                                                                        "row": 39,
                                                                        "column": 24
                                                                      },
                                                                      "end": {
                                                                        "row": 39,
                                                                        "column": 36
                                                                      },
                                                                      "text": "directiveDef"
                                                                    },
                                                                    {
                                                                      "type": ".",
                                                                      "start": {
                                                                        "row": 39,
                                                                        "column": 36
                                                                      },
                                                                      "end": {
                                                                        "row": 39,
                                                                        "column": 37
                                                                      },
                                                                      "text": "."
                                                                    },
                                                                    {
                                                                      "type": "property_identifier",
                                                                      "start": {
                                                                        "row": 39,
                                                                        "column": 37
                                                                      },
                                                                      "end": {
                                                                        "row": 39,
                                                                        "column": 41
                                                                      },
                                                                      "text": "type"
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "===",
                                                                  "start": {
                                                                    "row": 39,
                                                                    "column": 42
                                                                  },
                                                                  "end": {
                                                                    "row": 39,
                                                                    "column": 45
                                                                  },
                                                                  "text": "==="
                                                                },
                                                                {
                                                                  "type": "identifier",
                                                                  "start": {
                                                                    "row": 39,
                                                                    "column": 46
                                                                  },
                                                                  "end": {
                                                                    "row": 39,
                                                                    "column": 51
                                                                  },
                                                                  "text": "token"
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "&&",
                                                              "start": {
                                                                "row": 39,
                                                                "column": 52
                                                              },
                                                              "end": {
                                                                "row": 39,
                                                                "column": 54
                                                              },
                                                              "text": "&&"
                                                            },
                                                            {
                                                              "type": "member_expression",
                                                              "start": {
                                                                "row": 39,
                                                                "column": 55
                                                              },
                                                              "end": {
                                                                "row": 39,
                                                                "column": 76
                                                              },
                                                              "text": "directiveDef.diPublic",
                                                              "children": [
                                                                {
                                                                  "type": "identifier",
                                                                  "start": {
                                                                    "row": 39,
                                                                    "column": 55
                                                                  },
                                                                  "end": {
                                                                    "row": 39,
                                                                    "column": 67
                                                                  },
                                                                  "text": "directiveDef"
                                                                },
                                                                {
                                                                  "type": ".",
                                                                  "start": {
                                                                    "row": 39,
                                                                    "column": 67
                                                                  },
                                                                  "end": {
                                                                    "row": 39,
                                                                    "column": 68
                                                                  },
                                                                  "text": "."
                                                                },
                                                                {
                                                                  "type": "property_identifier",
                                                                  "start": {
                                                                    "row": 39,
                                                                    "column": 68
                                                                  },
                                                                  "end": {
                                                                    "row": 39,
                                                                    "column": 76
                                                                  },
                                                                  "text": "diPublic"
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": ")",
                                                          "start": {
                                                            "row": 39,
                                                            "column": 76
                                                          },
                                                          "end": {
                                                            "row": 39,
                                                            "column": 77
                                                          },
                                                          "text": ")"
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "statement_block",
                                                      "start": {
                                                        "row": 39,
                                                        "column": 78
                                                      },
                                                      "end": {
                                                        "row": 41,
                                                        "column": 21
                                                      },
                                                      "text": "{\n                        return node.view[DIRECTIVES][i];\n                    }",
                                                      "children": [
                                                        {
                                                          "type": "{",
                                                          "start": {
                                                            "row": 39,
                                                            "column": 78
                                                          },
                                                          "end": {
                                                            "row": 39,
                                                            "column": 79
                                                          },
                                                          "text": "{"
                                                        },
                                                        {
                                                          "type": "return_statement",
                                                          "start": {
                                                            "row": 40,
                                                            "column": 24
                                                          },
                                                          "end": {
                                                            "row": 40,
                                                            "column": 56
                                                          },
                                                          "text": "return node.view[DIRECTIVES][i];",
                                                          "children": [
                                                            {
                                                              "type": "return",
                                                              "start": {
                                                                "row": 40,
                                                                "column": 24
                                                              },
                                                              "end": {
                                                                "row": 40,
                                                                "column": 30
                                                              },
                                                              "text": "return"
                                                            },
                                                            {
                                                              "type": "subscript_expression",
                                                              "start": {
                                                                "row": 40,
                                                                "column": 31
                                                              },
                                                              "end": {
                                                                "row": 40,
                                                                "column": 55
                                                              },
                                                              "text": "node.view[DIRECTIVES][i]",
                                                              "children": [
                                                                {
                                                                  "type": "subscript_expression",
                                                                  "start": {
                                                                    "row": 40,
                                                                    "column": 31
                                                                  },
                                                                  "end": {
                                                                    "row": 40,
                                                                    "column": 52
                                                                  },
                                                                  "text": "node.view[DIRECTIVES]",
                                                                  "children": [
                                                                    {
                                                                      "type": "member_expression",
                                                                      "start": {
                                                                        "row": 40,
                                                                        "column": 31
                                                                      },
                                                                      "end": {
                                                                        "row": 40,
                                                                        "column": 40
                                                                      },
                                                                      "text": "node.view",
                                                                      "children": [
                                                                        {
                                                                          "type": "identifier",
                                                                          "start": {
                                                                            "row": 40,
                                                                            "column": 31
                                                                          },
                                                                          "end": {
                                                                            "row": 40,
                                                                            "column": 35
                                                                          },
                                                                          "text": "node"
                                                                        },
                                                                        {
                                                                          "type": ".",
                                                                          "start": {
                                                                            "row": 40,
                                                                            "column": 35
                                                                          },
                                                                          "end": {
                                                                            "row": 40,
                                                                            "column": 36
                                                                          },
                                                                          "text": "."
                                                                        },
                                                                        {
                                                                          "type": "property_identifier",
                                                                          "start": {
                                                                            "row": 40,
                                                                            "column": 36
                                                                          },
                                                                          "end": {
                                                                            "row": 40,
                                                                            "column": 40
                                                                          },
                                                                          "text": "view"
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "[",
                                                                      "start": {
                                                                        "row": 40,
                                                                        "column": 40
                                                                      },
                                                                      "end": {
                                                                        "row": 40,
                                                                        "column": 41
                                                                      },
                                                                      "text": "["
                                                                    },
                                                                    {
                                                                      "type": "identifier",
                                                                      "start": {
                                                                        "row": 40,
                                                                        "column": 41
                                                                      },
                                                                      "end": {
                                                                        "row": 40,
                                                                        "column": 51
                                                                      },
                                                                      "text": "DIRECTIVES"
                                                                    },
                                                                    {
                                                                      "type": "]",
                                                                      "start": {
                                                                        "row": 40,
                                                                        "column": 51
                                                                      },
                                                                      "end": {
                                                                        "row": 40,
                                                                        "column": 52
                                                                      },
                                                                      "text": "]"
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "[",
                                                                  "start": {
                                                                    "row": 40,
                                                                    "column": 52
                                                                  },
                                                                  "end": {
                                                                    "row": 40,
                                                                    "column": 53
                                                                  },
                                                                  "text": "["
                                                                },
                                                                {
                                                                  "type": "identifier",
                                                                  "start": {
                                                                    "row": 40,
                                                                    "column": 53
                                                                  },
                                                                  "end": {
                                                                    "row": 40,
                                                                    "column": 54
                                                                  },
                                                                  "text": "i"
                                                                },
                                                                {
                                                                  "type": "]",
                                                                  "start": {
                                                                    "row": 40,
                                                                    "column": 54
                                                                  },
                                                                  "end": {
                                                                    "row": 40,
                                                                    "column": 55
                                                                  },
                                                                  "text": "]"
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": ";",
                                                              "start": {
                                                                "row": 40,
                                                                "column": 55
                                                              },
                                                              "end": {
                                                                "row": 40,
                                                                "column": 56
                                                              },
                                                              "text": ";"
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "}",
                                                          "start": {
                                                            "row": 41,
                                                            "column": 20
                                                          },
                                                          "end": {
                                                            "row": 41,
                                                            "column": 21
                                                          },
                                                          "text": "}"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "}",
                                                  "start": {
                                                    "row": 42,
                                                    "column": 16
                                                  },
                                                  "end": {
                                                    "row": 42,
                                                    "column": 17
                                                  },
                                                  "text": "}"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "}",
                                          "start": {
                                            "row": 43,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 43,
                                            "column": 13
                                          },
                                          "text": "}"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "comment",
                                  "start": {
                                    "row": 44,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 44,
                                    "column": 102
                                  },
                                  "text": "// If we *didn't* find the directive for the token and we are searching the current node's"
                                },
                                {
                                  "type": "comment",
                                  "start": {
                                    "row": 45,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 45,
                                    "column": 97
                                  },
                                  "text": "// injector, it's possible the directive is on this node and hasn't been created yet."
                                },
                                {
                                  "type": "variable_declaration",
                                  "start": {
                                    "row": 46,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 46,
                                    "column": 34
                                  },
                                  "text": "var instance = void 0;",
                                  "children": [
                                    {
                                      "type": "var",
                                      "start": {
                                        "row": 46,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 46,
                                        "column": 15
                                      },
                                      "text": "var"
                                    },
                                    {
                                      "type": "variable_declarator",
                                      "start": {
                                        "row": 46,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 46,
                                        "column": 33
                                      },
                                      "text": "instance = void 0",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 46,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 46,
                                            "column": 24
                                          },
                                          "text": "instance"
                                        },
                                        {
                                          "type": "=",
                                          "start": {
                                            "row": 46,
                                            "column": 25
                                          },
                                          "end": {
                                            "row": 46,
                                            "column": 26
                                          },
                                          "text": "="
                                        },
                                        {
                                          "type": "unary_expression",
                                          "start": {
                                            "row": 46,
                                            "column": 27
                                          },
                                          "end": {
                                            "row": 46,
                                            "column": 33
                                          },
                                          "text": "void 0",
                                          "children": [
                                            {
                                              "type": "void",
                                              "start": {
                                                "row": 46,
                                                "column": 27
                                              },
                                              "end": {
                                                "row": 46,
                                                "column": 31
                                              },
                                              "text": "void"
                                            },
                                            {
                                              "type": "number",
                                              "start": {
                                                "row": 46,
                                                "column": 32
                                              },
                                              "end": {
                                                "row": 46,
                                                "column": 33
                                              },
                                              "text": "0"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start": {
                                        "row": 46,
                                        "column": 33
                                      },
                                      "end": {
                                        "row": 46,
                                        "column": 34
                                      },
                                      "text": ";"
                                    }
                                  ]
                                },
                                {
                                  "type": "if_statement",
                                  "start": {
                                    "row": 47,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 49,
                                    "column": 13
                                  },
                                  "text": "if (injector === di && (instance = searchMatchesQueuedForCreation(node, token))) {\n                return instance;\n            }",
                                  "children": [
                                    {
                                      "type": "if",
                                      "start": {
                                        "row": 47,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 47,
                                        "column": 14
                                      },
                                      "text": "if"
                                    },
                                    {
                                      "type": "parenthesized_expression",
                                      "start": {
                                        "row": 47,
                                        "column": 15
                                      },
                                      "end": {
                                        "row": 47,
                                        "column": 92
                                      },
                                      "text": "(injector === di && (instance = searchMatchesQueuedForCreation(node, token)))",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 47,
                                            "column": 15
                                          },
                                          "end": {
                                            "row": 47,
                                            "column": 16
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start": {
                                            "row": 47,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 47,
                                            "column": 91
                                          },
                                          "text": "injector === di && (instance = searchMatchesQueuedForCreation(node, token))",
                                          "children": [
                                            {
                                              "type": "binary_expression",
                                              "start": {
                                                "row": 47,
                                                "column": 16
                                              },
                                              "end": {
                                                "row": 47,
                                                "column": 31
                                              },
                                              "text": "injector === di",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 47,
                                                    "column": 16
                                                  },
                                                  "end": {
                                                    "row": 47,
                                                    "column": 24
                                                  },
                                                  "text": "injector"
                                                },
                                                {
                                                  "type": "===",
                                                  "start": {
                                                    "row": 47,
                                                    "column": 25
                                                  },
                                                  "end": {
                                                    "row": 47,
                                                    "column": 28
                                                  },
                                                  "text": "==="
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 47,
                                                    "column": 29
                                                  },
                                                  "end": {
                                                    "row": 47,
                                                    "column": 31
                                                  },
                                                  "text": "di"
                                                }
                                              ]
                                            },
                                            {
                                              "type": "&&",
                                              "start": {
                                                "row": 47,
                                                "column": 32
                                              },
                                              "end": {
                                                "row": 47,
                                                "column": 34
                                              },
                                              "text": "&&"
                                            },
                                            {
                                              "type": "parenthesized_expression",
                                              "start": {
                                                "row": 47,
                                                "column": 35
                                              },
                                              "end": {
                                                "row": 47,
                                                "column": 91
                                              },
                                              "text": "(instance = searchMatchesQueuedForCreation(node, token))",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 47,
                                                    "column": 35
                                                  },
                                                  "end": {
                                                    "row": 47,
                                                    "column": 36
                                                  },
                                                  "text": "("
                                                },
                                                {
                                                  "type": "assignment_expression",
                                                  "start": {
                                                    "row": 47,
                                                    "column": 36
                                                  },
                                                  "end": {
                                                    "row": 47,
                                                    "column": 90
                                                  },
                                                  "text": "instance = searchMatchesQueuedForCreation(node, token)",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 47,
                                                        "column": 36
                                                      },
                                                      "end": {
                                                        "row": 47,
                                                        "column": 44
                                                      },
                                                      "text": "instance"
                                                    },
                                                    {
                                                      "type": "=",
                                                      "start": {
                                                        "row": 47,
                                                        "column": 45
                                                      },
                                                      "end": {
                                                        "row": 47,
                                                        "column": 46
                                                      },
                                                      "text": "="
                                                    },
                                                    {
                                                      "type": "call_expression",
                                                      "start": {
                                                        "row": 47,
                                                        "column": 47
                                                      },
                                                      "end": {
                                                        "row": 47,
                                                        "column": 90
                                                      },
                                                      "text": "searchMatchesQueuedForCreation(node, token)",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 47,
                                                            "column": 47
                                                          },
                                                          "end": {
                                                            "row": 47,
                                                            "column": 77
                                                          },
                                                          "text": "searchMatchesQueuedForCreation"
                                                        },
                                                        {
                                                          "type": "arguments",
                                                          "start": {
                                                            "row": 47,
                                                            "column": 77
                                                          },
                                                          "end": {
                                                            "row": 47,
                                                            "column": 90
                                                          },
                                                          "text": "(node, token)",
                                                          "children": [
                                                            {
                                                              "type": "(",
                                                              "start": {
                                                                "row": 47,
                                                                "column": 77
                                                              },
                                                              "end": {
                                                                "row": 47,
                                                                "column": 78
                                                              },
                                                              "text": "("
                                                            },
                                                            {
                                                              "type": "identifier",
                                                              "start": {
                                                                "row": 47,
                                                                "column": 78
                                                              },
                                                              "end": {
                                                                "row": 47,
                                                                "column": 82
                                                              },
                                                              "text": "node"
                                                            },
                                                            {
                                                              "type": ",",
                                                              "start": {
                                                                "row": 47,
                                                                "column": 82
                                                              },
                                                              "end": {
                                                                "row": 47,
                                                                "column": 83
                                                              },
                                                              "text": ","
                                                            },
                                                            {
                                                              "type": "identifier",
                                                              "start": {
                                                                "row": 47,
                                                                "column": 84
                                                              },
                                                              "end": {
                                                                "row": 47,
                                                                "column": 89
                                                              },
                                                              "text": "token"
                                                            },
                                                            {
                                                              "type": ")",
                                                              "start": {
                                                                "row": 47,
                                                                "column": 89
                                                              },
                                                              "end": {
                                                                "row": 47,
                                                                "column": 90
                                                              },
                                                              "text": ")"
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 47,
                                                    "column": 90
                                                  },
                                                  "end": {
                                                    "row": 47,
                                                    "column": 91
                                                  },
                                                  "text": ")"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 47,
                                            "column": 91
                                          },
                                          "end": {
                                            "row": 47,
                                            "column": 92
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "statement_block",
                                      "start": {
                                        "row": 47,
                                        "column": 93
                                      },
                                      "end": {
                                        "row": 49,
                                        "column": 13
                                      },
                                      "text": "{\n                return instance;\n            }",
                                      "children": [
                                        {
                                          "type": "{",
                                          "start": {
                                            "row": 47,
                                            "column": 93
                                          },
                                          "end": {
                                            "row": 47,
                                            "column": 94
                                          },
                                          "text": "{"
                                        },
                                        {
                                          "type": "return_statement",
                                          "start": {
                                            "row": 48,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 48,
                                            "column": 32
                                          },
                                          "text": "return instance;",
                                          "children": [
                                            {
                                              "type": "return",
                                              "start": {
                                                "row": 48,
                                                "column": 16
                                              },
                                              "end": {
                                                "row": 48,
                                                "column": 22
                                              },
                                              "text": "return"
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 48,
                                                "column": 23
                                              },
                                              "end": {
                                                "row": 48,
                                                "column": 31
                                              },
                                              "text": "instance"
                                            },
                                            {
                                              "type": ";",
                                              "start": {
                                                "row": 48,
                                                "column": 31
                                              },
                                              "end": {
                                                "row": 48,
                                                "column": 32
                                              },
                                              "text": ";"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "}",
                                          "start": {
                                            "row": 49,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 49,
                                            "column": 13
                                          },
                                          "text": "}"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "comment",
                                  "start": {
                                    "row": 50,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 50,
                                    "column": 86
                                  },
                                  "text": "// The def wasn't found anywhere on this node, so it was a false positive."
                                },
                                {
                                  "type": "comment",
                                  "start": {
                                    "row": 51,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 51,
                                    "column": 76
                                  },
                                  "text": "// If flags permit, traverse up the tree and continue searching."
                                },
                                {
                                  "type": "if_statement",
                                  "start": {
                                    "row": 52,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 57,
                                    "column": 13
                                  },
                                  "text": "if (flags & 2 /* Self */ || flags & 1 /* Host */ && !sameHostView(injector)) {\n                injector = null;\n            }\n            else {\n                injector = injector.parent;\n            }",
                                  "children": [
                                    {
                                      "type": "if",
                                      "start": {
                                        "row": 52,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 52,
                                        "column": 14
                                      },
                                      "text": "if"
                                    },
                                    {
                                      "type": "parenthesized_expression",
                                      "start": {
                                        "row": 52,
                                        "column": 15
                                      },
                                      "end": {
                                        "row": 52,
                                        "column": 88
                                      },
                                      "text": "(flags & 2 /* Self */ || flags & 1 /* Host */ && !sameHostView(injector))",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 52,
                                            "column": 15
                                          },
                                          "end": {
                                            "row": 52,
                                            "column": 16
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start": {
                                            "row": 52,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 52,
                                            "column": 87
                                          },
                                          "text": "flags & 2 /* Self */ || flags & 1 /* Host */ && !sameHostView(injector)",
                                          "children": [
                                            {
                                              "type": "binary_expression",
                                              "start": {
                                                "row": 52,
                                                "column": 16
                                              },
                                              "end": {
                                                "row": 52,
                                                "column": 25
                                              },
                                              "text": "flags & 2",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 52,
                                                    "column": 16
                                                  },
                                                  "end": {
                                                    "row": 52,
                                                    "column": 21
                                                  },
                                                  "text": "flags"
                                                },
                                                {
                                                  "type": "&",
                                                  "start": {
                                                    "row": 52,
                                                    "column": 22
                                                  },
                                                  "end": {
                                                    "row": 52,
                                                    "column": 23
                                                  },
                                                  "text": "&"
                                                },
                                                {
                                                  "type": "number",
                                                  "start": {
                                                    "row": 52,
                                                    "column": 24
                                                  },
                                                  "end": {
                                                    "row": 52,
                                                    "column": 25
                                                  },
                                                  "text": "2"
                                                }
                                              ]
                                            },
                                            {
                                              "type": "comment",
                                              "start": {
                                                "row": 52,
                                                "column": 26
                                              },
                                              "end": {
                                                "row": 52,
                                                "column": 36
                                              },
                                              "text": "/* Self */"
                                            },
                                            {
                                              "type": "||",
                                              "start": {
                                                "row": 52,
                                                "column": 37
                                              },
                                              "end": {
                                                "row": 52,
                                                "column": 39
                                              },
                                              "text": "||"
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start": {
                                                "row": 52,
                                                "column": 40
                                              },
                                              "end": {
                                                "row": 52,
                                                "column": 87
                                              },
                                              "text": "flags & 1 /* Host */ && !sameHostView(injector)",
                                              "children": [
                                                {
                                                  "type": "binary_expression",
                                                  "start": {
                                                    "row": 52,
                                                    "column": 40
                                                  },
                                                  "end": {
                                                    "row": 52,
                                                    "column": 49
                                                  },
                                                  "text": "flags & 1",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 52,
                                                        "column": 40
                                                      },
                                                      "end": {
                                                        "row": 52,
                                                        "column": 45
                                                      },
                                                      "text": "flags"
                                                    },
                                                    {
                                                      "type": "&",
                                                      "start": {
                                                        "row": 52,
                                                        "column": 46
                                                      },
                                                      "end": {
                                                        "row": 52,
                                                        "column": 47
                                                      },
                                                      "text": "&"
                                                    },
                                                    {
                                                      "type": "number",
                                                      "start": {
                                                        "row": 52,
                                                        "column": 48
                                                      },
                                                      "end": {
                                                        "row": 52,
                                                        "column": 49
                                                      },
                                                      "text": "1"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "comment",
                                                  "start": {
                                                    "row": 52,
                                                    "column": 50
                                                  },
                                                  "end": {
                                                    "row": 52,
                                                    "column": 60
                                                  },
                                                  "text": "/* Host */"
                                                },
                                                {
                                                  "type": "&&",
                                                  "start": {
                                                    "row": 52,
                                                    "column": 61
                                                  },
                                                  "end": {
                                                    "row": 52,
                                                    "column": 63
                                                  },
                                                  "text": "&&"
                                                },
                                                {
                                                  "type": "unary_expression",
                                                  "start": {
                                                    "row": 52,
                                                    "column": 64
                                                  },
                                                  "end": {
                                                    "row": 52,
                                                    "column": 87
                                                  },
                                                  "text": "!sameHostView(injector)",
                                                  "children": [
                                                    {
                                                      "type": "!",
                                                      "start": {
                                                        "row": 52,
                                                        "column": 64
                                                      },
                                                      "end": {
                                                        "row": 52,
                                                        "column": 65
                                                      },
                                                      "text": "!"
                                                    },
                                                    {
                                                      "type": "call_expression",
                                                      "start": {
                                                        "row": 52,
                                                        "column": 65
                                                      },
                                                      "end": {
                                                        "row": 52,
                                                        "column": 87
                                                      },
                                                      "text": "sameHostView(injector)",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 52,
                                                            "column": 65
                                                          },
                                                          "end": {
                                                            "row": 52,
                                                            "column": 77
                                                          },
                                                          "text": "sameHostView"
                                                        },
                                                        {
                                                          "type": "arguments",
                                                          "start": {
                                                            "row": 52,
                                                            "column": 77
                                                          },
                                                          "end": {
                                                            "row": 52,
                                                            "column": 87
                                                          },
                                                          "text": "(injector)",
                                                          "children": [
                                                            {
                                                              "type": "(",
                                                              "start": {
                                                                "row": 52,
                                                                "column": 77
                                                              },
                                                              "end": {
                                                                "row": 52,
                                                                "column": 78
                                                              },
                                                              "text": "("
                                                            },
                                                            {
                                                              "type": "identifier",
                                                              "start": {
                                                                "row": 52,
                                                                "column": 78
                                                              },
                                                              "end": {
                                                                "row": 52,
                                                                "column": 86
                                                              },
                                                              "text": "injector"
                                                            },
                                                            {
                                                              "type": ")",
                                                              "start": {
                                                                "row": 52,
                                                                "column": 86
                                                              },
                                                              "end": {
                                                                "row": 52,
                                                                "column": 87
                                                              },
                                                              "text": ")"
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 52,
                                            "column": 87
                                          },
                                          "end": {
                                            "row": 52,
                                            "column": 88
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "statement_block",
                                      "start": {
                                        "row": 52,
                                        "column": 89
                                      },
                                      "end": {
                                        "row": 54,
                                        "column": 13
                                      },
                                      "text": "{\n                injector = null;\n            }",
                                      "children": [
                                        {
                                          "type": "{",
                                          "start": {
                                            "row": 52,
                                            "column": 89
                                          },
                                          "end": {
                                            "row": 52,
                                            "column": 90
                                          },
                                          "text": "{"
                                        },
                                        {
                                          "type": "expression_statement",
                                          "start": {
                                            "row": 53,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 53,
                                            "column": 32
                                          },
                                          "text": "injector = null;",
                                          "children": [
                                            {
                                              "type": "assignment_expression",
                                              "start": {
                                                "row": 53,
                                                "column": 16
                                              },
                                              "end": {
                                                "row": 53,
                                                "column": 31
                                              },
                                              "text": "injector = null",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 53,
                                                    "column": 16
                                                  },
                                                  "end": {
                                                    "row": 53,
                                                    "column": 24
                                                  },
                                                  "text": "injector"
                                                },
                                                {
                                                  "type": "=",
                                                  "start": {
                                                    "row": 53,
                                                    "column": 25
                                                  },
                                                  "end": {
                                                    "row": 53,
                                                    "column": 26
                                                  },
                                                  "text": "="
                                                },
                                                {
                                                  "type": "null",
                                                  "start": {
                                                    "row": 53,
                                                    "column": 27
                                                  },
                                                  "end": {
                                                    "row": 53,
                                                    "column": 31
                                                  },
                                                  "text": "null"
                                                }
                                              ]
                                            },
                                            {
                                              "type": ";",
                                              "start": {
                                                "row": 53,
                                                "column": 31
                                              },
                                              "end": {
                                                "row": 53,
                                                "column": 32
                                              },
                                              "text": ";"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "}",
                                          "start": {
                                            "row": 54,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 54,
                                            "column": 13
                                          },
                                          "text": "}"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "else_clause",
                                      "start": {
                                        "row": 55,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 57,
                                        "column": 13
                                      },
                                      "text": "else {\n                injector = injector.parent;\n            }",
                                      "children": [
                                        {
                                          "type": "else",
                                          "start": {
                                            "row": 55,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 55,
                                            "column": 16
                                          },
                                          "text": "else"
                                        },
                                        {
                                          "type": "statement_block",
                                          "start": {
                                            "row": 55,
                                            "column": 17
                                          },
                                          "end": {
                                            "row": 57,
                                            "column": 13
                                          },
                                          "text": "{\n                injector = injector.parent;\n            }",
                                          "children": [
                                            {
                                              "type": "{",
                                              "start": {
                                                "row": 55,
                                                "column": 17
                                              },
                                              "end": {
                                                "row": 55,
                                                "column": 18
                                              },
                                              "text": "{"
                                            },
                                            {
                                              "type": "expression_statement",
                                              "start": {
                                                "row": 56,
                                                "column": 16
                                              },
                                              "end": {
                                                "row": 56,
                                                "column": 43
                                              },
                                              "text": "injector = injector.parent;",
                                              "children": [
                                                {
                                                  "type": "assignment_expression",
                                                  "start": {
                                                    "row": 56,
                                                    "column": 16
                                                  },
                                                  "end": {
                                                    "row": 56,
                                                    "column": 42
                                                  },
                                                  "text": "injector = injector.parent",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 56,
                                                        "column": 16
                                                      },
                                                      "end": {
                                                        "row": 56,
                                                        "column": 24
                                                      },
                                                      "text": "injector"
                                                    },
                                                    {
                                                      "type": "=",
                                                      "start": {
                                                        "row": 56,
                                                        "column": 25
                                                      },
                                                      "end": {
                                                        "row": 56,
                                                        "column": 26
                                                      },
                                                      "text": "="
                                                    },
                                                    {
                                                      "type": "member_expression",
                                                      "start": {
                                                        "row": 56,
                                                        "column": 27
                                                      },
                                                      "end": {
                                                        "row": 56,
                                                        "column": 42
                                                      },
                                                      "text": "injector.parent",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 56,
                                                            "column": 27
                                                          },
                                                          "end": {
                                                            "row": 56,
                                                            "column": 35
                                                          },
                                                          "text": "injector"
                                                        },
                                                        {
                                                          "type": ".",
                                                          "start": {
                                                            "row": 56,
                                                            "column": 35
                                                          },
                                                          "end": {
                                                            "row": 56,
                                                            "column": 36
                                                          },
                                                          "text": "."
                                                        },
                                                        {
                                                          "type": "property_identifier",
                                                          "start": {
                                                            "row": 56,
                                                            "column": 36
                                                          },
                                                          "end": {
                                                            "row": 56,
                                                            "column": 42
                                                          },
                                                          "text": "parent"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ";",
                                                  "start": {
                                                    "row": 56,
                                                    "column": 42
                                                  },
                                                  "end": {
                                                    "row": 56,
                                                    "column": 43
                                                  },
                                                  "text": ";"
                                                }
                                              ]
                                            },
                                            {
                                              "type": "}",
                                              "start": {
                                                "row": 57,
                                                "column": 12
                                              },
                                              "end": {
                                                "row": 57,
                                                "column": 13
                                              },
                                              "text": "}"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "}",
                                  "start": {
                                    "row": 58,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 58,
                                    "column": 9
                                  },
                                  "text": "}"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "}",
                          "start": {
                            "row": 59,
                            "column": 4
                          },
                          "end": {
                            "row": 59,
                            "column": 5
                          },
                          "text": "}"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 60,
                "column": 4
              },
              "end": {
                "row": 60,
                "column": 50
              },
              "text": "// No directive was found for the given token."
            },
            {
              "type": "if_statement",
              "start": {
                "row": 61,
                "column": 4
              },
              "end": {
                "row": 62,
                "column": 20
              },
              "text": "if (flags & 8 /* Optional */)\n        return null;",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 61,
                    "column": 4
                  },
                  "end": {
                    "row": 61,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "parenthesized_expression",
                  "start": {
                    "row": 61,
                    "column": 7
                  },
                  "end": {
                    "row": 61,
                    "column": 33
                  },
                  "text": "(flags & 8 /* Optional */)",
                  "children": [
                    {
                      "type": "(",
                      "start": {
                        "row": 61,
                        "column": 7
                      },
                      "end": {
                        "row": 61,
                        "column": 8
                      },
                      "text": "("
                    },
                    {
                      "type": "binary_expression",
                      "start": {
                        "row": 61,
                        "column": 8
                      },
                      "end": {
                        "row": 61,
                        "column": 17
                      },
                      "text": "flags & 8",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 61,
                            "column": 8
                          },
                          "end": {
                            "row": 61,
                            "column": 13
                          },
                          "text": "flags"
                        },
                        {
                          "type": "&",
                          "start": {
                            "row": 61,
                            "column": 14
                          },
                          "end": {
                            "row": 61,
                            "column": 15
                          },
                          "text": "&"
                        },
                        {
                          "type": "number",
                          "start": {
                            "row": 61,
                            "column": 16
                          },
                          "end": {
                            "row": 61,
                            "column": 17
                          },
                          "text": "8"
                        }
                      ]
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 61,
                        "column": 18
                      },
                      "end": {
                        "row": 61,
                        "column": 32
                      },
                      "text": "/* Optional */"
                    },
                    {
                      "type": ")",
                      "start": {
                        "row": 61,
                        "column": 32
                      },
                      "end": {
                        "row": 61,
                        "column": 33
                      },
                      "text": ")"
                    }
                  ]
                },
                {
                  "type": "return_statement",
                  "start": {
                    "row": 62,
                    "column": 8
                  },
                  "end": {
                    "row": 62,
                    "column": 20
                  },
                  "text": "return null;",
                  "children": [
                    {
                      "type": "return",
                      "start": {
                        "row": 62,
                        "column": 8
                      },
                      "end": {
                        "row": 62,
                        "column": 14
                      },
                      "text": "return"
                    },
                    {
                      "type": "null",
                      "start": {
                        "row": 62,
                        "column": 15
                      },
                      "end": {
                        "row": 62,
                        "column": 19
                      },
                      "text": "null"
                    },
                    {
                      "type": ";",
                      "start": {
                        "row": 62,
                        "column": 19
                      },
                      "end": {
                        "row": 62,
                        "column": 20
                      },
                      "text": ";"
                    }
                  ]
                }
              ]
            },
            {
              "type": "throw_statement",
              "start": {
                "row": 63,
                "column": 4
              },
              "end": {
                "row": 63,
                "column": 72
              },
              "text": "throw new Error(\"Injector: NOT_FOUND [\" + stringify$1(token) + \"]\");",
              "children": [
                {
                  "type": "throw",
                  "start": {
                    "row": 63,
                    "column": 4
                  },
                  "end": {
                    "row": 63,
                    "column": 9
                  },
                  "text": "throw"
                },
                {
                  "type": "new_expression",
                  "start": {
                    "row": 63,
                    "column": 10
                  },
                  "end": {
                    "row": 63,
                    "column": 71
                  },
                  "text": "new Error(\"Injector: NOT_FOUND [\" + stringify$1(token) + \"]\")",
                  "children": [
                    {
                      "type": "new",
                      "start": {
                        "row": 63,
                        "column": 10
                      },
                      "end": {
                        "row": 63,
                        "column": 13
                      },
                      "text": "new"
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 63,
                        "column": 14
                      },
                      "end": {
                        "row": 63,
                        "column": 19
                      },
                      "text": "Error"
                    },
                    {
                      "type": "arguments",
                      "start": {
                        "row": 63,
                        "column": 19
                      },
                      "end": {
                        "row": 63,
                        "column": 71
                      },
                      "text": "(\"Injector: NOT_FOUND [\" + stringify$1(token) + \"]\")",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 63,
                            "column": 19
                          },
                          "end": {
                            "row": 63,
                            "column": 20
                          },
                          "text": "("
                        },
                        {
                          "type": "binary_expression",
                          "start": {
                            "row": 63,
                            "column": 20
                          },
                          "end": {
                            "row": 63,
                            "column": 70
                          },
                          "text": "\"Injector: NOT_FOUND [\" + stringify$1(token) + \"]\"",
                          "children": [
                            {
                              "type": "binary_expression",
                              "start": {
                                "row": 63,
                                "column": 20
                              },
                              "end": {
                                "row": 63,
                                "column": 64
                              },
                              "text": "\"Injector: NOT_FOUND [\" + stringify$1(token)",
                              "children": [
                                {
                                  "type": "string",
                                  "start": {
                                    "row": 63,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 63,
                                    "column": 43
                                  },
                                  "text": "\"Injector: NOT_FOUND [\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start": {
                                        "row": 63,
                                        "column": 20
                                      },
                                      "end": {
                                        "row": 63,
                                        "column": 21
                                      },
                                      "text": "\""
                                    },
                                    {
                                      "type": "string_fragment",
                                      "start": {
                                        "row": 63,
                                        "column": 21
                                      },
                                      "end": {
                                        "row": 63,
                                        "column": 42
                                      },
                                      "text": "Injector: NOT_FOUND ["
                                    },
                                    {
                                      "type": "\"",
                                      "start": {
                                        "row": 63,
                                        "column": 42
                                      },
                                      "end": {
                                        "row": 63,
                                        "column": 43
                                      },
                                      "text": "\""
                                    }
                                  ]
                                },
                                {
                                  "type": "+",
                                  "start": {
                                    "row": 63,
                                    "column": 44
                                  },
                                  "end": {
                                    "row": 63,
                                    "column": 45
                                  },
                                  "text": "+"
                                },
                                {
                                  "type": "call_expression",
                                  "start": {
                                    "row": 63,
                                    "column": 46
                                  },
                                  "end": {
                                    "row": 63,
                                    "column": 64
                                  },
                                  "text": "stringify$1(token)",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 63,
                                        "column": 46
                                      },
                                      "end": {
                                        "row": 63,
                                        "column": 57
                                      },
                                      "text": "stringify$1"
                                    },
                                    {
                                      "type": "arguments",
                                      "start": {
                                        "row": 63,
                                        "column": 57
                                      },
                                      "end": {
                                        "row": 63,
                                        "column": 64
                                      },
                                      "text": "(token)",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 63,
                                            "column": 57
                                          },
                                          "end": {
                                            "row": 63,
                                            "column": 58
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 63,
                                            "column": 58
                                          },
                                          "end": {
                                            "row": 63,
                                            "column": 63
                                          },
                                          "text": "token"
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 63,
                                            "column": 63
                                          },
                                          "end": {
                                            "row": 63,
                                            "column": 64
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "+",
                              "start": {
                                "row": 63,
                                "column": 65
                              },
                              "end": {
                                "row": 63,
                                "column": 66
                              },
                              "text": "+"
                            },
                            {
                              "type": "string",
                              "start": {
                                "row": 63,
                                "column": 67
                              },
                              "end": {
                                "row": 63,
                                "column": 70
                              },
                              "text": "\"]\"",
                              "children": [
                                {
                                  "type": "\"",
                                  "start": {
                                    "row": 63,
                                    "column": 67
                                  },
                                  "end": {
                                    "row": 63,
                                    "column": 68
                                  },
                                  "text": "\""
                                },
                                {
                                  "type": "string_fragment",
                                  "start": {
                                    "row": 63,
                                    "column": 68
                                  },
                                  "end": {
                                    "row": 63,
                                    "column": 69
                                  },
                                  "text": "]"
                                },
                                {
                                  "type": "\"",
                                  "start": {
                                    "row": 63,
                                    "column": 69
                                  },
                                  "end": {
                                    "row": 63,
                                    "column": 70
                                  },
                                  "text": "\""
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 63,
                            "column": 70
                          },
                          "end": {
                            "row": 63,
                            "column": 71
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 63,
                    "column": 71
                  },
                  "end": {
                    "row": 63,
                    "column": 72
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "}",
              "start": {
                "row": 64,
                "column": 0
              },
              "end": {
                "row": 64,
                "column": 1
              },
              "text": "}"
            }
          ]
        }
      ]
    }
  ]
}