{
  "type": "program",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 12,
    "column": 3
  },
  "text": "function updateStepProgressIO() {\n    io.stepProgress = stepEl.map((el, i) => {\n      const marginTop = stepOffsetHeight[i] - offsetMargin;\n      const marginBottom = -viewH + offsetMargin;\n      const rootMargin = `${marginTop}px 0px ${marginBottom}px 0px`;\n      const threshold = createThreshold(stepOffsetHeight[i]);\n      const options = { rootMargin, threshold };\n      // console.log(options);\n      const obs = new IntersectionObserver(intersectStepProgress, options);\n      obs.observe(el);\n      return obs;\n    });\n  }",
  "children": [
    {
      "type": "function_declaration",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 12,
        "column": 3
      },
      "text": "function updateStepProgressIO() {\n    io.stepProgress = stepEl.map((el, i) => {\n      const marginTop = stepOffsetHeight[i] - offsetMargin;\n      const marginBottom = -viewH + offsetMargin;\n      const rootMargin = `${marginTop}px 0px ${marginBottom}px 0px`;\n      const threshold = createThreshold(stepOffsetHeight[i]);\n      const options = { rootMargin, threshold };\n      // console.log(options);\n      const obs = new IntersectionObserver(intersectStepProgress, options);\n      obs.observe(el);\n      return obs;\n    });\n  }",
      "children": [
        {
          "type": "function",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 8
          },
          "text": "function"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 9
          },
          "end": {
            "row": 0,
            "column": 29
          },
          "text": "updateStepProgressIO"
        },
        {
          "type": "formal_parameters",
          "start": {
            "row": 0,
            "column": 29
          },
          "end": {
            "row": 0,
            "column": 31
          },
          "text": "()",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 29
              },
              "end": {
                "row": 0,
                "column": 30
              },
              "text": "("
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 30
              },
              "end": {
                "row": 0,
                "column": 31
              },
              "text": ")"
            }
          ]
        },
        {
          "type": "statement_block",
          "start": {
            "row": 0,
            "column": 32
          },
          "end": {
            "row": 12,
            "column": 3
          },
          "text": "{\n    io.stepProgress = stepEl.map((el, i) => {\n      const marginTop = stepOffsetHeight[i] - offsetMargin;\n      const marginBottom = -viewH + offsetMargin;\n      const rootMargin = `${marginTop}px 0px ${marginBottom}px 0px`;\n      const threshold = createThreshold(stepOffsetHeight[i]);\n      const options = { rootMargin, threshold };\n      // console.log(options);\n      const obs = new IntersectionObserver(intersectStepProgress, options);\n      obs.observe(el);\n      return obs;\n    });\n  }",
          "children": [
            {
              "type": "{",
              "start": {
                "row": 0,
                "column": 32
              },
              "end": {
                "row": 0,
                "column": 33
              },
              "text": "{"
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 4
              },
              "end": {
                "row": 11,
                "column": 7
              },
              "text": "io.stepProgress = stepEl.map((el, i) => {\n      const marginTop = stepOffsetHeight[i] - offsetMargin;\n      const marginBottom = -viewH + offsetMargin;\n      const rootMargin = `${marginTop}px 0px ${marginBottom}px 0px`;\n      const threshold = createThreshold(stepOffsetHeight[i]);\n      const options = { rootMargin, threshold };\n      // console.log(options);\n      const obs = new IntersectionObserver(intersectStepProgress, options);\n      obs.observe(el);\n      return obs;\n    });",
              "children": [
                {
                  "type": "assignment_expression",
                  "start": {
                    "row": 1,
                    "column": 4
                  },
                  "end": {
                    "row": 11,
                    "column": 6
                  },
                  "text": "io.stepProgress = stepEl.map((el, i) => {\n      const marginTop = stepOffsetHeight[i] - offsetMargin;\n      const marginBottom = -viewH + offsetMargin;\n      const rootMargin = `${marginTop}px 0px ${marginBottom}px 0px`;\n      const threshold = createThreshold(stepOffsetHeight[i]);\n      const options = { rootMargin, threshold };\n      // console.log(options);\n      const obs = new IntersectionObserver(intersectStepProgress, options);\n      obs.observe(el);\n      return obs;\n    })",
                  "children": [
                    {
                      "type": "member_expression",
                      "start": {
                        "row": 1,
                        "column": 4
                      },
                      "end": {
                        "row": 1,
                        "column": 19
                      },
                      "text": "io.stepProgress",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 1,
                            "column": 4
                          },
                          "end": {
                            "row": 1,
                            "column": 6
                          },
                          "text": "io"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 1,
                            "column": 6
                          },
                          "end": {
                            "row": 1,
                            "column": 7
                          },
                          "text": "."
                        },
                        {
                          "type": "property_identifier",
                          "start": {
                            "row": 1,
                            "column": 7
                          },
                          "end": {
                            "row": 1,
                            "column": 19
                          },
                          "text": "stepProgress"
                        }
                      ]
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 1,
                        "column": 20
                      },
                      "end": {
                        "row": 1,
                        "column": 21
                      },
                      "text": "="
                    },
                    {
                      "type": "call_expression",
                      "start": {
                        "row": 1,
                        "column": 22
                      },
                      "end": {
                        "row": 11,
                        "column": 6
                      },
                      "text": "stepEl.map((el, i) => {\n      const marginTop = stepOffsetHeight[i] - offsetMargin;\n      const marginBottom = -viewH + offsetMargin;\n      const rootMargin = `${marginTop}px 0px ${marginBottom}px 0px`;\n      const threshold = createThreshold(stepOffsetHeight[i]);\n      const options = { rootMargin, threshold };\n      // console.log(options);\n      const obs = new IntersectionObserver(intersectStepProgress, options);\n      obs.observe(el);\n      return obs;\n    })",
                      "children": [
                        {
                          "type": "member_expression",
                          "start": {
                            "row": 1,
                            "column": 22
                          },
                          "end": {
                            "row": 1,
                            "column": 32
                          },
                          "text": "stepEl.map",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 1,
                                "column": 22
                              },
                              "end": {
                                "row": 1,
                                "column": 28
                              },
                              "text": "stepEl"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 1,
                                "column": 28
                              },
                              "end": {
                                "row": 1,
                                "column": 29
                              },
                              "text": "."
                            },
                            {
                              "type": "property_identifier",
                              "start": {
                                "row": 1,
                                "column": 29
                              },
                              "end": {
                                "row": 1,
                                "column": 32
                              },
                              "text": "map"
                            }
                          ]
                        },
                        {
                          "type": "arguments",
                          "start": {
                            "row": 1,
                            "column": 32
                          },
                          "end": {
                            "row": 11,
                            "column": 6
                          },
                          "text": "((el, i) => {\n      const marginTop = stepOffsetHeight[i] - offsetMargin;\n      const marginBottom = -viewH + offsetMargin;\n      const rootMargin = `${marginTop}px 0px ${marginBottom}px 0px`;\n      const threshold = createThreshold(stepOffsetHeight[i]);\n      const options = { rootMargin, threshold };\n      // console.log(options);\n      const obs = new IntersectionObserver(intersectStepProgress, options);\n      obs.observe(el);\n      return obs;\n    })",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 1,
                                "column": 32
                              },
                              "end": {
                                "row": 1,
                                "column": 33
                              },
                              "text": "("
                            },
                            {
                              "type": "arrow_function",
                              "start": {
                                "row": 1,
                                "column": 33
                              },
                              "end": {
                                "row": 11,
                                "column": 5
                              },
                              "text": "(el, i) => {\n      const marginTop = stepOffsetHeight[i] - offsetMargin;\n      const marginBottom = -viewH + offsetMargin;\n      const rootMargin = `${marginTop}px 0px ${marginBottom}px 0px`;\n      const threshold = createThreshold(stepOffsetHeight[i]);\n      const options = { rootMargin, threshold };\n      // console.log(options);\n      const obs = new IntersectionObserver(intersectStepProgress, options);\n      obs.observe(el);\n      return obs;\n    }",
                              "children": [
                                {
                                  "type": "formal_parameters",
                                  "start": {
                                    "row": 1,
                                    "column": 33
                                  },
                                  "end": {
                                    "row": 1,
                                    "column": 40
                                  },
                                  "text": "(el, i)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 1,
                                        "column": 33
                                      },
                                      "end": {
                                        "row": 1,
                                        "column": 34
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 1,
                                        "column": 34
                                      },
                                      "end": {
                                        "row": 1,
                                        "column": 36
                                      },
                                      "text": "el"
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 1,
                                        "column": 36
                                      },
                                      "end": {
                                        "row": 1,
                                        "column": 37
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 1,
                                        "column": 38
                                      },
                                      "end": {
                                        "row": 1,
                                        "column": 39
                                      },
                                      "text": "i"
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 1,
                                        "column": 39
                                      },
                                      "end": {
                                        "row": 1,
                                        "column": 40
                                      },
                                      "text": ")"
                                    }
                                  ]
                                },
                                {
                                  "type": "=>",
                                  "start": {
                                    "row": 1,
                                    "column": 41
                                  },
                                  "end": {
                                    "row": 1,
                                    "column": 43
                                  },
                                  "text": "=>"
                                },
                                {
                                  "type": "statement_block",
                                  "start": {
                                    "row": 1,
                                    "column": 44
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 5
                                  },
                                  "text": "{\n      const marginTop = stepOffsetHeight[i] - offsetMargin;\n      const marginBottom = -viewH + offsetMargin;\n      const rootMargin = `${marginTop}px 0px ${marginBottom}px 0px`;\n      const threshold = createThreshold(stepOffsetHeight[i]);\n      const options = { rootMargin, threshold };\n      // console.log(options);\n      const obs = new IntersectionObserver(intersectStepProgress, options);\n      obs.observe(el);\n      return obs;\n    }",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start": {
                                        "row": 1,
                                        "column": 44
                                      },
                                      "end": {
                                        "row": 1,
                                        "column": 45
                                      },
                                      "text": "{"
                                    },
                                    {
                                      "type": "lexical_declaration",
                                      "start": {
                                        "row": 2,
                                        "column": 6
                                      },
                                      "end": {
                                        "row": 2,
                                        "column": 59
                                      },
                                      "text": "const marginTop = stepOffsetHeight[i] - offsetMargin;",
                                      "children": [
                                        {
                                          "type": "const",
                                          "start": {
                                            "row": 2,
                                            "column": 6
                                          },
                                          "end": {
                                            "row": 2,
                                            "column": 11
                                          },
                                          "text": "const"
                                        },
                                        {
                                          "type": "variable_declarator",
                                          "start": {
                                            "row": 2,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 2,
                                            "column": 58
                                          },
                                          "text": "marginTop = stepOffsetHeight[i] - offsetMargin",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 2,
                                                "column": 12
                                              },
                                              "end": {
                                                "row": 2,
                                                "column": 21
                                              },
                                              "text": "marginTop"
                                            },
                                            {
                                              "type": "=",
                                              "start": {
                                                "row": 2,
                                                "column": 22
                                              },
                                              "end": {
                                                "row": 2,
                                                "column": 23
                                              },
                                              "text": "="
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start": {
                                                "row": 2,
                                                "column": 24
                                              },
                                              "end": {
                                                "row": 2,
                                                "column": 58
                                              },
                                              "text": "stepOffsetHeight[i] - offsetMargin",
                                              "children": [
                                                {
                                                  "type": "subscript_expression",
                                                  "start": {
                                                    "row": 2,
                                                    "column": 24
                                                  },
                                                  "end": {
                                                    "row": 2,
                                                    "column": 43
                                                  },
                                                  "text": "stepOffsetHeight[i]",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 2,
                                                        "column": 24
                                                      },
                                                      "end": {
                                                        "row": 2,
                                                        "column": 40
                                                      },
                                                      "text": "stepOffsetHeight"
                                                    },
                                                    {
                                                      "type": "[",
                                                      "start": {
                                                        "row": 2,
                                                        "column": 40
                                                      },
                                                      "end": {
                                                        "row": 2,
                                                        "column": 41
                                                      },
                                                      "text": "["
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 2,
                                                        "column": 41
                                                      },
                                                      "end": {
                                                        "row": 2,
                                                        "column": 42
                                                      },
                                                      "text": "i"
                                                    },
                                                    {
                                                      "type": "]",
                                                      "start": {
                                                        "row": 2,
                                                        "column": 42
                                                      },
                                                      "end": {
                                                        "row": 2,
                                                        "column": 43
                                                      },
                                                      "text": "]"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "-",
                                                  "start": {
                                                    "row": 2,
                                                    "column": 44
                                                  },
                                                  "end": {
                                                    "row": 2,
                                                    "column": 45
                                                  },
                                                  "text": "-"
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 2,
                                                    "column": 46
                                                  },
                                                  "end": {
                                                    "row": 2,
                                                    "column": 58
                                                  },
                                                  "text": "offsetMargin"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start": {
                                            "row": 2,
                                            "column": 58
                                          },
                                          "end": {
                                            "row": 2,
                                            "column": 59
                                          },
                                          "text": ";"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "lexical_declaration",
                                      "start": {
                                        "row": 3,
                                        "column": 6
                                      },
                                      "end": {
                                        "row": 3,
                                        "column": 49
                                      },
                                      "text": "const marginBottom = -viewH + offsetMargin;",
                                      "children": [
                                        {
                                          "type": "const",
                                          "start": {
                                            "row": 3,
                                            "column": 6
                                          },
                                          "end": {
                                            "row": 3,
                                            "column": 11
                                          },
                                          "text": "const"
                                        },
                                        {
                                          "type": "variable_declarator",
                                          "start": {
                                            "row": 3,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 3,
                                            "column": 48
                                          },
                                          "text": "marginBottom = -viewH + offsetMargin",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 3,
                                                "column": 12
                                              },
                                              "end": {
                                                "row": 3,
                                                "column": 24
                                              },
                                              "text": "marginBottom"
                                            },
                                            {
                                              "type": "=",
                                              "start": {
                                                "row": 3,
                                                "column": 25
                                              },
                                              "end": {
                                                "row": 3,
                                                "column": 26
                                              },
                                              "text": "="
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start": {
                                                "row": 3,
                                                "column": 27
                                              },
                                              "end": {
                                                "row": 3,
                                                "column": 48
                                              },
                                              "text": "-viewH + offsetMargin",
                                              "children": [
                                                {
                                                  "type": "unary_expression",
                                                  "start": {
                                                    "row": 3,
                                                    "column": 27
                                                  },
                                                  "end": {
                                                    "row": 3,
                                                    "column": 33
                                                  },
                                                  "text": "-viewH",
                                                  "children": [
                                                    {
                                                      "type": "-",
                                                      "start": {
                                                        "row": 3,
                                                        "column": 27
                                                      },
                                                      "end": {
                                                        "row": 3,
                                                        "column": 28
                                                      },
                                                      "text": "-"
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 3,
                                                        "column": 28
                                                      },
                                                      "end": {
                                                        "row": 3,
                                                        "column": 33
                                                      },
                                                      "text": "viewH"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "+",
                                                  "start": {
                                                    "row": 3,
                                                    "column": 34
                                                  },
                                                  "end": {
                                                    "row": 3,
                                                    "column": 35
                                                  },
                                                  "text": "+"
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 3,
                                                    "column": 36
                                                  },
                                                  "end": {
                                                    "row": 3,
                                                    "column": 48
                                                  },
                                                  "text": "offsetMargin"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start": {
                                            "row": 3,
                                            "column": 48
                                          },
                                          "end": {
                                            "row": 3,
                                            "column": 49
                                          },
                                          "text": ";"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "lexical_declaration",
                                      "start": {
                                        "row": 4,
                                        "column": 6
                                      },
                                      "end": {
                                        "row": 4,
                                        "column": 68
                                      },
                                      "text": "const rootMargin = `${marginTop}px 0px ${marginBottom}px 0px`;",
                                      "children": [
                                        {
                                          "type": "const",
                                          "start": {
                                            "row": 4,
                                            "column": 6
                                          },
                                          "end": {
                                            "row": 4,
                                            "column": 11
                                          },
                                          "text": "const"
                                        },
                                        {
                                          "type": "variable_declarator",
                                          "start": {
                                            "row": 4,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 4,
                                            "column": 67
                                          },
                                          "text": "rootMargin = `${marginTop}px 0px ${marginBottom}px 0px`",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 4,
                                                "column": 12
                                              },
                                              "end": {
                                                "row": 4,
                                                "column": 22
                                              },
                                              "text": "rootMargin"
                                            },
                                            {
                                              "type": "=",
                                              "start": {
                                                "row": 4,
                                                "column": 23
                                              },
                                              "end": {
                                                "row": 4,
                                                "column": 24
                                              },
                                              "text": "="
                                            },
                                            {
                                              "type": "template_string",
                                              "start": {
                                                "row": 4,
                                                "column": 25
                                              },
                                              "end": {
                                                "row": 4,
                                                "column": 67
                                              },
                                              "text": "`${marginTop}px 0px ${marginBottom}px 0px`",
                                              "children": [
                                                {
                                                  "type": "`",
                                                  "start": {
                                                    "row": 4,
                                                    "column": 25
                                                  },
                                                  "end": {
                                                    "row": 4,
                                                    "column": 26
                                                  },
                                                  "text": "`"
                                                },
                                                {
                                                  "type": "template_substitution",
                                                  "start": {
                                                    "row": 4,
                                                    "column": 26
                                                  },
                                                  "end": {
                                                    "row": 4,
                                                    "column": 38
                                                  },
                                                  "text": "${marginTop}",
                                                  "children": [
                                                    {
                                                      "type": "${",
                                                      "start": {
                                                        "row": 4,
                                                        "column": 26
                                                      },
                                                      "end": {
                                                        "row": 4,
                                                        "column": 28
                                                      },
                                                      "text": "${"
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 4,
                                                        "column": 28
                                                      },
                                                      "end": {
                                                        "row": 4,
                                                        "column": 37
                                                      },
                                                      "text": "marginTop"
                                                    },
                                                    {
                                                      "type": "}",
                                                      "start": {
                                                        "row": 4,
                                                        "column": 37
                                                      },
                                                      "end": {
                                                        "row": 4,
                                                        "column": 38
                                                      },
                                                      "text": "}"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "template_substitution",
                                                  "start": {
                                                    "row": 4,
                                                    "column": 45
                                                  },
                                                  "end": {
                                                    "row": 4,
                                                    "column": 60
                                                  },
                                                  "text": "${marginBottom}",
                                                  "children": [
                                                    {
                                                      "type": "${",
                                                      "start": {
                                                        "row": 4,
                                                        "column": 45
                                                      },
                                                      "end": {
                                                        "row": 4,
                                                        "column": 47
                                                      },
                                                      "text": "${"
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 4,
                                                        "column": 47
                                                      },
                                                      "end": {
                                                        "row": 4,
                                                        "column": 59
                                                      },
                                                      "text": "marginBottom"
                                                    },
                                                    {
                                                      "type": "}",
                                                      "start": {
                                                        "row": 4,
                                                        "column": 59
                                                      },
                                                      "end": {
                                                        "row": 4,
                                                        "column": 60
                                                      },
                                                      "text": "}"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "`",
                                                  "start": {
                                                    "row": 4,
                                                    "column": 66
                                                  },
                                                  "end": {
                                                    "row": 4,
                                                    "column": 67
                                                  },
                                                  "text": "`"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start": {
                                            "row": 4,
                                            "column": 67
                                          },
                                          "end": {
                                            "row": 4,
                                            "column": 68
                                          },
                                          "text": ";"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "lexical_declaration",
                                      "start": {
                                        "row": 5,
                                        "column": 6
                                      },
                                      "end": {
                                        "row": 5,
                                        "column": 61
                                      },
                                      "text": "const threshold = createThreshold(stepOffsetHeight[i]);",
                                      "children": [
                                        {
                                          "type": "const",
                                          "start": {
                                            "row": 5,
                                            "column": 6
                                          },
                                          "end": {
                                            "row": 5,
                                            "column": 11
                                          },
                                          "text": "const"
                                        },
                                        {
                                          "type": "variable_declarator",
                                          "start": {
                                            "row": 5,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 5,
                                            "column": 60
                                          },
                                          "text": "threshold = createThreshold(stepOffsetHeight[i])",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 5,
                                                "column": 12
                                              },
                                              "end": {
                                                "row": 5,
                                                "column": 21
                                              },
                                              "text": "threshold"
                                            },
                                            {
                                              "type": "=",
                                              "start": {
                                                "row": 5,
                                                "column": 22
                                              },
                                              "end": {
                                                "row": 5,
                                                "column": 23
                                              },
                                              "text": "="
                                            },
                                            {
                                              "type": "call_expression",
                                              "start": {
                                                "row": 5,
                                                "column": 24
                                              },
                                              "end": {
                                                "row": 5,
                                                "column": 60
                                              },
                                              "text": "createThreshold(stepOffsetHeight[i])",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 5,
                                                    "column": 24
                                                  },
                                                  "end": {
                                                    "row": 5,
                                                    "column": 39
                                                  },
                                                  "text": "createThreshold"
                                                },
                                                {
                                                  "type": "arguments",
                                                  "start": {
                                                    "row": 5,
                                                    "column": 39
                                                  },
                                                  "end": {
                                                    "row": 5,
                                                    "column": 60
                                                  },
                                                  "text": "(stepOffsetHeight[i])",
                                                  "children": [
                                                    {
                                                      "type": "(",
                                                      "start": {
                                                        "row": 5,
                                                        "column": 39
                                                      },
                                                      "end": {
                                                        "row": 5,
                                                        "column": 40
                                                      },
                                                      "text": "("
                                                    },
                                                    {
                                                      "type": "subscript_expression",
                                                      "start": {
                                                        "row": 5,
                                                        "column": 40
                                                      },
                                                      "end": {
                                                        "row": 5,
                                                        "column": 59
                                                      },
                                                      "text": "stepOffsetHeight[i]",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 5,
                                                            "column": 40
                                                          },
                                                          "end": {
                                                            "row": 5,
                                                            "column": 56
                                                          },
                                                          "text": "stepOffsetHeight"
                                                        },
                                                        {
                                                          "type": "[",
                                                          "start": {
                                                            "row": 5,
                                                            "column": 56
                                                          },
                                                          "end": {
                                                            "row": 5,
                                                            "column": 57
                                                          },
                                                          "text": "["
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 5,
                                                            "column": 57
                                                          },
                                                          "end": {
                                                            "row": 5,
                                                            "column": 58
                                                          },
                                                          "text": "i"
                                                        },
                                                        {
                                                          "type": "]",
                                                          "start": {
                                                            "row": 5,
                                                            "column": 58
                                                          },
                                                          "end": {
                                                            "row": 5,
                                                            "column": 59
                                                          },
                                                          "text": "]"
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ")",
                                                      "start": {
                                                        "row": 5,
                                                        "column": 59
                                                      },
                                                      "end": {
                                                        "row": 5,
                                                        "column": 60
                                                      },
                                                      "text": ")"
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start": {
                                            "row": 5,
                                            "column": 60
                                          },
                                          "end": {
                                            "row": 5,
                                            "column": 61
                                          },
                                          "text": ";"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "lexical_declaration",
                                      "start": {
                                        "row": 6,
                                        "column": 6
                                      },
                                      "end": {
                                        "row": 6,
                                        "column": 48
                                      },
                                      "text": "const options = { rootMargin, threshold };",
                                      "children": [
                                        {
                                          "type": "const",
                                          "start": {
                                            "row": 6,
                                            "column": 6
                                          },
                                          "end": {
                                            "row": 6,
                                            "column": 11
                                          },
                                          "text": "const"
                                        },
                                        {
                                          "type": "variable_declarator",
                                          "start": {
                                            "row": 6,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 6,
                                            "column": 47
                                          },
                                          "text": "options = { rootMargin, threshold }",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 6,
                                                "column": 12
                                              },
                                              "end": {
                                                "row": 6,
                                                "column": 19
                                              },
                                              "text": "options"
                                            },
                                            {
                                              "type": "=",
                                              "start": {
                                                "row": 6,
                                                "column": 20
                                              },
                                              "end": {
                                                "row": 6,
                                                "column": 21
                                              },
                                              "text": "="
                                            },
                                            {
                                              "type": "object",
                                              "start": {
                                                "row": 6,
                                                "column": 22
                                              },
                                              "end": {
                                                "row": 6,
                                                "column": 47
                                              },
                                              "text": "{ rootMargin, threshold }",
                                              "children": [
                                                {
                                                  "type": "{",
                                                  "start": {
                                                    "row": 6,
                                                    "column": 22
                                                  },
                                                  "end": {
                                                    "row": 6,
                                                    "column": 23
                                                  },
                                                  "text": "{"
                                                },
                                                {
                                                  "type": "shorthand_property_identifier",
                                                  "start": {
                                                    "row": 6,
                                                    "column": 24
                                                  },
                                                  "end": {
                                                    "row": 6,
                                                    "column": 34
                                                  },
                                                  "text": "rootMargin"
                                                },
                                                {
                                                  "type": ",",
                                                  "start": {
                                                    "row": 6,
                                                    "column": 34
                                                  },
                                                  "end": {
                                                    "row": 6,
                                                    "column": 35
                                                  },
                                                  "text": ","
                                                },
                                                {
                                                  "type": "shorthand_property_identifier",
                                                  "start": {
                                                    "row": 6,
                                                    "column": 36
                                                  },
                                                  "end": {
                                                    "row": 6,
                                                    "column": 45
                                                  },
                                                  "text": "threshold"
                                                },
                                                {
                                                  "type": "}",
                                                  "start": {
                                                    "row": 6,
                                                    "column": 46
                                                  },
                                                  "end": {
                                                    "row": 6,
                                                    "column": 47
                                                  },
                                                  "text": "}"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start": {
                                            "row": 6,
                                            "column": 47
                                          },
                                          "end": {
                                            "row": 6,
                                            "column": 48
                                          },
                                          "text": ";"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "comment",
                                      "start": {
                                        "row": 7,
                                        "column": 6
                                      },
                                      "end": {
                                        "row": 7,
                                        "column": 30
                                      },
                                      "text": "// console.log(options);"
                                    },
                                    {
                                      "type": "lexical_declaration",
                                      "start": {
                                        "row": 8,
                                        "column": 6
                                      },
                                      "end": {
                                        "row": 8,
                                        "column": 75
                                      },
                                      "text": "const obs = new IntersectionObserver(intersectStepProgress, options);",
                                      "children": [
                                        {
                                          "type": "const",
                                          "start": {
                                            "row": 8,
                                            "column": 6
                                          },
                                          "end": {
                                            "row": 8,
                                            "column": 11
                                          },
                                          "text": "const"
                                        },
                                        {
                                          "type": "variable_declarator",
                                          "start": {
                                            "row": 8,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 8,
                                            "column": 74
                                          },
                                          "text": "obs = new IntersectionObserver(intersectStepProgress, options)",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 8,
                                                "column": 12
                                              },
                                              "end": {
                                                "row": 8,
                                                "column": 15
                                              },
                                              "text": "obs"
                                            },
                                            {
                                              "type": "=",
                                              "start": {
                                                "row": 8,
                                                "column": 16
                                              },
                                              "end": {
                                                "row": 8,
                                                "column": 17
                                              },
                                              "text": "="
                                            },
                                            {
                                              "type": "new_expression",
                                              "start": {
                                                "row": 8,
                                                "column": 18
                                              },
                                              "end": {
                                                "row": 8,
                                                "column": 74
                                              },
                                              "text": "new IntersectionObserver(intersectStepProgress, options)",
                                              "children": [
                                                {
                                                  "type": "new",
                                                  "start": {
                                                    "row": 8,
                                                    "column": 18
                                                  },
                                                  "end": {
                                                    "row": 8,
                                                    "column": 21
                                                  },
                                                  "text": "new"
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 8,
                                                    "column": 22
                                                  },
                                                  "end": {
                                                    "row": 8,
                                                    "column": 42
                                                  },
                                                  "text": "IntersectionObserver"
                                                },
                                                {
                                                  "type": "arguments",
                                                  "start": {
                                                    "row": 8,
                                                    "column": 42
                                                  },
                                                  "end": {
                                                    "row": 8,
                                                    "column": 74
                                                  },
                                                  "text": "(intersectStepProgress, options)",
                                                  "children": [
                                                    {
                                                      "type": "(",
                                                      "start": {
                                                        "row": 8,
                                                        "column": 42
                                                      },
                                                      "end": {
                                                        "row": 8,
                                                        "column": 43
                                                      },
                                                      "text": "("
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 8,
                                                        "column": 43
                                                      },
                                                      "end": {
                                                        "row": 8,
                                                        "column": 64
                                                      },
                                                      "text": "intersectStepProgress"
                                                    },
                                                    {
                                                      "type": ",",
                                                      "start": {
                                                        "row": 8,
                                                        "column": 64
                                                      },
                                                      "end": {
                                                        "row": 8,
                                                        "column": 65
                                                      },
                                                      "text": ","
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 8,
                                                        "column": 66
                                                      },
                                                      "end": {
                                                        "row": 8,
                                                        "column": 73
                                                      },
                                                      "text": "options"
                                                    },
                                                    {
                                                      "type": ")",
                                                      "start": {
                                                        "row": 8,
                                                        "column": 73
                                                      },
                                                      "end": {
                                                        "row": 8,
                                                        "column": 74
                                                      },
                                                      "text": ")"
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start": {
                                            "row": 8,
                                            "column": 74
                                          },
                                          "end": {
                                            "row": 8,
                                            "column": 75
                                          },
                                          "text": ";"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start": {
                                        "row": 9,
                                        "column": 6
                                      },
                                      "end": {
                                        "row": 9,
                                        "column": 22
                                      },
                                      "text": "obs.observe(el);",
                                      "children": [
                                        {
                                          "type": "call_expression",
                                          "start": {
                                            "row": 9,
                                            "column": 6
                                          },
                                          "end": {
                                            "row": 9,
                                            "column": 21
                                          },
                                          "text": "obs.observe(el)",
                                          "children": [
                                            {
                                              "type": "member_expression",
                                              "start": {
                                                "row": 9,
                                                "column": 6
                                              },
                                              "end": {
                                                "row": 9,
                                                "column": 17
                                              },
                                              "text": "obs.observe",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 9,
                                                    "column": 6
                                                  },
                                                  "end": {
                                                    "row": 9,
                                                    "column": 9
                                                  },
                                                  "text": "obs"
                                                },
                                                {
                                                  "type": ".",
                                                  "start": {
                                                    "row": 9,
                                                    "column": 9
                                                  },
                                                  "end": {
                                                    "row": 9,
                                                    "column": 10
                                                  },
                                                  "text": "."
                                                },
                                                {
                                                  "type": "property_identifier",
                                                  "start": {
                                                    "row": 9,
                                                    "column": 10
                                                  },
                                                  "end": {
                                                    "row": 9,
                                                    "column": 17
                                                  },
                                                  "text": "observe"
                                                }
                                              ]
                                            },
                                            {
                                              "type": "arguments",
                                              "start": {
                                                "row": 9,
                                                "column": 17
                                              },
                                              "end": {
                                                "row": 9,
                                                "column": 21
                                              },
                                              "text": "(el)",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 9,
                                                    "column": 17
                                                  },
                                                  "end": {
                                                    "row": 9,
                                                    "column": 18
                                                  },
                                                  "text": "("
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 9,
                                                    "column": 18
                                                  },
                                                  "end": {
                                                    "row": 9,
                                                    "column": 20
                                                  },
                                                  "text": "el"
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 9,
                                                    "column": 20
                                                  },
                                                  "end": {
                                                    "row": 9,
                                                    "column": 21
                                                  },
                                                  "text": ")"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start": {
                                            "row": 9,
                                            "column": 21
                                          },
                                          "end": {
                                            "row": 9,
                                            "column": 22
                                          },
                                          "text": ";"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "return_statement",
                                      "start": {
                                        "row": 10,
                                        "column": 6
                                      },
                                      "end": {
                                        "row": 10,
                                        "column": 17
                                      },
                                      "text": "return obs;",
                                      "children": [
                                        {
                                          "type": "return",
                                          "start": {
                                            "row": 10,
                                            "column": 6
                                          },
                                          "end": {
                                            "row": 10,
                                            "column": 12
                                          },
                                          "text": "return"
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 10,
                                            "column": 13
                                          },
                                          "end": {
                                            "row": 10,
                                            "column": 16
                                          },
                                          "text": "obs"
                                        },
                                        {
                                          "type": ";",
                                          "start": {
                                            "row": 10,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 10,
                                            "column": 17
                                          },
                                          "text": ";"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start": {
                                        "row": 11,
                                        "column": 4
                                      },
                                      "end": {
                                        "row": 11,
                                        "column": 5
                                      },
                                      "text": "}"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 11,
                                "column": 5
                              },
                              "end": {
                                "row": 11,
                                "column": 6
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 11,
                    "column": 6
                  },
                  "end": {
                    "row": 11,
                    "column": 7
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "}",
              "start": {
                "row": 12,
                "column": 2
              },
              "end": {
                "row": 12,
                "column": 3
              },
              "text": "}"
            }
          ]
        }
      ]
    }
  ]
}