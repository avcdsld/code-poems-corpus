{
  "type": "program",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 17,
    "column": 3
  },
  "text": "function onMessage(obj) {\n    var id = obj.id;\n    if (!self._matchesPrefix(id)) {\n      debug('discarding unscoped message %s', id);\n      return;\n    }\n    var cb = self._registry.get(id);\n    if (cb) {\n      process.nextTick(function () {\n        debug('received message %s', id);\n        // Ensure that the initial callback gets called asynchronously, even\n        // for completely synchronous transports (otherwise the number of\n        // pending requests will sometimes be inconsistent between stateful and\n        // stateless transports).\n        cb(null, Buffer.concat(obj.payload), self._adapter);\n      });\n    }\n  }",
  "children": [
    {
      "type": "function_declaration",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 17,
        "column": 3
      },
      "text": "function onMessage(obj) {\n    var id = obj.id;\n    if (!self._matchesPrefix(id)) {\n      debug('discarding unscoped message %s', id);\n      return;\n    }\n    var cb = self._registry.get(id);\n    if (cb) {\n      process.nextTick(function () {\n        debug('received message %s', id);\n        // Ensure that the initial callback gets called asynchronously, even\n        // for completely synchronous transports (otherwise the number of\n        // pending requests will sometimes be inconsistent between stateful and\n        // stateless transports).\n        cb(null, Buffer.concat(obj.payload), self._adapter);\n      });\n    }\n  }",
      "children": [
        {
          "type": "function",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 8
          },
          "text": "function"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 9
          },
          "end": {
            "row": 0,
            "column": 18
          },
          "text": "onMessage"
        },
        {
          "type": "formal_parameters",
          "start": {
            "row": 0,
            "column": 18
          },
          "end": {
            "row": 0,
            "column": 23
          },
          "text": "(obj)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 18
              },
              "end": {
                "row": 0,
                "column": 19
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 19
              },
              "end": {
                "row": 0,
                "column": 22
              },
              "text": "obj"
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 22
              },
              "end": {
                "row": 0,
                "column": 23
              },
              "text": ")"
            }
          ]
        },
        {
          "type": "statement_block",
          "start": {
            "row": 0,
            "column": 24
          },
          "end": {
            "row": 17,
            "column": 3
          },
          "text": "{\n    var id = obj.id;\n    if (!self._matchesPrefix(id)) {\n      debug('discarding unscoped message %s', id);\n      return;\n    }\n    var cb = self._registry.get(id);\n    if (cb) {\n      process.nextTick(function () {\n        debug('received message %s', id);\n        // Ensure that the initial callback gets called asynchronously, even\n        // for completely synchronous transports (otherwise the number of\n        // pending requests will sometimes be inconsistent between stateful and\n        // stateless transports).\n        cb(null, Buffer.concat(obj.payload), self._adapter);\n      });\n    }\n  }",
          "children": [
            {
              "type": "{",
              "start": {
                "row": 0,
                "column": 24
              },
              "end": {
                "row": 0,
                "column": 25
              },
              "text": "{"
            },
            {
              "type": "variable_declaration",
              "start": {
                "row": 1,
                "column": 4
              },
              "end": {
                "row": 1,
                "column": 20
              },
              "text": "var id = obj.id;",
              "children": [
                {
                  "type": "var",
                  "start": {
                    "row": 1,
                    "column": 4
                  },
                  "end": {
                    "row": 1,
                    "column": 7
                  },
                  "text": "var"
                },
                {
                  "type": "variable_declarator",
                  "start": {
                    "row": 1,
                    "column": 8
                  },
                  "end": {
                    "row": 1,
                    "column": 19
                  },
                  "text": "id = obj.id",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 1,
                        "column": 8
                      },
                      "end": {
                        "row": 1,
                        "column": 10
                      },
                      "text": "id"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 1,
                        "column": 11
                      },
                      "end": {
                        "row": 1,
                        "column": 12
                      },
                      "text": "="
                    },
                    {
                      "type": "member_expression",
                      "start": {
                        "row": 1,
                        "column": 13
                      },
                      "end": {
                        "row": 1,
                        "column": 19
                      },
                      "text": "obj.id",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 1,
                            "column": 13
                          },
                          "end": {
                            "row": 1,
                            "column": 16
                          },
                          "text": "obj"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 1,
                            "column": 16
                          },
                          "end": {
                            "row": 1,
                            "column": 17
                          },
                          "text": "."
                        },
                        {
                          "type": "property_identifier",
                          "start": {
                            "row": 1,
                            "column": 17
                          },
                          "end": {
                            "row": 1,
                            "column": 19
                          },
                          "text": "id"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 1,
                    "column": 19
                  },
                  "end": {
                    "row": 1,
                    "column": 20
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 2,
                "column": 4
              },
              "end": {
                "row": 5,
                "column": 5
              },
              "text": "if (!self._matchesPrefix(id)) {\n      debug('discarding unscoped message %s', id);\n      return;\n    }",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 2,
                    "column": 4
                  },
                  "end": {
                    "row": 2,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "parenthesized_expression",
                  "start": {
                    "row": 2,
                    "column": 7
                  },
                  "end": {
                    "row": 2,
                    "column": 33
                  },
                  "text": "(!self._matchesPrefix(id))",
                  "children": [
                    {
                      "type": "(",
                      "start": {
                        "row": 2,
                        "column": 7
                      },
                      "end": {
                        "row": 2,
                        "column": 8
                      },
                      "text": "("
                    },
                    {
                      "type": "unary_expression",
                      "start": {
                        "row": 2,
                        "column": 8
                      },
                      "end": {
                        "row": 2,
                        "column": 32
                      },
                      "text": "!self._matchesPrefix(id)",
                      "children": [
                        {
                          "type": "!",
                          "start": {
                            "row": 2,
                            "column": 8
                          },
                          "end": {
                            "row": 2,
                            "column": 9
                          },
                          "text": "!"
                        },
                        {
                          "type": "call_expression",
                          "start": {
                            "row": 2,
                            "column": 9
                          },
                          "end": {
                            "row": 2,
                            "column": 32
                          },
                          "text": "self._matchesPrefix(id)",
                          "children": [
                            {
                              "type": "member_expression",
                              "start": {
                                "row": 2,
                                "column": 9
                              },
                              "end": {
                                "row": 2,
                                "column": 28
                              },
                              "text": "self._matchesPrefix",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 2,
                                    "column": 9
                                  },
                                  "end": {
                                    "row": 2,
                                    "column": 13
                                  },
                                  "text": "self"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 2,
                                    "column": 13
                                  },
                                  "end": {
                                    "row": 2,
                                    "column": 14
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "property_identifier",
                                  "start": {
                                    "row": 2,
                                    "column": 14
                                  },
                                  "end": {
                                    "row": 2,
                                    "column": 28
                                  },
                                  "text": "_matchesPrefix"
                                }
                              ]
                            },
                            {
                              "type": "arguments",
                              "start": {
                                "row": 2,
                                "column": 28
                              },
                              "end": {
                                "row": 2,
                                "column": 32
                              },
                              "text": "(id)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 2,
                                    "column": 28
                                  },
                                  "end": {
                                    "row": 2,
                                    "column": 29
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 2,
                                    "column": 29
                                  },
                                  "end": {
                                    "row": 2,
                                    "column": 31
                                  },
                                  "text": "id"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 2,
                                    "column": 31
                                  },
                                  "end": {
                                    "row": 2,
                                    "column": 32
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start": {
                        "row": 2,
                        "column": 32
                      },
                      "end": {
                        "row": 2,
                        "column": 33
                      },
                      "text": ")"
                    }
                  ]
                },
                {
                  "type": "statement_block",
                  "start": {
                    "row": 2,
                    "column": 34
                  },
                  "end": {
                    "row": 5,
                    "column": 5
                  },
                  "text": "{\n      debug('discarding unscoped message %s', id);\n      return;\n    }",
                  "children": [
                    {
                      "type": "{",
                      "start": {
                        "row": 2,
                        "column": 34
                      },
                      "end": {
                        "row": 2,
                        "column": 35
                      },
                      "text": "{"
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 3,
                        "column": 6
                      },
                      "end": {
                        "row": 3,
                        "column": 50
                      },
                      "text": "debug('discarding unscoped message %s', id);",
                      "children": [
                        {
                          "type": "call_expression",
                          "start": {
                            "row": 3,
                            "column": 6
                          },
                          "end": {
                            "row": 3,
                            "column": 49
                          },
                          "text": "debug('discarding unscoped message %s', id)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 3,
                                "column": 6
                              },
                              "end": {
                                "row": 3,
                                "column": 11
                              },
                              "text": "debug"
                            },
                            {
                              "type": "arguments",
                              "start": {
                                "row": 3,
                                "column": 11
                              },
                              "end": {
                                "row": 3,
                                "column": 49
                              },
                              "text": "('discarding unscoped message %s', id)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 3,
                                    "column": 11
                                  },
                                  "end": {
                                    "row": 3,
                                    "column": 12
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "string",
                                  "start": {
                                    "row": 3,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 3,
                                    "column": 44
                                  },
                                  "text": "'discarding unscoped message %s'",
                                  "children": [
                                    {
                                      "type": "'",
                                      "start": {
                                        "row": 3,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 3,
                                        "column": 13
                                      },
                                      "text": "'"
                                    },
                                    {
                                      "type": "string_fragment",
                                      "start": {
                                        "row": 3,
                                        "column": 13
                                      },
                                      "end": {
                                        "row": 3,
                                        "column": 43
                                      },
                                      "text": "discarding unscoped message %s"
                                    },
                                    {
                                      "type": "'",
                                      "start": {
                                        "row": 3,
                                        "column": 43
                                      },
                                      "end": {
                                        "row": 3,
                                        "column": 44
                                      },
                                      "text": "'"
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 3,
                                    "column": 44
                                  },
                                  "end": {
                                    "row": 3,
                                    "column": 45
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 3,
                                    "column": 46
                                  },
                                  "end": {
                                    "row": 3,
                                    "column": 48
                                  },
                                  "text": "id"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 3,
                                    "column": 48
                                  },
                                  "end": {
                                    "row": 3,
                                    "column": 49
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start": {
                            "row": 3,
                            "column": 49
                          },
                          "end": {
                            "row": 3,
                            "column": 50
                          },
                          "text": ";"
                        }
                      ]
                    },
                    {
                      "type": "return_statement",
                      "start": {
                        "row": 4,
                        "column": 6
                      },
                      "end": {
                        "row": 4,
                        "column": 13
                      },
                      "text": "return;",
                      "children": [
                        {
                          "type": "return",
                          "start": {
                            "row": 4,
                            "column": 6
                          },
                          "end": {
                            "row": 4,
                            "column": 12
                          },
                          "text": "return"
                        },
                        {
                          "type": ";",
                          "start": {
                            "row": 4,
                            "column": 12
                          },
                          "end": {
                            "row": 4,
                            "column": 13
                          },
                          "text": ";"
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start": {
                        "row": 5,
                        "column": 4
                      },
                      "end": {
                        "row": 5,
                        "column": 5
                      },
                      "text": "}"
                    }
                  ]
                }
              ]
            },
            {
              "type": "variable_declaration",
              "start": {
                "row": 6,
                "column": 4
              },
              "end": {
                "row": 6,
                "column": 36
              },
              "text": "var cb = self._registry.get(id);",
              "children": [
                {
                  "type": "var",
                  "start": {
                    "row": 6,
                    "column": 4
                  },
                  "end": {
                    "row": 6,
                    "column": 7
                  },
                  "text": "var"
                },
                {
                  "type": "variable_declarator",
                  "start": {
                    "row": 6,
                    "column": 8
                  },
                  "end": {
                    "row": 6,
                    "column": 35
                  },
                  "text": "cb = self._registry.get(id)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 6,
                        "column": 8
                      },
                      "end": {
                        "row": 6,
                        "column": 10
                      },
                      "text": "cb"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 6,
                        "column": 11
                      },
                      "end": {
                        "row": 6,
                        "column": 12
                      },
                      "text": "="
                    },
                    {
                      "type": "call_expression",
                      "start": {
                        "row": 6,
                        "column": 13
                      },
                      "end": {
                        "row": 6,
                        "column": 35
                      },
                      "text": "self._registry.get(id)",
                      "children": [
                        {
                          "type": "member_expression",
                          "start": {
                            "row": 6,
                            "column": 13
                          },
                          "end": {
                            "row": 6,
                            "column": 31
                          },
                          "text": "self._registry.get",
                          "children": [
                            {
                              "type": "member_expression",
                              "start": {
                                "row": 6,
                                "column": 13
                              },
                              "end": {
                                "row": 6,
                                "column": 27
                              },
                              "text": "self._registry",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 6,
                                    "column": 13
                                  },
                                  "end": {
                                    "row": 6,
                                    "column": 17
                                  },
                                  "text": "self"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 6,
                                    "column": 17
                                  },
                                  "end": {
                                    "row": 6,
                                    "column": 18
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "property_identifier",
                                  "start": {
                                    "row": 6,
                                    "column": 18
                                  },
                                  "end": {
                                    "row": 6,
                                    "column": 27
                                  },
                                  "text": "_registry"
                                }
                              ]
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 6,
                                "column": 27
                              },
                              "end": {
                                "row": 6,
                                "column": 28
                              },
                              "text": "."
                            },
                            {
                              "type": "property_identifier",
                              "start": {
                                "row": 6,
                                "column": 28
                              },
                              "end": {
                                "row": 6,
                                "column": 31
                              },
                              "text": "get"
                            }
                          ]
                        },
                        {
                          "type": "arguments",
                          "start": {
                            "row": 6,
                            "column": 31
                          },
                          "end": {
                            "row": 6,
                            "column": 35
                          },
                          "text": "(id)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 6,
                                "column": 31
                              },
                              "end": {
                                "row": 6,
                                "column": 32
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 6,
                                "column": 32
                              },
                              "end": {
                                "row": 6,
                                "column": 34
                              },
                              "text": "id"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 6,
                                "column": 34
                              },
                              "end": {
                                "row": 6,
                                "column": 35
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 6,
                    "column": 35
                  },
                  "end": {
                    "row": 6,
                    "column": 36
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 7,
                "column": 4
              },
              "end": {
                "row": 16,
                "column": 5
              },
              "text": "if (cb) {\n      process.nextTick(function () {\n        debug('received message %s', id);\n        // Ensure that the initial callback gets called asynchronously, even\n        // for completely synchronous transports (otherwise the number of\n        // pending requests will sometimes be inconsistent between stateful and\n        // stateless transports).\n        cb(null, Buffer.concat(obj.payload), self._adapter);\n      });\n    }",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 7,
                    "column": 4
                  },
                  "end": {
                    "row": 7,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "parenthesized_expression",
                  "start": {
                    "row": 7,
                    "column": 7
                  },
                  "end": {
                    "row": 7,
                    "column": 11
                  },
                  "text": "(cb)",
                  "children": [
                    {
                      "type": "(",
                      "start": {
                        "row": 7,
                        "column": 7
                      },
                      "end": {
                        "row": 7,
                        "column": 8
                      },
                      "text": "("
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 7,
                        "column": 8
                      },
                      "end": {
                        "row": 7,
                        "column": 10
                      },
                      "text": "cb"
                    },
                    {
                      "type": ")",
                      "start": {
                        "row": 7,
                        "column": 10
                      },
                      "end": {
                        "row": 7,
                        "column": 11
                      },
                      "text": ")"
                    }
                  ]
                },
                {
                  "type": "statement_block",
                  "start": {
                    "row": 7,
                    "column": 12
                  },
                  "end": {
                    "row": 16,
                    "column": 5
                  },
                  "text": "{\n      process.nextTick(function () {\n        debug('received message %s', id);\n        // Ensure that the initial callback gets called asynchronously, even\n        // for completely synchronous transports (otherwise the number of\n        // pending requests will sometimes be inconsistent between stateful and\n        // stateless transports).\n        cb(null, Buffer.concat(obj.payload), self._adapter);\n      });\n    }",
                  "children": [
                    {
                      "type": "{",
                      "start": {
                        "row": 7,
                        "column": 12
                      },
                      "end": {
                        "row": 7,
                        "column": 13
                      },
                      "text": "{"
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 8,
                        "column": 6
                      },
                      "end": {
                        "row": 15,
                        "column": 9
                      },
                      "text": "process.nextTick(function () {\n        debug('received message %s', id);\n        // Ensure that the initial callback gets called asynchronously, even\n        // for completely synchronous transports (otherwise the number of\n        // pending requests will sometimes be inconsistent between stateful and\n        // stateless transports).\n        cb(null, Buffer.concat(obj.payload), self._adapter);\n      });",
                      "children": [
                        {
                          "type": "call_expression",
                          "start": {
                            "row": 8,
                            "column": 6
                          },
                          "end": {
                            "row": 15,
                            "column": 8
                          },
                          "text": "process.nextTick(function () {\n        debug('received message %s', id);\n        // Ensure that the initial callback gets called asynchronously, even\n        // for completely synchronous transports (otherwise the number of\n        // pending requests will sometimes be inconsistent between stateful and\n        // stateless transports).\n        cb(null, Buffer.concat(obj.payload), self._adapter);\n      })",
                          "children": [
                            {
                              "type": "member_expression",
                              "start": {
                                "row": 8,
                                "column": 6
                              },
                              "end": {
                                "row": 8,
                                "column": 22
                              },
                              "text": "process.nextTick",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 8,
                                    "column": 6
                                  },
                                  "end": {
                                    "row": 8,
                                    "column": 13
                                  },
                                  "text": "process"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 8,
                                    "column": 13
                                  },
                                  "end": {
                                    "row": 8,
                                    "column": 14
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "property_identifier",
                                  "start": {
                                    "row": 8,
                                    "column": 14
                                  },
                                  "end": {
                                    "row": 8,
                                    "column": 22
                                  },
                                  "text": "nextTick"
                                }
                              ]
                            },
                            {
                              "type": "arguments",
                              "start": {
                                "row": 8,
                                "column": 22
                              },
                              "end": {
                                "row": 15,
                                "column": 8
                              },
                              "text": "(function () {\n        debug('received message %s', id);\n        // Ensure that the initial callback gets called asynchronously, even\n        // for completely synchronous transports (otherwise the number of\n        // pending requests will sometimes be inconsistent between stateful and\n        // stateless transports).\n        cb(null, Buffer.concat(obj.payload), self._adapter);\n      })",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 8,
                                    "column": 22
                                  },
                                  "end": {
                                    "row": 8,
                                    "column": 23
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "function",
                                  "start": {
                                    "row": 8,
                                    "column": 23
                                  },
                                  "end": {
                                    "row": 15,
                                    "column": 7
                                  },
                                  "text": "function () {\n        debug('received message %s', id);\n        // Ensure that the initial callback gets called asynchronously, even\n        // for completely synchronous transports (otherwise the number of\n        // pending requests will sometimes be inconsistent between stateful and\n        // stateless transports).\n        cb(null, Buffer.concat(obj.payload), self._adapter);\n      }",
                                  "children": [
                                    {
                                      "type": "function",
                                      "start": {
                                        "row": 8,
                                        "column": 23
                                      },
                                      "end": {
                                        "row": 8,
                                        "column": 31
                                      },
                                      "text": "function"
                                    },
                                    {
                                      "type": "formal_parameters",
                                      "start": {
                                        "row": 8,
                                        "column": 32
                                      },
                                      "end": {
                                        "row": 8,
                                        "column": 34
                                      },
                                      "text": "()",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 8,
                                            "column": 32
                                          },
                                          "end": {
                                            "row": 8,
                                            "column": 33
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 8,
                                            "column": 33
                                          },
                                          "end": {
                                            "row": 8,
                                            "column": 34
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "statement_block",
                                      "start": {
                                        "row": 8,
                                        "column": 35
                                      },
                                      "end": {
                                        "row": 15,
                                        "column": 7
                                      },
                                      "text": "{\n        debug('received message %s', id);\n        // Ensure that the initial callback gets called asynchronously, even\n        // for completely synchronous transports (otherwise the number of\n        // pending requests will sometimes be inconsistent between stateful and\n        // stateless transports).\n        cb(null, Buffer.concat(obj.payload), self._adapter);\n      }",
                                      "children": [
                                        {
                                          "type": "{",
                                          "start": {
                                            "row": 8,
                                            "column": 35
                                          },
                                          "end": {
                                            "row": 8,
                                            "column": 36
                                          },
                                          "text": "{"
                                        },
                                        {
                                          "type": "expression_statement",
                                          "start": {
                                            "row": 9,
                                            "column": 8
                                          },
                                          "end": {
                                            "row": 9,
                                            "column": 41
                                          },
                                          "text": "debug('received message %s', id);",
                                          "children": [
                                            {
                                              "type": "call_expression",
                                              "start": {
                                                "row": 9,
                                                "column": 8
                                              },
                                              "end": {
                                                "row": 9,
                                                "column": 40
                                              },
                                              "text": "debug('received message %s', id)",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 9,
                                                    "column": 8
                                                  },
                                                  "end": {
                                                    "row": 9,
                                                    "column": 13
                                                  },
                                                  "text": "debug"
                                                },
                                                {
                                                  "type": "arguments",
                                                  "start": {
                                                    "row": 9,
                                                    "column": 13
                                                  },
                                                  "end": {
                                                    "row": 9,
                                                    "column": 40
                                                  },
                                                  "text": "('received message %s', id)",
                                                  "children": [
                                                    {
                                                      "type": "(",
                                                      "start": {
                                                        "row": 9,
                                                        "column": 13
                                                      },
                                                      "end": {
                                                        "row": 9,
                                                        "column": 14
                                                      },
                                                      "text": "("
                                                    },
                                                    {
                                                      "type": "string",
                                                      "start": {
                                                        "row": 9,
                                                        "column": 14
                                                      },
                                                      "end": {
                                                        "row": 9,
                                                        "column": 35
                                                      },
                                                      "text": "'received message %s'",
                                                      "children": [
                                                        {
                                                          "type": "'",
                                                          "start": {
                                                            "row": 9,
                                                            "column": 14
                                                          },
                                                          "end": {
                                                            "row": 9,
                                                            "column": 15
                                                          },
                                                          "text": "'"
                                                        },
                                                        {
                                                          "type": "string_fragment",
                                                          "start": {
                                                            "row": 9,
                                                            "column": 15
                                                          },
                                                          "end": {
                                                            "row": 9,
                                                            "column": 34
                                                          },
                                                          "text": "received message %s"
                                                        },
                                                        {
                                                          "type": "'",
                                                          "start": {
                                                            "row": 9,
                                                            "column": 34
                                                          },
                                                          "end": {
                                                            "row": 9,
                                                            "column": 35
                                                          },
                                                          "text": "'"
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ",",
                                                      "start": {
                                                        "row": 9,
                                                        "column": 35
                                                      },
                                                      "end": {
                                                        "row": 9,
                                                        "column": 36
                                                      },
                                                      "text": ","
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 9,
                                                        "column": 37
                                                      },
                                                      "end": {
                                                        "row": 9,
                                                        "column": 39
                                                      },
                                                      "text": "id"
                                                    },
                                                    {
                                                      "type": ")",
                                                      "start": {
                                                        "row": 9,
                                                        "column": 39
                                                      },
                                                      "end": {
                                                        "row": 9,
                                                        "column": 40
                                                      },
                                                      "text": ")"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ";",
                                              "start": {
                                                "row": 9,
                                                "column": 40
                                              },
                                              "end": {
                                                "row": 9,
                                                "column": 41
                                              },
                                              "text": ";"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "comment",
                                          "start": {
                                            "row": 10,
                                            "column": 8
                                          },
                                          "end": {
                                            "row": 10,
                                            "column": 76
                                          },
                                          "text": "// Ensure that the initial callback gets called asynchronously, even"
                                        },
                                        {
                                          "type": "comment",
                                          "start": {
                                            "row": 11,
                                            "column": 8
                                          },
                                          "end": {
                                            "row": 11,
                                            "column": 73
                                          },
                                          "text": "// for completely synchronous transports (otherwise the number of"
                                        },
                                        {
                                          "type": "comment",
                                          "start": {
                                            "row": 12,
                                            "column": 8
                                          },
                                          "end": {
                                            "row": 12,
                                            "column": 79
                                          },
                                          "text": "// pending requests will sometimes be inconsistent between stateful and"
                                        },
                                        {
                                          "type": "comment",
                                          "start": {
                                            "row": 13,
                                            "column": 8
                                          },
                                          "end": {
                                            "row": 13,
                                            "column": 33
                                          },
                                          "text": "// stateless transports)."
                                        },
                                        {
                                          "type": "expression_statement",
                                          "start": {
                                            "row": 14,
                                            "column": 8
                                          },
                                          "end": {
                                            "row": 14,
                                            "column": 60
                                          },
                                          "text": "cb(null, Buffer.concat(obj.payload), self._adapter);",
                                          "children": [
                                            {
                                              "type": "call_expression",
                                              "start": {
                                                "row": 14,
                                                "column": 8
                                              },
                                              "end": {
                                                "row": 14,
                                                "column": 59
                                              },
                                              "text": "cb(null, Buffer.concat(obj.payload), self._adapter)",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 14,
                                                    "column": 8
                                                  },
                                                  "end": {
                                                    "row": 14,
                                                    "column": 10
                                                  },
                                                  "text": "cb"
                                                },
                                                {
                                                  "type": "arguments",
                                                  "start": {
                                                    "row": 14,
                                                    "column": 10
                                                  },
                                                  "end": {
                                                    "row": 14,
                                                    "column": 59
                                                  },
                                                  "text": "(null, Buffer.concat(obj.payload), self._adapter)",
                                                  "children": [
                                                    {
                                                      "type": "(",
                                                      "start": {
                                                        "row": 14,
                                                        "column": 10
                                                      },
                                                      "end": {
                                                        "row": 14,
                                                        "column": 11
                                                      },
                                                      "text": "("
                                                    },
                                                    {
                                                      "type": "null",
                                                      "start": {
                                                        "row": 14,
                                                        "column": 11
                                                      },
                                                      "end": {
                                                        "row": 14,
                                                        "column": 15
                                                      },
                                                      "text": "null"
                                                    },
                                                    {
                                                      "type": ",",
                                                      "start": {
                                                        "row": 14,
                                                        "column": 15
                                                      },
                                                      "end": {
                                                        "row": 14,
                                                        "column": 16
                                                      },
                                                      "text": ","
                                                    },
                                                    {
                                                      "type": "call_expression",
                                                      "start": {
                                                        "row": 14,
                                                        "column": 17
                                                      },
                                                      "end": {
                                                        "row": 14,
                                                        "column": 43
                                                      },
                                                      "text": "Buffer.concat(obj.payload)",
                                                      "children": [
                                                        {
                                                          "type": "member_expression",
                                                          "start": {
                                                            "row": 14,
                                                            "column": 17
                                                          },
                                                          "end": {
                                                            "row": 14,
                                                            "column": 30
                                                          },
                                                          "text": "Buffer.concat",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start": {
                                                                "row": 14,
                                                                "column": 17
                                                              },
                                                              "end": {
                                                                "row": 14,
                                                                "column": 23
                                                              },
                                                              "text": "Buffer"
                                                            },
                                                            {
                                                              "type": ".",
                                                              "start": {
                                                                "row": 14,
                                                                "column": 23
                                                              },
                                                              "end": {
                                                                "row": 14,
                                                                "column": 24
                                                              },
                                                              "text": "."
                                                            },
                                                            {
                                                              "type": "property_identifier",
                                                              "start": {
                                                                "row": 14,
                                                                "column": 24
                                                              },
                                                              "end": {
                                                                "row": 14,
                                                                "column": 30
                                                              },
                                                              "text": "concat"
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "arguments",
                                                          "start": {
                                                            "row": 14,
                                                            "column": 30
                                                          },
                                                          "end": {
                                                            "row": 14,
                                                            "column": 43
                                                          },
                                                          "text": "(obj.payload)",
                                                          "children": [
                                                            {
                                                              "type": "(",
                                                              "start": {
                                                                "row": 14,
                                                                "column": 30
                                                              },
                                                              "end": {
                                                                "row": 14,
                                                                "column": 31
                                                              },
                                                              "text": "("
                                                            },
                                                            {
                                                              "type": "member_expression",
                                                              "start": {
                                                                "row": 14,
                                                                "column": 31
                                                              },
                                                              "end": {
                                                                "row": 14,
                                                                "column": 42
                                                              },
                                                              "text": "obj.payload",
                                                              "children": [
                                                                {
                                                                  "type": "identifier",
                                                                  "start": {
                                                                    "row": 14,
                                                                    "column": 31
                                                                  },
                                                                  "end": {
                                                                    "row": 14,
                                                                    "column": 34
                                                                  },
                                                                  "text": "obj"
                                                                },
                                                                {
                                                                  "type": ".",
                                                                  "start": {
                                                                    "row": 14,
                                                                    "column": 34
                                                                  },
                                                                  "end": {
                                                                    "row": 14,
                                                                    "column": 35
                                                                  },
                                                                  "text": "."
                                                                },
                                                                {
                                                                  "type": "property_identifier",
                                                                  "start": {
                                                                    "row": 14,
                                                                    "column": 35
                                                                  },
                                                                  "end": {
                                                                    "row": 14,
                                                                    "column": 42
                                                                  },
                                                                  "text": "payload"
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": ")",
                                                              "start": {
                                                                "row": 14,
                                                                "column": 42
                                                              },
                                                              "end": {
                                                                "row": 14,
                                                                "column": 43
                                                              },
                                                              "text": ")"
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ",",
                                                      "start": {
                                                        "row": 14,
                                                        "column": 43
                                                      },
                                                      "end": {
                                                        "row": 14,
                                                        "column": 44
                                                      },
                                                      "text": ","
                                                    },
                                                    {
                                                      "type": "member_expression",
                                                      "start": {
                                                        "row": 14,
                                                        "column": 45
                                                      },
                                                      "end": {
                                                        "row": 14,
                                                        "column": 58
                                                      },
                                                      "text": "self._adapter",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 14,
                                                            "column": 45
                                                          },
                                                          "end": {
                                                            "row": 14,
                                                            "column": 49
                                                          },
                                                          "text": "self"
                                                        },
                                                        {
                                                          "type": ".",
                                                          "start": {
                                                            "row": 14,
                                                            "column": 49
                                                          },
                                                          "end": {
                                                            "row": 14,
                                                            "column": 50
                                                          },
                                                          "text": "."
                                                        },
                                                        {
                                                          "type": "property_identifier",
                                                          "start": {
                                                            "row": 14,
                                                            "column": 50
                                                          },
                                                          "end": {
                                                            "row": 14,
                                                            "column": 58
                                                          },
                                                          "text": "_adapter"
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ")",
                                                      "start": {
                                                        "row": 14,
                                                        "column": 58
                                                      },
                                                      "end": {
                                                        "row": 14,
                                                        "column": 59
                                                      },
                                                      "text": ")"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ";",
                                              "start": {
                                                "row": 14,
                                                "column": 59
                                              },
                                              "end": {
                                                "row": 14,
                                                "column": 60
                                              },
                                              "text": ";"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "}",
                                          "start": {
                                            "row": 15,
                                            "column": 6
                                          },
                                          "end": {
                                            "row": 15,
                                            "column": 7
                                          },
                                          "text": "}"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 15,
                                    "column": 7
                                  },
                                  "end": {
                                    "row": 15,
                                    "column": 8
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start": {
                            "row": 15,
                            "column": 8
                          },
                          "end": {
                            "row": 15,
                            "column": 9
                          },
                          "text": ";"
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start": {
                        "row": 16,
                        "column": 4
                      },
                      "end": {
                        "row": 16,
                        "column": 5
                      },
                      "text": "}"
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start": {
                "row": 17,
                "column": 2
              },
              "end": {
                "row": 17,
                "column": 3
              },
              "text": "}"
            }
          ]
        }
      ]
    }
  ]
}