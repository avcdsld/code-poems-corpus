{
  "type": "program",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 32,
    "column": 9
  },
  "text": "function checkConsistency(node, checkRedundancy) {\n\n            // We are excluding getters/setters and spread properties as they are considered neither longform nor shorthand.\n            const properties = node.properties.filter(canHaveShorthand);\n\n            // Do we still have properties left after filtering the getters and setters?\n            if (properties.length > 0) {\n                const shorthandProperties = properties.filter(isShorthand);\n\n                /*\n                 * If we do not have an equal number of longform properties as\n                 * shorthand properties, we are using the annotations inconsistently\n                 */\n                if (shorthandProperties.length !== properties.length) {\n\n                    // We have at least 1 shorthand property\n                    if (shorthandProperties.length > 0) {\n                        context.report({ node, message: \"Unexpected mix of shorthand and non-shorthand properties.\" });\n                    } else if (checkRedundancy) {\n\n                        /*\n                         * If all properties of the object contain a method or value with a name matching it's key,\n                         * all the keys are redundant.\n                         */\n                        const canAlwaysUseShorthand = properties.every(isRedundant);\n\n                        if (canAlwaysUseShorthand) {\n                            context.report({ node, message: \"Expected shorthand for all properties.\" });\n                        }\n                    }\n                }\n            }\n        }",
  "children": [
    {
      "type": "function_declaration",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 32,
        "column": 9
      },
      "text": "function checkConsistency(node, checkRedundancy) {\n\n            // We are excluding getters/setters and spread properties as they are considered neither longform nor shorthand.\n            const properties = node.properties.filter(canHaveShorthand);\n\n            // Do we still have properties left after filtering the getters and setters?\n            if (properties.length > 0) {\n                const shorthandProperties = properties.filter(isShorthand);\n\n                /*\n                 * If we do not have an equal number of longform properties as\n                 * shorthand properties, we are using the annotations inconsistently\n                 */\n                if (shorthandProperties.length !== properties.length) {\n\n                    // We have at least 1 shorthand property\n                    if (shorthandProperties.length > 0) {\n                        context.report({ node, message: \"Unexpected mix of shorthand and non-shorthand properties.\" });\n                    } else if (checkRedundancy) {\n\n                        /*\n                         * If all properties of the object contain a method or value with a name matching it's key,\n                         * all the keys are redundant.\n                         */\n                        const canAlwaysUseShorthand = properties.every(isRedundant);\n\n                        if (canAlwaysUseShorthand) {\n                            context.report({ node, message: \"Expected shorthand for all properties.\" });\n                        }\n                    }\n                }\n            }\n        }",
      "children": [
        {
          "type": "function",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 8
          },
          "text": "function"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 9
          },
          "end": {
            "row": 0,
            "column": 25
          },
          "text": "checkConsistency"
        },
        {
          "type": "formal_parameters",
          "start": {
            "row": 0,
            "column": 25
          },
          "end": {
            "row": 0,
            "column": 48
          },
          "text": "(node, checkRedundancy)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 25
              },
              "end": {
                "row": 0,
                "column": 26
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 26
              },
              "end": {
                "row": 0,
                "column": 30
              },
              "text": "node"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 30
              },
              "end": {
                "row": 0,
                "column": 31
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 32
              },
              "end": {
                "row": 0,
                "column": 47
              },
              "text": "checkRedundancy"
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 47
              },
              "end": {
                "row": 0,
                "column": 48
              },
              "text": ")"
            }
          ]
        },
        {
          "type": "statement_block",
          "start": {
            "row": 0,
            "column": 49
          },
          "end": {
            "row": 32,
            "column": 9
          },
          "text": "{\n\n            // We are excluding getters/setters and spread properties as they are considered neither longform nor shorthand.\n            const properties = node.properties.filter(canHaveShorthand);\n\n            // Do we still have properties left after filtering the getters and setters?\n            if (properties.length > 0) {\n                const shorthandProperties = properties.filter(isShorthand);\n\n                /*\n                 * If we do not have an equal number of longform properties as\n                 * shorthand properties, we are using the annotations inconsistently\n                 */\n                if (shorthandProperties.length !== properties.length) {\n\n                    // We have at least 1 shorthand property\n                    if (shorthandProperties.length > 0) {\n                        context.report({ node, message: \"Unexpected mix of shorthand and non-shorthand properties.\" });\n                    } else if (checkRedundancy) {\n\n                        /*\n                         * If all properties of the object contain a method or value with a name matching it's key,\n                         * all the keys are redundant.\n                         */\n                        const canAlwaysUseShorthand = properties.every(isRedundant);\n\n                        if (canAlwaysUseShorthand) {\n                            context.report({ node, message: \"Expected shorthand for all properties.\" });\n                        }\n                    }\n                }\n            }\n        }",
          "children": [
            {
              "type": "{",
              "start": {
                "row": 0,
                "column": 49
              },
              "end": {
                "row": 0,
                "column": 50
              },
              "text": "{"
            },
            {
              "type": "comment",
              "start": {
                "row": 2,
                "column": 12
              },
              "end": {
                "row": 2,
                "column": 124
              },
              "text": "// We are excluding getters/setters and spread properties as they are considered neither longform nor shorthand."
            },
            {
              "type": "lexical_declaration",
              "start": {
                "row": 3,
                "column": 12
              },
              "end": {
                "row": 3,
                "column": 72
              },
              "text": "const properties = node.properties.filter(canHaveShorthand);",
              "children": [
                {
                  "type": "const",
                  "start": {
                    "row": 3,
                    "column": 12
                  },
                  "end": {
                    "row": 3,
                    "column": 17
                  },
                  "text": "const"
                },
                {
                  "type": "variable_declarator",
                  "start": {
                    "row": 3,
                    "column": 18
                  },
                  "end": {
                    "row": 3,
                    "column": 71
                  },
                  "text": "properties = node.properties.filter(canHaveShorthand)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 3,
                        "column": 18
                      },
                      "end": {
                        "row": 3,
                        "column": 28
                      },
                      "text": "properties"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 3,
                        "column": 29
                      },
                      "end": {
                        "row": 3,
                        "column": 30
                      },
                      "text": "="
                    },
                    {
                      "type": "call_expression",
                      "start": {
                        "row": 3,
                        "column": 31
                      },
                      "end": {
                        "row": 3,
                        "column": 71
                      },
                      "text": "node.properties.filter(canHaveShorthand)",
                      "children": [
                        {
                          "type": "member_expression",
                          "start": {
                            "row": 3,
                            "column": 31
                          },
                          "end": {
                            "row": 3,
                            "column": 53
                          },
                          "text": "node.properties.filter",
                          "children": [
                            {
                              "type": "member_expression",
                              "start": {
                                "row": 3,
                                "column": 31
                              },
                              "end": {
                                "row": 3,
                                "column": 46
                              },
                              "text": "node.properties",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 3,
                                    "column": 31
                                  },
                                  "end": {
                                    "row": 3,
                                    "column": 35
                                  },
                                  "text": "node"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 3,
                                    "column": 35
                                  },
                                  "end": {
                                    "row": 3,
                                    "column": 36
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "property_identifier",
                                  "start": {
                                    "row": 3,
                                    "column": 36
                                  },
                                  "end": {
                                    "row": 3,
                                    "column": 46
                                  },
                                  "text": "properties"
                                }
                              ]
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 3,
                                "column": 46
                              },
                              "end": {
                                "row": 3,
                                "column": 47
                              },
                              "text": "."
                            },
                            {
                              "type": "property_identifier",
                              "start": {
                                "row": 3,
                                "column": 47
                              },
                              "end": {
                                "row": 3,
                                "column": 53
                              },
                              "text": "filter"
                            }
                          ]
                        },
                        {
                          "type": "arguments",
                          "start": {
                            "row": 3,
                            "column": 53
                          },
                          "end": {
                            "row": 3,
                            "column": 71
                          },
                          "text": "(canHaveShorthand)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 3,
                                "column": 53
                              },
                              "end": {
                                "row": 3,
                                "column": 54
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 3,
                                "column": 54
                              },
                              "end": {
                                "row": 3,
                                "column": 70
                              },
                              "text": "canHaveShorthand"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 3,
                                "column": 70
                              },
                              "end": {
                                "row": 3,
                                "column": 71
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 3,
                    "column": 71
                  },
                  "end": {
                    "row": 3,
                    "column": 72
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 5,
                "column": 12
              },
              "end": {
                "row": 5,
                "column": 88
              },
              "text": "// Do we still have properties left after filtering the getters and setters?"
            },
            {
              "type": "if_statement",
              "start": {
                "row": 6,
                "column": 12
              },
              "end": {
                "row": 31,
                "column": 13
              },
              "text": "if (properties.length > 0) {\n                const shorthandProperties = properties.filter(isShorthand);\n\n                /*\n                 * If we do not have an equal number of longform properties as\n                 * shorthand properties, we are using the annotations inconsistently\n                 */\n                if (shorthandProperties.length !== properties.length) {\n\n                    // We have at least 1 shorthand property\n                    if (shorthandProperties.length > 0) {\n                        context.report({ node, message: \"Unexpected mix of shorthand and non-shorthand properties.\" });\n                    } else if (checkRedundancy) {\n\n                        /*\n                         * If all properties of the object contain a method or value with a name matching it's key,\n                         * all the keys are redundant.\n                         */\n                        const canAlwaysUseShorthand = properties.every(isRedundant);\n\n                        if (canAlwaysUseShorthand) {\n                            context.report({ node, message: \"Expected shorthand for all properties.\" });\n                        }\n                    }\n                }\n            }",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 6,
                    "column": 12
                  },
                  "end": {
                    "row": 6,
                    "column": 14
                  },
                  "text": "if"
                },
                {
                  "type": "parenthesized_expression",
                  "start": {
                    "row": 6,
                    "column": 15
                  },
                  "end": {
                    "row": 6,
                    "column": 38
                  },
                  "text": "(properties.length > 0)",
                  "children": [
                    {
                      "type": "(",
                      "start": {
                        "row": 6,
                        "column": 15
                      },
                      "end": {
                        "row": 6,
                        "column": 16
                      },
                      "text": "("
                    },
                    {
                      "type": "binary_expression",
                      "start": {
                        "row": 6,
                        "column": 16
                      },
                      "end": {
                        "row": 6,
                        "column": 37
                      },
                      "text": "properties.length > 0",
                      "children": [
                        {
                          "type": "member_expression",
                          "start": {
                            "row": 6,
                            "column": 16
                          },
                          "end": {
                            "row": 6,
                            "column": 33
                          },
                          "text": "properties.length",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 6,
                                "column": 16
                              },
                              "end": {
                                "row": 6,
                                "column": 26
                              },
                              "text": "properties"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 6,
                                "column": 26
                              },
                              "end": {
                                "row": 6,
                                "column": 27
                              },
                              "text": "."
                            },
                            {
                              "type": "property_identifier",
                              "start": {
                                "row": 6,
                                "column": 27
                              },
                              "end": {
                                "row": 6,
                                "column": 33
                              },
                              "text": "length"
                            }
                          ]
                        },
                        {
                          "type": ">",
                          "start": {
                            "row": 6,
                            "column": 34
                          },
                          "end": {
                            "row": 6,
                            "column": 35
                          },
                          "text": ">"
                        },
                        {
                          "type": "number",
                          "start": {
                            "row": 6,
                            "column": 36
                          },
                          "end": {
                            "row": 6,
                            "column": 37
                          },
                          "text": "0"
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start": {
                        "row": 6,
                        "column": 37
                      },
                      "end": {
                        "row": 6,
                        "column": 38
                      },
                      "text": ")"
                    }
                  ]
                },
                {
                  "type": "statement_block",
                  "start": {
                    "row": 6,
                    "column": 39
                  },
                  "end": {
                    "row": 31,
                    "column": 13
                  },
                  "text": "{\n                const shorthandProperties = properties.filter(isShorthand);\n\n                /*\n                 * If we do not have an equal number of longform properties as\n                 * shorthand properties, we are using the annotations inconsistently\n                 */\n                if (shorthandProperties.length !== properties.length) {\n\n                    // We have at least 1 shorthand property\n                    if (shorthandProperties.length > 0) {\n                        context.report({ node, message: \"Unexpected mix of shorthand and non-shorthand properties.\" });\n                    } else if (checkRedundancy) {\n\n                        /*\n                         * If all properties of the object contain a method or value with a name matching it's key,\n                         * all the keys are redundant.\n                         */\n                        const canAlwaysUseShorthand = properties.every(isRedundant);\n\n                        if (canAlwaysUseShorthand) {\n                            context.report({ node, message: \"Expected shorthand for all properties.\" });\n                        }\n                    }\n                }\n            }",
                  "children": [
                    {
                      "type": "{",
                      "start": {
                        "row": 6,
                        "column": 39
                      },
                      "end": {
                        "row": 6,
                        "column": 40
                      },
                      "text": "{"
                    },
                    {
                      "type": "lexical_declaration",
                      "start": {
                        "row": 7,
                        "column": 16
                      },
                      "end": {
                        "row": 7,
                        "column": 75
                      },
                      "text": "const shorthandProperties = properties.filter(isShorthand);",
                      "children": [
                        {
                          "type": "const",
                          "start": {
                            "row": 7,
                            "column": 16
                          },
                          "end": {
                            "row": 7,
                            "column": 21
                          },
                          "text": "const"
                        },
                        {
                          "type": "variable_declarator",
                          "start": {
                            "row": 7,
                            "column": 22
                          },
                          "end": {
                            "row": 7,
                            "column": 74
                          },
                          "text": "shorthandProperties = properties.filter(isShorthand)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 7,
                                "column": 22
                              },
                              "end": {
                                "row": 7,
                                "column": 41
                              },
                              "text": "shorthandProperties"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 7,
                                "column": 42
                              },
                              "end": {
                                "row": 7,
                                "column": 43
                              },
                              "text": "="
                            },
                            {
                              "type": "call_expression",
                              "start": {
                                "row": 7,
                                "column": 44
                              },
                              "end": {
                                "row": 7,
                                "column": 74
                              },
                              "text": "properties.filter(isShorthand)",
                              "children": [
                                {
                                  "type": "member_expression",
                                  "start": {
                                    "row": 7,
                                    "column": 44
                                  },
                                  "end": {
                                    "row": 7,
                                    "column": 61
                                  },
                                  "text": "properties.filter",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 7,
                                        "column": 44
                                      },
                                      "end": {
                                        "row": 7,
                                        "column": 54
                                      },
                                      "text": "properties"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 7,
                                        "column": 54
                                      },
                                      "end": {
                                        "row": 7,
                                        "column": 55
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "property_identifier",
                                      "start": {
                                        "row": 7,
                                        "column": 55
                                      },
                                      "end": {
                                        "row": 7,
                                        "column": 61
                                      },
                                      "text": "filter"
                                    }
                                  ]
                                },
                                {
                                  "type": "arguments",
                                  "start": {
                                    "row": 7,
                                    "column": 61
                                  },
                                  "end": {
                                    "row": 7,
                                    "column": 74
                                  },
                                  "text": "(isShorthand)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 7,
                                        "column": 61
                                      },
                                      "end": {
                                        "row": 7,
                                        "column": 62
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 7,
                                        "column": 62
                                      },
                                      "end": {
                                        "row": 7,
                                        "column": 73
                                      },
                                      "text": "isShorthand"
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 7,
                                        "column": 73
                                      },
                                      "end": {
                                        "row": 7,
                                        "column": 74
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start": {
                            "row": 7,
                            "column": 74
                          },
                          "end": {
                            "row": 7,
                            "column": 75
                          },
                          "text": ";"
                        }
                      ]
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 9,
                        "column": 16
                      },
                      "end": {
                        "row": 12,
                        "column": 19
                      },
                      "text": "/*\n                 * If we do not have an equal number of longform properties as\n                 * shorthand properties, we are using the annotations inconsistently\n                 */"
                    },
                    {
                      "type": "if_statement",
                      "start": {
                        "row": 13,
                        "column": 16
                      },
                      "end": {
                        "row": 30,
                        "column": 17
                      },
                      "text": "if (shorthandProperties.length !== properties.length) {\n\n                    // We have at least 1 shorthand property\n                    if (shorthandProperties.length > 0) {\n                        context.report({ node, message: \"Unexpected mix of shorthand and non-shorthand properties.\" });\n                    } else if (checkRedundancy) {\n\n                        /*\n                         * If all properties of the object contain a method or value with a name matching it's key,\n                         * all the keys are redundant.\n                         */\n                        const canAlwaysUseShorthand = properties.every(isRedundant);\n\n                        if (canAlwaysUseShorthand) {\n                            context.report({ node, message: \"Expected shorthand for all properties.\" });\n                        }\n                    }\n                }",
                      "children": [
                        {
                          "type": "if",
                          "start": {
                            "row": 13,
                            "column": 16
                          },
                          "end": {
                            "row": 13,
                            "column": 18
                          },
                          "text": "if"
                        },
                        {
                          "type": "parenthesized_expression",
                          "start": {
                            "row": 13,
                            "column": 19
                          },
                          "end": {
                            "row": 13,
                            "column": 69
                          },
                          "text": "(shorthandProperties.length !== properties.length)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 13,
                                "column": 19
                              },
                              "end": {
                                "row": 13,
                                "column": 20
                              },
                              "text": "("
                            },
                            {
                              "type": "binary_expression",
                              "start": {
                                "row": 13,
                                "column": 20
                              },
                              "end": {
                                "row": 13,
                                "column": 68
                              },
                              "text": "shorthandProperties.length !== properties.length",
                              "children": [
                                {
                                  "type": "member_expression",
                                  "start": {
                                    "row": 13,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 46
                                  },
                                  "text": "shorthandProperties.length",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 13,
                                        "column": 20
                                      },
                                      "end": {
                                        "row": 13,
                                        "column": 39
                                      },
                                      "text": "shorthandProperties"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 13,
                                        "column": 39
                                      },
                                      "end": {
                                        "row": 13,
                                        "column": 40
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "property_identifier",
                                      "start": {
                                        "row": 13,
                                        "column": 40
                                      },
                                      "end": {
                                        "row": 13,
                                        "column": 46
                                      },
                                      "text": "length"
                                    }
                                  ]
                                },
                                {
                                  "type": "!==",
                                  "start": {
                                    "row": 13,
                                    "column": 47
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 50
                                  },
                                  "text": "!=="
                                },
                                {
                                  "type": "member_expression",
                                  "start": {
                                    "row": 13,
                                    "column": 51
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 68
                                  },
                                  "text": "properties.length",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 13,
                                        "column": 51
                                      },
                                      "end": {
                                        "row": 13,
                                        "column": 61
                                      },
                                      "text": "properties"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 13,
                                        "column": 61
                                      },
                                      "end": {
                                        "row": 13,
                                        "column": 62
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "property_identifier",
                                      "start": {
                                        "row": 13,
                                        "column": 62
                                      },
                                      "end": {
                                        "row": 13,
                                        "column": 68
                                      },
                                      "text": "length"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 13,
                                "column": 68
                              },
                              "end": {
                                "row": 13,
                                "column": 69
                              },
                              "text": ")"
                            }
                          ]
                        },
                        {
                          "type": "statement_block",
                          "start": {
                            "row": 13,
                            "column": 70
                          },
                          "end": {
                            "row": 30,
                            "column": 17
                          },
                          "text": "{\n\n                    // We have at least 1 shorthand property\n                    if (shorthandProperties.length > 0) {\n                        context.report({ node, message: \"Unexpected mix of shorthand and non-shorthand properties.\" });\n                    } else if (checkRedundancy) {\n\n                        /*\n                         * If all properties of the object contain a method or value with a name matching it's key,\n                         * all the keys are redundant.\n                         */\n                        const canAlwaysUseShorthand = properties.every(isRedundant);\n\n                        if (canAlwaysUseShorthand) {\n                            context.report({ node, message: \"Expected shorthand for all properties.\" });\n                        }\n                    }\n                }",
                          "children": [
                            {
                              "type": "{",
                              "start": {
                                "row": 13,
                                "column": 70
                              },
                              "end": {
                                "row": 13,
                                "column": 71
                              },
                              "text": "{"
                            },
                            {
                              "type": "comment",
                              "start": {
                                "row": 15,
                                "column": 20
                              },
                              "end": {
                                "row": 15,
                                "column": 60
                              },
                              "text": "// We have at least 1 shorthand property"
                            },
                            {
                              "type": "if_statement",
                              "start": {
                                "row": 16,
                                "column": 20
                              },
                              "end": {
                                "row": 29,
                                "column": 21
                              },
                              "text": "if (shorthandProperties.length > 0) {\n                        context.report({ node, message: \"Unexpected mix of shorthand and non-shorthand properties.\" });\n                    } else if (checkRedundancy) {\n\n                        /*\n                         * If all properties of the object contain a method or value with a name matching it's key,\n                         * all the keys are redundant.\n                         */\n                        const canAlwaysUseShorthand = properties.every(isRedundant);\n\n                        if (canAlwaysUseShorthand) {\n                            context.report({ node, message: \"Expected shorthand for all properties.\" });\n                        }\n                    }",
                              "children": [
                                {
                                  "type": "if",
                                  "start": {
                                    "row": 16,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 22
                                  },
                                  "text": "if"
                                },
                                {
                                  "type": "parenthesized_expression",
                                  "start": {
                                    "row": 16,
                                    "column": 23
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 55
                                  },
                                  "text": "(shorthandProperties.length > 0)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 16,
                                        "column": 23
                                      },
                                      "end": {
                                        "row": 16,
                                        "column": 24
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start": {
                                        "row": 16,
                                        "column": 24
                                      },
                                      "end": {
                                        "row": 16,
                                        "column": 54
                                      },
                                      "text": "shorthandProperties.length > 0",
                                      "children": [
                                        {
                                          "type": "member_expression",
                                          "start": {
                                            "row": 16,
                                            "column": 24
                                          },
                                          "end": {
                                            "row": 16,
                                            "column": 50
                                          },
                                          "text": "shorthandProperties.length",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 16,
                                                "column": 24
                                              },
                                              "end": {
                                                "row": 16,
                                                "column": 43
                                              },
                                              "text": "shorthandProperties"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 16,
                                                "column": 43
                                              },
                                              "end": {
                                                "row": 16,
                                                "column": 44
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "property_identifier",
                                              "start": {
                                                "row": 16,
                                                "column": 44
                                              },
                                              "end": {
                                                "row": 16,
                                                "column": 50
                                              },
                                              "text": "length"
                                            }
                                          ]
                                        },
                                        {
                                          "type": ">",
                                          "start": {
                                            "row": 16,
                                            "column": 51
                                          },
                                          "end": {
                                            "row": 16,
                                            "column": 52
                                          },
                                          "text": ">"
                                        },
                                        {
                                          "type": "number",
                                          "start": {
                                            "row": 16,
                                            "column": 53
                                          },
                                          "end": {
                                            "row": 16,
                                            "column": 54
                                          },
                                          "text": "0"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 16,
                                        "column": 54
                                      },
                                      "end": {
                                        "row": 16,
                                        "column": 55
                                      },
                                      "text": ")"
                                    }
                                  ]
                                },
                                {
                                  "type": "statement_block",
                                  "start": {
                                    "row": 16,
                                    "column": 56
                                  },
                                  "end": {
                                    "row": 18,
                                    "column": 21
                                  },
                                  "text": "{\n                        context.report({ node, message: \"Unexpected mix of shorthand and non-shorthand properties.\" });\n                    }",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start": {
                                        "row": 16,
                                        "column": 56
                                      },
                                      "end": {
                                        "row": 16,
                                        "column": 57
                                      },
                                      "text": "{"
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start": {
                                        "row": 17,
                                        "column": 24
                                      },
                                      "end": {
                                        "row": 17,
                                        "column": 119
                                      },
                                      "text": "context.report({ node, message: \"Unexpected mix of shorthand and non-shorthand properties.\" });",
                                      "children": [
                                        {
                                          "type": "call_expression",
                                          "start": {
                                            "row": 17,
                                            "column": 24
                                          },
                                          "end": {
                                            "row": 17,
                                            "column": 118
                                          },
                                          "text": "context.report({ node, message: \"Unexpected mix of shorthand and non-shorthand properties.\" })",
                                          "children": [
                                            {
                                              "type": "member_expression",
                                              "start": {
                                                "row": 17,
                                                "column": 24
                                              },
                                              "end": {
                                                "row": 17,
                                                "column": 38
                                              },
                                              "text": "context.report",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 17,
                                                    "column": 24
                                                  },
                                                  "end": {
                                                    "row": 17,
                                                    "column": 31
                                                  },
                                                  "text": "context"
                                                },
                                                {
                                                  "type": ".",
                                                  "start": {
                                                    "row": 17,
                                                    "column": 31
                                                  },
                                                  "end": {
                                                    "row": 17,
                                                    "column": 32
                                                  },
                                                  "text": "."
                                                },
                                                {
                                                  "type": "property_identifier",
                                                  "start": {
                                                    "row": 17,
                                                    "column": 32
                                                  },
                                                  "end": {
                                                    "row": 17,
                                                    "column": 38
                                                  },
                                                  "text": "report"
                                                }
                                              ]
                                            },
                                            {
                                              "type": "arguments",
                                              "start": {
                                                "row": 17,
                                                "column": 38
                                              },
                                              "end": {
                                                "row": 17,
                                                "column": 118
                                              },
                                              "text": "({ node, message: \"Unexpected mix of shorthand and non-shorthand properties.\" })",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 17,
                                                    "column": 38
                                                  },
                                                  "end": {
                                                    "row": 17,
                                                    "column": 39
                                                  },
                                                  "text": "("
                                                },
                                                {
                                                  "type": "object",
                                                  "start": {
                                                    "row": 17,
                                                    "column": 39
                                                  },
                                                  "end": {
                                                    "row": 17,
                                                    "column": 117
                                                  },
                                                  "text": "{ node, message: \"Unexpected mix of shorthand and non-shorthand properties.\" }",
                                                  "children": [
                                                    {
                                                      "type": "{",
                                                      "start": {
                                                        "row": 17,
                                                        "column": 39
                                                      },
                                                      "end": {
                                                        "row": 17,
                                                        "column": 40
                                                      },
                                                      "text": "{"
                                                    },
                                                    {
                                                      "type": "shorthand_property_identifier",
                                                      "start": {
                                                        "row": 17,
                                                        "column": 41
                                                      },
                                                      "end": {
                                                        "row": 17,
                                                        "column": 45
                                                      },
                                                      "text": "node"
                                                    },
                                                    {
                                                      "type": ",",
                                                      "start": {
                                                        "row": 17,
                                                        "column": 45
                                                      },
                                                      "end": {
                                                        "row": 17,
                                                        "column": 46
                                                      },
                                                      "text": ","
                                                    },
                                                    {
                                                      "type": "pair",
                                                      "start": {
                                                        "row": 17,
                                                        "column": 47
                                                      },
                                                      "end": {
                                                        "row": 17,
                                                        "column": 115
                                                      },
                                                      "text": "message: \"Unexpected mix of shorthand and non-shorthand properties.\"",
                                                      "children": [
                                                        {
                                                          "type": "property_identifier",
                                                          "start": {
                                                            "row": 17,
                                                            "column": 47
                                                          },
                                                          "end": {
                                                            "row": 17,
                                                            "column": 54
                                                          },
                                                          "text": "message"
                                                        },
                                                        {
                                                          "type": ":",
                                                          "start": {
                                                            "row": 17,
                                                            "column": 54
                                                          },
                                                          "end": {
                                                            "row": 17,
                                                            "column": 55
                                                          },
                                                          "text": ":"
                                                        },
                                                        {
                                                          "type": "string",
                                                          "start": {
                                                            "row": 17,
                                                            "column": 56
                                                          },
                                                          "end": {
                                                            "row": 17,
                                                            "column": 115
                                                          },
                                                          "text": "\"Unexpected mix of shorthand and non-shorthand properties.\"",
                                                          "children": [
                                                            {
                                                              "type": "\"",
                                                              "start": {
                                                                "row": 17,
                                                                "column": 56
                                                              },
                                                              "end": {
                                                                "row": 17,
                                                                "column": 57
                                                              },
                                                              "text": "\""
                                                            },
                                                            {
                                                              "type": "string_fragment",
                                                              "start": {
                                                                "row": 17,
                                                                "column": 57
                                                              },
                                                              "end": {
                                                                "row": 17,
                                                                "column": 114
                                                              },
                                                              "text": "Unexpected mix of shorthand and non-shorthand properties."
                                                            },
                                                            {
                                                              "type": "\"",
                                                              "start": {
                                                                "row": 17,
                                                                "column": 114
                                                              },
                                                              "end": {
                                                                "row": 17,
                                                                "column": 115
                                                              },
                                                              "text": "\""
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "}",
                                                      "start": {
                                                        "row": 17,
                                                        "column": 116
                                                      },
                                                      "end": {
                                                        "row": 17,
                                                        "column": 117
                                                      },
                                                      "text": "}"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 17,
                                                    "column": 117
                                                  },
                                                  "end": {
                                                    "row": 17,
                                                    "column": 118
                                                  },
                                                  "text": ")"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start": {
                                            "row": 17,
                                            "column": 118
                                          },
                                          "end": {
                                            "row": 17,
                                            "column": 119
                                          },
                                          "text": ";"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start": {
                                        "row": 18,
                                        "column": 20
                                      },
                                      "end": {
                                        "row": 18,
                                        "column": 21
                                      },
                                      "text": "}"
                                    }
                                  ]
                                },
                                {
                                  "type": "else_clause",
                                  "start": {
                                    "row": 18,
                                    "column": 22
                                  },
                                  "end": {
                                    "row": 29,
                                    "column": 21
                                  },
                                  "text": "else if (checkRedundancy) {\n\n                        /*\n                         * If all properties of the object contain a method or value with a name matching it's key,\n                         * all the keys are redundant.\n                         */\n                        const canAlwaysUseShorthand = properties.every(isRedundant);\n\n                        if (canAlwaysUseShorthand) {\n                            context.report({ node, message: \"Expected shorthand for all properties.\" });\n                        }\n                    }",
                                  "children": [
                                    {
                                      "type": "else",
                                      "start": {
                                        "row": 18,
                                        "column": 22
                                      },
                                      "end": {
                                        "row": 18,
                                        "column": 26
                                      },
                                      "text": "else"
                                    },
                                    {
                                      "type": "if_statement",
                                      "start": {
                                        "row": 18,
                                        "column": 27
                                      },
                                      "end": {
                                        "row": 29,
                                        "column": 21
                                      },
                                      "text": "if (checkRedundancy) {\n\n                        /*\n                         * If all properties of the object contain a method or value with a name matching it's key,\n                         * all the keys are redundant.\n                         */\n                        const canAlwaysUseShorthand = properties.every(isRedundant);\n\n                        if (canAlwaysUseShorthand) {\n                            context.report({ node, message: \"Expected shorthand for all properties.\" });\n                        }\n                    }",
                                      "children": [
                                        {
                                          "type": "if",
                                          "start": {
                                            "row": 18,
                                            "column": 27
                                          },
                                          "end": {
                                            "row": 18,
                                            "column": 29
                                          },
                                          "text": "if"
                                        },
                                        {
                                          "type": "parenthesized_expression",
                                          "start": {
                                            "row": 18,
                                            "column": 30
                                          },
                                          "end": {
                                            "row": 18,
                                            "column": 47
                                          },
                                          "text": "(checkRedundancy)",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 18,
                                                "column": 30
                                              },
                                              "end": {
                                                "row": 18,
                                                "column": 31
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 18,
                                                "column": 31
                                              },
                                              "end": {
                                                "row": 18,
                                                "column": 46
                                              },
                                              "text": "checkRedundancy"
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 18,
                                                "column": 46
                                              },
                                              "end": {
                                                "row": 18,
                                                "column": 47
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "statement_block",
                                          "start": {
                                            "row": 18,
                                            "column": 48
                                          },
                                          "end": {
                                            "row": 29,
                                            "column": 21
                                          },
                                          "text": "{\n\n                        /*\n                         * If all properties of the object contain a method or value with a name matching it's key,\n                         * all the keys are redundant.\n                         */\n                        const canAlwaysUseShorthand = properties.every(isRedundant);\n\n                        if (canAlwaysUseShorthand) {\n                            context.report({ node, message: \"Expected shorthand for all properties.\" });\n                        }\n                    }",
                                          "children": [
                                            {
                                              "type": "{",
                                              "start": {
                                                "row": 18,
                                                "column": 48
                                              },
                                              "end": {
                                                "row": 18,
                                                "column": 49
                                              },
                                              "text": "{"
                                            },
                                            {
                                              "type": "comment",
                                              "start": {
                                                "row": 20,
                                                "column": 24
                                              },
                                              "end": {
                                                "row": 23,
                                                "column": 27
                                              },
                                              "text": "/*\n                         * If all properties of the object contain a method or value with a name matching it's key,\n                         * all the keys are redundant.\n                         */"
                                            },
                                            {
                                              "type": "lexical_declaration",
                                              "start": {
                                                "row": 24,
                                                "column": 24
                                              },
                                              "end": {
                                                "row": 24,
                                                "column": 84
                                              },
                                              "text": "const canAlwaysUseShorthand = properties.every(isRedundant);",
                                              "children": [
                                                {
                                                  "type": "const",
                                                  "start": {
                                                    "row": 24,
                                                    "column": 24
                                                  },
                                                  "end": {
                                                    "row": 24,
                                                    "column": 29
                                                  },
                                                  "text": "const"
                                                },
                                                {
                                                  "type": "variable_declarator",
                                                  "start": {
                                                    "row": 24,
                                                    "column": 30
                                                  },
                                                  "end": {
                                                    "row": 24,
                                                    "column": 83
                                                  },
                                                  "text": "canAlwaysUseShorthand = properties.every(isRedundant)",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 24,
                                                        "column": 30
                                                      },
                                                      "end": {
                                                        "row": 24,
                                                        "column": 51
                                                      },
                                                      "text": "canAlwaysUseShorthand"
                                                    },
                                                    {
                                                      "type": "=",
                                                      "start": {
                                                        "row": 24,
                                                        "column": 52
                                                      },
                                                      "end": {
                                                        "row": 24,
                                                        "column": 53
                                                      },
                                                      "text": "="
                                                    },
                                                    {
                                                      "type": "call_expression",
                                                      "start": {
                                                        "row": 24,
                                                        "column": 54
                                                      },
                                                      "end": {
                                                        "row": 24,
                                                        "column": 83
                                                      },
                                                      "text": "properties.every(isRedundant)",
                                                      "children": [
                                                        {
                                                          "type": "member_expression",
                                                          "start": {
                                                            "row": 24,
                                                            "column": 54
                                                          },
                                                          "end": {
                                                            "row": 24,
                                                            "column": 70
                                                          },
                                                          "text": "properties.every",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start": {
                                                                "row": 24,
                                                                "column": 54
                                                              },
                                                              "end": {
                                                                "row": 24,
                                                                "column": 64
                                                              },
                                                              "text": "properties"
                                                            },
                                                            {
                                                              "type": ".",
                                                              "start": {
                                                                "row": 24,
                                                                "column": 64
                                                              },
                                                              "end": {
                                                                "row": 24,
                                                                "column": 65
                                                              },
                                                              "text": "."
                                                            },
                                                            {
                                                              "type": "property_identifier",
                                                              "start": {
                                                                "row": 24,
                                                                "column": 65
                                                              },
                                                              "end": {
                                                                "row": 24,
                                                                "column": 70
                                                              },
                                                              "text": "every"
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "arguments",
                                                          "start": {
                                                            "row": 24,
                                                            "column": 70
                                                          },
                                                          "end": {
                                                            "row": 24,
                                                            "column": 83
                                                          },
                                                          "text": "(isRedundant)",
                                                          "children": [
                                                            {
                                                              "type": "(",
                                                              "start": {
                                                                "row": 24,
                                                                "column": 70
                                                              },
                                                              "end": {
                                                                "row": 24,
                                                                "column": 71
                                                              },
                                                              "text": "("
                                                            },
                                                            {
                                                              "type": "identifier",
                                                              "start": {
                                                                "row": 24,
                                                                "column": 71
                                                              },
                                                              "end": {
                                                                "row": 24,
                                                                "column": 82
                                                              },
                                                              "text": "isRedundant"
                                                            },
                                                            {
                                                              "type": ")",
                                                              "start": {
                                                                "row": 24,
                                                                "column": 82
                                                              },
                                                              "end": {
                                                                "row": 24,
                                                                "column": 83
                                                              },
                                                              "text": ")"
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ";",
                                                  "start": {
                                                    "row": 24,
                                                    "column": 83
                                                  },
                                                  "end": {
                                                    "row": 24,
                                                    "column": 84
                                                  },
                                                  "text": ";"
                                                }
                                              ]
                                            },
                                            {
                                              "type": "if_statement",
                                              "start": {
                                                "row": 26,
                                                "column": 24
                                              },
                                              "end": {
                                                "row": 28,
                                                "column": 25
                                              },
                                              "text": "if (canAlwaysUseShorthand) {\n                            context.report({ node, message: \"Expected shorthand for all properties.\" });\n                        }",
                                              "children": [
                                                {
                                                  "type": "if",
                                                  "start": {
                                                    "row": 26,
                                                    "column": 24
                                                  },
                                                  "end": {
                                                    "row": 26,
                                                    "column": 26
                                                  },
                                                  "text": "if"
                                                },
                                                {
                                                  "type": "parenthesized_expression",
                                                  "start": {
                                                    "row": 26,
                                                    "column": 27
                                                  },
                                                  "end": {
                                                    "row": 26,
                                                    "column": 50
                                                  },
                                                  "text": "(canAlwaysUseShorthand)",
                                                  "children": [
                                                    {
                                                      "type": "(",
                                                      "start": {
                                                        "row": 26,
                                                        "column": 27
                                                      },
                                                      "end": {
                                                        "row": 26,
                                                        "column": 28
                                                      },
                                                      "text": "("
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 26,
                                                        "column": 28
                                                      },
                                                      "end": {
                                                        "row": 26,
                                                        "column": 49
                                                      },
                                                      "text": "canAlwaysUseShorthand"
                                                    },
                                                    {
                                                      "type": ")",
                                                      "start": {
                                                        "row": 26,
                                                        "column": 49
                                                      },
                                                      "end": {
                                                        "row": 26,
                                                        "column": 50
                                                      },
                                                      "text": ")"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "statement_block",
                                                  "start": {
                                                    "row": 26,
                                                    "column": 51
                                                  },
                                                  "end": {
                                                    "row": 28,
                                                    "column": 25
                                                  },
                                                  "text": "{\n                            context.report({ node, message: \"Expected shorthand for all properties.\" });\n                        }",
                                                  "children": [
                                                    {
                                                      "type": "{",
                                                      "start": {
                                                        "row": 26,
                                                        "column": 51
                                                      },
                                                      "end": {
                                                        "row": 26,
                                                        "column": 52
                                                      },
                                                      "text": "{"
                                                    },
                                                    {
                                                      "type": "expression_statement",
                                                      "start": {
                                                        "row": 27,
                                                        "column": 28
                                                      },
                                                      "end": {
                                                        "row": 27,
                                                        "column": 104
                                                      },
                                                      "text": "context.report({ node, message: \"Expected shorthand for all properties.\" });",
                                                      "children": [
                                                        {
                                                          "type": "call_expression",
                                                          "start": {
                                                            "row": 27,
                                                            "column": 28
                                                          },
                                                          "end": {
                                                            "row": 27,
                                                            "column": 103
                                                          },
                                                          "text": "context.report({ node, message: \"Expected shorthand for all properties.\" })",
                                                          "children": [
                                                            {
                                                              "type": "member_expression",
                                                              "start": {
                                                                "row": 27,
                                                                "column": 28
                                                              },
                                                              "end": {
                                                                "row": 27,
                                                                "column": 42
                                                              },
                                                              "text": "context.report",
                                                              "children": [
                                                                {
                                                                  "type": "identifier",
                                                                  "start": {
                                                                    "row": 27,
                                                                    "column": 28
                                                                  },
                                                                  "end": {
                                                                    "row": 27,
                                                                    "column": 35
                                                                  },
                                                                  "text": "context"
                                                                },
                                                                {
                                                                  "type": ".",
                                                                  "start": {
                                                                    "row": 27,
                                                                    "column": 35
                                                                  },
                                                                  "end": {
                                                                    "row": 27,
                                                                    "column": 36
                                                                  },
                                                                  "text": "."
                                                                },
                                                                {
                                                                  "type": "property_identifier",
                                                                  "start": {
                                                                    "row": 27,
                                                                    "column": 36
                                                                  },
                                                                  "end": {
                                                                    "row": 27,
                                                                    "column": 42
                                                                  },
                                                                  "text": "report"
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "arguments",
                                                              "start": {
                                                                "row": 27,
                                                                "column": 42
                                                              },
                                                              "end": {
                                                                "row": 27,
                                                                "column": 103
                                                              },
                                                              "text": "({ node, message: \"Expected shorthand for all properties.\" })",
                                                              "children": [
                                                                {
                                                                  "type": "(",
                                                                  "start": {
                                                                    "row": 27,
                                                                    "column": 42
                                                                  },
                                                                  "end": {
                                                                    "row": 27,
                                                                    "column": 43
                                                                  },
                                                                  "text": "("
                                                                },
                                                                {
                                                                  "type": "object",
                                                                  "start": {
                                                                    "row": 27,
                                                                    "column": 43
                                                                  },
                                                                  "end": {
                                                                    "row": 27,
                                                                    "column": 102
                                                                  },
                                                                  "text": "{ node, message: \"Expected shorthand for all properties.\" }",
                                                                  "children": [
                                                                    {
                                                                      "type": "{",
                                                                      "start": {
                                                                        "row": 27,
                                                                        "column": 43
                                                                      },
                                                                      "end": {
                                                                        "row": 27,
                                                                        "column": 44
                                                                      },
                                                                      "text": "{"
                                                                    },
                                                                    {
                                                                      "type": "shorthand_property_identifier",
                                                                      "start": {
                                                                        "row": 27,
                                                                        "column": 45
                                                                      },
                                                                      "end": {
                                                                        "row": 27,
                                                                        "column": 49
                                                                      },
                                                                      "text": "node"
                                                                    },
                                                                    {
                                                                      "type": ",",
                                                                      "start": {
                                                                        "row": 27,
                                                                        "column": 49
                                                                      },
                                                                      "end": {
                                                                        "row": 27,
                                                                        "column": 50
                                                                      },
                                                                      "text": ","
                                                                    },
                                                                    {
                                                                      "type": "pair",
                                                                      "start": {
                                                                        "row": 27,
                                                                        "column": 51
                                                                      },
                                                                      "end": {
                                                                        "row": 27,
                                                                        "column": 100
                                                                      },
                                                                      "text": "message: \"Expected shorthand for all properties.\"",
                                                                      "children": [
                                                                        {
                                                                          "type": "property_identifier",
                                                                          "start": {
                                                                            "row": 27,
                                                                            "column": 51
                                                                          },
                                                                          "end": {
                                                                            "row": 27,
                                                                            "column": 58
                                                                          },
                                                                          "text": "message"
                                                                        },
                                                                        {
                                                                          "type": ":",
                                                                          "start": {
                                                                            "row": 27,
                                                                            "column": 58
                                                                          },
                                                                          "end": {
                                                                            "row": 27,
                                                                            "column": 59
                                                                          },
                                                                          "text": ":"
                                                                        },
                                                                        {
                                                                          "type": "string",
                                                                          "start": {
                                                                            "row": 27,
                                                                            "column": 60
                                                                          },
                                                                          "end": {
                                                                            "row": 27,
                                                                            "column": 100
                                                                          },
                                                                          "text": "\"Expected shorthand for all properties.\"",
                                                                          "children": [
                                                                            {
                                                                              "type": "\"",
                                                                              "start": {
                                                                                "row": 27,
                                                                                "column": 60
                                                                              },
                                                                              "end": {
                                                                                "row": 27,
                                                                                "column": 61
                                                                              },
                                                                              "text": "\""
                                                                            },
                                                                            {
                                                                              "type": "string_fragment",
                                                                              "start": {
                                                                                "row": 27,
                                                                                "column": 61
                                                                              },
                                                                              "end": {
                                                                                "row": 27,
                                                                                "column": 99
                                                                              },
                                                                              "text": "Expected shorthand for all properties."
                                                                            },
                                                                            {
                                                                              "type": "\"",
                                                                              "start": {
                                                                                "row": 27,
                                                                                "column": 99
                                                                              },
                                                                              "end": {
                                                                                "row": 27,
                                                                                "column": 100
                                                                              },
                                                                              "text": "\""
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "}",
                                                                      "start": {
                                                                        "row": 27,
                                                                        "column": 101
                                                                      },
                                                                      "end": {
                                                                        "row": 27,
                                                                        "column": 102
                                                                      },
                                                                      "text": "}"
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": ")",
                                                                  "start": {
                                                                    "row": 27,
                                                                    "column": 102
                                                                  },
                                                                  "end": {
                                                                    "row": 27,
                                                                    "column": 103
                                                                  },
                                                                  "text": ")"
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": ";",
                                                          "start": {
                                                            "row": 27,
                                                            "column": 103
                                                          },
                                                          "end": {
                                                            "row": 27,
                                                            "column": 104
                                                          },
                                                          "text": ";"
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "}",
                                                      "start": {
                                                        "row": 28,
                                                        "column": 24
                                                      },
                                                      "end": {
                                                        "row": 28,
                                                        "column": 25
                                                      },
                                                      "text": "}"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "}",
                                              "start": {
                                                "row": 29,
                                                "column": 20
                                              },
                                              "end": {
                                                "row": 29,
                                                "column": 21
                                              },
                                              "text": "}"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start": {
                                "row": 30,
                                "column": 16
                              },
                              "end": {
                                "row": 30,
                                "column": 17
                              },
                              "text": "}"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start": {
                        "row": 31,
                        "column": 12
                      },
                      "end": {
                        "row": 31,
                        "column": 13
                      },
                      "text": "}"
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start": {
                "row": 32,
                "column": 8
              },
              "end": {
                "row": 32,
                "column": 9
              },
              "text": "}"
            }
          ]
        }
      ]
    }
  ]
}