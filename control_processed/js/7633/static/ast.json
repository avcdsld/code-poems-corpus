{
  "type": "program",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 12,
    "column": 3
  },
  "text": "function reject(vReason) {\n\t\t\tvResult = vReason;\n\t\t\tiState = -1;\n\n\t\t\tif (!bCaught && SyncPromise.listener) {\n\t\t\t\tSyncPromise.listener(that, false);\n\t\t\t}\n\n\t\t\tif (fnReject) {\n\t\t\t\tfnReject(vReason);\n\t\t\t\tfnReject = fnResolve = null; // be nice to the garbage collector\n\t\t\t}\n\t\t}",
  "children": [
    {
      "type": "function_declaration",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 12,
        "column": 3
      },
      "text": "function reject(vReason) {\n\t\t\tvResult = vReason;\n\t\t\tiState = -1;\n\n\t\t\tif (!bCaught && SyncPromise.listener) {\n\t\t\t\tSyncPromise.listener(that, false);\n\t\t\t}\n\n\t\t\tif (fnReject) {\n\t\t\t\tfnReject(vReason);\n\t\t\t\tfnReject = fnResolve = null; // be nice to the garbage collector\n\t\t\t}\n\t\t}",
      "children": [
        {
          "type": "function",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 8
          },
          "text": "function"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 9
          },
          "end": {
            "row": 0,
            "column": 15
          },
          "text": "reject"
        },
        {
          "type": "formal_parameters",
          "start": {
            "row": 0,
            "column": 15
          },
          "end": {
            "row": 0,
            "column": 24
          },
          "text": "(vReason)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 15
              },
              "end": {
                "row": 0,
                "column": 16
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 16
              },
              "end": {
                "row": 0,
                "column": 23
              },
              "text": "vReason"
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 23
              },
              "end": {
                "row": 0,
                "column": 24
              },
              "text": ")"
            }
          ]
        },
        {
          "type": "statement_block",
          "start": {
            "row": 0,
            "column": 25
          },
          "end": {
            "row": 12,
            "column": 3
          },
          "text": "{\n\t\t\tvResult = vReason;\n\t\t\tiState = -1;\n\n\t\t\tif (!bCaught && SyncPromise.listener) {\n\t\t\t\tSyncPromise.listener(that, false);\n\t\t\t}\n\n\t\t\tif (fnReject) {\n\t\t\t\tfnReject(vReason);\n\t\t\t\tfnReject = fnResolve = null; // be nice to the garbage collector\n\t\t\t}\n\t\t}",
          "children": [
            {
              "type": "{",
              "start": {
                "row": 0,
                "column": 25
              },
              "end": {
                "row": 0,
                "column": 26
              },
              "text": "{"
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 3
              },
              "end": {
                "row": 1,
                "column": 21
              },
              "text": "vResult = vReason;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start": {
                    "row": 1,
                    "column": 3
                  },
                  "end": {
                    "row": 1,
                    "column": 20
                  },
                  "text": "vResult = vReason",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 1,
                        "column": 3
                      },
                      "end": {
                        "row": 1,
                        "column": 10
                      },
                      "text": "vResult"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 1,
                        "column": 11
                      },
                      "end": {
                        "row": 1,
                        "column": 12
                      },
                      "text": "="
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 1,
                        "column": 13
                      },
                      "end": {
                        "row": 1,
                        "column": 20
                      },
                      "text": "vReason"
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 1,
                    "column": 20
                  },
                  "end": {
                    "row": 1,
                    "column": 21
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 2,
                "column": 3
              },
              "end": {
                "row": 2,
                "column": 15
              },
              "text": "iState = -1;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start": {
                    "row": 2,
                    "column": 3
                  },
                  "end": {
                    "row": 2,
                    "column": 14
                  },
                  "text": "iState = -1",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 2,
                        "column": 3
                      },
                      "end": {
                        "row": 2,
                        "column": 9
                      },
                      "text": "iState"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 2,
                        "column": 10
                      },
                      "end": {
                        "row": 2,
                        "column": 11
                      },
                      "text": "="
                    },
                    {
                      "type": "unary_expression",
                      "start": {
                        "row": 2,
                        "column": 12
                      },
                      "end": {
                        "row": 2,
                        "column": 14
                      },
                      "text": "-1",
                      "children": [
                        {
                          "type": "-",
                          "start": {
                            "row": 2,
                            "column": 12
                          },
                          "end": {
                            "row": 2,
                            "column": 13
                          },
                          "text": "-"
                        },
                        {
                          "type": "number",
                          "start": {
                            "row": 2,
                            "column": 13
                          },
                          "end": {
                            "row": 2,
                            "column": 14
                          },
                          "text": "1"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 2,
                    "column": 14
                  },
                  "end": {
                    "row": 2,
                    "column": 15
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 4,
                "column": 3
              },
              "end": {
                "row": 6,
                "column": 4
              },
              "text": "if (!bCaught && SyncPromise.listener) {\n\t\t\t\tSyncPromise.listener(that, false);\n\t\t\t}",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 4,
                    "column": 3
                  },
                  "end": {
                    "row": 4,
                    "column": 5
                  },
                  "text": "if"
                },
                {
                  "type": "parenthesized_expression",
                  "start": {
                    "row": 4,
                    "column": 6
                  },
                  "end": {
                    "row": 4,
                    "column": 40
                  },
                  "text": "(!bCaught && SyncPromise.listener)",
                  "children": [
                    {
                      "type": "(",
                      "start": {
                        "row": 4,
                        "column": 6
                      },
                      "end": {
                        "row": 4,
                        "column": 7
                      },
                      "text": "("
                    },
                    {
                      "type": "binary_expression",
                      "start": {
                        "row": 4,
                        "column": 7
                      },
                      "end": {
                        "row": 4,
                        "column": 39
                      },
                      "text": "!bCaught && SyncPromise.listener",
                      "children": [
                        {
                          "type": "unary_expression",
                          "start": {
                            "row": 4,
                            "column": 7
                          },
                          "end": {
                            "row": 4,
                            "column": 15
                          },
                          "text": "!bCaught",
                          "children": [
                            {
                              "type": "!",
                              "start": {
                                "row": 4,
                                "column": 7
                              },
                              "end": {
                                "row": 4,
                                "column": 8
                              },
                              "text": "!"
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 4,
                                "column": 8
                              },
                              "end": {
                                "row": 4,
                                "column": 15
                              },
                              "text": "bCaught"
                            }
                          ]
                        },
                        {
                          "type": "&&",
                          "start": {
                            "row": 4,
                            "column": 16
                          },
                          "end": {
                            "row": 4,
                            "column": 18
                          },
                          "text": "&&"
                        },
                        {
                          "type": "member_expression",
                          "start": {
                            "row": 4,
                            "column": 19
                          },
                          "end": {
                            "row": 4,
                            "column": 39
                          },
                          "text": "SyncPromise.listener",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 4,
                                "column": 19
                              },
                              "end": {
                                "row": 4,
                                "column": 30
                              },
                              "text": "SyncPromise"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 4,
                                "column": 30
                              },
                              "end": {
                                "row": 4,
                                "column": 31
                              },
                              "text": "."
                            },
                            {
                              "type": "property_identifier",
                              "start": {
                                "row": 4,
                                "column": 31
                              },
                              "end": {
                                "row": 4,
                                "column": 39
                              },
                              "text": "listener"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start": {
                        "row": 4,
                        "column": 39
                      },
                      "end": {
                        "row": 4,
                        "column": 40
                      },
                      "text": ")"
                    }
                  ]
                },
                {
                  "type": "statement_block",
                  "start": {
                    "row": 4,
                    "column": 41
                  },
                  "end": {
                    "row": 6,
                    "column": 4
                  },
                  "text": "{\n\t\t\t\tSyncPromise.listener(that, false);\n\t\t\t}",
                  "children": [
                    {
                      "type": "{",
                      "start": {
                        "row": 4,
                        "column": 41
                      },
                      "end": {
                        "row": 4,
                        "column": 42
                      },
                      "text": "{"
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 5,
                        "column": 4
                      },
                      "end": {
                        "row": 5,
                        "column": 38
                      },
                      "text": "SyncPromise.listener(that, false);",
                      "children": [
                        {
                          "type": "call_expression",
                          "start": {
                            "row": 5,
                            "column": 4
                          },
                          "end": {
                            "row": 5,
                            "column": 37
                          },
                          "text": "SyncPromise.listener(that, false)",
                          "children": [
                            {
                              "type": "member_expression",
                              "start": {
                                "row": 5,
                                "column": 4
                              },
                              "end": {
                                "row": 5,
                                "column": 24
                              },
                              "text": "SyncPromise.listener",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 5,
                                    "column": 4
                                  },
                                  "end": {
                                    "row": 5,
                                    "column": 15
                                  },
                                  "text": "SyncPromise"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 5,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 5,
                                    "column": 16
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "property_identifier",
                                  "start": {
                                    "row": 5,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 5,
                                    "column": 24
                                  },
                                  "text": "listener"
                                }
                              ]
                            },
                            {
                              "type": "arguments",
                              "start": {
                                "row": 5,
                                "column": 24
                              },
                              "end": {
                                "row": 5,
                                "column": 37
                              },
                              "text": "(that, false)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 5,
                                    "column": 24
                                  },
                                  "end": {
                                    "row": 5,
                                    "column": 25
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 5,
                                    "column": 25
                                  },
                                  "end": {
                                    "row": 5,
                                    "column": 29
                                  },
                                  "text": "that"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 5,
                                    "column": 29
                                  },
                                  "end": {
                                    "row": 5,
                                    "column": 30
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "false",
                                  "start": {
                                    "row": 5,
                                    "column": 31
                                  },
                                  "end": {
                                    "row": 5,
                                    "column": 36
                                  },
                                  "text": "false"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 5,
                                    "column": 36
                                  },
                                  "end": {
                                    "row": 5,
                                    "column": 37
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start": {
                            "row": 5,
                            "column": 37
                          },
                          "end": {
                            "row": 5,
                            "column": 38
                          },
                          "text": ";"
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start": {
                        "row": 6,
                        "column": 3
                      },
                      "end": {
                        "row": 6,
                        "column": 4
                      },
                      "text": "}"
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 8,
                "column": 3
              },
              "end": {
                "row": 11,
                "column": 4
              },
              "text": "if (fnReject) {\n\t\t\t\tfnReject(vReason);\n\t\t\t\tfnReject = fnResolve = null; // be nice to the garbage collector\n\t\t\t}",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 8,
                    "column": 3
                  },
                  "end": {
                    "row": 8,
                    "column": 5
                  },
                  "text": "if"
                },
                {
                  "type": "parenthesized_expression",
                  "start": {
                    "row": 8,
                    "column": 6
                  },
                  "end": {
                    "row": 8,
                    "column": 16
                  },
                  "text": "(fnReject)",
                  "children": [
                    {
                      "type": "(",
                      "start": {
                        "row": 8,
                        "column": 6
                      },
                      "end": {
                        "row": 8,
                        "column": 7
                      },
                      "text": "("
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 8,
                        "column": 7
                      },
                      "end": {
                        "row": 8,
                        "column": 15
                      },
                      "text": "fnReject"
                    },
                    {
                      "type": ")",
                      "start": {
                        "row": 8,
                        "column": 15
                      },
                      "end": {
                        "row": 8,
                        "column": 16
                      },
                      "text": ")"
                    }
                  ]
                },
                {
                  "type": "statement_block",
                  "start": {
                    "row": 8,
                    "column": 17
                  },
                  "end": {
                    "row": 11,
                    "column": 4
                  },
                  "text": "{\n\t\t\t\tfnReject(vReason);\n\t\t\t\tfnReject = fnResolve = null; // be nice to the garbage collector\n\t\t\t}",
                  "children": [
                    {
                      "type": "{",
                      "start": {
                        "row": 8,
                        "column": 17
                      },
                      "end": {
                        "row": 8,
                        "column": 18
                      },
                      "text": "{"
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 9,
                        "column": 4
                      },
                      "end": {
                        "row": 9,
                        "column": 22
                      },
                      "text": "fnReject(vReason);",
                      "children": [
                        {
                          "type": "call_expression",
                          "start": {
                            "row": 9,
                            "column": 4
                          },
                          "end": {
                            "row": 9,
                            "column": 21
                          },
                          "text": "fnReject(vReason)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 9,
                                "column": 4
                              },
                              "end": {
                                "row": 9,
                                "column": 12
                              },
                              "text": "fnReject"
                            },
                            {
                              "type": "arguments",
                              "start": {
                                "row": 9,
                                "column": 12
                              },
                              "end": {
                                "row": 9,
                                "column": 21
                              },
                              "text": "(vReason)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 9,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 9,
                                    "column": 13
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 9,
                                    "column": 13
                                  },
                                  "end": {
                                    "row": 9,
                                    "column": 20
                                  },
                                  "text": "vReason"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 9,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 9,
                                    "column": 21
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start": {
                            "row": 9,
                            "column": 21
                          },
                          "end": {
                            "row": 9,
                            "column": 22
                          },
                          "text": ";"
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 10,
                        "column": 4
                      },
                      "end": {
                        "row": 10,
                        "column": 32
                      },
                      "text": "fnReject = fnResolve = null;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start": {
                            "row": 10,
                            "column": 4
                          },
                          "end": {
                            "row": 10,
                            "column": 31
                          },
                          "text": "fnReject = fnResolve = null",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 10,
                                "column": 4
                              },
                              "end": {
                                "row": 10,
                                "column": 12
                              },
                              "text": "fnReject"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 10,
                                "column": 13
                              },
                              "end": {
                                "row": 10,
                                "column": 14
                              },
                              "text": "="
                            },
                            {
                              "type": "assignment_expression",
                              "start": {
                                "row": 10,
                                "column": 15
                              },
                              "end": {
                                "row": 10,
                                "column": 31
                              },
                              "text": "fnResolve = null",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 10,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 10,
                                    "column": 24
                                  },
                                  "text": "fnResolve"
                                },
                                {
                                  "type": "=",
                                  "start": {
                                    "row": 10,
                                    "column": 25
                                  },
                                  "end": {
                                    "row": 10,
                                    "column": 26
                                  },
                                  "text": "="
                                },
                                {
                                  "type": "null",
                                  "start": {
                                    "row": 10,
                                    "column": 27
                                  },
                                  "end": {
                                    "row": 10,
                                    "column": 31
                                  },
                                  "text": "null"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start": {
                            "row": 10,
                            "column": 31
                          },
                          "end": {
                            "row": 10,
                            "column": 32
                          },
                          "text": ";"
                        }
                      ]
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 10,
                        "column": 33
                      },
                      "end": {
                        "row": 10,
                        "column": 68
                      },
                      "text": "// be nice to the garbage collector"
                    },
                    {
                      "type": "}",
                      "start": {
                        "row": 11,
                        "column": 3
                      },
                      "end": {
                        "row": 11,
                        "column": 4
                      },
                      "text": "}"
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start": {
                "row": 12,
                "column": 2
              },
              "end": {
                "row": 12,
                "column": 3
              },
              "text": "}"
            }
          ]
        }
      ]
    }
  ]
}