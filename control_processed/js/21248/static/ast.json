{
  "type": "program",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 75,
    "column": 3
  },
  "text": "function reconcileChildFibers(returnFiber, currentFirstChild, newChild, priority) {\n    // This function is not recursive.\n    // If the top level item is an array, we treat it as a set of children,\n    // not as a fragment. Nested arrays on the other hand will be treated as\n    // fragment nodes. Recursion happens at the normal flow.\n\n    // Handle object types\n    var isObject = typeof newChild === 'object' && newChild !== null;\n    if (isObject) {\n      // Support only the subset of return types that Stack supports. Treat\n      // everything else as empty, but log a warning.\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n          return placeSingleChild(reconcileSingleElement(returnFiber, currentFirstChild, newChild, priority));\n\n        case REACT_COROUTINE_TYPE:\n          return placeSingleChild(reconcileSingleCoroutine(returnFiber, currentFirstChild, newChild, priority));\n\n        case REACT_YIELD_TYPE:\n          return placeSingleChild(reconcileSingleYield(returnFiber, currentFirstChild, newChild, priority));\n\n        case REACT_PORTAL_TYPE:\n          return placeSingleChild(reconcileSinglePortal(returnFiber, currentFirstChild, newChild, priority));\n      }\n    }\n\n    if (typeof newChild === 'string' || typeof newChild === 'number') {\n      return placeSingleChild(reconcileSingleTextNode(returnFiber, currentFirstChild, '' + newChild, priority));\n    }\n\n    if (isArray(newChild)) {\n      return reconcileChildrenArray(returnFiber, currentFirstChild, newChild, priority);\n    }\n\n    if (getIteratorFn(newChild)) {\n      return reconcileChildrenIterator(returnFiber, currentFirstChild, newChild, priority);\n    }\n\n    if (isObject) {\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n\n    {\n      if (typeof newChild === 'function') {\n        warnOnFunctionType();\n      }\n    }\n    if (typeof newChild === 'undefined') {\n      // If the new child is undefined, and the return fiber is a composite\n      // component, throw an error. If Fiber return types are disabled,\n      // we already threw above.\n      switch (returnFiber.tag) {\n        case ClassComponent$7:\n          {\n            {\n              var instance = returnFiber.stateNode;\n              if (instance.render._isMockFunction) {\n                // We allow auto-mocks to proceed as if they're returning null.\n                break;\n              }\n            }\n          }\n        // Intentionally fall through to the next case, which handles both\n        // functions and classes\n        // eslint-disable-next-lined no-fallthrough\n        case FunctionalComponent$2:\n          {\n            var Component = returnFiber.type;\n            invariant(false, '%s(...): Nothing was returned from render. This usually means a return statement is missing. Or, to render nothing, return null.', Component.displayName || Component.name || 'Component');\n          }\n      }\n    }\n\n    // Remaining cases are all treated as empty.\n    return deleteRemainingChildren(returnFiber, currentFirstChild);\n  }",
  "children": [
    {
      "type": "function_declaration",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 75,
        "column": 3
      },
      "text": "function reconcileChildFibers(returnFiber, currentFirstChild, newChild, priority) {\n    // This function is not recursive.\n    // If the top level item is an array, we treat it as a set of children,\n    // not as a fragment. Nested arrays on the other hand will be treated as\n    // fragment nodes. Recursion happens at the normal flow.\n\n    // Handle object types\n    var isObject = typeof newChild === 'object' && newChild !== null;\n    if (isObject) {\n      // Support only the subset of return types that Stack supports. Treat\n      // everything else as empty, but log a warning.\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n          return placeSingleChild(reconcileSingleElement(returnFiber, currentFirstChild, newChild, priority));\n\n        case REACT_COROUTINE_TYPE:\n          return placeSingleChild(reconcileSingleCoroutine(returnFiber, currentFirstChild, newChild, priority));\n\n        case REACT_YIELD_TYPE:\n          return placeSingleChild(reconcileSingleYield(returnFiber, currentFirstChild, newChild, priority));\n\n        case REACT_PORTAL_TYPE:\n          return placeSingleChild(reconcileSinglePortal(returnFiber, currentFirstChild, newChild, priority));\n      }\n    }\n\n    if (typeof newChild === 'string' || typeof newChild === 'number') {\n      return placeSingleChild(reconcileSingleTextNode(returnFiber, currentFirstChild, '' + newChild, priority));\n    }\n\n    if (isArray(newChild)) {\n      return reconcileChildrenArray(returnFiber, currentFirstChild, newChild, priority);\n    }\n\n    if (getIteratorFn(newChild)) {\n      return reconcileChildrenIterator(returnFiber, currentFirstChild, newChild, priority);\n    }\n\n    if (isObject) {\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n\n    {\n      if (typeof newChild === 'function') {\n        warnOnFunctionType();\n      }\n    }\n    if (typeof newChild === 'undefined') {\n      // If the new child is undefined, and the return fiber is a composite\n      // component, throw an error. If Fiber return types are disabled,\n      // we already threw above.\n      switch (returnFiber.tag) {\n        case ClassComponent$7:\n          {\n            {\n              var instance = returnFiber.stateNode;\n              if (instance.render._isMockFunction) {\n                // We allow auto-mocks to proceed as if they're returning null.\n                break;\n              }\n            }\n          }\n        // Intentionally fall through to the next case, which handles both\n        // functions and classes\n        // eslint-disable-next-lined no-fallthrough\n        case FunctionalComponent$2:\n          {\n            var Component = returnFiber.type;\n            invariant(false, '%s(...): Nothing was returned from render. This usually means a return statement is missing. Or, to render nothing, return null.', Component.displayName || Component.name || 'Component');\n          }\n      }\n    }\n\n    // Remaining cases are all treated as empty.\n    return deleteRemainingChildren(returnFiber, currentFirstChild);\n  }",
      "children": [
        {
          "type": "function",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 8
          },
          "text": "function"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 9
          },
          "end": {
            "row": 0,
            "column": 29
          },
          "text": "reconcileChildFibers"
        },
        {
          "type": "formal_parameters",
          "start": {
            "row": 0,
            "column": 29
          },
          "end": {
            "row": 0,
            "column": 81
          },
          "text": "(returnFiber, currentFirstChild, newChild, priority)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 29
              },
              "end": {
                "row": 0,
                "column": 30
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 30
              },
              "end": {
                "row": 0,
                "column": 41
              },
              "text": "returnFiber"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 41
              },
              "end": {
                "row": 0,
                "column": 42
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 43
              },
              "end": {
                "row": 0,
                "column": 60
              },
              "text": "currentFirstChild"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 60
              },
              "end": {
                "row": 0,
                "column": 61
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 62
              },
              "end": {
                "row": 0,
                "column": 70
              },
              "text": "newChild"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 70
              },
              "end": {
                "row": 0,
                "column": 71
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 72
              },
              "end": {
                "row": 0,
                "column": 80
              },
              "text": "priority"
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 80
              },
              "end": {
                "row": 0,
                "column": 81
              },
              "text": ")"
            }
          ]
        },
        {
          "type": "statement_block",
          "start": {
            "row": 0,
            "column": 82
          },
          "end": {
            "row": 75,
            "column": 3
          },
          "text": "{\n    // This function is not recursive.\n    // If the top level item is an array, we treat it as a set of children,\n    // not as a fragment. Nested arrays on the other hand will be treated as\n    // fragment nodes. Recursion happens at the normal flow.\n\n    // Handle object types\n    var isObject = typeof newChild === 'object' && newChild !== null;\n    if (isObject) {\n      // Support only the subset of return types that Stack supports. Treat\n      // everything else as empty, but log a warning.\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n          return placeSingleChild(reconcileSingleElement(returnFiber, currentFirstChild, newChild, priority));\n\n        case REACT_COROUTINE_TYPE:\n          return placeSingleChild(reconcileSingleCoroutine(returnFiber, currentFirstChild, newChild, priority));\n\n        case REACT_YIELD_TYPE:\n          return placeSingleChild(reconcileSingleYield(returnFiber, currentFirstChild, newChild, priority));\n\n        case REACT_PORTAL_TYPE:\n          return placeSingleChild(reconcileSinglePortal(returnFiber, currentFirstChild, newChild, priority));\n      }\n    }\n\n    if (typeof newChild === 'string' || typeof newChild === 'number') {\n      return placeSingleChild(reconcileSingleTextNode(returnFiber, currentFirstChild, '' + newChild, priority));\n    }\n\n    if (isArray(newChild)) {\n      return reconcileChildrenArray(returnFiber, currentFirstChild, newChild, priority);\n    }\n\n    if (getIteratorFn(newChild)) {\n      return reconcileChildrenIterator(returnFiber, currentFirstChild, newChild, priority);\n    }\n\n    if (isObject) {\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n\n    {\n      if (typeof newChild === 'function') {\n        warnOnFunctionType();\n      }\n    }\n    if (typeof newChild === 'undefined') {\n      // If the new child is undefined, and the return fiber is a composite\n      // component, throw an error. If Fiber return types are disabled,\n      // we already threw above.\n      switch (returnFiber.tag) {\n        case ClassComponent$7:\n          {\n            {\n              var instance = returnFiber.stateNode;\n              if (instance.render._isMockFunction) {\n                // We allow auto-mocks to proceed as if they're returning null.\n                break;\n              }\n            }\n          }\n        // Intentionally fall through to the next case, which handles both\n        // functions and classes\n        // eslint-disable-next-lined no-fallthrough\n        case FunctionalComponent$2:\n          {\n            var Component = returnFiber.type;\n            invariant(false, '%s(...): Nothing was returned from render. This usually means a return statement is missing. Or, to render nothing, return null.', Component.displayName || Component.name || 'Component');\n          }\n      }\n    }\n\n    // Remaining cases are all treated as empty.\n    return deleteRemainingChildren(returnFiber, currentFirstChild);\n  }",
          "children": [
            {
              "type": "{",
              "start": {
                "row": 0,
                "column": 82
              },
              "end": {
                "row": 0,
                "column": 83
              },
              "text": "{"
            },
            {
              "type": "comment",
              "start": {
                "row": 1,
                "column": 4
              },
              "end": {
                "row": 1,
                "column": 38
              },
              "text": "// This function is not recursive."
            },
            {
              "type": "comment",
              "start": {
                "row": 2,
                "column": 4
              },
              "end": {
                "row": 2,
                "column": 75
              },
              "text": "// If the top level item is an array, we treat it as a set of children,"
            },
            {
              "type": "comment",
              "start": {
                "row": 3,
                "column": 4
              },
              "end": {
                "row": 3,
                "column": 76
              },
              "text": "// not as a fragment. Nested arrays on the other hand will be treated as"
            },
            {
              "type": "comment",
              "start": {
                "row": 4,
                "column": 4
              },
              "end": {
                "row": 4,
                "column": 60
              },
              "text": "// fragment nodes. Recursion happens at the normal flow."
            },
            {
              "type": "comment",
              "start": {
                "row": 6,
                "column": 4
              },
              "end": {
                "row": 6,
                "column": 26
              },
              "text": "// Handle object types"
            },
            {
              "type": "variable_declaration",
              "start": {
                "row": 7,
                "column": 4
              },
              "end": {
                "row": 7,
                "column": 69
              },
              "text": "var isObject = typeof newChild === 'object' && newChild !== null;",
              "children": [
                {
                  "type": "var",
                  "start": {
                    "row": 7,
                    "column": 4
                  },
                  "end": {
                    "row": 7,
                    "column": 7
                  },
                  "text": "var"
                },
                {
                  "type": "variable_declarator",
                  "start": {
                    "row": 7,
                    "column": 8
                  },
                  "end": {
                    "row": 7,
                    "column": 68
                  },
                  "text": "isObject = typeof newChild === 'object' && newChild !== null",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 7,
                        "column": 8
                      },
                      "end": {
                        "row": 7,
                        "column": 16
                      },
                      "text": "isObject"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 7,
                        "column": 17
                      },
                      "end": {
                        "row": 7,
                        "column": 18
                      },
                      "text": "="
                    },
                    {
                      "type": "binary_expression",
                      "start": {
                        "row": 7,
                        "column": 19
                      },
                      "end": {
                        "row": 7,
                        "column": 68
                      },
                      "text": "typeof newChild === 'object' && newChild !== null",
                      "children": [
                        {
                          "type": "binary_expression",
                          "start": {
                            "row": 7,
                            "column": 19
                          },
                          "end": {
                            "row": 7,
                            "column": 47
                          },
                          "text": "typeof newChild === 'object'",
                          "children": [
                            {
                              "type": "unary_expression",
                              "start": {
                                "row": 7,
                                "column": 19
                              },
                              "end": {
                                "row": 7,
                                "column": 34
                              },
                              "text": "typeof newChild",
                              "children": [
                                {
                                  "type": "typeof",
                                  "start": {
                                    "row": 7,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 7,
                                    "column": 25
                                  },
                                  "text": "typeof"
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 7,
                                    "column": 26
                                  },
                                  "end": {
                                    "row": 7,
                                    "column": 34
                                  },
                                  "text": "newChild"
                                }
                              ]
                            },
                            {
                              "type": "===",
                              "start": {
                                "row": 7,
                                "column": 35
                              },
                              "end": {
                                "row": 7,
                                "column": 38
                              },
                              "text": "==="
                            },
                            {
                              "type": "string",
                              "start": {
                                "row": 7,
                                "column": 39
                              },
                              "end": {
                                "row": 7,
                                "column": 47
                              },
                              "text": "'object'",
                              "children": [
                                {
                                  "type": "'",
                                  "start": {
                                    "row": 7,
                                    "column": 39
                                  },
                                  "end": {
                                    "row": 7,
                                    "column": 40
                                  },
                                  "text": "'"
                                },
                                {
                                  "type": "string_fragment",
                                  "start": {
                                    "row": 7,
                                    "column": 40
                                  },
                                  "end": {
                                    "row": 7,
                                    "column": 46
                                  },
                                  "text": "object"
                                },
                                {
                                  "type": "'",
                                  "start": {
                                    "row": 7,
                                    "column": 46
                                  },
                                  "end": {
                                    "row": 7,
                                    "column": 47
                                  },
                                  "text": "'"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "&&",
                          "start": {
                            "row": 7,
                            "column": 48
                          },
                          "end": {
                            "row": 7,
                            "column": 50
                          },
                          "text": "&&"
                        },
                        {
                          "type": "binary_expression",
                          "start": {
                            "row": 7,
                            "column": 51
                          },
                          "end": {
                            "row": 7,
                            "column": 68
                          },
                          "text": "newChild !== null",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 7,
                                "column": 51
                              },
                              "end": {
                                "row": 7,
                                "column": 59
                              },
                              "text": "newChild"
                            },
                            {
                              "type": "!==",
                              "start": {
                                "row": 7,
                                "column": 60
                              },
                              "end": {
                                "row": 7,
                                "column": 63
                              },
                              "text": "!=="
                            },
                            {
                              "type": "null",
                              "start": {
                                "row": 7,
                                "column": 64
                              },
                              "end": {
                                "row": 7,
                                "column": 68
                              },
                              "text": "null"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 7,
                    "column": 68
                  },
                  "end": {
                    "row": 7,
                    "column": 69
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 8,
                "column": 4
              },
              "end": {
                "row": 24,
                "column": 5
              },
              "text": "if (isObject) {\n      // Support only the subset of return types that Stack supports. Treat\n      // everything else as empty, but log a warning.\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n          return placeSingleChild(reconcileSingleElement(returnFiber, currentFirstChild, newChild, priority));\n\n        case REACT_COROUTINE_TYPE:\n          return placeSingleChild(reconcileSingleCoroutine(returnFiber, currentFirstChild, newChild, priority));\n\n        case REACT_YIELD_TYPE:\n          return placeSingleChild(reconcileSingleYield(returnFiber, currentFirstChild, newChild, priority));\n\n        case REACT_PORTAL_TYPE:\n          return placeSingleChild(reconcileSinglePortal(returnFiber, currentFirstChild, newChild, priority));\n      }\n    }",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 8,
                    "column": 4
                  },
                  "end": {
                    "row": 8,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "parenthesized_expression",
                  "start": {
                    "row": 8,
                    "column": 7
                  },
                  "end": {
                    "row": 8,
                    "column": 17
                  },
                  "text": "(isObject)",
                  "children": [
                    {
                      "type": "(",
                      "start": {
                        "row": 8,
                        "column": 7
                      },
                      "end": {
                        "row": 8,
                        "column": 8
                      },
                      "text": "("
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 8,
                        "column": 8
                      },
                      "end": {
                        "row": 8,
                        "column": 16
                      },
                      "text": "isObject"
                    },
                    {
                      "type": ")",
                      "start": {
                        "row": 8,
                        "column": 16
                      },
                      "end": {
                        "row": 8,
                        "column": 17
                      },
                      "text": ")"
                    }
                  ]
                },
                {
                  "type": "statement_block",
                  "start": {
                    "row": 8,
                    "column": 18
                  },
                  "end": {
                    "row": 24,
                    "column": 5
                  },
                  "text": "{\n      // Support only the subset of return types that Stack supports. Treat\n      // everything else as empty, but log a warning.\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n          return placeSingleChild(reconcileSingleElement(returnFiber, currentFirstChild, newChild, priority));\n\n        case REACT_COROUTINE_TYPE:\n          return placeSingleChild(reconcileSingleCoroutine(returnFiber, currentFirstChild, newChild, priority));\n\n        case REACT_YIELD_TYPE:\n          return placeSingleChild(reconcileSingleYield(returnFiber, currentFirstChild, newChild, priority));\n\n        case REACT_PORTAL_TYPE:\n          return placeSingleChild(reconcileSinglePortal(returnFiber, currentFirstChild, newChild, priority));\n      }\n    }",
                  "children": [
                    {
                      "type": "{",
                      "start": {
                        "row": 8,
                        "column": 18
                      },
                      "end": {
                        "row": 8,
                        "column": 19
                      },
                      "text": "{"
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 9,
                        "column": 6
                      },
                      "end": {
                        "row": 9,
                        "column": 75
                      },
                      "text": "// Support only the subset of return types that Stack supports. Treat"
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 10,
                        "column": 6
                      },
                      "end": {
                        "row": 10,
                        "column": 53
                      },
                      "text": "// everything else as empty, but log a warning."
                    },
                    {
                      "type": "switch_statement",
                      "start": {
                        "row": 11,
                        "column": 6
                      },
                      "end": {
                        "row": 23,
                        "column": 7
                      },
                      "text": "switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n          return placeSingleChild(reconcileSingleElement(returnFiber, currentFirstChild, newChild, priority));\n\n        case REACT_COROUTINE_TYPE:\n          return placeSingleChild(reconcileSingleCoroutine(returnFiber, currentFirstChild, newChild, priority));\n\n        case REACT_YIELD_TYPE:\n          return placeSingleChild(reconcileSingleYield(returnFiber, currentFirstChild, newChild, priority));\n\n        case REACT_PORTAL_TYPE:\n          return placeSingleChild(reconcileSinglePortal(returnFiber, currentFirstChild, newChild, priority));\n      }",
                      "children": [
                        {
                          "type": "switch",
                          "start": {
                            "row": 11,
                            "column": 6
                          },
                          "end": {
                            "row": 11,
                            "column": 12
                          },
                          "text": "switch"
                        },
                        {
                          "type": "parenthesized_expression",
                          "start": {
                            "row": 11,
                            "column": 13
                          },
                          "end": {
                            "row": 11,
                            "column": 32
                          },
                          "text": "(newChild.$$typeof)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 11,
                                "column": 13
                              },
                              "end": {
                                "row": 11,
                                "column": 14
                              },
                              "text": "("
                            },
                            {
                              "type": "member_expression",
                              "start": {
                                "row": 11,
                                "column": 14
                              },
                              "end": {
                                "row": 11,
                                "column": 31
                              },
                              "text": "newChild.$$typeof",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 11,
                                    "column": 14
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 22
                                  },
                                  "text": "newChild"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 11,
                                    "column": 22
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 23
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "property_identifier",
                                  "start": {
                                    "row": 11,
                                    "column": 23
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 31
                                  },
                                  "text": "$$typeof"
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 11,
                                "column": 31
                              },
                              "end": {
                                "row": 11,
                                "column": 32
                              },
                              "text": ")"
                            }
                          ]
                        },
                        {
                          "type": "switch_body",
                          "start": {
                            "row": 11,
                            "column": 33
                          },
                          "end": {
                            "row": 23,
                            "column": 7
                          },
                          "text": "{\n        case REACT_ELEMENT_TYPE:\n          return placeSingleChild(reconcileSingleElement(returnFiber, currentFirstChild, newChild, priority));\n\n        case REACT_COROUTINE_TYPE:\n          return placeSingleChild(reconcileSingleCoroutine(returnFiber, currentFirstChild, newChild, priority));\n\n        case REACT_YIELD_TYPE:\n          return placeSingleChild(reconcileSingleYield(returnFiber, currentFirstChild, newChild, priority));\n\n        case REACT_PORTAL_TYPE:\n          return placeSingleChild(reconcileSinglePortal(returnFiber, currentFirstChild, newChild, priority));\n      }",
                          "children": [
                            {
                              "type": "{",
                              "start": {
                                "row": 11,
                                "column": 33
                              },
                              "end": {
                                "row": 11,
                                "column": 34
                              },
                              "text": "{"
                            },
                            {
                              "type": "switch_case",
                              "start": {
                                "row": 12,
                                "column": 8
                              },
                              "end": {
                                "row": 13,
                                "column": 110
                              },
                              "text": "case REACT_ELEMENT_TYPE:\n          return placeSingleChild(reconcileSingleElement(returnFiber, currentFirstChild, newChild, priority));",
                              "children": [
                                {
                                  "type": "case",
                                  "start": {
                                    "row": 12,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 12,
                                    "column": 12
                                  },
                                  "text": "case"
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 12,
                                    "column": 13
                                  },
                                  "end": {
                                    "row": 12,
                                    "column": 31
                                  },
                                  "text": "REACT_ELEMENT_TYPE"
                                },
                                {
                                  "type": ":",
                                  "start": {
                                    "row": 12,
                                    "column": 31
                                  },
                                  "end": {
                                    "row": 12,
                                    "column": 32
                                  },
                                  "text": ":"
                                },
                                {
                                  "type": "return_statement",
                                  "start": {
                                    "row": 13,
                                    "column": 10
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 110
                                  },
                                  "text": "return placeSingleChild(reconcileSingleElement(returnFiber, currentFirstChild, newChild, priority));",
                                  "children": [
                                    {
                                      "type": "return",
                                      "start": {
                                        "row": 13,
                                        "column": 10
                                      },
                                      "end": {
                                        "row": 13,
                                        "column": 16
                                      },
                                      "text": "return"
                                    },
                                    {
                                      "type": "call_expression",
                                      "start": {
                                        "row": 13,
                                        "column": 17
                                      },
                                      "end": {
                                        "row": 13,
                                        "column": 109
                                      },
                                      "text": "placeSingleChild(reconcileSingleElement(returnFiber, currentFirstChild, newChild, priority))",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 13,
                                            "column": 17
                                          },
                                          "end": {
                                            "row": 13,
                                            "column": 33
                                          },
                                          "text": "placeSingleChild"
                                        },
                                        {
                                          "type": "arguments",
                                          "start": {
                                            "row": 13,
                                            "column": 33
                                          },
                                          "end": {
                                            "row": 13,
                                            "column": 109
                                          },
                                          "text": "(reconcileSingleElement(returnFiber, currentFirstChild, newChild, priority))",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 13,
                                                "column": 33
                                              },
                                              "end": {
                                                "row": 13,
                                                "column": 34
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "call_expression",
                                              "start": {
                                                "row": 13,
                                                "column": 34
                                              },
                                              "end": {
                                                "row": 13,
                                                "column": 108
                                              },
                                              "text": "reconcileSingleElement(returnFiber, currentFirstChild, newChild, priority)",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 13,
                                                    "column": 34
                                                  },
                                                  "end": {
                                                    "row": 13,
                                                    "column": 56
                                                  },
                                                  "text": "reconcileSingleElement"
                                                },
                                                {
                                                  "type": "arguments",
                                                  "start": {
                                                    "row": 13,
                                                    "column": 56
                                                  },
                                                  "end": {
                                                    "row": 13,
                                                    "column": 108
                                                  },
                                                  "text": "(returnFiber, currentFirstChild, newChild, priority)",
                                                  "children": [
                                                    {
                                                      "type": "(",
                                                      "start": {
                                                        "row": 13,
                                                        "column": 56
                                                      },
                                                      "end": {
                                                        "row": 13,
                                                        "column": 57
                                                      },
                                                      "text": "("
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 13,
                                                        "column": 57
                                                      },
                                                      "end": {
                                                        "row": 13,
                                                        "column": 68
                                                      },
                                                      "text": "returnFiber"
                                                    },
                                                    {
                                                      "type": ",",
                                                      "start": {
                                                        "row": 13,
                                                        "column": 68
                                                      },
                                                      "end": {
                                                        "row": 13,
                                                        "column": 69
                                                      },
                                                      "text": ","
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 13,
                                                        "column": 70
                                                      },
                                                      "end": {
                                                        "row": 13,
                                                        "column": 87
                                                      },
                                                      "text": "currentFirstChild"
                                                    },
                                                    {
                                                      "type": ",",
                                                      "start": {
                                                        "row": 13,
                                                        "column": 87
                                                      },
                                                      "end": {
                                                        "row": 13,
                                                        "column": 88
                                                      },
                                                      "text": ","
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 13,
                                                        "column": 89
                                                      },
                                                      "end": {
                                                        "row": 13,
                                                        "column": 97
                                                      },
                                                      "text": "newChild"
                                                    },
                                                    {
                                                      "type": ",",
                                                      "start": {
                                                        "row": 13,
                                                        "column": 97
                                                      },
                                                      "end": {
                                                        "row": 13,
                                                        "column": 98
                                                      },
                                                      "text": ","
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 13,
                                                        "column": 99
                                                      },
                                                      "end": {
                                                        "row": 13,
                                                        "column": 107
                                                      },
                                                      "text": "priority"
                                                    },
                                                    {
                                                      "type": ")",
                                                      "start": {
                                                        "row": 13,
                                                        "column": 107
                                                      },
                                                      "end": {
                                                        "row": 13,
                                                        "column": 108
                                                      },
                                                      "text": ")"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 13,
                                                "column": 108
                                              },
                                              "end": {
                                                "row": 13,
                                                "column": 109
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start": {
                                        "row": 13,
                                        "column": 109
                                      },
                                      "end": {
                                        "row": 13,
                                        "column": 110
                                      },
                                      "text": ";"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "switch_case",
                              "start": {
                                "row": 15,
                                "column": 8
                              },
                              "end": {
                                "row": 16,
                                "column": 112
                              },
                              "text": "case REACT_COROUTINE_TYPE:\n          return placeSingleChild(reconcileSingleCoroutine(returnFiber, currentFirstChild, newChild, priority));",
                              "children": [
                                {
                                  "type": "case",
                                  "start": {
                                    "row": 15,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 15,
                                    "column": 12
                                  },
                                  "text": "case"
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 15,
                                    "column": 13
                                  },
                                  "end": {
                                    "row": 15,
                                    "column": 33
                                  },
                                  "text": "REACT_COROUTINE_TYPE"
                                },
                                {
                                  "type": ":",
                                  "start": {
                                    "row": 15,
                                    "column": 33
                                  },
                                  "end": {
                                    "row": 15,
                                    "column": 34
                                  },
                                  "text": ":"
                                },
                                {
                                  "type": "return_statement",
                                  "start": {
                                    "row": 16,
                                    "column": 10
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 112
                                  },
                                  "text": "return placeSingleChild(reconcileSingleCoroutine(returnFiber, currentFirstChild, newChild, priority));",
                                  "children": [
                                    {
                                      "type": "return",
                                      "start": {
                                        "row": 16,
                                        "column": 10
                                      },
                                      "end": {
                                        "row": 16,
                                        "column": 16
                                      },
                                      "text": "return"
                                    },
                                    {
                                      "type": "call_expression",
                                      "start": {
                                        "row": 16,
                                        "column": 17
                                      },
                                      "end": {
                                        "row": 16,
                                        "column": 111
                                      },
                                      "text": "placeSingleChild(reconcileSingleCoroutine(returnFiber, currentFirstChild, newChild, priority))",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 16,
                                            "column": 17
                                          },
                                          "end": {
                                            "row": 16,
                                            "column": 33
                                          },
                                          "text": "placeSingleChild"
                                        },
                                        {
                                          "type": "arguments",
                                          "start": {
                                            "row": 16,
                                            "column": 33
                                          },
                                          "end": {
                                            "row": 16,
                                            "column": 111
                                          },
                                          "text": "(reconcileSingleCoroutine(returnFiber, currentFirstChild, newChild, priority))",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 16,
                                                "column": 33
                                              },
                                              "end": {
                                                "row": 16,
                                                "column": 34
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "call_expression",
                                              "start": {
                                                "row": 16,
                                                "column": 34
                                              },
                                              "end": {
                                                "row": 16,
                                                "column": 110
                                              },
                                              "text": "reconcileSingleCoroutine(returnFiber, currentFirstChild, newChild, priority)",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 16,
                                                    "column": 34
                                                  },
                                                  "end": {
                                                    "row": 16,
                                                    "column": 58
                                                  },
                                                  "text": "reconcileSingleCoroutine"
                                                },
                                                {
                                                  "type": "arguments",
                                                  "start": {
                                                    "row": 16,
                                                    "column": 58
                                                  },
                                                  "end": {
                                                    "row": 16,
                                                    "column": 110
                                                  },
                                                  "text": "(returnFiber, currentFirstChild, newChild, priority)",
                                                  "children": [
                                                    {
                                                      "type": "(",
                                                      "start": {
                                                        "row": 16,
                                                        "column": 58
                                                      },
                                                      "end": {
                                                        "row": 16,
                                                        "column": 59
                                                      },
                                                      "text": "("
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 16,
                                                        "column": 59
                                                      },
                                                      "end": {
                                                        "row": 16,
                                                        "column": 70
                                                      },
                                                      "text": "returnFiber"
                                                    },
                                                    {
                                                      "type": ",",
                                                      "start": {
                                                        "row": 16,
                                                        "column": 70
                                                      },
                                                      "end": {
                                                        "row": 16,
                                                        "column": 71
                                                      },
                                                      "text": ","
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 16,
                                                        "column": 72
                                                      },
                                                      "end": {
                                                        "row": 16,
                                                        "column": 89
                                                      },
                                                      "text": "currentFirstChild"
                                                    },
                                                    {
                                                      "type": ",",
                                                      "start": {
                                                        "row": 16,
                                                        "column": 89
                                                      },
                                                      "end": {
                                                        "row": 16,
                                                        "column": 90
                                                      },
                                                      "text": ","
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 16,
                                                        "column": 91
                                                      },
                                                      "end": {
                                                        "row": 16,
                                                        "column": 99
                                                      },
                                                      "text": "newChild"
                                                    },
                                                    {
                                                      "type": ",",
                                                      "start": {
                                                        "row": 16,
                                                        "column": 99
                                                      },
                                                      "end": {
                                                        "row": 16,
                                                        "column": 100
                                                      },
                                                      "text": ","
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 16,
                                                        "column": 101
                                                      },
                                                      "end": {
                                                        "row": 16,
                                                        "column": 109
                                                      },
                                                      "text": "priority"
                                                    },
                                                    {
                                                      "type": ")",
                                                      "start": {
                                                        "row": 16,
                                                        "column": 109
                                                      },
                                                      "end": {
                                                        "row": 16,
                                                        "column": 110
                                                      },
                                                      "text": ")"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 16,
                                                "column": 110
                                              },
                                              "end": {
                                                "row": 16,
                                                "column": 111
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start": {
                                        "row": 16,
                                        "column": 111
                                      },
                                      "end": {
                                        "row": 16,
                                        "column": 112
                                      },
                                      "text": ";"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "switch_case",
                              "start": {
                                "row": 18,
                                "column": 8
                              },
                              "end": {
                                "row": 19,
                                "column": 108
                              },
                              "text": "case REACT_YIELD_TYPE:\n          return placeSingleChild(reconcileSingleYield(returnFiber, currentFirstChild, newChild, priority));",
                              "children": [
                                {
                                  "type": "case",
                                  "start": {
                                    "row": 18,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 18,
                                    "column": 12
                                  },
                                  "text": "case"
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 18,
                                    "column": 13
                                  },
                                  "end": {
                                    "row": 18,
                                    "column": 29
                                  },
                                  "text": "REACT_YIELD_TYPE"
                                },
                                {
                                  "type": ":",
                                  "start": {
                                    "row": 18,
                                    "column": 29
                                  },
                                  "end": {
                                    "row": 18,
                                    "column": 30
                                  },
                                  "text": ":"
                                },
                                {
                                  "type": "return_statement",
                                  "start": {
                                    "row": 19,
                                    "column": 10
                                  },
                                  "end": {
                                    "row": 19,
                                    "column": 108
                                  },
                                  "text": "return placeSingleChild(reconcileSingleYield(returnFiber, currentFirstChild, newChild, priority));",
                                  "children": [
                                    {
                                      "type": "return",
                                      "start": {
                                        "row": 19,
                                        "column": 10
                                      },
                                      "end": {
                                        "row": 19,
                                        "column": 16
                                      },
                                      "text": "return"
                                    },
                                    {
                                      "type": "call_expression",
                                      "start": {
                                        "row": 19,
                                        "column": 17
                                      },
                                      "end": {
                                        "row": 19,
                                        "column": 107
                                      },
                                      "text": "placeSingleChild(reconcileSingleYield(returnFiber, currentFirstChild, newChild, priority))",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 19,
                                            "column": 17
                                          },
                                          "end": {
                                            "row": 19,
                                            "column": 33
                                          },
                                          "text": "placeSingleChild"
                                        },
                                        {
                                          "type": "arguments",
                                          "start": {
                                            "row": 19,
                                            "column": 33
                                          },
                                          "end": {
                                            "row": 19,
                                            "column": 107
                                          },
                                          "text": "(reconcileSingleYield(returnFiber, currentFirstChild, newChild, priority))",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 19,
                                                "column": 33
                                              },
                                              "end": {
                                                "row": 19,
                                                "column": 34
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "call_expression",
                                              "start": {
                                                "row": 19,
                                                "column": 34
                                              },
                                              "end": {
                                                "row": 19,
                                                "column": 106
                                              },
                                              "text": "reconcileSingleYield(returnFiber, currentFirstChild, newChild, priority)",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 19,
                                                    "column": 34
                                                  },
                                                  "end": {
                                                    "row": 19,
                                                    "column": 54
                                                  },
                                                  "text": "reconcileSingleYield"
                                                },
                                                {
                                                  "type": "arguments",
                                                  "start": {
                                                    "row": 19,
                                                    "column": 54
                                                  },
                                                  "end": {
                                                    "row": 19,
                                                    "column": 106
                                                  },
                                                  "text": "(returnFiber, currentFirstChild, newChild, priority)",
                                                  "children": [
                                                    {
                                                      "type": "(",
                                                      "start": {
                                                        "row": 19,
                                                        "column": 54
                                                      },
                                                      "end": {
                                                        "row": 19,
                                                        "column": 55
                                                      },
                                                      "text": "("
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 19,
                                                        "column": 55
                                                      },
                                                      "end": {
                                                        "row": 19,
                                                        "column": 66
                                                      },
                                                      "text": "returnFiber"
                                                    },
                                                    {
                                                      "type": ",",
                                                      "start": {
                                                        "row": 19,
                                                        "column": 66
                                                      },
                                                      "end": {
                                                        "row": 19,
                                                        "column": 67
                                                      },
                                                      "text": ","
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 19,
                                                        "column": 68
                                                      },
                                                      "end": {
                                                        "row": 19,
                                                        "column": 85
                                                      },
                                                      "text": "currentFirstChild"
                                                    },
                                                    {
                                                      "type": ",",
                                                      "start": {
                                                        "row": 19,
                                                        "column": 85
                                                      },
                                                      "end": {
                                                        "row": 19,
                                                        "column": 86
                                                      },
                                                      "text": ","
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 19,
                                                        "column": 87
                                                      },
                                                      "end": {
                                                        "row": 19,
                                                        "column": 95
                                                      },
                                                      "text": "newChild"
                                                    },
                                                    {
                                                      "type": ",",
                                                      "start": {
                                                        "row": 19,
                                                        "column": 95
                                                      },
                                                      "end": {
                                                        "row": 19,
                                                        "column": 96
                                                      },
                                                      "text": ","
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 19,
                                                        "column": 97
                                                      },
                                                      "end": {
                                                        "row": 19,
                                                        "column": 105
                                                      },
                                                      "text": "priority"
                                                    },
                                                    {
                                                      "type": ")",
                                                      "start": {
                                                        "row": 19,
                                                        "column": 105
                                                      },
                                                      "end": {
                                                        "row": 19,
                                                        "column": 106
                                                      },
                                                      "text": ")"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 19,
                                                "column": 106
                                              },
                                              "end": {
                                                "row": 19,
                                                "column": 107
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start": {
                                        "row": 19,
                                        "column": 107
                                      },
                                      "end": {
                                        "row": 19,
                                        "column": 108
                                      },
                                      "text": ";"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "switch_case",
                              "start": {
                                "row": 21,
                                "column": 8
                              },
                              "end": {
                                "row": 22,
                                "column": 109
                              },
                              "text": "case REACT_PORTAL_TYPE:\n          return placeSingleChild(reconcileSinglePortal(returnFiber, currentFirstChild, newChild, priority));",
                              "children": [
                                {
                                  "type": "case",
                                  "start": {
                                    "row": 21,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 21,
                                    "column": 12
                                  },
                                  "text": "case"
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 21,
                                    "column": 13
                                  },
                                  "end": {
                                    "row": 21,
                                    "column": 30
                                  },
                                  "text": "REACT_PORTAL_TYPE"
                                },
                                {
                                  "type": ":",
                                  "start": {
                                    "row": 21,
                                    "column": 30
                                  },
                                  "end": {
                                    "row": 21,
                                    "column": 31
                                  },
                                  "text": ":"
                                },
                                {
                                  "type": "return_statement",
                                  "start": {
                                    "row": 22,
                                    "column": 10
                                  },
                                  "end": {
                                    "row": 22,
                                    "column": 109
                                  },
                                  "text": "return placeSingleChild(reconcileSinglePortal(returnFiber, currentFirstChild, newChild, priority));",
                                  "children": [
                                    {
                                      "type": "return",
                                      "start": {
                                        "row": 22,
                                        "column": 10
                                      },
                                      "end": {
                                        "row": 22,
                                        "column": 16
                                      },
                                      "text": "return"
                                    },
                                    {
                                      "type": "call_expression",
                                      "start": {
                                        "row": 22,
                                        "column": 17
                                      },
                                      "end": {
                                        "row": 22,
                                        "column": 108
                                      },
                                      "text": "placeSingleChild(reconcileSinglePortal(returnFiber, currentFirstChild, newChild, priority))",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 22,
                                            "column": 17
                                          },
                                          "end": {
                                            "row": 22,
                                            "column": 33
                                          },
                                          "text": "placeSingleChild"
                                        },
                                        {
                                          "type": "arguments",
                                          "start": {
                                            "row": 22,
                                            "column": 33
                                          },
                                          "end": {
                                            "row": 22,
                                            "column": 108
                                          },
                                          "text": "(reconcileSinglePortal(returnFiber, currentFirstChild, newChild, priority))",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 22,
                                                "column": 33
                                              },
                                              "end": {
                                                "row": 22,
                                                "column": 34
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "call_expression",
                                              "start": {
                                                "row": 22,
                                                "column": 34
                                              },
                                              "end": {
                                                "row": 22,
                                                "column": 107
                                              },
                                              "text": "reconcileSinglePortal(returnFiber, currentFirstChild, newChild, priority)",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 22,
                                                    "column": 34
                                                  },
                                                  "end": {
                                                    "row": 22,
                                                    "column": 55
                                                  },
                                                  "text": "reconcileSinglePortal"
                                                },
                                                {
                                                  "type": "arguments",
                                                  "start": {
                                                    "row": 22,
                                                    "column": 55
                                                  },
                                                  "end": {
                                                    "row": 22,
                                                    "column": 107
                                                  },
                                                  "text": "(returnFiber, currentFirstChild, newChild, priority)",
                                                  "children": [
                                                    {
                                                      "type": "(",
                                                      "start": {
                                                        "row": 22,
                                                        "column": 55
                                                      },
                                                      "end": {
                                                        "row": 22,
                                                        "column": 56
                                                      },
                                                      "text": "("
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 22,
                                                        "column": 56
                                                      },
                                                      "end": {
                                                        "row": 22,
                                                        "column": 67
                                                      },
                                                      "text": "returnFiber"
                                                    },
                                                    {
                                                      "type": ",",
                                                      "start": {
                                                        "row": 22,
                                                        "column": 67
                                                      },
                                                      "end": {
                                                        "row": 22,
                                                        "column": 68
                                                      },
                                                      "text": ","
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 22,
                                                        "column": 69
                                                      },
                                                      "end": {
                                                        "row": 22,
                                                        "column": 86
                                                      },
                                                      "text": "currentFirstChild"
                                                    },
                                                    {
                                                      "type": ",",
                                                      "start": {
                                                        "row": 22,
                                                        "column": 86
                                                      },
                                                      "end": {
                                                        "row": 22,
                                                        "column": 87
                                                      },
                                                      "text": ","
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 22,
                                                        "column": 88
                                                      },
                                                      "end": {
                                                        "row": 22,
                                                        "column": 96
                                                      },
                                                      "text": "newChild"
                                                    },
                                                    {
                                                      "type": ",",
                                                      "start": {
                                                        "row": 22,
                                                        "column": 96
                                                      },
                                                      "end": {
                                                        "row": 22,
                                                        "column": 97
                                                      },
                                                      "text": ","
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 22,
                                                        "column": 98
                                                      },
                                                      "end": {
                                                        "row": 22,
                                                        "column": 106
                                                      },
                                                      "text": "priority"
                                                    },
                                                    {
                                                      "type": ")",
                                                      "start": {
                                                        "row": 22,
                                                        "column": 106
                                                      },
                                                      "end": {
                                                        "row": 22,
                                                        "column": 107
                                                      },
                                                      "text": ")"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 22,
                                                "column": 107
                                              },
                                              "end": {
                                                "row": 22,
                                                "column": 108
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start": {
                                        "row": 22,
                                        "column": 108
                                      },
                                      "end": {
                                        "row": 22,
                                        "column": 109
                                      },
                                      "text": ";"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start": {
                                "row": 23,
                                "column": 6
                              },
                              "end": {
                                "row": 23,
                                "column": 7
                              },
                              "text": "}"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start": {
                        "row": 24,
                        "column": 4
                      },
                      "end": {
                        "row": 24,
                        "column": 5
                      },
                      "text": "}"
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 26,
                "column": 4
              },
              "end": {
                "row": 28,
                "column": 5
              },
              "text": "if (typeof newChild === 'string' || typeof newChild === 'number') {\n      return placeSingleChild(reconcileSingleTextNode(returnFiber, currentFirstChild, '' + newChild, priority));\n    }",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 26,
                    "column": 4
                  },
                  "end": {
                    "row": 26,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "parenthesized_expression",
                  "start": {
                    "row": 26,
                    "column": 7
                  },
                  "end": {
                    "row": 26,
                    "column": 69
                  },
                  "text": "(typeof newChild === 'string' || typeof newChild === 'number')",
                  "children": [
                    {
                      "type": "(",
                      "start": {
                        "row": 26,
                        "column": 7
                      },
                      "end": {
                        "row": 26,
                        "column": 8
                      },
                      "text": "("
                    },
                    {
                      "type": "binary_expression",
                      "start": {
                        "row": 26,
                        "column": 8
                      },
                      "end": {
                        "row": 26,
                        "column": 68
                      },
                      "text": "typeof newChild === 'string' || typeof newChild === 'number'",
                      "children": [
                        {
                          "type": "binary_expression",
                          "start": {
                            "row": 26,
                            "column": 8
                          },
                          "end": {
                            "row": 26,
                            "column": 36
                          },
                          "text": "typeof newChild === 'string'",
                          "children": [
                            {
                              "type": "unary_expression",
                              "start": {
                                "row": 26,
                                "column": 8
                              },
                              "end": {
                                "row": 26,
                                "column": 23
                              },
                              "text": "typeof newChild",
                              "children": [
                                {
                                  "type": "typeof",
                                  "start": {
                                    "row": 26,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 26,
                                    "column": 14
                                  },
                                  "text": "typeof"
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 26,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 26,
                                    "column": 23
                                  },
                                  "text": "newChild"
                                }
                              ]
                            },
                            {
                              "type": "===",
                              "start": {
                                "row": 26,
                                "column": 24
                              },
                              "end": {
                                "row": 26,
                                "column": 27
                              },
                              "text": "==="
                            },
                            {
                              "type": "string",
                              "start": {
                                "row": 26,
                                "column": 28
                              },
                              "end": {
                                "row": 26,
                                "column": 36
                              },
                              "text": "'string'",
                              "children": [
                                {
                                  "type": "'",
                                  "start": {
                                    "row": 26,
                                    "column": 28
                                  },
                                  "end": {
                                    "row": 26,
                                    "column": 29
                                  },
                                  "text": "'"
                                },
                                {
                                  "type": "string_fragment",
                                  "start": {
                                    "row": 26,
                                    "column": 29
                                  },
                                  "end": {
                                    "row": 26,
                                    "column": 35
                                  },
                                  "text": "string"
                                },
                                {
                                  "type": "'",
                                  "start": {
                                    "row": 26,
                                    "column": 35
                                  },
                                  "end": {
                                    "row": 26,
                                    "column": 36
                                  },
                                  "text": "'"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "||",
                          "start": {
                            "row": 26,
                            "column": 37
                          },
                          "end": {
                            "row": 26,
                            "column": 39
                          },
                          "text": "||"
                        },
                        {
                          "type": "binary_expression",
                          "start": {
                            "row": 26,
                            "column": 40
                          },
                          "end": {
                            "row": 26,
                            "column": 68
                          },
                          "text": "typeof newChild === 'number'",
                          "children": [
                            {
                              "type": "unary_expression",
                              "start": {
                                "row": 26,
                                "column": 40
                              },
                              "end": {
                                "row": 26,
                                "column": 55
                              },
                              "text": "typeof newChild",
                              "children": [
                                {
                                  "type": "typeof",
                                  "start": {
                                    "row": 26,
                                    "column": 40
                                  },
                                  "end": {
                                    "row": 26,
                                    "column": 46
                                  },
                                  "text": "typeof"
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 26,
                                    "column": 47
                                  },
                                  "end": {
                                    "row": 26,
                                    "column": 55
                                  },
                                  "text": "newChild"
                                }
                              ]
                            },
                            {
                              "type": "===",
                              "start": {
                                "row": 26,
                                "column": 56
                              },
                              "end": {
                                "row": 26,
                                "column": 59
                              },
                              "text": "==="
                            },
                            {
                              "type": "string",
                              "start": {
                                "row": 26,
                                "column": 60
                              },
                              "end": {
                                "row": 26,
                                "column": 68
                              },
                              "text": "'number'",
                              "children": [
                                {
                                  "type": "'",
                                  "start": {
                                    "row": 26,
                                    "column": 60
                                  },
                                  "end": {
                                    "row": 26,
                                    "column": 61
                                  },
                                  "text": "'"
                                },
                                {
                                  "type": "string_fragment",
                                  "start": {
                                    "row": 26,
                                    "column": 61
                                  },
                                  "end": {
                                    "row": 26,
                                    "column": 67
                                  },
                                  "text": "number"
                                },
                                {
                                  "type": "'",
                                  "start": {
                                    "row": 26,
                                    "column": 67
                                  },
                                  "end": {
                                    "row": 26,
                                    "column": 68
                                  },
                                  "text": "'"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start": {
                        "row": 26,
                        "column": 68
                      },
                      "end": {
                        "row": 26,
                        "column": 69
                      },
                      "text": ")"
                    }
                  ]
                },
                {
                  "type": "statement_block",
                  "start": {
                    "row": 26,
                    "column": 70
                  },
                  "end": {
                    "row": 28,
                    "column": 5
                  },
                  "text": "{\n      return placeSingleChild(reconcileSingleTextNode(returnFiber, currentFirstChild, '' + newChild, priority));\n    }",
                  "children": [
                    {
                      "type": "{",
                      "start": {
                        "row": 26,
                        "column": 70
                      },
                      "end": {
                        "row": 26,
                        "column": 71
                      },
                      "text": "{"
                    },
                    {
                      "type": "return_statement",
                      "start": {
                        "row": 27,
                        "column": 6
                      },
                      "end": {
                        "row": 27,
                        "column": 112
                      },
                      "text": "return placeSingleChild(reconcileSingleTextNode(returnFiber, currentFirstChild, '' + newChild, priority));",
                      "children": [
                        {
                          "type": "return",
                          "start": {
                            "row": 27,
                            "column": 6
                          },
                          "end": {
                            "row": 27,
                            "column": 12
                          },
                          "text": "return"
                        },
                        {
                          "type": "call_expression",
                          "start": {
                            "row": 27,
                            "column": 13
                          },
                          "end": {
                            "row": 27,
                            "column": 111
                          },
                          "text": "placeSingleChild(reconcileSingleTextNode(returnFiber, currentFirstChild, '' + newChild, priority))",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 27,
                                "column": 13
                              },
                              "end": {
                                "row": 27,
                                "column": 29
                              },
                              "text": "placeSingleChild"
                            },
                            {
                              "type": "arguments",
                              "start": {
                                "row": 27,
                                "column": 29
                              },
                              "end": {
                                "row": 27,
                                "column": 111
                              },
                              "text": "(reconcileSingleTextNode(returnFiber, currentFirstChild, '' + newChild, priority))",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 27,
                                    "column": 29
                                  },
                                  "end": {
                                    "row": 27,
                                    "column": 30
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "call_expression",
                                  "start": {
                                    "row": 27,
                                    "column": 30
                                  },
                                  "end": {
                                    "row": 27,
                                    "column": 110
                                  },
                                  "text": "reconcileSingleTextNode(returnFiber, currentFirstChild, '' + newChild, priority)",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 27,
                                        "column": 30
                                      },
                                      "end": {
                                        "row": 27,
                                        "column": 53
                                      },
                                      "text": "reconcileSingleTextNode"
                                    },
                                    {
                                      "type": "arguments",
                                      "start": {
                                        "row": 27,
                                        "column": 53
                                      },
                                      "end": {
                                        "row": 27,
                                        "column": 110
                                      },
                                      "text": "(returnFiber, currentFirstChild, '' + newChild, priority)",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 27,
                                            "column": 53
                                          },
                                          "end": {
                                            "row": 27,
                                            "column": 54
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 27,
                                            "column": 54
                                          },
                                          "end": {
                                            "row": 27,
                                            "column": 65
                                          },
                                          "text": "returnFiber"
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 27,
                                            "column": 65
                                          },
                                          "end": {
                                            "row": 27,
                                            "column": 66
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 27,
                                            "column": 67
                                          },
                                          "end": {
                                            "row": 27,
                                            "column": 84
                                          },
                                          "text": "currentFirstChild"
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 27,
                                            "column": 84
                                          },
                                          "end": {
                                            "row": 27,
                                            "column": 85
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start": {
                                            "row": 27,
                                            "column": 86
                                          },
                                          "end": {
                                            "row": 27,
                                            "column": 99
                                          },
                                          "text": "'' + newChild",
                                          "children": [
                                            {
                                              "type": "string",
                                              "start": {
                                                "row": 27,
                                                "column": 86
                                              },
                                              "end": {
                                                "row": 27,
                                                "column": 88
                                              },
                                              "text": "''",
                                              "children": [
                                                {
                                                  "type": "'",
                                                  "start": {
                                                    "row": 27,
                                                    "column": 86
                                                  },
                                                  "end": {
                                                    "row": 27,
                                                    "column": 87
                                                  },
                                                  "text": "'"
                                                },
                                                {
                                                  "type": "'",
                                                  "start": {
                                                    "row": 27,
                                                    "column": 87
                                                  },
                                                  "end": {
                                                    "row": 27,
                                                    "column": 88
                                                  },
                                                  "text": "'"
                                                }
                                              ]
                                            },
                                            {
                                              "type": "+",
                                              "start": {
                                                "row": 27,
                                                "column": 89
                                              },
                                              "end": {
                                                "row": 27,
                                                "column": 90
                                              },
                                              "text": "+"
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 27,
                                                "column": 91
                                              },
                                              "end": {
                                                "row": 27,
                                                "column": 99
                                              },
                                              "text": "newChild"
                                            }
                                          ]
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 27,
                                            "column": 99
                                          },
                                          "end": {
                                            "row": 27,
                                            "column": 100
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 27,
                                            "column": 101
                                          },
                                          "end": {
                                            "row": 27,
                                            "column": 109
                                          },
                                          "text": "priority"
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 27,
                                            "column": 109
                                          },
                                          "end": {
                                            "row": 27,
                                            "column": 110
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 27,
                                    "column": 110
                                  },
                                  "end": {
                                    "row": 27,
                                    "column": 111
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start": {
                            "row": 27,
                            "column": 111
                          },
                          "end": {
                            "row": 27,
                            "column": 112
                          },
                          "text": ";"
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start": {
                        "row": 28,
                        "column": 4
                      },
                      "end": {
                        "row": 28,
                        "column": 5
                      },
                      "text": "}"
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 30,
                "column": 4
              },
              "end": {
                "row": 32,
                "column": 5
              },
              "text": "if (isArray(newChild)) {\n      return reconcileChildrenArray(returnFiber, currentFirstChild, newChild, priority);\n    }",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 30,
                    "column": 4
                  },
                  "end": {
                    "row": 30,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "parenthesized_expression",
                  "start": {
                    "row": 30,
                    "column": 7
                  },
                  "end": {
                    "row": 30,
                    "column": 26
                  },
                  "text": "(isArray(newChild))",
                  "children": [
                    {
                      "type": "(",
                      "start": {
                        "row": 30,
                        "column": 7
                      },
                      "end": {
                        "row": 30,
                        "column": 8
                      },
                      "text": "("
                    },
                    {
                      "type": "call_expression",
                      "start": {
                        "row": 30,
                        "column": 8
                      },
                      "end": {
                        "row": 30,
                        "column": 25
                      },
                      "text": "isArray(newChild)",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 30,
                            "column": 8
                          },
                          "end": {
                            "row": 30,
                            "column": 15
                          },
                          "text": "isArray"
                        },
                        {
                          "type": "arguments",
                          "start": {
                            "row": 30,
                            "column": 15
                          },
                          "end": {
                            "row": 30,
                            "column": 25
                          },
                          "text": "(newChild)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 30,
                                "column": 15
                              },
                              "end": {
                                "row": 30,
                                "column": 16
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 30,
                                "column": 16
                              },
                              "end": {
                                "row": 30,
                                "column": 24
                              },
                              "text": "newChild"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 30,
                                "column": 24
                              },
                              "end": {
                                "row": 30,
                                "column": 25
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start": {
                        "row": 30,
                        "column": 25
                      },
                      "end": {
                        "row": 30,
                        "column": 26
                      },
                      "text": ")"
                    }
                  ]
                },
                {
                  "type": "statement_block",
                  "start": {
                    "row": 30,
                    "column": 27
                  },
                  "end": {
                    "row": 32,
                    "column": 5
                  },
                  "text": "{\n      return reconcileChildrenArray(returnFiber, currentFirstChild, newChild, priority);\n    }",
                  "children": [
                    {
                      "type": "{",
                      "start": {
                        "row": 30,
                        "column": 27
                      },
                      "end": {
                        "row": 30,
                        "column": 28
                      },
                      "text": "{"
                    },
                    {
                      "type": "return_statement",
                      "start": {
                        "row": 31,
                        "column": 6
                      },
                      "end": {
                        "row": 31,
                        "column": 88
                      },
                      "text": "return reconcileChildrenArray(returnFiber, currentFirstChild, newChild, priority);",
                      "children": [
                        {
                          "type": "return",
                          "start": {
                            "row": 31,
                            "column": 6
                          },
                          "end": {
                            "row": 31,
                            "column": 12
                          },
                          "text": "return"
                        },
                        {
                          "type": "call_expression",
                          "start": {
                            "row": 31,
                            "column": 13
                          },
                          "end": {
                            "row": 31,
                            "column": 87
                          },
                          "text": "reconcileChildrenArray(returnFiber, currentFirstChild, newChild, priority)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 31,
                                "column": 13
                              },
                              "end": {
                                "row": 31,
                                "column": 35
                              },
                              "text": "reconcileChildrenArray"
                            },
                            {
                              "type": "arguments",
                              "start": {
                                "row": 31,
                                "column": 35
                              },
                              "end": {
                                "row": 31,
                                "column": 87
                              },
                              "text": "(returnFiber, currentFirstChild, newChild, priority)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 31,
                                    "column": 35
                                  },
                                  "end": {
                                    "row": 31,
                                    "column": 36
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 31,
                                    "column": 36
                                  },
                                  "end": {
                                    "row": 31,
                                    "column": 47
                                  },
                                  "text": "returnFiber"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 31,
                                    "column": 47
                                  },
                                  "end": {
                                    "row": 31,
                                    "column": 48
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 31,
                                    "column": 49
                                  },
                                  "end": {
                                    "row": 31,
                                    "column": 66
                                  },
                                  "text": "currentFirstChild"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 31,
                                    "column": 66
                                  },
                                  "end": {
                                    "row": 31,
                                    "column": 67
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 31,
                                    "column": 68
                                  },
                                  "end": {
                                    "row": 31,
                                    "column": 76
                                  },
                                  "text": "newChild"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 31,
                                    "column": 76
                                  },
                                  "end": {
                                    "row": 31,
                                    "column": 77
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 31,
                                    "column": 78
                                  },
                                  "end": {
                                    "row": 31,
                                    "column": 86
                                  },
                                  "text": "priority"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 31,
                                    "column": 86
                                  },
                                  "end": {
                                    "row": 31,
                                    "column": 87
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start": {
                            "row": 31,
                            "column": 87
                          },
                          "end": {
                            "row": 31,
                            "column": 88
                          },
                          "text": ";"
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start": {
                        "row": 32,
                        "column": 4
                      },
                      "end": {
                        "row": 32,
                        "column": 5
                      },
                      "text": "}"
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 34,
                "column": 4
              },
              "end": {
                "row": 36,
                "column": 5
              },
              "text": "if (getIteratorFn(newChild)) {\n      return reconcileChildrenIterator(returnFiber, currentFirstChild, newChild, priority);\n    }",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 34,
                    "column": 4
                  },
                  "end": {
                    "row": 34,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "parenthesized_expression",
                  "start": {
                    "row": 34,
                    "column": 7
                  },
                  "end": {
                    "row": 34,
                    "column": 32
                  },
                  "text": "(getIteratorFn(newChild))",
                  "children": [
                    {
                      "type": "(",
                      "start": {
                        "row": 34,
                        "column": 7
                      },
                      "end": {
                        "row": 34,
                        "column": 8
                      },
                      "text": "("
                    },
                    {
                      "type": "call_expression",
                      "start": {
                        "row": 34,
                        "column": 8
                      },
                      "end": {
                        "row": 34,
                        "column": 31
                      },
                      "text": "getIteratorFn(newChild)",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 34,
                            "column": 8
                          },
                          "end": {
                            "row": 34,
                            "column": 21
                          },
                          "text": "getIteratorFn"
                        },
                        {
                          "type": "arguments",
                          "start": {
                            "row": 34,
                            "column": 21
                          },
                          "end": {
                            "row": 34,
                            "column": 31
                          },
                          "text": "(newChild)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 34,
                                "column": 21
                              },
                              "end": {
                                "row": 34,
                                "column": 22
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 34,
                                "column": 22
                              },
                              "end": {
                                "row": 34,
                                "column": 30
                              },
                              "text": "newChild"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 34,
                                "column": 30
                              },
                              "end": {
                                "row": 34,
                                "column": 31
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start": {
                        "row": 34,
                        "column": 31
                      },
                      "end": {
                        "row": 34,
                        "column": 32
                      },
                      "text": ")"
                    }
                  ]
                },
                {
                  "type": "statement_block",
                  "start": {
                    "row": 34,
                    "column": 33
                  },
                  "end": {
                    "row": 36,
                    "column": 5
                  },
                  "text": "{\n      return reconcileChildrenIterator(returnFiber, currentFirstChild, newChild, priority);\n    }",
                  "children": [
                    {
                      "type": "{",
                      "start": {
                        "row": 34,
                        "column": 33
                      },
                      "end": {
                        "row": 34,
                        "column": 34
                      },
                      "text": "{"
                    },
                    {
                      "type": "return_statement",
                      "start": {
                        "row": 35,
                        "column": 6
                      },
                      "end": {
                        "row": 35,
                        "column": 91
                      },
                      "text": "return reconcileChildrenIterator(returnFiber, currentFirstChild, newChild, priority);",
                      "children": [
                        {
                          "type": "return",
                          "start": {
                            "row": 35,
                            "column": 6
                          },
                          "end": {
                            "row": 35,
                            "column": 12
                          },
                          "text": "return"
                        },
                        {
                          "type": "call_expression",
                          "start": {
                            "row": 35,
                            "column": 13
                          },
                          "end": {
                            "row": 35,
                            "column": 90
                          },
                          "text": "reconcileChildrenIterator(returnFiber, currentFirstChild, newChild, priority)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 35,
                                "column": 13
                              },
                              "end": {
                                "row": 35,
                                "column": 38
                              },
                              "text": "reconcileChildrenIterator"
                            },
                            {
                              "type": "arguments",
                              "start": {
                                "row": 35,
                                "column": 38
                              },
                              "end": {
                                "row": 35,
                                "column": 90
                              },
                              "text": "(returnFiber, currentFirstChild, newChild, priority)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 35,
                                    "column": 38
                                  },
                                  "end": {
                                    "row": 35,
                                    "column": 39
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 35,
                                    "column": 39
                                  },
                                  "end": {
                                    "row": 35,
                                    "column": 50
                                  },
                                  "text": "returnFiber"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 35,
                                    "column": 50
                                  },
                                  "end": {
                                    "row": 35,
                                    "column": 51
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 35,
                                    "column": 52
                                  },
                                  "end": {
                                    "row": 35,
                                    "column": 69
                                  },
                                  "text": "currentFirstChild"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 35,
                                    "column": 69
                                  },
                                  "end": {
                                    "row": 35,
                                    "column": 70
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 35,
                                    "column": 71
                                  },
                                  "end": {
                                    "row": 35,
                                    "column": 79
                                  },
                                  "text": "newChild"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 35,
                                    "column": 79
                                  },
                                  "end": {
                                    "row": 35,
                                    "column": 80
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 35,
                                    "column": 81
                                  },
                                  "end": {
                                    "row": 35,
                                    "column": 89
                                  },
                                  "text": "priority"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 35,
                                    "column": 89
                                  },
                                  "end": {
                                    "row": 35,
                                    "column": 90
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start": {
                            "row": 35,
                            "column": 90
                          },
                          "end": {
                            "row": 35,
                            "column": 91
                          },
                          "text": ";"
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start": {
                        "row": 36,
                        "column": 4
                      },
                      "end": {
                        "row": 36,
                        "column": 5
                      },
                      "text": "}"
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 38,
                "column": 4
              },
              "end": {
                "row": 40,
                "column": 5
              },
              "text": "if (isObject) {\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 38,
                    "column": 4
                  },
                  "end": {
                    "row": 38,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "parenthesized_expression",
                  "start": {
                    "row": 38,
                    "column": 7
                  },
                  "end": {
                    "row": 38,
                    "column": 17
                  },
                  "text": "(isObject)",
                  "children": [
                    {
                      "type": "(",
                      "start": {
                        "row": 38,
                        "column": 7
                      },
                      "end": {
                        "row": 38,
                        "column": 8
                      },
                      "text": "("
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 38,
                        "column": 8
                      },
                      "end": {
                        "row": 38,
                        "column": 16
                      },
                      "text": "isObject"
                    },
                    {
                      "type": ")",
                      "start": {
                        "row": 38,
                        "column": 16
                      },
                      "end": {
                        "row": 38,
                        "column": 17
                      },
                      "text": ")"
                    }
                  ]
                },
                {
                  "type": "statement_block",
                  "start": {
                    "row": 38,
                    "column": 18
                  },
                  "end": {
                    "row": 40,
                    "column": 5
                  },
                  "text": "{\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }",
                  "children": [
                    {
                      "type": "{",
                      "start": {
                        "row": 38,
                        "column": 18
                      },
                      "end": {
                        "row": 38,
                        "column": 19
                      },
                      "text": "{"
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 39,
                        "column": 6
                      },
                      "end": {
                        "row": 39,
                        "column": 54
                      },
                      "text": "throwOnInvalidObjectType(returnFiber, newChild);",
                      "children": [
                        {
                          "type": "call_expression",
                          "start": {
                            "row": 39,
                            "column": 6
                          },
                          "end": {
                            "row": 39,
                            "column": 53
                          },
                          "text": "throwOnInvalidObjectType(returnFiber, newChild)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 39,
                                "column": 6
                              },
                              "end": {
                                "row": 39,
                                "column": 30
                              },
                              "text": "throwOnInvalidObjectType"
                            },
                            {
                              "type": "arguments",
                              "start": {
                                "row": 39,
                                "column": 30
                              },
                              "end": {
                                "row": 39,
                                "column": 53
                              },
                              "text": "(returnFiber, newChild)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 39,
                                    "column": 30
                                  },
                                  "end": {
                                    "row": 39,
                                    "column": 31
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 39,
                                    "column": 31
                                  },
                                  "end": {
                                    "row": 39,
                                    "column": 42
                                  },
                                  "text": "returnFiber"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 39,
                                    "column": 42
                                  },
                                  "end": {
                                    "row": 39,
                                    "column": 43
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 39,
                                    "column": 44
                                  },
                                  "end": {
                                    "row": 39,
                                    "column": 52
                                  },
                                  "text": "newChild"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 39,
                                    "column": 52
                                  },
                                  "end": {
                                    "row": 39,
                                    "column": 53
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start": {
                            "row": 39,
                            "column": 53
                          },
                          "end": {
                            "row": 39,
                            "column": 54
                          },
                          "text": ";"
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start": {
                        "row": 40,
                        "column": 4
                      },
                      "end": {
                        "row": 40,
                        "column": 5
                      },
                      "text": "}"
                    }
                  ]
                }
              ]
            },
            {
              "type": "statement_block",
              "start": {
                "row": 42,
                "column": 4
              },
              "end": {
                "row": 46,
                "column": 5
              },
              "text": "{\n      if (typeof newChild === 'function') {\n        warnOnFunctionType();\n      }\n    }",
              "children": [
                {
                  "type": "{",
                  "start": {
                    "row": 42,
                    "column": 4
                  },
                  "end": {
                    "row": 42,
                    "column": 5
                  },
                  "text": "{"
                },
                {
                  "type": "if_statement",
                  "start": {
                    "row": 43,
                    "column": 6
                  },
                  "end": {
                    "row": 45,
                    "column": 7
                  },
                  "text": "if (typeof newChild === 'function') {\n        warnOnFunctionType();\n      }",
                  "children": [
                    {
                      "type": "if",
                      "start": {
                        "row": 43,
                        "column": 6
                      },
                      "end": {
                        "row": 43,
                        "column": 8
                      },
                      "text": "if"
                    },
                    {
                      "type": "parenthesized_expression",
                      "start": {
                        "row": 43,
                        "column": 9
                      },
                      "end": {
                        "row": 43,
                        "column": 41
                      },
                      "text": "(typeof newChild === 'function')",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 43,
                            "column": 9
                          },
                          "end": {
                            "row": 43,
                            "column": 10
                          },
                          "text": "("
                        },
                        {
                          "type": "binary_expression",
                          "start": {
                            "row": 43,
                            "column": 10
                          },
                          "end": {
                            "row": 43,
                            "column": 40
                          },
                          "text": "typeof newChild === 'function'",
                          "children": [
                            {
                              "type": "unary_expression",
                              "start": {
                                "row": 43,
                                "column": 10
                              },
                              "end": {
                                "row": 43,
                                "column": 25
                              },
                              "text": "typeof newChild",
                              "children": [
                                {
                                  "type": "typeof",
                                  "start": {
                                    "row": 43,
                                    "column": 10
                                  },
                                  "end": {
                                    "row": 43,
                                    "column": 16
                                  },
                                  "text": "typeof"
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 43,
                                    "column": 17
                                  },
                                  "end": {
                                    "row": 43,
                                    "column": 25
                                  },
                                  "text": "newChild"
                                }
                              ]
                            },
                            {
                              "type": "===",
                              "start": {
                                "row": 43,
                                "column": 26
                              },
                              "end": {
                                "row": 43,
                                "column": 29
                              },
                              "text": "==="
                            },
                            {
                              "type": "string",
                              "start": {
                                "row": 43,
                                "column": 30
                              },
                              "end": {
                                "row": 43,
                                "column": 40
                              },
                              "text": "'function'",
                              "children": [
                                {
                                  "type": "'",
                                  "start": {
                                    "row": 43,
                                    "column": 30
                                  },
                                  "end": {
                                    "row": 43,
                                    "column": 31
                                  },
                                  "text": "'"
                                },
                                {
                                  "type": "string_fragment",
                                  "start": {
                                    "row": 43,
                                    "column": 31
                                  },
                                  "end": {
                                    "row": 43,
                                    "column": 39
                                  },
                                  "text": "function"
                                },
                                {
                                  "type": "'",
                                  "start": {
                                    "row": 43,
                                    "column": 39
                                  },
                                  "end": {
                                    "row": 43,
                                    "column": 40
                                  },
                                  "text": "'"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 43,
                            "column": 40
                          },
                          "end": {
                            "row": 43,
                            "column": 41
                          },
                          "text": ")"
                        }
                      ]
                    },
                    {
                      "type": "statement_block",
                      "start": {
                        "row": 43,
                        "column": 42
                      },
                      "end": {
                        "row": 45,
                        "column": 7
                      },
                      "text": "{\n        warnOnFunctionType();\n      }",
                      "children": [
                        {
                          "type": "{",
                          "start": {
                            "row": 43,
                            "column": 42
                          },
                          "end": {
                            "row": 43,
                            "column": 43
                          },
                          "text": "{"
                        },
                        {
                          "type": "expression_statement",
                          "start": {
                            "row": 44,
                            "column": 8
                          },
                          "end": {
                            "row": 44,
                            "column": 29
                          },
                          "text": "warnOnFunctionType();",
                          "children": [
                            {
                              "type": "call_expression",
                              "start": {
                                "row": 44,
                                "column": 8
                              },
                              "end": {
                                "row": 44,
                                "column": 28
                              },
                              "text": "warnOnFunctionType()",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 44,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 44,
                                    "column": 26
                                  },
                                  "text": "warnOnFunctionType"
                                },
                                {
                                  "type": "arguments",
                                  "start": {
                                    "row": 44,
                                    "column": 26
                                  },
                                  "end": {
                                    "row": 44,
                                    "column": 28
                                  },
                                  "text": "()",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 44,
                                        "column": 26
                                      },
                                      "end": {
                                        "row": 44,
                                        "column": 27
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 44,
                                        "column": 27
                                      },
                                      "end": {
                                        "row": 44,
                                        "column": 28
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start": {
                                "row": 44,
                                "column": 28
                              },
                              "end": {
                                "row": 44,
                                "column": 29
                              },
                              "text": ";"
                            }
                          ]
                        },
                        {
                          "type": "}",
                          "start": {
                            "row": 45,
                            "column": 6
                          },
                          "end": {
                            "row": 45,
                            "column": 7
                          },
                          "text": "}"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "}",
                  "start": {
                    "row": 46,
                    "column": 4
                  },
                  "end": {
                    "row": 46,
                    "column": 5
                  },
                  "text": "}"
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 47,
                "column": 4
              },
              "end": {
                "row": 71,
                "column": 5
              },
              "text": "if (typeof newChild === 'undefined') {\n      // If the new child is undefined, and the return fiber is a composite\n      // component, throw an error. If Fiber return types are disabled,\n      // we already threw above.\n      switch (returnFiber.tag) {\n        case ClassComponent$7:\n          {\n            {\n              var instance = returnFiber.stateNode;\n              if (instance.render._isMockFunction) {\n                // We allow auto-mocks to proceed as if they're returning null.\n                break;\n              }\n            }\n          }\n        // Intentionally fall through to the next case, which handles both\n        // functions and classes\n        // eslint-disable-next-lined no-fallthrough\n        case FunctionalComponent$2:\n          {\n            var Component = returnFiber.type;\n            invariant(false, '%s(...): Nothing was returned from render. This usually means a return statement is missing. Or, to render nothing, return null.', Component.displayName || Component.name || 'Component');\n          }\n      }\n    }",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 47,
                    "column": 4
                  },
                  "end": {
                    "row": 47,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "parenthesized_expression",
                  "start": {
                    "row": 47,
                    "column": 7
                  },
                  "end": {
                    "row": 47,
                    "column": 40
                  },
                  "text": "(typeof newChild === 'undefined')",
                  "children": [
                    {
                      "type": "(",
                      "start": {
                        "row": 47,
                        "column": 7
                      },
                      "end": {
                        "row": 47,
                        "column": 8
                      },
                      "text": "("
                    },
                    {
                      "type": "binary_expression",
                      "start": {
                        "row": 47,
                        "column": 8
                      },
                      "end": {
                        "row": 47,
                        "column": 39
                      },
                      "text": "typeof newChild === 'undefined'",
                      "children": [
                        {
                          "type": "unary_expression",
                          "start": {
                            "row": 47,
                            "column": 8
                          },
                          "end": {
                            "row": 47,
                            "column": 23
                          },
                          "text": "typeof newChild",
                          "children": [
                            {
                              "type": "typeof",
                              "start": {
                                "row": 47,
                                "column": 8
                              },
                              "end": {
                                "row": 47,
                                "column": 14
                              },
                              "text": "typeof"
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 47,
                                "column": 15
                              },
                              "end": {
                                "row": 47,
                                "column": 23
                              },
                              "text": "newChild"
                            }
                          ]
                        },
                        {
                          "type": "===",
                          "start": {
                            "row": 47,
                            "column": 24
                          },
                          "end": {
                            "row": 47,
                            "column": 27
                          },
                          "text": "==="
                        },
                        {
                          "type": "string",
                          "start": {
                            "row": 47,
                            "column": 28
                          },
                          "end": {
                            "row": 47,
                            "column": 39
                          },
                          "text": "'undefined'",
                          "children": [
                            {
                              "type": "'",
                              "start": {
                                "row": 47,
                                "column": 28
                              },
                              "end": {
                                "row": 47,
                                "column": 29
                              },
                              "text": "'"
                            },
                            {
                              "type": "string_fragment",
                              "start": {
                                "row": 47,
                                "column": 29
                              },
                              "end": {
                                "row": 47,
                                "column": 38
                              },
                              "text": "undefined"
                            },
                            {
                              "type": "'",
                              "start": {
                                "row": 47,
                                "column": 38
                              },
                              "end": {
                                "row": 47,
                                "column": 39
                              },
                              "text": "'"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start": {
                        "row": 47,
                        "column": 39
                      },
                      "end": {
                        "row": 47,
                        "column": 40
                      },
                      "text": ")"
                    }
                  ]
                },
                {
                  "type": "statement_block",
                  "start": {
                    "row": 47,
                    "column": 41
                  },
                  "end": {
                    "row": 71,
                    "column": 5
                  },
                  "text": "{\n      // If the new child is undefined, and the return fiber is a composite\n      // component, throw an error. If Fiber return types are disabled,\n      // we already threw above.\n      switch (returnFiber.tag) {\n        case ClassComponent$7:\n          {\n            {\n              var instance = returnFiber.stateNode;\n              if (instance.render._isMockFunction) {\n                // We allow auto-mocks to proceed as if they're returning null.\n                break;\n              }\n            }\n          }\n        // Intentionally fall through to the next case, which handles both\n        // functions and classes\n        // eslint-disable-next-lined no-fallthrough\n        case FunctionalComponent$2:\n          {\n            var Component = returnFiber.type;\n            invariant(false, '%s(...): Nothing was returned from render. This usually means a return statement is missing. Or, to render nothing, return null.', Component.displayName || Component.name || 'Component');\n          }\n      }\n    }",
                  "children": [
                    {
                      "type": "{",
                      "start": {
                        "row": 47,
                        "column": 41
                      },
                      "end": {
                        "row": 47,
                        "column": 42
                      },
                      "text": "{"
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 48,
                        "column": 6
                      },
                      "end": {
                        "row": 48,
                        "column": 75
                      },
                      "text": "// If the new child is undefined, and the return fiber is a composite"
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 49,
                        "column": 6
                      },
                      "end": {
                        "row": 49,
                        "column": 71
                      },
                      "text": "// component, throw an error. If Fiber return types are disabled,"
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 50,
                        "column": 6
                      },
                      "end": {
                        "row": 50,
                        "column": 32
                      },
                      "text": "// we already threw above."
                    },
                    {
                      "type": "switch_statement",
                      "start": {
                        "row": 51,
                        "column": 6
                      },
                      "end": {
                        "row": 70,
                        "column": 7
                      },
                      "text": "switch (returnFiber.tag) {\n        case ClassComponent$7:\n          {\n            {\n              var instance = returnFiber.stateNode;\n              if (instance.render._isMockFunction) {\n                // We allow auto-mocks to proceed as if they're returning null.\n                break;\n              }\n            }\n          }\n        // Intentionally fall through to the next case, which handles both\n        // functions and classes\n        // eslint-disable-next-lined no-fallthrough\n        case FunctionalComponent$2:\n          {\n            var Component = returnFiber.type;\n            invariant(false, '%s(...): Nothing was returned from render. This usually means a return statement is missing. Or, to render nothing, return null.', Component.displayName || Component.name || 'Component');\n          }\n      }",
                      "children": [
                        {
                          "type": "switch",
                          "start": {
                            "row": 51,
                            "column": 6
                          },
                          "end": {
                            "row": 51,
                            "column": 12
                          },
                          "text": "switch"
                        },
                        {
                          "type": "parenthesized_expression",
                          "start": {
                            "row": 51,
                            "column": 13
                          },
                          "end": {
                            "row": 51,
                            "column": 30
                          },
                          "text": "(returnFiber.tag)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 51,
                                "column": 13
                              },
                              "end": {
                                "row": 51,
                                "column": 14
                              },
                              "text": "("
                            },
                            {
                              "type": "member_expression",
                              "start": {
                                "row": 51,
                                "column": 14
                              },
                              "end": {
                                "row": 51,
                                "column": 29
                              },
                              "text": "returnFiber.tag",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 51,
                                    "column": 14
                                  },
                                  "end": {
                                    "row": 51,
                                    "column": 25
                                  },
                                  "text": "returnFiber"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 51,
                                    "column": 25
                                  },
                                  "end": {
                                    "row": 51,
                                    "column": 26
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "property_identifier",
                                  "start": {
                                    "row": 51,
                                    "column": 26
                                  },
                                  "end": {
                                    "row": 51,
                                    "column": 29
                                  },
                                  "text": "tag"
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 51,
                                "column": 29
                              },
                              "end": {
                                "row": 51,
                                "column": 30
                              },
                              "text": ")"
                            }
                          ]
                        },
                        {
                          "type": "switch_body",
                          "start": {
                            "row": 51,
                            "column": 31
                          },
                          "end": {
                            "row": 70,
                            "column": 7
                          },
                          "text": "{\n        case ClassComponent$7:\n          {\n            {\n              var instance = returnFiber.stateNode;\n              if (instance.render._isMockFunction) {\n                // We allow auto-mocks to proceed as if they're returning null.\n                break;\n              }\n            }\n          }\n        // Intentionally fall through to the next case, which handles both\n        // functions and classes\n        // eslint-disable-next-lined no-fallthrough\n        case FunctionalComponent$2:\n          {\n            var Component = returnFiber.type;\n            invariant(false, '%s(...): Nothing was returned from render. This usually means a return statement is missing. Or, to render nothing, return null.', Component.displayName || Component.name || 'Component');\n          }\n      }",
                          "children": [
                            {
                              "type": "{",
                              "start": {
                                "row": 51,
                                "column": 31
                              },
                              "end": {
                                "row": 51,
                                "column": 32
                              },
                              "text": "{"
                            },
                            {
                              "type": "switch_case",
                              "start": {
                                "row": 52,
                                "column": 8
                              },
                              "end": {
                                "row": 61,
                                "column": 11
                              },
                              "text": "case ClassComponent$7:\n          {\n            {\n              var instance = returnFiber.stateNode;\n              if (instance.render._isMockFunction) {\n                // We allow auto-mocks to proceed as if they're returning null.\n                break;\n              }\n            }\n          }",
                              "children": [
                                {
                                  "type": "case",
                                  "start": {
                                    "row": 52,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 52,
                                    "column": 12
                                  },
                                  "text": "case"
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 52,
                                    "column": 13
                                  },
                                  "end": {
                                    "row": 52,
                                    "column": 29
                                  },
                                  "text": "ClassComponent$7"
                                },
                                {
                                  "type": ":",
                                  "start": {
                                    "row": 52,
                                    "column": 29
                                  },
                                  "end": {
                                    "row": 52,
                                    "column": 30
                                  },
                                  "text": ":"
                                },
                                {
                                  "type": "statement_block",
                                  "start": {
                                    "row": 53,
                                    "column": 10
                                  },
                                  "end": {
                                    "row": 61,
                                    "column": 11
                                  },
                                  "text": "{\n            {\n              var instance = returnFiber.stateNode;\n              if (instance.render._isMockFunction) {\n                // We allow auto-mocks to proceed as if they're returning null.\n                break;\n              }\n            }\n          }",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start": {
                                        "row": 53,
                                        "column": 10
                                      },
                                      "end": {
                                        "row": 53,
                                        "column": 11
                                      },
                                      "text": "{"
                                    },
                                    {
                                      "type": "statement_block",
                                      "start": {
                                        "row": 54,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 60,
                                        "column": 13
                                      },
                                      "text": "{\n              var instance = returnFiber.stateNode;\n              if (instance.render._isMockFunction) {\n                // We allow auto-mocks to proceed as if they're returning null.\n                break;\n              }\n            }",
                                      "children": [
                                        {
                                          "type": "{",
                                          "start": {
                                            "row": 54,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 54,
                                            "column": 13
                                          },
                                          "text": "{"
                                        },
                                        {
                                          "type": "variable_declaration",
                                          "start": {
                                            "row": 55,
                                            "column": 14
                                          },
                                          "end": {
                                            "row": 55,
                                            "column": 51
                                          },
                                          "text": "var instance = returnFiber.stateNode;",
                                          "children": [
                                            {
                                              "type": "var",
                                              "start": {
                                                "row": 55,
                                                "column": 14
                                              },
                                              "end": {
                                                "row": 55,
                                                "column": 17
                                              },
                                              "text": "var"
                                            },
                                            {
                                              "type": "variable_declarator",
                                              "start": {
                                                "row": 55,
                                                "column": 18
                                              },
                                              "end": {
                                                "row": 55,
                                                "column": 50
                                              },
                                              "text": "instance = returnFiber.stateNode",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 55,
                                                    "column": 18
                                                  },
                                                  "end": {
                                                    "row": 55,
                                                    "column": 26
                                                  },
                                                  "text": "instance"
                                                },
                                                {
                                                  "type": "=",
                                                  "start": {
                                                    "row": 55,
                                                    "column": 27
                                                  },
                                                  "end": {
                                                    "row": 55,
                                                    "column": 28
                                                  },
                                                  "text": "="
                                                },
                                                {
                                                  "type": "member_expression",
                                                  "start": {
                                                    "row": 55,
                                                    "column": 29
                                                  },
                                                  "end": {
                                                    "row": 55,
                                                    "column": 50
                                                  },
                                                  "text": "returnFiber.stateNode",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 55,
                                                        "column": 29
                                                      },
                                                      "end": {
                                                        "row": 55,
                                                        "column": 40
                                                      },
                                                      "text": "returnFiber"
                                                    },
                                                    {
                                                      "type": ".",
                                                      "start": {
                                                        "row": 55,
                                                        "column": 40
                                                      },
                                                      "end": {
                                                        "row": 55,
                                                        "column": 41
                                                      },
                                                      "text": "."
                                                    },
                                                    {
                                                      "type": "property_identifier",
                                                      "start": {
                                                        "row": 55,
                                                        "column": 41
                                                      },
                                                      "end": {
                                                        "row": 55,
                                                        "column": 50
                                                      },
                                                      "text": "stateNode"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ";",
                                              "start": {
                                                "row": 55,
                                                "column": 50
                                              },
                                              "end": {
                                                "row": 55,
                                                "column": 51
                                              },
                                              "text": ";"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "if_statement",
                                          "start": {
                                            "row": 56,
                                            "column": 14
                                          },
                                          "end": {
                                            "row": 59,
                                            "column": 15
                                          },
                                          "text": "if (instance.render._isMockFunction) {\n                // We allow auto-mocks to proceed as if they're returning null.\n                break;\n              }",
                                          "children": [
                                            {
                                              "type": "if",
                                              "start": {
                                                "row": 56,
                                                "column": 14
                                              },
                                              "end": {
                                                "row": 56,
                                                "column": 16
                                              },
                                              "text": "if"
                                            },
                                            {
                                              "type": "parenthesized_expression",
                                              "start": {
                                                "row": 56,
                                                "column": 17
                                              },
                                              "end": {
                                                "row": 56,
                                                "column": 50
                                              },
                                              "text": "(instance.render._isMockFunction)",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 56,
                                                    "column": 17
                                                  },
                                                  "end": {
                                                    "row": 56,
                                                    "column": 18
                                                  },
                                                  "text": "("
                                                },
                                                {
                                                  "type": "member_expression",
                                                  "start": {
                                                    "row": 56,
                                                    "column": 18
                                                  },
                                                  "end": {
                                                    "row": 56,
                                                    "column": 49
                                                  },
                                                  "text": "instance.render._isMockFunction",
                                                  "children": [
                                                    {
                                                      "type": "member_expression",
                                                      "start": {
                                                        "row": 56,
                                                        "column": 18
                                                      },
                                                      "end": {
                                                        "row": 56,
                                                        "column": 33
                                                      },
                                                      "text": "instance.render",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 56,
                                                            "column": 18
                                                          },
                                                          "end": {
                                                            "row": 56,
                                                            "column": 26
                                                          },
                                                          "text": "instance"
                                                        },
                                                        {
                                                          "type": ".",
                                                          "start": {
                                                            "row": 56,
                                                            "column": 26
                                                          },
                                                          "end": {
                                                            "row": 56,
                                                            "column": 27
                                                          },
                                                          "text": "."
                                                        },
                                                        {
                                                          "type": "property_identifier",
                                                          "start": {
                                                            "row": 56,
                                                            "column": 27
                                                          },
                                                          "end": {
                                                            "row": 56,
                                                            "column": 33
                                                          },
                                                          "text": "render"
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ".",
                                                      "start": {
                                                        "row": 56,
                                                        "column": 33
                                                      },
                                                      "end": {
                                                        "row": 56,
                                                        "column": 34
                                                      },
                                                      "text": "."
                                                    },
                                                    {
                                                      "type": "property_identifier",
                                                      "start": {
                                                        "row": 56,
                                                        "column": 34
                                                      },
                                                      "end": {
                                                        "row": 56,
                                                        "column": 49
                                                      },
                                                      "text": "_isMockFunction"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 56,
                                                    "column": 49
                                                  },
                                                  "end": {
                                                    "row": 56,
                                                    "column": 50
                                                  },
                                                  "text": ")"
                                                }
                                              ]
                                            },
                                            {
                                              "type": "statement_block",
                                              "start": {
                                                "row": 56,
                                                "column": 51
                                              },
                                              "end": {
                                                "row": 59,
                                                "column": 15
                                              },
                                              "text": "{\n                // We allow auto-mocks to proceed as if they're returning null.\n                break;\n              }",
                                              "children": [
                                                {
                                                  "type": "{",
                                                  "start": {
                                                    "row": 56,
                                                    "column": 51
                                                  },
                                                  "end": {
                                                    "row": 56,
                                                    "column": 52
                                                  },
                                                  "text": "{"
                                                },
                                                {
                                                  "type": "comment",
                                                  "start": {
                                                    "row": 57,
                                                    "column": 16
                                                  },
                                                  "end": {
                                                    "row": 57,
                                                    "column": 79
                                                  },
                                                  "text": "// We allow auto-mocks to proceed as if they're returning null."
                                                },
                                                {
                                                  "type": "break_statement",
                                                  "start": {
                                                    "row": 58,
                                                    "column": 16
                                                  },
                                                  "end": {
                                                    "row": 58,
                                                    "column": 22
                                                  },
                                                  "text": "break;",
                                                  "children": [
                                                    {
                                                      "type": "break",
                                                      "start": {
                                                        "row": 58,
                                                        "column": 16
                                                      },
                                                      "end": {
                                                        "row": 58,
                                                        "column": 21
                                                      },
                                                      "text": "break"
                                                    },
                                                    {
                                                      "type": ";",
                                                      "start": {
                                                        "row": 58,
                                                        "column": 21
                                                      },
                                                      "end": {
                                                        "row": 58,
                                                        "column": 22
                                                      },
                                                      "text": ";"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "}",
                                                  "start": {
                                                    "row": 59,
                                                    "column": 14
                                                  },
                                                  "end": {
                                                    "row": 59,
                                                    "column": 15
                                                  },
                                                  "text": "}"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "}",
                                          "start": {
                                            "row": 60,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 60,
                                            "column": 13
                                          },
                                          "text": "}"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start": {
                                        "row": 61,
                                        "column": 10
                                      },
                                      "end": {
                                        "row": 61,
                                        "column": 11
                                      },
                                      "text": "}"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "comment",
                              "start": {
                                "row": 62,
                                "column": 8
                              },
                              "end": {
                                "row": 62,
                                "column": 74
                              },
                              "text": "// Intentionally fall through to the next case, which handles both"
                            },
                            {
                              "type": "comment",
                              "start": {
                                "row": 63,
                                "column": 8
                              },
                              "end": {
                                "row": 63,
                                "column": 32
                              },
                              "text": "// functions and classes"
                            },
                            {
                              "type": "comment",
                              "start": {
                                "row": 64,
                                "column": 8
                              },
                              "end": {
                                "row": 64,
                                "column": 51
                              },
                              "text": "// eslint-disable-next-lined no-fallthrough"
                            },
                            {
                              "type": "switch_case",
                              "start": {
                                "row": 65,
                                "column": 8
                              },
                              "end": {
                                "row": 69,
                                "column": 11
                              },
                              "text": "case FunctionalComponent$2:\n          {\n            var Component = returnFiber.type;\n            invariant(false, '%s(...): Nothing was returned from render. This usually means a return statement is missing. Or, to render nothing, return null.', Component.displayName || Component.name || 'Component');\n          }",
                              "children": [
                                {
                                  "type": "case",
                                  "start": {
                                    "row": 65,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 65,
                                    "column": 12
                                  },
                                  "text": "case"
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 65,
                                    "column": 13
                                  },
                                  "end": {
                                    "row": 65,
                                    "column": 34
                                  },
                                  "text": "FunctionalComponent$2"
                                },
                                {
                                  "type": ":",
                                  "start": {
                                    "row": 65,
                                    "column": 34
                                  },
                                  "end": {
                                    "row": 65,
                                    "column": 35
                                  },
                                  "text": ":"
                                },
                                {
                                  "type": "statement_block",
                                  "start": {
                                    "row": 66,
                                    "column": 10
                                  },
                                  "end": {
                                    "row": 69,
                                    "column": 11
                                  },
                                  "text": "{\n            var Component = returnFiber.type;\n            invariant(false, '%s(...): Nothing was returned from render. This usually means a return statement is missing. Or, to render nothing, return null.', Component.displayName || Component.name || 'Component');\n          }",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start": {
                                        "row": 66,
                                        "column": 10
                                      },
                                      "end": {
                                        "row": 66,
                                        "column": 11
                                      },
                                      "text": "{"
                                    },
                                    {
                                      "type": "variable_declaration",
                                      "start": {
                                        "row": 67,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 67,
                                        "column": 45
                                      },
                                      "text": "var Component = returnFiber.type;",
                                      "children": [
                                        {
                                          "type": "var",
                                          "start": {
                                            "row": 67,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 67,
                                            "column": 15
                                          },
                                          "text": "var"
                                        },
                                        {
                                          "type": "variable_declarator",
                                          "start": {
                                            "row": 67,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 67,
                                            "column": 44
                                          },
                                          "text": "Component = returnFiber.type",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 67,
                                                "column": 16
                                              },
                                              "end": {
                                                "row": 67,
                                                "column": 25
                                              },
                                              "text": "Component"
                                            },
                                            {
                                              "type": "=",
                                              "start": {
                                                "row": 67,
                                                "column": 26
                                              },
                                              "end": {
                                                "row": 67,
                                                "column": 27
                                              },
                                              "text": "="
                                            },
                                            {
                                              "type": "member_expression",
                                              "start": {
                                                "row": 67,
                                                "column": 28
                                              },
                                              "end": {
                                                "row": 67,
                                                "column": 44
                                              },
                                              "text": "returnFiber.type",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 67,
                                                    "column": 28
                                                  },
                                                  "end": {
                                                    "row": 67,
                                                    "column": 39
                                                  },
                                                  "text": "returnFiber"
                                                },
                                                {
                                                  "type": ".",
                                                  "start": {
                                                    "row": 67,
                                                    "column": 39
                                                  },
                                                  "end": {
                                                    "row": 67,
                                                    "column": 40
                                                  },
                                                  "text": "."
                                                },
                                                {
                                                  "type": "property_identifier",
                                                  "start": {
                                                    "row": 67,
                                                    "column": 40
                                                  },
                                                  "end": {
                                                    "row": 67,
                                                    "column": 44
                                                  },
                                                  "text": "type"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start": {
                                            "row": 67,
                                            "column": 44
                                          },
                                          "end": {
                                            "row": 67,
                                            "column": 45
                                          },
                                          "text": ";"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start": {
                                        "row": 68,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 68,
                                        "column": 217
                                      },
                                      "text": "invariant(false, '%s(...): Nothing was returned from render. This usually means a return statement is missing. Or, to render nothing, return null.', Component.displayName || Component.name || 'Component');",
                                      "children": [
                                        {
                                          "type": "call_expression",
                                          "start": {
                                            "row": 68,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 68,
                                            "column": 216
                                          },
                                          "text": "invariant(false, '%s(...): Nothing was returned from render. This usually means a return statement is missing. Or, to render nothing, return null.', Component.displayName || Component.name || 'Component')",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 68,
                                                "column": 12
                                              },
                                              "end": {
                                                "row": 68,
                                                "column": 21
                                              },
                                              "text": "invariant"
                                            },
                                            {
                                              "type": "arguments",
                                              "start": {
                                                "row": 68,
                                                "column": 21
                                              },
                                              "end": {
                                                "row": 68,
                                                "column": 216
                                              },
                                              "text": "(false, '%s(...): Nothing was returned from render. This usually means a return statement is missing. Or, to render nothing, return null.', Component.displayName || Component.name || 'Component')",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 68,
                                                    "column": 21
                                                  },
                                                  "end": {
                                                    "row": 68,
                                                    "column": 22
                                                  },
                                                  "text": "("
                                                },
                                                {
                                                  "type": "false",
                                                  "start": {
                                                    "row": 68,
                                                    "column": 22
                                                  },
                                                  "end": {
                                                    "row": 68,
                                                    "column": 27
                                                  },
                                                  "text": "false"
                                                },
                                                {
                                                  "type": ",",
                                                  "start": {
                                                    "row": 68,
                                                    "column": 27
                                                  },
                                                  "end": {
                                                    "row": 68,
                                                    "column": 28
                                                  },
                                                  "text": ","
                                                },
                                                {
                                                  "type": "string",
                                                  "start": {
                                                    "row": 68,
                                                    "column": 29
                                                  },
                                                  "end": {
                                                    "row": 68,
                                                    "column": 159
                                                  },
                                                  "text": "'%s(...): Nothing was returned from render. This usually means a return statement is missing. Or, to render nothing, return null.'",
                                                  "children": [
                                                    {
                                                      "type": "'",
                                                      "start": {
                                                        "row": 68,
                                                        "column": 29
                                                      },
                                                      "end": {
                                                        "row": 68,
                                                        "column": 30
                                                      },
                                                      "text": "'"
                                                    },
                                                    {
                                                      "type": "string_fragment",
                                                      "start": {
                                                        "row": 68,
                                                        "column": 30
                                                      },
                                                      "end": {
                                                        "row": 68,
                                                        "column": 158
                                                      },
                                                      "text": "%s(...): Nothing was returned from render. This usually means a return statement is missing. Or, to render nothing, return null."
                                                    },
                                                    {
                                                      "type": "'",
                                                      "start": {
                                                        "row": 68,
                                                        "column": 158
                                                      },
                                                      "end": {
                                                        "row": 68,
                                                        "column": 159
                                                      },
                                                      "text": "'"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ",",
                                                  "start": {
                                                    "row": 68,
                                                    "column": 159
                                                  },
                                                  "end": {
                                                    "row": 68,
                                                    "column": 160
                                                  },
                                                  "text": ","
                                                },
                                                {
                                                  "type": "binary_expression",
                                                  "start": {
                                                    "row": 68,
                                                    "column": 161
                                                  },
                                                  "end": {
                                                    "row": 68,
                                                    "column": 215
                                                  },
                                                  "text": "Component.displayName || Component.name || 'Component'",
                                                  "children": [
                                                    {
                                                      "type": "binary_expression",
                                                      "start": {
                                                        "row": 68,
                                                        "column": 161
                                                      },
                                                      "end": {
                                                        "row": 68,
                                                        "column": 200
                                                      },
                                                      "text": "Component.displayName || Component.name",
                                                      "children": [
                                                        {
                                                          "type": "member_expression",
                                                          "start": {
                                                            "row": 68,
                                                            "column": 161
                                                          },
                                                          "end": {
                                                            "row": 68,
                                                            "column": 182
                                                          },
                                                          "text": "Component.displayName",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start": {
                                                                "row": 68,
                                                                "column": 161
                                                              },
                                                              "end": {
                                                                "row": 68,
                                                                "column": 170
                                                              },
                                                              "text": "Component"
                                                            },
                                                            {
                                                              "type": ".",
                                                              "start": {
                                                                "row": 68,
                                                                "column": 170
                                                              },
                                                              "end": {
                                                                "row": 68,
                                                                "column": 171
                                                              },
                                                              "text": "."
                                                            },
                                                            {
                                                              "type": "property_identifier",
                                                              "start": {
                                                                "row": 68,
                                                                "column": 171
                                                              },
                                                              "end": {
                                                                "row": 68,
                                                                "column": 182
                                                              },
                                                              "text": "displayName"
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "||",
                                                          "start": {
                                                            "row": 68,
                                                            "column": 183
                                                          },
                                                          "end": {
                                                            "row": 68,
                                                            "column": 185
                                                          },
                                                          "text": "||"
                                                        },
                                                        {
                                                          "type": "member_expression",
                                                          "start": {
                                                            "row": 68,
                                                            "column": 186
                                                          },
                                                          "end": {
                                                            "row": 68,
                                                            "column": 200
                                                          },
                                                          "text": "Component.name",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start": {
                                                                "row": 68,
                                                                "column": 186
                                                              },
                                                              "end": {
                                                                "row": 68,
                                                                "column": 195
                                                              },
                                                              "text": "Component"
                                                            },
                                                            {
                                                              "type": ".",
                                                              "start": {
                                                                "row": 68,
                                                                "column": 195
                                                              },
                                                              "end": {
                                                                "row": 68,
                                                                "column": 196
                                                              },
                                                              "text": "."
                                                            },
                                                            {
                                                              "type": "property_identifier",
                                                              "start": {
                                                                "row": 68,
                                                                "column": 196
                                                              },
                                                              "end": {
                                                                "row": 68,
                                                                "column": 200
                                                              },
                                                              "text": "name"
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "||",
                                                      "start": {
                                                        "row": 68,
                                                        "column": 201
                                                      },
                                                      "end": {
                                                        "row": 68,
                                                        "column": 203
                                                      },
                                                      "text": "||"
                                                    },
                                                    {
                                                      "type": "string",
                                                      "start": {
                                                        "row": 68,
                                                        "column": 204
                                                      },
                                                      "end": {
                                                        "row": 68,
                                                        "column": 215
                                                      },
                                                      "text": "'Component'",
                                                      "children": [
                                                        {
                                                          "type": "'",
                                                          "start": {
                                                            "row": 68,
                                                            "column": 204
                                                          },
                                                          "end": {
                                                            "row": 68,
                                                            "column": 205
                                                          },
                                                          "text": "'"
                                                        },
                                                        {
                                                          "type": "string_fragment",
                                                          "start": {
                                                            "row": 68,
                                                            "column": 205
                                                          },
                                                          "end": {
                                                            "row": 68,
                                                            "column": 214
                                                          },
                                                          "text": "Component"
                                                        },
                                                        {
                                                          "type": "'",
                                                          "start": {
                                                            "row": 68,
                                                            "column": 214
                                                          },
                                                          "end": {
                                                            "row": 68,
                                                            "column": 215
                                                          },
                                                          "text": "'"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 68,
                                                    "column": 215
                                                  },
                                                  "end": {
                                                    "row": 68,
                                                    "column": 216
                                                  },
                                                  "text": ")"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start": {
                                            "row": 68,
                                            "column": 216
                                          },
                                          "end": {
                                            "row": 68,
                                            "column": 217
                                          },
                                          "text": ";"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start": {
                                        "row": 69,
                                        "column": 10
                                      },
                                      "end": {
                                        "row": 69,
                                        "column": 11
                                      },
                                      "text": "}"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start": {
                                "row": 70,
                                "column": 6
                              },
                              "end": {
                                "row": 70,
                                "column": 7
                              },
                              "text": "}"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start": {
                        "row": 71,
                        "column": 4
                      },
                      "end": {
                        "row": 71,
                        "column": 5
                      },
                      "text": "}"
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 73,
                "column": 4
              },
              "end": {
                "row": 73,
                "column": 48
              },
              "text": "// Remaining cases are all treated as empty."
            },
            {
              "type": "return_statement",
              "start": {
                "row": 74,
                "column": 4
              },
              "end": {
                "row": 74,
                "column": 67
              },
              "text": "return deleteRemainingChildren(returnFiber, currentFirstChild);",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 74,
                    "column": 4
                  },
                  "end": {
                    "row": 74,
                    "column": 10
                  },
                  "text": "return"
                },
                {
                  "type": "call_expression",
                  "start": {
                    "row": 74,
                    "column": 11
                  },
                  "end": {
                    "row": 74,
                    "column": 66
                  },
                  "text": "deleteRemainingChildren(returnFiber, currentFirstChild)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 74,
                        "column": 11
                      },
                      "end": {
                        "row": 74,
                        "column": 34
                      },
                      "text": "deleteRemainingChildren"
                    },
                    {
                      "type": "arguments",
                      "start": {
                        "row": 74,
                        "column": 34
                      },
                      "end": {
                        "row": 74,
                        "column": 66
                      },
                      "text": "(returnFiber, currentFirstChild)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 74,
                            "column": 34
                          },
                          "end": {
                            "row": 74,
                            "column": 35
                          },
                          "text": "("
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 74,
                            "column": 35
                          },
                          "end": {
                            "row": 74,
                            "column": 46
                          },
                          "text": "returnFiber"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 74,
                            "column": 46
                          },
                          "end": {
                            "row": 74,
                            "column": 47
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 74,
                            "column": 48
                          },
                          "end": {
                            "row": 74,
                            "column": 65
                          },
                          "text": "currentFirstChild"
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 74,
                            "column": 65
                          },
                          "end": {
                            "row": 74,
                            "column": 66
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 74,
                    "column": 66
                  },
                  "end": {
                    "row": 74,
                    "column": 67
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "}",
              "start": {
                "row": 75,
                "column": 2
              },
              "end": {
                "row": 75,
                "column": 3
              },
              "text": "}"
            }
          ]
        }
      ]
    }
  ]
}