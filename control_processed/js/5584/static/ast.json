{
  "type": "program",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 16,
    "column": 9
  },
  "text": "function report(nodeOrToken) {\n            context.report({\n                node: nodeOrToken,\n                messageId: \"unexpected\",\n                fix(fixer) {\n\n                    /*\n                     * Expand the replacement range to include the surrounding\n                     * tokens to avoid conflicting with semi.\n                     * https://github.com/eslint/eslint/issues/7928\n                     */\n                    return new FixTracker(fixer, context.getSourceCode())\n                        .retainSurroundingTokens(nodeOrToken)\n                        .remove(nodeOrToken);\n                }\n            });\n        }",
  "children": [
    {
      "type": "function_declaration",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 16,
        "column": 9
      },
      "text": "function report(nodeOrToken) {\n            context.report({\n                node: nodeOrToken,\n                messageId: \"unexpected\",\n                fix(fixer) {\n\n                    /*\n                     * Expand the replacement range to include the surrounding\n                     * tokens to avoid conflicting with semi.\n                     * https://github.com/eslint/eslint/issues/7928\n                     */\n                    return new FixTracker(fixer, context.getSourceCode())\n                        .retainSurroundingTokens(nodeOrToken)\n                        .remove(nodeOrToken);\n                }\n            });\n        }",
      "children": [
        {
          "type": "function",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 8
          },
          "text": "function"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 9
          },
          "end": {
            "row": 0,
            "column": 15
          },
          "text": "report"
        },
        {
          "type": "formal_parameters",
          "start": {
            "row": 0,
            "column": 15
          },
          "end": {
            "row": 0,
            "column": 28
          },
          "text": "(nodeOrToken)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 15
              },
              "end": {
                "row": 0,
                "column": 16
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 16
              },
              "end": {
                "row": 0,
                "column": 27
              },
              "text": "nodeOrToken"
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 27
              },
              "end": {
                "row": 0,
                "column": 28
              },
              "text": ")"
            }
          ]
        },
        {
          "type": "statement_block",
          "start": {
            "row": 0,
            "column": 29
          },
          "end": {
            "row": 16,
            "column": 9
          },
          "text": "{\n            context.report({\n                node: nodeOrToken,\n                messageId: \"unexpected\",\n                fix(fixer) {\n\n                    /*\n                     * Expand the replacement range to include the surrounding\n                     * tokens to avoid conflicting with semi.\n                     * https://github.com/eslint/eslint/issues/7928\n                     */\n                    return new FixTracker(fixer, context.getSourceCode())\n                        .retainSurroundingTokens(nodeOrToken)\n                        .remove(nodeOrToken);\n                }\n            });\n        }",
          "children": [
            {
              "type": "{",
              "start": {
                "row": 0,
                "column": 29
              },
              "end": {
                "row": 0,
                "column": 30
              },
              "text": "{"
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 12
              },
              "end": {
                "row": 15,
                "column": 15
              },
              "text": "context.report({\n                node: nodeOrToken,\n                messageId: \"unexpected\",\n                fix(fixer) {\n\n                    /*\n                     * Expand the replacement range to include the surrounding\n                     * tokens to avoid conflicting with semi.\n                     * https://github.com/eslint/eslint/issues/7928\n                     */\n                    return new FixTracker(fixer, context.getSourceCode())\n                        .retainSurroundingTokens(nodeOrToken)\n                        .remove(nodeOrToken);\n                }\n            });",
              "children": [
                {
                  "type": "call_expression",
                  "start": {
                    "row": 1,
                    "column": 12
                  },
                  "end": {
                    "row": 15,
                    "column": 14
                  },
                  "text": "context.report({\n                node: nodeOrToken,\n                messageId: \"unexpected\",\n                fix(fixer) {\n\n                    /*\n                     * Expand the replacement range to include the surrounding\n                     * tokens to avoid conflicting with semi.\n                     * https://github.com/eslint/eslint/issues/7928\n                     */\n                    return new FixTracker(fixer, context.getSourceCode())\n                        .retainSurroundingTokens(nodeOrToken)\n                        .remove(nodeOrToken);\n                }\n            })",
                  "children": [
                    {
                      "type": "member_expression",
                      "start": {
                        "row": 1,
                        "column": 12
                      },
                      "end": {
                        "row": 1,
                        "column": 26
                      },
                      "text": "context.report",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 1,
                            "column": 12
                          },
                          "end": {
                            "row": 1,
                            "column": 19
                          },
                          "text": "context"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 1,
                            "column": 19
                          },
                          "end": {
                            "row": 1,
                            "column": 20
                          },
                          "text": "."
                        },
                        {
                          "type": "property_identifier",
                          "start": {
                            "row": 1,
                            "column": 20
                          },
                          "end": {
                            "row": 1,
                            "column": 26
                          },
                          "text": "report"
                        }
                      ]
                    },
                    {
                      "type": "arguments",
                      "start": {
                        "row": 1,
                        "column": 26
                      },
                      "end": {
                        "row": 15,
                        "column": 14
                      },
                      "text": "({\n                node: nodeOrToken,\n                messageId: \"unexpected\",\n                fix(fixer) {\n\n                    /*\n                     * Expand the replacement range to include the surrounding\n                     * tokens to avoid conflicting with semi.\n                     * https://github.com/eslint/eslint/issues/7928\n                     */\n                    return new FixTracker(fixer, context.getSourceCode())\n                        .retainSurroundingTokens(nodeOrToken)\n                        .remove(nodeOrToken);\n                }\n            })",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 1,
                            "column": 26
                          },
                          "end": {
                            "row": 1,
                            "column": 27
                          },
                          "text": "("
                        },
                        {
                          "type": "object",
                          "start": {
                            "row": 1,
                            "column": 27
                          },
                          "end": {
                            "row": 15,
                            "column": 13
                          },
                          "text": "{\n                node: nodeOrToken,\n                messageId: \"unexpected\",\n                fix(fixer) {\n\n                    /*\n                     * Expand the replacement range to include the surrounding\n                     * tokens to avoid conflicting with semi.\n                     * https://github.com/eslint/eslint/issues/7928\n                     */\n                    return new FixTracker(fixer, context.getSourceCode())\n                        .retainSurroundingTokens(nodeOrToken)\n                        .remove(nodeOrToken);\n                }\n            }",
                          "children": [
                            {
                              "type": "{",
                              "start": {
                                "row": 1,
                                "column": 27
                              },
                              "end": {
                                "row": 1,
                                "column": 28
                              },
                              "text": "{"
                            },
                            {
                              "type": "pair",
                              "start": {
                                "row": 2,
                                "column": 16
                              },
                              "end": {
                                "row": 2,
                                "column": 33
                              },
                              "text": "node: nodeOrToken",
                              "children": [
                                {
                                  "type": "property_identifier",
                                  "start": {
                                    "row": 2,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 2,
                                    "column": 20
                                  },
                                  "text": "node"
                                },
                                {
                                  "type": ":",
                                  "start": {
                                    "row": 2,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 2,
                                    "column": 21
                                  },
                                  "text": ":"
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 2,
                                    "column": 22
                                  },
                                  "end": {
                                    "row": 2,
                                    "column": 33
                                  },
                                  "text": "nodeOrToken"
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 2,
                                "column": 33
                              },
                              "end": {
                                "row": 2,
                                "column": 34
                              },
                              "text": ","
                            },
                            {
                              "type": "pair",
                              "start": {
                                "row": 3,
                                "column": 16
                              },
                              "end": {
                                "row": 3,
                                "column": 39
                              },
                              "text": "messageId: \"unexpected\"",
                              "children": [
                                {
                                  "type": "property_identifier",
                                  "start": {
                                    "row": 3,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 3,
                                    "column": 25
                                  },
                                  "text": "messageId"
                                },
                                {
                                  "type": ":",
                                  "start": {
                                    "row": 3,
                                    "column": 25
                                  },
                                  "end": {
                                    "row": 3,
                                    "column": 26
                                  },
                                  "text": ":"
                                },
                                {
                                  "type": "string",
                                  "start": {
                                    "row": 3,
                                    "column": 27
                                  },
                                  "end": {
                                    "row": 3,
                                    "column": 39
                                  },
                                  "text": "\"unexpected\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start": {
                                        "row": 3,
                                        "column": 27
                                      },
                                      "end": {
                                        "row": 3,
                                        "column": 28
                                      },
                                      "text": "\""
                                    },
                                    {
                                      "type": "string_fragment",
                                      "start": {
                                        "row": 3,
                                        "column": 28
                                      },
                                      "end": {
                                        "row": 3,
                                        "column": 38
                                      },
                                      "text": "unexpected"
                                    },
                                    {
                                      "type": "\"",
                                      "start": {
                                        "row": 3,
                                        "column": 38
                                      },
                                      "end": {
                                        "row": 3,
                                        "column": 39
                                      },
                                      "text": "\""
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 3,
                                "column": 39
                              },
                              "end": {
                                "row": 3,
                                "column": 40
                              },
                              "text": ","
                            },
                            {
                              "type": "method_definition",
                              "start": {
                                "row": 4,
                                "column": 16
                              },
                              "end": {
                                "row": 14,
                                "column": 17
                              },
                              "text": "fix(fixer) {\n\n                    /*\n                     * Expand the replacement range to include the surrounding\n                     * tokens to avoid conflicting with semi.\n                     * https://github.com/eslint/eslint/issues/7928\n                     */\n                    return new FixTracker(fixer, context.getSourceCode())\n                        .retainSurroundingTokens(nodeOrToken)\n                        .remove(nodeOrToken);\n                }",
                              "children": [
                                {
                                  "type": "property_identifier",
                                  "start": {
                                    "row": 4,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 4,
                                    "column": 19
                                  },
                                  "text": "fix"
                                },
                                {
                                  "type": "formal_parameters",
                                  "start": {
                                    "row": 4,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 4,
                                    "column": 26
                                  },
                                  "text": "(fixer)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 4,
                                        "column": 19
                                      },
                                      "end": {
                                        "row": 4,
                                        "column": 20
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 4,
                                        "column": 20
                                      },
                                      "end": {
                                        "row": 4,
                                        "column": 25
                                      },
                                      "text": "fixer"
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 4,
                                        "column": 25
                                      },
                                      "end": {
                                        "row": 4,
                                        "column": 26
                                      },
                                      "text": ")"
                                    }
                                  ]
                                },
                                {
                                  "type": "statement_block",
                                  "start": {
                                    "row": 4,
                                    "column": 27
                                  },
                                  "end": {
                                    "row": 14,
                                    "column": 17
                                  },
                                  "text": "{\n\n                    /*\n                     * Expand the replacement range to include the surrounding\n                     * tokens to avoid conflicting with semi.\n                     * https://github.com/eslint/eslint/issues/7928\n                     */\n                    return new FixTracker(fixer, context.getSourceCode())\n                        .retainSurroundingTokens(nodeOrToken)\n                        .remove(nodeOrToken);\n                }",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start": {
                                        "row": 4,
                                        "column": 27
                                      },
                                      "end": {
                                        "row": 4,
                                        "column": 28
                                      },
                                      "text": "{"
                                    },
                                    {
                                      "type": "comment",
                                      "start": {
                                        "row": 6,
                                        "column": 20
                                      },
                                      "end": {
                                        "row": 10,
                                        "column": 23
                                      },
                                      "text": "/*\n                     * Expand the replacement range to include the surrounding\n                     * tokens to avoid conflicting with semi.\n                     * https://github.com/eslint/eslint/issues/7928\n                     */"
                                    },
                                    {
                                      "type": "return_statement",
                                      "start": {
                                        "row": 11,
                                        "column": 20
                                      },
                                      "end": {
                                        "row": 13,
                                        "column": 45
                                      },
                                      "text": "return new FixTracker(fixer, context.getSourceCode())\n                        .retainSurroundingTokens(nodeOrToken)\n                        .remove(nodeOrToken);",
                                      "children": [
                                        {
                                          "type": "return",
                                          "start": {
                                            "row": 11,
                                            "column": 20
                                          },
                                          "end": {
                                            "row": 11,
                                            "column": 26
                                          },
                                          "text": "return"
                                        },
                                        {
                                          "type": "call_expression",
                                          "start": {
                                            "row": 11,
                                            "column": 27
                                          },
                                          "end": {
                                            "row": 13,
                                            "column": 44
                                          },
                                          "text": "new FixTracker(fixer, context.getSourceCode())\n                        .retainSurroundingTokens(nodeOrToken)\n                        .remove(nodeOrToken)",
                                          "children": [
                                            {
                                              "type": "member_expression",
                                              "start": {
                                                "row": 11,
                                                "column": 27
                                              },
                                              "end": {
                                                "row": 13,
                                                "column": 31
                                              },
                                              "text": "new FixTracker(fixer, context.getSourceCode())\n                        .retainSurroundingTokens(nodeOrToken)\n                        .remove",
                                              "children": [
                                                {
                                                  "type": "call_expression",
                                                  "start": {
                                                    "row": 11,
                                                    "column": 27
                                                  },
                                                  "end": {
                                                    "row": 12,
                                                    "column": 61
                                                  },
                                                  "text": "new FixTracker(fixer, context.getSourceCode())\n                        .retainSurroundingTokens(nodeOrToken)",
                                                  "children": [
                                                    {
                                                      "type": "member_expression",
                                                      "start": {
                                                        "row": 11,
                                                        "column": 27
                                                      },
                                                      "end": {
                                                        "row": 12,
                                                        "column": 48
                                                      },
                                                      "text": "new FixTracker(fixer, context.getSourceCode())\n                        .retainSurroundingTokens",
                                                      "children": [
                                                        {
                                                          "type": "new_expression",
                                                          "start": {
                                                            "row": 11,
                                                            "column": 27
                                                          },
                                                          "end": {
                                                            "row": 11,
                                                            "column": 73
                                                          },
                                                          "text": "new FixTracker(fixer, context.getSourceCode())",
                                                          "children": [
                                                            {
                                                              "type": "new",
                                                              "start": {
                                                                "row": 11,
                                                                "column": 27
                                                              },
                                                              "end": {
                                                                "row": 11,
                                                                "column": 30
                                                              },
                                                              "text": "new"
                                                            },
                                                            {
                                                              "type": "identifier",
                                                              "start": {
                                                                "row": 11,
                                                                "column": 31
                                                              },
                                                              "end": {
                                                                "row": 11,
                                                                "column": 41
                                                              },
                                                              "text": "FixTracker"
                                                            },
                                                            {
                                                              "type": "arguments",
                                                              "start": {
                                                                "row": 11,
                                                                "column": 41
                                                              },
                                                              "end": {
                                                                "row": 11,
                                                                "column": 73
                                                              },
                                                              "text": "(fixer, context.getSourceCode())",
                                                              "children": [
                                                                {
                                                                  "type": "(",
                                                                  "start": {
                                                                    "row": 11,
                                                                    "column": 41
                                                                  },
                                                                  "end": {
                                                                    "row": 11,
                                                                    "column": 42
                                                                  },
                                                                  "text": "("
                                                                },
                                                                {
                                                                  "type": "identifier",
                                                                  "start": {
                                                                    "row": 11,
                                                                    "column": 42
                                                                  },
                                                                  "end": {
                                                                    "row": 11,
                                                                    "column": 47
                                                                  },
                                                                  "text": "fixer"
                                                                },
                                                                {
                                                                  "type": ",",
                                                                  "start": {
                                                                    "row": 11,
                                                                    "column": 47
                                                                  },
                                                                  "end": {
                                                                    "row": 11,
                                                                    "column": 48
                                                                  },
                                                                  "text": ","
                                                                },
                                                                {
                                                                  "type": "call_expression",
                                                                  "start": {
                                                                    "row": 11,
                                                                    "column": 49
                                                                  },
                                                                  "end": {
                                                                    "row": 11,
                                                                    "column": 72
                                                                  },
                                                                  "text": "context.getSourceCode()",
                                                                  "children": [
                                                                    {
                                                                      "type": "member_expression",
                                                                      "start": {
                                                                        "row": 11,
                                                                        "column": 49
                                                                      },
                                                                      "end": {
                                                                        "row": 11,
                                                                        "column": 70
                                                                      },
                                                                      "text": "context.getSourceCode",
                                                                      "children": [
                                                                        {
                                                                          "type": "identifier",
                                                                          "start": {
                                                                            "row": 11,
                                                                            "column": 49
                                                                          },
                                                                          "end": {
                                                                            "row": 11,
                                                                            "column": 56
                                                                          },
                                                                          "text": "context"
                                                                        },
                                                                        {
                                                                          "type": ".",
                                                                          "start": {
                                                                            "row": 11,
                                                                            "column": 56
                                                                          },
                                                                          "end": {
                                                                            "row": 11,
                                                                            "column": 57
                                                                          },
                                                                          "text": "."
                                                                        },
                                                                        {
                                                                          "type": "property_identifier",
                                                                          "start": {
                                                                            "row": 11,
                                                                            "column": 57
                                                                          },
                                                                          "end": {
                                                                            "row": 11,
                                                                            "column": 70
                                                                          },
                                                                          "text": "getSourceCode"
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "arguments",
                                                                      "start": {
                                                                        "row": 11,
                                                                        "column": 70
                                                                      },
                                                                      "end": {
                                                                        "row": 11,
                                                                        "column": 72
                                                                      },
                                                                      "text": "()",
                                                                      "children": [
                                                                        {
                                                                          "type": "(",
                                                                          "start": {
                                                                            "row": 11,
                                                                            "column": 70
                                                                          },
                                                                          "end": {
                                                                            "row": 11,
                                                                            "column": 71
                                                                          },
                                                                          "text": "("
                                                                        },
                                                                        {
                                                                          "type": ")",
                                                                          "start": {
                                                                            "row": 11,
                                                                            "column": 71
                                                                          },
                                                                          "end": {
                                                                            "row": 11,
                                                                            "column": 72
                                                                          },
                                                                          "text": ")"
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": ")",
                                                                  "start": {
                                                                    "row": 11,
                                                                    "column": 72
                                                                  },
                                                                  "end": {
                                                                    "row": 11,
                                                                    "column": 73
                                                                  },
                                                                  "text": ")"
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": ".",
                                                          "start": {
                                                            "row": 12,
                                                            "column": 24
                                                          },
                                                          "end": {
                                                            "row": 12,
                                                            "column": 25
                                                          },
                                                          "text": "."
                                                        },
                                                        {
                                                          "type": "property_identifier",
                                                          "start": {
                                                            "row": 12,
                                                            "column": 25
                                                          },
                                                          "end": {
                                                            "row": 12,
                                                            "column": 48
                                                          },
                                                          "text": "retainSurroundingTokens"
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "arguments",
                                                      "start": {
                                                        "row": 12,
                                                        "column": 48
                                                      },
                                                      "end": {
                                                        "row": 12,
                                                        "column": 61
                                                      },
                                                      "text": "(nodeOrToken)",
                                                      "children": [
                                                        {
                                                          "type": "(",
                                                          "start": {
                                                            "row": 12,
                                                            "column": 48
                                                          },
                                                          "end": {
                                                            "row": 12,
                                                            "column": 49
                                                          },
                                                          "text": "("
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 12,
                                                            "column": 49
                                                          },
                                                          "end": {
                                                            "row": 12,
                                                            "column": 60
                                                          },
                                                          "text": "nodeOrToken"
                                                        },
                                                        {
                                                          "type": ")",
                                                          "start": {
                                                            "row": 12,
                                                            "column": 60
                                                          },
                                                          "end": {
                                                            "row": 12,
                                                            "column": 61
                                                          },
                                                          "text": ")"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ".",
                                                  "start": {
                                                    "row": 13,
                                                    "column": 24
                                                  },
                                                  "end": {
                                                    "row": 13,
                                                    "column": 25
                                                  },
                                                  "text": "."
                                                },
                                                {
                                                  "type": "property_identifier",
                                                  "start": {
                                                    "row": 13,
                                                    "column": 25
                                                  },
                                                  "end": {
                                                    "row": 13,
                                                    "column": 31
                                                  },
                                                  "text": "remove"
                                                }
                                              ]
                                            },
                                            {
                                              "type": "arguments",
                                              "start": {
                                                "row": 13,
                                                "column": 31
                                              },
                                              "end": {
                                                "row": 13,
                                                "column": 44
                                              },
                                              "text": "(nodeOrToken)",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 13,
                                                    "column": 31
                                                  },
                                                  "end": {
                                                    "row": 13,
                                                    "column": 32
                                                  },
                                                  "text": "("
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 13,
                                                    "column": 32
                                                  },
                                                  "end": {
                                                    "row": 13,
                                                    "column": 43
                                                  },
                                                  "text": "nodeOrToken"
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 13,
                                                    "column": 43
                                                  },
                                                  "end": {
                                                    "row": 13,
                                                    "column": 44
                                                  },
                                                  "text": ")"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start": {
                                            "row": 13,
                                            "column": 44
                                          },
                                          "end": {
                                            "row": 13,
                                            "column": 45
                                          },
                                          "text": ";"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start": {
                                        "row": 14,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 14,
                                        "column": 17
                                      },
                                      "text": "}"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start": {
                                "row": 15,
                                "column": 12
                              },
                              "end": {
                                "row": 15,
                                "column": 13
                              },
                              "text": "}"
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 15,
                            "column": 13
                          },
                          "end": {
                            "row": 15,
                            "column": 14
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 15,
                    "column": 14
                  },
                  "end": {
                    "row": 15,
                    "column": 15
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "}",
              "start": {
                "row": 16,
                "column": 8
              },
              "end": {
                "row": 16,
                "column": 9
              },
              "text": "}"
            }
          ]
        }
      ]
    }
  ]
}