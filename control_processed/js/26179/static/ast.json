{
  "type": "program",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 25,
    "column": 1
  },
  "text": "function LogicalType(schema, opts) {\n  this._logicalTypeName = schema.logicalType;\n  Type.call(this);\n  LOGICAL_TYPE = this;\n  try {\n    this._underlyingType = Type.forSchema(schema, opts);\n  } finally {\n    LOGICAL_TYPE = null;\n    // Remove the underlying type now that we're done instantiating. Note that\n    // in some (rare) cases, it might not have been inserted; for example, if\n    // this constructor was manually called with an already instantiated type.\n    var l = UNDERLYING_TYPES.length;\n    if (l && UNDERLYING_TYPES[l - 1][0] === this) {\n      UNDERLYING_TYPES.pop();\n    }\n  }\n  // We create a separate branch constructor for logical types to keep them\n  // monomorphic.\n  if (Type.isType(this.underlyingType, 'union')) {\n    this._branchConstructor = this.underlyingType._branchConstructor;\n  } else {\n    this._branchConstructor = this.underlyingType._createBranchConstructor();\n  }\n  // We don't freeze derived types to allow arbitrary properties. Implementors\n  // can still do so in the subclass' constructor at their convenience.\n}",
  "children": [
    {
      "type": "function_declaration",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 25,
        "column": 1
      },
      "text": "function LogicalType(schema, opts) {\n  this._logicalTypeName = schema.logicalType;\n  Type.call(this);\n  LOGICAL_TYPE = this;\n  try {\n    this._underlyingType = Type.forSchema(schema, opts);\n  } finally {\n    LOGICAL_TYPE = null;\n    // Remove the underlying type now that we're done instantiating. Note that\n    // in some (rare) cases, it might not have been inserted; for example, if\n    // this constructor was manually called with an already instantiated type.\n    var l = UNDERLYING_TYPES.length;\n    if (l && UNDERLYING_TYPES[l - 1][0] === this) {\n      UNDERLYING_TYPES.pop();\n    }\n  }\n  // We create a separate branch constructor for logical types to keep them\n  // monomorphic.\n  if (Type.isType(this.underlyingType, 'union')) {\n    this._branchConstructor = this.underlyingType._branchConstructor;\n  } else {\n    this._branchConstructor = this.underlyingType._createBranchConstructor();\n  }\n  // We don't freeze derived types to allow arbitrary properties. Implementors\n  // can still do so in the subclass' constructor at their convenience.\n}",
      "children": [
        {
          "type": "function",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 8
          },
          "text": "function"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 9
          },
          "end": {
            "row": 0,
            "column": 20
          },
          "text": "LogicalType"
        },
        {
          "type": "formal_parameters",
          "start": {
            "row": 0,
            "column": 20
          },
          "end": {
            "row": 0,
            "column": 34
          },
          "text": "(schema, opts)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 20
              },
              "end": {
                "row": 0,
                "column": 21
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 21
              },
              "end": {
                "row": 0,
                "column": 27
              },
              "text": "schema"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 27
              },
              "end": {
                "row": 0,
                "column": 28
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 29
              },
              "end": {
                "row": 0,
                "column": 33
              },
              "text": "opts"
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 33
              },
              "end": {
                "row": 0,
                "column": 34
              },
              "text": ")"
            }
          ]
        },
        {
          "type": "statement_block",
          "start": {
            "row": 0,
            "column": 35
          },
          "end": {
            "row": 25,
            "column": 1
          },
          "text": "{\n  this._logicalTypeName = schema.logicalType;\n  Type.call(this);\n  LOGICAL_TYPE = this;\n  try {\n    this._underlyingType = Type.forSchema(schema, opts);\n  } finally {\n    LOGICAL_TYPE = null;\n    // Remove the underlying type now that we're done instantiating. Note that\n    // in some (rare) cases, it might not have been inserted; for example, if\n    // this constructor was manually called with an already instantiated type.\n    var l = UNDERLYING_TYPES.length;\n    if (l && UNDERLYING_TYPES[l - 1][0] === this) {\n      UNDERLYING_TYPES.pop();\n    }\n  }\n  // We create a separate branch constructor for logical types to keep them\n  // monomorphic.\n  if (Type.isType(this.underlyingType, 'union')) {\n    this._branchConstructor = this.underlyingType._branchConstructor;\n  } else {\n    this._branchConstructor = this.underlyingType._createBranchConstructor();\n  }\n  // We don't freeze derived types to allow arbitrary properties. Implementors\n  // can still do so in the subclass' constructor at their convenience.\n}",
          "children": [
            {
              "type": "{",
              "start": {
                "row": 0,
                "column": 35
              },
              "end": {
                "row": 0,
                "column": 36
              },
              "text": "{"
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 2
              },
              "end": {
                "row": 1,
                "column": 45
              },
              "text": "this._logicalTypeName = schema.logicalType;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start": {
                    "row": 1,
                    "column": 2
                  },
                  "end": {
                    "row": 1,
                    "column": 44
                  },
                  "text": "this._logicalTypeName = schema.logicalType",
                  "children": [
                    {
                      "type": "member_expression",
                      "start": {
                        "row": 1,
                        "column": 2
                      },
                      "end": {
                        "row": 1,
                        "column": 23
                      },
                      "text": "this._logicalTypeName",
                      "children": [
                        {
                          "type": "this",
                          "start": {
                            "row": 1,
                            "column": 2
                          },
                          "end": {
                            "row": 1,
                            "column": 6
                          },
                          "text": "this"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 1,
                            "column": 6
                          },
                          "end": {
                            "row": 1,
                            "column": 7
                          },
                          "text": "."
                        },
                        {
                          "type": "property_identifier",
                          "start": {
                            "row": 1,
                            "column": 7
                          },
                          "end": {
                            "row": 1,
                            "column": 23
                          },
                          "text": "_logicalTypeName"
                        }
                      ]
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 1,
                        "column": 24
                      },
                      "end": {
                        "row": 1,
                        "column": 25
                      },
                      "text": "="
                    },
                    {
                      "type": "member_expression",
                      "start": {
                        "row": 1,
                        "column": 26
                      },
                      "end": {
                        "row": 1,
                        "column": 44
                      },
                      "text": "schema.logicalType",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 1,
                            "column": 26
                          },
                          "end": {
                            "row": 1,
                            "column": 32
                          },
                          "text": "schema"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 1,
                            "column": 32
                          },
                          "end": {
                            "row": 1,
                            "column": 33
                          },
                          "text": "."
                        },
                        {
                          "type": "property_identifier",
                          "start": {
                            "row": 1,
                            "column": 33
                          },
                          "end": {
                            "row": 1,
                            "column": 44
                          },
                          "text": "logicalType"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 1,
                    "column": 44
                  },
                  "end": {
                    "row": 1,
                    "column": 45
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 2,
                "column": 2
              },
              "end": {
                "row": 2,
                "column": 18
              },
              "text": "Type.call(this);",
              "children": [
                {
                  "type": "call_expression",
                  "start": {
                    "row": 2,
                    "column": 2
                  },
                  "end": {
                    "row": 2,
                    "column": 17
                  },
                  "text": "Type.call(this)",
                  "children": [
                    {
                      "type": "member_expression",
                      "start": {
                        "row": 2,
                        "column": 2
                      },
                      "end": {
                        "row": 2,
                        "column": 11
                      },
                      "text": "Type.call",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 2,
                            "column": 2
                          },
                          "end": {
                            "row": 2,
                            "column": 6
                          },
                          "text": "Type"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 2,
                            "column": 6
                          },
                          "end": {
                            "row": 2,
                            "column": 7
                          },
                          "text": "."
                        },
                        {
                          "type": "property_identifier",
                          "start": {
                            "row": 2,
                            "column": 7
                          },
                          "end": {
                            "row": 2,
                            "column": 11
                          },
                          "text": "call"
                        }
                      ]
                    },
                    {
                      "type": "arguments",
                      "start": {
                        "row": 2,
                        "column": 11
                      },
                      "end": {
                        "row": 2,
                        "column": 17
                      },
                      "text": "(this)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 2,
                            "column": 11
                          },
                          "end": {
                            "row": 2,
                            "column": 12
                          },
                          "text": "("
                        },
                        {
                          "type": "this",
                          "start": {
                            "row": 2,
                            "column": 12
                          },
                          "end": {
                            "row": 2,
                            "column": 16
                          },
                          "text": "this"
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 2,
                            "column": 16
                          },
                          "end": {
                            "row": 2,
                            "column": 17
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 2,
                    "column": 17
                  },
                  "end": {
                    "row": 2,
                    "column": 18
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 3,
                "column": 2
              },
              "end": {
                "row": 3,
                "column": 22
              },
              "text": "LOGICAL_TYPE = this;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start": {
                    "row": 3,
                    "column": 2
                  },
                  "end": {
                    "row": 3,
                    "column": 21
                  },
                  "text": "LOGICAL_TYPE = this",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 3,
                        "column": 2
                      },
                      "end": {
                        "row": 3,
                        "column": 14
                      },
                      "text": "LOGICAL_TYPE"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 3,
                        "column": 15
                      },
                      "end": {
                        "row": 3,
                        "column": 16
                      },
                      "text": "="
                    },
                    {
                      "type": "this",
                      "start": {
                        "row": 3,
                        "column": 17
                      },
                      "end": {
                        "row": 3,
                        "column": 21
                      },
                      "text": "this"
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 3,
                    "column": 21
                  },
                  "end": {
                    "row": 3,
                    "column": 22
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "try_statement",
              "start": {
                "row": 4,
                "column": 2
              },
              "end": {
                "row": 15,
                "column": 3
              },
              "text": "try {\n    this._underlyingType = Type.forSchema(schema, opts);\n  } finally {\n    LOGICAL_TYPE = null;\n    // Remove the underlying type now that we're done instantiating. Note that\n    // in some (rare) cases, it might not have been inserted; for example, if\n    // this constructor was manually called with an already instantiated type.\n    var l = UNDERLYING_TYPES.length;\n    if (l && UNDERLYING_TYPES[l - 1][0] === this) {\n      UNDERLYING_TYPES.pop();\n    }\n  }",
              "children": [
                {
                  "type": "try",
                  "start": {
                    "row": 4,
                    "column": 2
                  },
                  "end": {
                    "row": 4,
                    "column": 5
                  },
                  "text": "try"
                },
                {
                  "type": "statement_block",
                  "start": {
                    "row": 4,
                    "column": 6
                  },
                  "end": {
                    "row": 6,
                    "column": 3
                  },
                  "text": "{\n    this._underlyingType = Type.forSchema(schema, opts);\n  }",
                  "children": [
                    {
                      "type": "{",
                      "start": {
                        "row": 4,
                        "column": 6
                      },
                      "end": {
                        "row": 4,
                        "column": 7
                      },
                      "text": "{"
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 5,
                        "column": 4
                      },
                      "end": {
                        "row": 5,
                        "column": 56
                      },
                      "text": "this._underlyingType = Type.forSchema(schema, opts);",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start": {
                            "row": 5,
                            "column": 4
                          },
                          "end": {
                            "row": 5,
                            "column": 55
                          },
                          "text": "this._underlyingType = Type.forSchema(schema, opts)",
                          "children": [
                            {
                              "type": "member_expression",
                              "start": {
                                "row": 5,
                                "column": 4
                              },
                              "end": {
                                "row": 5,
                                "column": 24
                              },
                              "text": "this._underlyingType",
                              "children": [
                                {
                                  "type": "this",
                                  "start": {
                                    "row": 5,
                                    "column": 4
                                  },
                                  "end": {
                                    "row": 5,
                                    "column": 8
                                  },
                                  "text": "this"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 5,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 5,
                                    "column": 9
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "property_identifier",
                                  "start": {
                                    "row": 5,
                                    "column": 9
                                  },
                                  "end": {
                                    "row": 5,
                                    "column": 24
                                  },
                                  "text": "_underlyingType"
                                }
                              ]
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 5,
                                "column": 25
                              },
                              "end": {
                                "row": 5,
                                "column": 26
                              },
                              "text": "="
                            },
                            {
                              "type": "call_expression",
                              "start": {
                                "row": 5,
                                "column": 27
                              },
                              "end": {
                                "row": 5,
                                "column": 55
                              },
                              "text": "Type.forSchema(schema, opts)",
                              "children": [
                                {
                                  "type": "member_expression",
                                  "start": {
                                    "row": 5,
                                    "column": 27
                                  },
                                  "end": {
                                    "row": 5,
                                    "column": 41
                                  },
                                  "text": "Type.forSchema",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 5,
                                        "column": 27
                                      },
                                      "end": {
                                        "row": 5,
                                        "column": 31
                                      },
                                      "text": "Type"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 5,
                                        "column": 31
                                      },
                                      "end": {
                                        "row": 5,
                                        "column": 32
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "property_identifier",
                                      "start": {
                                        "row": 5,
                                        "column": 32
                                      },
                                      "end": {
                                        "row": 5,
                                        "column": 41
                                      },
                                      "text": "forSchema"
                                    }
                                  ]
                                },
                                {
                                  "type": "arguments",
                                  "start": {
                                    "row": 5,
                                    "column": 41
                                  },
                                  "end": {
                                    "row": 5,
                                    "column": 55
                                  },
                                  "text": "(schema, opts)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 5,
                                        "column": 41
                                      },
                                      "end": {
                                        "row": 5,
                                        "column": 42
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 5,
                                        "column": 42
                                      },
                                      "end": {
                                        "row": 5,
                                        "column": 48
                                      },
                                      "text": "schema"
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 5,
                                        "column": 48
                                      },
                                      "end": {
                                        "row": 5,
                                        "column": 49
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 5,
                                        "column": 50
                                      },
                                      "end": {
                                        "row": 5,
                                        "column": 54
                                      },
                                      "text": "opts"
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 5,
                                        "column": 54
                                      },
                                      "end": {
                                        "row": 5,
                                        "column": 55
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start": {
                            "row": 5,
                            "column": 55
                          },
                          "end": {
                            "row": 5,
                            "column": 56
                          },
                          "text": ";"
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start": {
                        "row": 6,
                        "column": 2
                      },
                      "end": {
                        "row": 6,
                        "column": 3
                      },
                      "text": "}"
                    }
                  ]
                },
                {
                  "type": "finally_clause",
                  "start": {
                    "row": 6,
                    "column": 4
                  },
                  "end": {
                    "row": 15,
                    "column": 3
                  },
                  "text": "finally {\n    LOGICAL_TYPE = null;\n    // Remove the underlying type now that we're done instantiating. Note that\n    // in some (rare) cases, it might not have been inserted; for example, if\n    // this constructor was manually called with an already instantiated type.\n    var l = UNDERLYING_TYPES.length;\n    if (l && UNDERLYING_TYPES[l - 1][0] === this) {\n      UNDERLYING_TYPES.pop();\n    }\n  }",
                  "children": [
                    {
                      "type": "finally",
                      "start": {
                        "row": 6,
                        "column": 4
                      },
                      "end": {
                        "row": 6,
                        "column": 11
                      },
                      "text": "finally"
                    },
                    {
                      "type": "statement_block",
                      "start": {
                        "row": 6,
                        "column": 12
                      },
                      "end": {
                        "row": 15,
                        "column": 3
                      },
                      "text": "{\n    LOGICAL_TYPE = null;\n    // Remove the underlying type now that we're done instantiating. Note that\n    // in some (rare) cases, it might not have been inserted; for example, if\n    // this constructor was manually called with an already instantiated type.\n    var l = UNDERLYING_TYPES.length;\n    if (l && UNDERLYING_TYPES[l - 1][0] === this) {\n      UNDERLYING_TYPES.pop();\n    }\n  }",
                      "children": [
                        {
                          "type": "{",
                          "start": {
                            "row": 6,
                            "column": 12
                          },
                          "end": {
                            "row": 6,
                            "column": 13
                          },
                          "text": "{"
                        },
                        {
                          "type": "expression_statement",
                          "start": {
                            "row": 7,
                            "column": 4
                          },
                          "end": {
                            "row": 7,
                            "column": 24
                          },
                          "text": "LOGICAL_TYPE = null;",
                          "children": [
                            {
                              "type": "assignment_expression",
                              "start": {
                                "row": 7,
                                "column": 4
                              },
                              "end": {
                                "row": 7,
                                "column": 23
                              },
                              "text": "LOGICAL_TYPE = null",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 7,
                                    "column": 4
                                  },
                                  "end": {
                                    "row": 7,
                                    "column": 16
                                  },
                                  "text": "LOGICAL_TYPE"
                                },
                                {
                                  "type": "=",
                                  "start": {
                                    "row": 7,
                                    "column": 17
                                  },
                                  "end": {
                                    "row": 7,
                                    "column": 18
                                  },
                                  "text": "="
                                },
                                {
                                  "type": "null",
                                  "start": {
                                    "row": 7,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 7,
                                    "column": 23
                                  },
                                  "text": "null"
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start": {
                                "row": 7,
                                "column": 23
                              },
                              "end": {
                                "row": 7,
                                "column": 24
                              },
                              "text": ";"
                            }
                          ]
                        },
                        {
                          "type": "comment",
                          "start": {
                            "row": 8,
                            "column": 4
                          },
                          "end": {
                            "row": 8,
                            "column": 78
                          },
                          "text": "// Remove the underlying type now that we're done instantiating. Note that"
                        },
                        {
                          "type": "comment",
                          "start": {
                            "row": 9,
                            "column": 4
                          },
                          "end": {
                            "row": 9,
                            "column": 77
                          },
                          "text": "// in some (rare) cases, it might not have been inserted; for example, if"
                        },
                        {
                          "type": "comment",
                          "start": {
                            "row": 10,
                            "column": 4
                          },
                          "end": {
                            "row": 10,
                            "column": 78
                          },
                          "text": "// this constructor was manually called with an already instantiated type."
                        },
                        {
                          "type": "variable_declaration",
                          "start": {
                            "row": 11,
                            "column": 4
                          },
                          "end": {
                            "row": 11,
                            "column": 36
                          },
                          "text": "var l = UNDERLYING_TYPES.length;",
                          "children": [
                            {
                              "type": "var",
                              "start": {
                                "row": 11,
                                "column": 4
                              },
                              "end": {
                                "row": 11,
                                "column": 7
                              },
                              "text": "var"
                            },
                            {
                              "type": "variable_declarator",
                              "start": {
                                "row": 11,
                                "column": 8
                              },
                              "end": {
                                "row": 11,
                                "column": 35
                              },
                              "text": "l = UNDERLYING_TYPES.length",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 11,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 9
                                  },
                                  "text": "l"
                                },
                                {
                                  "type": "=",
                                  "start": {
                                    "row": 11,
                                    "column": 10
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 11
                                  },
                                  "text": "="
                                },
                                {
                                  "type": "member_expression",
                                  "start": {
                                    "row": 11,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 35
                                  },
                                  "text": "UNDERLYING_TYPES.length",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 11,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 11,
                                        "column": 28
                                      },
                                      "text": "UNDERLYING_TYPES"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 11,
                                        "column": 28
                                      },
                                      "end": {
                                        "row": 11,
                                        "column": 29
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "property_identifier",
                                      "start": {
                                        "row": 11,
                                        "column": 29
                                      },
                                      "end": {
                                        "row": 11,
                                        "column": 35
                                      },
                                      "text": "length"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start": {
                                "row": 11,
                                "column": 35
                              },
                              "end": {
                                "row": 11,
                                "column": 36
                              },
                              "text": ";"
                            }
                          ]
                        },
                        {
                          "type": "if_statement",
                          "start": {
                            "row": 12,
                            "column": 4
                          },
                          "end": {
                            "row": 14,
                            "column": 5
                          },
                          "text": "if (l && UNDERLYING_TYPES[l - 1][0] === this) {\n      UNDERLYING_TYPES.pop();\n    }",
                          "children": [
                            {
                              "type": "if",
                              "start": {
                                "row": 12,
                                "column": 4
                              },
                              "end": {
                                "row": 12,
                                "column": 6
                              },
                              "text": "if"
                            },
                            {
                              "type": "parenthesized_expression",
                              "start": {
                                "row": 12,
                                "column": 7
                              },
                              "end": {
                                "row": 12,
                                "column": 49
                              },
                              "text": "(l && UNDERLYING_TYPES[l - 1][0] === this)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 12,
                                    "column": 7
                                  },
                                  "end": {
                                    "row": 12,
                                    "column": 8
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "binary_expression",
                                  "start": {
                                    "row": 12,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 12,
                                    "column": 48
                                  },
                                  "text": "l && UNDERLYING_TYPES[l - 1][0] === this",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 12,
                                        "column": 8
                                      },
                                      "end": {
                                        "row": 12,
                                        "column": 9
                                      },
                                      "text": "l"
                                    },
                                    {
                                      "type": "&&",
                                      "start": {
                                        "row": 12,
                                        "column": 10
                                      },
                                      "end": {
                                        "row": 12,
                                        "column": 12
                                      },
                                      "text": "&&"
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start": {
                                        "row": 12,
                                        "column": 13
                                      },
                                      "end": {
                                        "row": 12,
                                        "column": 48
                                      },
                                      "text": "UNDERLYING_TYPES[l - 1][0] === this",
                                      "children": [
                                        {
                                          "type": "subscript_expression",
                                          "start": {
                                            "row": 12,
                                            "column": 13
                                          },
                                          "end": {
                                            "row": 12,
                                            "column": 39
                                          },
                                          "text": "UNDERLYING_TYPES[l - 1][0]",
                                          "children": [
                                            {
                                              "type": "subscript_expression",
                                              "start": {
                                                "row": 12,
                                                "column": 13
                                              },
                                              "end": {
                                                "row": 12,
                                                "column": 36
                                              },
                                              "text": "UNDERLYING_TYPES[l - 1]",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 12,
                                                    "column": 13
                                                  },
                                                  "end": {
                                                    "row": 12,
                                                    "column": 29
                                                  },
                                                  "text": "UNDERLYING_TYPES"
                                                },
                                                {
                                                  "type": "[",
                                                  "start": {
                                                    "row": 12,
                                                    "column": 29
                                                  },
                                                  "end": {
                                                    "row": 12,
                                                    "column": 30
                                                  },
                                                  "text": "["
                                                },
                                                {
                                                  "type": "binary_expression",
                                                  "start": {
                                                    "row": 12,
                                                    "column": 30
                                                  },
                                                  "end": {
                                                    "row": 12,
                                                    "column": 35
                                                  },
                                                  "text": "l - 1",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 12,
                                                        "column": 30
                                                      },
                                                      "end": {
                                                        "row": 12,
                                                        "column": 31
                                                      },
                                                      "text": "l"
                                                    },
                                                    {
                                                      "type": "-",
                                                      "start": {
                                                        "row": 12,
                                                        "column": 32
                                                      },
                                                      "end": {
                                                        "row": 12,
                                                        "column": 33
                                                      },
                                                      "text": "-"
                                                    },
                                                    {
                                                      "type": "number",
                                                      "start": {
                                                        "row": 12,
                                                        "column": 34
                                                      },
                                                      "end": {
                                                        "row": 12,
                                                        "column": 35
                                                      },
                                                      "text": "1"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "]",
                                                  "start": {
                                                    "row": 12,
                                                    "column": 35
                                                  },
                                                  "end": {
                                                    "row": 12,
                                                    "column": 36
                                                  },
                                                  "text": "]"
                                                }
                                              ]
                                            },
                                            {
                                              "type": "[",
                                              "start": {
                                                "row": 12,
                                                "column": 36
                                              },
                                              "end": {
                                                "row": 12,
                                                "column": 37
                                              },
                                              "text": "["
                                            },
                                            {
                                              "type": "number",
                                              "start": {
                                                "row": 12,
                                                "column": 37
                                              },
                                              "end": {
                                                "row": 12,
                                                "column": 38
                                              },
                                              "text": "0"
                                            },
                                            {
                                              "type": "]",
                                              "start": {
                                                "row": 12,
                                                "column": 38
                                              },
                                              "end": {
                                                "row": 12,
                                                "column": 39
                                              },
                                              "text": "]"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "===",
                                          "start": {
                                            "row": 12,
                                            "column": 40
                                          },
                                          "end": {
                                            "row": 12,
                                            "column": 43
                                          },
                                          "text": "==="
                                        },
                                        {
                                          "type": "this",
                                          "start": {
                                            "row": 12,
                                            "column": 44
                                          },
                                          "end": {
                                            "row": 12,
                                            "column": 48
                                          },
                                          "text": "this"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 12,
                                    "column": 48
                                  },
                                  "end": {
                                    "row": 12,
                                    "column": 49
                                  },
                                  "text": ")"
                                }
                              ]
                            },
                            {
                              "type": "statement_block",
                              "start": {
                                "row": 12,
                                "column": 50
                              },
                              "end": {
                                "row": 14,
                                "column": 5
                              },
                              "text": "{\n      UNDERLYING_TYPES.pop();\n    }",
                              "children": [
                                {
                                  "type": "{",
                                  "start": {
                                    "row": 12,
                                    "column": 50
                                  },
                                  "end": {
                                    "row": 12,
                                    "column": 51
                                  },
                                  "text": "{"
                                },
                                {
                                  "type": "expression_statement",
                                  "start": {
                                    "row": 13,
                                    "column": 6
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 29
                                  },
                                  "text": "UNDERLYING_TYPES.pop();",
                                  "children": [
                                    {
                                      "type": "call_expression",
                                      "start": {
                                        "row": 13,
                                        "column": 6
                                      },
                                      "end": {
                                        "row": 13,
                                        "column": 28
                                      },
                                      "text": "UNDERLYING_TYPES.pop()",
                                      "children": [
                                        {
                                          "type": "member_expression",
                                          "start": {
                                            "row": 13,
                                            "column": 6
                                          },
                                          "end": {
                                            "row": 13,
                                            "column": 26
                                          },
                                          "text": "UNDERLYING_TYPES.pop",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 13,
                                                "column": 6
                                              },
                                              "end": {
                                                "row": 13,
                                                "column": 22
                                              },
                                              "text": "UNDERLYING_TYPES"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 13,
                                                "column": 22
                                              },
                                              "end": {
                                                "row": 13,
                                                "column": 23
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "property_identifier",
                                              "start": {
                                                "row": 13,
                                                "column": 23
                                              },
                                              "end": {
                                                "row": 13,
                                                "column": 26
                                              },
                                              "text": "pop"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "arguments",
                                          "start": {
                                            "row": 13,
                                            "column": 26
                                          },
                                          "end": {
                                            "row": 13,
                                            "column": 28
                                          },
                                          "text": "()",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 13,
                                                "column": 26
                                              },
                                              "end": {
                                                "row": 13,
                                                "column": 27
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 13,
                                                "column": 27
                                              },
                                              "end": {
                                                "row": 13,
                                                "column": 28
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start": {
                                        "row": 13,
                                        "column": 28
                                      },
                                      "end": {
                                        "row": 13,
                                        "column": 29
                                      },
                                      "text": ";"
                                    }
                                  ]
                                },
                                {
                                  "type": "}",
                                  "start": {
                                    "row": 14,
                                    "column": 4
                                  },
                                  "end": {
                                    "row": 14,
                                    "column": 5
                                  },
                                  "text": "}"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "}",
                          "start": {
                            "row": 15,
                            "column": 2
                          },
                          "end": {
                            "row": 15,
                            "column": 3
                          },
                          "text": "}"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 16,
                "column": 2
              },
              "end": {
                "row": 16,
                "column": 75
              },
              "text": "// We create a separate branch constructor for logical types to keep them"
            },
            {
              "type": "comment",
              "start": {
                "row": 17,
                "column": 2
              },
              "end": {
                "row": 17,
                "column": 17
              },
              "text": "// monomorphic."
            },
            {
              "type": "if_statement",
              "start": {
                "row": 18,
                "column": 2
              },
              "end": {
                "row": 22,
                "column": 3
              },
              "text": "if (Type.isType(this.underlyingType, 'union')) {\n    this._branchConstructor = this.underlyingType._branchConstructor;\n  } else {\n    this._branchConstructor = this.underlyingType._createBranchConstructor();\n  }",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 18,
                    "column": 2
                  },
                  "end": {
                    "row": 18,
                    "column": 4
                  },
                  "text": "if"
                },
                {
                  "type": "parenthesized_expression",
                  "start": {
                    "row": 18,
                    "column": 5
                  },
                  "end": {
                    "row": 18,
                    "column": 48
                  },
                  "text": "(Type.isType(this.underlyingType, 'union'))",
                  "children": [
                    {
                      "type": "(",
                      "start": {
                        "row": 18,
                        "column": 5
                      },
                      "end": {
                        "row": 18,
                        "column": 6
                      },
                      "text": "("
                    },
                    {
                      "type": "call_expression",
                      "start": {
                        "row": 18,
                        "column": 6
                      },
                      "end": {
                        "row": 18,
                        "column": 47
                      },
                      "text": "Type.isType(this.underlyingType, 'union')",
                      "children": [
                        {
                          "type": "member_expression",
                          "start": {
                            "row": 18,
                            "column": 6
                          },
                          "end": {
                            "row": 18,
                            "column": 17
                          },
                          "text": "Type.isType",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 18,
                                "column": 6
                              },
                              "end": {
                                "row": 18,
                                "column": 10
                              },
                              "text": "Type"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 18,
                                "column": 10
                              },
                              "end": {
                                "row": 18,
                                "column": 11
                              },
                              "text": "."
                            },
                            {
                              "type": "property_identifier",
                              "start": {
                                "row": 18,
                                "column": 11
                              },
                              "end": {
                                "row": 18,
                                "column": 17
                              },
                              "text": "isType"
                            }
                          ]
                        },
                        {
                          "type": "arguments",
                          "start": {
                            "row": 18,
                            "column": 17
                          },
                          "end": {
                            "row": 18,
                            "column": 47
                          },
                          "text": "(this.underlyingType, 'union')",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 18,
                                "column": 17
                              },
                              "end": {
                                "row": 18,
                                "column": 18
                              },
                              "text": "("
                            },
                            {
                              "type": "member_expression",
                              "start": {
                                "row": 18,
                                "column": 18
                              },
                              "end": {
                                "row": 18,
                                "column": 37
                              },
                              "text": "this.underlyingType",
                              "children": [
                                {
                                  "type": "this",
                                  "start": {
                                    "row": 18,
                                    "column": 18
                                  },
                                  "end": {
                                    "row": 18,
                                    "column": 22
                                  },
                                  "text": "this"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 18,
                                    "column": 22
                                  },
                                  "end": {
                                    "row": 18,
                                    "column": 23
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "property_identifier",
                                  "start": {
                                    "row": 18,
                                    "column": 23
                                  },
                                  "end": {
                                    "row": 18,
                                    "column": 37
                                  },
                                  "text": "underlyingType"
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 18,
                                "column": 37
                              },
                              "end": {
                                "row": 18,
                                "column": 38
                              },
                              "text": ","
                            },
                            {
                              "type": "string",
                              "start": {
                                "row": 18,
                                "column": 39
                              },
                              "end": {
                                "row": 18,
                                "column": 46
                              },
                              "text": "'union'",
                              "children": [
                                {
                                  "type": "'",
                                  "start": {
                                    "row": 18,
                                    "column": 39
                                  },
                                  "end": {
                                    "row": 18,
                                    "column": 40
                                  },
                                  "text": "'"
                                },
                                {
                                  "type": "string_fragment",
                                  "start": {
                                    "row": 18,
                                    "column": 40
                                  },
                                  "end": {
                                    "row": 18,
                                    "column": 45
                                  },
                                  "text": "union"
                                },
                                {
                                  "type": "'",
                                  "start": {
                                    "row": 18,
                                    "column": 45
                                  },
                                  "end": {
                                    "row": 18,
                                    "column": 46
                                  },
                                  "text": "'"
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 18,
                                "column": 46
                              },
                              "end": {
                                "row": 18,
                                "column": 47
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start": {
                        "row": 18,
                        "column": 47
                      },
                      "end": {
                        "row": 18,
                        "column": 48
                      },
                      "text": ")"
                    }
                  ]
                },
                {
                  "type": "statement_block",
                  "start": {
                    "row": 18,
                    "column": 49
                  },
                  "end": {
                    "row": 20,
                    "column": 3
                  },
                  "text": "{\n    this._branchConstructor = this.underlyingType._branchConstructor;\n  }",
                  "children": [
                    {
                      "type": "{",
                      "start": {
                        "row": 18,
                        "column": 49
                      },
                      "end": {
                        "row": 18,
                        "column": 50
                      },
                      "text": "{"
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 19,
                        "column": 4
                      },
                      "end": {
                        "row": 19,
                        "column": 69
                      },
                      "text": "this._branchConstructor = this.underlyingType._branchConstructor;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start": {
                            "row": 19,
                            "column": 4
                          },
                          "end": {
                            "row": 19,
                            "column": 68
                          },
                          "text": "this._branchConstructor = this.underlyingType._branchConstructor",
                          "children": [
                            {
                              "type": "member_expression",
                              "start": {
                                "row": 19,
                                "column": 4
                              },
                              "end": {
                                "row": 19,
                                "column": 27
                              },
                              "text": "this._branchConstructor",
                              "children": [
                                {
                                  "type": "this",
                                  "start": {
                                    "row": 19,
                                    "column": 4
                                  },
                                  "end": {
                                    "row": 19,
                                    "column": 8
                                  },
                                  "text": "this"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 19,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 19,
                                    "column": 9
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "property_identifier",
                                  "start": {
                                    "row": 19,
                                    "column": 9
                                  },
                                  "end": {
                                    "row": 19,
                                    "column": 27
                                  },
                                  "text": "_branchConstructor"
                                }
                              ]
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 19,
                                "column": 28
                              },
                              "end": {
                                "row": 19,
                                "column": 29
                              },
                              "text": "="
                            },
                            {
                              "type": "member_expression",
                              "start": {
                                "row": 19,
                                "column": 30
                              },
                              "end": {
                                "row": 19,
                                "column": 68
                              },
                              "text": "this.underlyingType._branchConstructor",
                              "children": [
                                {
                                  "type": "member_expression",
                                  "start": {
                                    "row": 19,
                                    "column": 30
                                  },
                                  "end": {
                                    "row": 19,
                                    "column": 49
                                  },
                                  "text": "this.underlyingType",
                                  "children": [
                                    {
                                      "type": "this",
                                      "start": {
                                        "row": 19,
                                        "column": 30
                                      },
                                      "end": {
                                        "row": 19,
                                        "column": 34
                                      },
                                      "text": "this"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 19,
                                        "column": 34
                                      },
                                      "end": {
                                        "row": 19,
                                        "column": 35
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "property_identifier",
                                      "start": {
                                        "row": 19,
                                        "column": 35
                                      },
                                      "end": {
                                        "row": 19,
                                        "column": 49
                                      },
                                      "text": "underlyingType"
                                    }
                                  ]
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 19,
                                    "column": 49
                                  },
                                  "end": {
                                    "row": 19,
                                    "column": 50
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "property_identifier",
                                  "start": {
                                    "row": 19,
                                    "column": 50
                                  },
                                  "end": {
                                    "row": 19,
                                    "column": 68
                                  },
                                  "text": "_branchConstructor"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start": {
                            "row": 19,
                            "column": 68
                          },
                          "end": {
                            "row": 19,
                            "column": 69
                          },
                          "text": ";"
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start": {
                        "row": 20,
                        "column": 2
                      },
                      "end": {
                        "row": 20,
                        "column": 3
                      },
                      "text": "}"
                    }
                  ]
                },
                {
                  "type": "else_clause",
                  "start": {
                    "row": 20,
                    "column": 4
                  },
                  "end": {
                    "row": 22,
                    "column": 3
                  },
                  "text": "else {\n    this._branchConstructor = this.underlyingType._createBranchConstructor();\n  }",
                  "children": [
                    {
                      "type": "else",
                      "start": {
                        "row": 20,
                        "column": 4
                      },
                      "end": {
                        "row": 20,
                        "column": 8
                      },
                      "text": "else"
                    },
                    {
                      "type": "statement_block",
                      "start": {
                        "row": 20,
                        "column": 9
                      },
                      "end": {
                        "row": 22,
                        "column": 3
                      },
                      "text": "{\n    this._branchConstructor = this.underlyingType._createBranchConstructor();\n  }",
                      "children": [
                        {
                          "type": "{",
                          "start": {
                            "row": 20,
                            "column": 9
                          },
                          "end": {
                            "row": 20,
                            "column": 10
                          },
                          "text": "{"
                        },
                        {
                          "type": "expression_statement",
                          "start": {
                            "row": 21,
                            "column": 4
                          },
                          "end": {
                            "row": 21,
                            "column": 77
                          },
                          "text": "this._branchConstructor = this.underlyingType._createBranchConstructor();",
                          "children": [
                            {
                              "type": "assignment_expression",
                              "start": {
                                "row": 21,
                                "column": 4
                              },
                              "end": {
                                "row": 21,
                                "column": 76
                              },
                              "text": "this._branchConstructor = this.underlyingType._createBranchConstructor()",
                              "children": [
                                {
                                  "type": "member_expression",
                                  "start": {
                                    "row": 21,
                                    "column": 4
                                  },
                                  "end": {
                                    "row": 21,
                                    "column": 27
                                  },
                                  "text": "this._branchConstructor",
                                  "children": [
                                    {
                                      "type": "this",
                                      "start": {
                                        "row": 21,
                                        "column": 4
                                      },
                                      "end": {
                                        "row": 21,
                                        "column": 8
                                      },
                                      "text": "this"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 21,
                                        "column": 8
                                      },
                                      "end": {
                                        "row": 21,
                                        "column": 9
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "property_identifier",
                                      "start": {
                                        "row": 21,
                                        "column": 9
                                      },
                                      "end": {
                                        "row": 21,
                                        "column": 27
                                      },
                                      "text": "_branchConstructor"
                                    }
                                  ]
                                },
                                {
                                  "type": "=",
                                  "start": {
                                    "row": 21,
                                    "column": 28
                                  },
                                  "end": {
                                    "row": 21,
                                    "column": 29
                                  },
                                  "text": "="
                                },
                                {
                                  "type": "call_expression",
                                  "start": {
                                    "row": 21,
                                    "column": 30
                                  },
                                  "end": {
                                    "row": 21,
                                    "column": 76
                                  },
                                  "text": "this.underlyingType._createBranchConstructor()",
                                  "children": [
                                    {
                                      "type": "member_expression",
                                      "start": {
                                        "row": 21,
                                        "column": 30
                                      },
                                      "end": {
                                        "row": 21,
                                        "column": 74
                                      },
                                      "text": "this.underlyingType._createBranchConstructor",
                                      "children": [
                                        {
                                          "type": "member_expression",
                                          "start": {
                                            "row": 21,
                                            "column": 30
                                          },
                                          "end": {
                                            "row": 21,
                                            "column": 49
                                          },
                                          "text": "this.underlyingType",
                                          "children": [
                                            {
                                              "type": "this",
                                              "start": {
                                                "row": 21,
                                                "column": 30
                                              },
                                              "end": {
                                                "row": 21,
                                                "column": 34
                                              },
                                              "text": "this"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 21,
                                                "column": 34
                                              },
                                              "end": {
                                                "row": 21,
                                                "column": 35
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "property_identifier",
                                              "start": {
                                                "row": 21,
                                                "column": 35
                                              },
                                              "end": {
                                                "row": 21,
                                                "column": 49
                                              },
                                              "text": "underlyingType"
                                            }
                                          ]
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 21,
                                            "column": 49
                                          },
                                          "end": {
                                            "row": 21,
                                            "column": 50
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "property_identifier",
                                          "start": {
                                            "row": 21,
                                            "column": 50
                                          },
                                          "end": {
                                            "row": 21,
                                            "column": 74
                                          },
                                          "text": "_createBranchConstructor"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "arguments",
                                      "start": {
                                        "row": 21,
                                        "column": 74
                                      },
                                      "end": {
                                        "row": 21,
                                        "column": 76
                                      },
                                      "text": "()",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 21,
                                            "column": 74
                                          },
                                          "end": {
                                            "row": 21,
                                            "column": 75
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 21,
                                            "column": 75
                                          },
                                          "end": {
                                            "row": 21,
                                            "column": 76
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start": {
                                "row": 21,
                                "column": 76
                              },
                              "end": {
                                "row": 21,
                                "column": 77
                              },
                              "text": ";"
                            }
                          ]
                        },
                        {
                          "type": "}",
                          "start": {
                            "row": 22,
                            "column": 2
                          },
                          "end": {
                            "row": 22,
                            "column": 3
                          },
                          "text": "}"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 23,
                "column": 2
              },
              "end": {
                "row": 23,
                "column": 78
              },
              "text": "// We don't freeze derived types to allow arbitrary properties. Implementors"
            },
            {
              "type": "comment",
              "start": {
                "row": 24,
                "column": 2
              },
              "end": {
                "row": 24,
                "column": 71
              },
              "text": "// can still do so in the subclass' constructor at their convenience."
            },
            {
              "type": "}",
              "start": {
                "row": 25,
                "column": 0
              },
              "end": {
                "row": 25,
                "column": 1
              },
              "text": "}"
            }
          ]
        }
      ]
    }
  ]
}