{
  "type": "program",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 24,
    "column": 1
  },
  "text": "function(obj, variable)\n{\n\tvar codec = new mxObjectCodec(obj,  ['model', 'previous'], ['cell']);\n\n\t/**\n\t * Function: afterDecode\n\t *\n\t * Restores the state by assigning the previous value.\n\t */\n\tcodec.afterDecode = function(dec, node, obj)\n\t{\n\t\t// Allows forward references in sessions. This is a workaround\n\t\t// for the sequence of edits in mxGraph.moveCells and cellsAdded.\n\t\tif (mxUtils.isNode(obj.cell))\n\t\t{\n\t\t\tobj.cell = dec.decodeCell(obj.cell, false);\n\t\t}\n\n\t\tobj.previous = obj[variable];\n\n\t\treturn obj;\n\t};\n\t\n\treturn codec;\n}",
  "children": [
    {
      "type": "expression_statement",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 24,
        "column": 1
      },
      "text": "function(obj, variable)\n{\n\tvar codec = new mxObjectCodec(obj,  ['model', 'previous'], ['cell']);\n\n\t/**\n\t * Function: afterDecode\n\t *\n\t * Restores the state by assigning the previous value.\n\t */\n\tcodec.afterDecode = function(dec, node, obj)\n\t{\n\t\t// Allows forward references in sessions. This is a workaround\n\t\t// for the sequence of edits in mxGraph.moveCells and cellsAdded.\n\t\tif (mxUtils.isNode(obj.cell))\n\t\t{\n\t\t\tobj.cell = dec.decodeCell(obj.cell, false);\n\t\t}\n\n\t\tobj.previous = obj[variable];\n\n\t\treturn obj;\n\t};\n\t\n\treturn codec;\n}",
      "children": [
        {
          "type": "function",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 24,
            "column": 1
          },
          "text": "function(obj, variable)\n{\n\tvar codec = new mxObjectCodec(obj,  ['model', 'previous'], ['cell']);\n\n\t/**\n\t * Function: afterDecode\n\t *\n\t * Restores the state by assigning the previous value.\n\t */\n\tcodec.afterDecode = function(dec, node, obj)\n\t{\n\t\t// Allows forward references in sessions. This is a workaround\n\t\t// for the sequence of edits in mxGraph.moveCells and cellsAdded.\n\t\tif (mxUtils.isNode(obj.cell))\n\t\t{\n\t\t\tobj.cell = dec.decodeCell(obj.cell, false);\n\t\t}\n\n\t\tobj.previous = obj[variable];\n\n\t\treturn obj;\n\t};\n\t\n\treturn codec;\n}",
          "children": [
            {
              "type": "function",
              "start": {
                "row": 0,
                "column": 0
              },
              "end": {
                "row": 0,
                "column": 8
              },
              "text": "function"
            },
            {
              "type": "formal_parameters",
              "start": {
                "row": 0,
                "column": 8
              },
              "end": {
                "row": 0,
                "column": 23
              },
              "text": "(obj, variable)",
              "children": [
                {
                  "type": "(",
                  "start": {
                    "row": 0,
                    "column": 8
                  },
                  "end": {
                    "row": 0,
                    "column": 9
                  },
                  "text": "("
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 9
                  },
                  "end": {
                    "row": 0,
                    "column": 12
                  },
                  "text": "obj"
                },
                {
                  "type": ",",
                  "start": {
                    "row": 0,
                    "column": 12
                  },
                  "end": {
                    "row": 0,
                    "column": 13
                  },
                  "text": ","
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 14
                  },
                  "end": {
                    "row": 0,
                    "column": 22
                  },
                  "text": "variable"
                },
                {
                  "type": ")",
                  "start": {
                    "row": 0,
                    "column": 22
                  },
                  "end": {
                    "row": 0,
                    "column": 23
                  },
                  "text": ")"
                }
              ]
            },
            {
              "type": "statement_block",
              "start": {
                "row": 1,
                "column": 0
              },
              "end": {
                "row": 24,
                "column": 1
              },
              "text": "{\n\tvar codec = new mxObjectCodec(obj,  ['model', 'previous'], ['cell']);\n\n\t/**\n\t * Function: afterDecode\n\t *\n\t * Restores the state by assigning the previous value.\n\t */\n\tcodec.afterDecode = function(dec, node, obj)\n\t{\n\t\t// Allows forward references in sessions. This is a workaround\n\t\t// for the sequence of edits in mxGraph.moveCells and cellsAdded.\n\t\tif (mxUtils.isNode(obj.cell))\n\t\t{\n\t\t\tobj.cell = dec.decodeCell(obj.cell, false);\n\t\t}\n\n\t\tobj.previous = obj[variable];\n\n\t\treturn obj;\n\t};\n\t\n\treturn codec;\n}",
              "children": [
                {
                  "type": "{",
                  "start": {
                    "row": 1,
                    "column": 0
                  },
                  "end": {
                    "row": 1,
                    "column": 1
                  },
                  "text": "{"
                },
                {
                  "type": "variable_declaration",
                  "start": {
                    "row": 2,
                    "column": 1
                  },
                  "end": {
                    "row": 2,
                    "column": 70
                  },
                  "text": "var codec = new mxObjectCodec(obj,  ['model', 'previous'], ['cell']);",
                  "children": [
                    {
                      "type": "var",
                      "start": {
                        "row": 2,
                        "column": 1
                      },
                      "end": {
                        "row": 2,
                        "column": 4
                      },
                      "text": "var"
                    },
                    {
                      "type": "variable_declarator",
                      "start": {
                        "row": 2,
                        "column": 5
                      },
                      "end": {
                        "row": 2,
                        "column": 69
                      },
                      "text": "codec = new mxObjectCodec(obj,  ['model', 'previous'], ['cell'])",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 2,
                            "column": 5
                          },
                          "end": {
                            "row": 2,
                            "column": 10
                          },
                          "text": "codec"
                        },
                        {
                          "type": "=",
                          "start": {
                            "row": 2,
                            "column": 11
                          },
                          "end": {
                            "row": 2,
                            "column": 12
                          },
                          "text": "="
                        },
                        {
                          "type": "new_expression",
                          "start": {
                            "row": 2,
                            "column": 13
                          },
                          "end": {
                            "row": 2,
                            "column": 69
                          },
                          "text": "new mxObjectCodec(obj,  ['model', 'previous'], ['cell'])",
                          "children": [
                            {
                              "type": "new",
                              "start": {
                                "row": 2,
                                "column": 13
                              },
                              "end": {
                                "row": 2,
                                "column": 16
                              },
                              "text": "new"
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 2,
                                "column": 17
                              },
                              "end": {
                                "row": 2,
                                "column": 30
                              },
                              "text": "mxObjectCodec"
                            },
                            {
                              "type": "arguments",
                              "start": {
                                "row": 2,
                                "column": 30
                              },
                              "end": {
                                "row": 2,
                                "column": 69
                              },
                              "text": "(obj,  ['model', 'previous'], ['cell'])",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 2,
                                    "column": 30
                                  },
                                  "end": {
                                    "row": 2,
                                    "column": 31
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 2,
                                    "column": 31
                                  },
                                  "end": {
                                    "row": 2,
                                    "column": 34
                                  },
                                  "text": "obj"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 2,
                                    "column": 34
                                  },
                                  "end": {
                                    "row": 2,
                                    "column": 35
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "array",
                                  "start": {
                                    "row": 2,
                                    "column": 37
                                  },
                                  "end": {
                                    "row": 2,
                                    "column": 58
                                  },
                                  "text": "['model', 'previous']",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start": {
                                        "row": 2,
                                        "column": 37
                                      },
                                      "end": {
                                        "row": 2,
                                        "column": 38
                                      },
                                      "text": "["
                                    },
                                    {
                                      "type": "string",
                                      "start": {
                                        "row": 2,
                                        "column": 38
                                      },
                                      "end": {
                                        "row": 2,
                                        "column": 45
                                      },
                                      "text": "'model'",
                                      "children": [
                                        {
                                          "type": "'",
                                          "start": {
                                            "row": 2,
                                            "column": 38
                                          },
                                          "end": {
                                            "row": 2,
                                            "column": 39
                                          },
                                          "text": "'"
                                        },
                                        {
                                          "type": "string_fragment",
                                          "start": {
                                            "row": 2,
                                            "column": 39
                                          },
                                          "end": {
                                            "row": 2,
                                            "column": 44
                                          },
                                          "text": "model"
                                        },
                                        {
                                          "type": "'",
                                          "start": {
                                            "row": 2,
                                            "column": 44
                                          },
                                          "end": {
                                            "row": 2,
                                            "column": 45
                                          },
                                          "text": "'"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 2,
                                        "column": 45
                                      },
                                      "end": {
                                        "row": 2,
                                        "column": 46
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "string",
                                      "start": {
                                        "row": 2,
                                        "column": 47
                                      },
                                      "end": {
                                        "row": 2,
                                        "column": 57
                                      },
                                      "text": "'previous'",
                                      "children": [
                                        {
                                          "type": "'",
                                          "start": {
                                            "row": 2,
                                            "column": 47
                                          },
                                          "end": {
                                            "row": 2,
                                            "column": 48
                                          },
                                          "text": "'"
                                        },
                                        {
                                          "type": "string_fragment",
                                          "start": {
                                            "row": 2,
                                            "column": 48
                                          },
                                          "end": {
                                            "row": 2,
                                            "column": 56
                                          },
                                          "text": "previous"
                                        },
                                        {
                                          "type": "'",
                                          "start": {
                                            "row": 2,
                                            "column": 56
                                          },
                                          "end": {
                                            "row": 2,
                                            "column": 57
                                          },
                                          "text": "'"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "]",
                                      "start": {
                                        "row": 2,
                                        "column": 57
                                      },
                                      "end": {
                                        "row": 2,
                                        "column": 58
                                      },
                                      "text": "]"
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 2,
                                    "column": 58
                                  },
                                  "end": {
                                    "row": 2,
                                    "column": 59
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "array",
                                  "start": {
                                    "row": 2,
                                    "column": 60
                                  },
                                  "end": {
                                    "row": 2,
                                    "column": 68
                                  },
                                  "text": "['cell']",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start": {
                                        "row": 2,
                                        "column": 60
                                      },
                                      "end": {
                                        "row": 2,
                                        "column": 61
                                      },
                                      "text": "["
                                    },
                                    {
                                      "type": "string",
                                      "start": {
                                        "row": 2,
                                        "column": 61
                                      },
                                      "end": {
                                        "row": 2,
                                        "column": 67
                                      },
                                      "text": "'cell'",
                                      "children": [
                                        {
                                          "type": "'",
                                          "start": {
                                            "row": 2,
                                            "column": 61
                                          },
                                          "end": {
                                            "row": 2,
                                            "column": 62
                                          },
                                          "text": "'"
                                        },
                                        {
                                          "type": "string_fragment",
                                          "start": {
                                            "row": 2,
                                            "column": 62
                                          },
                                          "end": {
                                            "row": 2,
                                            "column": 66
                                          },
                                          "text": "cell"
                                        },
                                        {
                                          "type": "'",
                                          "start": {
                                            "row": 2,
                                            "column": 66
                                          },
                                          "end": {
                                            "row": 2,
                                            "column": 67
                                          },
                                          "text": "'"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "]",
                                      "start": {
                                        "row": 2,
                                        "column": 67
                                      },
                                      "end": {
                                        "row": 2,
                                        "column": 68
                                      },
                                      "text": "]"
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 2,
                                    "column": 68
                                  },
                                  "end": {
                                    "row": 2,
                                    "column": 69
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start": {
                        "row": 2,
                        "column": 69
                      },
                      "end": {
                        "row": 2,
                        "column": 70
                      },
                      "text": ";"
                    }
                  ]
                },
                {
                  "type": "comment",
                  "start": {
                    "row": 4,
                    "column": 1
                  },
                  "end": {
                    "row": 8,
                    "column": 4
                  },
                  "text": "/**\n\t * Function: afterDecode\n\t *\n\t * Restores the state by assigning the previous value.\n\t */"
                },
                {
                  "type": "expression_statement",
                  "start": {
                    "row": 9,
                    "column": 1
                  },
                  "end": {
                    "row": 21,
                    "column": 3
                  },
                  "text": "codec.afterDecode = function(dec, node, obj)\n\t{\n\t\t// Allows forward references in sessions. This is a workaround\n\t\t// for the sequence of edits in mxGraph.moveCells and cellsAdded.\n\t\tif (mxUtils.isNode(obj.cell))\n\t\t{\n\t\t\tobj.cell = dec.decodeCell(obj.cell, false);\n\t\t}\n\n\t\tobj.previous = obj[variable];\n\n\t\treturn obj;\n\t};",
                  "children": [
                    {
                      "type": "assignment_expression",
                      "start": {
                        "row": 9,
                        "column": 1
                      },
                      "end": {
                        "row": 21,
                        "column": 2
                      },
                      "text": "codec.afterDecode = function(dec, node, obj)\n\t{\n\t\t// Allows forward references in sessions. This is a workaround\n\t\t// for the sequence of edits in mxGraph.moveCells and cellsAdded.\n\t\tif (mxUtils.isNode(obj.cell))\n\t\t{\n\t\t\tobj.cell = dec.decodeCell(obj.cell, false);\n\t\t}\n\n\t\tobj.previous = obj[variable];\n\n\t\treturn obj;\n\t}",
                      "children": [
                        {
                          "type": "member_expression",
                          "start": {
                            "row": 9,
                            "column": 1
                          },
                          "end": {
                            "row": 9,
                            "column": 18
                          },
                          "text": "codec.afterDecode",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 9,
                                "column": 1
                              },
                              "end": {
                                "row": 9,
                                "column": 6
                              },
                              "text": "codec"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 9,
                                "column": 6
                              },
                              "end": {
                                "row": 9,
                                "column": 7
                              },
                              "text": "."
                            },
                            {
                              "type": "property_identifier",
                              "start": {
                                "row": 9,
                                "column": 7
                              },
                              "end": {
                                "row": 9,
                                "column": 18
                              },
                              "text": "afterDecode"
                            }
                          ]
                        },
                        {
                          "type": "=",
                          "start": {
                            "row": 9,
                            "column": 19
                          },
                          "end": {
                            "row": 9,
                            "column": 20
                          },
                          "text": "="
                        },
                        {
                          "type": "function",
                          "start": {
                            "row": 9,
                            "column": 21
                          },
                          "end": {
                            "row": 21,
                            "column": 2
                          },
                          "text": "function(dec, node, obj)\n\t{\n\t\t// Allows forward references in sessions. This is a workaround\n\t\t// for the sequence of edits in mxGraph.moveCells and cellsAdded.\n\t\tif (mxUtils.isNode(obj.cell))\n\t\t{\n\t\t\tobj.cell = dec.decodeCell(obj.cell, false);\n\t\t}\n\n\t\tobj.previous = obj[variable];\n\n\t\treturn obj;\n\t}",
                          "children": [
                            {
                              "type": "function",
                              "start": {
                                "row": 9,
                                "column": 21
                              },
                              "end": {
                                "row": 9,
                                "column": 29
                              },
                              "text": "function"
                            },
                            {
                              "type": "formal_parameters",
                              "start": {
                                "row": 9,
                                "column": 29
                              },
                              "end": {
                                "row": 9,
                                "column": 45
                              },
                              "text": "(dec, node, obj)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 9,
                                    "column": 29
                                  },
                                  "end": {
                                    "row": 9,
                                    "column": 30
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 9,
                                    "column": 30
                                  },
                                  "end": {
                                    "row": 9,
                                    "column": 33
                                  },
                                  "text": "dec"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 9,
                                    "column": 33
                                  },
                                  "end": {
                                    "row": 9,
                                    "column": 34
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 9,
                                    "column": 35
                                  },
                                  "end": {
                                    "row": 9,
                                    "column": 39
                                  },
                                  "text": "node"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 9,
                                    "column": 39
                                  },
                                  "end": {
                                    "row": 9,
                                    "column": 40
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 9,
                                    "column": 41
                                  },
                                  "end": {
                                    "row": 9,
                                    "column": 44
                                  },
                                  "text": "obj"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 9,
                                    "column": 44
                                  },
                                  "end": {
                                    "row": 9,
                                    "column": 45
                                  },
                                  "text": ")"
                                }
                              ]
                            },
                            {
                              "type": "statement_block",
                              "start": {
                                "row": 10,
                                "column": 1
                              },
                              "end": {
                                "row": 21,
                                "column": 2
                              },
                              "text": "{\n\t\t// Allows forward references in sessions. This is a workaround\n\t\t// for the sequence of edits in mxGraph.moveCells and cellsAdded.\n\t\tif (mxUtils.isNode(obj.cell))\n\t\t{\n\t\t\tobj.cell = dec.decodeCell(obj.cell, false);\n\t\t}\n\n\t\tobj.previous = obj[variable];\n\n\t\treturn obj;\n\t}",
                              "children": [
                                {
                                  "type": "{",
                                  "start": {
                                    "row": 10,
                                    "column": 1
                                  },
                                  "end": {
                                    "row": 10,
                                    "column": 2
                                  },
                                  "text": "{"
                                },
                                {
                                  "type": "comment",
                                  "start": {
                                    "row": 11,
                                    "column": 2
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 64
                                  },
                                  "text": "// Allows forward references in sessions. This is a workaround"
                                },
                                {
                                  "type": "comment",
                                  "start": {
                                    "row": 12,
                                    "column": 2
                                  },
                                  "end": {
                                    "row": 12,
                                    "column": 67
                                  },
                                  "text": "// for the sequence of edits in mxGraph.moveCells and cellsAdded."
                                },
                                {
                                  "type": "if_statement",
                                  "start": {
                                    "row": 13,
                                    "column": 2
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 3
                                  },
                                  "text": "if (mxUtils.isNode(obj.cell))\n\t\t{\n\t\t\tobj.cell = dec.decodeCell(obj.cell, false);\n\t\t}",
                                  "children": [
                                    {
                                      "type": "if",
                                      "start": {
                                        "row": 13,
                                        "column": 2
                                      },
                                      "end": {
                                        "row": 13,
                                        "column": 4
                                      },
                                      "text": "if"
                                    },
                                    {
                                      "type": "parenthesized_expression",
                                      "start": {
                                        "row": 13,
                                        "column": 5
                                      },
                                      "end": {
                                        "row": 13,
                                        "column": 31
                                      },
                                      "text": "(mxUtils.isNode(obj.cell))",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 13,
                                            "column": 5
                                          },
                                          "end": {
                                            "row": 13,
                                            "column": 6
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "call_expression",
                                          "start": {
                                            "row": 13,
                                            "column": 6
                                          },
                                          "end": {
                                            "row": 13,
                                            "column": 30
                                          },
                                          "text": "mxUtils.isNode(obj.cell)",
                                          "children": [
                                            {
                                              "type": "member_expression",
                                              "start": {
                                                "row": 13,
                                                "column": 6
                                              },
                                              "end": {
                                                "row": 13,
                                                "column": 20
                                              },
                                              "text": "mxUtils.isNode",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 13,
                                                    "column": 6
                                                  },
                                                  "end": {
                                                    "row": 13,
                                                    "column": 13
                                                  },
                                                  "text": "mxUtils"
                                                },
                                                {
                                                  "type": ".",
                                                  "start": {
                                                    "row": 13,
                                                    "column": 13
                                                  },
                                                  "end": {
                                                    "row": 13,
                                                    "column": 14
                                                  },
                                                  "text": "."
                                                },
                                                {
                                                  "type": "property_identifier",
                                                  "start": {
                                                    "row": 13,
                                                    "column": 14
                                                  },
                                                  "end": {
                                                    "row": 13,
                                                    "column": 20
                                                  },
                                                  "text": "isNode"
                                                }
                                              ]
                                            },
                                            {
                                              "type": "arguments",
                                              "start": {
                                                "row": 13,
                                                "column": 20
                                              },
                                              "end": {
                                                "row": 13,
                                                "column": 30
                                              },
                                              "text": "(obj.cell)",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 13,
                                                    "column": 20
                                                  },
                                                  "end": {
                                                    "row": 13,
                                                    "column": 21
                                                  },
                                                  "text": "("
                                                },
                                                {
                                                  "type": "member_expression",
                                                  "start": {
                                                    "row": 13,
                                                    "column": 21
                                                  },
                                                  "end": {
                                                    "row": 13,
                                                    "column": 29
                                                  },
                                                  "text": "obj.cell",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 13,
                                                        "column": 21
                                                      },
                                                      "end": {
                                                        "row": 13,
                                                        "column": 24
                                                      },
                                                      "text": "obj"
                                                    },
                                                    {
                                                      "type": ".",
                                                      "start": {
                                                        "row": 13,
                                                        "column": 24
                                                      },
                                                      "end": {
                                                        "row": 13,
                                                        "column": 25
                                                      },
                                                      "text": "."
                                                    },
                                                    {
                                                      "type": "property_identifier",
                                                      "start": {
                                                        "row": 13,
                                                        "column": 25
                                                      },
                                                      "end": {
                                                        "row": 13,
                                                        "column": 29
                                                      },
                                                      "text": "cell"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 13,
                                                    "column": 29
                                                  },
                                                  "end": {
                                                    "row": 13,
                                                    "column": 30
                                                  },
                                                  "text": ")"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 13,
                                            "column": 30
                                          },
                                          "end": {
                                            "row": 13,
                                            "column": 31
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "statement_block",
                                      "start": {
                                        "row": 14,
                                        "column": 2
                                      },
                                      "end": {
                                        "row": 16,
                                        "column": 3
                                      },
                                      "text": "{\n\t\t\tobj.cell = dec.decodeCell(obj.cell, false);\n\t\t}",
                                      "children": [
                                        {
                                          "type": "{",
                                          "start": {
                                            "row": 14,
                                            "column": 2
                                          },
                                          "end": {
                                            "row": 14,
                                            "column": 3
                                          },
                                          "text": "{"
                                        },
                                        {
                                          "type": "expression_statement",
                                          "start": {
                                            "row": 15,
                                            "column": 3
                                          },
                                          "end": {
                                            "row": 15,
                                            "column": 46
                                          },
                                          "text": "obj.cell = dec.decodeCell(obj.cell, false);",
                                          "children": [
                                            {
                                              "type": "assignment_expression",
                                              "start": {
                                                "row": 15,
                                                "column": 3
                                              },
                                              "end": {
                                                "row": 15,
                                                "column": 45
                                              },
                                              "text": "obj.cell = dec.decodeCell(obj.cell, false)",
                                              "children": [
                                                {
                                                  "type": "member_expression",
                                                  "start": {
                                                    "row": 15,
                                                    "column": 3
                                                  },
                                                  "end": {
                                                    "row": 15,
                                                    "column": 11
                                                  },
                                                  "text": "obj.cell",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 15,
                                                        "column": 3
                                                      },
                                                      "end": {
                                                        "row": 15,
                                                        "column": 6
                                                      },
                                                      "text": "obj"
                                                    },
                                                    {
                                                      "type": ".",
                                                      "start": {
                                                        "row": 15,
                                                        "column": 6
                                                      },
                                                      "end": {
                                                        "row": 15,
                                                        "column": 7
                                                      },
                                                      "text": "."
                                                    },
                                                    {
                                                      "type": "property_identifier",
                                                      "start": {
                                                        "row": 15,
                                                        "column": 7
                                                      },
                                                      "end": {
                                                        "row": 15,
                                                        "column": 11
                                                      },
                                                      "text": "cell"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "=",
                                                  "start": {
                                                    "row": 15,
                                                    "column": 12
                                                  },
                                                  "end": {
                                                    "row": 15,
                                                    "column": 13
                                                  },
                                                  "text": "="
                                                },
                                                {
                                                  "type": "call_expression",
                                                  "start": {
                                                    "row": 15,
                                                    "column": 14
                                                  },
                                                  "end": {
                                                    "row": 15,
                                                    "column": 45
                                                  },
                                                  "text": "dec.decodeCell(obj.cell, false)",
                                                  "children": [
                                                    {
                                                      "type": "member_expression",
                                                      "start": {
                                                        "row": 15,
                                                        "column": 14
                                                      },
                                                      "end": {
                                                        "row": 15,
                                                        "column": 28
                                                      },
                                                      "text": "dec.decodeCell",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 15,
                                                            "column": 14
                                                          },
                                                          "end": {
                                                            "row": 15,
                                                            "column": 17
                                                          },
                                                          "text": "dec"
                                                        },
                                                        {
                                                          "type": ".",
                                                          "start": {
                                                            "row": 15,
                                                            "column": 17
                                                          },
                                                          "end": {
                                                            "row": 15,
                                                            "column": 18
                                                          },
                                                          "text": "."
                                                        },
                                                        {
                                                          "type": "property_identifier",
                                                          "start": {
                                                            "row": 15,
                                                            "column": 18
                                                          },
                                                          "end": {
                                                            "row": 15,
                                                            "column": 28
                                                          },
                                                          "text": "decodeCell"
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "arguments",
                                                      "start": {
                                                        "row": 15,
                                                        "column": 28
                                                      },
                                                      "end": {
                                                        "row": 15,
                                                        "column": 45
                                                      },
                                                      "text": "(obj.cell, false)",
                                                      "children": [
                                                        {
                                                          "type": "(",
                                                          "start": {
                                                            "row": 15,
                                                            "column": 28
                                                          },
                                                          "end": {
                                                            "row": 15,
                                                            "column": 29
                                                          },
                                                          "text": "("
                                                        },
                                                        {
                                                          "type": "member_expression",
                                                          "start": {
                                                            "row": 15,
                                                            "column": 29
                                                          },
                                                          "end": {
                                                            "row": 15,
                                                            "column": 37
                                                          },
                                                          "text": "obj.cell",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start": {
                                                                "row": 15,
                                                                "column": 29
                                                              },
                                                              "end": {
                                                                "row": 15,
                                                                "column": 32
                                                              },
                                                              "text": "obj"
                                                            },
                                                            {
                                                              "type": ".",
                                                              "start": {
                                                                "row": 15,
                                                                "column": 32
                                                              },
                                                              "end": {
                                                                "row": 15,
                                                                "column": 33
                                                              },
                                                              "text": "."
                                                            },
                                                            {
                                                              "type": "property_identifier",
                                                              "start": {
                                                                "row": 15,
                                                                "column": 33
                                                              },
                                                              "end": {
                                                                "row": 15,
                                                                "column": 37
                                                              },
                                                              "text": "cell"
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": ",",
                                                          "start": {
                                                            "row": 15,
                                                            "column": 37
                                                          },
                                                          "end": {
                                                            "row": 15,
                                                            "column": 38
                                                          },
                                                          "text": ","
                                                        },
                                                        {
                                                          "type": "false",
                                                          "start": {
                                                            "row": 15,
                                                            "column": 39
                                                          },
                                                          "end": {
                                                            "row": 15,
                                                            "column": 44
                                                          },
                                                          "text": "false"
                                                        },
                                                        {
                                                          "type": ")",
                                                          "start": {
                                                            "row": 15,
                                                            "column": 44
                                                          },
                                                          "end": {
                                                            "row": 15,
                                                            "column": 45
                                                          },
                                                          "text": ")"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ";",
                                              "start": {
                                                "row": 15,
                                                "column": 45
                                              },
                                              "end": {
                                                "row": 15,
                                                "column": 46
                                              },
                                              "text": ";"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "}",
                                          "start": {
                                            "row": 16,
                                            "column": 2
                                          },
                                          "end": {
                                            "row": 16,
                                            "column": 3
                                          },
                                          "text": "}"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "expression_statement",
                                  "start": {
                                    "row": 18,
                                    "column": 2
                                  },
                                  "end": {
                                    "row": 18,
                                    "column": 31
                                  },
                                  "text": "obj.previous = obj[variable];",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start": {
                                        "row": 18,
                                        "column": 2
                                      },
                                      "end": {
                                        "row": 18,
                                        "column": 30
                                      },
                                      "text": "obj.previous = obj[variable]",
                                      "children": [
                                        {
                                          "type": "member_expression",
                                          "start": {
                                            "row": 18,
                                            "column": 2
                                          },
                                          "end": {
                                            "row": 18,
                                            "column": 14
                                          },
                                          "text": "obj.previous",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 18,
                                                "column": 2
                                              },
                                              "end": {
                                                "row": 18,
                                                "column": 5
                                              },
                                              "text": "obj"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 18,
                                                "column": 5
                                              },
                                              "end": {
                                                "row": 18,
                                                "column": 6
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "property_identifier",
                                              "start": {
                                                "row": 18,
                                                "column": 6
                                              },
                                              "end": {
                                                "row": 18,
                                                "column": 14
                                              },
                                              "text": "previous"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "=",
                                          "start": {
                                            "row": 18,
                                            "column": 15
                                          },
                                          "end": {
                                            "row": 18,
                                            "column": 16
                                          },
                                          "text": "="
                                        },
                                        {
                                          "type": "subscript_expression",
                                          "start": {
                                            "row": 18,
                                            "column": 17
                                          },
                                          "end": {
                                            "row": 18,
                                            "column": 30
                                          },
                                          "text": "obj[variable]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 18,
                                                "column": 17
                                              },
                                              "end": {
                                                "row": 18,
                                                "column": 20
                                              },
                                              "text": "obj"
                                            },
                                            {
                                              "type": "[",
                                              "start": {
                                                "row": 18,
                                                "column": 20
                                              },
                                              "end": {
                                                "row": 18,
                                                "column": 21
                                              },
                                              "text": "["
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 18,
                                                "column": 21
                                              },
                                              "end": {
                                                "row": 18,
                                                "column": 29
                                              },
                                              "text": "variable"
                                            },
                                            {
                                              "type": "]",
                                              "start": {
                                                "row": 18,
                                                "column": 29
                                              },
                                              "end": {
                                                "row": 18,
                                                "column": 30
                                              },
                                              "text": "]"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start": {
                                        "row": 18,
                                        "column": 30
                                      },
                                      "end": {
                                        "row": 18,
                                        "column": 31
                                      },
                                      "text": ";"
                                    }
                                  ]
                                },
                                {
                                  "type": "return_statement",
                                  "start": {
                                    "row": 20,
                                    "column": 2
                                  },
                                  "end": {
                                    "row": 20,
                                    "column": 13
                                  },
                                  "text": "return obj;",
                                  "children": [
                                    {
                                      "type": "return",
                                      "start": {
                                        "row": 20,
                                        "column": 2
                                      },
                                      "end": {
                                        "row": 20,
                                        "column": 8
                                      },
                                      "text": "return"
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 20,
                                        "column": 9
                                      },
                                      "end": {
                                        "row": 20,
                                        "column": 12
                                      },
                                      "text": "obj"
                                    },
                                    {
                                      "type": ";",
                                      "start": {
                                        "row": 20,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 20,
                                        "column": 13
                                      },
                                      "text": ";"
                                    }
                                  ]
                                },
                                {
                                  "type": "}",
                                  "start": {
                                    "row": 21,
                                    "column": 1
                                  },
                                  "end": {
                                    "row": 21,
                                    "column": 2
                                  },
                                  "text": "}"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start": {
                        "row": 21,
                        "column": 2
                      },
                      "end": {
                        "row": 21,
                        "column": 3
                      },
                      "text": ";"
                    }
                  ]
                },
                {
                  "type": "return_statement",
                  "start": {
                    "row": 23,
                    "column": 1
                  },
                  "end": {
                    "row": 23,
                    "column": 14
                  },
                  "text": "return codec;",
                  "children": [
                    {
                      "type": "return",
                      "start": {
                        "row": 23,
                        "column": 1
                      },
                      "end": {
                        "row": 23,
                        "column": 7
                      },
                      "text": "return"
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 23,
                        "column": 8
                      },
                      "end": {
                        "row": 23,
                        "column": 13
                      },
                      "text": "codec"
                    },
                    {
                      "type": ";",
                      "start": {
                        "row": 23,
                        "column": 13
                      },
                      "end": {
                        "row": 23,
                        "column": 14
                      },
                      "text": ";"
                    }
                  ]
                },
                {
                  "type": "}",
                  "start": {
                    "row": 24,
                    "column": 0
                  },
                  "end": {
                    "row": 24,
                    "column": 1
                  },
                  "text": "}"
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}