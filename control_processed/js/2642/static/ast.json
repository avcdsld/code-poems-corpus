{
  "type": "program",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 32,
    "column": 1
  },
  "text": "function onlyProgressBar(props, propName, componentName) {\n  const children = props[propName];\n  if (!children) {\n    return null;\n  }\n\n  let error = null;\n\n  React.Children.forEach(children, child => {\n    if (error) {\n      return;\n    }\n\n    /**\n     * Compare types in a way that works with libraries that patch and proxy\n     * components like react-hot-loader.\n     *\n     * see https://github.com/gaearon/react-hot-loader#checking-element-types\n     */\n    const element = <DecoratedProgressBar />;\n    if (child.type === element.type) return;\n\n    const childIdentifier = React.isValidElement(child)\n      ? child.type.displayName || child.type.name || child.type\n      : child;\n    error = new Error(\n      `Children of ${componentName} can contain only ProgressBar ` +\n        `components. Found ${childIdentifier}.`,\n    );\n  });\n\n  return error;\n}",
  "children": [
    {
      "type": "function_declaration",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 32,
        "column": 1
      },
      "text": "function onlyProgressBar(props, propName, componentName) {\n  const children = props[propName];\n  if (!children) {\n    return null;\n  }\n\n  let error = null;\n\n  React.Children.forEach(children, child => {\n    if (error) {\n      return;\n    }\n\n    /**\n     * Compare types in a way that works with libraries that patch and proxy\n     * components like react-hot-loader.\n     *\n     * see https://github.com/gaearon/react-hot-loader#checking-element-types\n     */\n    const element = <DecoratedProgressBar />;\n    if (child.type === element.type) return;\n\n    const childIdentifier = React.isValidElement(child)\n      ? child.type.displayName || child.type.name || child.type\n      : child;\n    error = new Error(\n      `Children of ${componentName} can contain only ProgressBar ` +\n        `components. Found ${childIdentifier}.`,\n    );\n  });\n\n  return error;\n}",
      "children": [
        {
          "type": "function",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 8
          },
          "text": "function"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 9
          },
          "end": {
            "row": 0,
            "column": 24
          },
          "text": "onlyProgressBar"
        },
        {
          "type": "formal_parameters",
          "start": {
            "row": 0,
            "column": 24
          },
          "end": {
            "row": 0,
            "column": 56
          },
          "text": "(props, propName, componentName)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 24
              },
              "end": {
                "row": 0,
                "column": 25
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 25
              },
              "end": {
                "row": 0,
                "column": 30
              },
              "text": "props"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 30
              },
              "end": {
                "row": 0,
                "column": 31
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 32
              },
              "end": {
                "row": 0,
                "column": 40
              },
              "text": "propName"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 40
              },
              "end": {
                "row": 0,
                "column": 41
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 42
              },
              "end": {
                "row": 0,
                "column": 55
              },
              "text": "componentName"
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 55
              },
              "end": {
                "row": 0,
                "column": 56
              },
              "text": ")"
            }
          ]
        },
        {
          "type": "statement_block",
          "start": {
            "row": 0,
            "column": 57
          },
          "end": {
            "row": 32,
            "column": 1
          },
          "text": "{\n  const children = props[propName];\n  if (!children) {\n    return null;\n  }\n\n  let error = null;\n\n  React.Children.forEach(children, child => {\n    if (error) {\n      return;\n    }\n\n    /**\n     * Compare types in a way that works with libraries that patch and proxy\n     * components like react-hot-loader.\n     *\n     * see https://github.com/gaearon/react-hot-loader#checking-element-types\n     */\n    const element = <DecoratedProgressBar />;\n    if (child.type === element.type) return;\n\n    const childIdentifier = React.isValidElement(child)\n      ? child.type.displayName || child.type.name || child.type\n      : child;\n    error = new Error(\n      `Children of ${componentName} can contain only ProgressBar ` +\n        `components. Found ${childIdentifier}.`,\n    );\n  });\n\n  return error;\n}",
          "children": [
            {
              "type": "{",
              "start": {
                "row": 0,
                "column": 57
              },
              "end": {
                "row": 0,
                "column": 58
              },
              "text": "{"
            },
            {
              "type": "lexical_declaration",
              "start": {
                "row": 1,
                "column": 2
              },
              "end": {
                "row": 1,
                "column": 35
              },
              "text": "const children = props[propName];",
              "children": [
                {
                  "type": "const",
                  "start": {
                    "row": 1,
                    "column": 2
                  },
                  "end": {
                    "row": 1,
                    "column": 7
                  },
                  "text": "const"
                },
                {
                  "type": "variable_declarator",
                  "start": {
                    "row": 1,
                    "column": 8
                  },
                  "end": {
                    "row": 1,
                    "column": 34
                  },
                  "text": "children = props[propName]",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 1,
                        "column": 8
                      },
                      "end": {
                        "row": 1,
                        "column": 16
                      },
                      "text": "children"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 1,
                        "column": 17
                      },
                      "end": {
                        "row": 1,
                        "column": 18
                      },
                      "text": "="
                    },
                    {
                      "type": "subscript_expression",
                      "start": {
                        "row": 1,
                        "column": 19
                      },
                      "end": {
                        "row": 1,
                        "column": 34
                      },
                      "text": "props[propName]",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 1,
                            "column": 19
                          },
                          "end": {
                            "row": 1,
                            "column": 24
                          },
                          "text": "props"
                        },
                        {
                          "type": "[",
                          "start": {
                            "row": 1,
                            "column": 24
                          },
                          "end": {
                            "row": 1,
                            "column": 25
                          },
                          "text": "["
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 1,
                            "column": 25
                          },
                          "end": {
                            "row": 1,
                            "column": 33
                          },
                          "text": "propName"
                        },
                        {
                          "type": "]",
                          "start": {
                            "row": 1,
                            "column": 33
                          },
                          "end": {
                            "row": 1,
                            "column": 34
                          },
                          "text": "]"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 1,
                    "column": 34
                  },
                  "end": {
                    "row": 1,
                    "column": 35
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 2,
                "column": 2
              },
              "end": {
                "row": 4,
                "column": 3
              },
              "text": "if (!children) {\n    return null;\n  }",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 2,
                    "column": 2
                  },
                  "end": {
                    "row": 2,
                    "column": 4
                  },
                  "text": "if"
                },
                {
                  "type": "parenthesized_expression",
                  "start": {
                    "row": 2,
                    "column": 5
                  },
                  "end": {
                    "row": 2,
                    "column": 16
                  },
                  "text": "(!children)",
                  "children": [
                    {
                      "type": "(",
                      "start": {
                        "row": 2,
                        "column": 5
                      },
                      "end": {
                        "row": 2,
                        "column": 6
                      },
                      "text": "("
                    },
                    {
                      "type": "unary_expression",
                      "start": {
                        "row": 2,
                        "column": 6
                      },
                      "end": {
                        "row": 2,
                        "column": 15
                      },
                      "text": "!children",
                      "children": [
                        {
                          "type": "!",
                          "start": {
                            "row": 2,
                            "column": 6
                          },
                          "end": {
                            "row": 2,
                            "column": 7
                          },
                          "text": "!"
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 2,
                            "column": 7
                          },
                          "end": {
                            "row": 2,
                            "column": 15
                          },
                          "text": "children"
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start": {
                        "row": 2,
                        "column": 15
                      },
                      "end": {
                        "row": 2,
                        "column": 16
                      },
                      "text": ")"
                    }
                  ]
                },
                {
                  "type": "statement_block",
                  "start": {
                    "row": 2,
                    "column": 17
                  },
                  "end": {
                    "row": 4,
                    "column": 3
                  },
                  "text": "{\n    return null;\n  }",
                  "children": [
                    {
                      "type": "{",
                      "start": {
                        "row": 2,
                        "column": 17
                      },
                      "end": {
                        "row": 2,
                        "column": 18
                      },
                      "text": "{"
                    },
                    {
                      "type": "return_statement",
                      "start": {
                        "row": 3,
                        "column": 4
                      },
                      "end": {
                        "row": 3,
                        "column": 16
                      },
                      "text": "return null;",
                      "children": [
                        {
                          "type": "return",
                          "start": {
                            "row": 3,
                            "column": 4
                          },
                          "end": {
                            "row": 3,
                            "column": 10
                          },
                          "text": "return"
                        },
                        {
                          "type": "null",
                          "start": {
                            "row": 3,
                            "column": 11
                          },
                          "end": {
                            "row": 3,
                            "column": 15
                          },
                          "text": "null"
                        },
                        {
                          "type": ";",
                          "start": {
                            "row": 3,
                            "column": 15
                          },
                          "end": {
                            "row": 3,
                            "column": 16
                          },
                          "text": ";"
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start": {
                        "row": 4,
                        "column": 2
                      },
                      "end": {
                        "row": 4,
                        "column": 3
                      },
                      "text": "}"
                    }
                  ]
                }
              ]
            },
            {
              "type": "lexical_declaration",
              "start": {
                "row": 6,
                "column": 2
              },
              "end": {
                "row": 6,
                "column": 19
              },
              "text": "let error = null;",
              "children": [
                {
                  "type": "let",
                  "start": {
                    "row": 6,
                    "column": 2
                  },
                  "end": {
                    "row": 6,
                    "column": 5
                  },
                  "text": "let"
                },
                {
                  "type": "variable_declarator",
                  "start": {
                    "row": 6,
                    "column": 6
                  },
                  "end": {
                    "row": 6,
                    "column": 18
                  },
                  "text": "error = null",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 6,
                        "column": 6
                      },
                      "end": {
                        "row": 6,
                        "column": 11
                      },
                      "text": "error"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 6,
                        "column": 12
                      },
                      "end": {
                        "row": 6,
                        "column": 13
                      },
                      "text": "="
                    },
                    {
                      "type": "null",
                      "start": {
                        "row": 6,
                        "column": 14
                      },
                      "end": {
                        "row": 6,
                        "column": 18
                      },
                      "text": "null"
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 6,
                    "column": 18
                  },
                  "end": {
                    "row": 6,
                    "column": 19
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 8,
                "column": 2
              },
              "end": {
                "row": 29,
                "column": 5
              },
              "text": "React.Children.forEach(children, child => {\n    if (error) {\n      return;\n    }\n\n    /**\n     * Compare types in a way that works with libraries that patch and proxy\n     * components like react-hot-loader.\n     *\n     * see https://github.com/gaearon/react-hot-loader#checking-element-types\n     */\n    const element = <DecoratedProgressBar />;\n    if (child.type === element.type) return;\n\n    const childIdentifier = React.isValidElement(child)\n      ? child.type.displayName || child.type.name || child.type\n      : child;\n    error = new Error(\n      `Children of ${componentName} can contain only ProgressBar ` +\n        `components. Found ${childIdentifier}.`,\n    );\n  });",
              "children": [
                {
                  "type": "call_expression",
                  "start": {
                    "row": 8,
                    "column": 2
                  },
                  "end": {
                    "row": 29,
                    "column": 4
                  },
                  "text": "React.Children.forEach(children, child => {\n    if (error) {\n      return;\n    }\n\n    /**\n     * Compare types in a way that works with libraries that patch and proxy\n     * components like react-hot-loader.\n     *\n     * see https://github.com/gaearon/react-hot-loader#checking-element-types\n     */\n    const element = <DecoratedProgressBar />;\n    if (child.type === element.type) return;\n\n    const childIdentifier = React.isValidElement(child)\n      ? child.type.displayName || child.type.name || child.type\n      : child;\n    error = new Error(\n      `Children of ${componentName} can contain only ProgressBar ` +\n        `components. Found ${childIdentifier}.`,\n    );\n  })",
                  "children": [
                    {
                      "type": "member_expression",
                      "start": {
                        "row": 8,
                        "column": 2
                      },
                      "end": {
                        "row": 8,
                        "column": 24
                      },
                      "text": "React.Children.forEach",
                      "children": [
                        {
                          "type": "member_expression",
                          "start": {
                            "row": 8,
                            "column": 2
                          },
                          "end": {
                            "row": 8,
                            "column": 16
                          },
                          "text": "React.Children",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 8,
                                "column": 2
                              },
                              "end": {
                                "row": 8,
                                "column": 7
                              },
                              "text": "React"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 8,
                                "column": 7
                              },
                              "end": {
                                "row": 8,
                                "column": 8
                              },
                              "text": "."
                            },
                            {
                              "type": "property_identifier",
                              "start": {
                                "row": 8,
                                "column": 8
                              },
                              "end": {
                                "row": 8,
                                "column": 16
                              },
                              "text": "Children"
                            }
                          ]
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 8,
                            "column": 16
                          },
                          "end": {
                            "row": 8,
                            "column": 17
                          },
                          "text": "."
                        },
                        {
                          "type": "property_identifier",
                          "start": {
                            "row": 8,
                            "column": 17
                          },
                          "end": {
                            "row": 8,
                            "column": 24
                          },
                          "text": "forEach"
                        }
                      ]
                    },
                    {
                      "type": "arguments",
                      "start": {
                        "row": 8,
                        "column": 24
                      },
                      "end": {
                        "row": 29,
                        "column": 4
                      },
                      "text": "(children, child => {\n    if (error) {\n      return;\n    }\n\n    /**\n     * Compare types in a way that works with libraries that patch and proxy\n     * components like react-hot-loader.\n     *\n     * see https://github.com/gaearon/react-hot-loader#checking-element-types\n     */\n    const element = <DecoratedProgressBar />;\n    if (child.type === element.type) return;\n\n    const childIdentifier = React.isValidElement(child)\n      ? child.type.displayName || child.type.name || child.type\n      : child;\n    error = new Error(\n      `Children of ${componentName} can contain only ProgressBar ` +\n        `components. Found ${childIdentifier}.`,\n    );\n  })",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 8,
                            "column": 24
                          },
                          "end": {
                            "row": 8,
                            "column": 25
                          },
                          "text": "("
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 8,
                            "column": 25
                          },
                          "end": {
                            "row": 8,
                            "column": 33
                          },
                          "text": "children"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 8,
                            "column": 33
                          },
                          "end": {
                            "row": 8,
                            "column": 34
                          },
                          "text": ","
                        },
                        {
                          "type": "arrow_function",
                          "start": {
                            "row": 8,
                            "column": 35
                          },
                          "end": {
                            "row": 29,
                            "column": 3
                          },
                          "text": "child => {\n    if (error) {\n      return;\n    }\n\n    /**\n     * Compare types in a way that works with libraries that patch and proxy\n     * components like react-hot-loader.\n     *\n     * see https://github.com/gaearon/react-hot-loader#checking-element-types\n     */\n    const element = <DecoratedProgressBar />;\n    if (child.type === element.type) return;\n\n    const childIdentifier = React.isValidElement(child)\n      ? child.type.displayName || child.type.name || child.type\n      : child;\n    error = new Error(\n      `Children of ${componentName} can contain only ProgressBar ` +\n        `components. Found ${childIdentifier}.`,\n    );\n  }",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 8,
                                "column": 35
                              },
                              "end": {
                                "row": 8,
                                "column": 40
                              },
                              "text": "child"
                            },
                            {
                              "type": "=>",
                              "start": {
                                "row": 8,
                                "column": 41
                              },
                              "end": {
                                "row": 8,
                                "column": 43
                              },
                              "text": "=>"
                            },
                            {
                              "type": "statement_block",
                              "start": {
                                "row": 8,
                                "column": 44
                              },
                              "end": {
                                "row": 29,
                                "column": 3
                              },
                              "text": "{\n    if (error) {\n      return;\n    }\n\n    /**\n     * Compare types in a way that works with libraries that patch and proxy\n     * components like react-hot-loader.\n     *\n     * see https://github.com/gaearon/react-hot-loader#checking-element-types\n     */\n    const element = <DecoratedProgressBar />;\n    if (child.type === element.type) return;\n\n    const childIdentifier = React.isValidElement(child)\n      ? child.type.displayName || child.type.name || child.type\n      : child;\n    error = new Error(\n      `Children of ${componentName} can contain only ProgressBar ` +\n        `components. Found ${childIdentifier}.`,\n    );\n  }",
                              "children": [
                                {
                                  "type": "{",
                                  "start": {
                                    "row": 8,
                                    "column": 44
                                  },
                                  "end": {
                                    "row": 8,
                                    "column": 45
                                  },
                                  "text": "{"
                                },
                                {
                                  "type": "if_statement",
                                  "start": {
                                    "row": 9,
                                    "column": 4
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 5
                                  },
                                  "text": "if (error) {\n      return;\n    }",
                                  "children": [
                                    {
                                      "type": "if",
                                      "start": {
                                        "row": 9,
                                        "column": 4
                                      },
                                      "end": {
                                        "row": 9,
                                        "column": 6
                                      },
                                      "text": "if"
                                    },
                                    {
                                      "type": "parenthesized_expression",
                                      "start": {
                                        "row": 9,
                                        "column": 7
                                      },
                                      "end": {
                                        "row": 9,
                                        "column": 14
                                      },
                                      "text": "(error)",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 9,
                                            "column": 7
                                          },
                                          "end": {
                                            "row": 9,
                                            "column": 8
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 9,
                                            "column": 8
                                          },
                                          "end": {
                                            "row": 9,
                                            "column": 13
                                          },
                                          "text": "error"
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 9,
                                            "column": 13
                                          },
                                          "end": {
                                            "row": 9,
                                            "column": 14
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "statement_block",
                                      "start": {
                                        "row": 9,
                                        "column": 15
                                      },
                                      "end": {
                                        "row": 11,
                                        "column": 5
                                      },
                                      "text": "{\n      return;\n    }",
                                      "children": [
                                        {
                                          "type": "{",
                                          "start": {
                                            "row": 9,
                                            "column": 15
                                          },
                                          "end": {
                                            "row": 9,
                                            "column": 16
                                          },
                                          "text": "{"
                                        },
                                        {
                                          "type": "return_statement",
                                          "start": {
                                            "row": 10,
                                            "column": 6
                                          },
                                          "end": {
                                            "row": 10,
                                            "column": 13
                                          },
                                          "text": "return;",
                                          "children": [
                                            {
                                              "type": "return",
                                              "start": {
                                                "row": 10,
                                                "column": 6
                                              },
                                              "end": {
                                                "row": 10,
                                                "column": 12
                                              },
                                              "text": "return"
                                            },
                                            {
                                              "type": ";",
                                              "start": {
                                                "row": 10,
                                                "column": 12
                                              },
                                              "end": {
                                                "row": 10,
                                                "column": 13
                                              },
                                              "text": ";"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "}",
                                          "start": {
                                            "row": 11,
                                            "column": 4
                                          },
                                          "end": {
                                            "row": 11,
                                            "column": 5
                                          },
                                          "text": "}"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "comment",
                                  "start": {
                                    "row": 13,
                                    "column": 4
                                  },
                                  "end": {
                                    "row": 18,
                                    "column": 7
                                  },
                                  "text": "/**\n     * Compare types in a way that works with libraries that patch and proxy\n     * components like react-hot-loader.\n     *\n     * see https://github.com/gaearon/react-hot-loader#checking-element-types\n     */"
                                },
                                {
                                  "type": "lexical_declaration",
                                  "start": {
                                    "row": 19,
                                    "column": 4
                                  },
                                  "end": {
                                    "row": 19,
                                    "column": 45
                                  },
                                  "text": "const element = <DecoratedProgressBar />;",
                                  "children": [
                                    {
                                      "type": "const",
                                      "start": {
                                        "row": 19,
                                        "column": 4
                                      },
                                      "end": {
                                        "row": 19,
                                        "column": 9
                                      },
                                      "text": "const"
                                    },
                                    {
                                      "type": "variable_declarator",
                                      "start": {
                                        "row": 19,
                                        "column": 10
                                      },
                                      "end": {
                                        "row": 19,
                                        "column": 44
                                      },
                                      "text": "element = <DecoratedProgressBar />",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 19,
                                            "column": 10
                                          },
                                          "end": {
                                            "row": 19,
                                            "column": 17
                                          },
                                          "text": "element"
                                        },
                                        {
                                          "type": "=",
                                          "start": {
                                            "row": 19,
                                            "column": 18
                                          },
                                          "end": {
                                            "row": 19,
                                            "column": 19
                                          },
                                          "text": "="
                                        },
                                        {
                                          "type": "jsx_self_closing_element",
                                          "start": {
                                            "row": 19,
                                            "column": 20
                                          },
                                          "end": {
                                            "row": 19,
                                            "column": 44
                                          },
                                          "text": "<DecoratedProgressBar />",
                                          "children": [
                                            {
                                              "type": "<",
                                              "start": {
                                                "row": 19,
                                                "column": 20
                                              },
                                              "end": {
                                                "row": 19,
                                                "column": 21
                                              },
                                              "text": "<"
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 19,
                                                "column": 21
                                              },
                                              "end": {
                                                "row": 19,
                                                "column": 41
                                              },
                                              "text": "DecoratedProgressBar"
                                            },
                                            {
                                              "type": "/>",
                                              "start": {
                                                "row": 19,
                                                "column": 42
                                              },
                                              "end": {
                                                "row": 19,
                                                "column": 44
                                              },
                                              "text": "/>"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start": {
                                        "row": 19,
                                        "column": 44
                                      },
                                      "end": {
                                        "row": 19,
                                        "column": 45
                                      },
                                      "text": ";"
                                    }
                                  ]
                                },
                                {
                                  "type": "if_statement",
                                  "start": {
                                    "row": 20,
                                    "column": 4
                                  },
                                  "end": {
                                    "row": 20,
                                    "column": 44
                                  },
                                  "text": "if (child.type === element.type) return;",
                                  "children": [
                                    {
                                      "type": "if",
                                      "start": {
                                        "row": 20,
                                        "column": 4
                                      },
                                      "end": {
                                        "row": 20,
                                        "column": 6
                                      },
                                      "text": "if"
                                    },
                                    {
                                      "type": "parenthesized_expression",
                                      "start": {
                                        "row": 20,
                                        "column": 7
                                      },
                                      "end": {
                                        "row": 20,
                                        "column": 36
                                      },
                                      "text": "(child.type === element.type)",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 20,
                                            "column": 7
                                          },
                                          "end": {
                                            "row": 20,
                                            "column": 8
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start": {
                                            "row": 20,
                                            "column": 8
                                          },
                                          "end": {
                                            "row": 20,
                                            "column": 35
                                          },
                                          "text": "child.type === element.type",
                                          "children": [
                                            {
                                              "type": "member_expression",
                                              "start": {
                                                "row": 20,
                                                "column": 8
                                              },
                                              "end": {
                                                "row": 20,
                                                "column": 18
                                              },
                                              "text": "child.type",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 20,
                                                    "column": 8
                                                  },
                                                  "end": {
                                                    "row": 20,
                                                    "column": 13
                                                  },
                                                  "text": "child"
                                                },
                                                {
                                                  "type": ".",
                                                  "start": {
                                                    "row": 20,
                                                    "column": 13
                                                  },
                                                  "end": {
                                                    "row": 20,
                                                    "column": 14
                                                  },
                                                  "text": "."
                                                },
                                                {
                                                  "type": "property_identifier",
                                                  "start": {
                                                    "row": 20,
                                                    "column": 14
                                                  },
                                                  "end": {
                                                    "row": 20,
                                                    "column": 18
                                                  },
                                                  "text": "type"
                                                }
                                              ]
                                            },
                                            {
                                              "type": "===",
                                              "start": {
                                                "row": 20,
                                                "column": 19
                                              },
                                              "end": {
                                                "row": 20,
                                                "column": 22
                                              },
                                              "text": "==="
                                            },
                                            {
                                              "type": "member_expression",
                                              "start": {
                                                "row": 20,
                                                "column": 23
                                              },
                                              "end": {
                                                "row": 20,
                                                "column": 35
                                              },
                                              "text": "element.type",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 20,
                                                    "column": 23
                                                  },
                                                  "end": {
                                                    "row": 20,
                                                    "column": 30
                                                  },
                                                  "text": "element"
                                                },
                                                {
                                                  "type": ".",
                                                  "start": {
                                                    "row": 20,
                                                    "column": 30
                                                  },
                                                  "end": {
                                                    "row": 20,
                                                    "column": 31
                                                  },
                                                  "text": "."
                                                },
                                                {
                                                  "type": "property_identifier",
                                                  "start": {
                                                    "row": 20,
                                                    "column": 31
                                                  },
                                                  "end": {
                                                    "row": 20,
                                                    "column": 35
                                                  },
                                                  "text": "type"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 20,
                                            "column": 35
                                          },
                                          "end": {
                                            "row": 20,
                                            "column": 36
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "return_statement",
                                      "start": {
                                        "row": 20,
                                        "column": 37
                                      },
                                      "end": {
                                        "row": 20,
                                        "column": 44
                                      },
                                      "text": "return;",
                                      "children": [
                                        {
                                          "type": "return",
                                          "start": {
                                            "row": 20,
                                            "column": 37
                                          },
                                          "end": {
                                            "row": 20,
                                            "column": 43
                                          },
                                          "text": "return"
                                        },
                                        {
                                          "type": ";",
                                          "start": {
                                            "row": 20,
                                            "column": 43
                                          },
                                          "end": {
                                            "row": 20,
                                            "column": 44
                                          },
                                          "text": ";"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "lexical_declaration",
                                  "start": {
                                    "row": 22,
                                    "column": 4
                                  },
                                  "end": {
                                    "row": 24,
                                    "column": 14
                                  },
                                  "text": "const childIdentifier = React.isValidElement(child)\n      ? child.type.displayName || child.type.name || child.type\n      : child;",
                                  "children": [
                                    {
                                      "type": "const",
                                      "start": {
                                        "row": 22,
                                        "column": 4
                                      },
                                      "end": {
                                        "row": 22,
                                        "column": 9
                                      },
                                      "text": "const"
                                    },
                                    {
                                      "type": "variable_declarator",
                                      "start": {
                                        "row": 22,
                                        "column": 10
                                      },
                                      "end": {
                                        "row": 24,
                                        "column": 13
                                      },
                                      "text": "childIdentifier = React.isValidElement(child)\n      ? child.type.displayName || child.type.name || child.type\n      : child",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 22,
                                            "column": 10
                                          },
                                          "end": {
                                            "row": 22,
                                            "column": 25
                                          },
                                          "text": "childIdentifier"
                                        },
                                        {
                                          "type": "=",
                                          "start": {
                                            "row": 22,
                                            "column": 26
                                          },
                                          "end": {
                                            "row": 22,
                                            "column": 27
                                          },
                                          "text": "="
                                        },
                                        {
                                          "type": "ternary_expression",
                                          "start": {
                                            "row": 22,
                                            "column": 28
                                          },
                                          "end": {
                                            "row": 24,
                                            "column": 13
                                          },
                                          "text": "React.isValidElement(child)\n      ? child.type.displayName || child.type.name || child.type\n      : child",
                                          "children": [
                                            {
                                              "type": "call_expression",
                                              "start": {
                                                "row": 22,
                                                "column": 28
                                              },
                                              "end": {
                                                "row": 22,
                                                "column": 55
                                              },
                                              "text": "React.isValidElement(child)",
                                              "children": [
                                                {
                                                  "type": "member_expression",
                                                  "start": {
                                                    "row": 22,
                                                    "column": 28
                                                  },
                                                  "end": {
                                                    "row": 22,
                                                    "column": 48
                                                  },
                                                  "text": "React.isValidElement",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 22,
                                                        "column": 28
                                                      },
                                                      "end": {
                                                        "row": 22,
                                                        "column": 33
                                                      },
                                                      "text": "React"
                                                    },
                                                    {
                                                      "type": ".",
                                                      "start": {
                                                        "row": 22,
                                                        "column": 33
                                                      },
                                                      "end": {
                                                        "row": 22,
                                                        "column": 34
                                                      },
                                                      "text": "."
                                                    },
                                                    {
                                                      "type": "property_identifier",
                                                      "start": {
                                                        "row": 22,
                                                        "column": 34
                                                      },
                                                      "end": {
                                                        "row": 22,
                                                        "column": 48
                                                      },
                                                      "text": "isValidElement"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "arguments",
                                                  "start": {
                                                    "row": 22,
                                                    "column": 48
                                                  },
                                                  "end": {
                                                    "row": 22,
                                                    "column": 55
                                                  },
                                                  "text": "(child)",
                                                  "children": [
                                                    {
                                                      "type": "(",
                                                      "start": {
                                                        "row": 22,
                                                        "column": 48
                                                      },
                                                      "end": {
                                                        "row": 22,
                                                        "column": 49
                                                      },
                                                      "text": "("
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 22,
                                                        "column": 49
                                                      },
                                                      "end": {
                                                        "row": 22,
                                                        "column": 54
                                                      },
                                                      "text": "child"
                                                    },
                                                    {
                                                      "type": ")",
                                                      "start": {
                                                        "row": 22,
                                                        "column": 54
                                                      },
                                                      "end": {
                                                        "row": 22,
                                                        "column": 55
                                                      },
                                                      "text": ")"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "?",
                                              "start": {
                                                "row": 23,
                                                "column": 6
                                              },
                                              "end": {
                                                "row": 23,
                                                "column": 7
                                              },
                                              "text": "?"
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start": {
                                                "row": 23,
                                                "column": 8
                                              },
                                              "end": {
                                                "row": 23,
                                                "column": 63
                                              },
                                              "text": "child.type.displayName || child.type.name || child.type",
                                              "children": [
                                                {
                                                  "type": "binary_expression",
                                                  "start": {
                                                    "row": 23,
                                                    "column": 8
                                                  },
                                                  "end": {
                                                    "row": 23,
                                                    "column": 49
                                                  },
                                                  "text": "child.type.displayName || child.type.name",
                                                  "children": [
                                                    {
                                                      "type": "member_expression",
                                                      "start": {
                                                        "row": 23,
                                                        "column": 8
                                                      },
                                                      "end": {
                                                        "row": 23,
                                                        "column": 30
                                                      },
                                                      "text": "child.type.displayName",
                                                      "children": [
                                                        {
                                                          "type": "member_expression",
                                                          "start": {
                                                            "row": 23,
                                                            "column": 8
                                                          },
                                                          "end": {
                                                            "row": 23,
                                                            "column": 18
                                                          },
                                                          "text": "child.type",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start": {
                                                                "row": 23,
                                                                "column": 8
                                                              },
                                                              "end": {
                                                                "row": 23,
                                                                "column": 13
                                                              },
                                                              "text": "child"
                                                            },
                                                            {
                                                              "type": ".",
                                                              "start": {
                                                                "row": 23,
                                                                "column": 13
                                                              },
                                                              "end": {
                                                                "row": 23,
                                                                "column": 14
                                                              },
                                                              "text": "."
                                                            },
                                                            {
                                                              "type": "property_identifier",
                                                              "start": {
                                                                "row": 23,
                                                                "column": 14
                                                              },
                                                              "end": {
                                                                "row": 23,
                                                                "column": 18
                                                              },
                                                              "text": "type"
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": ".",
                                                          "start": {
                                                            "row": 23,
                                                            "column": 18
                                                          },
                                                          "end": {
                                                            "row": 23,
                                                            "column": 19
                                                          },
                                                          "text": "."
                                                        },
                                                        {
                                                          "type": "property_identifier",
                                                          "start": {
                                                            "row": 23,
                                                            "column": 19
                                                          },
                                                          "end": {
                                                            "row": 23,
                                                            "column": 30
                                                          },
                                                          "text": "displayName"
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "||",
                                                      "start": {
                                                        "row": 23,
                                                        "column": 31
                                                      },
                                                      "end": {
                                                        "row": 23,
                                                        "column": 33
                                                      },
                                                      "text": "||"
                                                    },
                                                    {
                                                      "type": "member_expression",
                                                      "start": {
                                                        "row": 23,
                                                        "column": 34
                                                      },
                                                      "end": {
                                                        "row": 23,
                                                        "column": 49
                                                      },
                                                      "text": "child.type.name",
                                                      "children": [
                                                        {
                                                          "type": "member_expression",
                                                          "start": {
                                                            "row": 23,
                                                            "column": 34
                                                          },
                                                          "end": {
                                                            "row": 23,
                                                            "column": 44
                                                          },
                                                          "text": "child.type",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start": {
                                                                "row": 23,
                                                                "column": 34
                                                              },
                                                              "end": {
                                                                "row": 23,
                                                                "column": 39
                                                              },
                                                              "text": "child"
                                                            },
                                                            {
                                                              "type": ".",
                                                              "start": {
                                                                "row": 23,
                                                                "column": 39
                                                              },
                                                              "end": {
                                                                "row": 23,
                                                                "column": 40
                                                              },
                                                              "text": "."
                                                            },
                                                            {
                                                              "type": "property_identifier",
                                                              "start": {
                                                                "row": 23,
                                                                "column": 40
                                                              },
                                                              "end": {
                                                                "row": 23,
                                                                "column": 44
                                                              },
                                                              "text": "type"
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": ".",
                                                          "start": {
                                                            "row": 23,
                                                            "column": 44
                                                          },
                                                          "end": {
                                                            "row": 23,
                                                            "column": 45
                                                          },
                                                          "text": "."
                                                        },
                                                        {
                                                          "type": "property_identifier",
                                                          "start": {
                                                            "row": 23,
                                                            "column": 45
                                                          },
                                                          "end": {
                                                            "row": 23,
                                                            "column": 49
                                                          },
                                                          "text": "name"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "||",
                                                  "start": {
                                                    "row": 23,
                                                    "column": 50
                                                  },
                                                  "end": {
                                                    "row": 23,
                                                    "column": 52
                                                  },
                                                  "text": "||"
                                                },
                                                {
                                                  "type": "member_expression",
                                                  "start": {
                                                    "row": 23,
                                                    "column": 53
                                                  },
                                                  "end": {
                                                    "row": 23,
                                                    "column": 63
                                                  },
                                                  "text": "child.type",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 23,
                                                        "column": 53
                                                      },
                                                      "end": {
                                                        "row": 23,
                                                        "column": 58
                                                      },
                                                      "text": "child"
                                                    },
                                                    {
                                                      "type": ".",
                                                      "start": {
                                                        "row": 23,
                                                        "column": 58
                                                      },
                                                      "end": {
                                                        "row": 23,
                                                        "column": 59
                                                      },
                                                      "text": "."
                                                    },
                                                    {
                                                      "type": "property_identifier",
                                                      "start": {
                                                        "row": 23,
                                                        "column": 59
                                                      },
                                                      "end": {
                                                        "row": 23,
                                                        "column": 63
                                                      },
                                                      "text": "type"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ":",
                                              "start": {
                                                "row": 24,
                                                "column": 6
                                              },
                                              "end": {
                                                "row": 24,
                                                "column": 7
                                              },
                                              "text": ":"
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 24,
                                                "column": 8
                                              },
                                              "end": {
                                                "row": 24,
                                                "column": 13
                                              },
                                              "text": "child"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start": {
                                        "row": 24,
                                        "column": 13
                                      },
                                      "end": {
                                        "row": 24,
                                        "column": 14
                                      },
                                      "text": ";"
                                    }
                                  ]
                                },
                                {
                                  "type": "expression_statement",
                                  "start": {
                                    "row": 25,
                                    "column": 4
                                  },
                                  "end": {
                                    "row": 28,
                                    "column": 6
                                  },
                                  "text": "error = new Error(\n      `Children of ${componentName} can contain only ProgressBar ` +\n        `components. Found ${childIdentifier}.`,\n    );",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start": {
                                        "row": 25,
                                        "column": 4
                                      },
                                      "end": {
                                        "row": 28,
                                        "column": 5
                                      },
                                      "text": "error = new Error(\n      `Children of ${componentName} can contain only ProgressBar ` +\n        `components. Found ${childIdentifier}.`,\n    )",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 25,
                                            "column": 4
                                          },
                                          "end": {
                                            "row": 25,
                                            "column": 9
                                          },
                                          "text": "error"
                                        },
                                        {
                                          "type": "=",
                                          "start": {
                                            "row": 25,
                                            "column": 10
                                          },
                                          "end": {
                                            "row": 25,
                                            "column": 11
                                          },
                                          "text": "="
                                        },
                                        {
                                          "type": "new_expression",
                                          "start": {
                                            "row": 25,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 28,
                                            "column": 5
                                          },
                                          "text": "new Error(\n      `Children of ${componentName} can contain only ProgressBar ` +\n        `components. Found ${childIdentifier}.`,\n    )",
                                          "children": [
                                            {
                                              "type": "new",
                                              "start": {
                                                "row": 25,
                                                "column": 12
                                              },
                                              "end": {
                                                "row": 25,
                                                "column": 15
                                              },
                                              "text": "new"
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 25,
                                                "column": 16
                                              },
                                              "end": {
                                                "row": 25,
                                                "column": 21
                                              },
                                              "text": "Error"
                                            },
                                            {
                                              "type": "arguments",
                                              "start": {
                                                "row": 25,
                                                "column": 21
                                              },
                                              "end": {
                                                "row": 28,
                                                "column": 5
                                              },
                                              "text": "(\n      `Children of ${componentName} can contain only ProgressBar ` +\n        `components. Found ${childIdentifier}.`,\n    )",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 25,
                                                    "column": 21
                                                  },
                                                  "end": {
                                                    "row": 25,
                                                    "column": 22
                                                  },
                                                  "text": "("
                                                },
                                                {
                                                  "type": "binary_expression",
                                                  "start": {
                                                    "row": 26,
                                                    "column": 6
                                                  },
                                                  "end": {
                                                    "row": 27,
                                                    "column": 47
                                                  },
                                                  "text": "`Children of ${componentName} can contain only ProgressBar ` +\n        `components. Found ${childIdentifier}.`",
                                                  "children": [
                                                    {
                                                      "type": "template_string",
                                                      "start": {
                                                        "row": 26,
                                                        "column": 6
                                                      },
                                                      "end": {
                                                        "row": 26,
                                                        "column": 66
                                                      },
                                                      "text": "`Children of ${componentName} can contain only ProgressBar `",
                                                      "children": [
                                                        {
                                                          "type": "`",
                                                          "start": {
                                                            "row": 26,
                                                            "column": 6
                                                          },
                                                          "end": {
                                                            "row": 26,
                                                            "column": 7
                                                          },
                                                          "text": "`"
                                                        },
                                                        {
                                                          "type": "template_substitution",
                                                          "start": {
                                                            "row": 26,
                                                            "column": 19
                                                          },
                                                          "end": {
                                                            "row": 26,
                                                            "column": 35
                                                          },
                                                          "text": "${componentName}",
                                                          "children": [
                                                            {
                                                              "type": "${",
                                                              "start": {
                                                                "row": 26,
                                                                "column": 19
                                                              },
                                                              "end": {
                                                                "row": 26,
                                                                "column": 21
                                                              },
                                                              "text": "${"
                                                            },
                                                            {
                                                              "type": "identifier",
                                                              "start": {
                                                                "row": 26,
                                                                "column": 21
                                                              },
                                                              "end": {
                                                                "row": 26,
                                                                "column": 34
                                                              },
                                                              "text": "componentName"
                                                            },
                                                            {
                                                              "type": "}",
                                                              "start": {
                                                                "row": 26,
                                                                "column": 34
                                                              },
                                                              "end": {
                                                                "row": 26,
                                                                "column": 35
                                                              },
                                                              "text": "}"
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "`",
                                                          "start": {
                                                            "row": 26,
                                                            "column": 65
                                                          },
                                                          "end": {
                                                            "row": 26,
                                                            "column": 66
                                                          },
                                                          "text": "`"
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "+",
                                                      "start": {
                                                        "row": 26,
                                                        "column": 67
                                                      },
                                                      "end": {
                                                        "row": 26,
                                                        "column": 68
                                                      },
                                                      "text": "+"
                                                    },
                                                    {
                                                      "type": "template_string",
                                                      "start": {
                                                        "row": 27,
                                                        "column": 8
                                                      },
                                                      "end": {
                                                        "row": 27,
                                                        "column": 47
                                                      },
                                                      "text": "`components. Found ${childIdentifier}.`",
                                                      "children": [
                                                        {
                                                          "type": "`",
                                                          "start": {
                                                            "row": 27,
                                                            "column": 8
                                                          },
                                                          "end": {
                                                            "row": 27,
                                                            "column": 9
                                                          },
                                                          "text": "`"
                                                        },
                                                        {
                                                          "type": "template_substitution",
                                                          "start": {
                                                            "row": 27,
                                                            "column": 27
                                                          },
                                                          "end": {
                                                            "row": 27,
                                                            "column": 45
                                                          },
                                                          "text": "${childIdentifier}",
                                                          "children": [
                                                            {
                                                              "type": "${",
                                                              "start": {
                                                                "row": 27,
                                                                "column": 27
                                                              },
                                                              "end": {
                                                                "row": 27,
                                                                "column": 29
                                                              },
                                                              "text": "${"
                                                            },
                                                            {
                                                              "type": "identifier",
                                                              "start": {
                                                                "row": 27,
                                                                "column": 29
                                                              },
                                                              "end": {
                                                                "row": 27,
                                                                "column": 44
                                                              },
                                                              "text": "childIdentifier"
                                                            },
                                                            {
                                                              "type": "}",
                                                              "start": {
                                                                "row": 27,
                                                                "column": 44
                                                              },
                                                              "end": {
                                                                "row": 27,
                                                                "column": 45
                                                              },
                                                              "text": "}"
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "`",
                                                          "start": {
                                                            "row": 27,
                                                            "column": 46
                                                          },
                                                          "end": {
                                                            "row": 27,
                                                            "column": 47
                                                          },
                                                          "text": "`"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ",",
                                                  "start": {
                                                    "row": 27,
                                                    "column": 47
                                                  },
                                                  "end": {
                                                    "row": 27,
                                                    "column": 48
                                                  },
                                                  "text": ","
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 28,
                                                    "column": 4
                                                  },
                                                  "end": {
                                                    "row": 28,
                                                    "column": 5
                                                  },
                                                  "text": ")"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start": {
                                        "row": 28,
                                        "column": 5
                                      },
                                      "end": {
                                        "row": 28,
                                        "column": 6
                                      },
                                      "text": ";"
                                    }
                                  ]
                                },
                                {
                                  "type": "}",
                                  "start": {
                                    "row": 29,
                                    "column": 2
                                  },
                                  "end": {
                                    "row": 29,
                                    "column": 3
                                  },
                                  "text": "}"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 29,
                            "column": 3
                          },
                          "end": {
                            "row": 29,
                            "column": 4
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 29,
                    "column": 4
                  },
                  "end": {
                    "row": 29,
                    "column": 5
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 31,
                "column": 2
              },
              "end": {
                "row": 31,
                "column": 15
              },
              "text": "return error;",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 31,
                    "column": 2
                  },
                  "end": {
                    "row": 31,
                    "column": 8
                  },
                  "text": "return"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 31,
                    "column": 9
                  },
                  "end": {
                    "row": 31,
                    "column": 14
                  },
                  "text": "error"
                },
                {
                  "type": ";",
                  "start": {
                    "row": 31,
                    "column": 14
                  },
                  "end": {
                    "row": 31,
                    "column": 15
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "}",
              "start": {
                "row": 32,
                "column": 0
              },
              "end": {
                "row": 32,
                "column": 1
              },
              "text": "}"
            }
          ]
        }
      ]
    }
  ]
}