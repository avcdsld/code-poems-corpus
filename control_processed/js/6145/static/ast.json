{
  "type": "program",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 29,
    "column": 9
  },
  "text": "function checkCallNew(node) {\n            const callee = node.callee;\n\n            if (hasExcessParens(callee) && precedence(callee) >= precedence(node)) {\n                const hasNewParensException = callee.type === \"NewExpression\" && !isNewExpressionWithParens(callee);\n\n                if (\n                    hasDoubleExcessParens(callee) ||\n                    !isIIFE(node) && !hasNewParensException && !(\n\n                        /*\n                         * Allow extra parens around a new expression if\n                         * there are intervening parentheses.\n                         */\n                        (callee.type === \"MemberExpression\" && doesMemberExpressionContainCallExpression(callee))\n                    )\n                ) {\n                    report(node.callee);\n                }\n            }\n            if (node.arguments.length === 1) {\n                if (hasDoubleExcessParens(node.arguments[0]) && precedence(node.arguments[0]) >= PRECEDENCE_OF_ASSIGNMENT_EXPR) {\n                    report(node.arguments[0]);\n                }\n            } else {\n                node.arguments\n                    .filter(arg => hasExcessParens(arg) && precedence(arg) >= PRECEDENCE_OF_ASSIGNMENT_EXPR)\n                    .forEach(report);\n            }\n        }",
  "children": [
    {
      "type": "function_declaration",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 29,
        "column": 9
      },
      "text": "function checkCallNew(node) {\n            const callee = node.callee;\n\n            if (hasExcessParens(callee) && precedence(callee) >= precedence(node)) {\n                const hasNewParensException = callee.type === \"NewExpression\" && !isNewExpressionWithParens(callee);\n\n                if (\n                    hasDoubleExcessParens(callee) ||\n                    !isIIFE(node) && !hasNewParensException && !(\n\n                        /*\n                         * Allow extra parens around a new expression if\n                         * there are intervening parentheses.\n                         */\n                        (callee.type === \"MemberExpression\" && doesMemberExpressionContainCallExpression(callee))\n                    )\n                ) {\n                    report(node.callee);\n                }\n            }\n            if (node.arguments.length === 1) {\n                if (hasDoubleExcessParens(node.arguments[0]) && precedence(node.arguments[0]) >= PRECEDENCE_OF_ASSIGNMENT_EXPR) {\n                    report(node.arguments[0]);\n                }\n            } else {\n                node.arguments\n                    .filter(arg => hasExcessParens(arg) && precedence(arg) >= PRECEDENCE_OF_ASSIGNMENT_EXPR)\n                    .forEach(report);\n            }\n        }",
      "children": [
        {
          "type": "function",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 8
          },
          "text": "function"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 9
          },
          "end": {
            "row": 0,
            "column": 21
          },
          "text": "checkCallNew"
        },
        {
          "type": "formal_parameters",
          "start": {
            "row": 0,
            "column": 21
          },
          "end": {
            "row": 0,
            "column": 27
          },
          "text": "(node)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 21
              },
              "end": {
                "row": 0,
                "column": 22
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 22
              },
              "end": {
                "row": 0,
                "column": 26
              },
              "text": "node"
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 26
              },
              "end": {
                "row": 0,
                "column": 27
              },
              "text": ")"
            }
          ]
        },
        {
          "type": "statement_block",
          "start": {
            "row": 0,
            "column": 28
          },
          "end": {
            "row": 29,
            "column": 9
          },
          "text": "{\n            const callee = node.callee;\n\n            if (hasExcessParens(callee) && precedence(callee) >= precedence(node)) {\n                const hasNewParensException = callee.type === \"NewExpression\" && !isNewExpressionWithParens(callee);\n\n                if (\n                    hasDoubleExcessParens(callee) ||\n                    !isIIFE(node) && !hasNewParensException && !(\n\n                        /*\n                         * Allow extra parens around a new expression if\n                         * there are intervening parentheses.\n                         */\n                        (callee.type === \"MemberExpression\" && doesMemberExpressionContainCallExpression(callee))\n                    )\n                ) {\n                    report(node.callee);\n                }\n            }\n            if (node.arguments.length === 1) {\n                if (hasDoubleExcessParens(node.arguments[0]) && precedence(node.arguments[0]) >= PRECEDENCE_OF_ASSIGNMENT_EXPR) {\n                    report(node.arguments[0]);\n                }\n            } else {\n                node.arguments\n                    .filter(arg => hasExcessParens(arg) && precedence(arg) >= PRECEDENCE_OF_ASSIGNMENT_EXPR)\n                    .forEach(report);\n            }\n        }",
          "children": [
            {
              "type": "{",
              "start": {
                "row": 0,
                "column": 28
              },
              "end": {
                "row": 0,
                "column": 29
              },
              "text": "{"
            },
            {
              "type": "lexical_declaration",
              "start": {
                "row": 1,
                "column": 12
              },
              "end": {
                "row": 1,
                "column": 39
              },
              "text": "const callee = node.callee;",
              "children": [
                {
                  "type": "const",
                  "start": {
                    "row": 1,
                    "column": 12
                  },
                  "end": {
                    "row": 1,
                    "column": 17
                  },
                  "text": "const"
                },
                {
                  "type": "variable_declarator",
                  "start": {
                    "row": 1,
                    "column": 18
                  },
                  "end": {
                    "row": 1,
                    "column": 38
                  },
                  "text": "callee = node.callee",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 1,
                        "column": 18
                      },
                      "end": {
                        "row": 1,
                        "column": 24
                      },
                      "text": "callee"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 1,
                        "column": 25
                      },
                      "end": {
                        "row": 1,
                        "column": 26
                      },
                      "text": "="
                    },
                    {
                      "type": "member_expression",
                      "start": {
                        "row": 1,
                        "column": 27
                      },
                      "end": {
                        "row": 1,
                        "column": 38
                      },
                      "text": "node.callee",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 1,
                            "column": 27
                          },
                          "end": {
                            "row": 1,
                            "column": 31
                          },
                          "text": "node"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 1,
                            "column": 31
                          },
                          "end": {
                            "row": 1,
                            "column": 32
                          },
                          "text": "."
                        },
                        {
                          "type": "property_identifier",
                          "start": {
                            "row": 1,
                            "column": 32
                          },
                          "end": {
                            "row": 1,
                            "column": 38
                          },
                          "text": "callee"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 1,
                    "column": 38
                  },
                  "end": {
                    "row": 1,
                    "column": 39
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 3,
                "column": 12
              },
              "end": {
                "row": 19,
                "column": 13
              },
              "text": "if (hasExcessParens(callee) && precedence(callee) >= precedence(node)) {\n                const hasNewParensException = callee.type === \"NewExpression\" && !isNewExpressionWithParens(callee);\n\n                if (\n                    hasDoubleExcessParens(callee) ||\n                    !isIIFE(node) && !hasNewParensException && !(\n\n                        /*\n                         * Allow extra parens around a new expression if\n                         * there are intervening parentheses.\n                         */\n                        (callee.type === \"MemberExpression\" && doesMemberExpressionContainCallExpression(callee))\n                    )\n                ) {\n                    report(node.callee);\n                }\n            }",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 3,
                    "column": 12
                  },
                  "end": {
                    "row": 3,
                    "column": 14
                  },
                  "text": "if"
                },
                {
                  "type": "parenthesized_expression",
                  "start": {
                    "row": 3,
                    "column": 15
                  },
                  "end": {
                    "row": 3,
                    "column": 82
                  },
                  "text": "(hasExcessParens(callee) && precedence(callee) >= precedence(node))",
                  "children": [
                    {
                      "type": "(",
                      "start": {
                        "row": 3,
                        "column": 15
                      },
                      "end": {
                        "row": 3,
                        "column": 16
                      },
                      "text": "("
                    },
                    {
                      "type": "binary_expression",
                      "start": {
                        "row": 3,
                        "column": 16
                      },
                      "end": {
                        "row": 3,
                        "column": 81
                      },
                      "text": "hasExcessParens(callee) && precedence(callee) >= precedence(node)",
                      "children": [
                        {
                          "type": "call_expression",
                          "start": {
                            "row": 3,
                            "column": 16
                          },
                          "end": {
                            "row": 3,
                            "column": 39
                          },
                          "text": "hasExcessParens(callee)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 3,
                                "column": 16
                              },
                              "end": {
                                "row": 3,
                                "column": 31
                              },
                              "text": "hasExcessParens"
                            },
                            {
                              "type": "arguments",
                              "start": {
                                "row": 3,
                                "column": 31
                              },
                              "end": {
                                "row": 3,
                                "column": 39
                              },
                              "text": "(callee)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 3,
                                    "column": 31
                                  },
                                  "end": {
                                    "row": 3,
                                    "column": 32
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 3,
                                    "column": 32
                                  },
                                  "end": {
                                    "row": 3,
                                    "column": 38
                                  },
                                  "text": "callee"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 3,
                                    "column": 38
                                  },
                                  "end": {
                                    "row": 3,
                                    "column": 39
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "&&",
                          "start": {
                            "row": 3,
                            "column": 40
                          },
                          "end": {
                            "row": 3,
                            "column": 42
                          },
                          "text": "&&"
                        },
                        {
                          "type": "binary_expression",
                          "start": {
                            "row": 3,
                            "column": 43
                          },
                          "end": {
                            "row": 3,
                            "column": 81
                          },
                          "text": "precedence(callee) >= precedence(node)",
                          "children": [
                            {
                              "type": "call_expression",
                              "start": {
                                "row": 3,
                                "column": 43
                              },
                              "end": {
                                "row": 3,
                                "column": 61
                              },
                              "text": "precedence(callee)",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 3,
                                    "column": 43
                                  },
                                  "end": {
                                    "row": 3,
                                    "column": 53
                                  },
                                  "text": "precedence"
                                },
                                {
                                  "type": "arguments",
                                  "start": {
                                    "row": 3,
                                    "column": 53
                                  },
                                  "end": {
                                    "row": 3,
                                    "column": 61
                                  },
                                  "text": "(callee)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 3,
                                        "column": 53
                                      },
                                      "end": {
                                        "row": 3,
                                        "column": 54
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 3,
                                        "column": 54
                                      },
                                      "end": {
                                        "row": 3,
                                        "column": 60
                                      },
                                      "text": "callee"
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 3,
                                        "column": 60
                                      },
                                      "end": {
                                        "row": 3,
                                        "column": 61
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ">=",
                              "start": {
                                "row": 3,
                                "column": 62
                              },
                              "end": {
                                "row": 3,
                                "column": 64
                              },
                              "text": ">="
                            },
                            {
                              "type": "call_expression",
                              "start": {
                                "row": 3,
                                "column": 65
                              },
                              "end": {
                                "row": 3,
                                "column": 81
                              },
                              "text": "precedence(node)",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 3,
                                    "column": 65
                                  },
                                  "end": {
                                    "row": 3,
                                    "column": 75
                                  },
                                  "text": "precedence"
                                },
                                {
                                  "type": "arguments",
                                  "start": {
                                    "row": 3,
                                    "column": 75
                                  },
                                  "end": {
                                    "row": 3,
                                    "column": 81
                                  },
                                  "text": "(node)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 3,
                                        "column": 75
                                      },
                                      "end": {
                                        "row": 3,
                                        "column": 76
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 3,
                                        "column": 76
                                      },
                                      "end": {
                                        "row": 3,
                                        "column": 80
                                      },
                                      "text": "node"
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 3,
                                        "column": 80
                                      },
                                      "end": {
                                        "row": 3,
                                        "column": 81
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start": {
                        "row": 3,
                        "column": 81
                      },
                      "end": {
                        "row": 3,
                        "column": 82
                      },
                      "text": ")"
                    }
                  ]
                },
                {
                  "type": "statement_block",
                  "start": {
                    "row": 3,
                    "column": 83
                  },
                  "end": {
                    "row": 19,
                    "column": 13
                  },
                  "text": "{\n                const hasNewParensException = callee.type === \"NewExpression\" && !isNewExpressionWithParens(callee);\n\n                if (\n                    hasDoubleExcessParens(callee) ||\n                    !isIIFE(node) && !hasNewParensException && !(\n\n                        /*\n                         * Allow extra parens around a new expression if\n                         * there are intervening parentheses.\n                         */\n                        (callee.type === \"MemberExpression\" && doesMemberExpressionContainCallExpression(callee))\n                    )\n                ) {\n                    report(node.callee);\n                }\n            }",
                  "children": [
                    {
                      "type": "{",
                      "start": {
                        "row": 3,
                        "column": 83
                      },
                      "end": {
                        "row": 3,
                        "column": 84
                      },
                      "text": "{"
                    },
                    {
                      "type": "lexical_declaration",
                      "start": {
                        "row": 4,
                        "column": 16
                      },
                      "end": {
                        "row": 4,
                        "column": 116
                      },
                      "text": "const hasNewParensException = callee.type === \"NewExpression\" && !isNewExpressionWithParens(callee);",
                      "children": [
                        {
                          "type": "const",
                          "start": {
                            "row": 4,
                            "column": 16
                          },
                          "end": {
                            "row": 4,
                            "column": 21
                          },
                          "text": "const"
                        },
                        {
                          "type": "variable_declarator",
                          "start": {
                            "row": 4,
                            "column": 22
                          },
                          "end": {
                            "row": 4,
                            "column": 115
                          },
                          "text": "hasNewParensException = callee.type === \"NewExpression\" && !isNewExpressionWithParens(callee)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 4,
                                "column": 22
                              },
                              "end": {
                                "row": 4,
                                "column": 43
                              },
                              "text": "hasNewParensException"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 4,
                                "column": 44
                              },
                              "end": {
                                "row": 4,
                                "column": 45
                              },
                              "text": "="
                            },
                            {
                              "type": "binary_expression",
                              "start": {
                                "row": 4,
                                "column": 46
                              },
                              "end": {
                                "row": 4,
                                "column": 115
                              },
                              "text": "callee.type === \"NewExpression\" && !isNewExpressionWithParens(callee)",
                              "children": [
                                {
                                  "type": "binary_expression",
                                  "start": {
                                    "row": 4,
                                    "column": 46
                                  },
                                  "end": {
                                    "row": 4,
                                    "column": 77
                                  },
                                  "text": "callee.type === \"NewExpression\"",
                                  "children": [
                                    {
                                      "type": "member_expression",
                                      "start": {
                                        "row": 4,
                                        "column": 46
                                      },
                                      "end": {
                                        "row": 4,
                                        "column": 57
                                      },
                                      "text": "callee.type",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 4,
                                            "column": 46
                                          },
                                          "end": {
                                            "row": 4,
                                            "column": 52
                                          },
                                          "text": "callee"
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 4,
                                            "column": 52
                                          },
                                          "end": {
                                            "row": 4,
                                            "column": 53
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "property_identifier",
                                          "start": {
                                            "row": 4,
                                            "column": 53
                                          },
                                          "end": {
                                            "row": 4,
                                            "column": 57
                                          },
                                          "text": "type"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "===",
                                      "start": {
                                        "row": 4,
                                        "column": 58
                                      },
                                      "end": {
                                        "row": 4,
                                        "column": 61
                                      },
                                      "text": "==="
                                    },
                                    {
                                      "type": "string",
                                      "start": {
                                        "row": 4,
                                        "column": 62
                                      },
                                      "end": {
                                        "row": 4,
                                        "column": 77
                                      },
                                      "text": "\"NewExpression\"",
                                      "children": [
                                        {
                                          "type": "\"",
                                          "start": {
                                            "row": 4,
                                            "column": 62
                                          },
                                          "end": {
                                            "row": 4,
                                            "column": 63
                                          },
                                          "text": "\""
                                        },
                                        {
                                          "type": "string_fragment",
                                          "start": {
                                            "row": 4,
                                            "column": 63
                                          },
                                          "end": {
                                            "row": 4,
                                            "column": 76
                                          },
                                          "text": "NewExpression"
                                        },
                                        {
                                          "type": "\"",
                                          "start": {
                                            "row": 4,
                                            "column": 76
                                          },
                                          "end": {
                                            "row": 4,
                                            "column": 77
                                          },
                                          "text": "\""
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "&&",
                                  "start": {
                                    "row": 4,
                                    "column": 78
                                  },
                                  "end": {
                                    "row": 4,
                                    "column": 80
                                  },
                                  "text": "&&"
                                },
                                {
                                  "type": "unary_expression",
                                  "start": {
                                    "row": 4,
                                    "column": 81
                                  },
                                  "end": {
                                    "row": 4,
                                    "column": 115
                                  },
                                  "text": "!isNewExpressionWithParens(callee)",
                                  "children": [
                                    {
                                      "type": "!",
                                      "start": {
                                        "row": 4,
                                        "column": 81
                                      },
                                      "end": {
                                        "row": 4,
                                        "column": 82
                                      },
                                      "text": "!"
                                    },
                                    {
                                      "type": "call_expression",
                                      "start": {
                                        "row": 4,
                                        "column": 82
                                      },
                                      "end": {
                                        "row": 4,
                                        "column": 115
                                      },
                                      "text": "isNewExpressionWithParens(callee)",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 4,
                                            "column": 82
                                          },
                                          "end": {
                                            "row": 4,
                                            "column": 107
                                          },
                                          "text": "isNewExpressionWithParens"
                                        },
                                        {
                                          "type": "arguments",
                                          "start": {
                                            "row": 4,
                                            "column": 107
                                          },
                                          "end": {
                                            "row": 4,
                                            "column": 115
                                          },
                                          "text": "(callee)",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 4,
                                                "column": 107
                                              },
                                              "end": {
                                                "row": 4,
                                                "column": 108
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 4,
                                                "column": 108
                                              },
                                              "end": {
                                                "row": 4,
                                                "column": 114
                                              },
                                              "text": "callee"
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 4,
                                                "column": 114
                                              },
                                              "end": {
                                                "row": 4,
                                                "column": 115
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start": {
                            "row": 4,
                            "column": 115
                          },
                          "end": {
                            "row": 4,
                            "column": 116
                          },
                          "text": ";"
                        }
                      ]
                    },
                    {
                      "type": "if_statement",
                      "start": {
                        "row": 6,
                        "column": 16
                      },
                      "end": {
                        "row": 18,
                        "column": 17
                      },
                      "text": "if (\n                    hasDoubleExcessParens(callee) ||\n                    !isIIFE(node) && !hasNewParensException && !(\n\n                        /*\n                         * Allow extra parens around a new expression if\n                         * there are intervening parentheses.\n                         */\n                        (callee.type === \"MemberExpression\" && doesMemberExpressionContainCallExpression(callee))\n                    )\n                ) {\n                    report(node.callee);\n                }",
                      "children": [
                        {
                          "type": "if",
                          "start": {
                            "row": 6,
                            "column": 16
                          },
                          "end": {
                            "row": 6,
                            "column": 18
                          },
                          "text": "if"
                        },
                        {
                          "type": "parenthesized_expression",
                          "start": {
                            "row": 6,
                            "column": 19
                          },
                          "end": {
                            "row": 16,
                            "column": 17
                          },
                          "text": "(\n                    hasDoubleExcessParens(callee) ||\n                    !isIIFE(node) && !hasNewParensException && !(\n\n                        /*\n                         * Allow extra parens around a new expression if\n                         * there are intervening parentheses.\n                         */\n                        (callee.type === \"MemberExpression\" && doesMemberExpressionContainCallExpression(callee))\n                    )\n                )",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 6,
                                "column": 19
                              },
                              "end": {
                                "row": 6,
                                "column": 20
                              },
                              "text": "("
                            },
                            {
                              "type": "binary_expression",
                              "start": {
                                "row": 7,
                                "column": 20
                              },
                              "end": {
                                "row": 15,
                                "column": 21
                              },
                              "text": "hasDoubleExcessParens(callee) ||\n                    !isIIFE(node) && !hasNewParensException && !(\n\n                        /*\n                         * Allow extra parens around a new expression if\n                         * there are intervening parentheses.\n                         */\n                        (callee.type === \"MemberExpression\" && doesMemberExpressionContainCallExpression(callee))\n                    )",
                              "children": [
                                {
                                  "type": "call_expression",
                                  "start": {
                                    "row": 7,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 7,
                                    "column": 49
                                  },
                                  "text": "hasDoubleExcessParens(callee)",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 7,
                                        "column": 20
                                      },
                                      "end": {
                                        "row": 7,
                                        "column": 41
                                      },
                                      "text": "hasDoubleExcessParens"
                                    },
                                    {
                                      "type": "arguments",
                                      "start": {
                                        "row": 7,
                                        "column": 41
                                      },
                                      "end": {
                                        "row": 7,
                                        "column": 49
                                      },
                                      "text": "(callee)",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 7,
                                            "column": 41
                                          },
                                          "end": {
                                            "row": 7,
                                            "column": 42
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 7,
                                            "column": 42
                                          },
                                          "end": {
                                            "row": 7,
                                            "column": 48
                                          },
                                          "text": "callee"
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 7,
                                            "column": 48
                                          },
                                          "end": {
                                            "row": 7,
                                            "column": 49
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "||",
                                  "start": {
                                    "row": 7,
                                    "column": 50
                                  },
                                  "end": {
                                    "row": 7,
                                    "column": 52
                                  },
                                  "text": "||"
                                },
                                {
                                  "type": "binary_expression",
                                  "start": {
                                    "row": 8,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 15,
                                    "column": 21
                                  },
                                  "text": "!isIIFE(node) && !hasNewParensException && !(\n\n                        /*\n                         * Allow extra parens around a new expression if\n                         * there are intervening parentheses.\n                         */\n                        (callee.type === \"MemberExpression\" && doesMemberExpressionContainCallExpression(callee))\n                    )",
                                  "children": [
                                    {
                                      "type": "binary_expression",
                                      "start": {
                                        "row": 8,
                                        "column": 20
                                      },
                                      "end": {
                                        "row": 8,
                                        "column": 59
                                      },
                                      "text": "!isIIFE(node) && !hasNewParensException",
                                      "children": [
                                        {
                                          "type": "unary_expression",
                                          "start": {
                                            "row": 8,
                                            "column": 20
                                          },
                                          "end": {
                                            "row": 8,
                                            "column": 33
                                          },
                                          "text": "!isIIFE(node)",
                                          "children": [
                                            {
                                              "type": "!",
                                              "start": {
                                                "row": 8,
                                                "column": 20
                                              },
                                              "end": {
                                                "row": 8,
                                                "column": 21
                                              },
                                              "text": "!"
                                            },
                                            {
                                              "type": "call_expression",
                                              "start": {
                                                "row": 8,
                                                "column": 21
                                              },
                                              "end": {
                                                "row": 8,
                                                "column": 33
                                              },
                                              "text": "isIIFE(node)",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 8,
                                                    "column": 21
                                                  },
                                                  "end": {
                                                    "row": 8,
                                                    "column": 27
                                                  },
                                                  "text": "isIIFE"
                                                },
                                                {
                                                  "type": "arguments",
                                                  "start": {
                                                    "row": 8,
                                                    "column": 27
                                                  },
                                                  "end": {
                                                    "row": 8,
                                                    "column": 33
                                                  },
                                                  "text": "(node)",
                                                  "children": [
                                                    {
                                                      "type": "(",
                                                      "start": {
                                                        "row": 8,
                                                        "column": 27
                                                      },
                                                      "end": {
                                                        "row": 8,
                                                        "column": 28
                                                      },
                                                      "text": "("
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 8,
                                                        "column": 28
                                                      },
                                                      "end": {
                                                        "row": 8,
                                                        "column": 32
                                                      },
                                                      "text": "node"
                                                    },
                                                    {
                                                      "type": ")",
                                                      "start": {
                                                        "row": 8,
                                                        "column": 32
                                                      },
                                                      "end": {
                                                        "row": 8,
                                                        "column": 33
                                                      },
                                                      "text": ")"
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "&&",
                                          "start": {
                                            "row": 8,
                                            "column": 34
                                          },
                                          "end": {
                                            "row": 8,
                                            "column": 36
                                          },
                                          "text": "&&"
                                        },
                                        {
                                          "type": "unary_expression",
                                          "start": {
                                            "row": 8,
                                            "column": 37
                                          },
                                          "end": {
                                            "row": 8,
                                            "column": 59
                                          },
                                          "text": "!hasNewParensException",
                                          "children": [
                                            {
                                              "type": "!",
                                              "start": {
                                                "row": 8,
                                                "column": 37
                                              },
                                              "end": {
                                                "row": 8,
                                                "column": 38
                                              },
                                              "text": "!"
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 8,
                                                "column": 38
                                              },
                                              "end": {
                                                "row": 8,
                                                "column": 59
                                              },
                                              "text": "hasNewParensException"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "&&",
                                      "start": {
                                        "row": 8,
                                        "column": 60
                                      },
                                      "end": {
                                        "row": 8,
                                        "column": 62
                                      },
                                      "text": "&&"
                                    },
                                    {
                                      "type": "unary_expression",
                                      "start": {
                                        "row": 8,
                                        "column": 63
                                      },
                                      "end": {
                                        "row": 15,
                                        "column": 21
                                      },
                                      "text": "!(\n\n                        /*\n                         * Allow extra parens around a new expression if\n                         * there are intervening parentheses.\n                         */\n                        (callee.type === \"MemberExpression\" && doesMemberExpressionContainCallExpression(callee))\n                    )",
                                      "children": [
                                        {
                                          "type": "!",
                                          "start": {
                                            "row": 8,
                                            "column": 63
                                          },
                                          "end": {
                                            "row": 8,
                                            "column": 64
                                          },
                                          "text": "!"
                                        },
                                        {
                                          "type": "parenthesized_expression",
                                          "start": {
                                            "row": 8,
                                            "column": 64
                                          },
                                          "end": {
                                            "row": 15,
                                            "column": 21
                                          },
                                          "text": "(\n\n                        /*\n                         * Allow extra parens around a new expression if\n                         * there are intervening parentheses.\n                         */\n                        (callee.type === \"MemberExpression\" && doesMemberExpressionContainCallExpression(callee))\n                    )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 8,
                                                "column": 64
                                              },
                                              "end": {
                                                "row": 8,
                                                "column": 65
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "comment",
                                              "start": {
                                                "row": 10,
                                                "column": 24
                                              },
                                              "end": {
                                                "row": 13,
                                                "column": 27
                                              },
                                              "text": "/*\n                         * Allow extra parens around a new expression if\n                         * there are intervening parentheses.\n                         */"
                                            },
                                            {
                                              "type": "parenthesized_expression",
                                              "start": {
                                                "row": 14,
                                                "column": 24
                                              },
                                              "end": {
                                                "row": 14,
                                                "column": 113
                                              },
                                              "text": "(callee.type === \"MemberExpression\" && doesMemberExpressionContainCallExpression(callee))",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 14,
                                                    "column": 24
                                                  },
                                                  "end": {
                                                    "row": 14,
                                                    "column": 25
                                                  },
                                                  "text": "("
                                                },
                                                {
                                                  "type": "binary_expression",
                                                  "start": {
                                                    "row": 14,
                                                    "column": 25
                                                  },
                                                  "end": {
                                                    "row": 14,
                                                    "column": 112
                                                  },
                                                  "text": "callee.type === \"MemberExpression\" && doesMemberExpressionContainCallExpression(callee)",
                                                  "children": [
                                                    {
                                                      "type": "binary_expression",
                                                      "start": {
                                                        "row": 14,
                                                        "column": 25
                                                      },
                                                      "end": {
                                                        "row": 14,
                                                        "column": 59
                                                      },
                                                      "text": "callee.type === \"MemberExpression\"",
                                                      "children": [
                                                        {
                                                          "type": "member_expression",
                                                          "start": {
                                                            "row": 14,
                                                            "column": 25
                                                          },
                                                          "end": {
                                                            "row": 14,
                                                            "column": 36
                                                          },
                                                          "text": "callee.type",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start": {
                                                                "row": 14,
                                                                "column": 25
                                                              },
                                                              "end": {
                                                                "row": 14,
                                                                "column": 31
                                                              },
                                                              "text": "callee"
                                                            },
                                                            {
                                                              "type": ".",
                                                              "start": {
                                                                "row": 14,
                                                                "column": 31
                                                              },
                                                              "end": {
                                                                "row": 14,
                                                                "column": 32
                                                              },
                                                              "text": "."
                                                            },
                                                            {
                                                              "type": "property_identifier",
                                                              "start": {
                                                                "row": 14,
                                                                "column": 32
                                                              },
                                                              "end": {
                                                                "row": 14,
                                                                "column": 36
                                                              },
                                                              "text": "type"
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "===",
                                                          "start": {
                                                            "row": 14,
                                                            "column": 37
                                                          },
                                                          "end": {
                                                            "row": 14,
                                                            "column": 40
                                                          },
                                                          "text": "==="
                                                        },
                                                        {
                                                          "type": "string",
                                                          "start": {
                                                            "row": 14,
                                                            "column": 41
                                                          },
                                                          "end": {
                                                            "row": 14,
                                                            "column": 59
                                                          },
                                                          "text": "\"MemberExpression\"",
                                                          "children": [
                                                            {
                                                              "type": "\"",
                                                              "start": {
                                                                "row": 14,
                                                                "column": 41
                                                              },
                                                              "end": {
                                                                "row": 14,
                                                                "column": 42
                                                              },
                                                              "text": "\""
                                                            },
                                                            {
                                                              "type": "string_fragment",
                                                              "start": {
                                                                "row": 14,
                                                                "column": 42
                                                              },
                                                              "end": {
                                                                "row": 14,
                                                                "column": 58
                                                              },
                                                              "text": "MemberExpression"
                                                            },
                                                            {
                                                              "type": "\"",
                                                              "start": {
                                                                "row": 14,
                                                                "column": 58
                                                              },
                                                              "end": {
                                                                "row": 14,
                                                                "column": 59
                                                              },
                                                              "text": "\""
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "&&",
                                                      "start": {
                                                        "row": 14,
                                                        "column": 60
                                                      },
                                                      "end": {
                                                        "row": 14,
                                                        "column": 62
                                                      },
                                                      "text": "&&"
                                                    },
                                                    {
                                                      "type": "call_expression",
                                                      "start": {
                                                        "row": 14,
                                                        "column": 63
                                                      },
                                                      "end": {
                                                        "row": 14,
                                                        "column": 112
                                                      },
                                                      "text": "doesMemberExpressionContainCallExpression(callee)",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 14,
                                                            "column": 63
                                                          },
                                                          "end": {
                                                            "row": 14,
                                                            "column": 104
                                                          },
                                                          "text": "doesMemberExpressionContainCallExpression"
                                                        },
                                                        {
                                                          "type": "arguments",
                                                          "start": {
                                                            "row": 14,
                                                            "column": 104
                                                          },
                                                          "end": {
                                                            "row": 14,
                                                            "column": 112
                                                          },
                                                          "text": "(callee)",
                                                          "children": [
                                                            {
                                                              "type": "(",
                                                              "start": {
                                                                "row": 14,
                                                                "column": 104
                                                              },
                                                              "end": {
                                                                "row": 14,
                                                                "column": 105
                                                              },
                                                              "text": "("
                                                            },
                                                            {
                                                              "type": "identifier",
                                                              "start": {
                                                                "row": 14,
                                                                "column": 105
                                                              },
                                                              "end": {
                                                                "row": 14,
                                                                "column": 111
                                                              },
                                                              "text": "callee"
                                                            },
                                                            {
                                                              "type": ")",
                                                              "start": {
                                                                "row": 14,
                                                                "column": 111
                                                              },
                                                              "end": {
                                                                "row": 14,
                                                                "column": 112
                                                              },
                                                              "text": ")"
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 14,
                                                    "column": 112
                                                  },
                                                  "end": {
                                                    "row": 14,
                                                    "column": 113
                                                  },
                                                  "text": ")"
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 15,
                                                "column": 20
                                              },
                                              "end": {
                                                "row": 15,
                                                "column": 21
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 16,
                                "column": 16
                              },
                              "end": {
                                "row": 16,
                                "column": 17
                              },
                              "text": ")"
                            }
                          ]
                        },
                        {
                          "type": "statement_block",
                          "start": {
                            "row": 16,
                            "column": 18
                          },
                          "end": {
                            "row": 18,
                            "column": 17
                          },
                          "text": "{\n                    report(node.callee);\n                }",
                          "children": [
                            {
                              "type": "{",
                              "start": {
                                "row": 16,
                                "column": 18
                              },
                              "end": {
                                "row": 16,
                                "column": 19
                              },
                              "text": "{"
                            },
                            {
                              "type": "expression_statement",
                              "start": {
                                "row": 17,
                                "column": 20
                              },
                              "end": {
                                "row": 17,
                                "column": 40
                              },
                              "text": "report(node.callee);",
                              "children": [
                                {
                                  "type": "call_expression",
                                  "start": {
                                    "row": 17,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 17,
                                    "column": 39
                                  },
                                  "text": "report(node.callee)",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 17,
                                        "column": 20
                                      },
                                      "end": {
                                        "row": 17,
                                        "column": 26
                                      },
                                      "text": "report"
                                    },
                                    {
                                      "type": "arguments",
                                      "start": {
                                        "row": 17,
                                        "column": 26
                                      },
                                      "end": {
                                        "row": 17,
                                        "column": 39
                                      },
                                      "text": "(node.callee)",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 17,
                                            "column": 26
                                          },
                                          "end": {
                                            "row": 17,
                                            "column": 27
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "member_expression",
                                          "start": {
                                            "row": 17,
                                            "column": 27
                                          },
                                          "end": {
                                            "row": 17,
                                            "column": 38
                                          },
                                          "text": "node.callee",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 17,
                                                "column": 27
                                              },
                                              "end": {
                                                "row": 17,
                                                "column": 31
                                              },
                                              "text": "node"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 17,
                                                "column": 31
                                              },
                                              "end": {
                                                "row": 17,
                                                "column": 32
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "property_identifier",
                                              "start": {
                                                "row": 17,
                                                "column": 32
                                              },
                                              "end": {
                                                "row": 17,
                                                "column": 38
                                              },
                                              "text": "callee"
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 17,
                                            "column": 38
                                          },
                                          "end": {
                                            "row": 17,
                                            "column": 39
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start": {
                                    "row": 17,
                                    "column": 39
                                  },
                                  "end": {
                                    "row": 17,
                                    "column": 40
                                  },
                                  "text": ";"
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start": {
                                "row": 18,
                                "column": 16
                              },
                              "end": {
                                "row": 18,
                                "column": 17
                              },
                              "text": "}"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start": {
                        "row": 19,
                        "column": 12
                      },
                      "end": {
                        "row": 19,
                        "column": 13
                      },
                      "text": "}"
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 20,
                "column": 12
              },
              "end": {
                "row": 28,
                "column": 13
              },
              "text": "if (node.arguments.length === 1) {\n                if (hasDoubleExcessParens(node.arguments[0]) && precedence(node.arguments[0]) >= PRECEDENCE_OF_ASSIGNMENT_EXPR) {\n                    report(node.arguments[0]);\n                }\n            } else {\n                node.arguments\n                    .filter(arg => hasExcessParens(arg) && precedence(arg) >= PRECEDENCE_OF_ASSIGNMENT_EXPR)\n                    .forEach(report);\n            }",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 20,
                    "column": 12
                  },
                  "end": {
                    "row": 20,
                    "column": 14
                  },
                  "text": "if"
                },
                {
                  "type": "parenthesized_expression",
                  "start": {
                    "row": 20,
                    "column": 15
                  },
                  "end": {
                    "row": 20,
                    "column": 44
                  },
                  "text": "(node.arguments.length === 1)",
                  "children": [
                    {
                      "type": "(",
                      "start": {
                        "row": 20,
                        "column": 15
                      },
                      "end": {
                        "row": 20,
                        "column": 16
                      },
                      "text": "("
                    },
                    {
                      "type": "binary_expression",
                      "start": {
                        "row": 20,
                        "column": 16
                      },
                      "end": {
                        "row": 20,
                        "column": 43
                      },
                      "text": "node.arguments.length === 1",
                      "children": [
                        {
                          "type": "member_expression",
                          "start": {
                            "row": 20,
                            "column": 16
                          },
                          "end": {
                            "row": 20,
                            "column": 37
                          },
                          "text": "node.arguments.length",
                          "children": [
                            {
                              "type": "member_expression",
                              "start": {
                                "row": 20,
                                "column": 16
                              },
                              "end": {
                                "row": 20,
                                "column": 30
                              },
                              "text": "node.arguments",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 20,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 20,
                                    "column": 20
                                  },
                                  "text": "node"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 20,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 20,
                                    "column": 21
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "property_identifier",
                                  "start": {
                                    "row": 20,
                                    "column": 21
                                  },
                                  "end": {
                                    "row": 20,
                                    "column": 30
                                  },
                                  "text": "arguments"
                                }
                              ]
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 20,
                                "column": 30
                              },
                              "end": {
                                "row": 20,
                                "column": 31
                              },
                              "text": "."
                            },
                            {
                              "type": "property_identifier",
                              "start": {
                                "row": 20,
                                "column": 31
                              },
                              "end": {
                                "row": 20,
                                "column": 37
                              },
                              "text": "length"
                            }
                          ]
                        },
                        {
                          "type": "===",
                          "start": {
                            "row": 20,
                            "column": 38
                          },
                          "end": {
                            "row": 20,
                            "column": 41
                          },
                          "text": "==="
                        },
                        {
                          "type": "number",
                          "start": {
                            "row": 20,
                            "column": 42
                          },
                          "end": {
                            "row": 20,
                            "column": 43
                          },
                          "text": "1"
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start": {
                        "row": 20,
                        "column": 43
                      },
                      "end": {
                        "row": 20,
                        "column": 44
                      },
                      "text": ")"
                    }
                  ]
                },
                {
                  "type": "statement_block",
                  "start": {
                    "row": 20,
                    "column": 45
                  },
                  "end": {
                    "row": 24,
                    "column": 13
                  },
                  "text": "{\n                if (hasDoubleExcessParens(node.arguments[0]) && precedence(node.arguments[0]) >= PRECEDENCE_OF_ASSIGNMENT_EXPR) {\n                    report(node.arguments[0]);\n                }\n            }",
                  "children": [
                    {
                      "type": "{",
                      "start": {
                        "row": 20,
                        "column": 45
                      },
                      "end": {
                        "row": 20,
                        "column": 46
                      },
                      "text": "{"
                    },
                    {
                      "type": "if_statement",
                      "start": {
                        "row": 21,
                        "column": 16
                      },
                      "end": {
                        "row": 23,
                        "column": 17
                      },
                      "text": "if (hasDoubleExcessParens(node.arguments[0]) && precedence(node.arguments[0]) >= PRECEDENCE_OF_ASSIGNMENT_EXPR) {\n                    report(node.arguments[0]);\n                }",
                      "children": [
                        {
                          "type": "if",
                          "start": {
                            "row": 21,
                            "column": 16
                          },
                          "end": {
                            "row": 21,
                            "column": 18
                          },
                          "text": "if"
                        },
                        {
                          "type": "parenthesized_expression",
                          "start": {
                            "row": 21,
                            "column": 19
                          },
                          "end": {
                            "row": 21,
                            "column": 127
                          },
                          "text": "(hasDoubleExcessParens(node.arguments[0]) && precedence(node.arguments[0]) >= PRECEDENCE_OF_ASSIGNMENT_EXPR)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 21,
                                "column": 19
                              },
                              "end": {
                                "row": 21,
                                "column": 20
                              },
                              "text": "("
                            },
                            {
                              "type": "binary_expression",
                              "start": {
                                "row": 21,
                                "column": 20
                              },
                              "end": {
                                "row": 21,
                                "column": 126
                              },
                              "text": "hasDoubleExcessParens(node.arguments[0]) && precedence(node.arguments[0]) >= PRECEDENCE_OF_ASSIGNMENT_EXPR",
                              "children": [
                                {
                                  "type": "call_expression",
                                  "start": {
                                    "row": 21,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 21,
                                    "column": 60
                                  },
                                  "text": "hasDoubleExcessParens(node.arguments[0])",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 21,
                                        "column": 20
                                      },
                                      "end": {
                                        "row": 21,
                                        "column": 41
                                      },
                                      "text": "hasDoubleExcessParens"
                                    },
                                    {
                                      "type": "arguments",
                                      "start": {
                                        "row": 21,
                                        "column": 41
                                      },
                                      "end": {
                                        "row": 21,
                                        "column": 60
                                      },
                                      "text": "(node.arguments[0])",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 21,
                                            "column": 41
                                          },
                                          "end": {
                                            "row": 21,
                                            "column": 42
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "subscript_expression",
                                          "start": {
                                            "row": 21,
                                            "column": 42
                                          },
                                          "end": {
                                            "row": 21,
                                            "column": 59
                                          },
                                          "text": "node.arguments[0]",
                                          "children": [
                                            {
                                              "type": "member_expression",
                                              "start": {
                                                "row": 21,
                                                "column": 42
                                              },
                                              "end": {
                                                "row": 21,
                                                "column": 56
                                              },
                                              "text": "node.arguments",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 21,
                                                    "column": 42
                                                  },
                                                  "end": {
                                                    "row": 21,
                                                    "column": 46
                                                  },
                                                  "text": "node"
                                                },
                                                {
                                                  "type": ".",
                                                  "start": {
                                                    "row": 21,
                                                    "column": 46
                                                  },
                                                  "end": {
                                                    "row": 21,
                                                    "column": 47
                                                  },
                                                  "text": "."
                                                },
                                                {
                                                  "type": "property_identifier",
                                                  "start": {
                                                    "row": 21,
                                                    "column": 47
                                                  },
                                                  "end": {
                                                    "row": 21,
                                                    "column": 56
                                                  },
                                                  "text": "arguments"
                                                }
                                              ]
                                            },
                                            {
                                              "type": "[",
                                              "start": {
                                                "row": 21,
                                                "column": 56
                                              },
                                              "end": {
                                                "row": 21,
                                                "column": 57
                                              },
                                              "text": "["
                                            },
                                            {
                                              "type": "number",
                                              "start": {
                                                "row": 21,
                                                "column": 57
                                              },
                                              "end": {
                                                "row": 21,
                                                "column": 58
                                              },
                                              "text": "0"
                                            },
                                            {
                                              "type": "]",
                                              "start": {
                                                "row": 21,
                                                "column": 58
                                              },
                                              "end": {
                                                "row": 21,
                                                "column": 59
                                              },
                                              "text": "]"
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 21,
                                            "column": 59
                                          },
                                          "end": {
                                            "row": 21,
                                            "column": 60
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "&&",
                                  "start": {
                                    "row": 21,
                                    "column": 61
                                  },
                                  "end": {
                                    "row": 21,
                                    "column": 63
                                  },
                                  "text": "&&"
                                },
                                {
                                  "type": "binary_expression",
                                  "start": {
                                    "row": 21,
                                    "column": 64
                                  },
                                  "end": {
                                    "row": 21,
                                    "column": 126
                                  },
                                  "text": "precedence(node.arguments[0]) >= PRECEDENCE_OF_ASSIGNMENT_EXPR",
                                  "children": [
                                    {
                                      "type": "call_expression",
                                      "start": {
                                        "row": 21,
                                        "column": 64
                                      },
                                      "end": {
                                        "row": 21,
                                        "column": 93
                                      },
                                      "text": "precedence(node.arguments[0])",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 21,
                                            "column": 64
                                          },
                                          "end": {
                                            "row": 21,
                                            "column": 74
                                          },
                                          "text": "precedence"
                                        },
                                        {
                                          "type": "arguments",
                                          "start": {
                                            "row": 21,
                                            "column": 74
                                          },
                                          "end": {
                                            "row": 21,
                                            "column": 93
                                          },
                                          "text": "(node.arguments[0])",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 21,
                                                "column": 74
                                              },
                                              "end": {
                                                "row": 21,
                                                "column": 75
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "subscript_expression",
                                              "start": {
                                                "row": 21,
                                                "column": 75
                                              },
                                              "end": {
                                                "row": 21,
                                                "column": 92
                                              },
                                              "text": "node.arguments[0]",
                                              "children": [
                                                {
                                                  "type": "member_expression",
                                                  "start": {
                                                    "row": 21,
                                                    "column": 75
                                                  },
                                                  "end": {
                                                    "row": 21,
                                                    "column": 89
                                                  },
                                                  "text": "node.arguments",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 21,
                                                        "column": 75
                                                      },
                                                      "end": {
                                                        "row": 21,
                                                        "column": 79
                                                      },
                                                      "text": "node"
                                                    },
                                                    {
                                                      "type": ".",
                                                      "start": {
                                                        "row": 21,
                                                        "column": 79
                                                      },
                                                      "end": {
                                                        "row": 21,
                                                        "column": 80
                                                      },
                                                      "text": "."
                                                    },
                                                    {
                                                      "type": "property_identifier",
                                                      "start": {
                                                        "row": 21,
                                                        "column": 80
                                                      },
                                                      "end": {
                                                        "row": 21,
                                                        "column": 89
                                                      },
                                                      "text": "arguments"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "[",
                                                  "start": {
                                                    "row": 21,
                                                    "column": 89
                                                  },
                                                  "end": {
                                                    "row": 21,
                                                    "column": 90
                                                  },
                                                  "text": "["
                                                },
                                                {
                                                  "type": "number",
                                                  "start": {
                                                    "row": 21,
                                                    "column": 90
                                                  },
                                                  "end": {
                                                    "row": 21,
                                                    "column": 91
                                                  },
                                                  "text": "0"
                                                },
                                                {
                                                  "type": "]",
                                                  "start": {
                                                    "row": 21,
                                                    "column": 91
                                                  },
                                                  "end": {
                                                    "row": 21,
                                                    "column": 92
                                                  },
                                                  "text": "]"
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 21,
                                                "column": 92
                                              },
                                              "end": {
                                                "row": 21,
                                                "column": 93
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ">=",
                                      "start": {
                                        "row": 21,
                                        "column": 94
                                      },
                                      "end": {
                                        "row": 21,
                                        "column": 96
                                      },
                                      "text": ">="
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 21,
                                        "column": 97
                                      },
                                      "end": {
                                        "row": 21,
                                        "column": 126
                                      },
                                      "text": "PRECEDENCE_OF_ASSIGNMENT_EXPR"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 21,
                                "column": 126
                              },
                              "end": {
                                "row": 21,
                                "column": 127
                              },
                              "text": ")"
                            }
                          ]
                        },
                        {
                          "type": "statement_block",
                          "start": {
                            "row": 21,
                            "column": 128
                          },
                          "end": {
                            "row": 23,
                            "column": 17
                          },
                          "text": "{\n                    report(node.arguments[0]);\n                }",
                          "children": [
                            {
                              "type": "{",
                              "start": {
                                "row": 21,
                                "column": 128
                              },
                              "end": {
                                "row": 21,
                                "column": 129
                              },
                              "text": "{"
                            },
                            {
                              "type": "expression_statement",
                              "start": {
                                "row": 22,
                                "column": 20
                              },
                              "end": {
                                "row": 22,
                                "column": 46
                              },
                              "text": "report(node.arguments[0]);",
                              "children": [
                                {
                                  "type": "call_expression",
                                  "start": {
                                    "row": 22,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 22,
                                    "column": 45
                                  },
                                  "text": "report(node.arguments[0])",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 22,
                                        "column": 20
                                      },
                                      "end": {
                                        "row": 22,
                                        "column": 26
                                      },
                                      "text": "report"
                                    },
                                    {
                                      "type": "arguments",
                                      "start": {
                                        "row": 22,
                                        "column": 26
                                      },
                                      "end": {
                                        "row": 22,
                                        "column": 45
                                      },
                                      "text": "(node.arguments[0])",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 22,
                                            "column": 26
                                          },
                                          "end": {
                                            "row": 22,
                                            "column": 27
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "subscript_expression",
                                          "start": {
                                            "row": 22,
                                            "column": 27
                                          },
                                          "end": {
                                            "row": 22,
                                            "column": 44
                                          },
                                          "text": "node.arguments[0]",
                                          "children": [
                                            {
                                              "type": "member_expression",
                                              "start": {
                                                "row": 22,
                                                "column": 27
                                              },
                                              "end": {
                                                "row": 22,
                                                "column": 41
                                              },
                                              "text": "node.arguments",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 22,
                                                    "column": 27
                                                  },
                                                  "end": {
                                                    "row": 22,
                                                    "column": 31
                                                  },
                                                  "text": "node"
                                                },
                                                {
                                                  "type": ".",
                                                  "start": {
                                                    "row": 22,
                                                    "column": 31
                                                  },
                                                  "end": {
                                                    "row": 22,
                                                    "column": 32
                                                  },
                                                  "text": "."
                                                },
                                                {
                                                  "type": "property_identifier",
                                                  "start": {
                                                    "row": 22,
                                                    "column": 32
                                                  },
                                                  "end": {
                                                    "row": 22,
                                                    "column": 41
                                                  },
                                                  "text": "arguments"
                                                }
                                              ]
                                            },
                                            {
                                              "type": "[",
                                              "start": {
                                                "row": 22,
                                                "column": 41
                                              },
                                              "end": {
                                                "row": 22,
                                                "column": 42
                                              },
                                              "text": "["
                                            },
                                            {
                                              "type": "number",
                                              "start": {
                                                "row": 22,
                                                "column": 42
                                              },
                                              "end": {
                                                "row": 22,
                                                "column": 43
                                              },
                                              "text": "0"
                                            },
                                            {
                                              "type": "]",
                                              "start": {
                                                "row": 22,
                                                "column": 43
                                              },
                                              "end": {
                                                "row": 22,
                                                "column": 44
                                              },
                                              "text": "]"
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 22,
                                            "column": 44
                                          },
                                          "end": {
                                            "row": 22,
                                            "column": 45
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start": {
                                    "row": 22,
                                    "column": 45
                                  },
                                  "end": {
                                    "row": 22,
                                    "column": 46
                                  },
                                  "text": ";"
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start": {
                                "row": 23,
                                "column": 16
                              },
                              "end": {
                                "row": 23,
                                "column": 17
                              },
                              "text": "}"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start": {
                        "row": 24,
                        "column": 12
                      },
                      "end": {
                        "row": 24,
                        "column": 13
                      },
                      "text": "}"
                    }
                  ]
                },
                {
                  "type": "else_clause",
                  "start": {
                    "row": 24,
                    "column": 14
                  },
                  "end": {
                    "row": 28,
                    "column": 13
                  },
                  "text": "else {\n                node.arguments\n                    .filter(arg => hasExcessParens(arg) && precedence(arg) >= PRECEDENCE_OF_ASSIGNMENT_EXPR)\n                    .forEach(report);\n            }",
                  "children": [
                    {
                      "type": "else",
                      "start": {
                        "row": 24,
                        "column": 14
                      },
                      "end": {
                        "row": 24,
                        "column": 18
                      },
                      "text": "else"
                    },
                    {
                      "type": "statement_block",
                      "start": {
                        "row": 24,
                        "column": 19
                      },
                      "end": {
                        "row": 28,
                        "column": 13
                      },
                      "text": "{\n                node.arguments\n                    .filter(arg => hasExcessParens(arg) && precedence(arg) >= PRECEDENCE_OF_ASSIGNMENT_EXPR)\n                    .forEach(report);\n            }",
                      "children": [
                        {
                          "type": "{",
                          "start": {
                            "row": 24,
                            "column": 19
                          },
                          "end": {
                            "row": 24,
                            "column": 20
                          },
                          "text": "{"
                        },
                        {
                          "type": "expression_statement",
                          "start": {
                            "row": 25,
                            "column": 16
                          },
                          "end": {
                            "row": 27,
                            "column": 37
                          },
                          "text": "node.arguments\n                    .filter(arg => hasExcessParens(arg) && precedence(arg) >= PRECEDENCE_OF_ASSIGNMENT_EXPR)\n                    .forEach(report);",
                          "children": [
                            {
                              "type": "call_expression",
                              "start": {
                                "row": 25,
                                "column": 16
                              },
                              "end": {
                                "row": 27,
                                "column": 36
                              },
                              "text": "node.arguments\n                    .filter(arg => hasExcessParens(arg) && precedence(arg) >= PRECEDENCE_OF_ASSIGNMENT_EXPR)\n                    .forEach(report)",
                              "children": [
                                {
                                  "type": "member_expression",
                                  "start": {
                                    "row": 25,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 27,
                                    "column": 28
                                  },
                                  "text": "node.arguments\n                    .filter(arg => hasExcessParens(arg) && precedence(arg) >= PRECEDENCE_OF_ASSIGNMENT_EXPR)\n                    .forEach",
                                  "children": [
                                    {
                                      "type": "call_expression",
                                      "start": {
                                        "row": 25,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 26,
                                        "column": 108
                                      },
                                      "text": "node.arguments\n                    .filter(arg => hasExcessParens(arg) && precedence(arg) >= PRECEDENCE_OF_ASSIGNMENT_EXPR)",
                                      "children": [
                                        {
                                          "type": "member_expression",
                                          "start": {
                                            "row": 25,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 26,
                                            "column": 27
                                          },
                                          "text": "node.arguments\n                    .filter",
                                          "children": [
                                            {
                                              "type": "member_expression",
                                              "start": {
                                                "row": 25,
                                                "column": 16
                                              },
                                              "end": {
                                                "row": 25,
                                                "column": 30
                                              },
                                              "text": "node.arguments",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 25,
                                                    "column": 16
                                                  },
                                                  "end": {
                                                    "row": 25,
                                                    "column": 20
                                                  },
                                                  "text": "node"
                                                },
                                                {
                                                  "type": ".",
                                                  "start": {
                                                    "row": 25,
                                                    "column": 20
                                                  },
                                                  "end": {
                                                    "row": 25,
                                                    "column": 21
                                                  },
                                                  "text": "."
                                                },
                                                {
                                                  "type": "property_identifier",
                                                  "start": {
                                                    "row": 25,
                                                    "column": 21
                                                  },
                                                  "end": {
                                                    "row": 25,
                                                    "column": 30
                                                  },
                                                  "text": "arguments"
                                                }
                                              ]
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 26,
                                                "column": 20
                                              },
                                              "end": {
                                                "row": 26,
                                                "column": 21
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "property_identifier",
                                              "start": {
                                                "row": 26,
                                                "column": 21
                                              },
                                              "end": {
                                                "row": 26,
                                                "column": 27
                                              },
                                              "text": "filter"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "arguments",
                                          "start": {
                                            "row": 26,
                                            "column": 27
                                          },
                                          "end": {
                                            "row": 26,
                                            "column": 108
                                          },
                                          "text": "(arg => hasExcessParens(arg) && precedence(arg) >= PRECEDENCE_OF_ASSIGNMENT_EXPR)",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 26,
                                                "column": 27
                                              },
                                              "end": {
                                                "row": 26,
                                                "column": 28
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "arrow_function",
                                              "start": {
                                                "row": 26,
                                                "column": 28
                                              },
                                              "end": {
                                                "row": 26,
                                                "column": 107
                                              },
                                              "text": "arg => hasExcessParens(arg) && precedence(arg) >= PRECEDENCE_OF_ASSIGNMENT_EXPR",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 26,
                                                    "column": 28
                                                  },
                                                  "end": {
                                                    "row": 26,
                                                    "column": 31
                                                  },
                                                  "text": "arg"
                                                },
                                                {
                                                  "type": "=>",
                                                  "start": {
                                                    "row": 26,
                                                    "column": 32
                                                  },
                                                  "end": {
                                                    "row": 26,
                                                    "column": 34
                                                  },
                                                  "text": "=>"
                                                },
                                                {
                                                  "type": "binary_expression",
                                                  "start": {
                                                    "row": 26,
                                                    "column": 35
                                                  },
                                                  "end": {
                                                    "row": 26,
                                                    "column": 107
                                                  },
                                                  "text": "hasExcessParens(arg) && precedence(arg) >= PRECEDENCE_OF_ASSIGNMENT_EXPR",
                                                  "children": [
                                                    {
                                                      "type": "call_expression",
                                                      "start": {
                                                        "row": 26,
                                                        "column": 35
                                                      },
                                                      "end": {
                                                        "row": 26,
                                                        "column": 55
                                                      },
                                                      "text": "hasExcessParens(arg)",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 26,
                                                            "column": 35
                                                          },
                                                          "end": {
                                                            "row": 26,
                                                            "column": 50
                                                          },
                                                          "text": "hasExcessParens"
                                                        },
                                                        {
                                                          "type": "arguments",
                                                          "start": {
                                                            "row": 26,
                                                            "column": 50
                                                          },
                                                          "end": {
                                                            "row": 26,
                                                            "column": 55
                                                          },
                                                          "text": "(arg)",
                                                          "children": [
                                                            {
                                                              "type": "(",
                                                              "start": {
                                                                "row": 26,
                                                                "column": 50
                                                              },
                                                              "end": {
                                                                "row": 26,
                                                                "column": 51
                                                              },
                                                              "text": "("
                                                            },
                                                            {
                                                              "type": "identifier",
                                                              "start": {
                                                                "row": 26,
                                                                "column": 51
                                                              },
                                                              "end": {
                                                                "row": 26,
                                                                "column": 54
                                                              },
                                                              "text": "arg"
                                                            },
                                                            {
                                                              "type": ")",
                                                              "start": {
                                                                "row": 26,
                                                                "column": 54
                                                              },
                                                              "end": {
                                                                "row": 26,
                                                                "column": 55
                                                              },
                                                              "text": ")"
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "&&",
                                                      "start": {
                                                        "row": 26,
                                                        "column": 56
                                                      },
                                                      "end": {
                                                        "row": 26,
                                                        "column": 58
                                                      },
                                                      "text": "&&"
                                                    },
                                                    {
                                                      "type": "binary_expression",
                                                      "start": {
                                                        "row": 26,
                                                        "column": 59
                                                      },
                                                      "end": {
                                                        "row": 26,
                                                        "column": 107
                                                      },
                                                      "text": "precedence(arg) >= PRECEDENCE_OF_ASSIGNMENT_EXPR",
                                                      "children": [
                                                        {
                                                          "type": "call_expression",
                                                          "start": {
                                                            "row": 26,
                                                            "column": 59
                                                          },
                                                          "end": {
                                                            "row": 26,
                                                            "column": 74
                                                          },
                                                          "text": "precedence(arg)",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start": {
                                                                "row": 26,
                                                                "column": 59
                                                              },
                                                              "end": {
                                                                "row": 26,
                                                                "column": 69
                                                              },
                                                              "text": "precedence"
                                                            },
                                                            {
                                                              "type": "arguments",
                                                              "start": {
                                                                "row": 26,
                                                                "column": 69
                                                              },
                                                              "end": {
                                                                "row": 26,
                                                                "column": 74
                                                              },
                                                              "text": "(arg)",
                                                              "children": [
                                                                {
                                                                  "type": "(",
                                                                  "start": {
                                                                    "row": 26,
                                                                    "column": 69
                                                                  },
                                                                  "end": {
                                                                    "row": 26,
                                                                    "column": 70
                                                                  },
                                                                  "text": "("
                                                                },
                                                                {
                                                                  "type": "identifier",
                                                                  "start": {
                                                                    "row": 26,
                                                                    "column": 70
                                                                  },
                                                                  "end": {
                                                                    "row": 26,
                                                                    "column": 73
                                                                  },
                                                                  "text": "arg"
                                                                },
                                                                {
                                                                  "type": ")",
                                                                  "start": {
                                                                    "row": 26,
                                                                    "column": 73
                                                                  },
                                                                  "end": {
                                                                    "row": 26,
                                                                    "column": 74
                                                                  },
                                                                  "text": ")"
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": ">=",
                                                          "start": {
                                                            "row": 26,
                                                            "column": 75
                                                          },
                                                          "end": {
                                                            "row": 26,
                                                            "column": 77
                                                          },
                                                          "text": ">="
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 26,
                                                            "column": 78
                                                          },
                                                          "end": {
                                                            "row": 26,
                                                            "column": 107
                                                          },
                                                          "text": "PRECEDENCE_OF_ASSIGNMENT_EXPR"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 26,
                                                "column": 107
                                              },
                                              "end": {
                                                "row": 26,
                                                "column": 108
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 27,
                                        "column": 20
                                      },
                                      "end": {
                                        "row": 27,
                                        "column": 21
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "property_identifier",
                                      "start": {
                                        "row": 27,
                                        "column": 21
                                      },
                                      "end": {
                                        "row": 27,
                                        "column": 28
                                      },
                                      "text": "forEach"
                                    }
                                  ]
                                },
                                {
                                  "type": "arguments",
                                  "start": {
                                    "row": 27,
                                    "column": 28
                                  },
                                  "end": {
                                    "row": 27,
                                    "column": 36
                                  },
                                  "text": "(report)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 27,
                                        "column": 28
                                      },
                                      "end": {
                                        "row": 27,
                                        "column": 29
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 27,
                                        "column": 29
                                      },
                                      "end": {
                                        "row": 27,
                                        "column": 35
                                      },
                                      "text": "report"
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 27,
                                        "column": 35
                                      },
                                      "end": {
                                        "row": 27,
                                        "column": 36
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start": {
                                "row": 27,
                                "column": 36
                              },
                              "end": {
                                "row": 27,
                                "column": 37
                              },
                              "text": ";"
                            }
                          ]
                        },
                        {
                          "type": "}",
                          "start": {
                            "row": 28,
                            "column": 12
                          },
                          "end": {
                            "row": 28,
                            "column": 13
                          },
                          "text": "}"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start": {
                "row": 29,
                "column": 8
              },
              "end": {
                "row": 29,
                "column": 9
              },
              "text": "}"
            }
          ]
        }
      ]
    }
  ]
}