{
  "type": "program",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 110,
    "column": 9
  },
  "text": "function (gl) {\n            var vertexShaderSource =\n                    //.x = declination\n                    //.y = right ascension\n                    //.z = point size\n                    //.w = magnitude\n                    'attribute vec4 vertexPoint;\\n' +\n\n                    'uniform mat4 mvpMatrix;\\n' +\n                    //number of days (positive or negative) since Greenwich noon, Terrestrial Time,\n                    // on 1 January 2000 (J2000.0)\n                    'uniform float numDays;\\n' +\n                    'uniform vec2 magnitudeRange;\\n' +\n\n                    'varying float magnitudeWeight;\\n' +\n\n                    //normalizes an angle between 0.0 and 359.0\n                    'float normalizeAngle(float angle) {\\n' +\n                    '   float angleDivisions = angle / 360.0;\\n' +\n                    '   return 360.0 * (angleDivisions - floor(angleDivisions));\\n' +\n                    '}\\n' +\n\n                    //transforms declination and right ascension in cartesian coordinates\n                    'vec3 computePosition(float dec, float ra) {\\n' +\n                    '   float GMST = normalizeAngle(280.46061837 + 360.98564736629 * numDays);\\n' +\n                    '   float GHA = normalizeAngle(GMST - ra);\\n' +\n                    '   float lon = -GHA + 360.0 * step(180.0, GHA);\\n' +\n                    '   float latRad = radians(dec);\\n' +\n                    '   float lonRad = radians(lon);\\n' +\n                    '   float radCosLat = cos(latRad);\\n' +\n                    '   return vec3(radCosLat * sin(lonRad), sin(latRad), radCosLat * cos(lonRad));\\n' +\n                    '}\\n' +\n\n                    //normalizes a value between 0.0 and 1.0\n                    'float normalizeScalar(float value, float minValue, float maxValue){\\n' +\n                    '   return (value - minValue) / (maxValue - minValue);\\n' +\n                    '}\\n' +\n\n                    'void main() {\\n' +\n                    '   vec3 vertexPosition = computePosition(vertexPoint.x, vertexPoint.y);\\n' +\n                    '   gl_Position = mvpMatrix * vec4(vertexPosition.xyz, 1.0);\\n' +\n                    '   gl_Position.z = gl_Position.w - 0.00001;\\n' +\n                    '   gl_PointSize = vertexPoint.z;\\n' +\n                    '   magnitudeWeight = normalizeScalar(vertexPoint.w, magnitudeRange.x, magnitudeRange.y);\\n' +\n                    '}',\n                fragmentShaderSource =\n                    'precision mediump float;\\n' +\n\n                    'uniform sampler2D textureSampler;\\n' +\n                    'uniform int textureEnabled;\\n' +\n\n                    'varying float magnitudeWeight;\\n' +\n\n                    'const vec4 white = vec4(1.0, 1.0, 1.0, 1.0);\\n' +\n                    'const vec4 grey = vec4(0.5, 0.5, 0.5, 1.0);\\n' +\n\n                    'void main() {\\n' +\n                    '   if (textureEnabled == 1) {\\n' +\n                    '       gl_FragColor = texture2D(textureSampler, gl_PointCoord);\\n' +\n                    '   }\\n' +\n                    '   else {\\n' +\n                    //paint the starts in shades of grey, where the brightest star is white and the dimmest star is grey\n                    '       gl_FragColor = mix(white, grey, magnitudeWeight);\\n' +\n                    '   }\\n' +\n                    '}';\n\n            // Call to the superclass, which performs shader program compiling and linking.\n            GpuProgram.call(this, gl, vertexShaderSource, fragmentShaderSource, [\"vertexPoint\"]);\n\n            /**\n             * The WebGL location for this program's 'vertexPoint' attribute.\n             * @type {Number}\n             * @readonly\n             */\n            this.vertexPointLocation = this.attributeLocation(gl, \"vertexPoint\");\n\n            /**\n             * The WebGL location for this program's 'mvpMatrix' uniform.\n             * @type {WebGLUniformLocation}\n             * @readonly\n             */\n            this.mvpMatrixLocation = this.uniformLocation(gl, \"mvpMatrix\");\n\n            /**\n             * The WebGL location for this program's 'numDays' uniform.\n             * @type {WebGLUniformLocation}\n             * @readonly\n             */\n            this.numDaysLocation = this.uniformLocation(gl, \"numDays\");\n\n            /**\n             * The WebGL location for this program's 'magnitudeRangeLocation' uniform.\n             * @type {WebGLUniformLocation}\n             * @readonly\n             */\n            this.magnitudeRangeLocation = this.uniformLocation(gl, \"magnitudeRange\");\n\n            /**\n             * The WebGL location for this program's 'textureSampler' uniform.\n             * @type {WebGLUniformLocation}\n             * @readonly\n             */\n            this.textureUnitLocation = this.uniformLocation(gl, \"textureSampler\");\n\n            /**\n             * The WebGL location for this program's 'textureEnabled' uniform.\n             * @type {WebGLUniformLocation}\n             * @readonly\n             */\n            this.textureEnabledLocation = this.uniformLocation(gl, \"textureEnabled\");\n        }",
  "children": [
    {
      "type": "expression_statement",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 110,
        "column": 9
      },
      "text": "function (gl) {\n            var vertexShaderSource =\n                    //.x = declination\n                    //.y = right ascension\n                    //.z = point size\n                    //.w = magnitude\n                    'attribute vec4 vertexPoint;\\n' +\n\n                    'uniform mat4 mvpMatrix;\\n' +\n                    //number of days (positive or negative) since Greenwich noon, Terrestrial Time,\n                    // on 1 January 2000 (J2000.0)\n                    'uniform float numDays;\\n' +\n                    'uniform vec2 magnitudeRange;\\n' +\n\n                    'varying float magnitudeWeight;\\n' +\n\n                    //normalizes an angle between 0.0 and 359.0\n                    'float normalizeAngle(float angle) {\\n' +\n                    '   float angleDivisions = angle / 360.0;\\n' +\n                    '   return 360.0 * (angleDivisions - floor(angleDivisions));\\n' +\n                    '}\\n' +\n\n                    //transforms declination and right ascension in cartesian coordinates\n                    'vec3 computePosition(float dec, float ra) {\\n' +\n                    '   float GMST = normalizeAngle(280.46061837 + 360.98564736629 * numDays);\\n' +\n                    '   float GHA = normalizeAngle(GMST - ra);\\n' +\n                    '   float lon = -GHA + 360.0 * step(180.0, GHA);\\n' +\n                    '   float latRad = radians(dec);\\n' +\n                    '   float lonRad = radians(lon);\\n' +\n                    '   float radCosLat = cos(latRad);\\n' +\n                    '   return vec3(radCosLat * sin(lonRad), sin(latRad), radCosLat * cos(lonRad));\\n' +\n                    '}\\n' +\n\n                    //normalizes a value between 0.0 and 1.0\n                    'float normalizeScalar(float value, float minValue, float maxValue){\\n' +\n                    '   return (value - minValue) / (maxValue - minValue);\\n' +\n                    '}\\n' +\n\n                    'void main() {\\n' +\n                    '   vec3 vertexPosition = computePosition(vertexPoint.x, vertexPoint.y);\\n' +\n                    '   gl_Position = mvpMatrix * vec4(vertexPosition.xyz, 1.0);\\n' +\n                    '   gl_Position.z = gl_Position.w - 0.00001;\\n' +\n                    '   gl_PointSize = vertexPoint.z;\\n' +\n                    '   magnitudeWeight = normalizeScalar(vertexPoint.w, magnitudeRange.x, magnitudeRange.y);\\n' +\n                    '}',\n                fragmentShaderSource =\n                    'precision mediump float;\\n' +\n\n                    'uniform sampler2D textureSampler;\\n' +\n                    'uniform int textureEnabled;\\n' +\n\n                    'varying float magnitudeWeight;\\n' +\n\n                    'const vec4 white = vec4(1.0, 1.0, 1.0, 1.0);\\n' +\n                    'const vec4 grey = vec4(0.5, 0.5, 0.5, 1.0);\\n' +\n\n                    'void main() {\\n' +\n                    '   if (textureEnabled == 1) {\\n' +\n                    '       gl_FragColor = texture2D(textureSampler, gl_PointCoord);\\n' +\n                    '   }\\n' +\n                    '   else {\\n' +\n                    //paint the starts in shades of grey, where the brightest star is white and the dimmest star is grey\n                    '       gl_FragColor = mix(white, grey, magnitudeWeight);\\n' +\n                    '   }\\n' +\n                    '}';\n\n            // Call to the superclass, which performs shader program compiling and linking.\n            GpuProgram.call(this, gl, vertexShaderSource, fragmentShaderSource, [\"vertexPoint\"]);\n\n            /**\n             * The WebGL location for this program's 'vertexPoint' attribute.\n             * @type {Number}\n             * @readonly\n             */\n            this.vertexPointLocation = this.attributeLocation(gl, \"vertexPoint\");\n\n            /**\n             * The WebGL location for this program's 'mvpMatrix' uniform.\n             * @type {WebGLUniformLocation}\n             * @readonly\n             */\n            this.mvpMatrixLocation = this.uniformLocation(gl, \"mvpMatrix\");\n\n            /**\n             * The WebGL location for this program's 'numDays' uniform.\n             * @type {WebGLUniformLocation}\n             * @readonly\n             */\n            this.numDaysLocation = this.uniformLocation(gl, \"numDays\");\n\n            /**\n             * The WebGL location for this program's 'magnitudeRangeLocation' uniform.\n             * @type {WebGLUniformLocation}\n             * @readonly\n             */\n            this.magnitudeRangeLocation = this.uniformLocation(gl, \"magnitudeRange\");\n\n            /**\n             * The WebGL location for this program's 'textureSampler' uniform.\n             * @type {WebGLUniformLocation}\n             * @readonly\n             */\n            this.textureUnitLocation = this.uniformLocation(gl, \"textureSampler\");\n\n            /**\n             * The WebGL location for this program's 'textureEnabled' uniform.\n             * @type {WebGLUniformLocation}\n             * @readonly\n             */\n            this.textureEnabledLocation = this.uniformLocation(gl, \"textureEnabled\");\n        }",
      "children": [
        {
          "type": "function",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 110,
            "column": 9
          },
          "text": "function (gl) {\n            var vertexShaderSource =\n                    //.x = declination\n                    //.y = right ascension\n                    //.z = point size\n                    //.w = magnitude\n                    'attribute vec4 vertexPoint;\\n' +\n\n                    'uniform mat4 mvpMatrix;\\n' +\n                    //number of days (positive or negative) since Greenwich noon, Terrestrial Time,\n                    // on 1 January 2000 (J2000.0)\n                    'uniform float numDays;\\n' +\n                    'uniform vec2 magnitudeRange;\\n' +\n\n                    'varying float magnitudeWeight;\\n' +\n\n                    //normalizes an angle between 0.0 and 359.0\n                    'float normalizeAngle(float angle) {\\n' +\n                    '   float angleDivisions = angle / 360.0;\\n' +\n                    '   return 360.0 * (angleDivisions - floor(angleDivisions));\\n' +\n                    '}\\n' +\n\n                    //transforms declination and right ascension in cartesian coordinates\n                    'vec3 computePosition(float dec, float ra) {\\n' +\n                    '   float GMST = normalizeAngle(280.46061837 + 360.98564736629 * numDays);\\n' +\n                    '   float GHA = normalizeAngle(GMST - ra);\\n' +\n                    '   float lon = -GHA + 360.0 * step(180.0, GHA);\\n' +\n                    '   float latRad = radians(dec);\\n' +\n                    '   float lonRad = radians(lon);\\n' +\n                    '   float radCosLat = cos(latRad);\\n' +\n                    '   return vec3(radCosLat * sin(lonRad), sin(latRad), radCosLat * cos(lonRad));\\n' +\n                    '}\\n' +\n\n                    //normalizes a value between 0.0 and 1.0\n                    'float normalizeScalar(float value, float minValue, float maxValue){\\n' +\n                    '   return (value - minValue) / (maxValue - minValue);\\n' +\n                    '}\\n' +\n\n                    'void main() {\\n' +\n                    '   vec3 vertexPosition = computePosition(vertexPoint.x, vertexPoint.y);\\n' +\n                    '   gl_Position = mvpMatrix * vec4(vertexPosition.xyz, 1.0);\\n' +\n                    '   gl_Position.z = gl_Position.w - 0.00001;\\n' +\n                    '   gl_PointSize = vertexPoint.z;\\n' +\n                    '   magnitudeWeight = normalizeScalar(vertexPoint.w, magnitudeRange.x, magnitudeRange.y);\\n' +\n                    '}',\n                fragmentShaderSource =\n                    'precision mediump float;\\n' +\n\n                    'uniform sampler2D textureSampler;\\n' +\n                    'uniform int textureEnabled;\\n' +\n\n                    'varying float magnitudeWeight;\\n' +\n\n                    'const vec4 white = vec4(1.0, 1.0, 1.0, 1.0);\\n' +\n                    'const vec4 grey = vec4(0.5, 0.5, 0.5, 1.0);\\n' +\n\n                    'void main() {\\n' +\n                    '   if (textureEnabled == 1) {\\n' +\n                    '       gl_FragColor = texture2D(textureSampler, gl_PointCoord);\\n' +\n                    '   }\\n' +\n                    '   else {\\n' +\n                    //paint the starts in shades of grey, where the brightest star is white and the dimmest star is grey\n                    '       gl_FragColor = mix(white, grey, magnitudeWeight);\\n' +\n                    '   }\\n' +\n                    '}';\n\n            // Call to the superclass, which performs shader program compiling and linking.\n            GpuProgram.call(this, gl, vertexShaderSource, fragmentShaderSource, [\"vertexPoint\"]);\n\n            /**\n             * The WebGL location for this program's 'vertexPoint' attribute.\n             * @type {Number}\n             * @readonly\n             */\n            this.vertexPointLocation = this.attributeLocation(gl, \"vertexPoint\");\n\n            /**\n             * The WebGL location for this program's 'mvpMatrix' uniform.\n             * @type {WebGLUniformLocation}\n             * @readonly\n             */\n            this.mvpMatrixLocation = this.uniformLocation(gl, \"mvpMatrix\");\n\n            /**\n             * The WebGL location for this program's 'numDays' uniform.\n             * @type {WebGLUniformLocation}\n             * @readonly\n             */\n            this.numDaysLocation = this.uniformLocation(gl, \"numDays\");\n\n            /**\n             * The WebGL location for this program's 'magnitudeRangeLocation' uniform.\n             * @type {WebGLUniformLocation}\n             * @readonly\n             */\n            this.magnitudeRangeLocation = this.uniformLocation(gl, \"magnitudeRange\");\n\n            /**\n             * The WebGL location for this program's 'textureSampler' uniform.\n             * @type {WebGLUniformLocation}\n             * @readonly\n             */\n            this.textureUnitLocation = this.uniformLocation(gl, \"textureSampler\");\n\n            /**\n             * The WebGL location for this program's 'textureEnabled' uniform.\n             * @type {WebGLUniformLocation}\n             * @readonly\n             */\n            this.textureEnabledLocation = this.uniformLocation(gl, \"textureEnabled\");\n        }",
          "children": [
            {
              "type": "function",
              "start": {
                "row": 0,
                "column": 0
              },
              "end": {
                "row": 0,
                "column": 8
              },
              "text": "function"
            },
            {
              "type": "formal_parameters",
              "start": {
                "row": 0,
                "column": 9
              },
              "end": {
                "row": 0,
                "column": 13
              },
              "text": "(gl)",
              "children": [
                {
                  "type": "(",
                  "start": {
                    "row": 0,
                    "column": 9
                  },
                  "end": {
                    "row": 0,
                    "column": 10
                  },
                  "text": "("
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 10
                  },
                  "end": {
                    "row": 0,
                    "column": 12
                  },
                  "text": "gl"
                },
                {
                  "type": ")",
                  "start": {
                    "row": 0,
                    "column": 12
                  },
                  "end": {
                    "row": 0,
                    "column": 13
                  },
                  "text": ")"
                }
              ]
            },
            {
              "type": "statement_block",
              "start": {
                "row": 0,
                "column": 14
              },
              "end": {
                "row": 110,
                "column": 9
              },
              "text": "{\n            var vertexShaderSource =\n                    //.x = declination\n                    //.y = right ascension\n                    //.z = point size\n                    //.w = magnitude\n                    'attribute vec4 vertexPoint;\\n' +\n\n                    'uniform mat4 mvpMatrix;\\n' +\n                    //number of days (positive or negative) since Greenwich noon, Terrestrial Time,\n                    // on 1 January 2000 (J2000.0)\n                    'uniform float numDays;\\n' +\n                    'uniform vec2 magnitudeRange;\\n' +\n\n                    'varying float magnitudeWeight;\\n' +\n\n                    //normalizes an angle between 0.0 and 359.0\n                    'float normalizeAngle(float angle) {\\n' +\n                    '   float angleDivisions = angle / 360.0;\\n' +\n                    '   return 360.0 * (angleDivisions - floor(angleDivisions));\\n' +\n                    '}\\n' +\n\n                    //transforms declination and right ascension in cartesian coordinates\n                    'vec3 computePosition(float dec, float ra) {\\n' +\n                    '   float GMST = normalizeAngle(280.46061837 + 360.98564736629 * numDays);\\n' +\n                    '   float GHA = normalizeAngle(GMST - ra);\\n' +\n                    '   float lon = -GHA + 360.0 * step(180.0, GHA);\\n' +\n                    '   float latRad = radians(dec);\\n' +\n                    '   float lonRad = radians(lon);\\n' +\n                    '   float radCosLat = cos(latRad);\\n' +\n                    '   return vec3(radCosLat * sin(lonRad), sin(latRad), radCosLat * cos(lonRad));\\n' +\n                    '}\\n' +\n\n                    //normalizes a value between 0.0 and 1.0\n                    'float normalizeScalar(float value, float minValue, float maxValue){\\n' +\n                    '   return (value - minValue) / (maxValue - minValue);\\n' +\n                    '}\\n' +\n\n                    'void main() {\\n' +\n                    '   vec3 vertexPosition = computePosition(vertexPoint.x, vertexPoint.y);\\n' +\n                    '   gl_Position = mvpMatrix * vec4(vertexPosition.xyz, 1.0);\\n' +\n                    '   gl_Position.z = gl_Position.w - 0.00001;\\n' +\n                    '   gl_PointSize = vertexPoint.z;\\n' +\n                    '   magnitudeWeight = normalizeScalar(vertexPoint.w, magnitudeRange.x, magnitudeRange.y);\\n' +\n                    '}',\n                fragmentShaderSource =\n                    'precision mediump float;\\n' +\n\n                    'uniform sampler2D textureSampler;\\n' +\n                    'uniform int textureEnabled;\\n' +\n\n                    'varying float magnitudeWeight;\\n' +\n\n                    'const vec4 white = vec4(1.0, 1.0, 1.0, 1.0);\\n' +\n                    'const vec4 grey = vec4(0.5, 0.5, 0.5, 1.0);\\n' +\n\n                    'void main() {\\n' +\n                    '   if (textureEnabled == 1) {\\n' +\n                    '       gl_FragColor = texture2D(textureSampler, gl_PointCoord);\\n' +\n                    '   }\\n' +\n                    '   else {\\n' +\n                    //paint the starts in shades of grey, where the brightest star is white and the dimmest star is grey\n                    '       gl_FragColor = mix(white, grey, magnitudeWeight);\\n' +\n                    '   }\\n' +\n                    '}';\n\n            // Call to the superclass, which performs shader program compiling and linking.\n            GpuProgram.call(this, gl, vertexShaderSource, fragmentShaderSource, [\"vertexPoint\"]);\n\n            /**\n             * The WebGL location for this program's 'vertexPoint' attribute.\n             * @type {Number}\n             * @readonly\n             */\n            this.vertexPointLocation = this.attributeLocation(gl, \"vertexPoint\");\n\n            /**\n             * The WebGL location for this program's 'mvpMatrix' uniform.\n             * @type {WebGLUniformLocation}\n             * @readonly\n             */\n            this.mvpMatrixLocation = this.uniformLocation(gl, \"mvpMatrix\");\n\n            /**\n             * The WebGL location for this program's 'numDays' uniform.\n             * @type {WebGLUniformLocation}\n             * @readonly\n             */\n            this.numDaysLocation = this.uniformLocation(gl, \"numDays\");\n\n            /**\n             * The WebGL location for this program's 'magnitudeRangeLocation' uniform.\n             * @type {WebGLUniformLocation}\n             * @readonly\n             */\n            this.magnitudeRangeLocation = this.uniformLocation(gl, \"magnitudeRange\");\n\n            /**\n             * The WebGL location for this program's 'textureSampler' uniform.\n             * @type {WebGLUniformLocation}\n             * @readonly\n             */\n            this.textureUnitLocation = this.uniformLocation(gl, \"textureSampler\");\n\n            /**\n             * The WebGL location for this program's 'textureEnabled' uniform.\n             * @type {WebGLUniformLocation}\n             * @readonly\n             */\n            this.textureEnabledLocation = this.uniformLocation(gl, \"textureEnabled\");\n        }",
              "children": [
                {
                  "type": "{",
                  "start": {
                    "row": 0,
                    "column": 14
                  },
                  "end": {
                    "row": 0,
                    "column": 15
                  },
                  "text": "{"
                },
                {
                  "type": "variable_declaration",
                  "start": {
                    "row": 1,
                    "column": 12
                  },
                  "end": {
                    "row": 64,
                    "column": 24
                  },
                  "text": "var vertexShaderSource =\n                    //.x = declination\n                    //.y = right ascension\n                    //.z = point size\n                    //.w = magnitude\n                    'attribute vec4 vertexPoint;\\n' +\n\n                    'uniform mat4 mvpMatrix;\\n' +\n                    //number of days (positive or negative) since Greenwich noon, Terrestrial Time,\n                    // on 1 January 2000 (J2000.0)\n                    'uniform float numDays;\\n' +\n                    'uniform vec2 magnitudeRange;\\n' +\n\n                    'varying float magnitudeWeight;\\n' +\n\n                    //normalizes an angle between 0.0 and 359.0\n                    'float normalizeAngle(float angle) {\\n' +\n                    '   float angleDivisions = angle / 360.0;\\n' +\n                    '   return 360.0 * (angleDivisions - floor(angleDivisions));\\n' +\n                    '}\\n' +\n\n                    //transforms declination and right ascension in cartesian coordinates\n                    'vec3 computePosition(float dec, float ra) {\\n' +\n                    '   float GMST = normalizeAngle(280.46061837 + 360.98564736629 * numDays);\\n' +\n                    '   float GHA = normalizeAngle(GMST - ra);\\n' +\n                    '   float lon = -GHA + 360.0 * step(180.0, GHA);\\n' +\n                    '   float latRad = radians(dec);\\n' +\n                    '   float lonRad = radians(lon);\\n' +\n                    '   float radCosLat = cos(latRad);\\n' +\n                    '   return vec3(radCosLat * sin(lonRad), sin(latRad), radCosLat * cos(lonRad));\\n' +\n                    '}\\n' +\n\n                    //normalizes a value between 0.0 and 1.0\n                    'float normalizeScalar(float value, float minValue, float maxValue){\\n' +\n                    '   return (value - minValue) / (maxValue - minValue);\\n' +\n                    '}\\n' +\n\n                    'void main() {\\n' +\n                    '   vec3 vertexPosition = computePosition(vertexPoint.x, vertexPoint.y);\\n' +\n                    '   gl_Position = mvpMatrix * vec4(vertexPosition.xyz, 1.0);\\n' +\n                    '   gl_Position.z = gl_Position.w - 0.00001;\\n' +\n                    '   gl_PointSize = vertexPoint.z;\\n' +\n                    '   magnitudeWeight = normalizeScalar(vertexPoint.w, magnitudeRange.x, magnitudeRange.y);\\n' +\n                    '}',\n                fragmentShaderSource =\n                    'precision mediump float;\\n' +\n\n                    'uniform sampler2D textureSampler;\\n' +\n                    'uniform int textureEnabled;\\n' +\n\n                    'varying float magnitudeWeight;\\n' +\n\n                    'const vec4 white = vec4(1.0, 1.0, 1.0, 1.0);\\n' +\n                    'const vec4 grey = vec4(0.5, 0.5, 0.5, 1.0);\\n' +\n\n                    'void main() {\\n' +\n                    '   if (textureEnabled == 1) {\\n' +\n                    '       gl_FragColor = texture2D(textureSampler, gl_PointCoord);\\n' +\n                    '   }\\n' +\n                    '   else {\\n' +\n                    //paint the starts in shades of grey, where the brightest star is white and the dimmest star is grey\n                    '       gl_FragColor = mix(white, grey, magnitudeWeight);\\n' +\n                    '   }\\n' +\n                    '}';",
                  "children": [
                    {
                      "type": "var",
                      "start": {
                        "row": 1,
                        "column": 12
                      },
                      "end": {
                        "row": 1,
                        "column": 15
                      },
                      "text": "var"
                    },
                    {
                      "type": "variable_declarator",
                      "start": {
                        "row": 1,
                        "column": 16
                      },
                      "end": {
                        "row": 44,
                        "column": 23
                      },
                      "text": "vertexShaderSource =\n                    //.x = declination\n                    //.y = right ascension\n                    //.z = point size\n                    //.w = magnitude\n                    'attribute vec4 vertexPoint;\\n' +\n\n                    'uniform mat4 mvpMatrix;\\n' +\n                    //number of days (positive or negative) since Greenwich noon, Terrestrial Time,\n                    // on 1 January 2000 (J2000.0)\n                    'uniform float numDays;\\n' +\n                    'uniform vec2 magnitudeRange;\\n' +\n\n                    'varying float magnitudeWeight;\\n' +\n\n                    //normalizes an angle between 0.0 and 359.0\n                    'float normalizeAngle(float angle) {\\n' +\n                    '   float angleDivisions = angle / 360.0;\\n' +\n                    '   return 360.0 * (angleDivisions - floor(angleDivisions));\\n' +\n                    '}\\n' +\n\n                    //transforms declination and right ascension in cartesian coordinates\n                    'vec3 computePosition(float dec, float ra) {\\n' +\n                    '   float GMST = normalizeAngle(280.46061837 + 360.98564736629 * numDays);\\n' +\n                    '   float GHA = normalizeAngle(GMST - ra);\\n' +\n                    '   float lon = -GHA + 360.0 * step(180.0, GHA);\\n' +\n                    '   float latRad = radians(dec);\\n' +\n                    '   float lonRad = radians(lon);\\n' +\n                    '   float radCosLat = cos(latRad);\\n' +\n                    '   return vec3(radCosLat * sin(lonRad), sin(latRad), radCosLat * cos(lonRad));\\n' +\n                    '}\\n' +\n\n                    //normalizes a value between 0.0 and 1.0\n                    'float normalizeScalar(float value, float minValue, float maxValue){\\n' +\n                    '   return (value - minValue) / (maxValue - minValue);\\n' +\n                    '}\\n' +\n\n                    'void main() {\\n' +\n                    '   vec3 vertexPosition = computePosition(vertexPoint.x, vertexPoint.y);\\n' +\n                    '   gl_Position = mvpMatrix * vec4(vertexPosition.xyz, 1.0);\\n' +\n                    '   gl_Position.z = gl_Position.w - 0.00001;\\n' +\n                    '   gl_PointSize = vertexPoint.z;\\n' +\n                    '   magnitudeWeight = normalizeScalar(vertexPoint.w, magnitudeRange.x, magnitudeRange.y);\\n' +\n                    '}'",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 1,
                            "column": 16
                          },
                          "end": {
                            "row": 1,
                            "column": 34
                          },
                          "text": "vertexShaderSource"
                        },
                        {
                          "type": "=",
                          "start": {
                            "row": 1,
                            "column": 35
                          },
                          "end": {
                            "row": 1,
                            "column": 36
                          },
                          "text": "="
                        },
                        {
                          "type": "comment",
                          "start": {
                            "row": 2,
                            "column": 20
                          },
                          "end": {
                            "row": 2,
                            "column": 38
                          },
                          "text": "//.x = declination"
                        },
                        {
                          "type": "comment",
                          "start": {
                            "row": 3,
                            "column": 20
                          },
                          "end": {
                            "row": 3,
                            "column": 42
                          },
                          "text": "//.y = right ascension"
                        },
                        {
                          "type": "comment",
                          "start": {
                            "row": 4,
                            "column": 20
                          },
                          "end": {
                            "row": 4,
                            "column": 37
                          },
                          "text": "//.z = point size"
                        },
                        {
                          "type": "comment",
                          "start": {
                            "row": 5,
                            "column": 20
                          },
                          "end": {
                            "row": 5,
                            "column": 36
                          },
                          "text": "//.w = magnitude"
                        },
                        {
                          "type": "binary_expression",
                          "start": {
                            "row": 6,
                            "column": 20
                          },
                          "end": {
                            "row": 44,
                            "column": 23
                          },
                          "text": "'attribute vec4 vertexPoint;\\n' +\n\n                    'uniform mat4 mvpMatrix;\\n' +\n                    //number of days (positive or negative) since Greenwich noon, Terrestrial Time,\n                    // on 1 January 2000 (J2000.0)\n                    'uniform float numDays;\\n' +\n                    'uniform vec2 magnitudeRange;\\n' +\n\n                    'varying float magnitudeWeight;\\n' +\n\n                    //normalizes an angle between 0.0 and 359.0\n                    'float normalizeAngle(float angle) {\\n' +\n                    '   float angleDivisions = angle / 360.0;\\n' +\n                    '   return 360.0 * (angleDivisions - floor(angleDivisions));\\n' +\n                    '}\\n' +\n\n                    //transforms declination and right ascension in cartesian coordinates\n                    'vec3 computePosition(float dec, float ra) {\\n' +\n                    '   float GMST = normalizeAngle(280.46061837 + 360.98564736629 * numDays);\\n' +\n                    '   float GHA = normalizeAngle(GMST - ra);\\n' +\n                    '   float lon = -GHA + 360.0 * step(180.0, GHA);\\n' +\n                    '   float latRad = radians(dec);\\n' +\n                    '   float lonRad = radians(lon);\\n' +\n                    '   float radCosLat = cos(latRad);\\n' +\n                    '   return vec3(radCosLat * sin(lonRad), sin(latRad), radCosLat * cos(lonRad));\\n' +\n                    '}\\n' +\n\n                    //normalizes a value between 0.0 and 1.0\n                    'float normalizeScalar(float value, float minValue, float maxValue){\\n' +\n                    '   return (value - minValue) / (maxValue - minValue);\\n' +\n                    '}\\n' +\n\n                    'void main() {\\n' +\n                    '   vec3 vertexPosition = computePosition(vertexPoint.x, vertexPoint.y);\\n' +\n                    '   gl_Position = mvpMatrix * vec4(vertexPosition.xyz, 1.0);\\n' +\n                    '   gl_Position.z = gl_Position.w - 0.00001;\\n' +\n                    '   gl_PointSize = vertexPoint.z;\\n' +\n                    '   magnitudeWeight = normalizeScalar(vertexPoint.w, magnitudeRange.x, magnitudeRange.y);\\n' +\n                    '}'",
                          "children": [
                            {
                              "type": "binary_expression",
                              "start": {
                                "row": 6,
                                "column": 20
                              },
                              "end": {
                                "row": 43,
                                "column": 112
                              },
                              "text": "'attribute vec4 vertexPoint;\\n' +\n\n                    'uniform mat4 mvpMatrix;\\n' +\n                    //number of days (positive or negative) since Greenwich noon, Terrestrial Time,\n                    // on 1 January 2000 (J2000.0)\n                    'uniform float numDays;\\n' +\n                    'uniform vec2 magnitudeRange;\\n' +\n\n                    'varying float magnitudeWeight;\\n' +\n\n                    //normalizes an angle between 0.0 and 359.0\n                    'float normalizeAngle(float angle) {\\n' +\n                    '   float angleDivisions = angle / 360.0;\\n' +\n                    '   return 360.0 * (angleDivisions - floor(angleDivisions));\\n' +\n                    '}\\n' +\n\n                    //transforms declination and right ascension in cartesian coordinates\n                    'vec3 computePosition(float dec, float ra) {\\n' +\n                    '   float GMST = normalizeAngle(280.46061837 + 360.98564736629 * numDays);\\n' +\n                    '   float GHA = normalizeAngle(GMST - ra);\\n' +\n                    '   float lon = -GHA + 360.0 * step(180.0, GHA);\\n' +\n                    '   float latRad = radians(dec);\\n' +\n                    '   float lonRad = radians(lon);\\n' +\n                    '   float radCosLat = cos(latRad);\\n' +\n                    '   return vec3(radCosLat * sin(lonRad), sin(latRad), radCosLat * cos(lonRad));\\n' +\n                    '}\\n' +\n\n                    //normalizes a value between 0.0 and 1.0\n                    'float normalizeScalar(float value, float minValue, float maxValue){\\n' +\n                    '   return (value - minValue) / (maxValue - minValue);\\n' +\n                    '}\\n' +\n\n                    'void main() {\\n' +\n                    '   vec3 vertexPosition = computePosition(vertexPoint.x, vertexPoint.y);\\n' +\n                    '   gl_Position = mvpMatrix * vec4(vertexPosition.xyz, 1.0);\\n' +\n                    '   gl_Position.z = gl_Position.w - 0.00001;\\n' +\n                    '   gl_PointSize = vertexPoint.z;\\n' +\n                    '   magnitudeWeight = normalizeScalar(vertexPoint.w, magnitudeRange.x, magnitudeRange.y);\\n'",
                              "children": [
                                {
                                  "type": "binary_expression",
                                  "start": {
                                    "row": 6,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 42,
                                    "column": 56
                                  },
                                  "text": "'attribute vec4 vertexPoint;\\n' +\n\n                    'uniform mat4 mvpMatrix;\\n' +\n                    //number of days (positive or negative) since Greenwich noon, Terrestrial Time,\n                    // on 1 January 2000 (J2000.0)\n                    'uniform float numDays;\\n' +\n                    'uniform vec2 magnitudeRange;\\n' +\n\n                    'varying float magnitudeWeight;\\n' +\n\n                    //normalizes an angle between 0.0 and 359.0\n                    'float normalizeAngle(float angle) {\\n' +\n                    '   float angleDivisions = angle / 360.0;\\n' +\n                    '   return 360.0 * (angleDivisions - floor(angleDivisions));\\n' +\n                    '}\\n' +\n\n                    //transforms declination and right ascension in cartesian coordinates\n                    'vec3 computePosition(float dec, float ra) {\\n' +\n                    '   float GMST = normalizeAngle(280.46061837 + 360.98564736629 * numDays);\\n' +\n                    '   float GHA = normalizeAngle(GMST - ra);\\n' +\n                    '   float lon = -GHA + 360.0 * step(180.0, GHA);\\n' +\n                    '   float latRad = radians(dec);\\n' +\n                    '   float lonRad = radians(lon);\\n' +\n                    '   float radCosLat = cos(latRad);\\n' +\n                    '   return vec3(radCosLat * sin(lonRad), sin(latRad), radCosLat * cos(lonRad));\\n' +\n                    '}\\n' +\n\n                    //normalizes a value between 0.0 and 1.0\n                    'float normalizeScalar(float value, float minValue, float maxValue){\\n' +\n                    '   return (value - minValue) / (maxValue - minValue);\\n' +\n                    '}\\n' +\n\n                    'void main() {\\n' +\n                    '   vec3 vertexPosition = computePosition(vertexPoint.x, vertexPoint.y);\\n' +\n                    '   gl_Position = mvpMatrix * vec4(vertexPosition.xyz, 1.0);\\n' +\n                    '   gl_Position.z = gl_Position.w - 0.00001;\\n' +\n                    '   gl_PointSize = vertexPoint.z;\\n'",
                                  "children": [
                                    {
                                      "type": "binary_expression",
                                      "start": {
                                        "row": 6,
                                        "column": 20
                                      },
                                      "end": {
                                        "row": 41,
                                        "column": 67
                                      },
                                      "text": "'attribute vec4 vertexPoint;\\n' +\n\n                    'uniform mat4 mvpMatrix;\\n' +\n                    //number of days (positive or negative) since Greenwich noon, Terrestrial Time,\n                    // on 1 January 2000 (J2000.0)\n                    'uniform float numDays;\\n' +\n                    'uniform vec2 magnitudeRange;\\n' +\n\n                    'varying float magnitudeWeight;\\n' +\n\n                    //normalizes an angle between 0.0 and 359.0\n                    'float normalizeAngle(float angle) {\\n' +\n                    '   float angleDivisions = angle / 360.0;\\n' +\n                    '   return 360.0 * (angleDivisions - floor(angleDivisions));\\n' +\n                    '}\\n' +\n\n                    //transforms declination and right ascension in cartesian coordinates\n                    'vec3 computePosition(float dec, float ra) {\\n' +\n                    '   float GMST = normalizeAngle(280.46061837 + 360.98564736629 * numDays);\\n' +\n                    '   float GHA = normalizeAngle(GMST - ra);\\n' +\n                    '   float lon = -GHA + 360.0 * step(180.0, GHA);\\n' +\n                    '   float latRad = radians(dec);\\n' +\n                    '   float lonRad = radians(lon);\\n' +\n                    '   float radCosLat = cos(latRad);\\n' +\n                    '   return vec3(radCosLat * sin(lonRad), sin(latRad), radCosLat * cos(lonRad));\\n' +\n                    '}\\n' +\n\n                    //normalizes a value between 0.0 and 1.0\n                    'float normalizeScalar(float value, float minValue, float maxValue){\\n' +\n                    '   return (value - minValue) / (maxValue - minValue);\\n' +\n                    '}\\n' +\n\n                    'void main() {\\n' +\n                    '   vec3 vertexPosition = computePosition(vertexPoint.x, vertexPoint.y);\\n' +\n                    '   gl_Position = mvpMatrix * vec4(vertexPosition.xyz, 1.0);\\n' +\n                    '   gl_Position.z = gl_Position.w - 0.00001;\\n'",
                                      "children": [
                                        {
                                          "type": "binary_expression",
                                          "start": {
                                            "row": 6,
                                            "column": 20
                                          },
                                          "end": {
                                            "row": 40,
                                            "column": 83
                                          },
                                          "text": "'attribute vec4 vertexPoint;\\n' +\n\n                    'uniform mat4 mvpMatrix;\\n' +\n                    //number of days (positive or negative) since Greenwich noon, Terrestrial Time,\n                    // on 1 January 2000 (J2000.0)\n                    'uniform float numDays;\\n' +\n                    'uniform vec2 magnitudeRange;\\n' +\n\n                    'varying float magnitudeWeight;\\n' +\n\n                    //normalizes an angle between 0.0 and 359.0\n                    'float normalizeAngle(float angle) {\\n' +\n                    '   float angleDivisions = angle / 360.0;\\n' +\n                    '   return 360.0 * (angleDivisions - floor(angleDivisions));\\n' +\n                    '}\\n' +\n\n                    //transforms declination and right ascension in cartesian coordinates\n                    'vec3 computePosition(float dec, float ra) {\\n' +\n                    '   float GMST = normalizeAngle(280.46061837 + 360.98564736629 * numDays);\\n' +\n                    '   float GHA = normalizeAngle(GMST - ra);\\n' +\n                    '   float lon = -GHA + 360.0 * step(180.0, GHA);\\n' +\n                    '   float latRad = radians(dec);\\n' +\n                    '   float lonRad = radians(lon);\\n' +\n                    '   float radCosLat = cos(latRad);\\n' +\n                    '   return vec3(radCosLat * sin(lonRad), sin(latRad), radCosLat * cos(lonRad));\\n' +\n                    '}\\n' +\n\n                    //normalizes a value between 0.0 and 1.0\n                    'float normalizeScalar(float value, float minValue, float maxValue){\\n' +\n                    '   return (value - minValue) / (maxValue - minValue);\\n' +\n                    '}\\n' +\n\n                    'void main() {\\n' +\n                    '   vec3 vertexPosition = computePosition(vertexPoint.x, vertexPoint.y);\\n' +\n                    '   gl_Position = mvpMatrix * vec4(vertexPosition.xyz, 1.0);\\n'",
                                          "children": [
                                            {
                                              "type": "binary_expression",
                                              "start": {
                                                "row": 6,
                                                "column": 20
                                              },
                                              "end": {
                                                "row": 39,
                                                "column": 95
                                              },
                                              "text": "'attribute vec4 vertexPoint;\\n' +\n\n                    'uniform mat4 mvpMatrix;\\n' +\n                    //number of days (positive or negative) since Greenwich noon, Terrestrial Time,\n                    // on 1 January 2000 (J2000.0)\n                    'uniform float numDays;\\n' +\n                    'uniform vec2 magnitudeRange;\\n' +\n\n                    'varying float magnitudeWeight;\\n' +\n\n                    //normalizes an angle between 0.0 and 359.0\n                    'float normalizeAngle(float angle) {\\n' +\n                    '   float angleDivisions = angle / 360.0;\\n' +\n                    '   return 360.0 * (angleDivisions - floor(angleDivisions));\\n' +\n                    '}\\n' +\n\n                    //transforms declination and right ascension in cartesian coordinates\n                    'vec3 computePosition(float dec, float ra) {\\n' +\n                    '   float GMST = normalizeAngle(280.46061837 + 360.98564736629 * numDays);\\n' +\n                    '   float GHA = normalizeAngle(GMST - ra);\\n' +\n                    '   float lon = -GHA + 360.0 * step(180.0, GHA);\\n' +\n                    '   float latRad = radians(dec);\\n' +\n                    '   float lonRad = radians(lon);\\n' +\n                    '   float radCosLat = cos(latRad);\\n' +\n                    '   return vec3(radCosLat * sin(lonRad), sin(latRad), radCosLat * cos(lonRad));\\n' +\n                    '}\\n' +\n\n                    //normalizes a value between 0.0 and 1.0\n                    'float normalizeScalar(float value, float minValue, float maxValue){\\n' +\n                    '   return (value - minValue) / (maxValue - minValue);\\n' +\n                    '}\\n' +\n\n                    'void main() {\\n' +\n                    '   vec3 vertexPosition = computePosition(vertexPoint.x, vertexPoint.y);\\n'",
                                              "children": [
                                                {
                                                  "type": "binary_expression",
                                                  "start": {
                                                    "row": 6,
                                                    "column": 20
                                                  },
                                                  "end": {
                                                    "row": 38,
                                                    "column": 37
                                                  },
                                                  "text": "'attribute vec4 vertexPoint;\\n' +\n\n                    'uniform mat4 mvpMatrix;\\n' +\n                    //number of days (positive or negative) since Greenwich noon, Terrestrial Time,\n                    // on 1 January 2000 (J2000.0)\n                    'uniform float numDays;\\n' +\n                    'uniform vec2 magnitudeRange;\\n' +\n\n                    'varying float magnitudeWeight;\\n' +\n\n                    //normalizes an angle between 0.0 and 359.0\n                    'float normalizeAngle(float angle) {\\n' +\n                    '   float angleDivisions = angle / 360.0;\\n' +\n                    '   return 360.0 * (angleDivisions - floor(angleDivisions));\\n' +\n                    '}\\n' +\n\n                    //transforms declination and right ascension in cartesian coordinates\n                    'vec3 computePosition(float dec, float ra) {\\n' +\n                    '   float GMST = normalizeAngle(280.46061837 + 360.98564736629 * numDays);\\n' +\n                    '   float GHA = normalizeAngle(GMST - ra);\\n' +\n                    '   float lon = -GHA + 360.0 * step(180.0, GHA);\\n' +\n                    '   float latRad = radians(dec);\\n' +\n                    '   float lonRad = radians(lon);\\n' +\n                    '   float radCosLat = cos(latRad);\\n' +\n                    '   return vec3(radCosLat * sin(lonRad), sin(latRad), radCosLat * cos(lonRad));\\n' +\n                    '}\\n' +\n\n                    //normalizes a value between 0.0 and 1.0\n                    'float normalizeScalar(float value, float minValue, float maxValue){\\n' +\n                    '   return (value - minValue) / (maxValue - minValue);\\n' +\n                    '}\\n' +\n\n                    'void main() {\\n'",
                                                  "children": [
                                                    {
                                                      "type": "binary_expression",
                                                      "start": {
                                                        "row": 6,
                                                        "column": 20
                                                      },
                                                      "end": {
                                                        "row": 36,
                                                        "column": 25
                                                      },
                                                      "text": "'attribute vec4 vertexPoint;\\n' +\n\n                    'uniform mat4 mvpMatrix;\\n' +\n                    //number of days (positive or negative) since Greenwich noon, Terrestrial Time,\n                    // on 1 January 2000 (J2000.0)\n                    'uniform float numDays;\\n' +\n                    'uniform vec2 magnitudeRange;\\n' +\n\n                    'varying float magnitudeWeight;\\n' +\n\n                    //normalizes an angle between 0.0 and 359.0\n                    'float normalizeAngle(float angle) {\\n' +\n                    '   float angleDivisions = angle / 360.0;\\n' +\n                    '   return 360.0 * (angleDivisions - floor(angleDivisions));\\n' +\n                    '}\\n' +\n\n                    //transforms declination and right ascension in cartesian coordinates\n                    'vec3 computePosition(float dec, float ra) {\\n' +\n                    '   float GMST = normalizeAngle(280.46061837 + 360.98564736629 * numDays);\\n' +\n                    '   float GHA = normalizeAngle(GMST - ra);\\n' +\n                    '   float lon = -GHA + 360.0 * step(180.0, GHA);\\n' +\n                    '   float latRad = radians(dec);\\n' +\n                    '   float lonRad = radians(lon);\\n' +\n                    '   float radCosLat = cos(latRad);\\n' +\n                    '   return vec3(radCosLat * sin(lonRad), sin(latRad), radCosLat * cos(lonRad));\\n' +\n                    '}\\n' +\n\n                    //normalizes a value between 0.0 and 1.0\n                    'float normalizeScalar(float value, float minValue, float maxValue){\\n' +\n                    '   return (value - minValue) / (maxValue - minValue);\\n' +\n                    '}\\n'",
                                                      "children": [
                                                        {
                                                          "type": "binary_expression",
                                                          "start": {
                                                            "row": 6,
                                                            "column": 20
                                                          },
                                                          "end": {
                                                            "row": 35,
                                                            "column": 77
                                                          },
                                                          "text": "'attribute vec4 vertexPoint;\\n' +\n\n                    'uniform mat4 mvpMatrix;\\n' +\n                    //number of days (positive or negative) since Greenwich noon, Terrestrial Time,\n                    // on 1 January 2000 (J2000.0)\n                    'uniform float numDays;\\n' +\n                    'uniform vec2 magnitudeRange;\\n' +\n\n                    'varying float magnitudeWeight;\\n' +\n\n                    //normalizes an angle between 0.0 and 359.0\n                    'float normalizeAngle(float angle) {\\n' +\n                    '   float angleDivisions = angle / 360.0;\\n' +\n                    '   return 360.0 * (angleDivisions - floor(angleDivisions));\\n' +\n                    '}\\n' +\n\n                    //transforms declination and right ascension in cartesian coordinates\n                    'vec3 computePosition(float dec, float ra) {\\n' +\n                    '   float GMST = normalizeAngle(280.46061837 + 360.98564736629 * numDays);\\n' +\n                    '   float GHA = normalizeAngle(GMST - ra);\\n' +\n                    '   float lon = -GHA + 360.0 * step(180.0, GHA);\\n' +\n                    '   float latRad = radians(dec);\\n' +\n                    '   float lonRad = radians(lon);\\n' +\n                    '   float radCosLat = cos(latRad);\\n' +\n                    '   return vec3(radCosLat * sin(lonRad), sin(latRad), radCosLat * cos(lonRad));\\n' +\n                    '}\\n' +\n\n                    //normalizes a value between 0.0 and 1.0\n                    'float normalizeScalar(float value, float minValue, float maxValue){\\n' +\n                    '   return (value - minValue) / (maxValue - minValue);\\n'",
                                                          "children": [
                                                            {
                                                              "type": "binary_expression",
                                                              "start": {
                                                                "row": 6,
                                                                "column": 20
                                                              },
                                                              "end": {
                                                                "row": 34,
                                                                "column": 91
                                                              },
                                                              "text": "'attribute vec4 vertexPoint;\\n' +\n\n                    'uniform mat4 mvpMatrix;\\n' +\n                    //number of days (positive or negative) since Greenwich noon, Terrestrial Time,\n                    // on 1 January 2000 (J2000.0)\n                    'uniform float numDays;\\n' +\n                    'uniform vec2 magnitudeRange;\\n' +\n\n                    'varying float magnitudeWeight;\\n' +\n\n                    //normalizes an angle between 0.0 and 359.0\n                    'float normalizeAngle(float angle) {\\n' +\n                    '   float angleDivisions = angle / 360.0;\\n' +\n                    '   return 360.0 * (angleDivisions - floor(angleDivisions));\\n' +\n                    '}\\n' +\n\n                    //transforms declination and right ascension in cartesian coordinates\n                    'vec3 computePosition(float dec, float ra) {\\n' +\n                    '   float GMST = normalizeAngle(280.46061837 + 360.98564736629 * numDays);\\n' +\n                    '   float GHA = normalizeAngle(GMST - ra);\\n' +\n                    '   float lon = -GHA + 360.0 * step(180.0, GHA);\\n' +\n                    '   float latRad = radians(dec);\\n' +\n                    '   float lonRad = radians(lon);\\n' +\n                    '   float radCosLat = cos(latRad);\\n' +\n                    '   return vec3(radCosLat * sin(lonRad), sin(latRad), radCosLat * cos(lonRad));\\n' +\n                    '}\\n' +\n\n                    //normalizes a value between 0.0 and 1.0\n                    'float normalizeScalar(float value, float minValue, float maxValue){\\n'",
                                                              "children": [
                                                                {
                                                                  "type": "binary_expression",
                                                                  "start": {
                                                                    "row": 6,
                                                                    "column": 20
                                                                  },
                                                                  "end": {
                                                                    "row": 31,
                                                                    "column": 25
                                                                  },
                                                                  "text": "'attribute vec4 vertexPoint;\\n' +\n\n                    'uniform mat4 mvpMatrix;\\n' +\n                    //number of days (positive or negative) since Greenwich noon, Terrestrial Time,\n                    // on 1 January 2000 (J2000.0)\n                    'uniform float numDays;\\n' +\n                    'uniform vec2 magnitudeRange;\\n' +\n\n                    'varying float magnitudeWeight;\\n' +\n\n                    //normalizes an angle between 0.0 and 359.0\n                    'float normalizeAngle(float angle) {\\n' +\n                    '   float angleDivisions = angle / 360.0;\\n' +\n                    '   return 360.0 * (angleDivisions - floor(angleDivisions));\\n' +\n                    '}\\n' +\n\n                    //transforms declination and right ascension in cartesian coordinates\n                    'vec3 computePosition(float dec, float ra) {\\n' +\n                    '   float GMST = normalizeAngle(280.46061837 + 360.98564736629 * numDays);\\n' +\n                    '   float GHA = normalizeAngle(GMST - ra);\\n' +\n                    '   float lon = -GHA + 360.0 * step(180.0, GHA);\\n' +\n                    '   float latRad = radians(dec);\\n' +\n                    '   float lonRad = radians(lon);\\n' +\n                    '   float radCosLat = cos(latRad);\\n' +\n                    '   return vec3(radCosLat * sin(lonRad), sin(latRad), radCosLat * cos(lonRad));\\n' +\n                    '}\\n'",
                                                                  "children": [
                                                                    {
                                                                      "type": "binary_expression",
                                                                      "start": {
                                                                        "row": 6,
                                                                        "column": 20
                                                                      },
                                                                      "end": {
                                                                        "row": 30,
                                                                        "column": 102
                                                                      },
                                                                      "text": "'attribute vec4 vertexPoint;\\n' +\n\n                    'uniform mat4 mvpMatrix;\\n' +\n                    //number of days (positive or negative) since Greenwich noon, Terrestrial Time,\n                    // on 1 January 2000 (J2000.0)\n                    'uniform float numDays;\\n' +\n                    'uniform vec2 magnitudeRange;\\n' +\n\n                    'varying float magnitudeWeight;\\n' +\n\n                    //normalizes an angle between 0.0 and 359.0\n                    'float normalizeAngle(float angle) {\\n' +\n                    '   float angleDivisions = angle / 360.0;\\n' +\n                    '   return 360.0 * (angleDivisions - floor(angleDivisions));\\n' +\n                    '}\\n' +\n\n                    //transforms declination and right ascension in cartesian coordinates\n                    'vec3 computePosition(float dec, float ra) {\\n' +\n                    '   float GMST = normalizeAngle(280.46061837 + 360.98564736629 * numDays);\\n' +\n                    '   float GHA = normalizeAngle(GMST - ra);\\n' +\n                    '   float lon = -GHA + 360.0 * step(180.0, GHA);\\n' +\n                    '   float latRad = radians(dec);\\n' +\n                    '   float lonRad = radians(lon);\\n' +\n                    '   float radCosLat = cos(latRad);\\n' +\n                    '   return vec3(radCosLat * sin(lonRad), sin(latRad), radCosLat * cos(lonRad));\\n'",
                                                                      "children": [
                                                                        {
                                                                          "type": "binary_expression",
                                                                          "start": {
                                                                            "row": 6,
                                                                            "column": 20
                                                                          },
                                                                          "end": {
                                                                            "row": 29,
                                                                            "column": 57
                                                                          },
                                                                          "text": "'attribute vec4 vertexPoint;\\n' +\n\n                    'uniform mat4 mvpMatrix;\\n' +\n                    //number of days (positive or negative) since Greenwich noon, Terrestrial Time,\n                    // on 1 January 2000 (J2000.0)\n                    'uniform float numDays;\\n' +\n                    'uniform vec2 magnitudeRange;\\n' +\n\n                    'varying float magnitudeWeight;\\n' +\n\n                    //normalizes an angle between 0.0 and 359.0\n                    'float normalizeAngle(float angle) {\\n' +\n                    '   float angleDivisions = angle / 360.0;\\n' +\n                    '   return 360.0 * (angleDivisions - floor(angleDivisions));\\n' +\n                    '}\\n' +\n\n                    //transforms declination and right ascension in cartesian coordinates\n                    'vec3 computePosition(float dec, float ra) {\\n' +\n                    '   float GMST = normalizeAngle(280.46061837 + 360.98564736629 * numDays);\\n' +\n                    '   float GHA = normalizeAngle(GMST - ra);\\n' +\n                    '   float lon = -GHA + 360.0 * step(180.0, GHA);\\n' +\n                    '   float latRad = radians(dec);\\n' +\n                    '   float lonRad = radians(lon);\\n' +\n                    '   float radCosLat = cos(latRad);\\n'",
                                                                          "children": [
                                                                            {
                                                                              "type": "binary_expression",
                                                                              "start": {
                                                                                "row": 6,
                                                                                "column": 20
                                                                              },
                                                                              "end": {
                                                                                "row": 28,
                                                                                "column": 55
                                                                              },
                                                                              "text": "'attribute vec4 vertexPoint;\\n' +\n\n                    'uniform mat4 mvpMatrix;\\n' +\n                    //number of days (positive or negative) since Greenwich noon, Terrestrial Time,\n                    // on 1 January 2000 (J2000.0)\n                    'uniform float numDays;\\n' +\n                    'uniform vec2 magnitudeRange;\\n' +\n\n                    'varying float magnitudeWeight;\\n' +\n\n                    //normalizes an angle between 0.0 and 359.0\n                    'float normalizeAngle(float angle) {\\n' +\n                    '   float angleDivisions = angle / 360.0;\\n' +\n                    '   return 360.0 * (angleDivisions - floor(angleDivisions));\\n' +\n                    '}\\n' +\n\n                    //transforms declination and right ascension in cartesian coordinates\n                    'vec3 computePosition(float dec, float ra) {\\n' +\n                    '   float GMST = normalizeAngle(280.46061837 + 360.98564736629 * numDays);\\n' +\n                    '   float GHA = normalizeAngle(GMST - ra);\\n' +\n                    '   float lon = -GHA + 360.0 * step(180.0, GHA);\\n' +\n                    '   float latRad = radians(dec);\\n' +\n                    '   float lonRad = radians(lon);\\n'",
                                                                              "children": [
                                                                                {
                                                                                  "type": "binary_expression",
                                                                                  "start": {
                                                                                    "row": 6,
                                                                                    "column": 20
                                                                                  },
                                                                                  "end": {
                                                                                    "row": 27,
                                                                                    "column": 55
                                                                                  },
                                                                                  "text": "'attribute vec4 vertexPoint;\\n' +\n\n                    'uniform mat4 mvpMatrix;\\n' +\n                    //number of days (positive or negative) since Greenwich noon, Terrestrial Time,\n                    // on 1 January 2000 (J2000.0)\n                    'uniform float numDays;\\n' +\n                    'uniform vec2 magnitudeRange;\\n' +\n\n                    'varying float magnitudeWeight;\\n' +\n\n                    //normalizes an angle between 0.0 and 359.0\n                    'float normalizeAngle(float angle) {\\n' +\n                    '   float angleDivisions = angle / 360.0;\\n' +\n                    '   return 360.0 * (angleDivisions - floor(angleDivisions));\\n' +\n                    '}\\n' +\n\n                    //transforms declination and right ascension in cartesian coordinates\n                    'vec3 computePosition(float dec, float ra) {\\n' +\n                    '   float GMST = normalizeAngle(280.46061837 + 360.98564736629 * numDays);\\n' +\n                    '   float GHA = normalizeAngle(GMST - ra);\\n' +\n                    '   float lon = -GHA + 360.0 * step(180.0, GHA);\\n' +\n                    '   float latRad = radians(dec);\\n'",
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "binary_expression",
                                                                                      "start": {
                                                                                        "row": 6,
                                                                                        "column": 20
                                                                                      },
                                                                                      "end": {
                                                                                        "row": 26,
                                                                                        "column": 71
                                                                                      },
                                                                                      "text": "'attribute vec4 vertexPoint;\\n' +\n\n                    'uniform mat4 mvpMatrix;\\n' +\n                    //number of days (positive or negative) since Greenwich noon, Terrestrial Time,\n                    // on 1 January 2000 (J2000.0)\n                    'uniform float numDays;\\n' +\n                    'uniform vec2 magnitudeRange;\\n' +\n\n                    'varying float magnitudeWeight;\\n' +\n\n                    //normalizes an angle between 0.0 and 359.0\n                    'float normalizeAngle(float angle) {\\n' +\n                    '   float angleDivisions = angle / 360.0;\\n' +\n                    '   return 360.0 * (angleDivisions - floor(angleDivisions));\\n' +\n                    '}\\n' +\n\n                    //transforms declination and right ascension in cartesian coordinates\n                    'vec3 computePosition(float dec, float ra) {\\n' +\n                    '   float GMST = normalizeAngle(280.46061837 + 360.98564736629 * numDays);\\n' +\n                    '   float GHA = normalizeAngle(GMST - ra);\\n' +\n                    '   float lon = -GHA + 360.0 * step(180.0, GHA);\\n'",
                                                                                      "children": [
                                                                                        {
                                                                                          "type": "binary_expression",
                                                                                          "start": {
                                                                                            "row": 6,
                                                                                            "column": 20
                                                                                          },
                                                                                          "end": {
                                                                                            "row": 25,
                                                                                            "column": 65
                                                                                          },
                                                                                          "text": "'attribute vec4 vertexPoint;\\n' +\n\n                    'uniform mat4 mvpMatrix;\\n' +\n                    //number of days (positive or negative) since Greenwich noon, Terrestrial Time,\n                    // on 1 January 2000 (J2000.0)\n                    'uniform float numDays;\\n' +\n                    'uniform vec2 magnitudeRange;\\n' +\n\n                    'varying float magnitudeWeight;\\n' +\n\n                    //normalizes an angle between 0.0 and 359.0\n                    'float normalizeAngle(float angle) {\\n' +\n                    '   float angleDivisions = angle / 360.0;\\n' +\n                    '   return 360.0 * (angleDivisions - floor(angleDivisions));\\n' +\n                    '}\\n' +\n\n                    //transforms declination and right ascension in cartesian coordinates\n                    'vec3 computePosition(float dec, float ra) {\\n' +\n                    '   float GMST = normalizeAngle(280.46061837 + 360.98564736629 * numDays);\\n' +\n                    '   float GHA = normalizeAngle(GMST - ra);\\n'",
                                                                                          "children": [
                                                                                            {
                                                                                              "type": "binary_expression",
                                                                                              "start": {
                                                                                                "row": 6,
                                                                                                "column": 20
                                                                                              },
                                                                                              "end": {
                                                                                                "row": 24,
                                                                                                "column": 97
                                                                                              },
                                                                                              "text": "'attribute vec4 vertexPoint;\\n' +\n\n                    'uniform mat4 mvpMatrix;\\n' +\n                    //number of days (positive or negative) since Greenwich noon, Terrestrial Time,\n                    // on 1 January 2000 (J2000.0)\n                    'uniform float numDays;\\n' +\n                    'uniform vec2 magnitudeRange;\\n' +\n\n                    'varying float magnitudeWeight;\\n' +\n\n                    //normalizes an angle between 0.0 and 359.0\n                    'float normalizeAngle(float angle) {\\n' +\n                    '   float angleDivisions = angle / 360.0;\\n' +\n                    '   return 360.0 * (angleDivisions - floor(angleDivisions));\\n' +\n                    '}\\n' +\n\n                    //transforms declination and right ascension in cartesian coordinates\n                    'vec3 computePosition(float dec, float ra) {\\n' +\n                    '   float GMST = normalizeAngle(280.46061837 + 360.98564736629 * numDays);\\n'",
                                                                                              "children": [
                                                                                                {
                                                                                                  "type": "binary_expression",
                                                                                                  "start": {
                                                                                                    "row": 6,
                                                                                                    "column": 20
                                                                                                  },
                                                                                                  "end": {
                                                                                                    "row": 23,
                                                                                                    "column": 67
                                                                                                  },
                                                                                                  "text": "'attribute vec4 vertexPoint;\\n' +\n\n                    'uniform mat4 mvpMatrix;\\n' +\n                    //number of days (positive or negative) since Greenwich noon, Terrestrial Time,\n                    // on 1 January 2000 (J2000.0)\n                    'uniform float numDays;\\n' +\n                    'uniform vec2 magnitudeRange;\\n' +\n\n                    'varying float magnitudeWeight;\\n' +\n\n                    //normalizes an angle between 0.0 and 359.0\n                    'float normalizeAngle(float angle) {\\n' +\n                    '   float angleDivisions = angle / 360.0;\\n' +\n                    '   return 360.0 * (angleDivisions - floor(angleDivisions));\\n' +\n                    '}\\n' +\n\n                    //transforms declination and right ascension in cartesian coordinates\n                    'vec3 computePosition(float dec, float ra) {\\n'",
                                                                                                  "children": [
                                                                                                    {
                                                                                                      "type": "binary_expression",
                                                                                                      "start": {
                                                                                                        "row": 6,
                                                                                                        "column": 20
                                                                                                      },
                                                                                                      "end": {
                                                                                                        "row": 20,
                                                                                                        "column": 25
                                                                                                      },
                                                                                                      "text": "'attribute vec4 vertexPoint;\\n' +\n\n                    'uniform mat4 mvpMatrix;\\n' +\n                    //number of days (positive or negative) since Greenwich noon, Terrestrial Time,\n                    // on 1 January 2000 (J2000.0)\n                    'uniform float numDays;\\n' +\n                    'uniform vec2 magnitudeRange;\\n' +\n\n                    'varying float magnitudeWeight;\\n' +\n\n                    //normalizes an angle between 0.0 and 359.0\n                    'float normalizeAngle(float angle) {\\n' +\n                    '   float angleDivisions = angle / 360.0;\\n' +\n                    '   return 360.0 * (angleDivisions - floor(angleDivisions));\\n' +\n                    '}\\n'",
                                                                                                      "children": [
                                                                                                        {
                                                                                                          "type": "binary_expression",
                                                                                                          "start": {
                                                                                                            "row": 6,
                                                                                                            "column": 20
                                                                                                          },
                                                                                                          "end": {
                                                                                                            "row": 19,
                                                                                                            "column": 83
                                                                                                          },
                                                                                                          "text": "'attribute vec4 vertexPoint;\\n' +\n\n                    'uniform mat4 mvpMatrix;\\n' +\n                    //number of days (positive or negative) since Greenwich noon, Terrestrial Time,\n                    // on 1 January 2000 (J2000.0)\n                    'uniform float numDays;\\n' +\n                    'uniform vec2 magnitudeRange;\\n' +\n\n                    'varying float magnitudeWeight;\\n' +\n\n                    //normalizes an angle between 0.0 and 359.0\n                    'float normalizeAngle(float angle) {\\n' +\n                    '   float angleDivisions = angle / 360.0;\\n' +\n                    '   return 360.0 * (angleDivisions - floor(angleDivisions));\\n'",
                                                                                                          "children": [
                                                                                                            {
                                                                                                              "type": "binary_expression",
                                                                                                              "start": {
                                                                                                                "row": 6,
                                                                                                                "column": 20
                                                                                                              },
                                                                                                              "end": {
                                                                                                                "row": 18,
                                                                                                                "column": 64
                                                                                                              },
                                                                                                              "text": "'attribute vec4 vertexPoint;\\n' +\n\n                    'uniform mat4 mvpMatrix;\\n' +\n                    //number of days (positive or negative) since Greenwich noon, Terrestrial Time,\n                    // on 1 January 2000 (J2000.0)\n                    'uniform float numDays;\\n' +\n                    'uniform vec2 magnitudeRange;\\n' +\n\n                    'varying float magnitudeWeight;\\n' +\n\n                    //normalizes an angle between 0.0 and 359.0\n                    'float normalizeAngle(float angle) {\\n' +\n                    '   float angleDivisions = angle / 360.0;\\n'",
                                                                                                              "children": [
                                                                                                                {
                                                                                                                  "type": "binary_expression",
                                                                                                                  "start": {
                                                                                                                    "row": 6,
                                                                                                                    "column": 20
                                                                                                                  },
                                                                                                                  "end": {
                                                                                                                    "row": 17,
                                                                                                                    "column": 59
                                                                                                                  },
                                                                                                                  "text": "'attribute vec4 vertexPoint;\\n' +\n\n                    'uniform mat4 mvpMatrix;\\n' +\n                    //number of days (positive or negative) since Greenwich noon, Terrestrial Time,\n                    // on 1 January 2000 (J2000.0)\n                    'uniform float numDays;\\n' +\n                    'uniform vec2 magnitudeRange;\\n' +\n\n                    'varying float magnitudeWeight;\\n' +\n\n                    //normalizes an angle between 0.0 and 359.0\n                    'float normalizeAngle(float angle) {\\n'",
                                                                                                                  "children": [
                                                                                                                    {
                                                                                                                      "type": "binary_expression",
                                                                                                                      "start": {
                                                                                                                        "row": 6,
                                                                                                                        "column": 20
                                                                                                                      },
                                                                                                                      "end": {
                                                                                                                        "row": 14,
                                                                                                                        "column": 54
                                                                                                                      },
                                                                                                                      "text": "'attribute vec4 vertexPoint;\\n' +\n\n                    'uniform mat4 mvpMatrix;\\n' +\n                    //number of days (positive or negative) since Greenwich noon, Terrestrial Time,\n                    // on 1 January 2000 (J2000.0)\n                    'uniform float numDays;\\n' +\n                    'uniform vec2 magnitudeRange;\\n' +\n\n                    'varying float magnitudeWeight;\\n'",
                                                                                                                      "children": [
                                                                                                                        {
                                                                                                                          "type": "binary_expression",
                                                                                                                          "start": {
                                                                                                                            "row": 6,
                                                                                                                            "column": 20
                                                                                                                          },
                                                                                                                          "end": {
                                                                                                                            "row": 12,
                                                                                                                            "column": 52
                                                                                                                          },
                                                                                                                          "text": "'attribute vec4 vertexPoint;\\n' +\n\n                    'uniform mat4 mvpMatrix;\\n' +\n                    //number of days (positive or negative) since Greenwich noon, Terrestrial Time,\n                    // on 1 January 2000 (J2000.0)\n                    'uniform float numDays;\\n' +\n                    'uniform vec2 magnitudeRange;\\n'",
                                                                                                                          "children": [
                                                                                                                            {
                                                                                                                              "type": "binary_expression",
                                                                                                                              "start": {
                                                                                                                                "row": 6,
                                                                                                                                "column": 20
                                                                                                                              },
                                                                                                                              "end": {
                                                                                                                                "row": 11,
                                                                                                                                "column": 46
                                                                                                                              },
                                                                                                                              "text": "'attribute vec4 vertexPoint;\\n' +\n\n                    'uniform mat4 mvpMatrix;\\n' +\n                    //number of days (positive or negative) since Greenwich noon, Terrestrial Time,\n                    // on 1 January 2000 (J2000.0)\n                    'uniform float numDays;\\n'",
                                                                                                                              "children": [
                                                                                                                                {
                                                                                                                                  "type": "binary_expression",
                                                                                                                                  "start": {
                                                                                                                                    "row": 6,
                                                                                                                                    "column": 20
                                                                                                                                  },
                                                                                                                                  "end": {
                                                                                                                                    "row": 8,
                                                                                                                                    "column": 47
                                                                                                                                  },
                                                                                                                                  "text": "'attribute vec4 vertexPoint;\\n' +\n\n                    'uniform mat4 mvpMatrix;\\n'",
                                                                                                                                  "children": [
                                                                                                                                    {
                                                                                                                                      "type": "string",
                                                                                                                                      "start": {
                                                                                                                                        "row": 6,
                                                                                                                                        "column": 20
                                                                                                                                      },
                                                                                                                                      "end": {
                                                                                                                                        "row": 6,
                                                                                                                                        "column": 51
                                                                                                                                      },
                                                                                                                                      "text": "'attribute vec4 vertexPoint;\\n'",
                                                                                                                                      "children": [
                                                                                                                                        {
                                                                                                                                          "type": "'",
                                                                                                                                          "start": {
                                                                                                                                            "row": 6,
                                                                                                                                            "column": 20
                                                                                                                                          },
                                                                                                                                          "end": {
                                                                                                                                            "row": 6,
                                                                                                                                            "column": 21
                                                                                                                                          },
                                                                                                                                          "text": "'"
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                          "type": "string_fragment",
                                                                                                                                          "start": {
                                                                                                                                            "row": 6,
                                                                                                                                            "column": 21
                                                                                                                                          },
                                                                                                                                          "end": {
                                                                                                                                            "row": 6,
                                                                                                                                            "column": 48
                                                                                                                                          },
                                                                                                                                          "text": "attribute vec4 vertexPoint;"
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                          "type": "escape_sequence",
                                                                                                                                          "start": {
                                                                                                                                            "row": 6,
                                                                                                                                            "column": 48
                                                                                                                                          },
                                                                                                                                          "end": {
                                                                                                                                            "row": 6,
                                                                                                                                            "column": 50
                                                                                                                                          },
                                                                                                                                          "text": "\\n"
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                          "type": "'",
                                                                                                                                          "start": {
                                                                                                                                            "row": 6,
                                                                                                                                            "column": 50
                                                                                                                                          },
                                                                                                                                          "end": {
                                                                                                                                            "row": 6,
                                                                                                                                            "column": 51
                                                                                                                                          },
                                                                                                                                          "text": "'"
                                                                                                                                        }
                                                                                                                                      ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                      "type": "+",
                                                                                                                                      "start": {
                                                                                                                                        "row": 6,
                                                                                                                                        "column": 52
                                                                                                                                      },
                                                                                                                                      "end": {
                                                                                                                                        "row": 6,
                                                                                                                                        "column": 53
                                                                                                                                      },
                                                                                                                                      "text": "+"
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                      "type": "string",
                                                                                                                                      "start": {
                                                                                                                                        "row": 8,
                                                                                                                                        "column": 20
                                                                                                                                      },
                                                                                                                                      "end": {
                                                                                                                                        "row": 8,
                                                                                                                                        "column": 47
                                                                                                                                      },
                                                                                                                                      "text": "'uniform mat4 mvpMatrix;\\n'",
                                                                                                                                      "children": [
                                                                                                                                        {
                                                                                                                                          "type": "'",
                                                                                                                                          "start": {
                                                                                                                                            "row": 8,
                                                                                                                                            "column": 20
                                                                                                                                          },
                                                                                                                                          "end": {
                                                                                                                                            "row": 8,
                                                                                                                                            "column": 21
                                                                                                                                          },
                                                                                                                                          "text": "'"
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                          "type": "string_fragment",
                                                                                                                                          "start": {
                                                                                                                                            "row": 8,
                                                                                                                                            "column": 21
                                                                                                                                          },
                                                                                                                                          "end": {
                                                                                                                                            "row": 8,
                                                                                                                                            "column": 44
                                                                                                                                          },
                                                                                                                                          "text": "uniform mat4 mvpMatrix;"
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                          "type": "escape_sequence",
                                                                                                                                          "start": {
                                                                                                                                            "row": 8,
                                                                                                                                            "column": 44
                                                                                                                                          },
                                                                                                                                          "end": {
                                                                                                                                            "row": 8,
                                                                                                                                            "column": 46
                                                                                                                                          },
                                                                                                                                          "text": "\\n"
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                          "type": "'",
                                                                                                                                          "start": {
                                                                                                                                            "row": 8,
                                                                                                                                            "column": 46
                                                                                                                                          },
                                                                                                                                          "end": {
                                                                                                                                            "row": 8,
                                                                                                                                            "column": 47
                                                                                                                                          },
                                                                                                                                          "text": "'"
                                                                                                                                        }
                                                                                                                                      ]
                                                                                                                                    }
                                                                                                                                  ]
                                                                                                                                },
                                                                                                                                {
                                                                                                                                  "type": "+",
                                                                                                                                  "start": {
                                                                                                                                    "row": 8,
                                                                                                                                    "column": 48
                                                                                                                                  },
                                                                                                                                  "end": {
                                                                                                                                    "row": 8,
                                                                                                                                    "column": 49
                                                                                                                                  },
                                                                                                                                  "text": "+"
                                                                                                                                },
                                                                                                                                {
                                                                                                                                  "type": "comment",
                                                                                                                                  "start": {
                                                                                                                                    "row": 9,
                                                                                                                                    "column": 20
                                                                                                                                  },
                                                                                                                                  "end": {
                                                                                                                                    "row": 9,
                                                                                                                                    "column": 99
                                                                                                                                  },
                                                                                                                                  "text": "//number of days (positive or negative) since Greenwich noon, Terrestrial Time,"
                                                                                                                                },
                                                                                                                                {
                                                                                                                                  "type": "comment",
                                                                                                                                  "start": {
                                                                                                                                    "row": 10,
                                                                                                                                    "column": 20
                                                                                                                                  },
                                                                                                                                  "end": {
                                                                                                                                    "row": 10,
                                                                                                                                    "column": 50
                                                                                                                                  },
                                                                                                                                  "text": "// on 1 January 2000 (J2000.0)"
                                                                                                                                },
                                                                                                                                {
                                                                                                                                  "type": "string",
                                                                                                                                  "start": {
                                                                                                                                    "row": 11,
                                                                                                                                    "column": 20
                                                                                                                                  },
                                                                                                                                  "end": {
                                                                                                                                    "row": 11,
                                                                                                                                    "column": 46
                                                                                                                                  },
                                                                                                                                  "text": "'uniform float numDays;\\n'",
                                                                                                                                  "children": [
                                                                                                                                    {
                                                                                                                                      "type": "'",
                                                                                                                                      "start": {
                                                                                                                                        "row": 11,
                                                                                                                                        "column": 20
                                                                                                                                      },
                                                                                                                                      "end": {
                                                                                                                                        "row": 11,
                                                                                                                                        "column": 21
                                                                                                                                      },
                                                                                                                                      "text": "'"
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                      "type": "string_fragment",
                                                                                                                                      "start": {
                                                                                                                                        "row": 11,
                                                                                                                                        "column": 21
                                                                                                                                      },
                                                                                                                                      "end": {
                                                                                                                                        "row": 11,
                                                                                                                                        "column": 43
                                                                                                                                      },
                                                                                                                                      "text": "uniform float numDays;"
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                      "type": "escape_sequence",
                                                                                                                                      "start": {
                                                                                                                                        "row": 11,
                                                                                                                                        "column": 43
                                                                                                                                      },
                                                                                                                                      "end": {
                                                                                                                                        "row": 11,
                                                                                                                                        "column": 45
                                                                                                                                      },
                                                                                                                                      "text": "\\n"
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                      "type": "'",
                                                                                                                                      "start": {
                                                                                                                                        "row": 11,
                                                                                                                                        "column": 45
                                                                                                                                      },
                                                                                                                                      "end": {
                                                                                                                                        "row": 11,
                                                                                                                                        "column": 46
                                                                                                                                      },
                                                                                                                                      "text": "'"
                                                                                                                                    }
                                                                                                                                  ]
                                                                                                                                }
                                                                                                                              ]
                                                                                                                            },
                                                                                                                            {
                                                                                                                              "type": "+",
                                                                                                                              "start": {
                                                                                                                                "row": 11,
                                                                                                                                "column": 47
                                                                                                                              },
                                                                                                                              "end": {
                                                                                                                                "row": 11,
                                                                                                                                "column": 48
                                                                                                                              },
                                                                                                                              "text": "+"
                                                                                                                            },
                                                                                                                            {
                                                                                                                              "type": "string",
                                                                                                                              "start": {
                                                                                                                                "row": 12,
                                                                                                                                "column": 20
                                                                                                                              },
                                                                                                                              "end": {
                                                                                                                                "row": 12,
                                                                                                                                "column": 52
                                                                                                                              },
                                                                                                                              "text": "'uniform vec2 magnitudeRange;\\n'",
                                                                                                                              "children": [
                                                                                                                                {
                                                                                                                                  "type": "'",
                                                                                                                                  "start": {
                                                                                                                                    "row": 12,
                                                                                                                                    "column": 20
                                                                                                                                  },
                                                                                                                                  "end": {
                                                                                                                                    "row": 12,
                                                                                                                                    "column": 21
                                                                                                                                  },
                                                                                                                                  "text": "'"
                                                                                                                                },
                                                                                                                                {
                                                                                                                                  "type": "string_fragment",
                                                                                                                                  "start": {
                                                                                                                                    "row": 12,
                                                                                                                                    "column": 21
                                                                                                                                  },
                                                                                                                                  "end": {
                                                                                                                                    "row": 12,
                                                                                                                                    "column": 49
                                                                                                                                  },
                                                                                                                                  "text": "uniform vec2 magnitudeRange;"
                                                                                                                                },
                                                                                                                                {
                                                                                                                                  "type": "escape_sequence",
                                                                                                                                  "start": {
                                                                                                                                    "row": 12,
                                                                                                                                    "column": 49
                                                                                                                                  },
                                                                                                                                  "end": {
                                                                                                                                    "row": 12,
                                                                                                                                    "column": 51
                                                                                                                                  },
                                                                                                                                  "text": "\\n"
                                                                                                                                },
                                                                                                                                {
                                                                                                                                  "type": "'",
                                                                                                                                  "start": {
                                                                                                                                    "row": 12,
                                                                                                                                    "column": 51
                                                                                                                                  },
                                                                                                                                  "end": {
                                                                                                                                    "row": 12,
                                                                                                                                    "column": 52
                                                                                                                                  },
                                                                                                                                  "text": "'"
                                                                                                                                }
                                                                                                                              ]
                                                                                                                            }
                                                                                                                          ]
                                                                                                                        },
                                                                                                                        {
                                                                                                                          "type": "+",
                                                                                                                          "start": {
                                                                                                                            "row": 12,
                                                                                                                            "column": 53
                                                                                                                          },
                                                                                                                          "end": {
                                                                                                                            "row": 12,
                                                                                                                            "column": 54
                                                                                                                          },
                                                                                                                          "text": "+"
                                                                                                                        },
                                                                                                                        {
                                                                                                                          "type": "string",
                                                                                                                          "start": {
                                                                                                                            "row": 14,
                                                                                                                            "column": 20
                                                                                                                          },
                                                                                                                          "end": {
                                                                                                                            "row": 14,
                                                                                                                            "column": 54
                                                                                                                          },
                                                                                                                          "text": "'varying float magnitudeWeight;\\n'",
                                                                                                                          "children": [
                                                                                                                            {
                                                                                                                              "type": "'",
                                                                                                                              "start": {
                                                                                                                                "row": 14,
                                                                                                                                "column": 20
                                                                                                                              },
                                                                                                                              "end": {
                                                                                                                                "row": 14,
                                                                                                                                "column": 21
                                                                                                                              },
                                                                                                                              "text": "'"
                                                                                                                            },
                                                                                                                            {
                                                                                                                              "type": "string_fragment",
                                                                                                                              "start": {
                                                                                                                                "row": 14,
                                                                                                                                "column": 21
                                                                                                                              },
                                                                                                                              "end": {
                                                                                                                                "row": 14,
                                                                                                                                "column": 51
                                                                                                                              },
                                                                                                                              "text": "varying float magnitudeWeight;"
                                                                                                                            },
                                                                                                                            {
                                                                                                                              "type": "escape_sequence",
                                                                                                                              "start": {
                                                                                                                                "row": 14,
                                                                                                                                "column": 51
                                                                                                                              },
                                                                                                                              "end": {
                                                                                                                                "row": 14,
                                                                                                                                "column": 53
                                                                                                                              },
                                                                                                                              "text": "\\n"
                                                                                                                            },
                                                                                                                            {
                                                                                                                              "type": "'",
                                                                                                                              "start": {
                                                                                                                                "row": 14,
                                                                                                                                "column": 53
                                                                                                                              },
                                                                                                                              "end": {
                                                                                                                                "row": 14,
                                                                                                                                "column": 54
                                                                                                                              },
                                                                                                                              "text": "'"
                                                                                                                            }
                                                                                                                          ]
                                                                                                                        }
                                                                                                                      ]
                                                                                                                    },
                                                                                                                    {
                                                                                                                      "type": "+",
                                                                                                                      "start": {
                                                                                                                        "row": 14,
                                                                                                                        "column": 55
                                                                                                                      },
                                                                                                                      "end": {
                                                                                                                        "row": 14,
                                                                                                                        "column": 56
                                                                                                                      },
                                                                                                                      "text": "+"
                                                                                                                    },
                                                                                                                    {
                                                                                                                      "type": "comment",
                                                                                                                      "start": {
                                                                                                                        "row": 16,
                                                                                                                        "column": 20
                                                                                                                      },
                                                                                                                      "end": {
                                                                                                                        "row": 16,
                                                                                                                        "column": 63
                                                                                                                      },
                                                                                                                      "text": "//normalizes an angle between 0.0 and 359.0"
                                                                                                                    },
                                                                                                                    {
                                                                                                                      "type": "string",
                                                                                                                      "start": {
                                                                                                                        "row": 17,
                                                                                                                        "column": 20
                                                                                                                      },
                                                                                                                      "end": {
                                                                                                                        "row": 17,
                                                                                                                        "column": 59
                                                                                                                      },
                                                                                                                      "text": "'float normalizeAngle(float angle) {\\n'",
                                                                                                                      "children": [
                                                                                                                        {
                                                                                                                          "type": "'",
                                                                                                                          "start": {
                                                                                                                            "row": 17,
                                                                                                                            "column": 20
                                                                                                                          },
                                                                                                                          "end": {
                                                                                                                            "row": 17,
                                                                                                                            "column": 21
                                                                                                                          },
                                                                                                                          "text": "'"
                                                                                                                        },
                                                                                                                        {
                                                                                                                          "type": "string_fragment",
                                                                                                                          "start": {
                                                                                                                            "row": 17,
                                                                                                                            "column": 21
                                                                                                                          },
                                                                                                                          "end": {
                                                                                                                            "row": 17,
                                                                                                                            "column": 56
                                                                                                                          },
                                                                                                                          "text": "float normalizeAngle(float angle) {"
                                                                                                                        },
                                                                                                                        {
                                                                                                                          "type": "escape_sequence",
                                                                                                                          "start": {
                                                                                                                            "row": 17,
                                                                                                                            "column": 56
                                                                                                                          },
                                                                                                                          "end": {
                                                                                                                            "row": 17,
                                                                                                                            "column": 58
                                                                                                                          },
                                                                                                                          "text": "\\n"
                                                                                                                        },
                                                                                                                        {
                                                                                                                          "type": "'",
                                                                                                                          "start": {
                                                                                                                            "row": 17,
                                                                                                                            "column": 58
                                                                                                                          },
                                                                                                                          "end": {
                                                                                                                            "row": 17,
                                                                                                                            "column": 59
                                                                                                                          },
                                                                                                                          "text": "'"
                                                                                                                        }
                                                                                                                      ]
                                                                                                                    }
                                                                                                                  ]
                                                                                                                },
                                                                                                                {
                                                                                                                  "type": "+",
                                                                                                                  "start": {
                                                                                                                    "row": 17,
                                                                                                                    "column": 60
                                                                                                                  },
                                                                                                                  "end": {
                                                                                                                    "row": 17,
                                                                                                                    "column": 61
                                                                                                                  },
                                                                                                                  "text": "+"
                                                                                                                },
                                                                                                                {
                                                                                                                  "type": "string",
                                                                                                                  "start": {
                                                                                                                    "row": 18,
                                                                                                                    "column": 20
                                                                                                                  },
                                                                                                                  "end": {
                                                                                                                    "row": 18,
                                                                                                                    "column": 64
                                                                                                                  },
                                                                                                                  "text": "'   float angleDivisions = angle / 360.0;\\n'",
                                                                                                                  "children": [
                                                                                                                    {
                                                                                                                      "type": "'",
                                                                                                                      "start": {
                                                                                                                        "row": 18,
                                                                                                                        "column": 20
                                                                                                                      },
                                                                                                                      "end": {
                                                                                                                        "row": 18,
                                                                                                                        "column": 21
                                                                                                                      },
                                                                                                                      "text": "'"
                                                                                                                    },
                                                                                                                    {
                                                                                                                      "type": "string_fragment",
                                                                                                                      "start": {
                                                                                                                        "row": 18,
                                                                                                                        "column": 21
                                                                                                                      },
                                                                                                                      "end": {
                                                                                                                        "row": 18,
                                                                                                                        "column": 61
                                                                                                                      },
                                                                                                                      "text": "   float angleDivisions = angle / 360.0;"
                                                                                                                    },
                                                                                                                    {
                                                                                                                      "type": "escape_sequence",
                                                                                                                      "start": {
                                                                                                                        "row": 18,
                                                                                                                        "column": 61
                                                                                                                      },
                                                                                                                      "end": {
                                                                                                                        "row": 18,
                                                                                                                        "column": 63
                                                                                                                      },
                                                                                                                      "text": "\\n"
                                                                                                                    },
                                                                                                                    {
                                                                                                                      "type": "'",
                                                                                                                      "start": {
                                                                                                                        "row": 18,
                                                                                                                        "column": 63
                                                                                                                      },
                                                                                                                      "end": {
                                                                                                                        "row": 18,
                                                                                                                        "column": 64
                                                                                                                      },
                                                                                                                      "text": "'"
                                                                                                                    }
                                                                                                                  ]
                                                                                                                }
                                                                                                              ]
                                                                                                            },
                                                                                                            {
                                                                                                              "type": "+",
                                                                                                              "start": {
                                                                                                                "row": 18,
                                                                                                                "column": 65
                                                                                                              },
                                                                                                              "end": {
                                                                                                                "row": 18,
                                                                                                                "column": 66
                                                                                                              },
                                                                                                              "text": "+"
                                                                                                            },
                                                                                                            {
                                                                                                              "type": "string",
                                                                                                              "start": {
                                                                                                                "row": 19,
                                                                                                                "column": 20
                                                                                                              },
                                                                                                              "end": {
                                                                                                                "row": 19,
                                                                                                                "column": 83
                                                                                                              },
                                                                                                              "text": "'   return 360.0 * (angleDivisions - floor(angleDivisions));\\n'",
                                                                                                              "children": [
                                                                                                                {
                                                                                                                  "type": "'",
                                                                                                                  "start": {
                                                                                                                    "row": 19,
                                                                                                                    "column": 20
                                                                                                                  },
                                                                                                                  "end": {
                                                                                                                    "row": 19,
                                                                                                                    "column": 21
                                                                                                                  },
                                                                                                                  "text": "'"
                                                                                                                },
                                                                                                                {
                                                                                                                  "type": "string_fragment",
                                                                                                                  "start": {
                                                                                                                    "row": 19,
                                                                                                                    "column": 21
                                                                                                                  },
                                                                                                                  "end": {
                                                                                                                    "row": 19,
                                                                                                                    "column": 80
                                                                                                                  },
                                                                                                                  "text": "   return 360.0 * (angleDivisions - floor(angleDivisions));"
                                                                                                                },
                                                                                                                {
                                                                                                                  "type": "escape_sequence",
                                                                                                                  "start": {
                                                                                                                    "row": 19,
                                                                                                                    "column": 80
                                                                                                                  },
                                                                                                                  "end": {
                                                                                                                    "row": 19,
                                                                                                                    "column": 82
                                                                                                                  },
                                                                                                                  "text": "\\n"
                                                                                                                },
                                                                                                                {
                                                                                                                  "type": "'",
                                                                                                                  "start": {
                                                                                                                    "row": 19,
                                                                                                                    "column": 82
                                                                                                                  },
                                                                                                                  "end": {
                                                                                                                    "row": 19,
                                                                                                                    "column": 83
                                                                                                                  },
                                                                                                                  "text": "'"
                                                                                                                }
                                                                                                              ]
                                                                                                            }
                                                                                                          ]
                                                                                                        },
                                                                                                        {
                                                                                                          "type": "+",
                                                                                                          "start": {
                                                                                                            "row": 19,
                                                                                                            "column": 84
                                                                                                          },
                                                                                                          "end": {
                                                                                                            "row": 19,
                                                                                                            "column": 85
                                                                                                          },
                                                                                                          "text": "+"
                                                                                                        },
                                                                                                        {
                                                                                                          "type": "string",
                                                                                                          "start": {
                                                                                                            "row": 20,
                                                                                                            "column": 20
                                                                                                          },
                                                                                                          "end": {
                                                                                                            "row": 20,
                                                                                                            "column": 25
                                                                                                          },
                                                                                                          "text": "'}\\n'",
                                                                                                          "children": [
                                                                                                            {
                                                                                                              "type": "'",
                                                                                                              "start": {
                                                                                                                "row": 20,
                                                                                                                "column": 20
                                                                                                              },
                                                                                                              "end": {
                                                                                                                "row": 20,
                                                                                                                "column": 21
                                                                                                              },
                                                                                                              "text": "'"
                                                                                                            },
                                                                                                            {
                                                                                                              "type": "string_fragment",
                                                                                                              "start": {
                                                                                                                "row": 20,
                                                                                                                "column": 21
                                                                                                              },
                                                                                                              "end": {
                                                                                                                "row": 20,
                                                                                                                "column": 22
                                                                                                              },
                                                                                                              "text": "}"
                                                                                                            },
                                                                                                            {
                                                                                                              "type": "escape_sequence",
                                                                                                              "start": {
                                                                                                                "row": 20,
                                                                                                                "column": 22
                                                                                                              },
                                                                                                              "end": {
                                                                                                                "row": 20,
                                                                                                                "column": 24
                                                                                                              },
                                                                                                              "text": "\\n"
                                                                                                            },
                                                                                                            {
                                                                                                              "type": "'",
                                                                                                              "start": {
                                                                                                                "row": 20,
                                                                                                                "column": 24
                                                                                                              },
                                                                                                              "end": {
                                                                                                                "row": 20,
                                                                                                                "column": 25
                                                                                                              },
                                                                                                              "text": "'"
                                                                                                            }
                                                                                                          ]
                                                                                                        }
                                                                                                      ]
                                                                                                    },
                                                                                                    {
                                                                                                      "type": "+",
                                                                                                      "start": {
                                                                                                        "row": 20,
                                                                                                        "column": 26
                                                                                                      },
                                                                                                      "end": {
                                                                                                        "row": 20,
                                                                                                        "column": 27
                                                                                                      },
                                                                                                      "text": "+"
                                                                                                    },
                                                                                                    {
                                                                                                      "type": "comment",
                                                                                                      "start": {
                                                                                                        "row": 22,
                                                                                                        "column": 20
                                                                                                      },
                                                                                                      "end": {
                                                                                                        "row": 22,
                                                                                                        "column": 89
                                                                                                      },
                                                                                                      "text": "//transforms declination and right ascension in cartesian coordinates"
                                                                                                    },
                                                                                                    {
                                                                                                      "type": "string",
                                                                                                      "start": {
                                                                                                        "row": 23,
                                                                                                        "column": 20
                                                                                                      },
                                                                                                      "end": {
                                                                                                        "row": 23,
                                                                                                        "column": 67
                                                                                                      },
                                                                                                      "text": "'vec3 computePosition(float dec, float ra) {\\n'",
                                                                                                      "children": [
                                                                                                        {
                                                                                                          "type": "'",
                                                                                                          "start": {
                                                                                                            "row": 23,
                                                                                                            "column": 20
                                                                                                          },
                                                                                                          "end": {
                                                                                                            "row": 23,
                                                                                                            "column": 21
                                                                                                          },
                                                                                                          "text": "'"
                                                                                                        },
                                                                                                        {
                                                                                                          "type": "string_fragment",
                                                                                                          "start": {
                                                                                                            "row": 23,
                                                                                                            "column": 21
                                                                                                          },
                                                                                                          "end": {
                                                                                                            "row": 23,
                                                                                                            "column": 64
                                                                                                          },
                                                                                                          "text": "vec3 computePosition(float dec, float ra) {"
                                                                                                        },
                                                                                                        {
                                                                                                          "type": "escape_sequence",
                                                                                                          "start": {
                                                                                                            "row": 23,
                                                                                                            "column": 64
                                                                                                          },
                                                                                                          "end": {
                                                                                                            "row": 23,
                                                                                                            "column": 66
                                                                                                          },
                                                                                                          "text": "\\n"
                                                                                                        },
                                                                                                        {
                                                                                                          "type": "'",
                                                                                                          "start": {
                                                                                                            "row": 23,
                                                                                                            "column": 66
                                                                                                          },
                                                                                                          "end": {
                                                                                                            "row": 23,
                                                                                                            "column": 67
                                                                                                          },
                                                                                                          "text": "'"
                                                                                                        }
                                                                                                      ]
                                                                                                    }
                                                                                                  ]
                                                                                                },
                                                                                                {
                                                                                                  "type": "+",
                                                                                                  "start": {
                                                                                                    "row": 23,
                                                                                                    "column": 68
                                                                                                  },
                                                                                                  "end": {
                                                                                                    "row": 23,
                                                                                                    "column": 69
                                                                                                  },
                                                                                                  "text": "+"
                                                                                                },
                                                                                                {
                                                                                                  "type": "string",
                                                                                                  "start": {
                                                                                                    "row": 24,
                                                                                                    "column": 20
                                                                                                  },
                                                                                                  "end": {
                                                                                                    "row": 24,
                                                                                                    "column": 97
                                                                                                  },
                                                                                                  "text": "'   float GMST = normalizeAngle(280.46061837 + 360.98564736629 * numDays);\\n'",
                                                                                                  "children": [
                                                                                                    {
                                                                                                      "type": "'",
                                                                                                      "start": {
                                                                                                        "row": 24,
                                                                                                        "column": 20
                                                                                                      },
                                                                                                      "end": {
                                                                                                        "row": 24,
                                                                                                        "column": 21
                                                                                                      },
                                                                                                      "text": "'"
                                                                                                    },
                                                                                                    {
                                                                                                      "type": "string_fragment",
                                                                                                      "start": {
                                                                                                        "row": 24,
                                                                                                        "column": 21
                                                                                                      },
                                                                                                      "end": {
                                                                                                        "row": 24,
                                                                                                        "column": 94
                                                                                                      },
                                                                                                      "text": "   float GMST = normalizeAngle(280.46061837 + 360.98564736629 * numDays);"
                                                                                                    },
                                                                                                    {
                                                                                                      "type": "escape_sequence",
                                                                                                      "start": {
                                                                                                        "row": 24,
                                                                                                        "column": 94
                                                                                                      },
                                                                                                      "end": {
                                                                                                        "row": 24,
                                                                                                        "column": 96
                                                                                                      },
                                                                                                      "text": "\\n"
                                                                                                    },
                                                                                                    {
                                                                                                      "type": "'",
                                                                                                      "start": {
                                                                                                        "row": 24,
                                                                                                        "column": 96
                                                                                                      },
                                                                                                      "end": {
                                                                                                        "row": 24,
                                                                                                        "column": 97
                                                                                                      },
                                                                                                      "text": "'"
                                                                                                    }
                                                                                                  ]
                                                                                                }
                                                                                              ]
                                                                                            },
                                                                                            {
                                                                                              "type": "+",
                                                                                              "start": {
                                                                                                "row": 24,
                                                                                                "column": 98
                                                                                              },
                                                                                              "end": {
                                                                                                "row": 24,
                                                                                                "column": 99
                                                                                              },
                                                                                              "text": "+"
                                                                                            },
                                                                                            {
                                                                                              "type": "string",
                                                                                              "start": {
                                                                                                "row": 25,
                                                                                                "column": 20
                                                                                              },
                                                                                              "end": {
                                                                                                "row": 25,
                                                                                                "column": 65
                                                                                              },
                                                                                              "text": "'   float GHA = normalizeAngle(GMST - ra);\\n'",
                                                                                              "children": [
                                                                                                {
                                                                                                  "type": "'",
                                                                                                  "start": {
                                                                                                    "row": 25,
                                                                                                    "column": 20
                                                                                                  },
                                                                                                  "end": {
                                                                                                    "row": 25,
                                                                                                    "column": 21
                                                                                                  },
                                                                                                  "text": "'"
                                                                                                },
                                                                                                {
                                                                                                  "type": "string_fragment",
                                                                                                  "start": {
                                                                                                    "row": 25,
                                                                                                    "column": 21
                                                                                                  },
                                                                                                  "end": {
                                                                                                    "row": 25,
                                                                                                    "column": 62
                                                                                                  },
                                                                                                  "text": "   float GHA = normalizeAngle(GMST - ra);"
                                                                                                },
                                                                                                {
                                                                                                  "type": "escape_sequence",
                                                                                                  "start": {
                                                                                                    "row": 25,
                                                                                                    "column": 62
                                                                                                  },
                                                                                                  "end": {
                                                                                                    "row": 25,
                                                                                                    "column": 64
                                                                                                  },
                                                                                                  "text": "\\n"
                                                                                                },
                                                                                                {
                                                                                                  "type": "'",
                                                                                                  "start": {
                                                                                                    "row": 25,
                                                                                                    "column": 64
                                                                                                  },
                                                                                                  "end": {
                                                                                                    "row": 25,
                                                                                                    "column": 65
                                                                                                  },
                                                                                                  "text": "'"
                                                                                                }
                                                                                              ]
                                                                                            }
                                                                                          ]
                                                                                        },
                                                                                        {
                                                                                          "type": "+",
                                                                                          "start": {
                                                                                            "row": 25,
                                                                                            "column": 66
                                                                                          },
                                                                                          "end": {
                                                                                            "row": 25,
                                                                                            "column": 67
                                                                                          },
                                                                                          "text": "+"
                                                                                        },
                                                                                        {
                                                                                          "type": "string",
                                                                                          "start": {
                                                                                            "row": 26,
                                                                                            "column": 20
                                                                                          },
                                                                                          "end": {
                                                                                            "row": 26,
                                                                                            "column": 71
                                                                                          },
                                                                                          "text": "'   float lon = -GHA + 360.0 * step(180.0, GHA);\\n'",
                                                                                          "children": [
                                                                                            {
                                                                                              "type": "'",
                                                                                              "start": {
                                                                                                "row": 26,
                                                                                                "column": 20
                                                                                              },
                                                                                              "end": {
                                                                                                "row": 26,
                                                                                                "column": 21
                                                                                              },
                                                                                              "text": "'"
                                                                                            },
                                                                                            {
                                                                                              "type": "string_fragment",
                                                                                              "start": {
                                                                                                "row": 26,
                                                                                                "column": 21
                                                                                              },
                                                                                              "end": {
                                                                                                "row": 26,
                                                                                                "column": 68
                                                                                              },
                                                                                              "text": "   float lon = -GHA + 360.0 * step(180.0, GHA);"
                                                                                            },
                                                                                            {
                                                                                              "type": "escape_sequence",
                                                                                              "start": {
                                                                                                "row": 26,
                                                                                                "column": 68
                                                                                              },
                                                                                              "end": {
                                                                                                "row": 26,
                                                                                                "column": 70
                                                                                              },
                                                                                              "text": "\\n"
                                                                                            },
                                                                                            {
                                                                                              "type": "'",
                                                                                              "start": {
                                                                                                "row": 26,
                                                                                                "column": 70
                                                                                              },
                                                                                              "end": {
                                                                                                "row": 26,
                                                                                                "column": 71
                                                                                              },
                                                                                              "text": "'"
                                                                                            }
                                                                                          ]
                                                                                        }
                                                                                      ]
                                                                                    },
                                                                                    {
                                                                                      "type": "+",
                                                                                      "start": {
                                                                                        "row": 26,
                                                                                        "column": 72
                                                                                      },
                                                                                      "end": {
                                                                                        "row": 26,
                                                                                        "column": 73
                                                                                      },
                                                                                      "text": "+"
                                                                                    },
                                                                                    {
                                                                                      "type": "string",
                                                                                      "start": {
                                                                                        "row": 27,
                                                                                        "column": 20
                                                                                      },
                                                                                      "end": {
                                                                                        "row": 27,
                                                                                        "column": 55
                                                                                      },
                                                                                      "text": "'   float latRad = radians(dec);\\n'",
                                                                                      "children": [
                                                                                        {
                                                                                          "type": "'",
                                                                                          "start": {
                                                                                            "row": 27,
                                                                                            "column": 20
                                                                                          },
                                                                                          "end": {
                                                                                            "row": 27,
                                                                                            "column": 21
                                                                                          },
                                                                                          "text": "'"
                                                                                        },
                                                                                        {
                                                                                          "type": "string_fragment",
                                                                                          "start": {
                                                                                            "row": 27,
                                                                                            "column": 21
                                                                                          },
                                                                                          "end": {
                                                                                            "row": 27,
                                                                                            "column": 52
                                                                                          },
                                                                                          "text": "   float latRad = radians(dec);"
                                                                                        },
                                                                                        {
                                                                                          "type": "escape_sequence",
                                                                                          "start": {
                                                                                            "row": 27,
                                                                                            "column": 52
                                                                                          },
                                                                                          "end": {
                                                                                            "row": 27,
                                                                                            "column": 54
                                                                                          },
                                                                                          "text": "\\n"
                                                                                        },
                                                                                        {
                                                                                          "type": "'",
                                                                                          "start": {
                                                                                            "row": 27,
                                                                                            "column": 54
                                                                                          },
                                                                                          "end": {
                                                                                            "row": 27,
                                                                                            "column": 55
                                                                                          },
                                                                                          "text": "'"
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                {
                                                                                  "type": "+",
                                                                                  "start": {
                                                                                    "row": 27,
                                                                                    "column": 56
                                                                                  },
                                                                                  "end": {
                                                                                    "row": 27,
                                                                                    "column": 57
                                                                                  },
                                                                                  "text": "+"
                                                                                },
                                                                                {
                                                                                  "type": "string",
                                                                                  "start": {
                                                                                    "row": 28,
                                                                                    "column": 20
                                                                                  },
                                                                                  "end": {
                                                                                    "row": 28,
                                                                                    "column": 55
                                                                                  },
                                                                                  "text": "'   float lonRad = radians(lon);\\n'",
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "'",
                                                                                      "start": {
                                                                                        "row": 28,
                                                                                        "column": 20
                                                                                      },
                                                                                      "end": {
                                                                                        "row": 28,
                                                                                        "column": 21
                                                                                      },
                                                                                      "text": "'"
                                                                                    },
                                                                                    {
                                                                                      "type": "string_fragment",
                                                                                      "start": {
                                                                                        "row": 28,
                                                                                        "column": 21
                                                                                      },
                                                                                      "end": {
                                                                                        "row": 28,
                                                                                        "column": 52
                                                                                      },
                                                                                      "text": "   float lonRad = radians(lon);"
                                                                                    },
                                                                                    {
                                                                                      "type": "escape_sequence",
                                                                                      "start": {
                                                                                        "row": 28,
                                                                                        "column": 52
                                                                                      },
                                                                                      "end": {
                                                                                        "row": 28,
                                                                                        "column": 54
                                                                                      },
                                                                                      "text": "\\n"
                                                                                    },
                                                                                    {
                                                                                      "type": "'",
                                                                                      "start": {
                                                                                        "row": 28,
                                                                                        "column": 54
                                                                                      },
                                                                                      "end": {
                                                                                        "row": 28,
                                                                                        "column": 55
                                                                                      },
                                                                                      "text": "'"
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "+",
                                                                              "start": {
                                                                                "row": 28,
                                                                                "column": 56
                                                                              },
                                                                              "end": {
                                                                                "row": 28,
                                                                                "column": 57
                                                                              },
                                                                              "text": "+"
                                                                            },
                                                                            {
                                                                              "type": "string",
                                                                              "start": {
                                                                                "row": 29,
                                                                                "column": 20
                                                                              },
                                                                              "end": {
                                                                                "row": 29,
                                                                                "column": 57
                                                                              },
                                                                              "text": "'   float radCosLat = cos(latRad);\\n'",
                                                                              "children": [
                                                                                {
                                                                                  "type": "'",
                                                                                  "start": {
                                                                                    "row": 29,
                                                                                    "column": 20
                                                                                  },
                                                                                  "end": {
                                                                                    "row": 29,
                                                                                    "column": 21
                                                                                  },
                                                                                  "text": "'"
                                                                                },
                                                                                {
                                                                                  "type": "string_fragment",
                                                                                  "start": {
                                                                                    "row": 29,
                                                                                    "column": 21
                                                                                  },
                                                                                  "end": {
                                                                                    "row": 29,
                                                                                    "column": 54
                                                                                  },
                                                                                  "text": "   float radCosLat = cos(latRad);"
                                                                                },
                                                                                {
                                                                                  "type": "escape_sequence",
                                                                                  "start": {
                                                                                    "row": 29,
                                                                                    "column": 54
                                                                                  },
                                                                                  "end": {
                                                                                    "row": 29,
                                                                                    "column": 56
                                                                                  },
                                                                                  "text": "\\n"
                                                                                },
                                                                                {
                                                                                  "type": "'",
                                                                                  "start": {
                                                                                    "row": 29,
                                                                                    "column": 56
                                                                                  },
                                                                                  "end": {
                                                                                    "row": 29,
                                                                                    "column": 57
                                                                                  },
                                                                                  "text": "'"
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "+",
                                                                          "start": {
                                                                            "row": 29,
                                                                            "column": 58
                                                                          },
                                                                          "end": {
                                                                            "row": 29,
                                                                            "column": 59
                                                                          },
                                                                          "text": "+"
                                                                        },
                                                                        {
                                                                          "type": "string",
                                                                          "start": {
                                                                            "row": 30,
                                                                            "column": 20
                                                                          },
                                                                          "end": {
                                                                            "row": 30,
                                                                            "column": 102
                                                                          },
                                                                          "text": "'   return vec3(radCosLat * sin(lonRad), sin(latRad), radCosLat * cos(lonRad));\\n'",
                                                                          "children": [
                                                                            {
                                                                              "type": "'",
                                                                              "start": {
                                                                                "row": 30,
                                                                                "column": 20
                                                                              },
                                                                              "end": {
                                                                                "row": 30,
                                                                                "column": 21
                                                                              },
                                                                              "text": "'"
                                                                            },
                                                                            {
                                                                              "type": "string_fragment",
                                                                              "start": {
                                                                                "row": 30,
                                                                                "column": 21
                                                                              },
                                                                              "end": {
                                                                                "row": 30,
                                                                                "column": 99
                                                                              },
                                                                              "text": "   return vec3(radCosLat * sin(lonRad), sin(latRad), radCosLat * cos(lonRad));"
                                                                            },
                                                                            {
                                                                              "type": "escape_sequence",
                                                                              "start": {
                                                                                "row": 30,
                                                                                "column": 99
                                                                              },
                                                                              "end": {
                                                                                "row": 30,
                                                                                "column": 101
                                                                              },
                                                                              "text": "\\n"
                                                                            },
                                                                            {
                                                                              "type": "'",
                                                                              "start": {
                                                                                "row": 30,
                                                                                "column": 101
                                                                              },
                                                                              "end": {
                                                                                "row": 30,
                                                                                "column": 102
                                                                              },
                                                                              "text": "'"
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "+",
                                                                      "start": {
                                                                        "row": 30,
                                                                        "column": 103
                                                                      },
                                                                      "end": {
                                                                        "row": 30,
                                                                        "column": 104
                                                                      },
                                                                      "text": "+"
                                                                    },
                                                                    {
                                                                      "type": "string",
                                                                      "start": {
                                                                        "row": 31,
                                                                        "column": 20
                                                                      },
                                                                      "end": {
                                                                        "row": 31,
                                                                        "column": 25
                                                                      },
                                                                      "text": "'}\\n'",
                                                                      "children": [
                                                                        {
                                                                          "type": "'",
                                                                          "start": {
                                                                            "row": 31,
                                                                            "column": 20
                                                                          },
                                                                          "end": {
                                                                            "row": 31,
                                                                            "column": 21
                                                                          },
                                                                          "text": "'"
                                                                        },
                                                                        {
                                                                          "type": "string_fragment",
                                                                          "start": {
                                                                            "row": 31,
                                                                            "column": 21
                                                                          },
                                                                          "end": {
                                                                            "row": 31,
                                                                            "column": 22
                                                                          },
                                                                          "text": "}"
                                                                        },
                                                                        {
                                                                          "type": "escape_sequence",
                                                                          "start": {
                                                                            "row": 31,
                                                                            "column": 22
                                                                          },
                                                                          "end": {
                                                                            "row": 31,
                                                                            "column": 24
                                                                          },
                                                                          "text": "\\n"
                                                                        },
                                                                        {
                                                                          "type": "'",
                                                                          "start": {
                                                                            "row": 31,
                                                                            "column": 24
                                                                          },
                                                                          "end": {
                                                                            "row": 31,
                                                                            "column": 25
                                                                          },
                                                                          "text": "'"
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "+",
                                                                  "start": {
                                                                    "row": 31,
                                                                    "column": 26
                                                                  },
                                                                  "end": {
                                                                    "row": 31,
                                                                    "column": 27
                                                                  },
                                                                  "text": "+"
                                                                },
                                                                {
                                                                  "type": "comment",
                                                                  "start": {
                                                                    "row": 33,
                                                                    "column": 20
                                                                  },
                                                                  "end": {
                                                                    "row": 33,
                                                                    "column": 60
                                                                  },
                                                                  "text": "//normalizes a value between 0.0 and 1.0"
                                                                },
                                                                {
                                                                  "type": "string",
                                                                  "start": {
                                                                    "row": 34,
                                                                    "column": 20
                                                                  },
                                                                  "end": {
                                                                    "row": 34,
                                                                    "column": 91
                                                                  },
                                                                  "text": "'float normalizeScalar(float value, float minValue, float maxValue){\\n'",
                                                                  "children": [
                                                                    {
                                                                      "type": "'",
                                                                      "start": {
                                                                        "row": 34,
                                                                        "column": 20
                                                                      },
                                                                      "end": {
                                                                        "row": 34,
                                                                        "column": 21
                                                                      },
                                                                      "text": "'"
                                                                    },
                                                                    {
                                                                      "type": "string_fragment",
                                                                      "start": {
                                                                        "row": 34,
                                                                        "column": 21
                                                                      },
                                                                      "end": {
                                                                        "row": 34,
                                                                        "column": 88
                                                                      },
                                                                      "text": "float normalizeScalar(float value, float minValue, float maxValue){"
                                                                    },
                                                                    {
                                                                      "type": "escape_sequence",
                                                                      "start": {
                                                                        "row": 34,
                                                                        "column": 88
                                                                      },
                                                                      "end": {
                                                                        "row": 34,
                                                                        "column": 90
                                                                      },
                                                                      "text": "\\n"
                                                                    },
                                                                    {
                                                                      "type": "'",
                                                                      "start": {
                                                                        "row": 34,
                                                                        "column": 90
                                                                      },
                                                                      "end": {
                                                                        "row": 34,
                                                                        "column": 91
                                                                      },
                                                                      "text": "'"
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "+",
                                                              "start": {
                                                                "row": 34,
                                                                "column": 92
                                                              },
                                                              "end": {
                                                                "row": 34,
                                                                "column": 93
                                                              },
                                                              "text": "+"
                                                            },
                                                            {
                                                              "type": "string",
                                                              "start": {
                                                                "row": 35,
                                                                "column": 20
                                                              },
                                                              "end": {
                                                                "row": 35,
                                                                "column": 77
                                                              },
                                                              "text": "'   return (value - minValue) / (maxValue - minValue);\\n'",
                                                              "children": [
                                                                {
                                                                  "type": "'",
                                                                  "start": {
                                                                    "row": 35,
                                                                    "column": 20
                                                                  },
                                                                  "end": {
                                                                    "row": 35,
                                                                    "column": 21
                                                                  },
                                                                  "text": "'"
                                                                },
                                                                {
                                                                  "type": "string_fragment",
                                                                  "start": {
                                                                    "row": 35,
                                                                    "column": 21
                                                                  },
                                                                  "end": {
                                                                    "row": 35,
                                                                    "column": 74
                                                                  },
                                                                  "text": "   return (value - minValue) / (maxValue - minValue);"
                                                                },
                                                                {
                                                                  "type": "escape_sequence",
                                                                  "start": {
                                                                    "row": 35,
                                                                    "column": 74
                                                                  },
                                                                  "end": {
                                                                    "row": 35,
                                                                    "column": 76
                                                                  },
                                                                  "text": "\\n"
                                                                },
                                                                {
                                                                  "type": "'",
                                                                  "start": {
                                                                    "row": 35,
                                                                    "column": 76
                                                                  },
                                                                  "end": {
                                                                    "row": 35,
                                                                    "column": 77
                                                                  },
                                                                  "text": "'"
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "+",
                                                          "start": {
                                                            "row": 35,
                                                            "column": 78
                                                          },
                                                          "end": {
                                                            "row": 35,
                                                            "column": 79
                                                          },
                                                          "text": "+"
                                                        },
                                                        {
                                                          "type": "string",
                                                          "start": {
                                                            "row": 36,
                                                            "column": 20
                                                          },
                                                          "end": {
                                                            "row": 36,
                                                            "column": 25
                                                          },
                                                          "text": "'}\\n'",
                                                          "children": [
                                                            {
                                                              "type": "'",
                                                              "start": {
                                                                "row": 36,
                                                                "column": 20
                                                              },
                                                              "end": {
                                                                "row": 36,
                                                                "column": 21
                                                              },
                                                              "text": "'"
                                                            },
                                                            {
                                                              "type": "string_fragment",
                                                              "start": {
                                                                "row": 36,
                                                                "column": 21
                                                              },
                                                              "end": {
                                                                "row": 36,
                                                                "column": 22
                                                              },
                                                              "text": "}"
                                                            },
                                                            {
                                                              "type": "escape_sequence",
                                                              "start": {
                                                                "row": 36,
                                                                "column": 22
                                                              },
                                                              "end": {
                                                                "row": 36,
                                                                "column": 24
                                                              },
                                                              "text": "\\n"
                                                            },
                                                            {
                                                              "type": "'",
                                                              "start": {
                                                                "row": 36,
                                                                "column": 24
                                                              },
                                                              "end": {
                                                                "row": 36,
                                                                "column": 25
                                                              },
                                                              "text": "'"
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "+",
                                                      "start": {
                                                        "row": 36,
                                                        "column": 26
                                                      },
                                                      "end": {
                                                        "row": 36,
                                                        "column": 27
                                                      },
                                                      "text": "+"
                                                    },
                                                    {
                                                      "type": "string",
                                                      "start": {
                                                        "row": 38,
                                                        "column": 20
                                                      },
                                                      "end": {
                                                        "row": 38,
                                                        "column": 37
                                                      },
                                                      "text": "'void main() {\\n'",
                                                      "children": [
                                                        {
                                                          "type": "'",
                                                          "start": {
                                                            "row": 38,
                                                            "column": 20
                                                          },
                                                          "end": {
                                                            "row": 38,
                                                            "column": 21
                                                          },
                                                          "text": "'"
                                                        },
                                                        {
                                                          "type": "string_fragment",
                                                          "start": {
                                                            "row": 38,
                                                            "column": 21
                                                          },
                                                          "end": {
                                                            "row": 38,
                                                            "column": 34
                                                          },
                                                          "text": "void main() {"
                                                        },
                                                        {
                                                          "type": "escape_sequence",
                                                          "start": {
                                                            "row": 38,
                                                            "column": 34
                                                          },
                                                          "end": {
                                                            "row": 38,
                                                            "column": 36
                                                          },
                                                          "text": "\\n"
                                                        },
                                                        {
                                                          "type": "'",
                                                          "start": {
                                                            "row": 38,
                                                            "column": 36
                                                          },
                                                          "end": {
                                                            "row": 38,
                                                            "column": 37
                                                          },
                                                          "text": "'"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "+",
                                                  "start": {
                                                    "row": 38,
                                                    "column": 38
                                                  },
                                                  "end": {
                                                    "row": 38,
                                                    "column": 39
                                                  },
                                                  "text": "+"
                                                },
                                                {
                                                  "type": "string",
                                                  "start": {
                                                    "row": 39,
                                                    "column": 20
                                                  },
                                                  "end": {
                                                    "row": 39,
                                                    "column": 95
                                                  },
                                                  "text": "'   vec3 vertexPosition = computePosition(vertexPoint.x, vertexPoint.y);\\n'",
                                                  "children": [
                                                    {
                                                      "type": "'",
                                                      "start": {
                                                        "row": 39,
                                                        "column": 20
                                                      },
                                                      "end": {
                                                        "row": 39,
                                                        "column": 21
                                                      },
                                                      "text": "'"
                                                    },
                                                    {
                                                      "type": "string_fragment",
                                                      "start": {
                                                        "row": 39,
                                                        "column": 21
                                                      },
                                                      "end": {
                                                        "row": 39,
                                                        "column": 92
                                                      },
                                                      "text": "   vec3 vertexPosition = computePosition(vertexPoint.x, vertexPoint.y);"
                                                    },
                                                    {
                                                      "type": "escape_sequence",
                                                      "start": {
                                                        "row": 39,
                                                        "column": 92
                                                      },
                                                      "end": {
                                                        "row": 39,
                                                        "column": 94
                                                      },
                                                      "text": "\\n"
                                                    },
                                                    {
                                                      "type": "'",
                                                      "start": {
                                                        "row": 39,
                                                        "column": 94
                                                      },
                                                      "end": {
                                                        "row": 39,
                                                        "column": 95
                                                      },
                                                      "text": "'"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "+",
                                              "start": {
                                                "row": 39,
                                                "column": 96
                                              },
                                              "end": {
                                                "row": 39,
                                                "column": 97
                                              },
                                              "text": "+"
                                            },
                                            {
                                              "type": "string",
                                              "start": {
                                                "row": 40,
                                                "column": 20
                                              },
                                              "end": {
                                                "row": 40,
                                                "column": 83
                                              },
                                              "text": "'   gl_Position = mvpMatrix * vec4(vertexPosition.xyz, 1.0);\\n'",
                                              "children": [
                                                {
                                                  "type": "'",
                                                  "start": {
                                                    "row": 40,
                                                    "column": 20
                                                  },
                                                  "end": {
                                                    "row": 40,
                                                    "column": 21
                                                  },
                                                  "text": "'"
                                                },
                                                {
                                                  "type": "string_fragment",
                                                  "start": {
                                                    "row": 40,
                                                    "column": 21
                                                  },
                                                  "end": {
                                                    "row": 40,
                                                    "column": 80
                                                  },
                                                  "text": "   gl_Position = mvpMatrix * vec4(vertexPosition.xyz, 1.0);"
                                                },
                                                {
                                                  "type": "escape_sequence",
                                                  "start": {
                                                    "row": 40,
                                                    "column": 80
                                                  },
                                                  "end": {
                                                    "row": 40,
                                                    "column": 82
                                                  },
                                                  "text": "\\n"
                                                },
                                                {
                                                  "type": "'",
                                                  "start": {
                                                    "row": 40,
                                                    "column": 82
                                                  },
                                                  "end": {
                                                    "row": 40,
                                                    "column": 83
                                                  },
                                                  "text": "'"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "+",
                                          "start": {
                                            "row": 40,
                                            "column": 84
                                          },
                                          "end": {
                                            "row": 40,
                                            "column": 85
                                          },
                                          "text": "+"
                                        },
                                        {
                                          "type": "string",
                                          "start": {
                                            "row": 41,
                                            "column": 20
                                          },
                                          "end": {
                                            "row": 41,
                                            "column": 67
                                          },
                                          "text": "'   gl_Position.z = gl_Position.w - 0.00001;\\n'",
                                          "children": [
                                            {
                                              "type": "'",
                                              "start": {
                                                "row": 41,
                                                "column": 20
                                              },
                                              "end": {
                                                "row": 41,
                                                "column": 21
                                              },
                                              "text": "'"
                                            },
                                            {
                                              "type": "string_fragment",
                                              "start": {
                                                "row": 41,
                                                "column": 21
                                              },
                                              "end": {
                                                "row": 41,
                                                "column": 64
                                              },
                                              "text": "   gl_Position.z = gl_Position.w - 0.00001;"
                                            },
                                            {
                                              "type": "escape_sequence",
                                              "start": {
                                                "row": 41,
                                                "column": 64
                                              },
                                              "end": {
                                                "row": 41,
                                                "column": 66
                                              },
                                              "text": "\\n"
                                            },
                                            {
                                              "type": "'",
                                              "start": {
                                                "row": 41,
                                                "column": 66
                                              },
                                              "end": {
                                                "row": 41,
                                                "column": 67
                                              },
                                              "text": "'"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "+",
                                      "start": {
                                        "row": 41,
                                        "column": 68
                                      },
                                      "end": {
                                        "row": 41,
                                        "column": 69
                                      },
                                      "text": "+"
                                    },
                                    {
                                      "type": "string",
                                      "start": {
                                        "row": 42,
                                        "column": 20
                                      },
                                      "end": {
                                        "row": 42,
                                        "column": 56
                                      },
                                      "text": "'   gl_PointSize = vertexPoint.z;\\n'",
                                      "children": [
                                        {
                                          "type": "'",
                                          "start": {
                                            "row": 42,
                                            "column": 20
                                          },
                                          "end": {
                                            "row": 42,
                                            "column": 21
                                          },
                                          "text": "'"
                                        },
                                        {
                                          "type": "string_fragment",
                                          "start": {
                                            "row": 42,
                                            "column": 21
                                          },
                                          "end": {
                                            "row": 42,
                                            "column": 53
                                          },
                                          "text": "   gl_PointSize = vertexPoint.z;"
                                        },
                                        {
                                          "type": "escape_sequence",
                                          "start": {
                                            "row": 42,
                                            "column": 53
                                          },
                                          "end": {
                                            "row": 42,
                                            "column": 55
                                          },
                                          "text": "\\n"
                                        },
                                        {
                                          "type": "'",
                                          "start": {
                                            "row": 42,
                                            "column": 55
                                          },
                                          "end": {
                                            "row": 42,
                                            "column": 56
                                          },
                                          "text": "'"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "+",
                                  "start": {
                                    "row": 42,
                                    "column": 57
                                  },
                                  "end": {
                                    "row": 42,
                                    "column": 58
                                  },
                                  "text": "+"
                                },
                                {
                                  "type": "string",
                                  "start": {
                                    "row": 43,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 43,
                                    "column": 112
                                  },
                                  "text": "'   magnitudeWeight = normalizeScalar(vertexPoint.w, magnitudeRange.x, magnitudeRange.y);\\n'",
                                  "children": [
                                    {
                                      "type": "'",
                                      "start": {
                                        "row": 43,
                                        "column": 20
                                      },
                                      "end": {
                                        "row": 43,
                                        "column": 21
                                      },
                                      "text": "'"
                                    },
                                    {
                                      "type": "string_fragment",
                                      "start": {
                                        "row": 43,
                                        "column": 21
                                      },
                                      "end": {
                                        "row": 43,
                                        "column": 109
                                      },
                                      "text": "   magnitudeWeight = normalizeScalar(vertexPoint.w, magnitudeRange.x, magnitudeRange.y);"
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start": {
                                        "row": 43,
                                        "column": 109
                                      },
                                      "end": {
                                        "row": 43,
                                        "column": 111
                                      },
                                      "text": "\\n"
                                    },
                                    {
                                      "type": "'",
                                      "start": {
                                        "row": 43,
                                        "column": 111
                                      },
                                      "end": {
                                        "row": 43,
                                        "column": 112
                                      },
                                      "text": "'"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "+",
                              "start": {
                                "row": 43,
                                "column": 113
                              },
                              "end": {
                                "row": 43,
                                "column": 114
                              },
                              "text": "+"
                            },
                            {
                              "type": "string",
                              "start": {
                                "row": 44,
                                "column": 20
                              },
                              "end": {
                                "row": 44,
                                "column": 23
                              },
                              "text": "'}'",
                              "children": [
                                {
                                  "type": "'",
                                  "start": {
                                    "row": 44,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 44,
                                    "column": 21
                                  },
                                  "text": "'"
                                },
                                {
                                  "type": "string_fragment",
                                  "start": {
                                    "row": 44,
                                    "column": 21
                                  },
                                  "end": {
                                    "row": 44,
                                    "column": 22
                                  },
                                  "text": "}"
                                },
                                {
                                  "type": "'",
                                  "start": {
                                    "row": 44,
                                    "column": 22
                                  },
                                  "end": {
                                    "row": 44,
                                    "column": 23
                                  },
                                  "text": "'"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ",",
                      "start": {
                        "row": 44,
                        "column": 23
                      },
                      "end": {
                        "row": 44,
                        "column": 24
                      },
                      "text": ","
                    },
                    {
                      "type": "variable_declarator",
                      "start": {
                        "row": 45,
                        "column": 16
                      },
                      "end": {
                        "row": 64,
                        "column": 23
                      },
                      "text": "fragmentShaderSource =\n                    'precision mediump float;\\n' +\n\n                    'uniform sampler2D textureSampler;\\n' +\n                    'uniform int textureEnabled;\\n' +\n\n                    'varying float magnitudeWeight;\\n' +\n\n                    'const vec4 white = vec4(1.0, 1.0, 1.0, 1.0);\\n' +\n                    'const vec4 grey = vec4(0.5, 0.5, 0.5, 1.0);\\n' +\n\n                    'void main() {\\n' +\n                    '   if (textureEnabled == 1) {\\n' +\n                    '       gl_FragColor = texture2D(textureSampler, gl_PointCoord);\\n' +\n                    '   }\\n' +\n                    '   else {\\n' +\n                    //paint the starts in shades of grey, where the brightest star is white and the dimmest star is grey\n                    '       gl_FragColor = mix(white, grey, magnitudeWeight);\\n' +\n                    '   }\\n' +\n                    '}'",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 45,
                            "column": 16
                          },
                          "end": {
                            "row": 45,
                            "column": 36
                          },
                          "text": "fragmentShaderSource"
                        },
                        {
                          "type": "=",
                          "start": {
                            "row": 45,
                            "column": 37
                          },
                          "end": {
                            "row": 45,
                            "column": 38
                          },
                          "text": "="
                        },
                        {
                          "type": "binary_expression",
                          "start": {
                            "row": 46,
                            "column": 20
                          },
                          "end": {
                            "row": 64,
                            "column": 23
                          },
                          "text": "'precision mediump float;\\n' +\n\n                    'uniform sampler2D textureSampler;\\n' +\n                    'uniform int textureEnabled;\\n' +\n\n                    'varying float magnitudeWeight;\\n' +\n\n                    'const vec4 white = vec4(1.0, 1.0, 1.0, 1.0);\\n' +\n                    'const vec4 grey = vec4(0.5, 0.5, 0.5, 1.0);\\n' +\n\n                    'void main() {\\n' +\n                    '   if (textureEnabled == 1) {\\n' +\n                    '       gl_FragColor = texture2D(textureSampler, gl_PointCoord);\\n' +\n                    '   }\\n' +\n                    '   else {\\n' +\n                    //paint the starts in shades of grey, where the brightest star is white and the dimmest star is grey\n                    '       gl_FragColor = mix(white, grey, magnitudeWeight);\\n' +\n                    '   }\\n' +\n                    '}'",
                          "children": [
                            {
                              "type": "binary_expression",
                              "start": {
                                "row": 46,
                                "column": 20
                              },
                              "end": {
                                "row": 63,
                                "column": 28
                              },
                              "text": "'precision mediump float;\\n' +\n\n                    'uniform sampler2D textureSampler;\\n' +\n                    'uniform int textureEnabled;\\n' +\n\n                    'varying float magnitudeWeight;\\n' +\n\n                    'const vec4 white = vec4(1.0, 1.0, 1.0, 1.0);\\n' +\n                    'const vec4 grey = vec4(0.5, 0.5, 0.5, 1.0);\\n' +\n\n                    'void main() {\\n' +\n                    '   if (textureEnabled == 1) {\\n' +\n                    '       gl_FragColor = texture2D(textureSampler, gl_PointCoord);\\n' +\n                    '   }\\n' +\n                    '   else {\\n' +\n                    //paint the starts in shades of grey, where the brightest star is white and the dimmest star is grey\n                    '       gl_FragColor = mix(white, grey, magnitudeWeight);\\n' +\n                    '   }\\n'",
                              "children": [
                                {
                                  "type": "binary_expression",
                                  "start": {
                                    "row": 46,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 62,
                                    "column": 80
                                  },
                                  "text": "'precision mediump float;\\n' +\n\n                    'uniform sampler2D textureSampler;\\n' +\n                    'uniform int textureEnabled;\\n' +\n\n                    'varying float magnitudeWeight;\\n' +\n\n                    'const vec4 white = vec4(1.0, 1.0, 1.0, 1.0);\\n' +\n                    'const vec4 grey = vec4(0.5, 0.5, 0.5, 1.0);\\n' +\n\n                    'void main() {\\n' +\n                    '   if (textureEnabled == 1) {\\n' +\n                    '       gl_FragColor = texture2D(textureSampler, gl_PointCoord);\\n' +\n                    '   }\\n' +\n                    '   else {\\n' +\n                    //paint the starts in shades of grey, where the brightest star is white and the dimmest star is grey\n                    '       gl_FragColor = mix(white, grey, magnitudeWeight);\\n'",
                                  "children": [
                                    {
                                      "type": "binary_expression",
                                      "start": {
                                        "row": 46,
                                        "column": 20
                                      },
                                      "end": {
                                        "row": 60,
                                        "column": 33
                                      },
                                      "text": "'precision mediump float;\\n' +\n\n                    'uniform sampler2D textureSampler;\\n' +\n                    'uniform int textureEnabled;\\n' +\n\n                    'varying float magnitudeWeight;\\n' +\n\n                    'const vec4 white = vec4(1.0, 1.0, 1.0, 1.0);\\n' +\n                    'const vec4 grey = vec4(0.5, 0.5, 0.5, 1.0);\\n' +\n\n                    'void main() {\\n' +\n                    '   if (textureEnabled == 1) {\\n' +\n                    '       gl_FragColor = texture2D(textureSampler, gl_PointCoord);\\n' +\n                    '   }\\n' +\n                    '   else {\\n'",
                                      "children": [
                                        {
                                          "type": "binary_expression",
                                          "start": {
                                            "row": 46,
                                            "column": 20
                                          },
                                          "end": {
                                            "row": 59,
                                            "column": 28
                                          },
                                          "text": "'precision mediump float;\\n' +\n\n                    'uniform sampler2D textureSampler;\\n' +\n                    'uniform int textureEnabled;\\n' +\n\n                    'varying float magnitudeWeight;\\n' +\n\n                    'const vec4 white = vec4(1.0, 1.0, 1.0, 1.0);\\n' +\n                    'const vec4 grey = vec4(0.5, 0.5, 0.5, 1.0);\\n' +\n\n                    'void main() {\\n' +\n                    '   if (textureEnabled == 1) {\\n' +\n                    '       gl_FragColor = texture2D(textureSampler, gl_PointCoord);\\n' +\n                    '   }\\n'",
                                          "children": [
                                            {
                                              "type": "binary_expression",
                                              "start": {
                                                "row": 46,
                                                "column": 20
                                              },
                                              "end": {
                                                "row": 58,
                                                "column": 87
                                              },
                                              "text": "'precision mediump float;\\n' +\n\n                    'uniform sampler2D textureSampler;\\n' +\n                    'uniform int textureEnabled;\\n' +\n\n                    'varying float magnitudeWeight;\\n' +\n\n                    'const vec4 white = vec4(1.0, 1.0, 1.0, 1.0);\\n' +\n                    'const vec4 grey = vec4(0.5, 0.5, 0.5, 1.0);\\n' +\n\n                    'void main() {\\n' +\n                    '   if (textureEnabled == 1) {\\n' +\n                    '       gl_FragColor = texture2D(textureSampler, gl_PointCoord);\\n'",
                                              "children": [
                                                {
                                                  "type": "binary_expression",
                                                  "start": {
                                                    "row": 46,
                                                    "column": 20
                                                  },
                                                  "end": {
                                                    "row": 57,
                                                    "column": 53
                                                  },
                                                  "text": "'precision mediump float;\\n' +\n\n                    'uniform sampler2D textureSampler;\\n' +\n                    'uniform int textureEnabled;\\n' +\n\n                    'varying float magnitudeWeight;\\n' +\n\n                    'const vec4 white = vec4(1.0, 1.0, 1.0, 1.0);\\n' +\n                    'const vec4 grey = vec4(0.5, 0.5, 0.5, 1.0);\\n' +\n\n                    'void main() {\\n' +\n                    '   if (textureEnabled == 1) {\\n'",
                                                  "children": [
                                                    {
                                                      "type": "binary_expression",
                                                      "start": {
                                                        "row": 46,
                                                        "column": 20
                                                      },
                                                      "end": {
                                                        "row": 56,
                                                        "column": 37
                                                      },
                                                      "text": "'precision mediump float;\\n' +\n\n                    'uniform sampler2D textureSampler;\\n' +\n                    'uniform int textureEnabled;\\n' +\n\n                    'varying float magnitudeWeight;\\n' +\n\n                    'const vec4 white = vec4(1.0, 1.0, 1.0, 1.0);\\n' +\n                    'const vec4 grey = vec4(0.5, 0.5, 0.5, 1.0);\\n' +\n\n                    'void main() {\\n'",
                                                      "children": [
                                                        {
                                                          "type": "binary_expression",
                                                          "start": {
                                                            "row": 46,
                                                            "column": 20
                                                          },
                                                          "end": {
                                                            "row": 54,
                                                            "column": 67
                                                          },
                                                          "text": "'precision mediump float;\\n' +\n\n                    'uniform sampler2D textureSampler;\\n' +\n                    'uniform int textureEnabled;\\n' +\n\n                    'varying float magnitudeWeight;\\n' +\n\n                    'const vec4 white = vec4(1.0, 1.0, 1.0, 1.0);\\n' +\n                    'const vec4 grey = vec4(0.5, 0.5, 0.5, 1.0);\\n'",
                                                          "children": [
                                                            {
                                                              "type": "binary_expression",
                                                              "start": {
                                                                "row": 46,
                                                                "column": 20
                                                              },
                                                              "end": {
                                                                "row": 53,
                                                                "column": 68
                                                              },
                                                              "text": "'precision mediump float;\\n' +\n\n                    'uniform sampler2D textureSampler;\\n' +\n                    'uniform int textureEnabled;\\n' +\n\n                    'varying float magnitudeWeight;\\n' +\n\n                    'const vec4 white = vec4(1.0, 1.0, 1.0, 1.0);\\n'",
                                                              "children": [
                                                                {
                                                                  "type": "binary_expression",
                                                                  "start": {
                                                                    "row": 46,
                                                                    "column": 20
                                                                  },
                                                                  "end": {
                                                                    "row": 51,
                                                                    "column": 54
                                                                  },
                                                                  "text": "'precision mediump float;\\n' +\n\n                    'uniform sampler2D textureSampler;\\n' +\n                    'uniform int textureEnabled;\\n' +\n\n                    'varying float magnitudeWeight;\\n'",
                                                                  "children": [
                                                                    {
                                                                      "type": "binary_expression",
                                                                      "start": {
                                                                        "row": 46,
                                                                        "column": 20
                                                                      },
                                                                      "end": {
                                                                        "row": 49,
                                                                        "column": 51
                                                                      },
                                                                      "text": "'precision mediump float;\\n' +\n\n                    'uniform sampler2D textureSampler;\\n' +\n                    'uniform int textureEnabled;\\n'",
                                                                      "children": [
                                                                        {
                                                                          "type": "binary_expression",
                                                                          "start": {
                                                                            "row": 46,
                                                                            "column": 20
                                                                          },
                                                                          "end": {
                                                                            "row": 48,
                                                                            "column": 57
                                                                          },
                                                                          "text": "'precision mediump float;\\n' +\n\n                    'uniform sampler2D textureSampler;\\n'",
                                                                          "children": [
                                                                            {
                                                                              "type": "string",
                                                                              "start": {
                                                                                "row": 46,
                                                                                "column": 20
                                                                              },
                                                                              "end": {
                                                                                "row": 46,
                                                                                "column": 48
                                                                              },
                                                                              "text": "'precision mediump float;\\n'",
                                                                              "children": [
                                                                                {
                                                                                  "type": "'",
                                                                                  "start": {
                                                                                    "row": 46,
                                                                                    "column": 20
                                                                                  },
                                                                                  "end": {
                                                                                    "row": 46,
                                                                                    "column": 21
                                                                                  },
                                                                                  "text": "'"
                                                                                },
                                                                                {
                                                                                  "type": "string_fragment",
                                                                                  "start": {
                                                                                    "row": 46,
                                                                                    "column": 21
                                                                                  },
                                                                                  "end": {
                                                                                    "row": 46,
                                                                                    "column": 45
                                                                                  },
                                                                                  "text": "precision mediump float;"
                                                                                },
                                                                                {
                                                                                  "type": "escape_sequence",
                                                                                  "start": {
                                                                                    "row": 46,
                                                                                    "column": 45
                                                                                  },
                                                                                  "end": {
                                                                                    "row": 46,
                                                                                    "column": 47
                                                                                  },
                                                                                  "text": "\\n"
                                                                                },
                                                                                {
                                                                                  "type": "'",
                                                                                  "start": {
                                                                                    "row": 46,
                                                                                    "column": 47
                                                                                  },
                                                                                  "end": {
                                                                                    "row": 46,
                                                                                    "column": 48
                                                                                  },
                                                                                  "text": "'"
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "+",
                                                                              "start": {
                                                                                "row": 46,
                                                                                "column": 49
                                                                              },
                                                                              "end": {
                                                                                "row": 46,
                                                                                "column": 50
                                                                              },
                                                                              "text": "+"
                                                                            },
                                                                            {
                                                                              "type": "string",
                                                                              "start": {
                                                                                "row": 48,
                                                                                "column": 20
                                                                              },
                                                                              "end": {
                                                                                "row": 48,
                                                                                "column": 57
                                                                              },
                                                                              "text": "'uniform sampler2D textureSampler;\\n'",
                                                                              "children": [
                                                                                {
                                                                                  "type": "'",
                                                                                  "start": {
                                                                                    "row": 48,
                                                                                    "column": 20
                                                                                  },
                                                                                  "end": {
                                                                                    "row": 48,
                                                                                    "column": 21
                                                                                  },
                                                                                  "text": "'"
                                                                                },
                                                                                {
                                                                                  "type": "string_fragment",
                                                                                  "start": {
                                                                                    "row": 48,
                                                                                    "column": 21
                                                                                  },
                                                                                  "end": {
                                                                                    "row": 48,
                                                                                    "column": 54
                                                                                  },
                                                                                  "text": "uniform sampler2D textureSampler;"
                                                                                },
                                                                                {
                                                                                  "type": "escape_sequence",
                                                                                  "start": {
                                                                                    "row": 48,
                                                                                    "column": 54
                                                                                  },
                                                                                  "end": {
                                                                                    "row": 48,
                                                                                    "column": 56
                                                                                  },
                                                                                  "text": "\\n"
                                                                                },
                                                                                {
                                                                                  "type": "'",
                                                                                  "start": {
                                                                                    "row": 48,
                                                                                    "column": 56
                                                                                  },
                                                                                  "end": {
                                                                                    "row": 48,
                                                                                    "column": 57
                                                                                  },
                                                                                  "text": "'"
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "+",
                                                                          "start": {
                                                                            "row": 48,
                                                                            "column": 58
                                                                          },
                                                                          "end": {
                                                                            "row": 48,
                                                                            "column": 59
                                                                          },
                                                                          "text": "+"
                                                                        },
                                                                        {
                                                                          "type": "string",
                                                                          "start": {
                                                                            "row": 49,
                                                                            "column": 20
                                                                          },
                                                                          "end": {
                                                                            "row": 49,
                                                                            "column": 51
                                                                          },
                                                                          "text": "'uniform int textureEnabled;\\n'",
                                                                          "children": [
                                                                            {
                                                                              "type": "'",
                                                                              "start": {
                                                                                "row": 49,
                                                                                "column": 20
                                                                              },
                                                                              "end": {
                                                                                "row": 49,
                                                                                "column": 21
                                                                              },
                                                                              "text": "'"
                                                                            },
                                                                            {
                                                                              "type": "string_fragment",
                                                                              "start": {
                                                                                "row": 49,
                                                                                "column": 21
                                                                              },
                                                                              "end": {
                                                                                "row": 49,
                                                                                "column": 48
                                                                              },
                                                                              "text": "uniform int textureEnabled;"
                                                                            },
                                                                            {
                                                                              "type": "escape_sequence",
                                                                              "start": {
                                                                                "row": 49,
                                                                                "column": 48
                                                                              },
                                                                              "end": {
                                                                                "row": 49,
                                                                                "column": 50
                                                                              },
                                                                              "text": "\\n"
                                                                            },
                                                                            {
                                                                              "type": "'",
                                                                              "start": {
                                                                                "row": 49,
                                                                                "column": 50
                                                                              },
                                                                              "end": {
                                                                                "row": 49,
                                                                                "column": 51
                                                                              },
                                                                              "text": "'"
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "+",
                                                                      "start": {
                                                                        "row": 49,
                                                                        "column": 52
                                                                      },
                                                                      "end": {
                                                                        "row": 49,
                                                                        "column": 53
                                                                      },
                                                                      "text": "+"
                                                                    },
                                                                    {
                                                                      "type": "string",
                                                                      "start": {
                                                                        "row": 51,
                                                                        "column": 20
                                                                      },
                                                                      "end": {
                                                                        "row": 51,
                                                                        "column": 54
                                                                      },
                                                                      "text": "'varying float magnitudeWeight;\\n'",
                                                                      "children": [
                                                                        {
                                                                          "type": "'",
                                                                          "start": {
                                                                            "row": 51,
                                                                            "column": 20
                                                                          },
                                                                          "end": {
                                                                            "row": 51,
                                                                            "column": 21
                                                                          },
                                                                          "text": "'"
                                                                        },
                                                                        {
                                                                          "type": "string_fragment",
                                                                          "start": {
                                                                            "row": 51,
                                                                            "column": 21
                                                                          },
                                                                          "end": {
                                                                            "row": 51,
                                                                            "column": 51
                                                                          },
                                                                          "text": "varying float magnitudeWeight;"
                                                                        },
                                                                        {
                                                                          "type": "escape_sequence",
                                                                          "start": {
                                                                            "row": 51,
                                                                            "column": 51
                                                                          },
                                                                          "end": {
                                                                            "row": 51,
                                                                            "column": 53
                                                                          },
                                                                          "text": "\\n"
                                                                        },
                                                                        {
                                                                          "type": "'",
                                                                          "start": {
                                                                            "row": 51,
                                                                            "column": 53
                                                                          },
                                                                          "end": {
                                                                            "row": 51,
                                                                            "column": 54
                                                                          },
                                                                          "text": "'"
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "+",
                                                                  "start": {
                                                                    "row": 51,
                                                                    "column": 55
                                                                  },
                                                                  "end": {
                                                                    "row": 51,
                                                                    "column": 56
                                                                  },
                                                                  "text": "+"
                                                                },
                                                                {
                                                                  "type": "string",
                                                                  "start": {
                                                                    "row": 53,
                                                                    "column": 20
                                                                  },
                                                                  "end": {
                                                                    "row": 53,
                                                                    "column": 68
                                                                  },
                                                                  "text": "'const vec4 white = vec4(1.0, 1.0, 1.0, 1.0);\\n'",
                                                                  "children": [
                                                                    {
                                                                      "type": "'",
                                                                      "start": {
                                                                        "row": 53,
                                                                        "column": 20
                                                                      },
                                                                      "end": {
                                                                        "row": 53,
                                                                        "column": 21
                                                                      },
                                                                      "text": "'"
                                                                    },
                                                                    {
                                                                      "type": "string_fragment",
                                                                      "start": {
                                                                        "row": 53,
                                                                        "column": 21
                                                                      },
                                                                      "end": {
                                                                        "row": 53,
                                                                        "column": 65
                                                                      },
                                                                      "text": "const vec4 white = vec4(1.0, 1.0, 1.0, 1.0);"
                                                                    },
                                                                    {
                                                                      "type": "escape_sequence",
                                                                      "start": {
                                                                        "row": 53,
                                                                        "column": 65
                                                                      },
                                                                      "end": {
                                                                        "row": 53,
                                                                        "column": 67
                                                                      },
                                                                      "text": "\\n"
                                                                    },
                                                                    {
                                                                      "type": "'",
                                                                      "start": {
                                                                        "row": 53,
                                                                        "column": 67
                                                                      },
                                                                      "end": {
                                                                        "row": 53,
                                                                        "column": 68
                                                                      },
                                                                      "text": "'"
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "+",
                                                              "start": {
                                                                "row": 53,
                                                                "column": 69
                                                              },
                                                              "end": {
                                                                "row": 53,
                                                                "column": 70
                                                              },
                                                              "text": "+"
                                                            },
                                                            {
                                                              "type": "string",
                                                              "start": {
                                                                "row": 54,
                                                                "column": 20
                                                              },
                                                              "end": {
                                                                "row": 54,
                                                                "column": 67
                                                              },
                                                              "text": "'const vec4 grey = vec4(0.5, 0.5, 0.5, 1.0);\\n'",
                                                              "children": [
                                                                {
                                                                  "type": "'",
                                                                  "start": {
                                                                    "row": 54,
                                                                    "column": 20
                                                                  },
                                                                  "end": {
                                                                    "row": 54,
                                                                    "column": 21
                                                                  },
                                                                  "text": "'"
                                                                },
                                                                {
                                                                  "type": "string_fragment",
                                                                  "start": {
                                                                    "row": 54,
                                                                    "column": 21
                                                                  },
                                                                  "end": {
                                                                    "row": 54,
                                                                    "column": 64
                                                                  },
                                                                  "text": "const vec4 grey = vec4(0.5, 0.5, 0.5, 1.0);"
                                                                },
                                                                {
                                                                  "type": "escape_sequence",
                                                                  "start": {
                                                                    "row": 54,
                                                                    "column": 64
                                                                  },
                                                                  "end": {
                                                                    "row": 54,
                                                                    "column": 66
                                                                  },
                                                                  "text": "\\n"
                                                                },
                                                                {
                                                                  "type": "'",
                                                                  "start": {
                                                                    "row": 54,
                                                                    "column": 66
                                                                  },
                                                                  "end": {
                                                                    "row": 54,
                                                                    "column": 67
                                                                  },
                                                                  "text": "'"
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "+",
                                                          "start": {
                                                            "row": 54,
                                                            "column": 68
                                                          },
                                                          "end": {
                                                            "row": 54,
                                                            "column": 69
                                                          },
                                                          "text": "+"
                                                        },
                                                        {
                                                          "type": "string",
                                                          "start": {
                                                            "row": 56,
                                                            "column": 20
                                                          },
                                                          "end": {
                                                            "row": 56,
                                                            "column": 37
                                                          },
                                                          "text": "'void main() {\\n'",
                                                          "children": [
                                                            {
                                                              "type": "'",
                                                              "start": {
                                                                "row": 56,
                                                                "column": 20
                                                              },
                                                              "end": {
                                                                "row": 56,
                                                                "column": 21
                                                              },
                                                              "text": "'"
                                                            },
                                                            {
                                                              "type": "string_fragment",
                                                              "start": {
                                                                "row": 56,
                                                                "column": 21
                                                              },
                                                              "end": {
                                                                "row": 56,
                                                                "column": 34
                                                              },
                                                              "text": "void main() {"
                                                            },
                                                            {
                                                              "type": "escape_sequence",
                                                              "start": {
                                                                "row": 56,
                                                                "column": 34
                                                              },
                                                              "end": {
                                                                "row": 56,
                                                                "column": 36
                                                              },
                                                              "text": "\\n"
                                                            },
                                                            {
                                                              "type": "'",
                                                              "start": {
                                                                "row": 56,
                                                                "column": 36
                                                              },
                                                              "end": {
                                                                "row": 56,
                                                                "column": 37
                                                              },
                                                              "text": "'"
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "+",
                                                      "start": {
                                                        "row": 56,
                                                        "column": 38
                                                      },
                                                      "end": {
                                                        "row": 56,
                                                        "column": 39
                                                      },
                                                      "text": "+"
                                                    },
                                                    {
                                                      "type": "string",
                                                      "start": {
                                                        "row": 57,
                                                        "column": 20
                                                      },
                                                      "end": {
                                                        "row": 57,
                                                        "column": 53
                                                      },
                                                      "text": "'   if (textureEnabled == 1) {\\n'",
                                                      "children": [
                                                        {
                                                          "type": "'",
                                                          "start": {
                                                            "row": 57,
                                                            "column": 20
                                                          },
                                                          "end": {
                                                            "row": 57,
                                                            "column": 21
                                                          },
                                                          "text": "'"
                                                        },
                                                        {
                                                          "type": "string_fragment",
                                                          "start": {
                                                            "row": 57,
                                                            "column": 21
                                                          },
                                                          "end": {
                                                            "row": 57,
                                                            "column": 50
                                                          },
                                                          "text": "   if (textureEnabled == 1) {"
                                                        },
                                                        {
                                                          "type": "escape_sequence",
                                                          "start": {
                                                            "row": 57,
                                                            "column": 50
                                                          },
                                                          "end": {
                                                            "row": 57,
                                                            "column": 52
                                                          },
                                                          "text": "\\n"
                                                        },
                                                        {
                                                          "type": "'",
                                                          "start": {
                                                            "row": 57,
                                                            "column": 52
                                                          },
                                                          "end": {
                                                            "row": 57,
                                                            "column": 53
                                                          },
                                                          "text": "'"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "+",
                                                  "start": {
                                                    "row": 57,
                                                    "column": 54
                                                  },
                                                  "end": {
                                                    "row": 57,
                                                    "column": 55
                                                  },
                                                  "text": "+"
                                                },
                                                {
                                                  "type": "string",
                                                  "start": {
                                                    "row": 58,
                                                    "column": 20
                                                  },
                                                  "end": {
                                                    "row": 58,
                                                    "column": 87
                                                  },
                                                  "text": "'       gl_FragColor = texture2D(textureSampler, gl_PointCoord);\\n'",
                                                  "children": [
                                                    {
                                                      "type": "'",
                                                      "start": {
                                                        "row": 58,
                                                        "column": 20
                                                      },
                                                      "end": {
                                                        "row": 58,
                                                        "column": 21
                                                      },
                                                      "text": "'"
                                                    },
                                                    {
                                                      "type": "string_fragment",
                                                      "start": {
                                                        "row": 58,
                                                        "column": 21
                                                      },
                                                      "end": {
                                                        "row": 58,
                                                        "column": 84
                                                      },
                                                      "text": "       gl_FragColor = texture2D(textureSampler, gl_PointCoord);"
                                                    },
                                                    {
                                                      "type": "escape_sequence",
                                                      "start": {
                                                        "row": 58,
                                                        "column": 84
                                                      },
                                                      "end": {
                                                        "row": 58,
                                                        "column": 86
                                                      },
                                                      "text": "\\n"
                                                    },
                                                    {
                                                      "type": "'",
                                                      "start": {
                                                        "row": 58,
                                                        "column": 86
                                                      },
                                                      "end": {
                                                        "row": 58,
                                                        "column": 87
                                                      },
                                                      "text": "'"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "+",
                                              "start": {
                                                "row": 58,
                                                "column": 88
                                              },
                                              "end": {
                                                "row": 58,
                                                "column": 89
                                              },
                                              "text": "+"
                                            },
                                            {
                                              "type": "string",
                                              "start": {
                                                "row": 59,
                                                "column": 20
                                              },
                                              "end": {
                                                "row": 59,
                                                "column": 28
                                              },
                                              "text": "'   }\\n'",
                                              "children": [
                                                {
                                                  "type": "'",
                                                  "start": {
                                                    "row": 59,
                                                    "column": 20
                                                  },
                                                  "end": {
                                                    "row": 59,
                                                    "column": 21
                                                  },
                                                  "text": "'"
                                                },
                                                {
                                                  "type": "string_fragment",
                                                  "start": {
                                                    "row": 59,
                                                    "column": 21
                                                  },
                                                  "end": {
                                                    "row": 59,
                                                    "column": 25
                                                  },
                                                  "text": "   }"
                                                },
                                                {
                                                  "type": "escape_sequence",
                                                  "start": {
                                                    "row": 59,
                                                    "column": 25
                                                  },
                                                  "end": {
                                                    "row": 59,
                                                    "column": 27
                                                  },
                                                  "text": "\\n"
                                                },
                                                {
                                                  "type": "'",
                                                  "start": {
                                                    "row": 59,
                                                    "column": 27
                                                  },
                                                  "end": {
                                                    "row": 59,
                                                    "column": 28
                                                  },
                                                  "text": "'"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "+",
                                          "start": {
                                            "row": 59,
                                            "column": 29
                                          },
                                          "end": {
                                            "row": 59,
                                            "column": 30
                                          },
                                          "text": "+"
                                        },
                                        {
                                          "type": "string",
                                          "start": {
                                            "row": 60,
                                            "column": 20
                                          },
                                          "end": {
                                            "row": 60,
                                            "column": 33
                                          },
                                          "text": "'   else {\\n'",
                                          "children": [
                                            {
                                              "type": "'",
                                              "start": {
                                                "row": 60,
                                                "column": 20
                                              },
                                              "end": {
                                                "row": 60,
                                                "column": 21
                                              },
                                              "text": "'"
                                            },
                                            {
                                              "type": "string_fragment",
                                              "start": {
                                                "row": 60,
                                                "column": 21
                                              },
                                              "end": {
                                                "row": 60,
                                                "column": 30
                                              },
                                              "text": "   else {"
                                            },
                                            {
                                              "type": "escape_sequence",
                                              "start": {
                                                "row": 60,
                                                "column": 30
                                              },
                                              "end": {
                                                "row": 60,
                                                "column": 32
                                              },
                                              "text": "\\n"
                                            },
                                            {
                                              "type": "'",
                                              "start": {
                                                "row": 60,
                                                "column": 32
                                              },
                                              "end": {
                                                "row": 60,
                                                "column": 33
                                              },
                                              "text": "'"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "+",
                                      "start": {
                                        "row": 60,
                                        "column": 34
                                      },
                                      "end": {
                                        "row": 60,
                                        "column": 35
                                      },
                                      "text": "+"
                                    },
                                    {
                                      "type": "comment",
                                      "start": {
                                        "row": 61,
                                        "column": 20
                                      },
                                      "end": {
                                        "row": 61,
                                        "column": 120
                                      },
                                      "text": "//paint the starts in shades of grey, where the brightest star is white and the dimmest star is grey"
                                    },
                                    {
                                      "type": "string",
                                      "start": {
                                        "row": 62,
                                        "column": 20
                                      },
                                      "end": {
                                        "row": 62,
                                        "column": 80
                                      },
                                      "text": "'       gl_FragColor = mix(white, grey, magnitudeWeight);\\n'",
                                      "children": [
                                        {
                                          "type": "'",
                                          "start": {
                                            "row": 62,
                                            "column": 20
                                          },
                                          "end": {
                                            "row": 62,
                                            "column": 21
                                          },
                                          "text": "'"
                                        },
                                        {
                                          "type": "string_fragment",
                                          "start": {
                                            "row": 62,
                                            "column": 21
                                          },
                                          "end": {
                                            "row": 62,
                                            "column": 77
                                          },
                                          "text": "       gl_FragColor = mix(white, grey, magnitudeWeight);"
                                        },
                                        {
                                          "type": "escape_sequence",
                                          "start": {
                                            "row": 62,
                                            "column": 77
                                          },
                                          "end": {
                                            "row": 62,
                                            "column": 79
                                          },
                                          "text": "\\n"
                                        },
                                        {
                                          "type": "'",
                                          "start": {
                                            "row": 62,
                                            "column": 79
                                          },
                                          "end": {
                                            "row": 62,
                                            "column": 80
                                          },
                                          "text": "'"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "+",
                                  "start": {
                                    "row": 62,
                                    "column": 81
                                  },
                                  "end": {
                                    "row": 62,
                                    "column": 82
                                  },
                                  "text": "+"
                                },
                                {
                                  "type": "string",
                                  "start": {
                                    "row": 63,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 63,
                                    "column": 28
                                  },
                                  "text": "'   }\\n'",
                                  "children": [
                                    {
                                      "type": "'",
                                      "start": {
                                        "row": 63,
                                        "column": 20
                                      },
                                      "end": {
                                        "row": 63,
                                        "column": 21
                                      },
                                      "text": "'"
                                    },
                                    {
                                      "type": "string_fragment",
                                      "start": {
                                        "row": 63,
                                        "column": 21
                                      },
                                      "end": {
                                        "row": 63,
                                        "column": 25
                                      },
                                      "text": "   }"
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start": {
                                        "row": 63,
                                        "column": 25
                                      },
                                      "end": {
                                        "row": 63,
                                        "column": 27
                                      },
                                      "text": "\\n"
                                    },
                                    {
                                      "type": "'",
                                      "start": {
                                        "row": 63,
                                        "column": 27
                                      },
                                      "end": {
                                        "row": 63,
                                        "column": 28
                                      },
                                      "text": "'"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "+",
                              "start": {
                                "row": 63,
                                "column": 29
                              },
                              "end": {
                                "row": 63,
                                "column": 30
                              },
                              "text": "+"
                            },
                            {
                              "type": "string",
                              "start": {
                                "row": 64,
                                "column": 20
                              },
                              "end": {
                                "row": 64,
                                "column": 23
                              },
                              "text": "'}'",
                              "children": [
                                {
                                  "type": "'",
                                  "start": {
                                    "row": 64,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 64,
                                    "column": 21
                                  },
                                  "text": "'"
                                },
                                {
                                  "type": "string_fragment",
                                  "start": {
                                    "row": 64,
                                    "column": 21
                                  },
                                  "end": {
                                    "row": 64,
                                    "column": 22
                                  },
                                  "text": "}"
                                },
                                {
                                  "type": "'",
                                  "start": {
                                    "row": 64,
                                    "column": 22
                                  },
                                  "end": {
                                    "row": 64,
                                    "column": 23
                                  },
                                  "text": "'"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start": {
                        "row": 64,
                        "column": 23
                      },
                      "end": {
                        "row": 64,
                        "column": 24
                      },
                      "text": ";"
                    }
                  ]
                },
                {
                  "type": "comment",
                  "start": {
                    "row": 66,
                    "column": 12
                  },
                  "end": {
                    "row": 66,
                    "column": 91
                  },
                  "text": "// Call to the superclass, which performs shader program compiling and linking."
                },
                {
                  "type": "expression_statement",
                  "start": {
                    "row": 67,
                    "column": 12
                  },
                  "end": {
                    "row": 67,
                    "column": 97
                  },
                  "text": "GpuProgram.call(this, gl, vertexShaderSource, fragmentShaderSource, [\"vertexPoint\"]);",
                  "children": [
                    {
                      "type": "call_expression",
                      "start": {
                        "row": 67,
                        "column": 12
                      },
                      "end": {
                        "row": 67,
                        "column": 96
                      },
                      "text": "GpuProgram.call(this, gl, vertexShaderSource, fragmentShaderSource, [\"vertexPoint\"])",
                      "children": [
                        {
                          "type": "member_expression",
                          "start": {
                            "row": 67,
                            "column": 12
                          },
                          "end": {
                            "row": 67,
                            "column": 27
                          },
                          "text": "GpuProgram.call",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 67,
                                "column": 12
                              },
                              "end": {
                                "row": 67,
                                "column": 22
                              },
                              "text": "GpuProgram"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 67,
                                "column": 22
                              },
                              "end": {
                                "row": 67,
                                "column": 23
                              },
                              "text": "."
                            },
                            {
                              "type": "property_identifier",
                              "start": {
                                "row": 67,
                                "column": 23
                              },
                              "end": {
                                "row": 67,
                                "column": 27
                              },
                              "text": "call"
                            }
                          ]
                        },
                        {
                          "type": "arguments",
                          "start": {
                            "row": 67,
                            "column": 27
                          },
                          "end": {
                            "row": 67,
                            "column": 96
                          },
                          "text": "(this, gl, vertexShaderSource, fragmentShaderSource, [\"vertexPoint\"])",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 67,
                                "column": 27
                              },
                              "end": {
                                "row": 67,
                                "column": 28
                              },
                              "text": "("
                            },
                            {
                              "type": "this",
                              "start": {
                                "row": 67,
                                "column": 28
                              },
                              "end": {
                                "row": 67,
                                "column": 32
                              },
                              "text": "this"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 67,
                                "column": 32
                              },
                              "end": {
                                "row": 67,
                                "column": 33
                              },
                              "text": ","
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 67,
                                "column": 34
                              },
                              "end": {
                                "row": 67,
                                "column": 36
                              },
                              "text": "gl"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 67,
                                "column": 36
                              },
                              "end": {
                                "row": 67,
                                "column": 37
                              },
                              "text": ","
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 67,
                                "column": 38
                              },
                              "end": {
                                "row": 67,
                                "column": 56
                              },
                              "text": "vertexShaderSource"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 67,
                                "column": 56
                              },
                              "end": {
                                "row": 67,
                                "column": 57
                              },
                              "text": ","
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 67,
                                "column": 58
                              },
                              "end": {
                                "row": 67,
                                "column": 78
                              },
                              "text": "fragmentShaderSource"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 67,
                                "column": 78
                              },
                              "end": {
                                "row": 67,
                                "column": 79
                              },
                              "text": ","
                            },
                            {
                              "type": "array",
                              "start": {
                                "row": 67,
                                "column": 80
                              },
                              "end": {
                                "row": 67,
                                "column": 95
                              },
                              "text": "[\"vertexPoint\"]",
                              "children": [
                                {
                                  "type": "[",
                                  "start": {
                                    "row": 67,
                                    "column": 80
                                  },
                                  "end": {
                                    "row": 67,
                                    "column": 81
                                  },
                                  "text": "["
                                },
                                {
                                  "type": "string",
                                  "start": {
                                    "row": 67,
                                    "column": 81
                                  },
                                  "end": {
                                    "row": 67,
                                    "column": 94
                                  },
                                  "text": "\"vertexPoint\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start": {
                                        "row": 67,
                                        "column": 81
                                      },
                                      "end": {
                                        "row": 67,
                                        "column": 82
                                      },
                                      "text": "\""
                                    },
                                    {
                                      "type": "string_fragment",
                                      "start": {
                                        "row": 67,
                                        "column": 82
                                      },
                                      "end": {
                                        "row": 67,
                                        "column": 93
                                      },
                                      "text": "vertexPoint"
                                    },
                                    {
                                      "type": "\"",
                                      "start": {
                                        "row": 67,
                                        "column": 93
                                      },
                                      "end": {
                                        "row": 67,
                                        "column": 94
                                      },
                                      "text": "\""
                                    }
                                  ]
                                },
                                {
                                  "type": "]",
                                  "start": {
                                    "row": 67,
                                    "column": 94
                                  },
                                  "end": {
                                    "row": 67,
                                    "column": 95
                                  },
                                  "text": "]"
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 67,
                                "column": 95
                              },
                              "end": {
                                "row": 67,
                                "column": 96
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start": {
                        "row": 67,
                        "column": 96
                      },
                      "end": {
                        "row": 67,
                        "column": 97
                      },
                      "text": ";"
                    }
                  ]
                },
                {
                  "type": "comment",
                  "start": {
                    "row": 69,
                    "column": 12
                  },
                  "end": {
                    "row": 73,
                    "column": 15
                  },
                  "text": "/**\n             * The WebGL location for this program's 'vertexPoint' attribute.\n             * @type {Number}\n             * @readonly\n             */"
                },
                {
                  "type": "expression_statement",
                  "start": {
                    "row": 74,
                    "column": 12
                  },
                  "end": {
                    "row": 74,
                    "column": 81
                  },
                  "text": "this.vertexPointLocation = this.attributeLocation(gl, \"vertexPoint\");",
                  "children": [
                    {
                      "type": "assignment_expression",
                      "start": {
                        "row": 74,
                        "column": 12
                      },
                      "end": {
                        "row": 74,
                        "column": 80
                      },
                      "text": "this.vertexPointLocation = this.attributeLocation(gl, \"vertexPoint\")",
                      "children": [
                        {
                          "type": "member_expression",
                          "start": {
                            "row": 74,
                            "column": 12
                          },
                          "end": {
                            "row": 74,
                            "column": 36
                          },
                          "text": "this.vertexPointLocation",
                          "children": [
                            {
                              "type": "this",
                              "start": {
                                "row": 74,
                                "column": 12
                              },
                              "end": {
                                "row": 74,
                                "column": 16
                              },
                              "text": "this"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 74,
                                "column": 16
                              },
                              "end": {
                                "row": 74,
                                "column": 17
                              },
                              "text": "."
                            },
                            {
                              "type": "property_identifier",
                              "start": {
                                "row": 74,
                                "column": 17
                              },
                              "end": {
                                "row": 74,
                                "column": 36
                              },
                              "text": "vertexPointLocation"
                            }
                          ]
                        },
                        {
                          "type": "=",
                          "start": {
                            "row": 74,
                            "column": 37
                          },
                          "end": {
                            "row": 74,
                            "column": 38
                          },
                          "text": "="
                        },
                        {
                          "type": "call_expression",
                          "start": {
                            "row": 74,
                            "column": 39
                          },
                          "end": {
                            "row": 74,
                            "column": 80
                          },
                          "text": "this.attributeLocation(gl, \"vertexPoint\")",
                          "children": [
                            {
                              "type": "member_expression",
                              "start": {
                                "row": 74,
                                "column": 39
                              },
                              "end": {
                                "row": 74,
                                "column": 61
                              },
                              "text": "this.attributeLocation",
                              "children": [
                                {
                                  "type": "this",
                                  "start": {
                                    "row": 74,
                                    "column": 39
                                  },
                                  "end": {
                                    "row": 74,
                                    "column": 43
                                  },
                                  "text": "this"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 74,
                                    "column": 43
                                  },
                                  "end": {
                                    "row": 74,
                                    "column": 44
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "property_identifier",
                                  "start": {
                                    "row": 74,
                                    "column": 44
                                  },
                                  "end": {
                                    "row": 74,
                                    "column": 61
                                  },
                                  "text": "attributeLocation"
                                }
                              ]
                            },
                            {
                              "type": "arguments",
                              "start": {
                                "row": 74,
                                "column": 61
                              },
                              "end": {
                                "row": 74,
                                "column": 80
                              },
                              "text": "(gl, \"vertexPoint\")",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 74,
                                    "column": 61
                                  },
                                  "end": {
                                    "row": 74,
                                    "column": 62
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 74,
                                    "column": 62
                                  },
                                  "end": {
                                    "row": 74,
                                    "column": 64
                                  },
                                  "text": "gl"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 74,
                                    "column": 64
                                  },
                                  "end": {
                                    "row": 74,
                                    "column": 65
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "string",
                                  "start": {
                                    "row": 74,
                                    "column": 66
                                  },
                                  "end": {
                                    "row": 74,
                                    "column": 79
                                  },
                                  "text": "\"vertexPoint\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start": {
                                        "row": 74,
                                        "column": 66
                                      },
                                      "end": {
                                        "row": 74,
                                        "column": 67
                                      },
                                      "text": "\""
                                    },
                                    {
                                      "type": "string_fragment",
                                      "start": {
                                        "row": 74,
                                        "column": 67
                                      },
                                      "end": {
                                        "row": 74,
                                        "column": 78
                                      },
                                      "text": "vertexPoint"
                                    },
                                    {
                                      "type": "\"",
                                      "start": {
                                        "row": 74,
                                        "column": 78
                                      },
                                      "end": {
                                        "row": 74,
                                        "column": 79
                                      },
                                      "text": "\""
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 74,
                                    "column": 79
                                  },
                                  "end": {
                                    "row": 74,
                                    "column": 80
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start": {
                        "row": 74,
                        "column": 80
                      },
                      "end": {
                        "row": 74,
                        "column": 81
                      },
                      "text": ";"
                    }
                  ]
                },
                {
                  "type": "comment",
                  "start": {
                    "row": 76,
                    "column": 12
                  },
                  "end": {
                    "row": 80,
                    "column": 15
                  },
                  "text": "/**\n             * The WebGL location for this program's 'mvpMatrix' uniform.\n             * @type {WebGLUniformLocation}\n             * @readonly\n             */"
                },
                {
                  "type": "expression_statement",
                  "start": {
                    "row": 81,
                    "column": 12
                  },
                  "end": {
                    "row": 81,
                    "column": 75
                  },
                  "text": "this.mvpMatrixLocation = this.uniformLocation(gl, \"mvpMatrix\");",
                  "children": [
                    {
                      "type": "assignment_expression",
                      "start": {
                        "row": 81,
                        "column": 12
                      },
                      "end": {
                        "row": 81,
                        "column": 74
                      },
                      "text": "this.mvpMatrixLocation = this.uniformLocation(gl, \"mvpMatrix\")",
                      "children": [
                        {
                          "type": "member_expression",
                          "start": {
                            "row": 81,
                            "column": 12
                          },
                          "end": {
                            "row": 81,
                            "column": 34
                          },
                          "text": "this.mvpMatrixLocation",
                          "children": [
                            {
                              "type": "this",
                              "start": {
                                "row": 81,
                                "column": 12
                              },
                              "end": {
                                "row": 81,
                                "column": 16
                              },
                              "text": "this"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 81,
                                "column": 16
                              },
                              "end": {
                                "row": 81,
                                "column": 17
                              },
                              "text": "."
                            },
                            {
                              "type": "property_identifier",
                              "start": {
                                "row": 81,
                                "column": 17
                              },
                              "end": {
                                "row": 81,
                                "column": 34
                              },
                              "text": "mvpMatrixLocation"
                            }
                          ]
                        },
                        {
                          "type": "=",
                          "start": {
                            "row": 81,
                            "column": 35
                          },
                          "end": {
                            "row": 81,
                            "column": 36
                          },
                          "text": "="
                        },
                        {
                          "type": "call_expression",
                          "start": {
                            "row": 81,
                            "column": 37
                          },
                          "end": {
                            "row": 81,
                            "column": 74
                          },
                          "text": "this.uniformLocation(gl, \"mvpMatrix\")",
                          "children": [
                            {
                              "type": "member_expression",
                              "start": {
                                "row": 81,
                                "column": 37
                              },
                              "end": {
                                "row": 81,
                                "column": 57
                              },
                              "text": "this.uniformLocation",
                              "children": [
                                {
                                  "type": "this",
                                  "start": {
                                    "row": 81,
                                    "column": 37
                                  },
                                  "end": {
                                    "row": 81,
                                    "column": 41
                                  },
                                  "text": "this"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 81,
                                    "column": 41
                                  },
                                  "end": {
                                    "row": 81,
                                    "column": 42
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "property_identifier",
                                  "start": {
                                    "row": 81,
                                    "column": 42
                                  },
                                  "end": {
                                    "row": 81,
                                    "column": 57
                                  },
                                  "text": "uniformLocation"
                                }
                              ]
                            },
                            {
                              "type": "arguments",
                              "start": {
                                "row": 81,
                                "column": 57
                              },
                              "end": {
                                "row": 81,
                                "column": 74
                              },
                              "text": "(gl, \"mvpMatrix\")",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 81,
                                    "column": 57
                                  },
                                  "end": {
                                    "row": 81,
                                    "column": 58
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 81,
                                    "column": 58
                                  },
                                  "end": {
                                    "row": 81,
                                    "column": 60
                                  },
                                  "text": "gl"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 81,
                                    "column": 60
                                  },
                                  "end": {
                                    "row": 81,
                                    "column": 61
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "string",
                                  "start": {
                                    "row": 81,
                                    "column": 62
                                  },
                                  "end": {
                                    "row": 81,
                                    "column": 73
                                  },
                                  "text": "\"mvpMatrix\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start": {
                                        "row": 81,
                                        "column": 62
                                      },
                                      "end": {
                                        "row": 81,
                                        "column": 63
                                      },
                                      "text": "\""
                                    },
                                    {
                                      "type": "string_fragment",
                                      "start": {
                                        "row": 81,
                                        "column": 63
                                      },
                                      "end": {
                                        "row": 81,
                                        "column": 72
                                      },
                                      "text": "mvpMatrix"
                                    },
                                    {
                                      "type": "\"",
                                      "start": {
                                        "row": 81,
                                        "column": 72
                                      },
                                      "end": {
                                        "row": 81,
                                        "column": 73
                                      },
                                      "text": "\""
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 81,
                                    "column": 73
                                  },
                                  "end": {
                                    "row": 81,
                                    "column": 74
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start": {
                        "row": 81,
                        "column": 74
                      },
                      "end": {
                        "row": 81,
                        "column": 75
                      },
                      "text": ";"
                    }
                  ]
                },
                {
                  "type": "comment",
                  "start": {
                    "row": 83,
                    "column": 12
                  },
                  "end": {
                    "row": 87,
                    "column": 15
                  },
                  "text": "/**\n             * The WebGL location for this program's 'numDays' uniform.\n             * @type {WebGLUniformLocation}\n             * @readonly\n             */"
                },
                {
                  "type": "expression_statement",
                  "start": {
                    "row": 88,
                    "column": 12
                  },
                  "end": {
                    "row": 88,
                    "column": 71
                  },
                  "text": "this.numDaysLocation = this.uniformLocation(gl, \"numDays\");",
                  "children": [
                    {
                      "type": "assignment_expression",
                      "start": {
                        "row": 88,
                        "column": 12
                      },
                      "end": {
                        "row": 88,
                        "column": 70
                      },
                      "text": "this.numDaysLocation = this.uniformLocation(gl, \"numDays\")",
                      "children": [
                        {
                          "type": "member_expression",
                          "start": {
                            "row": 88,
                            "column": 12
                          },
                          "end": {
                            "row": 88,
                            "column": 32
                          },
                          "text": "this.numDaysLocation",
                          "children": [
                            {
                              "type": "this",
                              "start": {
                                "row": 88,
                                "column": 12
                              },
                              "end": {
                                "row": 88,
                                "column": 16
                              },
                              "text": "this"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 88,
                                "column": 16
                              },
                              "end": {
                                "row": 88,
                                "column": 17
                              },
                              "text": "."
                            },
                            {
                              "type": "property_identifier",
                              "start": {
                                "row": 88,
                                "column": 17
                              },
                              "end": {
                                "row": 88,
                                "column": 32
                              },
                              "text": "numDaysLocation"
                            }
                          ]
                        },
                        {
                          "type": "=",
                          "start": {
                            "row": 88,
                            "column": 33
                          },
                          "end": {
                            "row": 88,
                            "column": 34
                          },
                          "text": "="
                        },
                        {
                          "type": "call_expression",
                          "start": {
                            "row": 88,
                            "column": 35
                          },
                          "end": {
                            "row": 88,
                            "column": 70
                          },
                          "text": "this.uniformLocation(gl, \"numDays\")",
                          "children": [
                            {
                              "type": "member_expression",
                              "start": {
                                "row": 88,
                                "column": 35
                              },
                              "end": {
                                "row": 88,
                                "column": 55
                              },
                              "text": "this.uniformLocation",
                              "children": [
                                {
                                  "type": "this",
                                  "start": {
                                    "row": 88,
                                    "column": 35
                                  },
                                  "end": {
                                    "row": 88,
                                    "column": 39
                                  },
                                  "text": "this"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 88,
                                    "column": 39
                                  },
                                  "end": {
                                    "row": 88,
                                    "column": 40
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "property_identifier",
                                  "start": {
                                    "row": 88,
                                    "column": 40
                                  },
                                  "end": {
                                    "row": 88,
                                    "column": 55
                                  },
                                  "text": "uniformLocation"
                                }
                              ]
                            },
                            {
                              "type": "arguments",
                              "start": {
                                "row": 88,
                                "column": 55
                              },
                              "end": {
                                "row": 88,
                                "column": 70
                              },
                              "text": "(gl, \"numDays\")",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 88,
                                    "column": 55
                                  },
                                  "end": {
                                    "row": 88,
                                    "column": 56
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 88,
                                    "column": 56
                                  },
                                  "end": {
                                    "row": 88,
                                    "column": 58
                                  },
                                  "text": "gl"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 88,
                                    "column": 58
                                  },
                                  "end": {
                                    "row": 88,
                                    "column": 59
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "string",
                                  "start": {
                                    "row": 88,
                                    "column": 60
                                  },
                                  "end": {
                                    "row": 88,
                                    "column": 69
                                  },
                                  "text": "\"numDays\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start": {
                                        "row": 88,
                                        "column": 60
                                      },
                                      "end": {
                                        "row": 88,
                                        "column": 61
                                      },
                                      "text": "\""
                                    },
                                    {
                                      "type": "string_fragment",
                                      "start": {
                                        "row": 88,
                                        "column": 61
                                      },
                                      "end": {
                                        "row": 88,
                                        "column": 68
                                      },
                                      "text": "numDays"
                                    },
                                    {
                                      "type": "\"",
                                      "start": {
                                        "row": 88,
                                        "column": 68
                                      },
                                      "end": {
                                        "row": 88,
                                        "column": 69
                                      },
                                      "text": "\""
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 88,
                                    "column": 69
                                  },
                                  "end": {
                                    "row": 88,
                                    "column": 70
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start": {
                        "row": 88,
                        "column": 70
                      },
                      "end": {
                        "row": 88,
                        "column": 71
                      },
                      "text": ";"
                    }
                  ]
                },
                {
                  "type": "comment",
                  "start": {
                    "row": 90,
                    "column": 12
                  },
                  "end": {
                    "row": 94,
                    "column": 15
                  },
                  "text": "/**\n             * The WebGL location for this program's 'magnitudeRangeLocation' uniform.\n             * @type {WebGLUniformLocation}\n             * @readonly\n             */"
                },
                {
                  "type": "expression_statement",
                  "start": {
                    "row": 95,
                    "column": 12
                  },
                  "end": {
                    "row": 95,
                    "column": 85
                  },
                  "text": "this.magnitudeRangeLocation = this.uniformLocation(gl, \"magnitudeRange\");",
                  "children": [
                    {
                      "type": "assignment_expression",
                      "start": {
                        "row": 95,
                        "column": 12
                      },
                      "end": {
                        "row": 95,
                        "column": 84
                      },
                      "text": "this.magnitudeRangeLocation = this.uniformLocation(gl, \"magnitudeRange\")",
                      "children": [
                        {
                          "type": "member_expression",
                          "start": {
                            "row": 95,
                            "column": 12
                          },
                          "end": {
                            "row": 95,
                            "column": 39
                          },
                          "text": "this.magnitudeRangeLocation",
                          "children": [
                            {
                              "type": "this",
                              "start": {
                                "row": 95,
                                "column": 12
                              },
                              "end": {
                                "row": 95,
                                "column": 16
                              },
                              "text": "this"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 95,
                                "column": 16
                              },
                              "end": {
                                "row": 95,
                                "column": 17
                              },
                              "text": "."
                            },
                            {
                              "type": "property_identifier",
                              "start": {
                                "row": 95,
                                "column": 17
                              },
                              "end": {
                                "row": 95,
                                "column": 39
                              },
                              "text": "magnitudeRangeLocation"
                            }
                          ]
                        },
                        {
                          "type": "=",
                          "start": {
                            "row": 95,
                            "column": 40
                          },
                          "end": {
                            "row": 95,
                            "column": 41
                          },
                          "text": "="
                        },
                        {
                          "type": "call_expression",
                          "start": {
                            "row": 95,
                            "column": 42
                          },
                          "end": {
                            "row": 95,
                            "column": 84
                          },
                          "text": "this.uniformLocation(gl, \"magnitudeRange\")",
                          "children": [
                            {
                              "type": "member_expression",
                              "start": {
                                "row": 95,
                                "column": 42
                              },
                              "end": {
                                "row": 95,
                                "column": 62
                              },
                              "text": "this.uniformLocation",
                              "children": [
                                {
                                  "type": "this",
                                  "start": {
                                    "row": 95,
                                    "column": 42
                                  },
                                  "end": {
                                    "row": 95,
                                    "column": 46
                                  },
                                  "text": "this"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 95,
                                    "column": 46
                                  },
                                  "end": {
                                    "row": 95,
                                    "column": 47
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "property_identifier",
                                  "start": {
                                    "row": 95,
                                    "column": 47
                                  },
                                  "end": {
                                    "row": 95,
                                    "column": 62
                                  },
                                  "text": "uniformLocation"
                                }
                              ]
                            },
                            {
                              "type": "arguments",
                              "start": {
                                "row": 95,
                                "column": 62
                              },
                              "end": {
                                "row": 95,
                                "column": 84
                              },
                              "text": "(gl, \"magnitudeRange\")",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 95,
                                    "column": 62
                                  },
                                  "end": {
                                    "row": 95,
                                    "column": 63
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 95,
                                    "column": 63
                                  },
                                  "end": {
                                    "row": 95,
                                    "column": 65
                                  },
                                  "text": "gl"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 95,
                                    "column": 65
                                  },
                                  "end": {
                                    "row": 95,
                                    "column": 66
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "string",
                                  "start": {
                                    "row": 95,
                                    "column": 67
                                  },
                                  "end": {
                                    "row": 95,
                                    "column": 83
                                  },
                                  "text": "\"magnitudeRange\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start": {
                                        "row": 95,
                                        "column": 67
                                      },
                                      "end": {
                                        "row": 95,
                                        "column": 68
                                      },
                                      "text": "\""
                                    },
                                    {
                                      "type": "string_fragment",
                                      "start": {
                                        "row": 95,
                                        "column": 68
                                      },
                                      "end": {
                                        "row": 95,
                                        "column": 82
                                      },
                                      "text": "magnitudeRange"
                                    },
                                    {
                                      "type": "\"",
                                      "start": {
                                        "row": 95,
                                        "column": 82
                                      },
                                      "end": {
                                        "row": 95,
                                        "column": 83
                                      },
                                      "text": "\""
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 95,
                                    "column": 83
                                  },
                                  "end": {
                                    "row": 95,
                                    "column": 84
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start": {
                        "row": 95,
                        "column": 84
                      },
                      "end": {
                        "row": 95,
                        "column": 85
                      },
                      "text": ";"
                    }
                  ]
                },
                {
                  "type": "comment",
                  "start": {
                    "row": 97,
                    "column": 12
                  },
                  "end": {
                    "row": 101,
                    "column": 15
                  },
                  "text": "/**\n             * The WebGL location for this program's 'textureSampler' uniform.\n             * @type {WebGLUniformLocation}\n             * @readonly\n             */"
                },
                {
                  "type": "expression_statement",
                  "start": {
                    "row": 102,
                    "column": 12
                  },
                  "end": {
                    "row": 102,
                    "column": 82
                  },
                  "text": "this.textureUnitLocation = this.uniformLocation(gl, \"textureSampler\");",
                  "children": [
                    {
                      "type": "assignment_expression",
                      "start": {
                        "row": 102,
                        "column": 12
                      },
                      "end": {
                        "row": 102,
                        "column": 81
                      },
                      "text": "this.textureUnitLocation = this.uniformLocation(gl, \"textureSampler\")",
                      "children": [
                        {
                          "type": "member_expression",
                          "start": {
                            "row": 102,
                            "column": 12
                          },
                          "end": {
                            "row": 102,
                            "column": 36
                          },
                          "text": "this.textureUnitLocation",
                          "children": [
                            {
                              "type": "this",
                              "start": {
                                "row": 102,
                                "column": 12
                              },
                              "end": {
                                "row": 102,
                                "column": 16
                              },
                              "text": "this"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 102,
                                "column": 16
                              },
                              "end": {
                                "row": 102,
                                "column": 17
                              },
                              "text": "."
                            },
                            {
                              "type": "property_identifier",
                              "start": {
                                "row": 102,
                                "column": 17
                              },
                              "end": {
                                "row": 102,
                                "column": 36
                              },
                              "text": "textureUnitLocation"
                            }
                          ]
                        },
                        {
                          "type": "=",
                          "start": {
                            "row": 102,
                            "column": 37
                          },
                          "end": {
                            "row": 102,
                            "column": 38
                          },
                          "text": "="
                        },
                        {
                          "type": "call_expression",
                          "start": {
                            "row": 102,
                            "column": 39
                          },
                          "end": {
                            "row": 102,
                            "column": 81
                          },
                          "text": "this.uniformLocation(gl, \"textureSampler\")",
                          "children": [
                            {
                              "type": "member_expression",
                              "start": {
                                "row": 102,
                                "column": 39
                              },
                              "end": {
                                "row": 102,
                                "column": 59
                              },
                              "text": "this.uniformLocation",
                              "children": [
                                {
                                  "type": "this",
                                  "start": {
                                    "row": 102,
                                    "column": 39
                                  },
                                  "end": {
                                    "row": 102,
                                    "column": 43
                                  },
                                  "text": "this"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 102,
                                    "column": 43
                                  },
                                  "end": {
                                    "row": 102,
                                    "column": 44
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "property_identifier",
                                  "start": {
                                    "row": 102,
                                    "column": 44
                                  },
                                  "end": {
                                    "row": 102,
                                    "column": 59
                                  },
                                  "text": "uniformLocation"
                                }
                              ]
                            },
                            {
                              "type": "arguments",
                              "start": {
                                "row": 102,
                                "column": 59
                              },
                              "end": {
                                "row": 102,
                                "column": 81
                              },
                              "text": "(gl, \"textureSampler\")",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 102,
                                    "column": 59
                                  },
                                  "end": {
                                    "row": 102,
                                    "column": 60
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 102,
                                    "column": 60
                                  },
                                  "end": {
                                    "row": 102,
                                    "column": 62
                                  },
                                  "text": "gl"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 102,
                                    "column": 62
                                  },
                                  "end": {
                                    "row": 102,
                                    "column": 63
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "string",
                                  "start": {
                                    "row": 102,
                                    "column": 64
                                  },
                                  "end": {
                                    "row": 102,
                                    "column": 80
                                  },
                                  "text": "\"textureSampler\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start": {
                                        "row": 102,
                                        "column": 64
                                      },
                                      "end": {
                                        "row": 102,
                                        "column": 65
                                      },
                                      "text": "\""
                                    },
                                    {
                                      "type": "string_fragment",
                                      "start": {
                                        "row": 102,
                                        "column": 65
                                      },
                                      "end": {
                                        "row": 102,
                                        "column": 79
                                      },
                                      "text": "textureSampler"
                                    },
                                    {
                                      "type": "\"",
                                      "start": {
                                        "row": 102,
                                        "column": 79
                                      },
                                      "end": {
                                        "row": 102,
                                        "column": 80
                                      },
                                      "text": "\""
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 102,
                                    "column": 80
                                  },
                                  "end": {
                                    "row": 102,
                                    "column": 81
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start": {
                        "row": 102,
                        "column": 81
                      },
                      "end": {
                        "row": 102,
                        "column": 82
                      },
                      "text": ";"
                    }
                  ]
                },
                {
                  "type": "comment",
                  "start": {
                    "row": 104,
                    "column": 12
                  },
                  "end": {
                    "row": 108,
                    "column": 15
                  },
                  "text": "/**\n             * The WebGL location for this program's 'textureEnabled' uniform.\n             * @type {WebGLUniformLocation}\n             * @readonly\n             */"
                },
                {
                  "type": "expression_statement",
                  "start": {
                    "row": 109,
                    "column": 12
                  },
                  "end": {
                    "row": 109,
                    "column": 85
                  },
                  "text": "this.textureEnabledLocation = this.uniformLocation(gl, \"textureEnabled\");",
                  "children": [
                    {
                      "type": "assignment_expression",
                      "start": {
                        "row": 109,
                        "column": 12
                      },
                      "end": {
                        "row": 109,
                        "column": 84
                      },
                      "text": "this.textureEnabledLocation = this.uniformLocation(gl, \"textureEnabled\")",
                      "children": [
                        {
                          "type": "member_expression",
                          "start": {
                            "row": 109,
                            "column": 12
                          },
                          "end": {
                            "row": 109,
                            "column": 39
                          },
                          "text": "this.textureEnabledLocation",
                          "children": [
                            {
                              "type": "this",
                              "start": {
                                "row": 109,
                                "column": 12
                              },
                              "end": {
                                "row": 109,
                                "column": 16
                              },
                              "text": "this"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 109,
                                "column": 16
                              },
                              "end": {
                                "row": 109,
                                "column": 17
                              },
                              "text": "."
                            },
                            {
                              "type": "property_identifier",
                              "start": {
                                "row": 109,
                                "column": 17
                              },
                              "end": {
                                "row": 109,
                                "column": 39
                              },
                              "text": "textureEnabledLocation"
                            }
                          ]
                        },
                        {
                          "type": "=",
                          "start": {
                            "row": 109,
                            "column": 40
                          },
                          "end": {
                            "row": 109,
                            "column": 41
                          },
                          "text": "="
                        },
                        {
                          "type": "call_expression",
                          "start": {
                            "row": 109,
                            "column": 42
                          },
                          "end": {
                            "row": 109,
                            "column": 84
                          },
                          "text": "this.uniformLocation(gl, \"textureEnabled\")",
                          "children": [
                            {
                              "type": "member_expression",
                              "start": {
                                "row": 109,
                                "column": 42
                              },
                              "end": {
                                "row": 109,
                                "column": 62
                              },
                              "text": "this.uniformLocation",
                              "children": [
                                {
                                  "type": "this",
                                  "start": {
                                    "row": 109,
                                    "column": 42
                                  },
                                  "end": {
                                    "row": 109,
                                    "column": 46
                                  },
                                  "text": "this"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 109,
                                    "column": 46
                                  },
                                  "end": {
                                    "row": 109,
                                    "column": 47
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "property_identifier",
                                  "start": {
                                    "row": 109,
                                    "column": 47
                                  },
                                  "end": {
                                    "row": 109,
                                    "column": 62
                                  },
                                  "text": "uniformLocation"
                                }
                              ]
                            },
                            {
                              "type": "arguments",
                              "start": {
                                "row": 109,
                                "column": 62
                              },
                              "end": {
                                "row": 109,
                                "column": 84
                              },
                              "text": "(gl, \"textureEnabled\")",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 109,
                                    "column": 62
                                  },
                                  "end": {
                                    "row": 109,
                                    "column": 63
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 109,
                                    "column": 63
                                  },
                                  "end": {
                                    "row": 109,
                                    "column": 65
                                  },
                                  "text": "gl"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 109,
                                    "column": 65
                                  },
                                  "end": {
                                    "row": 109,
                                    "column": 66
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "string",
                                  "start": {
                                    "row": 109,
                                    "column": 67
                                  },
                                  "end": {
                                    "row": 109,
                                    "column": 83
                                  },
                                  "text": "\"textureEnabled\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start": {
                                        "row": 109,
                                        "column": 67
                                      },
                                      "end": {
                                        "row": 109,
                                        "column": 68
                                      },
                                      "text": "\""
                                    },
                                    {
                                      "type": "string_fragment",
                                      "start": {
                                        "row": 109,
                                        "column": 68
                                      },
                                      "end": {
                                        "row": 109,
                                        "column": 82
                                      },
                                      "text": "textureEnabled"
                                    },
                                    {
                                      "type": "\"",
                                      "start": {
                                        "row": 109,
                                        "column": 82
                                      },
                                      "end": {
                                        "row": 109,
                                        "column": 83
                                      },
                                      "text": "\""
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 109,
                                    "column": 83
                                  },
                                  "end": {
                                    "row": 109,
                                    "column": 84
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start": {
                        "row": 109,
                        "column": 84
                      },
                      "end": {
                        "row": 109,
                        "column": 85
                      },
                      "text": ";"
                    }
                  ]
                },
                {
                  "type": "}",
                  "start": {
                    "row": 110,
                    "column": 8
                  },
                  "end": {
                    "row": 110,
                    "column": 9
                  },
                  "text": "}"
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}