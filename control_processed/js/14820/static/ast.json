{
  "type": "program",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 67,
    "column": 1
  },
  "text": "async function EAX(cipher, key) {\n  if (cipher.substr(0, 3) !== 'aes') {\n    throw new Error('EAX mode supports only AES cipher');\n  }\n\n  const [\n    omac,\n    ctr\n  ] = await Promise.all([\n    OMAC(key),\n    CTR(key)\n  ]);\n\n  return {\n    /**\n     * Encrypt plaintext input.\n     * @param  {Uint8Array} plaintext   The cleartext input to be encrypted\n     * @param  {Uint8Array} nonce       The nonce (16 bytes)\n     * @param  {Uint8Array} adata       Associated data to sign\n     * @returns {Promise<Uint8Array>}    The ciphertext output\n     */\n    encrypt: async function(plaintext, nonce, adata) {\n      const [\n        omacNonce,\n        omacAdata\n      ] = await Promise.all([\n        omac(zero, nonce),\n        omac(one, adata)\n      ]);\n      const ciphered = await ctr(plaintext, omacNonce);\n      const omacCiphered = await omac(two, ciphered);\n      const tag = omacCiphered; // Assumes that omac(*).length === tagLength.\n      for (let i = 0; i < tagLength; i++) {\n        tag[i] ^= omacAdata[i] ^ omacNonce[i];\n      }\n      return util.concatUint8Array([ciphered, tag]);\n    },\n\n    /**\n     * Decrypt ciphertext input.\n     * @param  {Uint8Array} ciphertext   The ciphertext input to be decrypted\n     * @param  {Uint8Array} nonce        The nonce (16 bytes)\n     * @param  {Uint8Array} adata        Associated data to verify\n     * @returns {Promise<Uint8Array>}     The plaintext output\n     */\n    decrypt: async function(ciphertext, nonce, adata) {\n      if (ciphertext.length < tagLength) throw new Error('Invalid EAX ciphertext');\n      const ciphered = ciphertext.subarray(0, -tagLength);\n      const ctTag = ciphertext.subarray(-tagLength);\n      const [\n        omacNonce,\n        omacAdata,\n        omacCiphered\n      ] = await Promise.all([\n        omac(zero, nonce),\n        omac(one, adata),\n        omac(two, ciphered)\n      ]);\n      const tag = omacCiphered; // Assumes that omac(*).length === tagLength.\n      for (let i = 0; i < tagLength; i++) {\n        tag[i] ^= omacAdata[i] ^ omacNonce[i];\n      }\n      if (!util.equalsUint8Array(ctTag, tag)) throw new Error('Authentication tag mismatch');\n      const plaintext = await ctr(ciphered, omacNonce);\n      return plaintext;\n    }\n  };\n}",
  "children": [
    {
      "type": "function_declaration",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 67,
        "column": 1
      },
      "text": "async function EAX(cipher, key) {\n  if (cipher.substr(0, 3) !== 'aes') {\n    throw new Error('EAX mode supports only AES cipher');\n  }\n\n  const [\n    omac,\n    ctr\n  ] = await Promise.all([\n    OMAC(key),\n    CTR(key)\n  ]);\n\n  return {\n    /**\n     * Encrypt plaintext input.\n     * @param  {Uint8Array} plaintext   The cleartext input to be encrypted\n     * @param  {Uint8Array} nonce       The nonce (16 bytes)\n     * @param  {Uint8Array} adata       Associated data to sign\n     * @returns {Promise<Uint8Array>}    The ciphertext output\n     */\n    encrypt: async function(plaintext, nonce, adata) {\n      const [\n        omacNonce,\n        omacAdata\n      ] = await Promise.all([\n        omac(zero, nonce),\n        omac(one, adata)\n      ]);\n      const ciphered = await ctr(plaintext, omacNonce);\n      const omacCiphered = await omac(two, ciphered);\n      const tag = omacCiphered; // Assumes that omac(*).length === tagLength.\n      for (let i = 0; i < tagLength; i++) {\n        tag[i] ^= omacAdata[i] ^ omacNonce[i];\n      }\n      return util.concatUint8Array([ciphered, tag]);\n    },\n\n    /**\n     * Decrypt ciphertext input.\n     * @param  {Uint8Array} ciphertext   The ciphertext input to be decrypted\n     * @param  {Uint8Array} nonce        The nonce (16 bytes)\n     * @param  {Uint8Array} adata        Associated data to verify\n     * @returns {Promise<Uint8Array>}     The plaintext output\n     */\n    decrypt: async function(ciphertext, nonce, adata) {\n      if (ciphertext.length < tagLength) throw new Error('Invalid EAX ciphertext');\n      const ciphered = ciphertext.subarray(0, -tagLength);\n      const ctTag = ciphertext.subarray(-tagLength);\n      const [\n        omacNonce,\n        omacAdata,\n        omacCiphered\n      ] = await Promise.all([\n        omac(zero, nonce),\n        omac(one, adata),\n        omac(two, ciphered)\n      ]);\n      const tag = omacCiphered; // Assumes that omac(*).length === tagLength.\n      for (let i = 0; i < tagLength; i++) {\n        tag[i] ^= omacAdata[i] ^ omacNonce[i];\n      }\n      if (!util.equalsUint8Array(ctTag, tag)) throw new Error('Authentication tag mismatch');\n      const plaintext = await ctr(ciphered, omacNonce);\n      return plaintext;\n    }\n  };\n}",
      "children": [
        {
          "type": "async",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 5
          },
          "text": "async"
        },
        {
          "type": "function",
          "start": {
            "row": 0,
            "column": 6
          },
          "end": {
            "row": 0,
            "column": 14
          },
          "text": "function"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 15
          },
          "end": {
            "row": 0,
            "column": 18
          },
          "text": "EAX"
        },
        {
          "type": "formal_parameters",
          "start": {
            "row": 0,
            "column": 18
          },
          "end": {
            "row": 0,
            "column": 31
          },
          "text": "(cipher, key)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 18
              },
              "end": {
                "row": 0,
                "column": 19
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 19
              },
              "end": {
                "row": 0,
                "column": 25
              },
              "text": "cipher"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 25
              },
              "end": {
                "row": 0,
                "column": 26
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 27
              },
              "end": {
                "row": 0,
                "column": 30
              },
              "text": "key"
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 30
              },
              "end": {
                "row": 0,
                "column": 31
              },
              "text": ")"
            }
          ]
        },
        {
          "type": "statement_block",
          "start": {
            "row": 0,
            "column": 32
          },
          "end": {
            "row": 67,
            "column": 1
          },
          "text": "{\n  if (cipher.substr(0, 3) !== 'aes') {\n    throw new Error('EAX mode supports only AES cipher');\n  }\n\n  const [\n    omac,\n    ctr\n  ] = await Promise.all([\n    OMAC(key),\n    CTR(key)\n  ]);\n\n  return {\n    /**\n     * Encrypt plaintext input.\n     * @param  {Uint8Array} plaintext   The cleartext input to be encrypted\n     * @param  {Uint8Array} nonce       The nonce (16 bytes)\n     * @param  {Uint8Array} adata       Associated data to sign\n     * @returns {Promise<Uint8Array>}    The ciphertext output\n     */\n    encrypt: async function(plaintext, nonce, adata) {\n      const [\n        omacNonce,\n        omacAdata\n      ] = await Promise.all([\n        omac(zero, nonce),\n        omac(one, adata)\n      ]);\n      const ciphered = await ctr(plaintext, omacNonce);\n      const omacCiphered = await omac(two, ciphered);\n      const tag = omacCiphered; // Assumes that omac(*).length === tagLength.\n      for (let i = 0; i < tagLength; i++) {\n        tag[i] ^= omacAdata[i] ^ omacNonce[i];\n      }\n      return util.concatUint8Array([ciphered, tag]);\n    },\n\n    /**\n     * Decrypt ciphertext input.\n     * @param  {Uint8Array} ciphertext   The ciphertext input to be decrypted\n     * @param  {Uint8Array} nonce        The nonce (16 bytes)\n     * @param  {Uint8Array} adata        Associated data to verify\n     * @returns {Promise<Uint8Array>}     The plaintext output\n     */\n    decrypt: async function(ciphertext, nonce, adata) {\n      if (ciphertext.length < tagLength) throw new Error('Invalid EAX ciphertext');\n      const ciphered = ciphertext.subarray(0, -tagLength);\n      const ctTag = ciphertext.subarray(-tagLength);\n      const [\n        omacNonce,\n        omacAdata,\n        omacCiphered\n      ] = await Promise.all([\n        omac(zero, nonce),\n        omac(one, adata),\n        omac(two, ciphered)\n      ]);\n      const tag = omacCiphered; // Assumes that omac(*).length === tagLength.\n      for (let i = 0; i < tagLength; i++) {\n        tag[i] ^= omacAdata[i] ^ omacNonce[i];\n      }\n      if (!util.equalsUint8Array(ctTag, tag)) throw new Error('Authentication tag mismatch');\n      const plaintext = await ctr(ciphered, omacNonce);\n      return plaintext;\n    }\n  };\n}",
          "children": [
            {
              "type": "{",
              "start": {
                "row": 0,
                "column": 32
              },
              "end": {
                "row": 0,
                "column": 33
              },
              "text": "{"
            },
            {
              "type": "if_statement",
              "start": {
                "row": 1,
                "column": 2
              },
              "end": {
                "row": 3,
                "column": 3
              },
              "text": "if (cipher.substr(0, 3) !== 'aes') {\n    throw new Error('EAX mode supports only AES cipher');\n  }",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 1,
                    "column": 2
                  },
                  "end": {
                    "row": 1,
                    "column": 4
                  },
                  "text": "if"
                },
                {
                  "type": "parenthesized_expression",
                  "start": {
                    "row": 1,
                    "column": 5
                  },
                  "end": {
                    "row": 1,
                    "column": 36
                  },
                  "text": "(cipher.substr(0, 3) !== 'aes')",
                  "children": [
                    {
                      "type": "(",
                      "start": {
                        "row": 1,
                        "column": 5
                      },
                      "end": {
                        "row": 1,
                        "column": 6
                      },
                      "text": "("
                    },
                    {
                      "type": "binary_expression",
                      "start": {
                        "row": 1,
                        "column": 6
                      },
                      "end": {
                        "row": 1,
                        "column": 35
                      },
                      "text": "cipher.substr(0, 3) !== 'aes'",
                      "children": [
                        {
                          "type": "call_expression",
                          "start": {
                            "row": 1,
                            "column": 6
                          },
                          "end": {
                            "row": 1,
                            "column": 25
                          },
                          "text": "cipher.substr(0, 3)",
                          "children": [
                            {
                              "type": "member_expression",
                              "start": {
                                "row": 1,
                                "column": 6
                              },
                              "end": {
                                "row": 1,
                                "column": 19
                              },
                              "text": "cipher.substr",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 1,
                                    "column": 6
                                  },
                                  "end": {
                                    "row": 1,
                                    "column": 12
                                  },
                                  "text": "cipher"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 1,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 1,
                                    "column": 13
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "property_identifier",
                                  "start": {
                                    "row": 1,
                                    "column": 13
                                  },
                                  "end": {
                                    "row": 1,
                                    "column": 19
                                  },
                                  "text": "substr"
                                }
                              ]
                            },
                            {
                              "type": "arguments",
                              "start": {
                                "row": 1,
                                "column": 19
                              },
                              "end": {
                                "row": 1,
                                "column": 25
                              },
                              "text": "(0, 3)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 1,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 1,
                                    "column": 20
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "number",
                                  "start": {
                                    "row": 1,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 1,
                                    "column": 21
                                  },
                                  "text": "0"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 1,
                                    "column": 21
                                  },
                                  "end": {
                                    "row": 1,
                                    "column": 22
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "number",
                                  "start": {
                                    "row": 1,
                                    "column": 23
                                  },
                                  "end": {
                                    "row": 1,
                                    "column": 24
                                  },
                                  "text": "3"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 1,
                                    "column": 24
                                  },
                                  "end": {
                                    "row": 1,
                                    "column": 25
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "!==",
                          "start": {
                            "row": 1,
                            "column": 26
                          },
                          "end": {
                            "row": 1,
                            "column": 29
                          },
                          "text": "!=="
                        },
                        {
                          "type": "string",
                          "start": {
                            "row": 1,
                            "column": 30
                          },
                          "end": {
                            "row": 1,
                            "column": 35
                          },
                          "text": "'aes'",
                          "children": [
                            {
                              "type": "'",
                              "start": {
                                "row": 1,
                                "column": 30
                              },
                              "end": {
                                "row": 1,
                                "column": 31
                              },
                              "text": "'"
                            },
                            {
                              "type": "string_fragment",
                              "start": {
                                "row": 1,
                                "column": 31
                              },
                              "end": {
                                "row": 1,
                                "column": 34
                              },
                              "text": "aes"
                            },
                            {
                              "type": "'",
                              "start": {
                                "row": 1,
                                "column": 34
                              },
                              "end": {
                                "row": 1,
                                "column": 35
                              },
                              "text": "'"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start": {
                        "row": 1,
                        "column": 35
                      },
                      "end": {
                        "row": 1,
                        "column": 36
                      },
                      "text": ")"
                    }
                  ]
                },
                {
                  "type": "statement_block",
                  "start": {
                    "row": 1,
                    "column": 37
                  },
                  "end": {
                    "row": 3,
                    "column": 3
                  },
                  "text": "{\n    throw new Error('EAX mode supports only AES cipher');\n  }",
                  "children": [
                    {
                      "type": "{",
                      "start": {
                        "row": 1,
                        "column": 37
                      },
                      "end": {
                        "row": 1,
                        "column": 38
                      },
                      "text": "{"
                    },
                    {
                      "type": "throw_statement",
                      "start": {
                        "row": 2,
                        "column": 4
                      },
                      "end": {
                        "row": 2,
                        "column": 57
                      },
                      "text": "throw new Error('EAX mode supports only AES cipher');",
                      "children": [
                        {
                          "type": "throw",
                          "start": {
                            "row": 2,
                            "column": 4
                          },
                          "end": {
                            "row": 2,
                            "column": 9
                          },
                          "text": "throw"
                        },
                        {
                          "type": "new_expression",
                          "start": {
                            "row": 2,
                            "column": 10
                          },
                          "end": {
                            "row": 2,
                            "column": 56
                          },
                          "text": "new Error('EAX mode supports only AES cipher')",
                          "children": [
                            {
                              "type": "new",
                              "start": {
                                "row": 2,
                                "column": 10
                              },
                              "end": {
                                "row": 2,
                                "column": 13
                              },
                              "text": "new"
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 2,
                                "column": 14
                              },
                              "end": {
                                "row": 2,
                                "column": 19
                              },
                              "text": "Error"
                            },
                            {
                              "type": "arguments",
                              "start": {
                                "row": 2,
                                "column": 19
                              },
                              "end": {
                                "row": 2,
                                "column": 56
                              },
                              "text": "('EAX mode supports only AES cipher')",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 2,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 2,
                                    "column": 20
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "string",
                                  "start": {
                                    "row": 2,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 2,
                                    "column": 55
                                  },
                                  "text": "'EAX mode supports only AES cipher'",
                                  "children": [
                                    {
                                      "type": "'",
                                      "start": {
                                        "row": 2,
                                        "column": 20
                                      },
                                      "end": {
                                        "row": 2,
                                        "column": 21
                                      },
                                      "text": "'"
                                    },
                                    {
                                      "type": "string_fragment",
                                      "start": {
                                        "row": 2,
                                        "column": 21
                                      },
                                      "end": {
                                        "row": 2,
                                        "column": 54
                                      },
                                      "text": "EAX mode supports only AES cipher"
                                    },
                                    {
                                      "type": "'",
                                      "start": {
                                        "row": 2,
                                        "column": 54
                                      },
                                      "end": {
                                        "row": 2,
                                        "column": 55
                                      },
                                      "text": "'"
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 2,
                                    "column": 55
                                  },
                                  "end": {
                                    "row": 2,
                                    "column": 56
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start": {
                            "row": 2,
                            "column": 56
                          },
                          "end": {
                            "row": 2,
                            "column": 57
                          },
                          "text": ";"
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start": {
                        "row": 3,
                        "column": 2
                      },
                      "end": {
                        "row": 3,
                        "column": 3
                      },
                      "text": "}"
                    }
                  ]
                }
              ]
            },
            {
              "type": "lexical_declaration",
              "start": {
                "row": 5,
                "column": 2
              },
              "end": {
                "row": 11,
                "column": 5
              },
              "text": "const [\n    omac,\n    ctr\n  ] = await Promise.all([\n    OMAC(key),\n    CTR(key)\n  ]);",
              "children": [
                {
                  "type": "const",
                  "start": {
                    "row": 5,
                    "column": 2
                  },
                  "end": {
                    "row": 5,
                    "column": 7
                  },
                  "text": "const"
                },
                {
                  "type": "variable_declarator",
                  "start": {
                    "row": 5,
                    "column": 8
                  },
                  "end": {
                    "row": 11,
                    "column": 4
                  },
                  "text": "[\n    omac,\n    ctr\n  ] = await Promise.all([\n    OMAC(key),\n    CTR(key)\n  ])",
                  "children": [
                    {
                      "type": "array_pattern",
                      "start": {
                        "row": 5,
                        "column": 8
                      },
                      "end": {
                        "row": 8,
                        "column": 3
                      },
                      "text": "[\n    omac,\n    ctr\n  ]",
                      "children": [
                        {
                          "type": "[",
                          "start": {
                            "row": 5,
                            "column": 8
                          },
                          "end": {
                            "row": 5,
                            "column": 9
                          },
                          "text": "["
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 6,
                            "column": 4
                          },
                          "end": {
                            "row": 6,
                            "column": 8
                          },
                          "text": "omac"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 6,
                            "column": 8
                          },
                          "end": {
                            "row": 6,
                            "column": 9
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 7,
                            "column": 4
                          },
                          "end": {
                            "row": 7,
                            "column": 7
                          },
                          "text": "ctr"
                        },
                        {
                          "type": "]",
                          "start": {
                            "row": 8,
                            "column": 2
                          },
                          "end": {
                            "row": 8,
                            "column": 3
                          },
                          "text": "]"
                        }
                      ]
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 8,
                        "column": 4
                      },
                      "end": {
                        "row": 8,
                        "column": 5
                      },
                      "text": "="
                    },
                    {
                      "type": "await_expression",
                      "start": {
                        "row": 8,
                        "column": 6
                      },
                      "end": {
                        "row": 11,
                        "column": 4
                      },
                      "text": "await Promise.all([\n    OMAC(key),\n    CTR(key)\n  ])",
                      "children": [
                        {
                          "type": "await",
                          "start": {
                            "row": 8,
                            "column": 6
                          },
                          "end": {
                            "row": 8,
                            "column": 11
                          },
                          "text": "await"
                        },
                        {
                          "type": "call_expression",
                          "start": {
                            "row": 8,
                            "column": 12
                          },
                          "end": {
                            "row": 11,
                            "column": 4
                          },
                          "text": "Promise.all([\n    OMAC(key),\n    CTR(key)\n  ])",
                          "children": [
                            {
                              "type": "member_expression",
                              "start": {
                                "row": 8,
                                "column": 12
                              },
                              "end": {
                                "row": 8,
                                "column": 23
                              },
                              "text": "Promise.all",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 8,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 8,
                                    "column": 19
                                  },
                                  "text": "Promise"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 8,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 8,
                                    "column": 20
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "property_identifier",
                                  "start": {
                                    "row": 8,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 8,
                                    "column": 23
                                  },
                                  "text": "all"
                                }
                              ]
                            },
                            {
                              "type": "arguments",
                              "start": {
                                "row": 8,
                                "column": 23
                              },
                              "end": {
                                "row": 11,
                                "column": 4
                              },
                              "text": "([\n    OMAC(key),\n    CTR(key)\n  ])",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 8,
                                    "column": 23
                                  },
                                  "end": {
                                    "row": 8,
                                    "column": 24
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "array",
                                  "start": {
                                    "row": 8,
                                    "column": 24
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 3
                                  },
                                  "text": "[\n    OMAC(key),\n    CTR(key)\n  ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start": {
                                        "row": 8,
                                        "column": 24
                                      },
                                      "end": {
                                        "row": 8,
                                        "column": 25
                                      },
                                      "text": "["
                                    },
                                    {
                                      "type": "call_expression",
                                      "start": {
                                        "row": 9,
                                        "column": 4
                                      },
                                      "end": {
                                        "row": 9,
                                        "column": 13
                                      },
                                      "text": "OMAC(key)",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 9,
                                            "column": 4
                                          },
                                          "end": {
                                            "row": 9,
                                            "column": 8
                                          },
                                          "text": "OMAC"
                                        },
                                        {
                                          "type": "arguments",
                                          "start": {
                                            "row": 9,
                                            "column": 8
                                          },
                                          "end": {
                                            "row": 9,
                                            "column": 13
                                          },
                                          "text": "(key)",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 9,
                                                "column": 8
                                              },
                                              "end": {
                                                "row": 9,
                                                "column": 9
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 9,
                                                "column": 9
                                              },
                                              "end": {
                                                "row": 9,
                                                "column": 12
                                              },
                                              "text": "key"
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 9,
                                                "column": 12
                                              },
                                              "end": {
                                                "row": 9,
                                                "column": 13
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 9,
                                        "column": 13
                                      },
                                      "end": {
                                        "row": 9,
                                        "column": 14
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "call_expression",
                                      "start": {
                                        "row": 10,
                                        "column": 4
                                      },
                                      "end": {
                                        "row": 10,
                                        "column": 12
                                      },
                                      "text": "CTR(key)",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 10,
                                            "column": 4
                                          },
                                          "end": {
                                            "row": 10,
                                            "column": 7
                                          },
                                          "text": "CTR"
                                        },
                                        {
                                          "type": "arguments",
                                          "start": {
                                            "row": 10,
                                            "column": 7
                                          },
                                          "end": {
                                            "row": 10,
                                            "column": 12
                                          },
                                          "text": "(key)",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 10,
                                                "column": 7
                                              },
                                              "end": {
                                                "row": 10,
                                                "column": 8
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 10,
                                                "column": 8
                                              },
                                              "end": {
                                                "row": 10,
                                                "column": 11
                                              },
                                              "text": "key"
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 10,
                                                "column": 11
                                              },
                                              "end": {
                                                "row": 10,
                                                "column": 12
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "]",
                                      "start": {
                                        "row": 11,
                                        "column": 2
                                      },
                                      "end": {
                                        "row": 11,
                                        "column": 3
                                      },
                                      "text": "]"
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 11,
                                    "column": 3
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 4
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 11,
                    "column": 4
                  },
                  "end": {
                    "row": 11,
                    "column": 5
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 13,
                "column": 2
              },
              "end": {
                "row": 66,
                "column": 4
              },
              "text": "return {\n    /**\n     * Encrypt plaintext input.\n     * @param  {Uint8Array} plaintext   The cleartext input to be encrypted\n     * @param  {Uint8Array} nonce       The nonce (16 bytes)\n     * @param  {Uint8Array} adata       Associated data to sign\n     * @returns {Promise<Uint8Array>}    The ciphertext output\n     */\n    encrypt: async function(plaintext, nonce, adata) {\n      const [\n        omacNonce,\n        omacAdata\n      ] = await Promise.all([\n        omac(zero, nonce),\n        omac(one, adata)\n      ]);\n      const ciphered = await ctr(plaintext, omacNonce);\n      const omacCiphered = await omac(two, ciphered);\n      const tag = omacCiphered; // Assumes that omac(*).length === tagLength.\n      for (let i = 0; i < tagLength; i++) {\n        tag[i] ^= omacAdata[i] ^ omacNonce[i];\n      }\n      return util.concatUint8Array([ciphered, tag]);\n    },\n\n    /**\n     * Decrypt ciphertext input.\n     * @param  {Uint8Array} ciphertext   The ciphertext input to be decrypted\n     * @param  {Uint8Array} nonce        The nonce (16 bytes)\n     * @param  {Uint8Array} adata        Associated data to verify\n     * @returns {Promise<Uint8Array>}     The plaintext output\n     */\n    decrypt: async function(ciphertext, nonce, adata) {\n      if (ciphertext.length < tagLength) throw new Error('Invalid EAX ciphertext');\n      const ciphered = ciphertext.subarray(0, -tagLength);\n      const ctTag = ciphertext.subarray(-tagLength);\n      const [\n        omacNonce,\n        omacAdata,\n        omacCiphered\n      ] = await Promise.all([\n        omac(zero, nonce),\n        omac(one, adata),\n        omac(two, ciphered)\n      ]);\n      const tag = omacCiphered; // Assumes that omac(*).length === tagLength.\n      for (let i = 0; i < tagLength; i++) {\n        tag[i] ^= omacAdata[i] ^ omacNonce[i];\n      }\n      if (!util.equalsUint8Array(ctTag, tag)) throw new Error('Authentication tag mismatch');\n      const plaintext = await ctr(ciphered, omacNonce);\n      return plaintext;\n    }\n  };",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 13,
                    "column": 2
                  },
                  "end": {
                    "row": 13,
                    "column": 8
                  },
                  "text": "return"
                },
                {
                  "type": "object",
                  "start": {
                    "row": 13,
                    "column": 9
                  },
                  "end": {
                    "row": 66,
                    "column": 3
                  },
                  "text": "{\n    /**\n     * Encrypt plaintext input.\n     * @param  {Uint8Array} plaintext   The cleartext input to be encrypted\n     * @param  {Uint8Array} nonce       The nonce (16 bytes)\n     * @param  {Uint8Array} adata       Associated data to sign\n     * @returns {Promise<Uint8Array>}    The ciphertext output\n     */\n    encrypt: async function(plaintext, nonce, adata) {\n      const [\n        omacNonce,\n        omacAdata\n      ] = await Promise.all([\n        omac(zero, nonce),\n        omac(one, adata)\n      ]);\n      const ciphered = await ctr(plaintext, omacNonce);\n      const omacCiphered = await omac(two, ciphered);\n      const tag = omacCiphered; // Assumes that omac(*).length === tagLength.\n      for (let i = 0; i < tagLength; i++) {\n        tag[i] ^= omacAdata[i] ^ omacNonce[i];\n      }\n      return util.concatUint8Array([ciphered, tag]);\n    },\n\n    /**\n     * Decrypt ciphertext input.\n     * @param  {Uint8Array} ciphertext   The ciphertext input to be decrypted\n     * @param  {Uint8Array} nonce        The nonce (16 bytes)\n     * @param  {Uint8Array} adata        Associated data to verify\n     * @returns {Promise<Uint8Array>}     The plaintext output\n     */\n    decrypt: async function(ciphertext, nonce, adata) {\n      if (ciphertext.length < tagLength) throw new Error('Invalid EAX ciphertext');\n      const ciphered = ciphertext.subarray(0, -tagLength);\n      const ctTag = ciphertext.subarray(-tagLength);\n      const [\n        omacNonce,\n        omacAdata,\n        omacCiphered\n      ] = await Promise.all([\n        omac(zero, nonce),\n        omac(one, adata),\n        omac(two, ciphered)\n      ]);\n      const tag = omacCiphered; // Assumes that omac(*).length === tagLength.\n      for (let i = 0; i < tagLength; i++) {\n        tag[i] ^= omacAdata[i] ^ omacNonce[i];\n      }\n      if (!util.equalsUint8Array(ctTag, tag)) throw new Error('Authentication tag mismatch');\n      const plaintext = await ctr(ciphered, omacNonce);\n      return plaintext;\n    }\n  }",
                  "children": [
                    {
                      "type": "{",
                      "start": {
                        "row": 13,
                        "column": 9
                      },
                      "end": {
                        "row": 13,
                        "column": 10
                      },
                      "text": "{"
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 14,
                        "column": 4
                      },
                      "end": {
                        "row": 20,
                        "column": 7
                      },
                      "text": "/**\n     * Encrypt plaintext input.\n     * @param  {Uint8Array} plaintext   The cleartext input to be encrypted\n     * @param  {Uint8Array} nonce       The nonce (16 bytes)\n     * @param  {Uint8Array} adata       Associated data to sign\n     * @returns {Promise<Uint8Array>}    The ciphertext output\n     */"
                    },
                    {
                      "type": "pair",
                      "start": {
                        "row": 21,
                        "column": 4
                      },
                      "end": {
                        "row": 36,
                        "column": 5
                      },
                      "text": "encrypt: async function(plaintext, nonce, adata) {\n      const [\n        omacNonce,\n        omacAdata\n      ] = await Promise.all([\n        omac(zero, nonce),\n        omac(one, adata)\n      ]);\n      const ciphered = await ctr(plaintext, omacNonce);\n      const omacCiphered = await omac(two, ciphered);\n      const tag = omacCiphered; // Assumes that omac(*).length === tagLength.\n      for (let i = 0; i < tagLength; i++) {\n        tag[i] ^= omacAdata[i] ^ omacNonce[i];\n      }\n      return util.concatUint8Array([ciphered, tag]);\n    }",
                      "children": [
                        {
                          "type": "property_identifier",
                          "start": {
                            "row": 21,
                            "column": 4
                          },
                          "end": {
                            "row": 21,
                            "column": 11
                          },
                          "text": "encrypt"
                        },
                        {
                          "type": ":",
                          "start": {
                            "row": 21,
                            "column": 11
                          },
                          "end": {
                            "row": 21,
                            "column": 12
                          },
                          "text": ":"
                        },
                        {
                          "type": "function",
                          "start": {
                            "row": 21,
                            "column": 13
                          },
                          "end": {
                            "row": 36,
                            "column": 5
                          },
                          "text": "async function(plaintext, nonce, adata) {\n      const [\n        omacNonce,\n        omacAdata\n      ] = await Promise.all([\n        omac(zero, nonce),\n        omac(one, adata)\n      ]);\n      const ciphered = await ctr(plaintext, omacNonce);\n      const omacCiphered = await omac(two, ciphered);\n      const tag = omacCiphered; // Assumes that omac(*).length === tagLength.\n      for (let i = 0; i < tagLength; i++) {\n        tag[i] ^= omacAdata[i] ^ omacNonce[i];\n      }\n      return util.concatUint8Array([ciphered, tag]);\n    }",
                          "children": [
                            {
                              "type": "async",
                              "start": {
                                "row": 21,
                                "column": 13
                              },
                              "end": {
                                "row": 21,
                                "column": 18
                              },
                              "text": "async"
                            },
                            {
                              "type": "function",
                              "start": {
                                "row": 21,
                                "column": 19
                              },
                              "end": {
                                "row": 21,
                                "column": 27
                              },
                              "text": "function"
                            },
                            {
                              "type": "formal_parameters",
                              "start": {
                                "row": 21,
                                "column": 27
                              },
                              "end": {
                                "row": 21,
                                "column": 52
                              },
                              "text": "(plaintext, nonce, adata)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 21,
                                    "column": 27
                                  },
                                  "end": {
                                    "row": 21,
                                    "column": 28
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 21,
                                    "column": 28
                                  },
                                  "end": {
                                    "row": 21,
                                    "column": 37
                                  },
                                  "text": "plaintext"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 21,
                                    "column": 37
                                  },
                                  "end": {
                                    "row": 21,
                                    "column": 38
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 21,
                                    "column": 39
                                  },
                                  "end": {
                                    "row": 21,
                                    "column": 44
                                  },
                                  "text": "nonce"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 21,
                                    "column": 44
                                  },
                                  "end": {
                                    "row": 21,
                                    "column": 45
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 21,
                                    "column": 46
                                  },
                                  "end": {
                                    "row": 21,
                                    "column": 51
                                  },
                                  "text": "adata"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 21,
                                    "column": 51
                                  },
                                  "end": {
                                    "row": 21,
                                    "column": 52
                                  },
                                  "text": ")"
                                }
                              ]
                            },
                            {
                              "type": "statement_block",
                              "start": {
                                "row": 21,
                                "column": 53
                              },
                              "end": {
                                "row": 36,
                                "column": 5
                              },
                              "text": "{\n      const [\n        omacNonce,\n        omacAdata\n      ] = await Promise.all([\n        omac(zero, nonce),\n        omac(one, adata)\n      ]);\n      const ciphered = await ctr(plaintext, omacNonce);\n      const omacCiphered = await omac(two, ciphered);\n      const tag = omacCiphered; // Assumes that omac(*).length === tagLength.\n      for (let i = 0; i < tagLength; i++) {\n        tag[i] ^= omacAdata[i] ^ omacNonce[i];\n      }\n      return util.concatUint8Array([ciphered, tag]);\n    }",
                              "children": [
                                {
                                  "type": "{",
                                  "start": {
                                    "row": 21,
                                    "column": 53
                                  },
                                  "end": {
                                    "row": 21,
                                    "column": 54
                                  },
                                  "text": "{"
                                },
                                {
                                  "type": "lexical_declaration",
                                  "start": {
                                    "row": 22,
                                    "column": 6
                                  },
                                  "end": {
                                    "row": 28,
                                    "column": 9
                                  },
                                  "text": "const [\n        omacNonce,\n        omacAdata\n      ] = await Promise.all([\n        omac(zero, nonce),\n        omac(one, adata)\n      ]);",
                                  "children": [
                                    {
                                      "type": "const",
                                      "start": {
                                        "row": 22,
                                        "column": 6
                                      },
                                      "end": {
                                        "row": 22,
                                        "column": 11
                                      },
                                      "text": "const"
                                    },
                                    {
                                      "type": "variable_declarator",
                                      "start": {
                                        "row": 22,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 28,
                                        "column": 8
                                      },
                                      "text": "[\n        omacNonce,\n        omacAdata\n      ] = await Promise.all([\n        omac(zero, nonce),\n        omac(one, adata)\n      ])",
                                      "children": [
                                        {
                                          "type": "array_pattern",
                                          "start": {
                                            "row": 22,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 25,
                                            "column": 7
                                          },
                                          "text": "[\n        omacNonce,\n        omacAdata\n      ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start": {
                                                "row": 22,
                                                "column": 12
                                              },
                                              "end": {
                                                "row": 22,
                                                "column": 13
                                              },
                                              "text": "["
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 23,
                                                "column": 8
                                              },
                                              "end": {
                                                "row": 23,
                                                "column": 17
                                              },
                                              "text": "omacNonce"
                                            },
                                            {
                                              "type": ",",
                                              "start": {
                                                "row": 23,
                                                "column": 17
                                              },
                                              "end": {
                                                "row": 23,
                                                "column": 18
                                              },
                                              "text": ","
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 24,
                                                "column": 8
                                              },
                                              "end": {
                                                "row": 24,
                                                "column": 17
                                              },
                                              "text": "omacAdata"
                                            },
                                            {
                                              "type": "]",
                                              "start": {
                                                "row": 25,
                                                "column": 6
                                              },
                                              "end": {
                                                "row": 25,
                                                "column": 7
                                              },
                                              "text": "]"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "=",
                                          "start": {
                                            "row": 25,
                                            "column": 8
                                          },
                                          "end": {
                                            "row": 25,
                                            "column": 9
                                          },
                                          "text": "="
                                        },
                                        {
                                          "type": "await_expression",
                                          "start": {
                                            "row": 25,
                                            "column": 10
                                          },
                                          "end": {
                                            "row": 28,
                                            "column": 8
                                          },
                                          "text": "await Promise.all([\n        omac(zero, nonce),\n        omac(one, adata)\n      ])",
                                          "children": [
                                            {
                                              "type": "await",
                                              "start": {
                                                "row": 25,
                                                "column": 10
                                              },
                                              "end": {
                                                "row": 25,
                                                "column": 15
                                              },
                                              "text": "await"
                                            },
                                            {
                                              "type": "call_expression",
                                              "start": {
                                                "row": 25,
                                                "column": 16
                                              },
                                              "end": {
                                                "row": 28,
                                                "column": 8
                                              },
                                              "text": "Promise.all([\n        omac(zero, nonce),\n        omac(one, adata)\n      ])",
                                              "children": [
                                                {
                                                  "type": "member_expression",
                                                  "start": {
                                                    "row": 25,
                                                    "column": 16
                                                  },
                                                  "end": {
                                                    "row": 25,
                                                    "column": 27
                                                  },
                                                  "text": "Promise.all",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 25,
                                                        "column": 16
                                                      },
                                                      "end": {
                                                        "row": 25,
                                                        "column": 23
                                                      },
                                                      "text": "Promise"
                                                    },
                                                    {
                                                      "type": ".",
                                                      "start": {
                                                        "row": 25,
                                                        "column": 23
                                                      },
                                                      "end": {
                                                        "row": 25,
                                                        "column": 24
                                                      },
                                                      "text": "."
                                                    },
                                                    {
                                                      "type": "property_identifier",
                                                      "start": {
                                                        "row": 25,
                                                        "column": 24
                                                      },
                                                      "end": {
                                                        "row": 25,
                                                        "column": 27
                                                      },
                                                      "text": "all"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "arguments",
                                                  "start": {
                                                    "row": 25,
                                                    "column": 27
                                                  },
                                                  "end": {
                                                    "row": 28,
                                                    "column": 8
                                                  },
                                                  "text": "([\n        omac(zero, nonce),\n        omac(one, adata)\n      ])",
                                                  "children": [
                                                    {
                                                      "type": "(",
                                                      "start": {
                                                        "row": 25,
                                                        "column": 27
                                                      },
                                                      "end": {
                                                        "row": 25,
                                                        "column": 28
                                                      },
                                                      "text": "("
                                                    },
                                                    {
                                                      "type": "array",
                                                      "start": {
                                                        "row": 25,
                                                        "column": 28
                                                      },
                                                      "end": {
                                                        "row": 28,
                                                        "column": 7
                                                      },
                                                      "text": "[\n        omac(zero, nonce),\n        omac(one, adata)\n      ]",
                                                      "children": [
                                                        {
                                                          "type": "[",
                                                          "start": {
                                                            "row": 25,
                                                            "column": 28
                                                          },
                                                          "end": {
                                                            "row": 25,
                                                            "column": 29
                                                          },
                                                          "text": "["
                                                        },
                                                        {
                                                          "type": "call_expression",
                                                          "start": {
                                                            "row": 26,
                                                            "column": 8
                                                          },
                                                          "end": {
                                                            "row": 26,
                                                            "column": 25
                                                          },
                                                          "text": "omac(zero, nonce)",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start": {
                                                                "row": 26,
                                                                "column": 8
                                                              },
                                                              "end": {
                                                                "row": 26,
                                                                "column": 12
                                                              },
                                                              "text": "omac"
                                                            },
                                                            {
                                                              "type": "arguments",
                                                              "start": {
                                                                "row": 26,
                                                                "column": 12
                                                              },
                                                              "end": {
                                                                "row": 26,
                                                                "column": 25
                                                              },
                                                              "text": "(zero, nonce)",
                                                              "children": [
                                                                {
                                                                  "type": "(",
                                                                  "start": {
                                                                    "row": 26,
                                                                    "column": 12
                                                                  },
                                                                  "end": {
                                                                    "row": 26,
                                                                    "column": 13
                                                                  },
                                                                  "text": "("
                                                                },
                                                                {
                                                                  "type": "identifier",
                                                                  "start": {
                                                                    "row": 26,
                                                                    "column": 13
                                                                  },
                                                                  "end": {
                                                                    "row": 26,
                                                                    "column": 17
                                                                  },
                                                                  "text": "zero"
                                                                },
                                                                {
                                                                  "type": ",",
                                                                  "start": {
                                                                    "row": 26,
                                                                    "column": 17
                                                                  },
                                                                  "end": {
                                                                    "row": 26,
                                                                    "column": 18
                                                                  },
                                                                  "text": ","
                                                                },
                                                                {
                                                                  "type": "identifier",
                                                                  "start": {
                                                                    "row": 26,
                                                                    "column": 19
                                                                  },
                                                                  "end": {
                                                                    "row": 26,
                                                                    "column": 24
                                                                  },
                                                                  "text": "nonce"
                                                                },
                                                                {
                                                                  "type": ")",
                                                                  "start": {
                                                                    "row": 26,
                                                                    "column": 24
                                                                  },
                                                                  "end": {
                                                                    "row": 26,
                                                                    "column": 25
                                                                  },
                                                                  "text": ")"
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": ",",
                                                          "start": {
                                                            "row": 26,
                                                            "column": 25
                                                          },
                                                          "end": {
                                                            "row": 26,
                                                            "column": 26
                                                          },
                                                          "text": ","
                                                        },
                                                        {
                                                          "type": "call_expression",
                                                          "start": {
                                                            "row": 27,
                                                            "column": 8
                                                          },
                                                          "end": {
                                                            "row": 27,
                                                            "column": 24
                                                          },
                                                          "text": "omac(one, adata)",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start": {
                                                                "row": 27,
                                                                "column": 8
                                                              },
                                                              "end": {
                                                                "row": 27,
                                                                "column": 12
                                                              },
                                                              "text": "omac"
                                                            },
                                                            {
                                                              "type": "arguments",
                                                              "start": {
                                                                "row": 27,
                                                                "column": 12
                                                              },
                                                              "end": {
                                                                "row": 27,
                                                                "column": 24
                                                              },
                                                              "text": "(one, adata)",
                                                              "children": [
                                                                {
                                                                  "type": "(",
                                                                  "start": {
                                                                    "row": 27,
                                                                    "column": 12
                                                                  },
                                                                  "end": {
                                                                    "row": 27,
                                                                    "column": 13
                                                                  },
                                                                  "text": "("
                                                                },
                                                                {
                                                                  "type": "identifier",
                                                                  "start": {
                                                                    "row": 27,
                                                                    "column": 13
                                                                  },
                                                                  "end": {
                                                                    "row": 27,
                                                                    "column": 16
                                                                  },
                                                                  "text": "one"
                                                                },
                                                                {
                                                                  "type": ",",
                                                                  "start": {
                                                                    "row": 27,
                                                                    "column": 16
                                                                  },
                                                                  "end": {
                                                                    "row": 27,
                                                                    "column": 17
                                                                  },
                                                                  "text": ","
                                                                },
                                                                {
                                                                  "type": "identifier",
                                                                  "start": {
                                                                    "row": 27,
                                                                    "column": 18
                                                                  },
                                                                  "end": {
                                                                    "row": 27,
                                                                    "column": 23
                                                                  },
                                                                  "text": "adata"
                                                                },
                                                                {
                                                                  "type": ")",
                                                                  "start": {
                                                                    "row": 27,
                                                                    "column": 23
                                                                  },
                                                                  "end": {
                                                                    "row": 27,
                                                                    "column": 24
                                                                  },
                                                                  "text": ")"
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "]",
                                                          "start": {
                                                            "row": 28,
                                                            "column": 6
                                                          },
                                                          "end": {
                                                            "row": 28,
                                                            "column": 7
                                                          },
                                                          "text": "]"
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ")",
                                                      "start": {
                                                        "row": 28,
                                                        "column": 7
                                                      },
                                                      "end": {
                                                        "row": 28,
                                                        "column": 8
                                                      },
                                                      "text": ")"
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start": {
                                        "row": 28,
                                        "column": 8
                                      },
                                      "end": {
                                        "row": 28,
                                        "column": 9
                                      },
                                      "text": ";"
                                    }
                                  ]
                                },
                                {
                                  "type": "lexical_declaration",
                                  "start": {
                                    "row": 29,
                                    "column": 6
                                  },
                                  "end": {
                                    "row": 29,
                                    "column": 55
                                  },
                                  "text": "const ciphered = await ctr(plaintext, omacNonce);",
                                  "children": [
                                    {
                                      "type": "const",
                                      "start": {
                                        "row": 29,
                                        "column": 6
                                      },
                                      "end": {
                                        "row": 29,
                                        "column": 11
                                      },
                                      "text": "const"
                                    },
                                    {
                                      "type": "variable_declarator",
                                      "start": {
                                        "row": 29,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 29,
                                        "column": 54
                                      },
                                      "text": "ciphered = await ctr(plaintext, omacNonce)",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 29,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 29,
                                            "column": 20
                                          },
                                          "text": "ciphered"
                                        },
                                        {
                                          "type": "=",
                                          "start": {
                                            "row": 29,
                                            "column": 21
                                          },
                                          "end": {
                                            "row": 29,
                                            "column": 22
                                          },
                                          "text": "="
                                        },
                                        {
                                          "type": "await_expression",
                                          "start": {
                                            "row": 29,
                                            "column": 23
                                          },
                                          "end": {
                                            "row": 29,
                                            "column": 54
                                          },
                                          "text": "await ctr(plaintext, omacNonce)",
                                          "children": [
                                            {
                                              "type": "await",
                                              "start": {
                                                "row": 29,
                                                "column": 23
                                              },
                                              "end": {
                                                "row": 29,
                                                "column": 28
                                              },
                                              "text": "await"
                                            },
                                            {
                                              "type": "call_expression",
                                              "start": {
                                                "row": 29,
                                                "column": 29
                                              },
                                              "end": {
                                                "row": 29,
                                                "column": 54
                                              },
                                              "text": "ctr(plaintext, omacNonce)",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 29,
                                                    "column": 29
                                                  },
                                                  "end": {
                                                    "row": 29,
                                                    "column": 32
                                                  },
                                                  "text": "ctr"
                                                },
                                                {
                                                  "type": "arguments",
                                                  "start": {
                                                    "row": 29,
                                                    "column": 32
                                                  },
                                                  "end": {
                                                    "row": 29,
                                                    "column": 54
                                                  },
                                                  "text": "(plaintext, omacNonce)",
                                                  "children": [
                                                    {
                                                      "type": "(",
                                                      "start": {
                                                        "row": 29,
                                                        "column": 32
                                                      },
                                                      "end": {
                                                        "row": 29,
                                                        "column": 33
                                                      },
                                                      "text": "("
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 29,
                                                        "column": 33
                                                      },
                                                      "end": {
                                                        "row": 29,
                                                        "column": 42
                                                      },
                                                      "text": "plaintext"
                                                    },
                                                    {
                                                      "type": ",",
                                                      "start": {
                                                        "row": 29,
                                                        "column": 42
                                                      },
                                                      "end": {
                                                        "row": 29,
                                                        "column": 43
                                                      },
                                                      "text": ","
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 29,
                                                        "column": 44
                                                      },
                                                      "end": {
                                                        "row": 29,
                                                        "column": 53
                                                      },
                                                      "text": "omacNonce"
                                                    },
                                                    {
                                                      "type": ")",
                                                      "start": {
                                                        "row": 29,
                                                        "column": 53
                                                      },
                                                      "end": {
                                                        "row": 29,
                                                        "column": 54
                                                      },
                                                      "text": ")"
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start": {
                                        "row": 29,
                                        "column": 54
                                      },
                                      "end": {
                                        "row": 29,
                                        "column": 55
                                      },
                                      "text": ";"
                                    }
                                  ]
                                },
                                {
                                  "type": "lexical_declaration",
                                  "start": {
                                    "row": 30,
                                    "column": 6
                                  },
                                  "end": {
                                    "row": 30,
                                    "column": 53
                                  },
                                  "text": "const omacCiphered = await omac(two, ciphered);",
                                  "children": [
                                    {
                                      "type": "const",
                                      "start": {
                                        "row": 30,
                                        "column": 6
                                      },
                                      "end": {
                                        "row": 30,
                                        "column": 11
                                      },
                                      "text": "const"
                                    },
                                    {
                                      "type": "variable_declarator",
                                      "start": {
                                        "row": 30,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 30,
                                        "column": 52
                                      },
                                      "text": "omacCiphered = await omac(two, ciphered)",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 30,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 30,
                                            "column": 24
                                          },
                                          "text": "omacCiphered"
                                        },
                                        {
                                          "type": "=",
                                          "start": {
                                            "row": 30,
                                            "column": 25
                                          },
                                          "end": {
                                            "row": 30,
                                            "column": 26
                                          },
                                          "text": "="
                                        },
                                        {
                                          "type": "await_expression",
                                          "start": {
                                            "row": 30,
                                            "column": 27
                                          },
                                          "end": {
                                            "row": 30,
                                            "column": 52
                                          },
                                          "text": "await omac(two, ciphered)",
                                          "children": [
                                            {
                                              "type": "await",
                                              "start": {
                                                "row": 30,
                                                "column": 27
                                              },
                                              "end": {
                                                "row": 30,
                                                "column": 32
                                              },
                                              "text": "await"
                                            },
                                            {
                                              "type": "call_expression",
                                              "start": {
                                                "row": 30,
                                                "column": 33
                                              },
                                              "end": {
                                                "row": 30,
                                                "column": 52
                                              },
                                              "text": "omac(two, ciphered)",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 30,
                                                    "column": 33
                                                  },
                                                  "end": {
                                                    "row": 30,
                                                    "column": 37
                                                  },
                                                  "text": "omac"
                                                },
                                                {
                                                  "type": "arguments",
                                                  "start": {
                                                    "row": 30,
                                                    "column": 37
                                                  },
                                                  "end": {
                                                    "row": 30,
                                                    "column": 52
                                                  },
                                                  "text": "(two, ciphered)",
                                                  "children": [
                                                    {
                                                      "type": "(",
                                                      "start": {
                                                        "row": 30,
                                                        "column": 37
                                                      },
                                                      "end": {
                                                        "row": 30,
                                                        "column": 38
                                                      },
                                                      "text": "("
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 30,
                                                        "column": 38
                                                      },
                                                      "end": {
                                                        "row": 30,
                                                        "column": 41
                                                      },
                                                      "text": "two"
                                                    },
                                                    {
                                                      "type": ",",
                                                      "start": {
                                                        "row": 30,
                                                        "column": 41
                                                      },
                                                      "end": {
                                                        "row": 30,
                                                        "column": 42
                                                      },
                                                      "text": ","
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 30,
                                                        "column": 43
                                                      },
                                                      "end": {
                                                        "row": 30,
                                                        "column": 51
                                                      },
                                                      "text": "ciphered"
                                                    },
                                                    {
                                                      "type": ")",
                                                      "start": {
                                                        "row": 30,
                                                        "column": 51
                                                      },
                                                      "end": {
                                                        "row": 30,
                                                        "column": 52
                                                      },
                                                      "text": ")"
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start": {
                                        "row": 30,
                                        "column": 52
                                      },
                                      "end": {
                                        "row": 30,
                                        "column": 53
                                      },
                                      "text": ";"
                                    }
                                  ]
                                },
                                {
                                  "type": "lexical_declaration",
                                  "start": {
                                    "row": 31,
                                    "column": 6
                                  },
                                  "end": {
                                    "row": 31,
                                    "column": 31
                                  },
                                  "text": "const tag = omacCiphered;",
                                  "children": [
                                    {
                                      "type": "const",
                                      "start": {
                                        "row": 31,
                                        "column": 6
                                      },
                                      "end": {
                                        "row": 31,
                                        "column": 11
                                      },
                                      "text": "const"
                                    },
                                    {
                                      "type": "variable_declarator",
                                      "start": {
                                        "row": 31,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 31,
                                        "column": 30
                                      },
                                      "text": "tag = omacCiphered",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 31,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 31,
                                            "column": 15
                                          },
                                          "text": "tag"
                                        },
                                        {
                                          "type": "=",
                                          "start": {
                                            "row": 31,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 31,
                                            "column": 17
                                          },
                                          "text": "="
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 31,
                                            "column": 18
                                          },
                                          "end": {
                                            "row": 31,
                                            "column": 30
                                          },
                                          "text": "omacCiphered"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start": {
                                        "row": 31,
                                        "column": 30
                                      },
                                      "end": {
                                        "row": 31,
                                        "column": 31
                                      },
                                      "text": ";"
                                    }
                                  ]
                                },
                                {
                                  "type": "comment",
                                  "start": {
                                    "row": 31,
                                    "column": 32
                                  },
                                  "end": {
                                    "row": 31,
                                    "column": 77
                                  },
                                  "text": "// Assumes that omac(*).length === tagLength."
                                },
                                {
                                  "type": "for_statement",
                                  "start": {
                                    "row": 32,
                                    "column": 6
                                  },
                                  "end": {
                                    "row": 34,
                                    "column": 7
                                  },
                                  "text": "for (let i = 0; i < tagLength; i++) {\n        tag[i] ^= omacAdata[i] ^ omacNonce[i];\n      }",
                                  "children": [
                                    {
                                      "type": "for",
                                      "start": {
                                        "row": 32,
                                        "column": 6
                                      },
                                      "end": {
                                        "row": 32,
                                        "column": 9
                                      },
                                      "text": "for"
                                    },
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 32,
                                        "column": 10
                                      },
                                      "end": {
                                        "row": 32,
                                        "column": 11
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "lexical_declaration",
                                      "start": {
                                        "row": 32,
                                        "column": 11
                                      },
                                      "end": {
                                        "row": 32,
                                        "column": 21
                                      },
                                      "text": "let i = 0;",
                                      "children": [
                                        {
                                          "type": "let",
                                          "start": {
                                            "row": 32,
                                            "column": 11
                                          },
                                          "end": {
                                            "row": 32,
                                            "column": 14
                                          },
                                          "text": "let"
                                        },
                                        {
                                          "type": "variable_declarator",
                                          "start": {
                                            "row": 32,
                                            "column": 15
                                          },
                                          "end": {
                                            "row": 32,
                                            "column": 20
                                          },
                                          "text": "i = 0",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 32,
                                                "column": 15
                                              },
                                              "end": {
                                                "row": 32,
                                                "column": 16
                                              },
                                              "text": "i"
                                            },
                                            {
                                              "type": "=",
                                              "start": {
                                                "row": 32,
                                                "column": 17
                                              },
                                              "end": {
                                                "row": 32,
                                                "column": 18
                                              },
                                              "text": "="
                                            },
                                            {
                                              "type": "number",
                                              "start": {
                                                "row": 32,
                                                "column": 19
                                              },
                                              "end": {
                                                "row": 32,
                                                "column": 20
                                              },
                                              "text": "0"
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start": {
                                            "row": 32,
                                            "column": 20
                                          },
                                          "end": {
                                            "row": 32,
                                            "column": 21
                                          },
                                          "text": ";"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start": {
                                        "row": 32,
                                        "column": 22
                                      },
                                      "end": {
                                        "row": 32,
                                        "column": 36
                                      },
                                      "text": "i < tagLength;",
                                      "children": [
                                        {
                                          "type": "binary_expression",
                                          "start": {
                                            "row": 32,
                                            "column": 22
                                          },
                                          "end": {
                                            "row": 32,
                                            "column": 35
                                          },
                                          "text": "i < tagLength",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 32,
                                                "column": 22
                                              },
                                              "end": {
                                                "row": 32,
                                                "column": 23
                                              },
                                              "text": "i"
                                            },
                                            {
                                              "type": "<",
                                              "start": {
                                                "row": 32,
                                                "column": 24
                                              },
                                              "end": {
                                                "row": 32,
                                                "column": 25
                                              },
                                              "text": "<"
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 32,
                                                "column": 26
                                              },
                                              "end": {
                                                "row": 32,
                                                "column": 35
                                              },
                                              "text": "tagLength"
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start": {
                                            "row": 32,
                                            "column": 35
                                          },
                                          "end": {
                                            "row": 32,
                                            "column": 36
                                          },
                                          "text": ";"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "update_expression",
                                      "start": {
                                        "row": 32,
                                        "column": 37
                                      },
                                      "end": {
                                        "row": 32,
                                        "column": 40
                                      },
                                      "text": "i++",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 32,
                                            "column": 37
                                          },
                                          "end": {
                                            "row": 32,
                                            "column": 38
                                          },
                                          "text": "i"
                                        },
                                        {
                                          "type": "++",
                                          "start": {
                                            "row": 32,
                                            "column": 38
                                          },
                                          "end": {
                                            "row": 32,
                                            "column": 40
                                          },
                                          "text": "++"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 32,
                                        "column": 40
                                      },
                                      "end": {
                                        "row": 32,
                                        "column": 41
                                      },
                                      "text": ")"
                                    },
                                    {
                                      "type": "statement_block",
                                      "start": {
                                        "row": 32,
                                        "column": 42
                                      },
                                      "end": {
                                        "row": 34,
                                        "column": 7
                                      },
                                      "text": "{\n        tag[i] ^= omacAdata[i] ^ omacNonce[i];\n      }",
                                      "children": [
                                        {
                                          "type": "{",
                                          "start": {
                                            "row": 32,
                                            "column": 42
                                          },
                                          "end": {
                                            "row": 32,
                                            "column": 43
                                          },
                                          "text": "{"
                                        },
                                        {
                                          "type": "expression_statement",
                                          "start": {
                                            "row": 33,
                                            "column": 8
                                          },
                                          "end": {
                                            "row": 33,
                                            "column": 46
                                          },
                                          "text": "tag[i] ^= omacAdata[i] ^ omacNonce[i];",
                                          "children": [
                                            {
                                              "type": "augmented_assignment_expression",
                                              "start": {
                                                "row": 33,
                                                "column": 8
                                              },
                                              "end": {
                                                "row": 33,
                                                "column": 45
                                              },
                                              "text": "tag[i] ^= omacAdata[i] ^ omacNonce[i]",
                                              "children": [
                                                {
                                                  "type": "subscript_expression",
                                                  "start": {
                                                    "row": 33,
                                                    "column": 8
                                                  },
                                                  "end": {
                                                    "row": 33,
                                                    "column": 14
                                                  },
                                                  "text": "tag[i]",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 33,
                                                        "column": 8
                                                      },
                                                      "end": {
                                                        "row": 33,
                                                        "column": 11
                                                      },
                                                      "text": "tag"
                                                    },
                                                    {
                                                      "type": "[",
                                                      "start": {
                                                        "row": 33,
                                                        "column": 11
                                                      },
                                                      "end": {
                                                        "row": 33,
                                                        "column": 12
                                                      },
                                                      "text": "["
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 33,
                                                        "column": 12
                                                      },
                                                      "end": {
                                                        "row": 33,
                                                        "column": 13
                                                      },
                                                      "text": "i"
                                                    },
                                                    {
                                                      "type": "]",
                                                      "start": {
                                                        "row": 33,
                                                        "column": 13
                                                      },
                                                      "end": {
                                                        "row": 33,
                                                        "column": 14
                                                      },
                                                      "text": "]"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "^=",
                                                  "start": {
                                                    "row": 33,
                                                    "column": 15
                                                  },
                                                  "end": {
                                                    "row": 33,
                                                    "column": 17
                                                  },
                                                  "text": "^="
                                                },
                                                {
                                                  "type": "binary_expression",
                                                  "start": {
                                                    "row": 33,
                                                    "column": 18
                                                  },
                                                  "end": {
                                                    "row": 33,
                                                    "column": 45
                                                  },
                                                  "text": "omacAdata[i] ^ omacNonce[i]",
                                                  "children": [
                                                    {
                                                      "type": "subscript_expression",
                                                      "start": {
                                                        "row": 33,
                                                        "column": 18
                                                      },
                                                      "end": {
                                                        "row": 33,
                                                        "column": 30
                                                      },
                                                      "text": "omacAdata[i]",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 33,
                                                            "column": 18
                                                          },
                                                          "end": {
                                                            "row": 33,
                                                            "column": 27
                                                          },
                                                          "text": "omacAdata"
                                                        },
                                                        {
                                                          "type": "[",
                                                          "start": {
                                                            "row": 33,
                                                            "column": 27
                                                          },
                                                          "end": {
                                                            "row": 33,
                                                            "column": 28
                                                          },
                                                          "text": "["
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 33,
                                                            "column": 28
                                                          },
                                                          "end": {
                                                            "row": 33,
                                                            "column": 29
                                                          },
                                                          "text": "i"
                                                        },
                                                        {
                                                          "type": "]",
                                                          "start": {
                                                            "row": 33,
                                                            "column": 29
                                                          },
                                                          "end": {
                                                            "row": 33,
                                                            "column": 30
                                                          },
                                                          "text": "]"
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "^",
                                                      "start": {
                                                        "row": 33,
                                                        "column": 31
                                                      },
                                                      "end": {
                                                        "row": 33,
                                                        "column": 32
                                                      },
                                                      "text": "^"
                                                    },
                                                    {
                                                      "type": "subscript_expression",
                                                      "start": {
                                                        "row": 33,
                                                        "column": 33
                                                      },
                                                      "end": {
                                                        "row": 33,
                                                        "column": 45
                                                      },
                                                      "text": "omacNonce[i]",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 33,
                                                            "column": 33
                                                          },
                                                          "end": {
                                                            "row": 33,
                                                            "column": 42
                                                          },
                                                          "text": "omacNonce"
                                                        },
                                                        {
                                                          "type": "[",
                                                          "start": {
                                                            "row": 33,
                                                            "column": 42
                                                          },
                                                          "end": {
                                                            "row": 33,
                                                            "column": 43
                                                          },
                                                          "text": "["
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 33,
                                                            "column": 43
                                                          },
                                                          "end": {
                                                            "row": 33,
                                                            "column": 44
                                                          },
                                                          "text": "i"
                                                        },
                                                        {
                                                          "type": "]",
                                                          "start": {
                                                            "row": 33,
                                                            "column": 44
                                                          },
                                                          "end": {
                                                            "row": 33,
                                                            "column": 45
                                                          },
                                                          "text": "]"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ";",
                                              "start": {
                                                "row": 33,
                                                "column": 45
                                              },
                                              "end": {
                                                "row": 33,
                                                "column": 46
                                              },
                                              "text": ";"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "}",
                                          "start": {
                                            "row": 34,
                                            "column": 6
                                          },
                                          "end": {
                                            "row": 34,
                                            "column": 7
                                          },
                                          "text": "}"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "return_statement",
                                  "start": {
                                    "row": 35,
                                    "column": 6
                                  },
                                  "end": {
                                    "row": 35,
                                    "column": 52
                                  },
                                  "text": "return util.concatUint8Array([ciphered, tag]);",
                                  "children": [
                                    {
                                      "type": "return",
                                      "start": {
                                        "row": 35,
                                        "column": 6
                                      },
                                      "end": {
                                        "row": 35,
                                        "column": 12
                                      },
                                      "text": "return"
                                    },
                                    {
                                      "type": "call_expression",
                                      "start": {
                                        "row": 35,
                                        "column": 13
                                      },
                                      "end": {
                                        "row": 35,
                                        "column": 51
                                      },
                                      "text": "util.concatUint8Array([ciphered, tag])",
                                      "children": [
                                        {
                                          "type": "member_expression",
                                          "start": {
                                            "row": 35,
                                            "column": 13
                                          },
                                          "end": {
                                            "row": 35,
                                            "column": 34
                                          },
                                          "text": "util.concatUint8Array",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 35,
                                                "column": 13
                                              },
                                              "end": {
                                                "row": 35,
                                                "column": 17
                                              },
                                              "text": "util"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 35,
                                                "column": 17
                                              },
                                              "end": {
                                                "row": 35,
                                                "column": 18
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "property_identifier",
                                              "start": {
                                                "row": 35,
                                                "column": 18
                                              },
                                              "end": {
                                                "row": 35,
                                                "column": 34
                                              },
                                              "text": "concatUint8Array"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "arguments",
                                          "start": {
                                            "row": 35,
                                            "column": 34
                                          },
                                          "end": {
                                            "row": 35,
                                            "column": 51
                                          },
                                          "text": "([ciphered, tag])",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 35,
                                                "column": 34
                                              },
                                              "end": {
                                                "row": 35,
                                                "column": 35
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "array",
                                              "start": {
                                                "row": 35,
                                                "column": 35
                                              },
                                              "end": {
                                                "row": 35,
                                                "column": 50
                                              },
                                              "text": "[ciphered, tag]",
                                              "children": [
                                                {
                                                  "type": "[",
                                                  "start": {
                                                    "row": 35,
                                                    "column": 35
                                                  },
                                                  "end": {
                                                    "row": 35,
                                                    "column": 36
                                                  },
                                                  "text": "["
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 35,
                                                    "column": 36
                                                  },
                                                  "end": {
                                                    "row": 35,
                                                    "column": 44
                                                  },
                                                  "text": "ciphered"
                                                },
                                                {
                                                  "type": ",",
                                                  "start": {
                                                    "row": 35,
                                                    "column": 44
                                                  },
                                                  "end": {
                                                    "row": 35,
                                                    "column": 45
                                                  },
                                                  "text": ","
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 35,
                                                    "column": 46
                                                  },
                                                  "end": {
                                                    "row": 35,
                                                    "column": 49
                                                  },
                                                  "text": "tag"
                                                },
                                                {
                                                  "type": "]",
                                                  "start": {
                                                    "row": 35,
                                                    "column": 49
                                                  },
                                                  "end": {
                                                    "row": 35,
                                                    "column": 50
                                                  },
                                                  "text": "]"
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 35,
                                                "column": 50
                                              },
                                              "end": {
                                                "row": 35,
                                                "column": 51
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start": {
                                        "row": 35,
                                        "column": 51
                                      },
                                      "end": {
                                        "row": 35,
                                        "column": 52
                                      },
                                      "text": ";"
                                    }
                                  ]
                                },
                                {
                                  "type": "}",
                                  "start": {
                                    "row": 36,
                                    "column": 4
                                  },
                                  "end": {
                                    "row": 36,
                                    "column": 5
                                  },
                                  "text": "}"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ",",
                      "start": {
                        "row": 36,
                        "column": 5
                      },
                      "end": {
                        "row": 36,
                        "column": 6
                      },
                      "text": ","
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 38,
                        "column": 4
                      },
                      "end": {
                        "row": 44,
                        "column": 7
                      },
                      "text": "/**\n     * Decrypt ciphertext input.\n     * @param  {Uint8Array} ciphertext   The ciphertext input to be decrypted\n     * @param  {Uint8Array} nonce        The nonce (16 bytes)\n     * @param  {Uint8Array} adata        Associated data to verify\n     * @returns {Promise<Uint8Array>}     The plaintext output\n     */"
                    },
                    {
                      "type": "pair",
                      "start": {
                        "row": 45,
                        "column": 4
                      },
                      "end": {
                        "row": 65,
                        "column": 5
                      },
                      "text": "decrypt: async function(ciphertext, nonce, adata) {\n      if (ciphertext.length < tagLength) throw new Error('Invalid EAX ciphertext');\n      const ciphered = ciphertext.subarray(0, -tagLength);\n      const ctTag = ciphertext.subarray(-tagLength);\n      const [\n        omacNonce,\n        omacAdata,\n        omacCiphered\n      ] = await Promise.all([\n        omac(zero, nonce),\n        omac(one, adata),\n        omac(two, ciphered)\n      ]);\n      const tag = omacCiphered; // Assumes that omac(*).length === tagLength.\n      for (let i = 0; i < tagLength; i++) {\n        tag[i] ^= omacAdata[i] ^ omacNonce[i];\n      }\n      if (!util.equalsUint8Array(ctTag, tag)) throw new Error('Authentication tag mismatch');\n      const plaintext = await ctr(ciphered, omacNonce);\n      return plaintext;\n    }",
                      "children": [
                        {
                          "type": "property_identifier",
                          "start": {
                            "row": 45,
                            "column": 4
                          },
                          "end": {
                            "row": 45,
                            "column": 11
                          },
                          "text": "decrypt"
                        },
                        {
                          "type": ":",
                          "start": {
                            "row": 45,
                            "column": 11
                          },
                          "end": {
                            "row": 45,
                            "column": 12
                          },
                          "text": ":"
                        },
                        {
                          "type": "function",
                          "start": {
                            "row": 45,
                            "column": 13
                          },
                          "end": {
                            "row": 65,
                            "column": 5
                          },
                          "text": "async function(ciphertext, nonce, adata) {\n      if (ciphertext.length < tagLength) throw new Error('Invalid EAX ciphertext');\n      const ciphered = ciphertext.subarray(0, -tagLength);\n      const ctTag = ciphertext.subarray(-tagLength);\n      const [\n        omacNonce,\n        omacAdata,\n        omacCiphered\n      ] = await Promise.all([\n        omac(zero, nonce),\n        omac(one, adata),\n        omac(two, ciphered)\n      ]);\n      const tag = omacCiphered; // Assumes that omac(*).length === tagLength.\n      for (let i = 0; i < tagLength; i++) {\n        tag[i] ^= omacAdata[i] ^ omacNonce[i];\n      }\n      if (!util.equalsUint8Array(ctTag, tag)) throw new Error('Authentication tag mismatch');\n      const plaintext = await ctr(ciphered, omacNonce);\n      return plaintext;\n    }",
                          "children": [
                            {
                              "type": "async",
                              "start": {
                                "row": 45,
                                "column": 13
                              },
                              "end": {
                                "row": 45,
                                "column": 18
                              },
                              "text": "async"
                            },
                            {
                              "type": "function",
                              "start": {
                                "row": 45,
                                "column": 19
                              },
                              "end": {
                                "row": 45,
                                "column": 27
                              },
                              "text": "function"
                            },
                            {
                              "type": "formal_parameters",
                              "start": {
                                "row": 45,
                                "column": 27
                              },
                              "end": {
                                "row": 45,
                                "column": 53
                              },
                              "text": "(ciphertext, nonce, adata)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 45,
                                    "column": 27
                                  },
                                  "end": {
                                    "row": 45,
                                    "column": 28
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 45,
                                    "column": 28
                                  },
                                  "end": {
                                    "row": 45,
                                    "column": 38
                                  },
                                  "text": "ciphertext"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 45,
                                    "column": 38
                                  },
                                  "end": {
                                    "row": 45,
                                    "column": 39
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 45,
                                    "column": 40
                                  },
                                  "end": {
                                    "row": 45,
                                    "column": 45
                                  },
                                  "text": "nonce"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 45,
                                    "column": 45
                                  },
                                  "end": {
                                    "row": 45,
                                    "column": 46
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 45,
                                    "column": 47
                                  },
                                  "end": {
                                    "row": 45,
                                    "column": 52
                                  },
                                  "text": "adata"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 45,
                                    "column": 52
                                  },
                                  "end": {
                                    "row": 45,
                                    "column": 53
                                  },
                                  "text": ")"
                                }
                              ]
                            },
                            {
                              "type": "statement_block",
                              "start": {
                                "row": 45,
                                "column": 54
                              },
                              "end": {
                                "row": 65,
                                "column": 5
                              },
                              "text": "{\n      if (ciphertext.length < tagLength) throw new Error('Invalid EAX ciphertext');\n      const ciphered = ciphertext.subarray(0, -tagLength);\n      const ctTag = ciphertext.subarray(-tagLength);\n      const [\n        omacNonce,\n        omacAdata,\n        omacCiphered\n      ] = await Promise.all([\n        omac(zero, nonce),\n        omac(one, adata),\n        omac(two, ciphered)\n      ]);\n      const tag = omacCiphered; // Assumes that omac(*).length === tagLength.\n      for (let i = 0; i < tagLength; i++) {\n        tag[i] ^= omacAdata[i] ^ omacNonce[i];\n      }\n      if (!util.equalsUint8Array(ctTag, tag)) throw new Error('Authentication tag mismatch');\n      const plaintext = await ctr(ciphered, omacNonce);\n      return plaintext;\n    }",
                              "children": [
                                {
                                  "type": "{",
                                  "start": {
                                    "row": 45,
                                    "column": 54
                                  },
                                  "end": {
                                    "row": 45,
                                    "column": 55
                                  },
                                  "text": "{"
                                },
                                {
                                  "type": "if_statement",
                                  "start": {
                                    "row": 46,
                                    "column": 6
                                  },
                                  "end": {
                                    "row": 46,
                                    "column": 83
                                  },
                                  "text": "if (ciphertext.length < tagLength) throw new Error('Invalid EAX ciphertext');",
                                  "children": [
                                    {
                                      "type": "if",
                                      "start": {
                                        "row": 46,
                                        "column": 6
                                      },
                                      "end": {
                                        "row": 46,
                                        "column": 8
                                      },
                                      "text": "if"
                                    },
                                    {
                                      "type": "parenthesized_expression",
                                      "start": {
                                        "row": 46,
                                        "column": 9
                                      },
                                      "end": {
                                        "row": 46,
                                        "column": 40
                                      },
                                      "text": "(ciphertext.length < tagLength)",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 46,
                                            "column": 9
                                          },
                                          "end": {
                                            "row": 46,
                                            "column": 10
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start": {
                                            "row": 46,
                                            "column": 10
                                          },
                                          "end": {
                                            "row": 46,
                                            "column": 39
                                          },
                                          "text": "ciphertext.length < tagLength",
                                          "children": [
                                            {
                                              "type": "member_expression",
                                              "start": {
                                                "row": 46,
                                                "column": 10
                                              },
                                              "end": {
                                                "row": 46,
                                                "column": 27
                                              },
                                              "text": "ciphertext.length",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 46,
                                                    "column": 10
                                                  },
                                                  "end": {
                                                    "row": 46,
                                                    "column": 20
                                                  },
                                                  "text": "ciphertext"
                                                },
                                                {
                                                  "type": ".",
                                                  "start": {
                                                    "row": 46,
                                                    "column": 20
                                                  },
                                                  "end": {
                                                    "row": 46,
                                                    "column": 21
                                                  },
                                                  "text": "."
                                                },
                                                {
                                                  "type": "property_identifier",
                                                  "start": {
                                                    "row": 46,
                                                    "column": 21
                                                  },
                                                  "end": {
                                                    "row": 46,
                                                    "column": 27
                                                  },
                                                  "text": "length"
                                                }
                                              ]
                                            },
                                            {
                                              "type": "<",
                                              "start": {
                                                "row": 46,
                                                "column": 28
                                              },
                                              "end": {
                                                "row": 46,
                                                "column": 29
                                              },
                                              "text": "<"
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 46,
                                                "column": 30
                                              },
                                              "end": {
                                                "row": 46,
                                                "column": 39
                                              },
                                              "text": "tagLength"
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 46,
                                            "column": 39
                                          },
                                          "end": {
                                            "row": 46,
                                            "column": 40
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "throw_statement",
                                      "start": {
                                        "row": 46,
                                        "column": 41
                                      },
                                      "end": {
                                        "row": 46,
                                        "column": 83
                                      },
                                      "text": "throw new Error('Invalid EAX ciphertext');",
                                      "children": [
                                        {
                                          "type": "throw",
                                          "start": {
                                            "row": 46,
                                            "column": 41
                                          },
                                          "end": {
                                            "row": 46,
                                            "column": 46
                                          },
                                          "text": "throw"
                                        },
                                        {
                                          "type": "new_expression",
                                          "start": {
                                            "row": 46,
                                            "column": 47
                                          },
                                          "end": {
                                            "row": 46,
                                            "column": 82
                                          },
                                          "text": "new Error('Invalid EAX ciphertext')",
                                          "children": [
                                            {
                                              "type": "new",
                                              "start": {
                                                "row": 46,
                                                "column": 47
                                              },
                                              "end": {
                                                "row": 46,
                                                "column": 50
                                              },
                                              "text": "new"
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 46,
                                                "column": 51
                                              },
                                              "end": {
                                                "row": 46,
                                                "column": 56
                                              },
                                              "text": "Error"
                                            },
                                            {
                                              "type": "arguments",
                                              "start": {
                                                "row": 46,
                                                "column": 56
                                              },
                                              "end": {
                                                "row": 46,
                                                "column": 82
                                              },
                                              "text": "('Invalid EAX ciphertext')",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 46,
                                                    "column": 56
                                                  },
                                                  "end": {
                                                    "row": 46,
                                                    "column": 57
                                                  },
                                                  "text": "("
                                                },
                                                {
                                                  "type": "string",
                                                  "start": {
                                                    "row": 46,
                                                    "column": 57
                                                  },
                                                  "end": {
                                                    "row": 46,
                                                    "column": 81
                                                  },
                                                  "text": "'Invalid EAX ciphertext'",
                                                  "children": [
                                                    {
                                                      "type": "'",
                                                      "start": {
                                                        "row": 46,
                                                        "column": 57
                                                      },
                                                      "end": {
                                                        "row": 46,
                                                        "column": 58
                                                      },
                                                      "text": "'"
                                                    },
                                                    {
                                                      "type": "string_fragment",
                                                      "start": {
                                                        "row": 46,
                                                        "column": 58
                                                      },
                                                      "end": {
                                                        "row": 46,
                                                        "column": 80
                                                      },
                                                      "text": "Invalid EAX ciphertext"
                                                    },
                                                    {
                                                      "type": "'",
                                                      "start": {
                                                        "row": 46,
                                                        "column": 80
                                                      },
                                                      "end": {
                                                        "row": 46,
                                                        "column": 81
                                                      },
                                                      "text": "'"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 46,
                                                    "column": 81
                                                  },
                                                  "end": {
                                                    "row": 46,
                                                    "column": 82
                                                  },
                                                  "text": ")"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start": {
                                            "row": 46,
                                            "column": 82
                                          },
                                          "end": {
                                            "row": 46,
                                            "column": 83
                                          },
                                          "text": ";"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "lexical_declaration",
                                  "start": {
                                    "row": 47,
                                    "column": 6
                                  },
                                  "end": {
                                    "row": 47,
                                    "column": 58
                                  },
                                  "text": "const ciphered = ciphertext.subarray(0, -tagLength);",
                                  "children": [
                                    {
                                      "type": "const",
                                      "start": {
                                        "row": 47,
                                        "column": 6
                                      },
                                      "end": {
                                        "row": 47,
                                        "column": 11
                                      },
                                      "text": "const"
                                    },
                                    {
                                      "type": "variable_declarator",
                                      "start": {
                                        "row": 47,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 47,
                                        "column": 57
                                      },
                                      "text": "ciphered = ciphertext.subarray(0, -tagLength)",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 47,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 47,
                                            "column": 20
                                          },
                                          "text": "ciphered"
                                        },
                                        {
                                          "type": "=",
                                          "start": {
                                            "row": 47,
                                            "column": 21
                                          },
                                          "end": {
                                            "row": 47,
                                            "column": 22
                                          },
                                          "text": "="
                                        },
                                        {
                                          "type": "call_expression",
                                          "start": {
                                            "row": 47,
                                            "column": 23
                                          },
                                          "end": {
                                            "row": 47,
                                            "column": 57
                                          },
                                          "text": "ciphertext.subarray(0, -tagLength)",
                                          "children": [
                                            {
                                              "type": "member_expression",
                                              "start": {
                                                "row": 47,
                                                "column": 23
                                              },
                                              "end": {
                                                "row": 47,
                                                "column": 42
                                              },
                                              "text": "ciphertext.subarray",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 47,
                                                    "column": 23
                                                  },
                                                  "end": {
                                                    "row": 47,
                                                    "column": 33
                                                  },
                                                  "text": "ciphertext"
                                                },
                                                {
                                                  "type": ".",
                                                  "start": {
                                                    "row": 47,
                                                    "column": 33
                                                  },
                                                  "end": {
                                                    "row": 47,
                                                    "column": 34
                                                  },
                                                  "text": "."
                                                },
                                                {
                                                  "type": "property_identifier",
                                                  "start": {
                                                    "row": 47,
                                                    "column": 34
                                                  },
                                                  "end": {
                                                    "row": 47,
                                                    "column": 42
                                                  },
                                                  "text": "subarray"
                                                }
                                              ]
                                            },
                                            {
                                              "type": "arguments",
                                              "start": {
                                                "row": 47,
                                                "column": 42
                                              },
                                              "end": {
                                                "row": 47,
                                                "column": 57
                                              },
                                              "text": "(0, -tagLength)",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 47,
                                                    "column": 42
                                                  },
                                                  "end": {
                                                    "row": 47,
                                                    "column": 43
                                                  },
                                                  "text": "("
                                                },
                                                {
                                                  "type": "number",
                                                  "start": {
                                                    "row": 47,
                                                    "column": 43
                                                  },
                                                  "end": {
                                                    "row": 47,
                                                    "column": 44
                                                  },
                                                  "text": "0"
                                                },
                                                {
                                                  "type": ",",
                                                  "start": {
                                                    "row": 47,
                                                    "column": 44
                                                  },
                                                  "end": {
                                                    "row": 47,
                                                    "column": 45
                                                  },
                                                  "text": ","
                                                },
                                                {
                                                  "type": "unary_expression",
                                                  "start": {
                                                    "row": 47,
                                                    "column": 46
                                                  },
                                                  "end": {
                                                    "row": 47,
                                                    "column": 56
                                                  },
                                                  "text": "-tagLength",
                                                  "children": [
                                                    {
                                                      "type": "-",
                                                      "start": {
                                                        "row": 47,
                                                        "column": 46
                                                      },
                                                      "end": {
                                                        "row": 47,
                                                        "column": 47
                                                      },
                                                      "text": "-"
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 47,
                                                        "column": 47
                                                      },
                                                      "end": {
                                                        "row": 47,
                                                        "column": 56
                                                      },
                                                      "text": "tagLength"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 47,
                                                    "column": 56
                                                  },
                                                  "end": {
                                                    "row": 47,
                                                    "column": 57
                                                  },
                                                  "text": ")"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start": {
                                        "row": 47,
                                        "column": 57
                                      },
                                      "end": {
                                        "row": 47,
                                        "column": 58
                                      },
                                      "text": ";"
                                    }
                                  ]
                                },
                                {
                                  "type": "lexical_declaration",
                                  "start": {
                                    "row": 48,
                                    "column": 6
                                  },
                                  "end": {
                                    "row": 48,
                                    "column": 52
                                  },
                                  "text": "const ctTag = ciphertext.subarray(-tagLength);",
                                  "children": [
                                    {
                                      "type": "const",
                                      "start": {
                                        "row": 48,
                                        "column": 6
                                      },
                                      "end": {
                                        "row": 48,
                                        "column": 11
                                      },
                                      "text": "const"
                                    },
                                    {
                                      "type": "variable_declarator",
                                      "start": {
                                        "row": 48,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 48,
                                        "column": 51
                                      },
                                      "text": "ctTag = ciphertext.subarray(-tagLength)",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 48,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 48,
                                            "column": 17
                                          },
                                          "text": "ctTag"
                                        },
                                        {
                                          "type": "=",
                                          "start": {
                                            "row": 48,
                                            "column": 18
                                          },
                                          "end": {
                                            "row": 48,
                                            "column": 19
                                          },
                                          "text": "="
                                        },
                                        {
                                          "type": "call_expression",
                                          "start": {
                                            "row": 48,
                                            "column": 20
                                          },
                                          "end": {
                                            "row": 48,
                                            "column": 51
                                          },
                                          "text": "ciphertext.subarray(-tagLength)",
                                          "children": [
                                            {
                                              "type": "member_expression",
                                              "start": {
                                                "row": 48,
                                                "column": 20
                                              },
                                              "end": {
                                                "row": 48,
                                                "column": 39
                                              },
                                              "text": "ciphertext.subarray",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 48,
                                                    "column": 20
                                                  },
                                                  "end": {
                                                    "row": 48,
                                                    "column": 30
                                                  },
                                                  "text": "ciphertext"
                                                },
                                                {
                                                  "type": ".",
                                                  "start": {
                                                    "row": 48,
                                                    "column": 30
                                                  },
                                                  "end": {
                                                    "row": 48,
                                                    "column": 31
                                                  },
                                                  "text": "."
                                                },
                                                {
                                                  "type": "property_identifier",
                                                  "start": {
                                                    "row": 48,
                                                    "column": 31
                                                  },
                                                  "end": {
                                                    "row": 48,
                                                    "column": 39
                                                  },
                                                  "text": "subarray"
                                                }
                                              ]
                                            },
                                            {
                                              "type": "arguments",
                                              "start": {
                                                "row": 48,
                                                "column": 39
                                              },
                                              "end": {
                                                "row": 48,
                                                "column": 51
                                              },
                                              "text": "(-tagLength)",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 48,
                                                    "column": 39
                                                  },
                                                  "end": {
                                                    "row": 48,
                                                    "column": 40
                                                  },
                                                  "text": "("
                                                },
                                                {
                                                  "type": "unary_expression",
                                                  "start": {
                                                    "row": 48,
                                                    "column": 40
                                                  },
                                                  "end": {
                                                    "row": 48,
                                                    "column": 50
                                                  },
                                                  "text": "-tagLength",
                                                  "children": [
                                                    {
                                                      "type": "-",
                                                      "start": {
                                                        "row": 48,
                                                        "column": 40
                                                      },
                                                      "end": {
                                                        "row": 48,
                                                        "column": 41
                                                      },
                                                      "text": "-"
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 48,
                                                        "column": 41
                                                      },
                                                      "end": {
                                                        "row": 48,
                                                        "column": 50
                                                      },
                                                      "text": "tagLength"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 48,
                                                    "column": 50
                                                  },
                                                  "end": {
                                                    "row": 48,
                                                    "column": 51
                                                  },
                                                  "text": ")"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start": {
                                        "row": 48,
                                        "column": 51
                                      },
                                      "end": {
                                        "row": 48,
                                        "column": 52
                                      },
                                      "text": ";"
                                    }
                                  ]
                                },
                                {
                                  "type": "lexical_declaration",
                                  "start": {
                                    "row": 49,
                                    "column": 6
                                  },
                                  "end": {
                                    "row": 57,
                                    "column": 9
                                  },
                                  "text": "const [\n        omacNonce,\n        omacAdata,\n        omacCiphered\n      ] = await Promise.all([\n        omac(zero, nonce),\n        omac(one, adata),\n        omac(two, ciphered)\n      ]);",
                                  "children": [
                                    {
                                      "type": "const",
                                      "start": {
                                        "row": 49,
                                        "column": 6
                                      },
                                      "end": {
                                        "row": 49,
                                        "column": 11
                                      },
                                      "text": "const"
                                    },
                                    {
                                      "type": "variable_declarator",
                                      "start": {
                                        "row": 49,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 57,
                                        "column": 8
                                      },
                                      "text": "[\n        omacNonce,\n        omacAdata,\n        omacCiphered\n      ] = await Promise.all([\n        omac(zero, nonce),\n        omac(one, adata),\n        omac(two, ciphered)\n      ])",
                                      "children": [
                                        {
                                          "type": "array_pattern",
                                          "start": {
                                            "row": 49,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 53,
                                            "column": 7
                                          },
                                          "text": "[\n        omacNonce,\n        omacAdata,\n        omacCiphered\n      ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start": {
                                                "row": 49,
                                                "column": 12
                                              },
                                              "end": {
                                                "row": 49,
                                                "column": 13
                                              },
                                              "text": "["
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 50,
                                                "column": 8
                                              },
                                              "end": {
                                                "row": 50,
                                                "column": 17
                                              },
                                              "text": "omacNonce"
                                            },
                                            {
                                              "type": ",",
                                              "start": {
                                                "row": 50,
                                                "column": 17
                                              },
                                              "end": {
                                                "row": 50,
                                                "column": 18
                                              },
                                              "text": ","
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 51,
                                                "column": 8
                                              },
                                              "end": {
                                                "row": 51,
                                                "column": 17
                                              },
                                              "text": "omacAdata"
                                            },
                                            {
                                              "type": ",",
                                              "start": {
                                                "row": 51,
                                                "column": 17
                                              },
                                              "end": {
                                                "row": 51,
                                                "column": 18
                                              },
                                              "text": ","
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 52,
                                                "column": 8
                                              },
                                              "end": {
                                                "row": 52,
                                                "column": 20
                                              },
                                              "text": "omacCiphered"
                                            },
                                            {
                                              "type": "]",
                                              "start": {
                                                "row": 53,
                                                "column": 6
                                              },
                                              "end": {
                                                "row": 53,
                                                "column": 7
                                              },
                                              "text": "]"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "=",
                                          "start": {
                                            "row": 53,
                                            "column": 8
                                          },
                                          "end": {
                                            "row": 53,
                                            "column": 9
                                          },
                                          "text": "="
                                        },
                                        {
                                          "type": "await_expression",
                                          "start": {
                                            "row": 53,
                                            "column": 10
                                          },
                                          "end": {
                                            "row": 57,
                                            "column": 8
                                          },
                                          "text": "await Promise.all([\n        omac(zero, nonce),\n        omac(one, adata),\n        omac(two, ciphered)\n      ])",
                                          "children": [
                                            {
                                              "type": "await",
                                              "start": {
                                                "row": 53,
                                                "column": 10
                                              },
                                              "end": {
                                                "row": 53,
                                                "column": 15
                                              },
                                              "text": "await"
                                            },
                                            {
                                              "type": "call_expression",
                                              "start": {
                                                "row": 53,
                                                "column": 16
                                              },
                                              "end": {
                                                "row": 57,
                                                "column": 8
                                              },
                                              "text": "Promise.all([\n        omac(zero, nonce),\n        omac(one, adata),\n        omac(two, ciphered)\n      ])",
                                              "children": [
                                                {
                                                  "type": "member_expression",
                                                  "start": {
                                                    "row": 53,
                                                    "column": 16
                                                  },
                                                  "end": {
                                                    "row": 53,
                                                    "column": 27
                                                  },
                                                  "text": "Promise.all",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 53,
                                                        "column": 16
                                                      },
                                                      "end": {
                                                        "row": 53,
                                                        "column": 23
                                                      },
                                                      "text": "Promise"
                                                    },
                                                    {
                                                      "type": ".",
                                                      "start": {
                                                        "row": 53,
                                                        "column": 23
                                                      },
                                                      "end": {
                                                        "row": 53,
                                                        "column": 24
                                                      },
                                                      "text": "."
                                                    },
                                                    {
                                                      "type": "property_identifier",
                                                      "start": {
                                                        "row": 53,
                                                        "column": 24
                                                      },
                                                      "end": {
                                                        "row": 53,
                                                        "column": 27
                                                      },
                                                      "text": "all"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "arguments",
                                                  "start": {
                                                    "row": 53,
                                                    "column": 27
                                                  },
                                                  "end": {
                                                    "row": 57,
                                                    "column": 8
                                                  },
                                                  "text": "([\n        omac(zero, nonce),\n        omac(one, adata),\n        omac(two, ciphered)\n      ])",
                                                  "children": [
                                                    {
                                                      "type": "(",
                                                      "start": {
                                                        "row": 53,
                                                        "column": 27
                                                      },
                                                      "end": {
                                                        "row": 53,
                                                        "column": 28
                                                      },
                                                      "text": "("
                                                    },
                                                    {
                                                      "type": "array",
                                                      "start": {
                                                        "row": 53,
                                                        "column": 28
                                                      },
                                                      "end": {
                                                        "row": 57,
                                                        "column": 7
                                                      },
                                                      "text": "[\n        omac(zero, nonce),\n        omac(one, adata),\n        omac(two, ciphered)\n      ]",
                                                      "children": [
                                                        {
                                                          "type": "[",
                                                          "start": {
                                                            "row": 53,
                                                            "column": 28
                                                          },
                                                          "end": {
                                                            "row": 53,
                                                            "column": 29
                                                          },
                                                          "text": "["
                                                        },
                                                        {
                                                          "type": "call_expression",
                                                          "start": {
                                                            "row": 54,
                                                            "column": 8
                                                          },
                                                          "end": {
                                                            "row": 54,
                                                            "column": 25
                                                          },
                                                          "text": "omac(zero, nonce)",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start": {
                                                                "row": 54,
                                                                "column": 8
                                                              },
                                                              "end": {
                                                                "row": 54,
                                                                "column": 12
                                                              },
                                                              "text": "omac"
                                                            },
                                                            {
                                                              "type": "arguments",
                                                              "start": {
                                                                "row": 54,
                                                                "column": 12
                                                              },
                                                              "end": {
                                                                "row": 54,
                                                                "column": 25
                                                              },
                                                              "text": "(zero, nonce)",
                                                              "children": [
                                                                {
                                                                  "type": "(",
                                                                  "start": {
                                                                    "row": 54,
                                                                    "column": 12
                                                                  },
                                                                  "end": {
                                                                    "row": 54,
                                                                    "column": 13
                                                                  },
                                                                  "text": "("
                                                                },
                                                                {
                                                                  "type": "identifier",
                                                                  "start": {
                                                                    "row": 54,
                                                                    "column": 13
                                                                  },
                                                                  "end": {
                                                                    "row": 54,
                                                                    "column": 17
                                                                  },
                                                                  "text": "zero"
                                                                },
                                                                {
                                                                  "type": ",",
                                                                  "start": {
                                                                    "row": 54,
                                                                    "column": 17
                                                                  },
                                                                  "end": {
                                                                    "row": 54,
                                                                    "column": 18
                                                                  },
                                                                  "text": ","
                                                                },
                                                                {
                                                                  "type": "identifier",
                                                                  "start": {
                                                                    "row": 54,
                                                                    "column": 19
                                                                  },
                                                                  "end": {
                                                                    "row": 54,
                                                                    "column": 24
                                                                  },
                                                                  "text": "nonce"
                                                                },
                                                                {
                                                                  "type": ")",
                                                                  "start": {
                                                                    "row": 54,
                                                                    "column": 24
                                                                  },
                                                                  "end": {
                                                                    "row": 54,
                                                                    "column": 25
                                                                  },
                                                                  "text": ")"
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": ",",
                                                          "start": {
                                                            "row": 54,
                                                            "column": 25
                                                          },
                                                          "end": {
                                                            "row": 54,
                                                            "column": 26
                                                          },
                                                          "text": ","
                                                        },
                                                        {
                                                          "type": "call_expression",
                                                          "start": {
                                                            "row": 55,
                                                            "column": 8
                                                          },
                                                          "end": {
                                                            "row": 55,
                                                            "column": 24
                                                          },
                                                          "text": "omac(one, adata)",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start": {
                                                                "row": 55,
                                                                "column": 8
                                                              },
                                                              "end": {
                                                                "row": 55,
                                                                "column": 12
                                                              },
                                                              "text": "omac"
                                                            },
                                                            {
                                                              "type": "arguments",
                                                              "start": {
                                                                "row": 55,
                                                                "column": 12
                                                              },
                                                              "end": {
                                                                "row": 55,
                                                                "column": 24
                                                              },
                                                              "text": "(one, adata)",
                                                              "children": [
                                                                {
                                                                  "type": "(",
                                                                  "start": {
                                                                    "row": 55,
                                                                    "column": 12
                                                                  },
                                                                  "end": {
                                                                    "row": 55,
                                                                    "column": 13
                                                                  },
                                                                  "text": "("
                                                                },
                                                                {
                                                                  "type": "identifier",
                                                                  "start": {
                                                                    "row": 55,
                                                                    "column": 13
                                                                  },
                                                                  "end": {
                                                                    "row": 55,
                                                                    "column": 16
                                                                  },
                                                                  "text": "one"
                                                                },
                                                                {
                                                                  "type": ",",
                                                                  "start": {
                                                                    "row": 55,
                                                                    "column": 16
                                                                  },
                                                                  "end": {
                                                                    "row": 55,
                                                                    "column": 17
                                                                  },
                                                                  "text": ","
                                                                },
                                                                {
                                                                  "type": "identifier",
                                                                  "start": {
                                                                    "row": 55,
                                                                    "column": 18
                                                                  },
                                                                  "end": {
                                                                    "row": 55,
                                                                    "column": 23
                                                                  },
                                                                  "text": "adata"
                                                                },
                                                                {
                                                                  "type": ")",
                                                                  "start": {
                                                                    "row": 55,
                                                                    "column": 23
                                                                  },
                                                                  "end": {
                                                                    "row": 55,
                                                                    "column": 24
                                                                  },
                                                                  "text": ")"
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": ",",
                                                          "start": {
                                                            "row": 55,
                                                            "column": 24
                                                          },
                                                          "end": {
                                                            "row": 55,
                                                            "column": 25
                                                          },
                                                          "text": ","
                                                        },
                                                        {
                                                          "type": "call_expression",
                                                          "start": {
                                                            "row": 56,
                                                            "column": 8
                                                          },
                                                          "end": {
                                                            "row": 56,
                                                            "column": 27
                                                          },
                                                          "text": "omac(two, ciphered)",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start": {
                                                                "row": 56,
                                                                "column": 8
                                                              },
                                                              "end": {
                                                                "row": 56,
                                                                "column": 12
                                                              },
                                                              "text": "omac"
                                                            },
                                                            {
                                                              "type": "arguments",
                                                              "start": {
                                                                "row": 56,
                                                                "column": 12
                                                              },
                                                              "end": {
                                                                "row": 56,
                                                                "column": 27
                                                              },
                                                              "text": "(two, ciphered)",
                                                              "children": [
                                                                {
                                                                  "type": "(",
                                                                  "start": {
                                                                    "row": 56,
                                                                    "column": 12
                                                                  },
                                                                  "end": {
                                                                    "row": 56,
                                                                    "column": 13
                                                                  },
                                                                  "text": "("
                                                                },
                                                                {
                                                                  "type": "identifier",
                                                                  "start": {
                                                                    "row": 56,
                                                                    "column": 13
                                                                  },
                                                                  "end": {
                                                                    "row": 56,
                                                                    "column": 16
                                                                  },
                                                                  "text": "two"
                                                                },
                                                                {
                                                                  "type": ",",
                                                                  "start": {
                                                                    "row": 56,
                                                                    "column": 16
                                                                  },
                                                                  "end": {
                                                                    "row": 56,
                                                                    "column": 17
                                                                  },
                                                                  "text": ","
                                                                },
                                                                {
                                                                  "type": "identifier",
                                                                  "start": {
                                                                    "row": 56,
                                                                    "column": 18
                                                                  },
                                                                  "end": {
                                                                    "row": 56,
                                                                    "column": 26
                                                                  },
                                                                  "text": "ciphered"
                                                                },
                                                                {
                                                                  "type": ")",
                                                                  "start": {
                                                                    "row": 56,
                                                                    "column": 26
                                                                  },
                                                                  "end": {
                                                                    "row": 56,
                                                                    "column": 27
                                                                  },
                                                                  "text": ")"
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "]",
                                                          "start": {
                                                            "row": 57,
                                                            "column": 6
                                                          },
                                                          "end": {
                                                            "row": 57,
                                                            "column": 7
                                                          },
                                                          "text": "]"
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ")",
                                                      "start": {
                                                        "row": 57,
                                                        "column": 7
                                                      },
                                                      "end": {
                                                        "row": 57,
                                                        "column": 8
                                                      },
                                                      "text": ")"
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start": {
                                        "row": 57,
                                        "column": 8
                                      },
                                      "end": {
                                        "row": 57,
                                        "column": 9
                                      },
                                      "text": ";"
                                    }
                                  ]
                                },
                                {
                                  "type": "lexical_declaration",
                                  "start": {
                                    "row": 58,
                                    "column": 6
                                  },
                                  "end": {
                                    "row": 58,
                                    "column": 31
                                  },
                                  "text": "const tag = omacCiphered;",
                                  "children": [
                                    {
                                      "type": "const",
                                      "start": {
                                        "row": 58,
                                        "column": 6
                                      },
                                      "end": {
                                        "row": 58,
                                        "column": 11
                                      },
                                      "text": "const"
                                    },
                                    {
                                      "type": "variable_declarator",
                                      "start": {
                                        "row": 58,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 58,
                                        "column": 30
                                      },
                                      "text": "tag = omacCiphered",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 58,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 58,
                                            "column": 15
                                          },
                                          "text": "tag"
                                        },
                                        {
                                          "type": "=",
                                          "start": {
                                            "row": 58,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 58,
                                            "column": 17
                                          },
                                          "text": "="
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 58,
                                            "column": 18
                                          },
                                          "end": {
                                            "row": 58,
                                            "column": 30
                                          },
                                          "text": "omacCiphered"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start": {
                                        "row": 58,
                                        "column": 30
                                      },
                                      "end": {
                                        "row": 58,
                                        "column": 31
                                      },
                                      "text": ";"
                                    }
                                  ]
                                },
                                {
                                  "type": "comment",
                                  "start": {
                                    "row": 58,
                                    "column": 32
                                  },
                                  "end": {
                                    "row": 58,
                                    "column": 77
                                  },
                                  "text": "// Assumes that omac(*).length === tagLength."
                                },
                                {
                                  "type": "for_statement",
                                  "start": {
                                    "row": 59,
                                    "column": 6
                                  },
                                  "end": {
                                    "row": 61,
                                    "column": 7
                                  },
                                  "text": "for (let i = 0; i < tagLength; i++) {\n        tag[i] ^= omacAdata[i] ^ omacNonce[i];\n      }",
                                  "children": [
                                    {
                                      "type": "for",
                                      "start": {
                                        "row": 59,
                                        "column": 6
                                      },
                                      "end": {
                                        "row": 59,
                                        "column": 9
                                      },
                                      "text": "for"
                                    },
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 59,
                                        "column": 10
                                      },
                                      "end": {
                                        "row": 59,
                                        "column": 11
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "lexical_declaration",
                                      "start": {
                                        "row": 59,
                                        "column": 11
                                      },
                                      "end": {
                                        "row": 59,
                                        "column": 21
                                      },
                                      "text": "let i = 0;",
                                      "children": [
                                        {
                                          "type": "let",
                                          "start": {
                                            "row": 59,
                                            "column": 11
                                          },
                                          "end": {
                                            "row": 59,
                                            "column": 14
                                          },
                                          "text": "let"
                                        },
                                        {
                                          "type": "variable_declarator",
                                          "start": {
                                            "row": 59,
                                            "column": 15
                                          },
                                          "end": {
                                            "row": 59,
                                            "column": 20
                                          },
                                          "text": "i = 0",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 59,
                                                "column": 15
                                              },
                                              "end": {
                                                "row": 59,
                                                "column": 16
                                              },
                                              "text": "i"
                                            },
                                            {
                                              "type": "=",
                                              "start": {
                                                "row": 59,
                                                "column": 17
                                              },
                                              "end": {
                                                "row": 59,
                                                "column": 18
                                              },
                                              "text": "="
                                            },
                                            {
                                              "type": "number",
                                              "start": {
                                                "row": 59,
                                                "column": 19
                                              },
                                              "end": {
                                                "row": 59,
                                                "column": 20
                                              },
                                              "text": "0"
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start": {
                                            "row": 59,
                                            "column": 20
                                          },
                                          "end": {
                                            "row": 59,
                                            "column": 21
                                          },
                                          "text": ";"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start": {
                                        "row": 59,
                                        "column": 22
                                      },
                                      "end": {
                                        "row": 59,
                                        "column": 36
                                      },
                                      "text": "i < tagLength;",
                                      "children": [
                                        {
                                          "type": "binary_expression",
                                          "start": {
                                            "row": 59,
                                            "column": 22
                                          },
                                          "end": {
                                            "row": 59,
                                            "column": 35
                                          },
                                          "text": "i < tagLength",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 59,
                                                "column": 22
                                              },
                                              "end": {
                                                "row": 59,
                                                "column": 23
                                              },
                                              "text": "i"
                                            },
                                            {
                                              "type": "<",
                                              "start": {
                                                "row": 59,
                                                "column": 24
                                              },
                                              "end": {
                                                "row": 59,
                                                "column": 25
                                              },
                                              "text": "<"
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 59,
                                                "column": 26
                                              },
                                              "end": {
                                                "row": 59,
                                                "column": 35
                                              },
                                              "text": "tagLength"
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start": {
                                            "row": 59,
                                            "column": 35
                                          },
                                          "end": {
                                            "row": 59,
                                            "column": 36
                                          },
                                          "text": ";"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "update_expression",
                                      "start": {
                                        "row": 59,
                                        "column": 37
                                      },
                                      "end": {
                                        "row": 59,
                                        "column": 40
                                      },
                                      "text": "i++",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 59,
                                            "column": 37
                                          },
                                          "end": {
                                            "row": 59,
                                            "column": 38
                                          },
                                          "text": "i"
                                        },
                                        {
                                          "type": "++",
                                          "start": {
                                            "row": 59,
                                            "column": 38
                                          },
                                          "end": {
                                            "row": 59,
                                            "column": 40
                                          },
                                          "text": "++"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 59,
                                        "column": 40
                                      },
                                      "end": {
                                        "row": 59,
                                        "column": 41
                                      },
                                      "text": ")"
                                    },
                                    {
                                      "type": "statement_block",
                                      "start": {
                                        "row": 59,
                                        "column": 42
                                      },
                                      "end": {
                                        "row": 61,
                                        "column": 7
                                      },
                                      "text": "{\n        tag[i] ^= omacAdata[i] ^ omacNonce[i];\n      }",
                                      "children": [
                                        {
                                          "type": "{",
                                          "start": {
                                            "row": 59,
                                            "column": 42
                                          },
                                          "end": {
                                            "row": 59,
                                            "column": 43
                                          },
                                          "text": "{"
                                        },
                                        {
                                          "type": "expression_statement",
                                          "start": {
                                            "row": 60,
                                            "column": 8
                                          },
                                          "end": {
                                            "row": 60,
                                            "column": 46
                                          },
                                          "text": "tag[i] ^= omacAdata[i] ^ omacNonce[i];",
                                          "children": [
                                            {
                                              "type": "augmented_assignment_expression",
                                              "start": {
                                                "row": 60,
                                                "column": 8
                                              },
                                              "end": {
                                                "row": 60,
                                                "column": 45
                                              },
                                              "text": "tag[i] ^= omacAdata[i] ^ omacNonce[i]",
                                              "children": [
                                                {
                                                  "type": "subscript_expression",
                                                  "start": {
                                                    "row": 60,
                                                    "column": 8
                                                  },
                                                  "end": {
                                                    "row": 60,
                                                    "column": 14
                                                  },
                                                  "text": "tag[i]",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 60,
                                                        "column": 8
                                                      },
                                                      "end": {
                                                        "row": 60,
                                                        "column": 11
                                                      },
                                                      "text": "tag"
                                                    },
                                                    {
                                                      "type": "[",
                                                      "start": {
                                                        "row": 60,
                                                        "column": 11
                                                      },
                                                      "end": {
                                                        "row": 60,
                                                        "column": 12
                                                      },
                                                      "text": "["
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 60,
                                                        "column": 12
                                                      },
                                                      "end": {
                                                        "row": 60,
                                                        "column": 13
                                                      },
                                                      "text": "i"
                                                    },
                                                    {
                                                      "type": "]",
                                                      "start": {
                                                        "row": 60,
                                                        "column": 13
                                                      },
                                                      "end": {
                                                        "row": 60,
                                                        "column": 14
                                                      },
                                                      "text": "]"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "^=",
                                                  "start": {
                                                    "row": 60,
                                                    "column": 15
                                                  },
                                                  "end": {
                                                    "row": 60,
                                                    "column": 17
                                                  },
                                                  "text": "^="
                                                },
                                                {
                                                  "type": "binary_expression",
                                                  "start": {
                                                    "row": 60,
                                                    "column": 18
                                                  },
                                                  "end": {
                                                    "row": 60,
                                                    "column": 45
                                                  },
                                                  "text": "omacAdata[i] ^ omacNonce[i]",
                                                  "children": [
                                                    {
                                                      "type": "subscript_expression",
                                                      "start": {
                                                        "row": 60,
                                                        "column": 18
                                                      },
                                                      "end": {
                                                        "row": 60,
                                                        "column": 30
                                                      },
                                                      "text": "omacAdata[i]",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 60,
                                                            "column": 18
                                                          },
                                                          "end": {
                                                            "row": 60,
                                                            "column": 27
                                                          },
                                                          "text": "omacAdata"
                                                        },
                                                        {
                                                          "type": "[",
                                                          "start": {
                                                            "row": 60,
                                                            "column": 27
                                                          },
                                                          "end": {
                                                            "row": 60,
                                                            "column": 28
                                                          },
                                                          "text": "["
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 60,
                                                            "column": 28
                                                          },
                                                          "end": {
                                                            "row": 60,
                                                            "column": 29
                                                          },
                                                          "text": "i"
                                                        },
                                                        {
                                                          "type": "]",
                                                          "start": {
                                                            "row": 60,
                                                            "column": 29
                                                          },
                                                          "end": {
                                                            "row": 60,
                                                            "column": 30
                                                          },
                                                          "text": "]"
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "^",
                                                      "start": {
                                                        "row": 60,
                                                        "column": 31
                                                      },
                                                      "end": {
                                                        "row": 60,
                                                        "column": 32
                                                      },
                                                      "text": "^"
                                                    },
                                                    {
                                                      "type": "subscript_expression",
                                                      "start": {
                                                        "row": 60,
                                                        "column": 33
                                                      },
                                                      "end": {
                                                        "row": 60,
                                                        "column": 45
                                                      },
                                                      "text": "omacNonce[i]",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 60,
                                                            "column": 33
                                                          },
                                                          "end": {
                                                            "row": 60,
                                                            "column": 42
                                                          },
                                                          "text": "omacNonce"
                                                        },
                                                        {
                                                          "type": "[",
                                                          "start": {
                                                            "row": 60,
                                                            "column": 42
                                                          },
                                                          "end": {
                                                            "row": 60,
                                                            "column": 43
                                                          },
                                                          "text": "["
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 60,
                                                            "column": 43
                                                          },
                                                          "end": {
                                                            "row": 60,
                                                            "column": 44
                                                          },
                                                          "text": "i"
                                                        },
                                                        {
                                                          "type": "]",
                                                          "start": {
                                                            "row": 60,
                                                            "column": 44
                                                          },
                                                          "end": {
                                                            "row": 60,
                                                            "column": 45
                                                          },
                                                          "text": "]"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ";",
                                              "start": {
                                                "row": 60,
                                                "column": 45
                                              },
                                              "end": {
                                                "row": 60,
                                                "column": 46
                                              },
                                              "text": ";"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "}",
                                          "start": {
                                            "row": 61,
                                            "column": 6
                                          },
                                          "end": {
                                            "row": 61,
                                            "column": 7
                                          },
                                          "text": "}"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "if_statement",
                                  "start": {
                                    "row": 62,
                                    "column": 6
                                  },
                                  "end": {
                                    "row": 62,
                                    "column": 93
                                  },
                                  "text": "if (!util.equalsUint8Array(ctTag, tag)) throw new Error('Authentication tag mismatch');",
                                  "children": [
                                    {
                                      "type": "if",
                                      "start": {
                                        "row": 62,
                                        "column": 6
                                      },
                                      "end": {
                                        "row": 62,
                                        "column": 8
                                      },
                                      "text": "if"
                                    },
                                    {
                                      "type": "parenthesized_expression",
                                      "start": {
                                        "row": 62,
                                        "column": 9
                                      },
                                      "end": {
                                        "row": 62,
                                        "column": 45
                                      },
                                      "text": "(!util.equalsUint8Array(ctTag, tag))",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 62,
                                            "column": 9
                                          },
                                          "end": {
                                            "row": 62,
                                            "column": 10
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "unary_expression",
                                          "start": {
                                            "row": 62,
                                            "column": 10
                                          },
                                          "end": {
                                            "row": 62,
                                            "column": 44
                                          },
                                          "text": "!util.equalsUint8Array(ctTag, tag)",
                                          "children": [
                                            {
                                              "type": "!",
                                              "start": {
                                                "row": 62,
                                                "column": 10
                                              },
                                              "end": {
                                                "row": 62,
                                                "column": 11
                                              },
                                              "text": "!"
                                            },
                                            {
                                              "type": "call_expression",
                                              "start": {
                                                "row": 62,
                                                "column": 11
                                              },
                                              "end": {
                                                "row": 62,
                                                "column": 44
                                              },
                                              "text": "util.equalsUint8Array(ctTag, tag)",
                                              "children": [
                                                {
                                                  "type": "member_expression",
                                                  "start": {
                                                    "row": 62,
                                                    "column": 11
                                                  },
                                                  "end": {
                                                    "row": 62,
                                                    "column": 32
                                                  },
                                                  "text": "util.equalsUint8Array",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 62,
                                                        "column": 11
                                                      },
                                                      "end": {
                                                        "row": 62,
                                                        "column": 15
                                                      },
                                                      "text": "util"
                                                    },
                                                    {
                                                      "type": ".",
                                                      "start": {
                                                        "row": 62,
                                                        "column": 15
                                                      },
                                                      "end": {
                                                        "row": 62,
                                                        "column": 16
                                                      },
                                                      "text": "."
                                                    },
                                                    {
                                                      "type": "property_identifier",
                                                      "start": {
                                                        "row": 62,
                                                        "column": 16
                                                      },
                                                      "end": {
                                                        "row": 62,
                                                        "column": 32
                                                      },
                                                      "text": "equalsUint8Array"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "arguments",
                                                  "start": {
                                                    "row": 62,
                                                    "column": 32
                                                  },
                                                  "end": {
                                                    "row": 62,
                                                    "column": 44
                                                  },
                                                  "text": "(ctTag, tag)",
                                                  "children": [
                                                    {
                                                      "type": "(",
                                                      "start": {
                                                        "row": 62,
                                                        "column": 32
                                                      },
                                                      "end": {
                                                        "row": 62,
                                                        "column": 33
                                                      },
                                                      "text": "("
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 62,
                                                        "column": 33
                                                      },
                                                      "end": {
                                                        "row": 62,
                                                        "column": 38
                                                      },
                                                      "text": "ctTag"
                                                    },
                                                    {
                                                      "type": ",",
                                                      "start": {
                                                        "row": 62,
                                                        "column": 38
                                                      },
                                                      "end": {
                                                        "row": 62,
                                                        "column": 39
                                                      },
                                                      "text": ","
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 62,
                                                        "column": 40
                                                      },
                                                      "end": {
                                                        "row": 62,
                                                        "column": 43
                                                      },
                                                      "text": "tag"
                                                    },
                                                    {
                                                      "type": ")",
                                                      "start": {
                                                        "row": 62,
                                                        "column": 43
                                                      },
                                                      "end": {
                                                        "row": 62,
                                                        "column": 44
                                                      },
                                                      "text": ")"
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 62,
                                            "column": 44
                                          },
                                          "end": {
                                            "row": 62,
                                            "column": 45
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "throw_statement",
                                      "start": {
                                        "row": 62,
                                        "column": 46
                                      },
                                      "end": {
                                        "row": 62,
                                        "column": 93
                                      },
                                      "text": "throw new Error('Authentication tag mismatch');",
                                      "children": [
                                        {
                                          "type": "throw",
                                          "start": {
                                            "row": 62,
                                            "column": 46
                                          },
                                          "end": {
                                            "row": 62,
                                            "column": 51
                                          },
                                          "text": "throw"
                                        },
                                        {
                                          "type": "new_expression",
                                          "start": {
                                            "row": 62,
                                            "column": 52
                                          },
                                          "end": {
                                            "row": 62,
                                            "column": 92
                                          },
                                          "text": "new Error('Authentication tag mismatch')",
                                          "children": [
                                            {
                                              "type": "new",
                                              "start": {
                                                "row": 62,
                                                "column": 52
                                              },
                                              "end": {
                                                "row": 62,
                                                "column": 55
                                              },
                                              "text": "new"
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 62,
                                                "column": 56
                                              },
                                              "end": {
                                                "row": 62,
                                                "column": 61
                                              },
                                              "text": "Error"
                                            },
                                            {
                                              "type": "arguments",
                                              "start": {
                                                "row": 62,
                                                "column": 61
                                              },
                                              "end": {
                                                "row": 62,
                                                "column": 92
                                              },
                                              "text": "('Authentication tag mismatch')",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 62,
                                                    "column": 61
                                                  },
                                                  "end": {
                                                    "row": 62,
                                                    "column": 62
                                                  },
                                                  "text": "("
                                                },
                                                {
                                                  "type": "string",
                                                  "start": {
                                                    "row": 62,
                                                    "column": 62
                                                  },
                                                  "end": {
                                                    "row": 62,
                                                    "column": 91
                                                  },
                                                  "text": "'Authentication tag mismatch'",
                                                  "children": [
                                                    {
                                                      "type": "'",
                                                      "start": {
                                                        "row": 62,
                                                        "column": 62
                                                      },
                                                      "end": {
                                                        "row": 62,
                                                        "column": 63
                                                      },
                                                      "text": "'"
                                                    },
                                                    {
                                                      "type": "string_fragment",
                                                      "start": {
                                                        "row": 62,
                                                        "column": 63
                                                      },
                                                      "end": {
                                                        "row": 62,
                                                        "column": 90
                                                      },
                                                      "text": "Authentication tag mismatch"
                                                    },
                                                    {
                                                      "type": "'",
                                                      "start": {
                                                        "row": 62,
                                                        "column": 90
                                                      },
                                                      "end": {
                                                        "row": 62,
                                                        "column": 91
                                                      },
                                                      "text": "'"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 62,
                                                    "column": 91
                                                  },
                                                  "end": {
                                                    "row": 62,
                                                    "column": 92
                                                  },
                                                  "text": ")"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start": {
                                            "row": 62,
                                            "column": 92
                                          },
                                          "end": {
                                            "row": 62,
                                            "column": 93
                                          },
                                          "text": ";"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "lexical_declaration",
                                  "start": {
                                    "row": 63,
                                    "column": 6
                                  },
                                  "end": {
                                    "row": 63,
                                    "column": 55
                                  },
                                  "text": "const plaintext = await ctr(ciphered, omacNonce);",
                                  "children": [
                                    {
                                      "type": "const",
                                      "start": {
                                        "row": 63,
                                        "column": 6
                                      },
                                      "end": {
                                        "row": 63,
                                        "column": 11
                                      },
                                      "text": "const"
                                    },
                                    {
                                      "type": "variable_declarator",
                                      "start": {
                                        "row": 63,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 63,
                                        "column": 54
                                      },
                                      "text": "plaintext = await ctr(ciphered, omacNonce)",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 63,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 63,
                                            "column": 21
                                          },
                                          "text": "plaintext"
                                        },
                                        {
                                          "type": "=",
                                          "start": {
                                            "row": 63,
                                            "column": 22
                                          },
                                          "end": {
                                            "row": 63,
                                            "column": 23
                                          },
                                          "text": "="
                                        },
                                        {
                                          "type": "await_expression",
                                          "start": {
                                            "row": 63,
                                            "column": 24
                                          },
                                          "end": {
                                            "row": 63,
                                            "column": 54
                                          },
                                          "text": "await ctr(ciphered, omacNonce)",
                                          "children": [
                                            {
                                              "type": "await",
                                              "start": {
                                                "row": 63,
                                                "column": 24
                                              },
                                              "end": {
                                                "row": 63,
                                                "column": 29
                                              },
                                              "text": "await"
                                            },
                                            {
                                              "type": "call_expression",
                                              "start": {
                                                "row": 63,
                                                "column": 30
                                              },
                                              "end": {
                                                "row": 63,
                                                "column": 54
                                              },
                                              "text": "ctr(ciphered, omacNonce)",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 63,
                                                    "column": 30
                                                  },
                                                  "end": {
                                                    "row": 63,
                                                    "column": 33
                                                  },
                                                  "text": "ctr"
                                                },
                                                {
                                                  "type": "arguments",
                                                  "start": {
                                                    "row": 63,
                                                    "column": 33
                                                  },
                                                  "end": {
                                                    "row": 63,
                                                    "column": 54
                                                  },
                                                  "text": "(ciphered, omacNonce)",
                                                  "children": [
                                                    {
                                                      "type": "(",
                                                      "start": {
                                                        "row": 63,
                                                        "column": 33
                                                      },
                                                      "end": {
                                                        "row": 63,
                                                        "column": 34
                                                      },
                                                      "text": "("
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 63,
                                                        "column": 34
                                                      },
                                                      "end": {
                                                        "row": 63,
                                                        "column": 42
                                                      },
                                                      "text": "ciphered"
                                                    },
                                                    {
                                                      "type": ",",
                                                      "start": {
                                                        "row": 63,
                                                        "column": 42
                                                      },
                                                      "end": {
                                                        "row": 63,
                                                        "column": 43
                                                      },
                                                      "text": ","
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 63,
                                                        "column": 44
                                                      },
                                                      "end": {
                                                        "row": 63,
                                                        "column": 53
                                                      },
                                                      "text": "omacNonce"
                                                    },
                                                    {
                                                      "type": ")",
                                                      "start": {
                                                        "row": 63,
                                                        "column": 53
                                                      },
                                                      "end": {
                                                        "row": 63,
                                                        "column": 54
                                                      },
                                                      "text": ")"
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start": {
                                        "row": 63,
                                        "column": 54
                                      },
                                      "end": {
                                        "row": 63,
                                        "column": 55
                                      },
                                      "text": ";"
                                    }
                                  ]
                                },
                                {
                                  "type": "return_statement",
                                  "start": {
                                    "row": 64,
                                    "column": 6
                                  },
                                  "end": {
                                    "row": 64,
                                    "column": 23
                                  },
                                  "text": "return plaintext;",
                                  "children": [
                                    {
                                      "type": "return",
                                      "start": {
                                        "row": 64,
                                        "column": 6
                                      },
                                      "end": {
                                        "row": 64,
                                        "column": 12
                                      },
                                      "text": "return"
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 64,
                                        "column": 13
                                      },
                                      "end": {
                                        "row": 64,
                                        "column": 22
                                      },
                                      "text": "plaintext"
                                    },
                                    {
                                      "type": ";",
                                      "start": {
                                        "row": 64,
                                        "column": 22
                                      },
                                      "end": {
                                        "row": 64,
                                        "column": 23
                                      },
                                      "text": ";"
                                    }
                                  ]
                                },
                                {
                                  "type": "}",
                                  "start": {
                                    "row": 65,
                                    "column": 4
                                  },
                                  "end": {
                                    "row": 65,
                                    "column": 5
                                  },
                                  "text": "}"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start": {
                        "row": 66,
                        "column": 2
                      },
                      "end": {
                        "row": 66,
                        "column": 3
                      },
                      "text": "}"
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 66,
                    "column": 3
                  },
                  "end": {
                    "row": 66,
                    "column": 4
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "}",
              "start": {
                "row": 67,
                "column": 0
              },
              "end": {
                "row": 67,
                "column": 1
              },
              "text": "}"
            }
          ]
        }
      ]
    }
  ]
}