{
  "type": "program",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 21,
    "column": 5
  },
  "text": "function isFunction(value) {\n      if (!isObject(value)) {\n        return false;\n      }//--•\n\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in older versions of Chrome and Safari which return 'function' for regexes\n      // and Safari 8 which returns 'object' for typed array constructors.\n      var tag = objToString.call(value);\n\n      // Return true if this looks like a function, an \"async function\", a \"generator\", or a \"proxy\".\n      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n\n      // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n      // ^^^^\n      // PATCHED FROM https://github.com/lodash/lodash/commit/95bc54a3ddc7a25f5e134f5b376a0d1d96118f49\n      // Note that, in Lodash 4, this looks like:\n      // ```\n      // return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n      // ```\n      // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n    }",
  "children": [
    {
      "type": "function_declaration",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 21,
        "column": 5
      },
      "text": "function isFunction(value) {\n      if (!isObject(value)) {\n        return false;\n      }//--•\n\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in older versions of Chrome and Safari which return 'function' for regexes\n      // and Safari 8 which returns 'object' for typed array constructors.\n      var tag = objToString.call(value);\n\n      // Return true if this looks like a function, an \"async function\", a \"generator\", or a \"proxy\".\n      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n\n      // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n      // ^^^^\n      // PATCHED FROM https://github.com/lodash/lodash/commit/95bc54a3ddc7a25f5e134f5b376a0d1d96118f49\n      // Note that, in Lodash 4, this looks like:\n      // ```\n      // return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n      // ```\n      // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n    }",
      "children": [
        {
          "type": "function",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 8
          },
          "text": "function"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 9
          },
          "end": {
            "row": 0,
            "column": 19
          },
          "text": "isFunction"
        },
        {
          "type": "formal_parameters",
          "start": {
            "row": 0,
            "column": 19
          },
          "end": {
            "row": 0,
            "column": 26
          },
          "text": "(value)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 19
              },
              "end": {
                "row": 0,
                "column": 20
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 20
              },
              "end": {
                "row": 0,
                "column": 25
              },
              "text": "value"
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 25
              },
              "end": {
                "row": 0,
                "column": 26
              },
              "text": ")"
            }
          ]
        },
        {
          "type": "statement_block",
          "start": {
            "row": 0,
            "column": 27
          },
          "end": {
            "row": 21,
            "column": 5
          },
          "text": "{\n      if (!isObject(value)) {\n        return false;\n      }//--•\n\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in older versions of Chrome and Safari which return 'function' for regexes\n      // and Safari 8 which returns 'object' for typed array constructors.\n      var tag = objToString.call(value);\n\n      // Return true if this looks like a function, an \"async function\", a \"generator\", or a \"proxy\".\n      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n\n      // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n      // ^^^^\n      // PATCHED FROM https://github.com/lodash/lodash/commit/95bc54a3ddc7a25f5e134f5b376a0d1d96118f49\n      // Note that, in Lodash 4, this looks like:\n      // ```\n      // return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n      // ```\n      // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n    }",
          "children": [
            {
              "type": "{",
              "start": {
                "row": 0,
                "column": 27
              },
              "end": {
                "row": 0,
                "column": 28
              },
              "text": "{"
            },
            {
              "type": "if_statement",
              "start": {
                "row": 1,
                "column": 6
              },
              "end": {
                "row": 3,
                "column": 14
              },
              "text": "if (!isObject(value)) {\n        return false;\n      }//--•\n\n",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 1,
                    "column": 6
                  },
                  "end": {
                    "row": 1,
                    "column": 8
                  },
                  "text": "if"
                },
                {
                  "type": "parenthesized_expression",
                  "start": {
                    "row": 1,
                    "column": 9
                  },
                  "end": {
                    "row": 1,
                    "column": 27
                  },
                  "text": "(!isObject(value))",
                  "children": [
                    {
                      "type": "(",
                      "start": {
                        "row": 1,
                        "column": 9
                      },
                      "end": {
                        "row": 1,
                        "column": 10
                      },
                      "text": "("
                    },
                    {
                      "type": "unary_expression",
                      "start": {
                        "row": 1,
                        "column": 10
                      },
                      "end": {
                        "row": 1,
                        "column": 26
                      },
                      "text": "!isObject(value)",
                      "children": [
                        {
                          "type": "!",
                          "start": {
                            "row": 1,
                            "column": 10
                          },
                          "end": {
                            "row": 1,
                            "column": 11
                          },
                          "text": "!"
                        },
                        {
                          "type": "call_expression",
                          "start": {
                            "row": 1,
                            "column": 11
                          },
                          "end": {
                            "row": 1,
                            "column": 26
                          },
                          "text": "isObject(value)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 1,
                                "column": 11
                              },
                              "end": {
                                "row": 1,
                                "column": 19
                              },
                              "text": "isObject"
                            },
                            {
                              "type": "arguments",
                              "start": {
                                "row": 1,
                                "column": 19
                              },
                              "end": {
                                "row": 1,
                                "column": 26
                              },
                              "text": "(value)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 1,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 1,
                                    "column": 20
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 1,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 1,
                                    "column": 25
                                  },
                                  "text": "value"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 1,
                                    "column": 25
                                  },
                                  "end": {
                                    "row": 1,
                                    "column": 26
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start": {
                        "row": 1,
                        "column": 26
                      },
                      "end": {
                        "row": 1,
                        "column": 27
                      },
                      "text": ")"
                    }
                  ]
                },
                {
                  "type": "statement_block",
                  "start": {
                    "row": 1,
                    "column": 28
                  },
                  "end": {
                    "row": 3,
                    "column": 14
                  },
                  "text": "{\n        return false;\n      }//--•\n\n",
                  "children": [
                    {
                      "type": "{",
                      "start": {
                        "row": 1,
                        "column": 28
                      },
                      "end": {
                        "row": 1,
                        "column": 29
                      },
                      "text": "{"
                    },
                    {
                      "type": "return_statement",
                      "start": {
                        "row": 2,
                        "column": 8
                      },
                      "end": {
                        "row": 2,
                        "column": 21
                      },
                      "text": "return false;",
                      "children": [
                        {
                          "type": "return",
                          "start": {
                            "row": 2,
                            "column": 8
                          },
                          "end": {
                            "row": 2,
                            "column": 14
                          },
                          "text": "return"
                        },
                        {
                          "type": "false",
                          "start": {
                            "row": 2,
                            "column": 15
                          },
                          "end": {
                            "row": 2,
                            "column": 20
                          },
                          "text": "false"
                        },
                        {
                          "type": ";",
                          "start": {
                            "row": 2,
                            "column": 20
                          },
                          "end": {
                            "row": 2,
                            "column": 21
                          },
                          "text": ";"
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start": {
                        "row": 3,
                        "column": 6
                      },
                      "end": {
                        "row": 3,
                        "column": 7
                      },
                      "text": "}"
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 3,
                        "column": 7
                      },
                      "end": {
                        "row": 3,
                        "column": 14
                      },
                      "text": "//--•\n\n"
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 5,
                "column": 6
              },
              "end": {
                "row": 5,
                "column": 78
              },
              "text": " The use of `Object#toString` avoids issues with the `typeof` operator\n "
            },
            {
              "type": "comment",
              "start": {
                "row": 6,
                "column": 6
              },
              "end": {
                "row": 6,
                "column": 83
              },
              "text": " in older versions of Chrome and Safari which return 'function' for regexes\n "
            },
            {
              "type": "comment",
              "start": {
                "row": 7,
                "column": 6
              },
              "end": {
                "row": 7,
                "column": 74
              },
              "text": " and Safari 8 which returns 'object' for typed array constructors.\n "
            },
            {
              "type": "variable_declaration",
              "start": {
                "row": 8,
                "column": 6
              },
              "end": {
                "row": 8,
                "column": 40
              },
              "text": "r tag = objToString.call(value);\n\n",
              "children": [
                {
                  "type": "var",
                  "start": {
                    "row": 8,
                    "column": 6
                  },
                  "end": {
                    "row": 8,
                    "column": 9
                  },
                  "text": "r t"
                },
                {
                  "type": "variable_declarator",
                  "start": {
                    "row": 8,
                    "column": 10
                  },
                  "end": {
                    "row": 8,
                    "column": 39
                  },
                  "text": "g = objToString.call(value);\n",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 8,
                        "column": 10
                      },
                      "end": {
                        "row": 8,
                        "column": 13
                      },
                      "text": "g ="
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 8,
                        "column": 14
                      },
                      "end": {
                        "row": 8,
                        "column": 15
                      },
                      "text": "o"
                    },
                    {
                      "type": "call_expression",
                      "start": {
                        "row": 8,
                        "column": 16
                      },
                      "end": {
                        "row": 8,
                        "column": 39
                      },
                      "text": "jToString.call(value);\n",
                      "children": [
                        {
                          "type": "member_expression",
                          "start": {
                            "row": 8,
                            "column": 16
                          },
                          "end": {
                            "row": 8,
                            "column": 32
                          },
                          "text": "jToString.call(v",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 8,
                                "column": 16
                              },
                              "end": {
                                "row": 8,
                                "column": 27
                              },
                              "text": "jToString.c"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 8,
                                "column": 27
                              },
                              "end": {
                                "row": 8,
                                "column": 28
                              },
                              "text": "a"
                            },
                            {
                              "type": "property_identifier",
                              "start": {
                                "row": 8,
                                "column": 28
                              },
                              "end": {
                                "row": 8,
                                "column": 32
                              },
                              "text": "ll(v"
                            }
                          ]
                        },
                        {
                          "type": "arguments",
                          "start": {
                            "row": 8,
                            "column": 32
                          },
                          "end": {
                            "row": 8,
                            "column": 39
                          },
                          "text": "alue);\n",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 8,
                                "column": 32
                              },
                              "end": {
                                "row": 8,
                                "column": 33
                              },
                              "text": "a"
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 8,
                                "column": 33
                              },
                              "end": {
                                "row": 8,
                                "column": 38
                              },
                              "text": "lue);"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 8,
                                "column": 38
                              },
                              "end": {
                                "row": 8,
                                "column": 39
                              },
                              "text": "\n"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 8,
                    "column": 39
                  },
                  "end": {
                    "row": 8,
                    "column": 40
                  },
                  "text": "\n"
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 10,
                "column": 6
              },
              "end": {
                "row": 10,
                "column": 101
              },
              "text": " Return true if this looks like a function, an \"async function\", a \"generator\", or a \"proxy\".\n "
            },
            {
              "type": "return_statement",
              "start": {
                "row": 11,
                "column": 6
              },
              "end": {
                "row": 11,
                "column": 83
              },
              "text": "turn tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n\n",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 11,
                    "column": 6
                  },
                  "end": {
                    "row": 11,
                    "column": 12
                  },
                  "text": "turn t"
                },
                {
                  "type": "binary_expression",
                  "start": {
                    "row": 11,
                    "column": 13
                  },
                  "end": {
                    "row": 11,
                    "column": 82
                  },
                  "text": "g == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n",
                  "children": [
                    {
                      "type": "binary_expression",
                      "start": {
                        "row": 11,
                        "column": 13
                      },
                      "end": {
                        "row": 11,
                        "column": 63
                      },
                      "text": "g == funcTag || tag == genTag || tag == asyncTag |",
                      "children": [
                        {
                          "type": "binary_expression",
                          "start": {
                            "row": 11,
                            "column": 13
                          },
                          "end": {
                            "row": 11,
                            "column": 44
                          },
                          "text": "g == funcTag || tag == genTag |",
                          "children": [
                            {
                              "type": "binary_expression",
                              "start": {
                                "row": 11,
                                "column": 13
                              },
                              "end": {
                                "row": 11,
                                "column": 27
                              },
                              "text": "g == funcTag |",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 11,
                                    "column": 13
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 16
                                  },
                                  "text": "g ="
                                },
                                {
                                  "type": "==",
                                  "start": {
                                    "row": 11,
                                    "column": 17
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 19
                                  },
                                  "text": " f"
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 11,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 27
                                  },
                                  "text": "ncTag |"
                                }
                              ]
                            },
                            {
                              "type": "||",
                              "start": {
                                "row": 11,
                                "column": 28
                              },
                              "end": {
                                "row": 11,
                                "column": 30
                              },
                              "text": " t"
                            },
                            {
                              "type": "binary_expression",
                              "start": {
                                "row": 11,
                                "column": 31
                              },
                              "end": {
                                "row": 11,
                                "column": 44
                              },
                              "text": "g == genTag |",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 11,
                                    "column": 31
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 34
                                  },
                                  "text": "g ="
                                },
                                {
                                  "type": "==",
                                  "start": {
                                    "row": 11,
                                    "column": 35
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 37
                                  },
                                  "text": " g"
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 11,
                                    "column": 38
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 44
                                  },
                                  "text": "nTag |"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "||",
                          "start": {
                            "row": 11,
                            "column": 45
                          },
                          "end": {
                            "row": 11,
                            "column": 47
                          },
                          "text": " t"
                        },
                        {
                          "type": "binary_expression",
                          "start": {
                            "row": 11,
                            "column": 48
                          },
                          "end": {
                            "row": 11,
                            "column": 63
                          },
                          "text": "g == asyncTag |",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 11,
                                "column": 48
                              },
                              "end": {
                                "row": 11,
                                "column": 51
                              },
                              "text": "g ="
                            },
                            {
                              "type": "==",
                              "start": {
                                "row": 11,
                                "column": 52
                              },
                              "end": {
                                "row": 11,
                                "column": 54
                              },
                              "text": " a"
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 11,
                                "column": 55
                              },
                              "end": {
                                "row": 11,
                                "column": 63
                              },
                              "text": "yncTag |"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "||",
                      "start": {
                        "row": 11,
                        "column": 64
                      },
                      "end": {
                        "row": 11,
                        "column": 66
                      },
                      "text": " t"
                    },
                    {
                      "type": "binary_expression",
                      "start": {
                        "row": 11,
                        "column": 67
                      },
                      "end": {
                        "row": 11,
                        "column": 82
                      },
                      "text": "g == proxyTag;\n",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 11,
                            "column": 67
                          },
                          "end": {
                            "row": 11,
                            "column": 70
                          },
                          "text": "g ="
                        },
                        {
                          "type": "==",
                          "start": {
                            "row": 11,
                            "column": 71
                          },
                          "end": {
                            "row": 11,
                            "column": 73
                          },
                          "text": " p"
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 11,
                            "column": 74
                          },
                          "end": {
                            "row": 11,
                            "column": 82
                          },
                          "text": "oxyTag;\n"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 11,
                    "column": 82
                  },
                  "end": {
                    "row": 11,
                    "column": 83
                  },
                  "text": "\n"
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 13,
                "column": 6
              },
              "end": {
                "row": 13,
                "column": 104
              },
              "text": " - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n "
            },
            {
              "type": "comment",
              "start": {
                "row": 14,
                "column": 6
              },
              "end": {
                "row": 14,
                "column": 13
              },
              "text": " ^^^^\n "
            },
            {
              "type": "comment",
              "start": {
                "row": 15,
                "column": 6
              },
              "end": {
                "row": 15,
                "column": 102
              },
              "text": " PATCHED FROM https://github.com/lodash/lodash/commit/95bc54a3ddc7a25f5e134f5b376a0d1d96118f49\n "
            },
            {
              "type": "comment",
              "start": {
                "row": 16,
                "column": 6
              },
              "end": {
                "row": 16,
                "column": 49
              },
              "text": " Note that, in Lodash 4, this looks like:\n "
            },
            {
              "type": "comment",
              "start": {
                "row": 17,
                "column": 6
              },
              "end": {
                "row": 17,
                "column": 12
              },
              "text": " ```\n "
            },
            {
              "type": "comment",
              "start": {
                "row": 18,
                "column": 6
              },
              "end": {
                "row": 18,
                "column": 86
              },
              "text": " return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n "
            },
            {
              "type": "comment",
              "start": {
                "row": 19,
                "column": 6
              },
              "end": {
                "row": 19,
                "column": 12
              },
              "text": " ```\n "
            },
            {
              "type": "comment",
              "start": {
                "row": 20,
                "column": 6
              },
              "end": {
                "row": 20,
                "column": 104
              },
              "text": " - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n "
            },
            {
              "type": "}",
              "start": {
                "row": 21,
                "column": 4
              },
              "end": {
                "row": 21,
                "column": 5
              },
              "text": ""
            }
          ]
        }
      ]
    }
  ]
}