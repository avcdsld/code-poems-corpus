{
  "type": "program",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 29,
    "column": 1
  },
  "text": "function extendData({\n  data,\n  lengthAngle: totalAngle,\n  totalValue,\n  paddingAngle,\n}) {\n  const total = totalValue || sumValues(data);\n  const normalizedTotalAngle = valueBetween(totalAngle, -360, 360);\n  const numberOfPaddings =\n    Math.abs(normalizedTotalAngle) === 360 ? data.length : data.length - 1;\n  const degreesTakenByPadding =\n    Math.abs(paddingAngle) * numberOfPaddings * Math.sign(normalizedTotalAngle);\n  const singlePaddingDegrees = degreesTakenByPadding / numberOfPaddings;\n  const degreesTakenByPaths = normalizedTotalAngle - degreesTakenByPadding;\n  let lastSegmentEnd = 0;\n\n  return data.map(dataEntry => {\n    const valueInPercentage = (dataEntry.value / total) * 100;\n    const degrees = extractPercentage(degreesTakenByPaths, valueInPercentage);\n    const startOffset = lastSegmentEnd;\n    lastSegmentEnd = lastSegmentEnd + degrees + singlePaddingDegrees;\n\n    return {\n      percentage: valueInPercentage,\n      degrees,\n      startOffset,\n      ...dataEntry,\n    };\n  });\n}",
  "children": [
    {
      "type": "function_declaration",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 29,
        "column": 1
      },
      "text": "function extendData({\n  data,\n  lengthAngle: totalAngle,\n  totalValue,\n  paddingAngle,\n}) {\n  const total = totalValue || sumValues(data);\n  const normalizedTotalAngle = valueBetween(totalAngle, -360, 360);\n  const numberOfPaddings =\n    Math.abs(normalizedTotalAngle) === 360 ? data.length : data.length - 1;\n  const degreesTakenByPadding =\n    Math.abs(paddingAngle) * numberOfPaddings * Math.sign(normalizedTotalAngle);\n  const singlePaddingDegrees = degreesTakenByPadding / numberOfPaddings;\n  const degreesTakenByPaths = normalizedTotalAngle - degreesTakenByPadding;\n  let lastSegmentEnd = 0;\n\n  return data.map(dataEntry => {\n    const valueInPercentage = (dataEntry.value / total) * 100;\n    const degrees = extractPercentage(degreesTakenByPaths, valueInPercentage);\n    const startOffset = lastSegmentEnd;\n    lastSegmentEnd = lastSegmentEnd + degrees + singlePaddingDegrees;\n\n    return {\n      percentage: valueInPercentage,\n      degrees,\n      startOffset,\n      ...dataEntry,\n    };\n  });\n}",
      "children": [
        {
          "type": "function",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 8
          },
          "text": "function"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 9
          },
          "end": {
            "row": 0,
            "column": 19
          },
          "text": "extendData"
        },
        {
          "type": "formal_parameters",
          "start": {
            "row": 0,
            "column": 19
          },
          "end": {
            "row": 5,
            "column": 2
          },
          "text": "({\n  data,\n  lengthAngle: totalAngle,\n  totalValue,\n  paddingAngle,\n})",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 19
              },
              "end": {
                "row": 0,
                "column": 20
              },
              "text": "("
            },
            {
              "type": "object_pattern",
              "start": {
                "row": 0,
                "column": 20
              },
              "end": {
                "row": 5,
                "column": 1
              },
              "text": "{\n  data,\n  lengthAngle: totalAngle,\n  totalValue,\n  paddingAngle,\n}",
              "children": [
                {
                  "type": "{",
                  "start": {
                    "row": 0,
                    "column": 20
                  },
                  "end": {
                    "row": 0,
                    "column": 21
                  },
                  "text": "{"
                },
                {
                  "type": "shorthand_property_identifier_pattern",
                  "start": {
                    "row": 1,
                    "column": 2
                  },
                  "end": {
                    "row": 1,
                    "column": 6
                  },
                  "text": "data"
                },
                {
                  "type": ",",
                  "start": {
                    "row": 1,
                    "column": 6
                  },
                  "end": {
                    "row": 1,
                    "column": 7
                  },
                  "text": ","
                },
                {
                  "type": "pair_pattern",
                  "start": {
                    "row": 2,
                    "column": 2
                  },
                  "end": {
                    "row": 2,
                    "column": 25
                  },
                  "text": "lengthAngle: totalAngle",
                  "children": [
                    {
                      "type": "property_identifier",
                      "start": {
                        "row": 2,
                        "column": 2
                      },
                      "end": {
                        "row": 2,
                        "column": 13
                      },
                      "text": "lengthAngle"
                    },
                    {
                      "type": ":",
                      "start": {
                        "row": 2,
                        "column": 13
                      },
                      "end": {
                        "row": 2,
                        "column": 14
                      },
                      "text": ":"
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 2,
                        "column": 15
                      },
                      "end": {
                        "row": 2,
                        "column": 25
                      },
                      "text": "totalAngle"
                    }
                  ]
                },
                {
                  "type": ",",
                  "start": {
                    "row": 2,
                    "column": 25
                  },
                  "end": {
                    "row": 2,
                    "column": 26
                  },
                  "text": ","
                },
                {
                  "type": "shorthand_property_identifier_pattern",
                  "start": {
                    "row": 3,
                    "column": 2
                  },
                  "end": {
                    "row": 3,
                    "column": 12
                  },
                  "text": "totalValue"
                },
                {
                  "type": ",",
                  "start": {
                    "row": 3,
                    "column": 12
                  },
                  "end": {
                    "row": 3,
                    "column": 13
                  },
                  "text": ","
                },
                {
                  "type": "shorthand_property_identifier_pattern",
                  "start": {
                    "row": 4,
                    "column": 2
                  },
                  "end": {
                    "row": 4,
                    "column": 14
                  },
                  "text": "paddingAngle"
                },
                {
                  "type": ",",
                  "start": {
                    "row": 4,
                    "column": 14
                  },
                  "end": {
                    "row": 4,
                    "column": 15
                  },
                  "text": ","
                },
                {
                  "type": "}",
                  "start": {
                    "row": 5,
                    "column": 0
                  },
                  "end": {
                    "row": 5,
                    "column": 1
                  },
                  "text": "}"
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 5,
                "column": 1
              },
              "end": {
                "row": 5,
                "column": 2
              },
              "text": ")"
            }
          ]
        },
        {
          "type": "statement_block",
          "start": {
            "row": 5,
            "column": 3
          },
          "end": {
            "row": 29,
            "column": 1
          },
          "text": "{\n  const total = totalValue || sumValues(data);\n  const normalizedTotalAngle = valueBetween(totalAngle, -360, 360);\n  const numberOfPaddings =\n    Math.abs(normalizedTotalAngle) === 360 ? data.length : data.length - 1;\n  const degreesTakenByPadding =\n    Math.abs(paddingAngle) * numberOfPaddings * Math.sign(normalizedTotalAngle);\n  const singlePaddingDegrees = degreesTakenByPadding / numberOfPaddings;\n  const degreesTakenByPaths = normalizedTotalAngle - degreesTakenByPadding;\n  let lastSegmentEnd = 0;\n\n  return data.map(dataEntry => {\n    const valueInPercentage = (dataEntry.value / total) * 100;\n    const degrees = extractPercentage(degreesTakenByPaths, valueInPercentage);\n    const startOffset = lastSegmentEnd;\n    lastSegmentEnd = lastSegmentEnd + degrees + singlePaddingDegrees;\n\n    return {\n      percentage: valueInPercentage,\n      degrees,\n      startOffset,\n      ...dataEntry,\n    };\n  });\n}",
          "children": [
            {
              "type": "{",
              "start": {
                "row": 5,
                "column": 3
              },
              "end": {
                "row": 5,
                "column": 4
              },
              "text": "{"
            },
            {
              "type": "lexical_declaration",
              "start": {
                "row": 6,
                "column": 2
              },
              "end": {
                "row": 6,
                "column": 46
              },
              "text": "const total = totalValue || sumValues(data);",
              "children": [
                {
                  "type": "const",
                  "start": {
                    "row": 6,
                    "column": 2
                  },
                  "end": {
                    "row": 6,
                    "column": 7
                  },
                  "text": "const"
                },
                {
                  "type": "variable_declarator",
                  "start": {
                    "row": 6,
                    "column": 8
                  },
                  "end": {
                    "row": 6,
                    "column": 45
                  },
                  "text": "total = totalValue || sumValues(data)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 6,
                        "column": 8
                      },
                      "end": {
                        "row": 6,
                        "column": 13
                      },
                      "text": "total"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 6,
                        "column": 14
                      },
                      "end": {
                        "row": 6,
                        "column": 15
                      },
                      "text": "="
                    },
                    {
                      "type": "binary_expression",
                      "start": {
                        "row": 6,
                        "column": 16
                      },
                      "end": {
                        "row": 6,
                        "column": 45
                      },
                      "text": "totalValue || sumValues(data)",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 6,
                            "column": 16
                          },
                          "end": {
                            "row": 6,
                            "column": 26
                          },
                          "text": "totalValue"
                        },
                        {
                          "type": "||",
                          "start": {
                            "row": 6,
                            "column": 27
                          },
                          "end": {
                            "row": 6,
                            "column": 29
                          },
                          "text": "||"
                        },
                        {
                          "type": "call_expression",
                          "start": {
                            "row": 6,
                            "column": 30
                          },
                          "end": {
                            "row": 6,
                            "column": 45
                          },
                          "text": "sumValues(data)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 6,
                                "column": 30
                              },
                              "end": {
                                "row": 6,
                                "column": 39
                              },
                              "text": "sumValues"
                            },
                            {
                              "type": "arguments",
                              "start": {
                                "row": 6,
                                "column": 39
                              },
                              "end": {
                                "row": 6,
                                "column": 45
                              },
                              "text": "(data)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 6,
                                    "column": 39
                                  },
                                  "end": {
                                    "row": 6,
                                    "column": 40
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 6,
                                    "column": 40
                                  },
                                  "end": {
                                    "row": 6,
                                    "column": 44
                                  },
                                  "text": "data"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 6,
                                    "column": 44
                                  },
                                  "end": {
                                    "row": 6,
                                    "column": 45
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 6,
                    "column": 45
                  },
                  "end": {
                    "row": 6,
                    "column": 46
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "lexical_declaration",
              "start": {
                "row": 7,
                "column": 2
              },
              "end": {
                "row": 7,
                "column": 67
              },
              "text": "const normalizedTotalAngle = valueBetween(totalAngle, -360, 360);",
              "children": [
                {
                  "type": "const",
                  "start": {
                    "row": 7,
                    "column": 2
                  },
                  "end": {
                    "row": 7,
                    "column": 7
                  },
                  "text": "const"
                },
                {
                  "type": "variable_declarator",
                  "start": {
                    "row": 7,
                    "column": 8
                  },
                  "end": {
                    "row": 7,
                    "column": 66
                  },
                  "text": "normalizedTotalAngle = valueBetween(totalAngle, -360, 360)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 7,
                        "column": 8
                      },
                      "end": {
                        "row": 7,
                        "column": 28
                      },
                      "text": "normalizedTotalAngle"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 7,
                        "column": 29
                      },
                      "end": {
                        "row": 7,
                        "column": 30
                      },
                      "text": "="
                    },
                    {
                      "type": "call_expression",
                      "start": {
                        "row": 7,
                        "column": 31
                      },
                      "end": {
                        "row": 7,
                        "column": 66
                      },
                      "text": "valueBetween(totalAngle, -360, 360)",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 7,
                            "column": 31
                          },
                          "end": {
                            "row": 7,
                            "column": 43
                          },
                          "text": "valueBetween"
                        },
                        {
                          "type": "arguments",
                          "start": {
                            "row": 7,
                            "column": 43
                          },
                          "end": {
                            "row": 7,
                            "column": 66
                          },
                          "text": "(totalAngle, -360, 360)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 7,
                                "column": 43
                              },
                              "end": {
                                "row": 7,
                                "column": 44
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 7,
                                "column": 44
                              },
                              "end": {
                                "row": 7,
                                "column": 54
                              },
                              "text": "totalAngle"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 7,
                                "column": 54
                              },
                              "end": {
                                "row": 7,
                                "column": 55
                              },
                              "text": ","
                            },
                            {
                              "type": "unary_expression",
                              "start": {
                                "row": 7,
                                "column": 56
                              },
                              "end": {
                                "row": 7,
                                "column": 60
                              },
                              "text": "-360",
                              "children": [
                                {
                                  "type": "-",
                                  "start": {
                                    "row": 7,
                                    "column": 56
                                  },
                                  "end": {
                                    "row": 7,
                                    "column": 57
                                  },
                                  "text": "-"
                                },
                                {
                                  "type": "number",
                                  "start": {
                                    "row": 7,
                                    "column": 57
                                  },
                                  "end": {
                                    "row": 7,
                                    "column": 60
                                  },
                                  "text": "360"
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 7,
                                "column": 60
                              },
                              "end": {
                                "row": 7,
                                "column": 61
                              },
                              "text": ","
                            },
                            {
                              "type": "number",
                              "start": {
                                "row": 7,
                                "column": 62
                              },
                              "end": {
                                "row": 7,
                                "column": 65
                              },
                              "text": "360"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 7,
                                "column": 65
                              },
                              "end": {
                                "row": 7,
                                "column": 66
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 7,
                    "column": 66
                  },
                  "end": {
                    "row": 7,
                    "column": 67
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "lexical_declaration",
              "start": {
                "row": 8,
                "column": 2
              },
              "end": {
                "row": 9,
                "column": 75
              },
              "text": "const numberOfPaddings =\n    Math.abs(normalizedTotalAngle) === 360 ? data.length : data.length - 1;",
              "children": [
                {
                  "type": "const",
                  "start": {
                    "row": 8,
                    "column": 2
                  },
                  "end": {
                    "row": 8,
                    "column": 7
                  },
                  "text": "const"
                },
                {
                  "type": "variable_declarator",
                  "start": {
                    "row": 8,
                    "column": 8
                  },
                  "end": {
                    "row": 9,
                    "column": 74
                  },
                  "text": "numberOfPaddings =\n    Math.abs(normalizedTotalAngle) === 360 ? data.length : data.length - 1",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 8,
                        "column": 8
                      },
                      "end": {
                        "row": 8,
                        "column": 24
                      },
                      "text": "numberOfPaddings"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 8,
                        "column": 25
                      },
                      "end": {
                        "row": 8,
                        "column": 26
                      },
                      "text": "="
                    },
                    {
                      "type": "ternary_expression",
                      "start": {
                        "row": 9,
                        "column": 4
                      },
                      "end": {
                        "row": 9,
                        "column": 74
                      },
                      "text": "Math.abs(normalizedTotalAngle) === 360 ? data.length : data.length - 1",
                      "children": [
                        {
                          "type": "binary_expression",
                          "start": {
                            "row": 9,
                            "column": 4
                          },
                          "end": {
                            "row": 9,
                            "column": 42
                          },
                          "text": "Math.abs(normalizedTotalAngle) === 360",
                          "children": [
                            {
                              "type": "call_expression",
                              "start": {
                                "row": 9,
                                "column": 4
                              },
                              "end": {
                                "row": 9,
                                "column": 34
                              },
                              "text": "Math.abs(normalizedTotalAngle)",
                              "children": [
                                {
                                  "type": "member_expression",
                                  "start": {
                                    "row": 9,
                                    "column": 4
                                  },
                                  "end": {
                                    "row": 9,
                                    "column": 12
                                  },
                                  "text": "Math.abs",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 9,
                                        "column": 4
                                      },
                                      "end": {
                                        "row": 9,
                                        "column": 8
                                      },
                                      "text": "Math"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 9,
                                        "column": 8
                                      },
                                      "end": {
                                        "row": 9,
                                        "column": 9
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "property_identifier",
                                      "start": {
                                        "row": 9,
                                        "column": 9
                                      },
                                      "end": {
                                        "row": 9,
                                        "column": 12
                                      },
                                      "text": "abs"
                                    }
                                  ]
                                },
                                {
                                  "type": "arguments",
                                  "start": {
                                    "row": 9,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 9,
                                    "column": 34
                                  },
                                  "text": "(normalizedTotalAngle)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 9,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 9,
                                        "column": 13
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 9,
                                        "column": 13
                                      },
                                      "end": {
                                        "row": 9,
                                        "column": 33
                                      },
                                      "text": "normalizedTotalAngle"
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 9,
                                        "column": 33
                                      },
                                      "end": {
                                        "row": 9,
                                        "column": 34
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "===",
                              "start": {
                                "row": 9,
                                "column": 35
                              },
                              "end": {
                                "row": 9,
                                "column": 38
                              },
                              "text": "==="
                            },
                            {
                              "type": "number",
                              "start": {
                                "row": 9,
                                "column": 39
                              },
                              "end": {
                                "row": 9,
                                "column": 42
                              },
                              "text": "360"
                            }
                          ]
                        },
                        {
                          "type": "?",
                          "start": {
                            "row": 9,
                            "column": 43
                          },
                          "end": {
                            "row": 9,
                            "column": 44
                          },
                          "text": "?"
                        },
                        {
                          "type": "member_expression",
                          "start": {
                            "row": 9,
                            "column": 45
                          },
                          "end": {
                            "row": 9,
                            "column": 56
                          },
                          "text": "data.length",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 9,
                                "column": 45
                              },
                              "end": {
                                "row": 9,
                                "column": 49
                              },
                              "text": "data"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 9,
                                "column": 49
                              },
                              "end": {
                                "row": 9,
                                "column": 50
                              },
                              "text": "."
                            },
                            {
                              "type": "property_identifier",
                              "start": {
                                "row": 9,
                                "column": 50
                              },
                              "end": {
                                "row": 9,
                                "column": 56
                              },
                              "text": "length"
                            }
                          ]
                        },
                        {
                          "type": ":",
                          "start": {
                            "row": 9,
                            "column": 57
                          },
                          "end": {
                            "row": 9,
                            "column": 58
                          },
                          "text": ":"
                        },
                        {
                          "type": "binary_expression",
                          "start": {
                            "row": 9,
                            "column": 59
                          },
                          "end": {
                            "row": 9,
                            "column": 74
                          },
                          "text": "data.length - 1",
                          "children": [
                            {
                              "type": "member_expression",
                              "start": {
                                "row": 9,
                                "column": 59
                              },
                              "end": {
                                "row": 9,
                                "column": 70
                              },
                              "text": "data.length",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 9,
                                    "column": 59
                                  },
                                  "end": {
                                    "row": 9,
                                    "column": 63
                                  },
                                  "text": "data"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 9,
                                    "column": 63
                                  },
                                  "end": {
                                    "row": 9,
                                    "column": 64
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "property_identifier",
                                  "start": {
                                    "row": 9,
                                    "column": 64
                                  },
                                  "end": {
                                    "row": 9,
                                    "column": 70
                                  },
                                  "text": "length"
                                }
                              ]
                            },
                            {
                              "type": "-",
                              "start": {
                                "row": 9,
                                "column": 71
                              },
                              "end": {
                                "row": 9,
                                "column": 72
                              },
                              "text": "-"
                            },
                            {
                              "type": "number",
                              "start": {
                                "row": 9,
                                "column": 73
                              },
                              "end": {
                                "row": 9,
                                "column": 74
                              },
                              "text": "1"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 9,
                    "column": 74
                  },
                  "end": {
                    "row": 9,
                    "column": 75
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "lexical_declaration",
              "start": {
                "row": 10,
                "column": 2
              },
              "end": {
                "row": 11,
                "column": 80
              },
              "text": "const degreesTakenByPadding =\n    Math.abs(paddingAngle) * numberOfPaddings * Math.sign(normalizedTotalAngle);",
              "children": [
                {
                  "type": "const",
                  "start": {
                    "row": 10,
                    "column": 2
                  },
                  "end": {
                    "row": 10,
                    "column": 7
                  },
                  "text": "const"
                },
                {
                  "type": "variable_declarator",
                  "start": {
                    "row": 10,
                    "column": 8
                  },
                  "end": {
                    "row": 11,
                    "column": 79
                  },
                  "text": "degreesTakenByPadding =\n    Math.abs(paddingAngle) * numberOfPaddings * Math.sign(normalizedTotalAngle)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 10,
                        "column": 8
                      },
                      "end": {
                        "row": 10,
                        "column": 29
                      },
                      "text": "degreesTakenByPadding"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 10,
                        "column": 30
                      },
                      "end": {
                        "row": 10,
                        "column": 31
                      },
                      "text": "="
                    },
                    {
                      "type": "binary_expression",
                      "start": {
                        "row": 11,
                        "column": 4
                      },
                      "end": {
                        "row": 11,
                        "column": 79
                      },
                      "text": "Math.abs(paddingAngle) * numberOfPaddings * Math.sign(normalizedTotalAngle)",
                      "children": [
                        {
                          "type": "binary_expression",
                          "start": {
                            "row": 11,
                            "column": 4
                          },
                          "end": {
                            "row": 11,
                            "column": 45
                          },
                          "text": "Math.abs(paddingAngle) * numberOfPaddings",
                          "children": [
                            {
                              "type": "call_expression",
                              "start": {
                                "row": 11,
                                "column": 4
                              },
                              "end": {
                                "row": 11,
                                "column": 26
                              },
                              "text": "Math.abs(paddingAngle)",
                              "children": [
                                {
                                  "type": "member_expression",
                                  "start": {
                                    "row": 11,
                                    "column": 4
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 12
                                  },
                                  "text": "Math.abs",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 11,
                                        "column": 4
                                      },
                                      "end": {
                                        "row": 11,
                                        "column": 8
                                      },
                                      "text": "Math"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 11,
                                        "column": 8
                                      },
                                      "end": {
                                        "row": 11,
                                        "column": 9
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "property_identifier",
                                      "start": {
                                        "row": 11,
                                        "column": 9
                                      },
                                      "end": {
                                        "row": 11,
                                        "column": 12
                                      },
                                      "text": "abs"
                                    }
                                  ]
                                },
                                {
                                  "type": "arguments",
                                  "start": {
                                    "row": 11,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 26
                                  },
                                  "text": "(paddingAngle)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 11,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 11,
                                        "column": 13
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 11,
                                        "column": 13
                                      },
                                      "end": {
                                        "row": 11,
                                        "column": 25
                                      },
                                      "text": "paddingAngle"
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 11,
                                        "column": 25
                                      },
                                      "end": {
                                        "row": 11,
                                        "column": 26
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "*",
                              "start": {
                                "row": 11,
                                "column": 27
                              },
                              "end": {
                                "row": 11,
                                "column": 28
                              },
                              "text": "*"
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 11,
                                "column": 29
                              },
                              "end": {
                                "row": 11,
                                "column": 45
                              },
                              "text": "numberOfPaddings"
                            }
                          ]
                        },
                        {
                          "type": "*",
                          "start": {
                            "row": 11,
                            "column": 46
                          },
                          "end": {
                            "row": 11,
                            "column": 47
                          },
                          "text": "*"
                        },
                        {
                          "type": "call_expression",
                          "start": {
                            "row": 11,
                            "column": 48
                          },
                          "end": {
                            "row": 11,
                            "column": 79
                          },
                          "text": "Math.sign(normalizedTotalAngle)",
                          "children": [
                            {
                              "type": "member_expression",
                              "start": {
                                "row": 11,
                                "column": 48
                              },
                              "end": {
                                "row": 11,
                                "column": 57
                              },
                              "text": "Math.sign",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 11,
                                    "column": 48
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 52
                                  },
                                  "text": "Math"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 11,
                                    "column": 52
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 53
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "property_identifier",
                                  "start": {
                                    "row": 11,
                                    "column": 53
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 57
                                  },
                                  "text": "sign"
                                }
                              ]
                            },
                            {
                              "type": "arguments",
                              "start": {
                                "row": 11,
                                "column": 57
                              },
                              "end": {
                                "row": 11,
                                "column": 79
                              },
                              "text": "(normalizedTotalAngle)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 11,
                                    "column": 57
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 58
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 11,
                                    "column": 58
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 78
                                  },
                                  "text": "normalizedTotalAngle"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 11,
                                    "column": 78
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 79
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 11,
                    "column": 79
                  },
                  "end": {
                    "row": 11,
                    "column": 80
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "lexical_declaration",
              "start": {
                "row": 12,
                "column": 2
              },
              "end": {
                "row": 12,
                "column": 72
              },
              "text": "const singlePaddingDegrees = degreesTakenByPadding / numberOfPaddings;",
              "children": [
                {
                  "type": "const",
                  "start": {
                    "row": 12,
                    "column": 2
                  },
                  "end": {
                    "row": 12,
                    "column": 7
                  },
                  "text": "const"
                },
                {
                  "type": "variable_declarator",
                  "start": {
                    "row": 12,
                    "column": 8
                  },
                  "end": {
                    "row": 12,
                    "column": 71
                  },
                  "text": "singlePaddingDegrees = degreesTakenByPadding / numberOfPaddings",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 12,
                        "column": 8
                      },
                      "end": {
                        "row": 12,
                        "column": 28
                      },
                      "text": "singlePaddingDegrees"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 12,
                        "column": 29
                      },
                      "end": {
                        "row": 12,
                        "column": 30
                      },
                      "text": "="
                    },
                    {
                      "type": "binary_expression",
                      "start": {
                        "row": 12,
                        "column": 31
                      },
                      "end": {
                        "row": 12,
                        "column": 71
                      },
                      "text": "degreesTakenByPadding / numberOfPaddings",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 12,
                            "column": 31
                          },
                          "end": {
                            "row": 12,
                            "column": 52
                          },
                          "text": "degreesTakenByPadding"
                        },
                        {
                          "type": "/",
                          "start": {
                            "row": 12,
                            "column": 53
                          },
                          "end": {
                            "row": 12,
                            "column": 54
                          },
                          "text": "/"
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 12,
                            "column": 55
                          },
                          "end": {
                            "row": 12,
                            "column": 71
                          },
                          "text": "numberOfPaddings"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 12,
                    "column": 71
                  },
                  "end": {
                    "row": 12,
                    "column": 72
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "lexical_declaration",
              "start": {
                "row": 13,
                "column": 2
              },
              "end": {
                "row": 13,
                "column": 75
              },
              "text": "const degreesTakenByPaths = normalizedTotalAngle - degreesTakenByPadding;",
              "children": [
                {
                  "type": "const",
                  "start": {
                    "row": 13,
                    "column": 2
                  },
                  "end": {
                    "row": 13,
                    "column": 7
                  },
                  "text": "const"
                },
                {
                  "type": "variable_declarator",
                  "start": {
                    "row": 13,
                    "column": 8
                  },
                  "end": {
                    "row": 13,
                    "column": 74
                  },
                  "text": "degreesTakenByPaths = normalizedTotalAngle - degreesTakenByPadding",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 13,
                        "column": 8
                      },
                      "end": {
                        "row": 13,
                        "column": 27
                      },
                      "text": "degreesTakenByPaths"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 13,
                        "column": 28
                      },
                      "end": {
                        "row": 13,
                        "column": 29
                      },
                      "text": "="
                    },
                    {
                      "type": "binary_expression",
                      "start": {
                        "row": 13,
                        "column": 30
                      },
                      "end": {
                        "row": 13,
                        "column": 74
                      },
                      "text": "normalizedTotalAngle - degreesTakenByPadding",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 13,
                            "column": 30
                          },
                          "end": {
                            "row": 13,
                            "column": 50
                          },
                          "text": "normalizedTotalAngle"
                        },
                        {
                          "type": "-",
                          "start": {
                            "row": 13,
                            "column": 51
                          },
                          "end": {
                            "row": 13,
                            "column": 52
                          },
                          "text": "-"
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 13,
                            "column": 53
                          },
                          "end": {
                            "row": 13,
                            "column": 74
                          },
                          "text": "degreesTakenByPadding"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 13,
                    "column": 74
                  },
                  "end": {
                    "row": 13,
                    "column": 75
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "lexical_declaration",
              "start": {
                "row": 14,
                "column": 2
              },
              "end": {
                "row": 14,
                "column": 25
              },
              "text": "let lastSegmentEnd = 0;",
              "children": [
                {
                  "type": "let",
                  "start": {
                    "row": 14,
                    "column": 2
                  },
                  "end": {
                    "row": 14,
                    "column": 5
                  },
                  "text": "let"
                },
                {
                  "type": "variable_declarator",
                  "start": {
                    "row": 14,
                    "column": 6
                  },
                  "end": {
                    "row": 14,
                    "column": 24
                  },
                  "text": "lastSegmentEnd = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 14,
                        "column": 6
                      },
                      "end": {
                        "row": 14,
                        "column": 20
                      },
                      "text": "lastSegmentEnd"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 14,
                        "column": 21
                      },
                      "end": {
                        "row": 14,
                        "column": 22
                      },
                      "text": "="
                    },
                    {
                      "type": "number",
                      "start": {
                        "row": 14,
                        "column": 23
                      },
                      "end": {
                        "row": 14,
                        "column": 24
                      },
                      "text": "0"
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 14,
                    "column": 24
                  },
                  "end": {
                    "row": 14,
                    "column": 25
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 16,
                "column": 2
              },
              "end": {
                "row": 28,
                "column": 5
              },
              "text": "return data.map(dataEntry => {\n    const valueInPercentage = (dataEntry.value / total) * 100;\n    const degrees = extractPercentage(degreesTakenByPaths, valueInPercentage);\n    const startOffset = lastSegmentEnd;\n    lastSegmentEnd = lastSegmentEnd + degrees + singlePaddingDegrees;\n\n    return {\n      percentage: valueInPercentage,\n      degrees,\n      startOffset,\n      ...dataEntry,\n    };\n  });",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 16,
                    "column": 2
                  },
                  "end": {
                    "row": 16,
                    "column": 8
                  },
                  "text": "return"
                },
                {
                  "type": "call_expression",
                  "start": {
                    "row": 16,
                    "column": 9
                  },
                  "end": {
                    "row": 28,
                    "column": 4
                  },
                  "text": "data.map(dataEntry => {\n    const valueInPercentage = (dataEntry.value / total) * 100;\n    const degrees = extractPercentage(degreesTakenByPaths, valueInPercentage);\n    const startOffset = lastSegmentEnd;\n    lastSegmentEnd = lastSegmentEnd + degrees + singlePaddingDegrees;\n\n    return {\n      percentage: valueInPercentage,\n      degrees,\n      startOffset,\n      ...dataEntry,\n    };\n  })",
                  "children": [
                    {
                      "type": "member_expression",
                      "start": {
                        "row": 16,
                        "column": 9
                      },
                      "end": {
                        "row": 16,
                        "column": 17
                      },
                      "text": "data.map",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 16,
                            "column": 9
                          },
                          "end": {
                            "row": 16,
                            "column": 13
                          },
                          "text": "data"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 16,
                            "column": 13
                          },
                          "end": {
                            "row": 16,
                            "column": 14
                          },
                          "text": "."
                        },
                        {
                          "type": "property_identifier",
                          "start": {
                            "row": 16,
                            "column": 14
                          },
                          "end": {
                            "row": 16,
                            "column": 17
                          },
                          "text": "map"
                        }
                      ]
                    },
                    {
                      "type": "arguments",
                      "start": {
                        "row": 16,
                        "column": 17
                      },
                      "end": {
                        "row": 28,
                        "column": 4
                      },
                      "text": "(dataEntry => {\n    const valueInPercentage = (dataEntry.value / total) * 100;\n    const degrees = extractPercentage(degreesTakenByPaths, valueInPercentage);\n    const startOffset = lastSegmentEnd;\n    lastSegmentEnd = lastSegmentEnd + degrees + singlePaddingDegrees;\n\n    return {\n      percentage: valueInPercentage,\n      degrees,\n      startOffset,\n      ...dataEntry,\n    };\n  })",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 16,
                            "column": 17
                          },
                          "end": {
                            "row": 16,
                            "column": 18
                          },
                          "text": "("
                        },
                        {
                          "type": "arrow_function",
                          "start": {
                            "row": 16,
                            "column": 18
                          },
                          "end": {
                            "row": 28,
                            "column": 3
                          },
                          "text": "dataEntry => {\n    const valueInPercentage = (dataEntry.value / total) * 100;\n    const degrees = extractPercentage(degreesTakenByPaths, valueInPercentage);\n    const startOffset = lastSegmentEnd;\n    lastSegmentEnd = lastSegmentEnd + degrees + singlePaddingDegrees;\n\n    return {\n      percentage: valueInPercentage,\n      degrees,\n      startOffset,\n      ...dataEntry,\n    };\n  }",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 16,
                                "column": 18
                              },
                              "end": {
                                "row": 16,
                                "column": 27
                              },
                              "text": "dataEntry"
                            },
                            {
                              "type": "=>",
                              "start": {
                                "row": 16,
                                "column": 28
                              },
                              "end": {
                                "row": 16,
                                "column": 30
                              },
                              "text": "=>"
                            },
                            {
                              "type": "statement_block",
                              "start": {
                                "row": 16,
                                "column": 31
                              },
                              "end": {
                                "row": 28,
                                "column": 3
                              },
                              "text": "{\n    const valueInPercentage = (dataEntry.value / total) * 100;\n    const degrees = extractPercentage(degreesTakenByPaths, valueInPercentage);\n    const startOffset = lastSegmentEnd;\n    lastSegmentEnd = lastSegmentEnd + degrees + singlePaddingDegrees;\n\n    return {\n      percentage: valueInPercentage,\n      degrees,\n      startOffset,\n      ...dataEntry,\n    };\n  }",
                              "children": [
                                {
                                  "type": "{",
                                  "start": {
                                    "row": 16,
                                    "column": 31
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 32
                                  },
                                  "text": "{"
                                },
                                {
                                  "type": "lexical_declaration",
                                  "start": {
                                    "row": 17,
                                    "column": 4
                                  },
                                  "end": {
                                    "row": 17,
                                    "column": 62
                                  },
                                  "text": "const valueInPercentage = (dataEntry.value / total) * 100;",
                                  "children": [
                                    {
                                      "type": "const",
                                      "start": {
                                        "row": 17,
                                        "column": 4
                                      },
                                      "end": {
                                        "row": 17,
                                        "column": 9
                                      },
                                      "text": "const"
                                    },
                                    {
                                      "type": "variable_declarator",
                                      "start": {
                                        "row": 17,
                                        "column": 10
                                      },
                                      "end": {
                                        "row": 17,
                                        "column": 61
                                      },
                                      "text": "valueInPercentage = (dataEntry.value / total) * 100",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 17,
                                            "column": 10
                                          },
                                          "end": {
                                            "row": 17,
                                            "column": 27
                                          },
                                          "text": "valueInPercentage"
                                        },
                                        {
                                          "type": "=",
                                          "start": {
                                            "row": 17,
                                            "column": 28
                                          },
                                          "end": {
                                            "row": 17,
                                            "column": 29
                                          },
                                          "text": "="
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start": {
                                            "row": 17,
                                            "column": 30
                                          },
                                          "end": {
                                            "row": 17,
                                            "column": 61
                                          },
                                          "text": "(dataEntry.value / total) * 100",
                                          "children": [
                                            {
                                              "type": "parenthesized_expression",
                                              "start": {
                                                "row": 17,
                                                "column": 30
                                              },
                                              "end": {
                                                "row": 17,
                                                "column": 55
                                              },
                                              "text": "(dataEntry.value / total)",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 17,
                                                    "column": 30
                                                  },
                                                  "end": {
                                                    "row": 17,
                                                    "column": 31
                                                  },
                                                  "text": "("
                                                },
                                                {
                                                  "type": "binary_expression",
                                                  "start": {
                                                    "row": 17,
                                                    "column": 31
                                                  },
                                                  "end": {
                                                    "row": 17,
                                                    "column": 54
                                                  },
                                                  "text": "dataEntry.value / total",
                                                  "children": [
                                                    {
                                                      "type": "member_expression",
                                                      "start": {
                                                        "row": 17,
                                                        "column": 31
                                                      },
                                                      "end": {
                                                        "row": 17,
                                                        "column": 46
                                                      },
                                                      "text": "dataEntry.value",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 17,
                                                            "column": 31
                                                          },
                                                          "end": {
                                                            "row": 17,
                                                            "column": 40
                                                          },
                                                          "text": "dataEntry"
                                                        },
                                                        {
                                                          "type": ".",
                                                          "start": {
                                                            "row": 17,
                                                            "column": 40
                                                          },
                                                          "end": {
                                                            "row": 17,
                                                            "column": 41
                                                          },
                                                          "text": "."
                                                        },
                                                        {
                                                          "type": "property_identifier",
                                                          "start": {
                                                            "row": 17,
                                                            "column": 41
                                                          },
                                                          "end": {
                                                            "row": 17,
                                                            "column": 46
                                                          },
                                                          "text": "value"
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "/",
                                                      "start": {
                                                        "row": 17,
                                                        "column": 47
                                                      },
                                                      "end": {
                                                        "row": 17,
                                                        "column": 48
                                                      },
                                                      "text": "/"
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 17,
                                                        "column": 49
                                                      },
                                                      "end": {
                                                        "row": 17,
                                                        "column": 54
                                                      },
                                                      "text": "total"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 17,
                                                    "column": 54
                                                  },
                                                  "end": {
                                                    "row": 17,
                                                    "column": 55
                                                  },
                                                  "text": ")"
                                                }
                                              ]
                                            },
                                            {
                                              "type": "*",
                                              "start": {
                                                "row": 17,
                                                "column": 56
                                              },
                                              "end": {
                                                "row": 17,
                                                "column": 57
                                              },
                                              "text": "*"
                                            },
                                            {
                                              "type": "number",
                                              "start": {
                                                "row": 17,
                                                "column": 58
                                              },
                                              "end": {
                                                "row": 17,
                                                "column": 61
                                              },
                                              "text": "100"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start": {
                                        "row": 17,
                                        "column": 61
                                      },
                                      "end": {
                                        "row": 17,
                                        "column": 62
                                      },
                                      "text": ";"
                                    }
                                  ]
                                },
                                {
                                  "type": "lexical_declaration",
                                  "start": {
                                    "row": 18,
                                    "column": 4
                                  },
                                  "end": {
                                    "row": 18,
                                    "column": 78
                                  },
                                  "text": "const degrees = extractPercentage(degreesTakenByPaths, valueInPercentage);",
                                  "children": [
                                    {
                                      "type": "const",
                                      "start": {
                                        "row": 18,
                                        "column": 4
                                      },
                                      "end": {
                                        "row": 18,
                                        "column": 9
                                      },
                                      "text": "const"
                                    },
                                    {
                                      "type": "variable_declarator",
                                      "start": {
                                        "row": 18,
                                        "column": 10
                                      },
                                      "end": {
                                        "row": 18,
                                        "column": 77
                                      },
                                      "text": "degrees = extractPercentage(degreesTakenByPaths, valueInPercentage)",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 18,
                                            "column": 10
                                          },
                                          "end": {
                                            "row": 18,
                                            "column": 17
                                          },
                                          "text": "degrees"
                                        },
                                        {
                                          "type": "=",
                                          "start": {
                                            "row": 18,
                                            "column": 18
                                          },
                                          "end": {
                                            "row": 18,
                                            "column": 19
                                          },
                                          "text": "="
                                        },
                                        {
                                          "type": "call_expression",
                                          "start": {
                                            "row": 18,
                                            "column": 20
                                          },
                                          "end": {
                                            "row": 18,
                                            "column": 77
                                          },
                                          "text": "extractPercentage(degreesTakenByPaths, valueInPercentage)",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 18,
                                                "column": 20
                                              },
                                              "end": {
                                                "row": 18,
                                                "column": 37
                                              },
                                              "text": "extractPercentage"
                                            },
                                            {
                                              "type": "arguments",
                                              "start": {
                                                "row": 18,
                                                "column": 37
                                              },
                                              "end": {
                                                "row": 18,
                                                "column": 77
                                              },
                                              "text": "(degreesTakenByPaths, valueInPercentage)",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 18,
                                                    "column": 37
                                                  },
                                                  "end": {
                                                    "row": 18,
                                                    "column": 38
                                                  },
                                                  "text": "("
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 18,
                                                    "column": 38
                                                  },
                                                  "end": {
                                                    "row": 18,
                                                    "column": 57
                                                  },
                                                  "text": "degreesTakenByPaths"
                                                },
                                                {
                                                  "type": ",",
                                                  "start": {
                                                    "row": 18,
                                                    "column": 57
                                                  },
                                                  "end": {
                                                    "row": 18,
                                                    "column": 58
                                                  },
                                                  "text": ","
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 18,
                                                    "column": 59
                                                  },
                                                  "end": {
                                                    "row": 18,
                                                    "column": 76
                                                  },
                                                  "text": "valueInPercentage"
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 18,
                                                    "column": 76
                                                  },
                                                  "end": {
                                                    "row": 18,
                                                    "column": 77
                                                  },
                                                  "text": ")"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start": {
                                        "row": 18,
                                        "column": 77
                                      },
                                      "end": {
                                        "row": 18,
                                        "column": 78
                                      },
                                      "text": ";"
                                    }
                                  ]
                                },
                                {
                                  "type": "lexical_declaration",
                                  "start": {
                                    "row": 19,
                                    "column": 4
                                  },
                                  "end": {
                                    "row": 19,
                                    "column": 39
                                  },
                                  "text": "const startOffset = lastSegmentEnd;",
                                  "children": [
                                    {
                                      "type": "const",
                                      "start": {
                                        "row": 19,
                                        "column": 4
                                      },
                                      "end": {
                                        "row": 19,
                                        "column": 9
                                      },
                                      "text": "const"
                                    },
                                    {
                                      "type": "variable_declarator",
                                      "start": {
                                        "row": 19,
                                        "column": 10
                                      },
                                      "end": {
                                        "row": 19,
                                        "column": 38
                                      },
                                      "text": "startOffset = lastSegmentEnd",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 19,
                                            "column": 10
                                          },
                                          "end": {
                                            "row": 19,
                                            "column": 21
                                          },
                                          "text": "startOffset"
                                        },
                                        {
                                          "type": "=",
                                          "start": {
                                            "row": 19,
                                            "column": 22
                                          },
                                          "end": {
                                            "row": 19,
                                            "column": 23
                                          },
                                          "text": "="
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 19,
                                            "column": 24
                                          },
                                          "end": {
                                            "row": 19,
                                            "column": 38
                                          },
                                          "text": "lastSegmentEnd"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start": {
                                        "row": 19,
                                        "column": 38
                                      },
                                      "end": {
                                        "row": 19,
                                        "column": 39
                                      },
                                      "text": ";"
                                    }
                                  ]
                                },
                                {
                                  "type": "expression_statement",
                                  "start": {
                                    "row": 20,
                                    "column": 4
                                  },
                                  "end": {
                                    "row": 20,
                                    "column": 69
                                  },
                                  "text": "lastSegmentEnd = lastSegmentEnd + degrees + singlePaddingDegrees;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start": {
                                        "row": 20,
                                        "column": 4
                                      },
                                      "end": {
                                        "row": 20,
                                        "column": 68
                                      },
                                      "text": "lastSegmentEnd = lastSegmentEnd + degrees + singlePaddingDegrees",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 20,
                                            "column": 4
                                          },
                                          "end": {
                                            "row": 20,
                                            "column": 18
                                          },
                                          "text": "lastSegmentEnd"
                                        },
                                        {
                                          "type": "=",
                                          "start": {
                                            "row": 20,
                                            "column": 19
                                          },
                                          "end": {
                                            "row": 20,
                                            "column": 20
                                          },
                                          "text": "="
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start": {
                                            "row": 20,
                                            "column": 21
                                          },
                                          "end": {
                                            "row": 20,
                                            "column": 68
                                          },
                                          "text": "lastSegmentEnd + degrees + singlePaddingDegrees",
                                          "children": [
                                            {
                                              "type": "binary_expression",
                                              "start": {
                                                "row": 20,
                                                "column": 21
                                              },
                                              "end": {
                                                "row": 20,
                                                "column": 45
                                              },
                                              "text": "lastSegmentEnd + degrees",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 20,
                                                    "column": 21
                                                  },
                                                  "end": {
                                                    "row": 20,
                                                    "column": 35
                                                  },
                                                  "text": "lastSegmentEnd"
                                                },
                                                {
                                                  "type": "+",
                                                  "start": {
                                                    "row": 20,
                                                    "column": 36
                                                  },
                                                  "end": {
                                                    "row": 20,
                                                    "column": 37
                                                  },
                                                  "text": "+"
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 20,
                                                    "column": 38
                                                  },
                                                  "end": {
                                                    "row": 20,
                                                    "column": 45
                                                  },
                                                  "text": "degrees"
                                                }
                                              ]
                                            },
                                            {
                                              "type": "+",
                                              "start": {
                                                "row": 20,
                                                "column": 46
                                              },
                                              "end": {
                                                "row": 20,
                                                "column": 47
                                              },
                                              "text": "+"
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 20,
                                                "column": 48
                                              },
                                              "end": {
                                                "row": 20,
                                                "column": 68
                                              },
                                              "text": "singlePaddingDegrees"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start": {
                                        "row": 20,
                                        "column": 68
                                      },
                                      "end": {
                                        "row": 20,
                                        "column": 69
                                      },
                                      "text": ";"
                                    }
                                  ]
                                },
                                {
                                  "type": "return_statement",
                                  "start": {
                                    "row": 22,
                                    "column": 4
                                  },
                                  "end": {
                                    "row": 27,
                                    "column": 6
                                  },
                                  "text": "return {\n      percentage: valueInPercentage,\n      degrees,\n      startOffset,\n      ...dataEntry,\n    };",
                                  "children": [
                                    {
                                      "type": "return",
                                      "start": {
                                        "row": 22,
                                        "column": 4
                                      },
                                      "end": {
                                        "row": 22,
                                        "column": 10
                                      },
                                      "text": "return"
                                    },
                                    {
                                      "type": "object",
                                      "start": {
                                        "row": 22,
                                        "column": 11
                                      },
                                      "end": {
                                        "row": 27,
                                        "column": 5
                                      },
                                      "text": "{\n      percentage: valueInPercentage,\n      degrees,\n      startOffset,\n      ...dataEntry,\n    }",
                                      "children": [
                                        {
                                          "type": "{",
                                          "start": {
                                            "row": 22,
                                            "column": 11
                                          },
                                          "end": {
                                            "row": 22,
                                            "column": 12
                                          },
                                          "text": "{"
                                        },
                                        {
                                          "type": "pair",
                                          "start": {
                                            "row": 23,
                                            "column": 6
                                          },
                                          "end": {
                                            "row": 23,
                                            "column": 35
                                          },
                                          "text": "percentage: valueInPercentage",
                                          "children": [
                                            {
                                              "type": "property_identifier",
                                              "start": {
                                                "row": 23,
                                                "column": 6
                                              },
                                              "end": {
                                                "row": 23,
                                                "column": 16
                                              },
                                              "text": "percentage"
                                            },
                                            {
                                              "type": ":",
                                              "start": {
                                                "row": 23,
                                                "column": 16
                                              },
                                              "end": {
                                                "row": 23,
                                                "column": 17
                                              },
                                              "text": ":"
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 23,
                                                "column": 18
                                              },
                                              "end": {
                                                "row": 23,
                                                "column": 35
                                              },
                                              "text": "valueInPercentage"
                                            }
                                          ]
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 23,
                                            "column": 35
                                          },
                                          "end": {
                                            "row": 23,
                                            "column": 36
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "shorthand_property_identifier",
                                          "start": {
                                            "row": 24,
                                            "column": 6
                                          },
                                          "end": {
                                            "row": 24,
                                            "column": 13
                                          },
                                          "text": "degrees"
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 24,
                                            "column": 13
                                          },
                                          "end": {
                                            "row": 24,
                                            "column": 14
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "shorthand_property_identifier",
                                          "start": {
                                            "row": 25,
                                            "column": 6
                                          },
                                          "end": {
                                            "row": 25,
                                            "column": 17
                                          },
                                          "text": "startOffset"
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 25,
                                            "column": 17
                                          },
                                          "end": {
                                            "row": 25,
                                            "column": 18
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "spread_element",
                                          "start": {
                                            "row": 26,
                                            "column": 6
                                          },
                                          "end": {
                                            "row": 26,
                                            "column": 18
                                          },
                                          "text": "...dataEntry",
                                          "children": [
                                            {
                                              "type": "...",
                                              "start": {
                                                "row": 26,
                                                "column": 6
                                              },
                                              "end": {
                                                "row": 26,
                                                "column": 9
                                              },
                                              "text": "..."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 26,
                                                "column": 9
                                              },
                                              "end": {
                                                "row": 26,
                                                "column": 18
                                              },
                                              "text": "dataEntry"
                                            }
                                          ]
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 26,
                                            "column": 18
                                          },
                                          "end": {
                                            "row": 26,
                                            "column": 19
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "}",
                                          "start": {
                                            "row": 27,
                                            "column": 4
                                          },
                                          "end": {
                                            "row": 27,
                                            "column": 5
                                          },
                                          "text": "}"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start": {
                                        "row": 27,
                                        "column": 5
                                      },
                                      "end": {
                                        "row": 27,
                                        "column": 6
                                      },
                                      "text": ";"
                                    }
                                  ]
                                },
                                {
                                  "type": "}",
                                  "start": {
                                    "row": 28,
                                    "column": 2
                                  },
                                  "end": {
                                    "row": 28,
                                    "column": 3
                                  },
                                  "text": "}"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 28,
                            "column": 3
                          },
                          "end": {
                            "row": 28,
                            "column": 4
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 28,
                    "column": 4
                  },
                  "end": {
                    "row": 28,
                    "column": 5
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "}",
              "start": {
                "row": 29,
                "column": 0
              },
              "end": {
                "row": 29,
                "column": 1
              },
              "text": "}"
            }
          ]
        }
      ]
    }
  ]
}