{
  "type": "program",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 39,
    "column": 3
  },
  "text": "function (oPathValue) {\n\t\t\tvar aPromises;\n\n\t\t\t// needed so that we can safely call the forEach\n\t\t\tBasics.expectType(oPathValue, \"array\");\n\t\t\taPromises = oPathValue.value.map(function (oUnused, i) {\n\t\t\t\t// an embedded concat must use expression binding\n\t\t\t\treturn Expression.parameter(oPathValue, i);\n\t\t\t});\n\n\t\t\treturn SyncPromise.all(aPromises).then(function (aParameters) {\n\t\t\t\tvar bExpression,\n\t\t\t\t\taParts,\n\t\t\t\t\toResult;\n\n\t\t\t\tbExpression = oPathValue.asExpression || aParameters.some(function (oParameter) {\n\t\t\t\t\t// if any parameter is type expression, the concat must become expression, too\n\t\t\t\t\treturn oParameter.result === \"expression\";\n\t\t\t\t});\n\t\t\t\t// convert the results to strings after we know whether the result is expression\n\t\t\t\taParts = aParameters.filter(function (oParameter) {\n\t\t\t\t\t// ignore null (otherwise the string 'null' would appear in expressions)\n\t\t\t\t\treturn oParameter.type !== 'edm:Null';\n\t\t\t\t}).map(function (oParameter) {\n\t\t\t\t\tif (bExpression) {\n\t\t\t\t\t\t// the expression might have a lower operator precedence than '+'\n\t\t\t\t\t\tExpression.wrapExpression(oParameter);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Basics.resultToString(oParameter, bExpression,\n\t\t\t\t\t\toPathValue.complexBinding);\n\t\t\t\t});\n\t\t\t\toResult = bExpression\n\t\t\t\t\t? {result : \"expression\", value : aParts.join(\"+\")}\n\t\t\t\t\t: {result : \"composite\", value : aParts.join(\"\")};\n\t\t\t\toResult.type = \"Edm.String\";\n\n\t\t\t\treturn oResult;\n\t\t\t});\n\t\t}",
  "children": [
    {
      "type": "expression_statement",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 39,
        "column": 3
      },
      "text": "function (oPathValue) {\n\t\t\tvar aPromises;\n\n\t\t\t// needed so that we can safely call the forEach\n\t\t\tBasics.expectType(oPathValue, \"array\");\n\t\t\taPromises = oPathValue.value.map(function (oUnused, i) {\n\t\t\t\t// an embedded concat must use expression binding\n\t\t\t\treturn Expression.parameter(oPathValue, i);\n\t\t\t});\n\n\t\t\treturn SyncPromise.all(aPromises).then(function (aParameters) {\n\t\t\t\tvar bExpression,\n\t\t\t\t\taParts,\n\t\t\t\t\toResult;\n\n\t\t\t\tbExpression = oPathValue.asExpression || aParameters.some(function (oParameter) {\n\t\t\t\t\t// if any parameter is type expression, the concat must become expression, too\n\t\t\t\t\treturn oParameter.result === \"expression\";\n\t\t\t\t});\n\t\t\t\t// convert the results to strings after we know whether the result is expression\n\t\t\t\taParts = aParameters.filter(function (oParameter) {\n\t\t\t\t\t// ignore null (otherwise the string 'null' would appear in expressions)\n\t\t\t\t\treturn oParameter.type !== 'edm:Null';\n\t\t\t\t}).map(function (oParameter) {\n\t\t\t\t\tif (bExpression) {\n\t\t\t\t\t\t// the expression might have a lower operator precedence than '+'\n\t\t\t\t\t\tExpression.wrapExpression(oParameter);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Basics.resultToString(oParameter, bExpression,\n\t\t\t\t\t\toPathValue.complexBinding);\n\t\t\t\t});\n\t\t\t\toResult = bExpression\n\t\t\t\t\t? {result : \"expression\", value : aParts.join(\"+\")}\n\t\t\t\t\t: {result : \"composite\", value : aParts.join(\"\")};\n\t\t\t\toResult.type = \"Edm.String\";\n\n\t\t\t\treturn oResult;\n\t\t\t});\n\t\t}",
      "children": [
        {
          "type": "function",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 39,
            "column": 3
          },
          "text": "function (oPathValue) {\n\t\t\tvar aPromises;\n\n\t\t\t// needed so that we can safely call the forEach\n\t\t\tBasics.expectType(oPathValue, \"array\");\n\t\t\taPromises = oPathValue.value.map(function (oUnused, i) {\n\t\t\t\t// an embedded concat must use expression binding\n\t\t\t\treturn Expression.parameter(oPathValue, i);\n\t\t\t});\n\n\t\t\treturn SyncPromise.all(aPromises).then(function (aParameters) {\n\t\t\t\tvar bExpression,\n\t\t\t\t\taParts,\n\t\t\t\t\toResult;\n\n\t\t\t\tbExpression = oPathValue.asExpression || aParameters.some(function (oParameter) {\n\t\t\t\t\t// if any parameter is type expression, the concat must become expression, too\n\t\t\t\t\treturn oParameter.result === \"expression\";\n\t\t\t\t});\n\t\t\t\t// convert the results to strings after we know whether the result is expression\n\t\t\t\taParts = aParameters.filter(function (oParameter) {\n\t\t\t\t\t// ignore null (otherwise the string 'null' would appear in expressions)\n\t\t\t\t\treturn oParameter.type !== 'edm:Null';\n\t\t\t\t}).map(function (oParameter) {\n\t\t\t\t\tif (bExpression) {\n\t\t\t\t\t\t// the expression might have a lower operator precedence than '+'\n\t\t\t\t\t\tExpression.wrapExpression(oParameter);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Basics.resultToString(oParameter, bExpression,\n\t\t\t\t\t\toPathValue.complexBinding);\n\t\t\t\t});\n\t\t\t\toResult = bExpression\n\t\t\t\t\t? {result : \"expression\", value : aParts.join(\"+\")}\n\t\t\t\t\t: {result : \"composite\", value : aParts.join(\"\")};\n\t\t\t\toResult.type = \"Edm.String\";\n\n\t\t\t\treturn oResult;\n\t\t\t});\n\t\t}",
          "children": [
            {
              "type": "function",
              "start": {
                "row": 0,
                "column": 0
              },
              "end": {
                "row": 0,
                "column": 8
              },
              "text": "function"
            },
            {
              "type": "formal_parameters",
              "start": {
                "row": 0,
                "column": 9
              },
              "end": {
                "row": 0,
                "column": 21
              },
              "text": "(oPathValue)",
              "children": [
                {
                  "type": "(",
                  "start": {
                    "row": 0,
                    "column": 9
                  },
                  "end": {
                    "row": 0,
                    "column": 10
                  },
                  "text": "("
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 10
                  },
                  "end": {
                    "row": 0,
                    "column": 20
                  },
                  "text": "oPathValue"
                },
                {
                  "type": ")",
                  "start": {
                    "row": 0,
                    "column": 20
                  },
                  "end": {
                    "row": 0,
                    "column": 21
                  },
                  "text": ")"
                }
              ]
            },
            {
              "type": "statement_block",
              "start": {
                "row": 0,
                "column": 22
              },
              "end": {
                "row": 39,
                "column": 3
              },
              "text": "{\n\t\t\tvar aPromises;\n\n\t\t\t// needed so that we can safely call the forEach\n\t\t\tBasics.expectType(oPathValue, \"array\");\n\t\t\taPromises = oPathValue.value.map(function (oUnused, i) {\n\t\t\t\t// an embedded concat must use expression binding\n\t\t\t\treturn Expression.parameter(oPathValue, i);\n\t\t\t});\n\n\t\t\treturn SyncPromise.all(aPromises).then(function (aParameters) {\n\t\t\t\tvar bExpression,\n\t\t\t\t\taParts,\n\t\t\t\t\toResult;\n\n\t\t\t\tbExpression = oPathValue.asExpression || aParameters.some(function (oParameter) {\n\t\t\t\t\t// if any parameter is type expression, the concat must become expression, too\n\t\t\t\t\treturn oParameter.result === \"expression\";\n\t\t\t\t});\n\t\t\t\t// convert the results to strings after we know whether the result is expression\n\t\t\t\taParts = aParameters.filter(function (oParameter) {\n\t\t\t\t\t// ignore null (otherwise the string 'null' would appear in expressions)\n\t\t\t\t\treturn oParameter.type !== 'edm:Null';\n\t\t\t\t}).map(function (oParameter) {\n\t\t\t\t\tif (bExpression) {\n\t\t\t\t\t\t// the expression might have a lower operator precedence than '+'\n\t\t\t\t\t\tExpression.wrapExpression(oParameter);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Basics.resultToString(oParameter, bExpression,\n\t\t\t\t\t\toPathValue.complexBinding);\n\t\t\t\t});\n\t\t\t\toResult = bExpression\n\t\t\t\t\t? {result : \"expression\", value : aParts.join(\"+\")}\n\t\t\t\t\t: {result : \"composite\", value : aParts.join(\"\")};\n\t\t\t\toResult.type = \"Edm.String\";\n\n\t\t\t\treturn oResult;\n\t\t\t});\n\t\t}",
              "children": [
                {
                  "type": "{",
                  "start": {
                    "row": 0,
                    "column": 22
                  },
                  "end": {
                    "row": 0,
                    "column": 23
                  },
                  "text": "{"
                },
                {
                  "type": "variable_declaration",
                  "start": {
                    "row": 1,
                    "column": 3
                  },
                  "end": {
                    "row": 1,
                    "column": 17
                  },
                  "text": "var aPromises;",
                  "children": [
                    {
                      "type": "var",
                      "start": {
                        "row": 1,
                        "column": 3
                      },
                      "end": {
                        "row": 1,
                        "column": 6
                      },
                      "text": "var"
                    },
                    {
                      "type": "variable_declarator",
                      "start": {
                        "row": 1,
                        "column": 7
                      },
                      "end": {
                        "row": 1,
                        "column": 16
                      },
                      "text": "aPromises",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 1,
                            "column": 7
                          },
                          "end": {
                            "row": 1,
                            "column": 16
                          },
                          "text": "aPromises"
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start": {
                        "row": 1,
                        "column": 16
                      },
                      "end": {
                        "row": 1,
                        "column": 17
                      },
                      "text": ";"
                    }
                  ]
                },
                {
                  "type": "comment",
                  "start": {
                    "row": 3,
                    "column": 3
                  },
                  "end": {
                    "row": 3,
                    "column": 51
                  },
                  "text": "// needed so that we can safely call the forEach"
                },
                {
                  "type": "expression_statement",
                  "start": {
                    "row": 4,
                    "column": 3
                  },
                  "end": {
                    "row": 4,
                    "column": 42
                  },
                  "text": "Basics.expectType(oPathValue, \"array\");",
                  "children": [
                    {
                      "type": "call_expression",
                      "start": {
                        "row": 4,
                        "column": 3
                      },
                      "end": {
                        "row": 4,
                        "column": 41
                      },
                      "text": "Basics.expectType(oPathValue, \"array\")",
                      "children": [
                        {
                          "type": "member_expression",
                          "start": {
                            "row": 4,
                            "column": 3
                          },
                          "end": {
                            "row": 4,
                            "column": 20
                          },
                          "text": "Basics.expectType",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 4,
                                "column": 3
                              },
                              "end": {
                                "row": 4,
                                "column": 9
                              },
                              "text": "Basics"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 4,
                                "column": 9
                              },
                              "end": {
                                "row": 4,
                                "column": 10
                              },
                              "text": "."
                            },
                            {
                              "type": "property_identifier",
                              "start": {
                                "row": 4,
                                "column": 10
                              },
                              "end": {
                                "row": 4,
                                "column": 20
                              },
                              "text": "expectType"
                            }
                          ]
                        },
                        {
                          "type": "arguments",
                          "start": {
                            "row": 4,
                            "column": 20
                          },
                          "end": {
                            "row": 4,
                            "column": 41
                          },
                          "text": "(oPathValue, \"array\")",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 4,
                                "column": 20
                              },
                              "end": {
                                "row": 4,
                                "column": 21
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 4,
                                "column": 21
                              },
                              "end": {
                                "row": 4,
                                "column": 31
                              },
                              "text": "oPathValue"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 4,
                                "column": 31
                              },
                              "end": {
                                "row": 4,
                                "column": 32
                              },
                              "text": ","
                            },
                            {
                              "type": "string",
                              "start": {
                                "row": 4,
                                "column": 33
                              },
                              "end": {
                                "row": 4,
                                "column": 40
                              },
                              "text": "\"array\"",
                              "children": [
                                {
                                  "type": "\"",
                                  "start": {
                                    "row": 4,
                                    "column": 33
                                  },
                                  "end": {
                                    "row": 4,
                                    "column": 34
                                  },
                                  "text": "\""
                                },
                                {
                                  "type": "string_fragment",
                                  "start": {
                                    "row": 4,
                                    "column": 34
                                  },
                                  "end": {
                                    "row": 4,
                                    "column": 39
                                  },
                                  "text": "array"
                                },
                                {
                                  "type": "\"",
                                  "start": {
                                    "row": 4,
                                    "column": 39
                                  },
                                  "end": {
                                    "row": 4,
                                    "column": 40
                                  },
                                  "text": "\""
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 4,
                                "column": 40
                              },
                              "end": {
                                "row": 4,
                                "column": 41
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start": {
                        "row": 4,
                        "column": 41
                      },
                      "end": {
                        "row": 4,
                        "column": 42
                      },
                      "text": ";"
                    }
                  ]
                },
                {
                  "type": "expression_statement",
                  "start": {
                    "row": 5,
                    "column": 3
                  },
                  "end": {
                    "row": 8,
                    "column": 6
                  },
                  "text": "aPromises = oPathValue.value.map(function (oUnused, i) {\n\t\t\t\t// an embedded concat must use expression binding\n\t\t\t\treturn Expression.parameter(oPathValue, i);\n\t\t\t});",
                  "children": [
                    {
                      "type": "assignment_expression",
                      "start": {
                        "row": 5,
                        "column": 3
                      },
                      "end": {
                        "row": 8,
                        "column": 5
                      },
                      "text": "aPromises = oPathValue.value.map(function (oUnused, i) {\n\t\t\t\t// an embedded concat must use expression binding\n\t\t\t\treturn Expression.parameter(oPathValue, i);\n\t\t\t})",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 5,
                            "column": 3
                          },
                          "end": {
                            "row": 5,
                            "column": 12
                          },
                          "text": "aPromises"
                        },
                        {
                          "type": "=",
                          "start": {
                            "row": 5,
                            "column": 13
                          },
                          "end": {
                            "row": 5,
                            "column": 14
                          },
                          "text": "="
                        },
                        {
                          "type": "call_expression",
                          "start": {
                            "row": 5,
                            "column": 15
                          },
                          "end": {
                            "row": 8,
                            "column": 5
                          },
                          "text": "oPathValue.value.map(function (oUnused, i) {\n\t\t\t\t// an embedded concat must use expression binding\n\t\t\t\treturn Expression.parameter(oPathValue, i);\n\t\t\t})",
                          "children": [
                            {
                              "type": "member_expression",
                              "start": {
                                "row": 5,
                                "column": 15
                              },
                              "end": {
                                "row": 5,
                                "column": 35
                              },
                              "text": "oPathValue.value.map",
                              "children": [
                                {
                                  "type": "member_expression",
                                  "start": {
                                    "row": 5,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 5,
                                    "column": 31
                                  },
                                  "text": "oPathValue.value",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 5,
                                        "column": 15
                                      },
                                      "end": {
                                        "row": 5,
                                        "column": 25
                                      },
                                      "text": "oPathValue"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 5,
                                        "column": 25
                                      },
                                      "end": {
                                        "row": 5,
                                        "column": 26
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "property_identifier",
                                      "start": {
                                        "row": 5,
                                        "column": 26
                                      },
                                      "end": {
                                        "row": 5,
                                        "column": 31
                                      },
                                      "text": "value"
                                    }
                                  ]
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 5,
                                    "column": 31
                                  },
                                  "end": {
                                    "row": 5,
                                    "column": 32
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "property_identifier",
                                  "start": {
                                    "row": 5,
                                    "column": 32
                                  },
                                  "end": {
                                    "row": 5,
                                    "column": 35
                                  },
                                  "text": "map"
                                }
                              ]
                            },
                            {
                              "type": "arguments",
                              "start": {
                                "row": 5,
                                "column": 35
                              },
                              "end": {
                                "row": 8,
                                "column": 5
                              },
                              "text": "(function (oUnused, i) {\n\t\t\t\t// an embedded concat must use expression binding\n\t\t\t\treturn Expression.parameter(oPathValue, i);\n\t\t\t})",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 5,
                                    "column": 35
                                  },
                                  "end": {
                                    "row": 5,
                                    "column": 36
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "function",
                                  "start": {
                                    "row": 5,
                                    "column": 36
                                  },
                                  "end": {
                                    "row": 8,
                                    "column": 4
                                  },
                                  "text": "function (oUnused, i) {\n\t\t\t\t// an embedded concat must use expression binding\n\t\t\t\treturn Expression.parameter(oPathValue, i);\n\t\t\t}",
                                  "children": [
                                    {
                                      "type": "function",
                                      "start": {
                                        "row": 5,
                                        "column": 36
                                      },
                                      "end": {
                                        "row": 5,
                                        "column": 44
                                      },
                                      "text": "function"
                                    },
                                    {
                                      "type": "formal_parameters",
                                      "start": {
                                        "row": 5,
                                        "column": 45
                                      },
                                      "end": {
                                        "row": 5,
                                        "column": 57
                                      },
                                      "text": "(oUnused, i)",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 5,
                                            "column": 45
                                          },
                                          "end": {
                                            "row": 5,
                                            "column": 46
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 5,
                                            "column": 46
                                          },
                                          "end": {
                                            "row": 5,
                                            "column": 53
                                          },
                                          "text": "oUnused"
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 5,
                                            "column": 53
                                          },
                                          "end": {
                                            "row": 5,
                                            "column": 54
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 5,
                                            "column": 55
                                          },
                                          "end": {
                                            "row": 5,
                                            "column": 56
                                          },
                                          "text": "i"
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 5,
                                            "column": 56
                                          },
                                          "end": {
                                            "row": 5,
                                            "column": 57
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "statement_block",
                                      "start": {
                                        "row": 5,
                                        "column": 58
                                      },
                                      "end": {
                                        "row": 8,
                                        "column": 4
                                      },
                                      "text": "{\n\t\t\t\t// an embedded concat must use expression binding\n\t\t\t\treturn Expression.parameter(oPathValue, i);\n\t\t\t}",
                                      "children": [
                                        {
                                          "type": "{",
                                          "start": {
                                            "row": 5,
                                            "column": 58
                                          },
                                          "end": {
                                            "row": 5,
                                            "column": 59
                                          },
                                          "text": "{"
                                        },
                                        {
                                          "type": "comment",
                                          "start": {
                                            "row": 6,
                                            "column": 4
                                          },
                                          "end": {
                                            "row": 6,
                                            "column": 53
                                          },
                                          "text": "// an embedded concat must use expression binding"
                                        },
                                        {
                                          "type": "return_statement",
                                          "start": {
                                            "row": 7,
                                            "column": 4
                                          },
                                          "end": {
                                            "row": 7,
                                            "column": 47
                                          },
                                          "text": "return Expression.parameter(oPathValue, i);",
                                          "children": [
                                            {
                                              "type": "return",
                                              "start": {
                                                "row": 7,
                                                "column": 4
                                              },
                                              "end": {
                                                "row": 7,
                                                "column": 10
                                              },
                                              "text": "return"
                                            },
                                            {
                                              "type": "call_expression",
                                              "start": {
                                                "row": 7,
                                                "column": 11
                                              },
                                              "end": {
                                                "row": 7,
                                                "column": 46
                                              },
                                              "text": "Expression.parameter(oPathValue, i)",
                                              "children": [
                                                {
                                                  "type": "member_expression",
                                                  "start": {
                                                    "row": 7,
                                                    "column": 11
                                                  },
                                                  "end": {
                                                    "row": 7,
                                                    "column": 31
                                                  },
                                                  "text": "Expression.parameter",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 7,
                                                        "column": 11
                                                      },
                                                      "end": {
                                                        "row": 7,
                                                        "column": 21
                                                      },
                                                      "text": "Expression"
                                                    },
                                                    {
                                                      "type": ".",
                                                      "start": {
                                                        "row": 7,
                                                        "column": 21
                                                      },
                                                      "end": {
                                                        "row": 7,
                                                        "column": 22
                                                      },
                                                      "text": "."
                                                    },
                                                    {
                                                      "type": "property_identifier",
                                                      "start": {
                                                        "row": 7,
                                                        "column": 22
                                                      },
                                                      "end": {
                                                        "row": 7,
                                                        "column": 31
                                                      },
                                                      "text": "parameter"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "arguments",
                                                  "start": {
                                                    "row": 7,
                                                    "column": 31
                                                  },
                                                  "end": {
                                                    "row": 7,
                                                    "column": 46
                                                  },
                                                  "text": "(oPathValue, i)",
                                                  "children": [
                                                    {
                                                      "type": "(",
                                                      "start": {
                                                        "row": 7,
                                                        "column": 31
                                                      },
                                                      "end": {
                                                        "row": 7,
                                                        "column": 32
                                                      },
                                                      "text": "("
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 7,
                                                        "column": 32
                                                      },
                                                      "end": {
                                                        "row": 7,
                                                        "column": 42
                                                      },
                                                      "text": "oPathValue"
                                                    },
                                                    {
                                                      "type": ",",
                                                      "start": {
                                                        "row": 7,
                                                        "column": 42
                                                      },
                                                      "end": {
                                                        "row": 7,
                                                        "column": 43
                                                      },
                                                      "text": ","
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 7,
                                                        "column": 44
                                                      },
                                                      "end": {
                                                        "row": 7,
                                                        "column": 45
                                                      },
                                                      "text": "i"
                                                    },
                                                    {
                                                      "type": ")",
                                                      "start": {
                                                        "row": 7,
                                                        "column": 45
                                                      },
                                                      "end": {
                                                        "row": 7,
                                                        "column": 46
                                                      },
                                                      "text": ")"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ";",
                                              "start": {
                                                "row": 7,
                                                "column": 46
                                              },
                                              "end": {
                                                "row": 7,
                                                "column": 47
                                              },
                                              "text": ";"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "}",
                                          "start": {
                                            "row": 8,
                                            "column": 3
                                          },
                                          "end": {
                                            "row": 8,
                                            "column": 4
                                          },
                                          "text": "}"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 8,
                                    "column": 4
                                  },
                                  "end": {
                                    "row": 8,
                                    "column": 5
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start": {
                        "row": 8,
                        "column": 5
                      },
                      "end": {
                        "row": 8,
                        "column": 6
                      },
                      "text": ";"
                    }
                  ]
                },
                {
                  "type": "return_statement",
                  "start": {
                    "row": 10,
                    "column": 3
                  },
                  "end": {
                    "row": 38,
                    "column": 6
                  },
                  "text": "return SyncPromise.all(aPromises).then(function (aParameters) {\n\t\t\t\tvar bExpression,\n\t\t\t\t\taParts,\n\t\t\t\t\toResult;\n\n\t\t\t\tbExpression = oPathValue.asExpression || aParameters.some(function (oParameter) {\n\t\t\t\t\t// if any parameter is type expression, the concat must become expression, too\n\t\t\t\t\treturn oParameter.result === \"expression\";\n\t\t\t\t});\n\t\t\t\t// convert the results to strings after we know whether the result is expression\n\t\t\t\taParts = aParameters.filter(function (oParameter) {\n\t\t\t\t\t// ignore null (otherwise the string 'null' would appear in expressions)\n\t\t\t\t\treturn oParameter.type !== 'edm:Null';\n\t\t\t\t}).map(function (oParameter) {\n\t\t\t\t\tif (bExpression) {\n\t\t\t\t\t\t// the expression might have a lower operator precedence than '+'\n\t\t\t\t\t\tExpression.wrapExpression(oParameter);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Basics.resultToString(oParameter, bExpression,\n\t\t\t\t\t\toPathValue.complexBinding);\n\t\t\t\t});\n\t\t\t\toResult = bExpression\n\t\t\t\t\t? {result : \"expression\", value : aParts.join(\"+\")}\n\t\t\t\t\t: {result : \"composite\", value : aParts.join(\"\")};\n\t\t\t\toResult.type = \"Edm.String\";\n\n\t\t\t\treturn oResult;\n\t\t\t});",
                  "children": [
                    {
                      "type": "return",
                      "start": {
                        "row": 10,
                        "column": 3
                      },
                      "end": {
                        "row": 10,
                        "column": 9
                      },
                      "text": "return"
                    },
                    {
                      "type": "call_expression",
                      "start": {
                        "row": 10,
                        "column": 10
                      },
                      "end": {
                        "row": 38,
                        "column": 5
                      },
                      "text": "SyncPromise.all(aPromises).then(function (aParameters) {\n\t\t\t\tvar bExpression,\n\t\t\t\t\taParts,\n\t\t\t\t\toResult;\n\n\t\t\t\tbExpression = oPathValue.asExpression || aParameters.some(function (oParameter) {\n\t\t\t\t\t// if any parameter is type expression, the concat must become expression, too\n\t\t\t\t\treturn oParameter.result === \"expression\";\n\t\t\t\t});\n\t\t\t\t// convert the results to strings after we know whether the result is expression\n\t\t\t\taParts = aParameters.filter(function (oParameter) {\n\t\t\t\t\t// ignore null (otherwise the string 'null' would appear in expressions)\n\t\t\t\t\treturn oParameter.type !== 'edm:Null';\n\t\t\t\t}).map(function (oParameter) {\n\t\t\t\t\tif (bExpression) {\n\t\t\t\t\t\t// the expression might have a lower operator precedence than '+'\n\t\t\t\t\t\tExpression.wrapExpression(oParameter);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Basics.resultToString(oParameter, bExpression,\n\t\t\t\t\t\toPathValue.complexBinding);\n\t\t\t\t});\n\t\t\t\toResult = bExpression\n\t\t\t\t\t? {result : \"expression\", value : aParts.join(\"+\")}\n\t\t\t\t\t: {result : \"composite\", value : aParts.join(\"\")};\n\t\t\t\toResult.type = \"Edm.String\";\n\n\t\t\t\treturn oResult;\n\t\t\t})",
                      "children": [
                        {
                          "type": "member_expression",
                          "start": {
                            "row": 10,
                            "column": 10
                          },
                          "end": {
                            "row": 10,
                            "column": 41
                          },
                          "text": "SyncPromise.all(aPromises).then",
                          "children": [
                            {
                              "type": "call_expression",
                              "start": {
                                "row": 10,
                                "column": 10
                              },
                              "end": {
                                "row": 10,
                                "column": 36
                              },
                              "text": "SyncPromise.all(aPromises)",
                              "children": [
                                {
                                  "type": "member_expression",
                                  "start": {
                                    "row": 10,
                                    "column": 10
                                  },
                                  "end": {
                                    "row": 10,
                                    "column": 25
                                  },
                                  "text": "SyncPromise.all",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 10,
                                        "column": 10
                                      },
                                      "end": {
                                        "row": 10,
                                        "column": 21
                                      },
                                      "text": "SyncPromise"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 10,
                                        "column": 21
                                      },
                                      "end": {
                                        "row": 10,
                                        "column": 22
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "property_identifier",
                                      "start": {
                                        "row": 10,
                                        "column": 22
                                      },
                                      "end": {
                                        "row": 10,
                                        "column": 25
                                      },
                                      "text": "all"
                                    }
                                  ]
                                },
                                {
                                  "type": "arguments",
                                  "start": {
                                    "row": 10,
                                    "column": 25
                                  },
                                  "end": {
                                    "row": 10,
                                    "column": 36
                                  },
                                  "text": "(aPromises)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 10,
                                        "column": 25
                                      },
                                      "end": {
                                        "row": 10,
                                        "column": 26
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 10,
                                        "column": 26
                                      },
                                      "end": {
                                        "row": 10,
                                        "column": 35
                                      },
                                      "text": "aPromises"
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 10,
                                        "column": 35
                                      },
                                      "end": {
                                        "row": 10,
                                        "column": 36
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 10,
                                "column": 36
                              },
                              "end": {
                                "row": 10,
                                "column": 37
                              },
                              "text": "."
                            },
                            {
                              "type": "property_identifier",
                              "start": {
                                "row": 10,
                                "column": 37
                              },
                              "end": {
                                "row": 10,
                                "column": 41
                              },
                              "text": "then"
                            }
                          ]
                        },
                        {
                          "type": "arguments",
                          "start": {
                            "row": 10,
                            "column": 41
                          },
                          "end": {
                            "row": 38,
                            "column": 5
                          },
                          "text": "(function (aParameters) {\n\t\t\t\tvar bExpression,\n\t\t\t\t\taParts,\n\t\t\t\t\toResult;\n\n\t\t\t\tbExpression = oPathValue.asExpression || aParameters.some(function (oParameter) {\n\t\t\t\t\t// if any parameter is type expression, the concat must become expression, too\n\t\t\t\t\treturn oParameter.result === \"expression\";\n\t\t\t\t});\n\t\t\t\t// convert the results to strings after we know whether the result is expression\n\t\t\t\taParts = aParameters.filter(function (oParameter) {\n\t\t\t\t\t// ignore null (otherwise the string 'null' would appear in expressions)\n\t\t\t\t\treturn oParameter.type !== 'edm:Null';\n\t\t\t\t}).map(function (oParameter) {\n\t\t\t\t\tif (bExpression) {\n\t\t\t\t\t\t// the expression might have a lower operator precedence than '+'\n\t\t\t\t\t\tExpression.wrapExpression(oParameter);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Basics.resultToString(oParameter, bExpression,\n\t\t\t\t\t\toPathValue.complexBinding);\n\t\t\t\t});\n\t\t\t\toResult = bExpression\n\t\t\t\t\t? {result : \"expression\", value : aParts.join(\"+\")}\n\t\t\t\t\t: {result : \"composite\", value : aParts.join(\"\")};\n\t\t\t\toResult.type = \"Edm.String\";\n\n\t\t\t\treturn oResult;\n\t\t\t})",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 10,
                                "column": 41
                              },
                              "end": {
                                "row": 10,
                                "column": 42
                              },
                              "text": "("
                            },
                            {
                              "type": "function",
                              "start": {
                                "row": 10,
                                "column": 42
                              },
                              "end": {
                                "row": 38,
                                "column": 4
                              },
                              "text": "function (aParameters) {\n\t\t\t\tvar bExpression,\n\t\t\t\t\taParts,\n\t\t\t\t\toResult;\n\n\t\t\t\tbExpression = oPathValue.asExpression || aParameters.some(function (oParameter) {\n\t\t\t\t\t// if any parameter is type expression, the concat must become expression, too\n\t\t\t\t\treturn oParameter.result === \"expression\";\n\t\t\t\t});\n\t\t\t\t// convert the results to strings after we know whether the result is expression\n\t\t\t\taParts = aParameters.filter(function (oParameter) {\n\t\t\t\t\t// ignore null (otherwise the string 'null' would appear in expressions)\n\t\t\t\t\treturn oParameter.type !== 'edm:Null';\n\t\t\t\t}).map(function (oParameter) {\n\t\t\t\t\tif (bExpression) {\n\t\t\t\t\t\t// the expression might have a lower operator precedence than '+'\n\t\t\t\t\t\tExpression.wrapExpression(oParameter);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Basics.resultToString(oParameter, bExpression,\n\t\t\t\t\t\toPathValue.complexBinding);\n\t\t\t\t});\n\t\t\t\toResult = bExpression\n\t\t\t\t\t? {result : \"expression\", value : aParts.join(\"+\")}\n\t\t\t\t\t: {result : \"composite\", value : aParts.join(\"\")};\n\t\t\t\toResult.type = \"Edm.String\";\n\n\t\t\t\treturn oResult;\n\t\t\t}",
                              "children": [
                                {
                                  "type": "function",
                                  "start": {
                                    "row": 10,
                                    "column": 42
                                  },
                                  "end": {
                                    "row": 10,
                                    "column": 50
                                  },
                                  "text": "function"
                                },
                                {
                                  "type": "formal_parameters",
                                  "start": {
                                    "row": 10,
                                    "column": 51
                                  },
                                  "end": {
                                    "row": 10,
                                    "column": 64
                                  },
                                  "text": "(aParameters)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 10,
                                        "column": 51
                                      },
                                      "end": {
                                        "row": 10,
                                        "column": 52
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 10,
                                        "column": 52
                                      },
                                      "end": {
                                        "row": 10,
                                        "column": 63
                                      },
                                      "text": "aParameters"
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 10,
                                        "column": 63
                                      },
                                      "end": {
                                        "row": 10,
                                        "column": 64
                                      },
                                      "text": ")"
                                    }
                                  ]
                                },
                                {
                                  "type": "statement_block",
                                  "start": {
                                    "row": 10,
                                    "column": 65
                                  },
                                  "end": {
                                    "row": 38,
                                    "column": 4
                                  },
                                  "text": "{\n\t\t\t\tvar bExpression,\n\t\t\t\t\taParts,\n\t\t\t\t\toResult;\n\n\t\t\t\tbExpression = oPathValue.asExpression || aParameters.some(function (oParameter) {\n\t\t\t\t\t// if any parameter is type expression, the concat must become expression, too\n\t\t\t\t\treturn oParameter.result === \"expression\";\n\t\t\t\t});\n\t\t\t\t// convert the results to strings after we know whether the result is expression\n\t\t\t\taParts = aParameters.filter(function (oParameter) {\n\t\t\t\t\t// ignore null (otherwise the string 'null' would appear in expressions)\n\t\t\t\t\treturn oParameter.type !== 'edm:Null';\n\t\t\t\t}).map(function (oParameter) {\n\t\t\t\t\tif (bExpression) {\n\t\t\t\t\t\t// the expression might have a lower operator precedence than '+'\n\t\t\t\t\t\tExpression.wrapExpression(oParameter);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Basics.resultToString(oParameter, bExpression,\n\t\t\t\t\t\toPathValue.complexBinding);\n\t\t\t\t});\n\t\t\t\toResult = bExpression\n\t\t\t\t\t? {result : \"expression\", value : aParts.join(\"+\")}\n\t\t\t\t\t: {result : \"composite\", value : aParts.join(\"\")};\n\t\t\t\toResult.type = \"Edm.String\";\n\n\t\t\t\treturn oResult;\n\t\t\t}",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start": {
                                        "row": 10,
                                        "column": 65
                                      },
                                      "end": {
                                        "row": 10,
                                        "column": 66
                                      },
                                      "text": "{"
                                    },
                                    {
                                      "type": "variable_declaration",
                                      "start": {
                                        "row": 11,
                                        "column": 4
                                      },
                                      "end": {
                                        "row": 13,
                                        "column": 13
                                      },
                                      "text": "var bExpression,\n\t\t\t\t\taParts,\n\t\t\t\t\toResult;",
                                      "children": [
                                        {
                                          "type": "var",
                                          "start": {
                                            "row": 11,
                                            "column": 4
                                          },
                                          "end": {
                                            "row": 11,
                                            "column": 7
                                          },
                                          "text": "var"
                                        },
                                        {
                                          "type": "variable_declarator",
                                          "start": {
                                            "row": 11,
                                            "column": 8
                                          },
                                          "end": {
                                            "row": 11,
                                            "column": 19
                                          },
                                          "text": "bExpression",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 11,
                                                "column": 8
                                              },
                                              "end": {
                                                "row": 11,
                                                "column": 19
                                              },
                                              "text": "bExpression"
                                            }
                                          ]
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 11,
                                            "column": 19
                                          },
                                          "end": {
                                            "row": 11,
                                            "column": 20
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "variable_declarator",
                                          "start": {
                                            "row": 12,
                                            "column": 5
                                          },
                                          "end": {
                                            "row": 12,
                                            "column": 11
                                          },
                                          "text": "aParts",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 12,
                                                "column": 5
                                              },
                                              "end": {
                                                "row": 12,
                                                "column": 11
                                              },
                                              "text": "aParts"
                                            }
                                          ]
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 12,
                                            "column": 11
                                          },
                                          "end": {
                                            "row": 12,
                                            "column": 12
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "variable_declarator",
                                          "start": {
                                            "row": 13,
                                            "column": 5
                                          },
                                          "end": {
                                            "row": 13,
                                            "column": 12
                                          },
                                          "text": "oResult",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 13,
                                                "column": 5
                                              },
                                              "end": {
                                                "row": 13,
                                                "column": 12
                                              },
                                              "text": "oResult"
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start": {
                                            "row": 13,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 13,
                                            "column": 13
                                          },
                                          "text": ";"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start": {
                                        "row": 15,
                                        "column": 4
                                      },
                                      "end": {
                                        "row": 18,
                                        "column": 7
                                      },
                                      "text": "bExpression = oPathValue.asExpression || aParameters.some(function (oParameter) {\n\t\t\t\t\t// if any parameter is type expression, the concat must become expression, too\n\t\t\t\t\treturn oParameter.result === \"expression\";\n\t\t\t\t});",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start": {
                                            "row": 15,
                                            "column": 4
                                          },
                                          "end": {
                                            "row": 18,
                                            "column": 6
                                          },
                                          "text": "bExpression = oPathValue.asExpression || aParameters.some(function (oParameter) {\n\t\t\t\t\t// if any parameter is type expression, the concat must become expression, too\n\t\t\t\t\treturn oParameter.result === \"expression\";\n\t\t\t\t})",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 15,
                                                "column": 4
                                              },
                                              "end": {
                                                "row": 15,
                                                "column": 15
                                              },
                                              "text": "bExpression"
                                            },
                                            {
                                              "type": "=",
                                              "start": {
                                                "row": 15,
                                                "column": 16
                                              },
                                              "end": {
                                                "row": 15,
                                                "column": 17
                                              },
                                              "text": "="
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start": {
                                                "row": 15,
                                                "column": 18
                                              },
                                              "end": {
                                                "row": 18,
                                                "column": 6
                                              },
                                              "text": "oPathValue.asExpression || aParameters.some(function (oParameter) {\n\t\t\t\t\t// if any parameter is type expression, the concat must become expression, too\n\t\t\t\t\treturn oParameter.result === \"expression\";\n\t\t\t\t})",
                                              "children": [
                                                {
                                                  "type": "member_expression",
                                                  "start": {
                                                    "row": 15,
                                                    "column": 18
                                                  },
                                                  "end": {
                                                    "row": 15,
                                                    "column": 41
                                                  },
                                                  "text": "oPathValue.asExpression",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 15,
                                                        "column": 18
                                                      },
                                                      "end": {
                                                        "row": 15,
                                                        "column": 28
                                                      },
                                                      "text": "oPathValue"
                                                    },
                                                    {
                                                      "type": ".",
                                                      "start": {
                                                        "row": 15,
                                                        "column": 28
                                                      },
                                                      "end": {
                                                        "row": 15,
                                                        "column": 29
                                                      },
                                                      "text": "."
                                                    },
                                                    {
                                                      "type": "property_identifier",
                                                      "start": {
                                                        "row": 15,
                                                        "column": 29
                                                      },
                                                      "end": {
                                                        "row": 15,
                                                        "column": 41
                                                      },
                                                      "text": "asExpression"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "||",
                                                  "start": {
                                                    "row": 15,
                                                    "column": 42
                                                  },
                                                  "end": {
                                                    "row": 15,
                                                    "column": 44
                                                  },
                                                  "text": "||"
                                                },
                                                {
                                                  "type": "call_expression",
                                                  "start": {
                                                    "row": 15,
                                                    "column": 45
                                                  },
                                                  "end": {
                                                    "row": 18,
                                                    "column": 6
                                                  },
                                                  "text": "aParameters.some(function (oParameter) {\n\t\t\t\t\t// if any parameter is type expression, the concat must become expression, too\n\t\t\t\t\treturn oParameter.result === \"expression\";\n\t\t\t\t})",
                                                  "children": [
                                                    {
                                                      "type": "member_expression",
                                                      "start": {
                                                        "row": 15,
                                                        "column": 45
                                                      },
                                                      "end": {
                                                        "row": 15,
                                                        "column": 61
                                                      },
                                                      "text": "aParameters.some",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 15,
                                                            "column": 45
                                                          },
                                                          "end": {
                                                            "row": 15,
                                                            "column": 56
                                                          },
                                                          "text": "aParameters"
                                                        },
                                                        {
                                                          "type": ".",
                                                          "start": {
                                                            "row": 15,
                                                            "column": 56
                                                          },
                                                          "end": {
                                                            "row": 15,
                                                            "column": 57
                                                          },
                                                          "text": "."
                                                        },
                                                        {
                                                          "type": "property_identifier",
                                                          "start": {
                                                            "row": 15,
                                                            "column": 57
                                                          },
                                                          "end": {
                                                            "row": 15,
                                                            "column": 61
                                                          },
                                                          "text": "some"
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "arguments",
                                                      "start": {
                                                        "row": 15,
                                                        "column": 61
                                                      },
                                                      "end": {
                                                        "row": 18,
                                                        "column": 6
                                                      },
                                                      "text": "(function (oParameter) {\n\t\t\t\t\t// if any parameter is type expression, the concat must become expression, too\n\t\t\t\t\treturn oParameter.result === \"expression\";\n\t\t\t\t})",
                                                      "children": [
                                                        {
                                                          "type": "(",
                                                          "start": {
                                                            "row": 15,
                                                            "column": 61
                                                          },
                                                          "end": {
                                                            "row": 15,
                                                            "column": 62
                                                          },
                                                          "text": "("
                                                        },
                                                        {
                                                          "type": "function",
                                                          "start": {
                                                            "row": 15,
                                                            "column": 62
                                                          },
                                                          "end": {
                                                            "row": 18,
                                                            "column": 5
                                                          },
                                                          "text": "function (oParameter) {\n\t\t\t\t\t// if any parameter is type expression, the concat must become expression, too\n\t\t\t\t\treturn oParameter.result === \"expression\";\n\t\t\t\t}",
                                                          "children": [
                                                            {
                                                              "type": "function",
                                                              "start": {
                                                                "row": 15,
                                                                "column": 62
                                                              },
                                                              "end": {
                                                                "row": 15,
                                                                "column": 70
                                                              },
                                                              "text": "function"
                                                            },
                                                            {
                                                              "type": "formal_parameters",
                                                              "start": {
                                                                "row": 15,
                                                                "column": 71
                                                              },
                                                              "end": {
                                                                "row": 15,
                                                                "column": 83
                                                              },
                                                              "text": "(oParameter)",
                                                              "children": [
                                                                {
                                                                  "type": "(",
                                                                  "start": {
                                                                    "row": 15,
                                                                    "column": 71
                                                                  },
                                                                  "end": {
                                                                    "row": 15,
                                                                    "column": 72
                                                                  },
                                                                  "text": "("
                                                                },
                                                                {
                                                                  "type": "identifier",
                                                                  "start": {
                                                                    "row": 15,
                                                                    "column": 72
                                                                  },
                                                                  "end": {
                                                                    "row": 15,
                                                                    "column": 82
                                                                  },
                                                                  "text": "oParameter"
                                                                },
                                                                {
                                                                  "type": ")",
                                                                  "start": {
                                                                    "row": 15,
                                                                    "column": 82
                                                                  },
                                                                  "end": {
                                                                    "row": 15,
                                                                    "column": 83
                                                                  },
                                                                  "text": ")"
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "statement_block",
                                                              "start": {
                                                                "row": 15,
                                                                "column": 84
                                                              },
                                                              "end": {
                                                                "row": 18,
                                                                "column": 5
                                                              },
                                                              "text": "{\n\t\t\t\t\t// if any parameter is type expression, the concat must become expression, too\n\t\t\t\t\treturn oParameter.result === \"expression\";\n\t\t\t\t}",
                                                              "children": [
                                                                {
                                                                  "type": "{",
                                                                  "start": {
                                                                    "row": 15,
                                                                    "column": 84
                                                                  },
                                                                  "end": {
                                                                    "row": 15,
                                                                    "column": 85
                                                                  },
                                                                  "text": "{"
                                                                },
                                                                {
                                                                  "type": "comment",
                                                                  "start": {
                                                                    "row": 16,
                                                                    "column": 5
                                                                  },
                                                                  "end": {
                                                                    "row": 16,
                                                                    "column": 83
                                                                  },
                                                                  "text": "// if any parameter is type expression, the concat must become expression, too"
                                                                },
                                                                {
                                                                  "type": "return_statement",
                                                                  "start": {
                                                                    "row": 17,
                                                                    "column": 5
                                                                  },
                                                                  "end": {
                                                                    "row": 17,
                                                                    "column": 47
                                                                  },
                                                                  "text": "return oParameter.result === \"expression\";",
                                                                  "children": [
                                                                    {
                                                                      "type": "return",
                                                                      "start": {
                                                                        "row": 17,
                                                                        "column": 5
                                                                      },
                                                                      "end": {
                                                                        "row": 17,
                                                                        "column": 11
                                                                      },
                                                                      "text": "return"
                                                                    },
                                                                    {
                                                                      "type": "binary_expression",
                                                                      "start": {
                                                                        "row": 17,
                                                                        "column": 12
                                                                      },
                                                                      "end": {
                                                                        "row": 17,
                                                                        "column": 46
                                                                      },
                                                                      "text": "oParameter.result === \"expression\"",
                                                                      "children": [
                                                                        {
                                                                          "type": "member_expression",
                                                                          "start": {
                                                                            "row": 17,
                                                                            "column": 12
                                                                          },
                                                                          "end": {
                                                                            "row": 17,
                                                                            "column": 29
                                                                          },
                                                                          "text": "oParameter.result",
                                                                          "children": [
                                                                            {
                                                                              "type": "identifier",
                                                                              "start": {
                                                                                "row": 17,
                                                                                "column": 12
                                                                              },
                                                                              "end": {
                                                                                "row": 17,
                                                                                "column": 22
                                                                              },
                                                                              "text": "oParameter"
                                                                            },
                                                                            {
                                                                              "type": ".",
                                                                              "start": {
                                                                                "row": 17,
                                                                                "column": 22
                                                                              },
                                                                              "end": {
                                                                                "row": 17,
                                                                                "column": 23
                                                                              },
                                                                              "text": "."
                                                                            },
                                                                            {
                                                                              "type": "property_identifier",
                                                                              "start": {
                                                                                "row": 17,
                                                                                "column": 23
                                                                              },
                                                                              "end": {
                                                                                "row": 17,
                                                                                "column": 29
                                                                              },
                                                                              "text": "result"
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "===",
                                                                          "start": {
                                                                            "row": 17,
                                                                            "column": 30
                                                                          },
                                                                          "end": {
                                                                            "row": 17,
                                                                            "column": 33
                                                                          },
                                                                          "text": "==="
                                                                        },
                                                                        {
                                                                          "type": "string",
                                                                          "start": {
                                                                            "row": 17,
                                                                            "column": 34
                                                                          },
                                                                          "end": {
                                                                            "row": 17,
                                                                            "column": 46
                                                                          },
                                                                          "text": "\"expression\"",
                                                                          "children": [
                                                                            {
                                                                              "type": "\"",
                                                                              "start": {
                                                                                "row": 17,
                                                                                "column": 34
                                                                              },
                                                                              "end": {
                                                                                "row": 17,
                                                                                "column": 35
                                                                              },
                                                                              "text": "\""
                                                                            },
                                                                            {
                                                                              "type": "string_fragment",
                                                                              "start": {
                                                                                "row": 17,
                                                                                "column": 35
                                                                              },
                                                                              "end": {
                                                                                "row": 17,
                                                                                "column": 45
                                                                              },
                                                                              "text": "expression"
                                                                            },
                                                                            {
                                                                              "type": "\"",
                                                                              "start": {
                                                                                "row": 17,
                                                                                "column": 45
                                                                              },
                                                                              "end": {
                                                                                "row": 17,
                                                                                "column": 46
                                                                              },
                                                                              "text": "\""
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": ";",
                                                                      "start": {
                                                                        "row": 17,
                                                                        "column": 46
                                                                      },
                                                                      "end": {
                                                                        "row": 17,
                                                                        "column": 47
                                                                      },
                                                                      "text": ";"
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "}",
                                                                  "start": {
                                                                    "row": 18,
                                                                    "column": 4
                                                                  },
                                                                  "end": {
                                                                    "row": 18,
                                                                    "column": 5
                                                                  },
                                                                  "text": "}"
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": ")",
                                                          "start": {
                                                            "row": 18,
                                                            "column": 5
                                                          },
                                                          "end": {
                                                            "row": 18,
                                                            "column": 6
                                                          },
                                                          "text": ")"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start": {
                                            "row": 18,
                                            "column": 6
                                          },
                                          "end": {
                                            "row": 18,
                                            "column": 7
                                          },
                                          "text": ";"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "comment",
                                      "start": {
                                        "row": 19,
                                        "column": 4
                                      },
                                      "end": {
                                        "row": 19,
                                        "column": 84
                                      },
                                      "text": "// convert the results to strings after we know whether the result is expression"
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start": {
                                        "row": 20,
                                        "column": 4
                                      },
                                      "end": {
                                        "row": 31,
                                        "column": 7
                                      },
                                      "text": "aParts = aParameters.filter(function (oParameter) {\n\t\t\t\t\t// ignore null (otherwise the string 'null' would appear in expressions)\n\t\t\t\t\treturn oParameter.type !== 'edm:Null';\n\t\t\t\t}).map(function (oParameter) {\n\t\t\t\t\tif (bExpression) {\n\t\t\t\t\t\t// the expression might have a lower operator precedence than '+'\n\t\t\t\t\t\tExpression.wrapExpression(oParameter);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Basics.resultToString(oParameter, bExpression,\n\t\t\t\t\t\toPathValue.complexBinding);\n\t\t\t\t});",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start": {
                                            "row": 20,
                                            "column": 4
                                          },
                                          "end": {
                                            "row": 31,
                                            "column": 6
                                          },
                                          "text": "aParts = aParameters.filter(function (oParameter) {\n\t\t\t\t\t// ignore null (otherwise the string 'null' would appear in expressions)\n\t\t\t\t\treturn oParameter.type !== 'edm:Null';\n\t\t\t\t}).map(function (oParameter) {\n\t\t\t\t\tif (bExpression) {\n\t\t\t\t\t\t// the expression might have a lower operator precedence than '+'\n\t\t\t\t\t\tExpression.wrapExpression(oParameter);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Basics.resultToString(oParameter, bExpression,\n\t\t\t\t\t\toPathValue.complexBinding);\n\t\t\t\t})",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 20,
                                                "column": 4
                                              },
                                              "end": {
                                                "row": 20,
                                                "column": 10
                                              },
                                              "text": "aParts"
                                            },
                                            {
                                              "type": "=",
                                              "start": {
                                                "row": 20,
                                                "column": 11
                                              },
                                              "end": {
                                                "row": 20,
                                                "column": 12
                                              },
                                              "text": "="
                                            },
                                            {
                                              "type": "call_expression",
                                              "start": {
                                                "row": 20,
                                                "column": 13
                                              },
                                              "end": {
                                                "row": 31,
                                                "column": 6
                                              },
                                              "text": "aParameters.filter(function (oParameter) {\n\t\t\t\t\t// ignore null (otherwise the string 'null' would appear in expressions)\n\t\t\t\t\treturn oParameter.type !== 'edm:Null';\n\t\t\t\t}).map(function (oParameter) {\n\t\t\t\t\tif (bExpression) {\n\t\t\t\t\t\t// the expression might have a lower operator precedence than '+'\n\t\t\t\t\t\tExpression.wrapExpression(oParameter);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Basics.resultToString(oParameter, bExpression,\n\t\t\t\t\t\toPathValue.complexBinding);\n\t\t\t\t})",
                                              "children": [
                                                {
                                                  "type": "member_expression",
                                                  "start": {
                                                    "row": 20,
                                                    "column": 13
                                                  },
                                                  "end": {
                                                    "row": 23,
                                                    "column": 10
                                                  },
                                                  "text": "aParameters.filter(function (oParameter) {\n\t\t\t\t\t// ignore null (otherwise the string 'null' would appear in expressions)\n\t\t\t\t\treturn oParameter.type !== 'edm:Null';\n\t\t\t\t}).map",
                                                  "children": [
                                                    {
                                                      "type": "call_expression",
                                                      "start": {
                                                        "row": 20,
                                                        "column": 13
                                                      },
                                                      "end": {
                                                        "row": 23,
                                                        "column": 6
                                                      },
                                                      "text": "aParameters.filter(function (oParameter) {\n\t\t\t\t\t// ignore null (otherwise the string 'null' would appear in expressions)\n\t\t\t\t\treturn oParameter.type !== 'edm:Null';\n\t\t\t\t})",
                                                      "children": [
                                                        {
                                                          "type": "member_expression",
                                                          "start": {
                                                            "row": 20,
                                                            "column": 13
                                                          },
                                                          "end": {
                                                            "row": 20,
                                                            "column": 31
                                                          },
                                                          "text": "aParameters.filter",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start": {
                                                                "row": 20,
                                                                "column": 13
                                                              },
                                                              "end": {
                                                                "row": 20,
                                                                "column": 24
                                                              },
                                                              "text": "aParameters"
                                                            },
                                                            {
                                                              "type": ".",
                                                              "start": {
                                                                "row": 20,
                                                                "column": 24
                                                              },
                                                              "end": {
                                                                "row": 20,
                                                                "column": 25
                                                              },
                                                              "text": "."
                                                            },
                                                            {
                                                              "type": "property_identifier",
                                                              "start": {
                                                                "row": 20,
                                                                "column": 25
                                                              },
                                                              "end": {
                                                                "row": 20,
                                                                "column": 31
                                                              },
                                                              "text": "filter"
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "arguments",
                                                          "start": {
                                                            "row": 20,
                                                            "column": 31
                                                          },
                                                          "end": {
                                                            "row": 23,
                                                            "column": 6
                                                          },
                                                          "text": "(function (oParameter) {\n\t\t\t\t\t// ignore null (otherwise the string 'null' would appear in expressions)\n\t\t\t\t\treturn oParameter.type !== 'edm:Null';\n\t\t\t\t})",
                                                          "children": [
                                                            {
                                                              "type": "(",
                                                              "start": {
                                                                "row": 20,
                                                                "column": 31
                                                              },
                                                              "end": {
                                                                "row": 20,
                                                                "column": 32
                                                              },
                                                              "text": "("
                                                            },
                                                            {
                                                              "type": "function",
                                                              "start": {
                                                                "row": 20,
                                                                "column": 32
                                                              },
                                                              "end": {
                                                                "row": 23,
                                                                "column": 5
                                                              },
                                                              "text": "function (oParameter) {\n\t\t\t\t\t// ignore null (otherwise the string 'null' would appear in expressions)\n\t\t\t\t\treturn oParameter.type !== 'edm:Null';\n\t\t\t\t}",
                                                              "children": [
                                                                {
                                                                  "type": "function",
                                                                  "start": {
                                                                    "row": 20,
                                                                    "column": 32
                                                                  },
                                                                  "end": {
                                                                    "row": 20,
                                                                    "column": 40
                                                                  },
                                                                  "text": "function"
                                                                },
                                                                {
                                                                  "type": "formal_parameters",
                                                                  "start": {
                                                                    "row": 20,
                                                                    "column": 41
                                                                  },
                                                                  "end": {
                                                                    "row": 20,
                                                                    "column": 53
                                                                  },
                                                                  "text": "(oParameter)",
                                                                  "children": [
                                                                    {
                                                                      "type": "(",
                                                                      "start": {
                                                                        "row": 20,
                                                                        "column": 41
                                                                      },
                                                                      "end": {
                                                                        "row": 20,
                                                                        "column": 42
                                                                      },
                                                                      "text": "("
                                                                    },
                                                                    {
                                                                      "type": "identifier",
                                                                      "start": {
                                                                        "row": 20,
                                                                        "column": 42
                                                                      },
                                                                      "end": {
                                                                        "row": 20,
                                                                        "column": 52
                                                                      },
                                                                      "text": "oParameter"
                                                                    },
                                                                    {
                                                                      "type": ")",
                                                                      "start": {
                                                                        "row": 20,
                                                                        "column": 52
                                                                      },
                                                                      "end": {
                                                                        "row": 20,
                                                                        "column": 53
                                                                      },
                                                                      "text": ")"
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "statement_block",
                                                                  "start": {
                                                                    "row": 20,
                                                                    "column": 54
                                                                  },
                                                                  "end": {
                                                                    "row": 23,
                                                                    "column": 5
                                                                  },
                                                                  "text": "{\n\t\t\t\t\t// ignore null (otherwise the string 'null' would appear in expressions)\n\t\t\t\t\treturn oParameter.type !== 'edm:Null';\n\t\t\t\t}",
                                                                  "children": [
                                                                    {
                                                                      "type": "{",
                                                                      "start": {
                                                                        "row": 20,
                                                                        "column": 54
                                                                      },
                                                                      "end": {
                                                                        "row": 20,
                                                                        "column": 55
                                                                      },
                                                                      "text": "{"
                                                                    },
                                                                    {
                                                                      "type": "comment",
                                                                      "start": {
                                                                        "row": 21,
                                                                        "column": 5
                                                                      },
                                                                      "end": {
                                                                        "row": 21,
                                                                        "column": 77
                                                                      },
                                                                      "text": "// ignore null (otherwise the string 'null' would appear in expressions)"
                                                                    },
                                                                    {
                                                                      "type": "return_statement",
                                                                      "start": {
                                                                        "row": 22,
                                                                        "column": 5
                                                                      },
                                                                      "end": {
                                                                        "row": 22,
                                                                        "column": 43
                                                                      },
                                                                      "text": "return oParameter.type !== 'edm:Null';",
                                                                      "children": [
                                                                        {
                                                                          "type": "return",
                                                                          "start": {
                                                                            "row": 22,
                                                                            "column": 5
                                                                          },
                                                                          "end": {
                                                                            "row": 22,
                                                                            "column": 11
                                                                          },
                                                                          "text": "return"
                                                                        },
                                                                        {
                                                                          "type": "binary_expression",
                                                                          "start": {
                                                                            "row": 22,
                                                                            "column": 12
                                                                          },
                                                                          "end": {
                                                                            "row": 22,
                                                                            "column": 42
                                                                          },
                                                                          "text": "oParameter.type !== 'edm:Null'",
                                                                          "children": [
                                                                            {
                                                                              "type": "member_expression",
                                                                              "start": {
                                                                                "row": 22,
                                                                                "column": 12
                                                                              },
                                                                              "end": {
                                                                                "row": 22,
                                                                                "column": 27
                                                                              },
                                                                              "text": "oParameter.type",
                                                                              "children": [
                                                                                {
                                                                                  "type": "identifier",
                                                                                  "start": {
                                                                                    "row": 22,
                                                                                    "column": 12
                                                                                  },
                                                                                  "end": {
                                                                                    "row": 22,
                                                                                    "column": 22
                                                                                  },
                                                                                  "text": "oParameter"
                                                                                },
                                                                                {
                                                                                  "type": ".",
                                                                                  "start": {
                                                                                    "row": 22,
                                                                                    "column": 22
                                                                                  },
                                                                                  "end": {
                                                                                    "row": 22,
                                                                                    "column": 23
                                                                                  },
                                                                                  "text": "."
                                                                                },
                                                                                {
                                                                                  "type": "property_identifier",
                                                                                  "start": {
                                                                                    "row": 22,
                                                                                    "column": 23
                                                                                  },
                                                                                  "end": {
                                                                                    "row": 22,
                                                                                    "column": 27
                                                                                  },
                                                                                  "text": "type"
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "!==",
                                                                              "start": {
                                                                                "row": 22,
                                                                                "column": 28
                                                                              },
                                                                              "end": {
                                                                                "row": 22,
                                                                                "column": 31
                                                                              },
                                                                              "text": "!=="
                                                                            },
                                                                            {
                                                                              "type": "string",
                                                                              "start": {
                                                                                "row": 22,
                                                                                "column": 32
                                                                              },
                                                                              "end": {
                                                                                "row": 22,
                                                                                "column": 42
                                                                              },
                                                                              "text": "'edm:Null'",
                                                                              "children": [
                                                                                {
                                                                                  "type": "'",
                                                                                  "start": {
                                                                                    "row": 22,
                                                                                    "column": 32
                                                                                  },
                                                                                  "end": {
                                                                                    "row": 22,
                                                                                    "column": 33
                                                                                  },
                                                                                  "text": "'"
                                                                                },
                                                                                {
                                                                                  "type": "string_fragment",
                                                                                  "start": {
                                                                                    "row": 22,
                                                                                    "column": 33
                                                                                  },
                                                                                  "end": {
                                                                                    "row": 22,
                                                                                    "column": 41
                                                                                  },
                                                                                  "text": "edm:Null"
                                                                                },
                                                                                {
                                                                                  "type": "'",
                                                                                  "start": {
                                                                                    "row": 22,
                                                                                    "column": 41
                                                                                  },
                                                                                  "end": {
                                                                                    "row": 22,
                                                                                    "column": 42
                                                                                  },
                                                                                  "text": "'"
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": ";",
                                                                          "start": {
                                                                            "row": 22,
                                                                            "column": 42
                                                                          },
                                                                          "end": {
                                                                            "row": 22,
                                                                            "column": 43
                                                                          },
                                                                          "text": ";"
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "}",
                                                                      "start": {
                                                                        "row": 23,
                                                                        "column": 4
                                                                      },
                                                                      "end": {
                                                                        "row": 23,
                                                                        "column": 5
                                                                      },
                                                                      "text": "}"
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": ")",
                                                              "start": {
                                                                "row": 23,
                                                                "column": 5
                                                              },
                                                              "end": {
                                                                "row": 23,
                                                                "column": 6
                                                              },
                                                              "text": ")"
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ".",
                                                      "start": {
                                                        "row": 23,
                                                        "column": 6
                                                      },
                                                      "end": {
                                                        "row": 23,
                                                        "column": 7
                                                      },
                                                      "text": "."
                                                    },
                                                    {
                                                      "type": "property_identifier",
                                                      "start": {
                                                        "row": 23,
                                                        "column": 7
                                                      },
                                                      "end": {
                                                        "row": 23,
                                                        "column": 10
                                                      },
                                                      "text": "map"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "arguments",
                                                  "start": {
                                                    "row": 23,
                                                    "column": 10
                                                  },
                                                  "end": {
                                                    "row": 31,
                                                    "column": 6
                                                  },
                                                  "text": "(function (oParameter) {\n\t\t\t\t\tif (bExpression) {\n\t\t\t\t\t\t// the expression might have a lower operator precedence than '+'\n\t\t\t\t\t\tExpression.wrapExpression(oParameter);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Basics.resultToString(oParameter, bExpression,\n\t\t\t\t\t\toPathValue.complexBinding);\n\t\t\t\t})",
                                                  "children": [
                                                    {
                                                      "type": "(",
                                                      "start": {
                                                        "row": 23,
                                                        "column": 10
                                                      },
                                                      "end": {
                                                        "row": 23,
                                                        "column": 11
                                                      },
                                                      "text": "("
                                                    },
                                                    {
                                                      "type": "function",
                                                      "start": {
                                                        "row": 23,
                                                        "column": 11
                                                      },
                                                      "end": {
                                                        "row": 31,
                                                        "column": 5
                                                      },
                                                      "text": "function (oParameter) {\n\t\t\t\t\tif (bExpression) {\n\t\t\t\t\t\t// the expression might have a lower operator precedence than '+'\n\t\t\t\t\t\tExpression.wrapExpression(oParameter);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Basics.resultToString(oParameter, bExpression,\n\t\t\t\t\t\toPathValue.complexBinding);\n\t\t\t\t}",
                                                      "children": [
                                                        {
                                                          "type": "function",
                                                          "start": {
                                                            "row": 23,
                                                            "column": 11
                                                          },
                                                          "end": {
                                                            "row": 23,
                                                            "column": 19
                                                          },
                                                          "text": "function"
                                                        },
                                                        {
                                                          "type": "formal_parameters",
                                                          "start": {
                                                            "row": 23,
                                                            "column": 20
                                                          },
                                                          "end": {
                                                            "row": 23,
                                                            "column": 32
                                                          },
                                                          "text": "(oParameter)",
                                                          "children": [
                                                            {
                                                              "type": "(",
                                                              "start": {
                                                                "row": 23,
                                                                "column": 20
                                                              },
                                                              "end": {
                                                                "row": 23,
                                                                "column": 21
                                                              },
                                                              "text": "("
                                                            },
                                                            {
                                                              "type": "identifier",
                                                              "start": {
                                                                "row": 23,
                                                                "column": 21
                                                              },
                                                              "end": {
                                                                "row": 23,
                                                                "column": 31
                                                              },
                                                              "text": "oParameter"
                                                            },
                                                            {
                                                              "type": ")",
                                                              "start": {
                                                                "row": 23,
                                                                "column": 31
                                                              },
                                                              "end": {
                                                                "row": 23,
                                                                "column": 32
                                                              },
                                                              "text": ")"
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "statement_block",
                                                          "start": {
                                                            "row": 23,
                                                            "column": 33
                                                          },
                                                          "end": {
                                                            "row": 31,
                                                            "column": 5
                                                          },
                                                          "text": "{\n\t\t\t\t\tif (bExpression) {\n\t\t\t\t\t\t// the expression might have a lower operator precedence than '+'\n\t\t\t\t\t\tExpression.wrapExpression(oParameter);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Basics.resultToString(oParameter, bExpression,\n\t\t\t\t\t\toPathValue.complexBinding);\n\t\t\t\t}",
                                                          "children": [
                                                            {
                                                              "type": "{",
                                                              "start": {
                                                                "row": 23,
                                                                "column": 33
                                                              },
                                                              "end": {
                                                                "row": 23,
                                                                "column": 34
                                                              },
                                                              "text": "{"
                                                            },
                                                            {
                                                              "type": "if_statement",
                                                              "start": {
                                                                "row": 24,
                                                                "column": 5
                                                              },
                                                              "end": {
                                                                "row": 27,
                                                                "column": 6
                                                              },
                                                              "text": "if (bExpression) {\n\t\t\t\t\t\t// the expression might have a lower operator precedence than '+'\n\t\t\t\t\t\tExpression.wrapExpression(oParameter);\n\t\t\t\t\t}",
                                                              "children": [
                                                                {
                                                                  "type": "if",
                                                                  "start": {
                                                                    "row": 24,
                                                                    "column": 5
                                                                  },
                                                                  "end": {
                                                                    "row": 24,
                                                                    "column": 7
                                                                  },
                                                                  "text": "if"
                                                                },
                                                                {
                                                                  "type": "parenthesized_expression",
                                                                  "start": {
                                                                    "row": 24,
                                                                    "column": 8
                                                                  },
                                                                  "end": {
                                                                    "row": 24,
                                                                    "column": 21
                                                                  },
                                                                  "text": "(bExpression)",
                                                                  "children": [
                                                                    {
                                                                      "type": "(",
                                                                      "start": {
                                                                        "row": 24,
                                                                        "column": 8
                                                                      },
                                                                      "end": {
                                                                        "row": 24,
                                                                        "column": 9
                                                                      },
                                                                      "text": "("
                                                                    },
                                                                    {
                                                                      "type": "identifier",
                                                                      "start": {
                                                                        "row": 24,
                                                                        "column": 9
                                                                      },
                                                                      "end": {
                                                                        "row": 24,
                                                                        "column": 20
                                                                      },
                                                                      "text": "bExpression"
                                                                    },
                                                                    {
                                                                      "type": ")",
                                                                      "start": {
                                                                        "row": 24,
                                                                        "column": 20
                                                                      },
                                                                      "end": {
                                                                        "row": 24,
                                                                        "column": 21
                                                                      },
                                                                      "text": ")"
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "statement_block",
                                                                  "start": {
                                                                    "row": 24,
                                                                    "column": 22
                                                                  },
                                                                  "end": {
                                                                    "row": 27,
                                                                    "column": 6
                                                                  },
                                                                  "text": "{\n\t\t\t\t\t\t// the expression might have a lower operator precedence than '+'\n\t\t\t\t\t\tExpression.wrapExpression(oParameter);\n\t\t\t\t\t}",
                                                                  "children": [
                                                                    {
                                                                      "type": "{",
                                                                      "start": {
                                                                        "row": 24,
                                                                        "column": 22
                                                                      },
                                                                      "end": {
                                                                        "row": 24,
                                                                        "column": 23
                                                                      },
                                                                      "text": "{"
                                                                    },
                                                                    {
                                                                      "type": "comment",
                                                                      "start": {
                                                                        "row": 25,
                                                                        "column": 6
                                                                      },
                                                                      "end": {
                                                                        "row": 25,
                                                                        "column": 71
                                                                      },
                                                                      "text": "// the expression might have a lower operator precedence than '+'"
                                                                    },
                                                                    {
                                                                      "type": "expression_statement",
                                                                      "start": {
                                                                        "row": 26,
                                                                        "column": 6
                                                                      },
                                                                      "end": {
                                                                        "row": 26,
                                                                        "column": 44
                                                                      },
                                                                      "text": "Expression.wrapExpression(oParameter);",
                                                                      "children": [
                                                                        {
                                                                          "type": "call_expression",
                                                                          "start": {
                                                                            "row": 26,
                                                                            "column": 6
                                                                          },
                                                                          "end": {
                                                                            "row": 26,
                                                                            "column": 43
                                                                          },
                                                                          "text": "Expression.wrapExpression(oParameter)",
                                                                          "children": [
                                                                            {
                                                                              "type": "member_expression",
                                                                              "start": {
                                                                                "row": 26,
                                                                                "column": 6
                                                                              },
                                                                              "end": {
                                                                                "row": 26,
                                                                                "column": 31
                                                                              },
                                                                              "text": "Expression.wrapExpression",
                                                                              "children": [
                                                                                {
                                                                                  "type": "identifier",
                                                                                  "start": {
                                                                                    "row": 26,
                                                                                    "column": 6
                                                                                  },
                                                                                  "end": {
                                                                                    "row": 26,
                                                                                    "column": 16
                                                                                  },
                                                                                  "text": "Expression"
                                                                                },
                                                                                {
                                                                                  "type": ".",
                                                                                  "start": {
                                                                                    "row": 26,
                                                                                    "column": 16
                                                                                  },
                                                                                  "end": {
                                                                                    "row": 26,
                                                                                    "column": 17
                                                                                  },
                                                                                  "text": "."
                                                                                },
                                                                                {
                                                                                  "type": "property_identifier",
                                                                                  "start": {
                                                                                    "row": 26,
                                                                                    "column": 17
                                                                                  },
                                                                                  "end": {
                                                                                    "row": 26,
                                                                                    "column": 31
                                                                                  },
                                                                                  "text": "wrapExpression"
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "arguments",
                                                                              "start": {
                                                                                "row": 26,
                                                                                "column": 31
                                                                              },
                                                                              "end": {
                                                                                "row": 26,
                                                                                "column": 43
                                                                              },
                                                                              "text": "(oParameter)",
                                                                              "children": [
                                                                                {
                                                                                  "type": "(",
                                                                                  "start": {
                                                                                    "row": 26,
                                                                                    "column": 31
                                                                                  },
                                                                                  "end": {
                                                                                    "row": 26,
                                                                                    "column": 32
                                                                                  },
                                                                                  "text": "("
                                                                                },
                                                                                {
                                                                                  "type": "identifier",
                                                                                  "start": {
                                                                                    "row": 26,
                                                                                    "column": 32
                                                                                  },
                                                                                  "end": {
                                                                                    "row": 26,
                                                                                    "column": 42
                                                                                  },
                                                                                  "text": "oParameter"
                                                                                },
                                                                                {
                                                                                  "type": ")",
                                                                                  "start": {
                                                                                    "row": 26,
                                                                                    "column": 42
                                                                                  },
                                                                                  "end": {
                                                                                    "row": 26,
                                                                                    "column": 43
                                                                                  },
                                                                                  "text": ")"
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": ";",
                                                                          "start": {
                                                                            "row": 26,
                                                                            "column": 43
                                                                          },
                                                                          "end": {
                                                                            "row": 26,
                                                                            "column": 44
                                                                          },
                                                                          "text": ";"
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "}",
                                                                      "start": {
                                                                        "row": 27,
                                                                        "column": 5
                                                                      },
                                                                      "end": {
                                                                        "row": 27,
                                                                        "column": 6
                                                                      },
                                                                      "text": "}"
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "return_statement",
                                                              "start": {
                                                                "row": 29,
                                                                "column": 5
                                                              },
                                                              "end": {
                                                                "row": 30,
                                                                "column": 33
                                                              },
                                                              "text": "return Basics.resultToString(oParameter, bExpression,\n\t\t\t\t\t\toPathValue.complexBinding);",
                                                              "children": [
                                                                {
                                                                  "type": "return",
                                                                  "start": {
                                                                    "row": 29,
                                                                    "column": 5
                                                                  },
                                                                  "end": {
                                                                    "row": 29,
                                                                    "column": 11
                                                                  },
                                                                  "text": "return"
                                                                },
                                                                {
                                                                  "type": "call_expression",
                                                                  "start": {
                                                                    "row": 29,
                                                                    "column": 12
                                                                  },
                                                                  "end": {
                                                                    "row": 30,
                                                                    "column": 32
                                                                  },
                                                                  "text": "Basics.resultToString(oParameter, bExpression,\n\t\t\t\t\t\toPathValue.complexBinding)",
                                                                  "children": [
                                                                    {
                                                                      "type": "member_expression",
                                                                      "start": {
                                                                        "row": 29,
                                                                        "column": 12
                                                                      },
                                                                      "end": {
                                                                        "row": 29,
                                                                        "column": 33
                                                                      },
                                                                      "text": "Basics.resultToString",
                                                                      "children": [
                                                                        {
                                                                          "type": "identifier",
                                                                          "start": {
                                                                            "row": 29,
                                                                            "column": 12
                                                                          },
                                                                          "end": {
                                                                            "row": 29,
                                                                            "column": 18
                                                                          },
                                                                          "text": "Basics"
                                                                        },
                                                                        {
                                                                          "type": ".",
                                                                          "start": {
                                                                            "row": 29,
                                                                            "column": 18
                                                                          },
                                                                          "end": {
                                                                            "row": 29,
                                                                            "column": 19
                                                                          },
                                                                          "text": "."
                                                                        },
                                                                        {
                                                                          "type": "property_identifier",
                                                                          "start": {
                                                                            "row": 29,
                                                                            "column": 19
                                                                          },
                                                                          "end": {
                                                                            "row": 29,
                                                                            "column": 33
                                                                          },
                                                                          "text": "resultToString"
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "arguments",
                                                                      "start": {
                                                                        "row": 29,
                                                                        "column": 33
                                                                      },
                                                                      "end": {
                                                                        "row": 30,
                                                                        "column": 32
                                                                      },
                                                                      "text": "(oParameter, bExpression,\n\t\t\t\t\t\toPathValue.complexBinding)",
                                                                      "children": [
                                                                        {
                                                                          "type": "(",
                                                                          "start": {
                                                                            "row": 29,
                                                                            "column": 33
                                                                          },
                                                                          "end": {
                                                                            "row": 29,
                                                                            "column": 34
                                                                          },
                                                                          "text": "("
                                                                        },
                                                                        {
                                                                          "type": "identifier",
                                                                          "start": {
                                                                            "row": 29,
                                                                            "column": 34
                                                                          },
                                                                          "end": {
                                                                            "row": 29,
                                                                            "column": 44
                                                                          },
                                                                          "text": "oParameter"
                                                                        },
                                                                        {
                                                                          "type": ",",
                                                                          "start": {
                                                                            "row": 29,
                                                                            "column": 44
                                                                          },
                                                                          "end": {
                                                                            "row": 29,
                                                                            "column": 45
                                                                          },
                                                                          "text": ","
                                                                        },
                                                                        {
                                                                          "type": "identifier",
                                                                          "start": {
                                                                            "row": 29,
                                                                            "column": 46
                                                                          },
                                                                          "end": {
                                                                            "row": 29,
                                                                            "column": 57
                                                                          },
                                                                          "text": "bExpression"
                                                                        },
                                                                        {
                                                                          "type": ",",
                                                                          "start": {
                                                                            "row": 29,
                                                                            "column": 57
                                                                          },
                                                                          "end": {
                                                                            "row": 29,
                                                                            "column": 58
                                                                          },
                                                                          "text": ","
                                                                        },
                                                                        {
                                                                          "type": "member_expression",
                                                                          "start": {
                                                                            "row": 30,
                                                                            "column": 6
                                                                          },
                                                                          "end": {
                                                                            "row": 30,
                                                                            "column": 31
                                                                          },
                                                                          "text": "oPathValue.complexBinding",
                                                                          "children": [
                                                                            {
                                                                              "type": "identifier",
                                                                              "start": {
                                                                                "row": 30,
                                                                                "column": 6
                                                                              },
                                                                              "end": {
                                                                                "row": 30,
                                                                                "column": 16
                                                                              },
                                                                              "text": "oPathValue"
                                                                            },
                                                                            {
                                                                              "type": ".",
                                                                              "start": {
                                                                                "row": 30,
                                                                                "column": 16
                                                                              },
                                                                              "end": {
                                                                                "row": 30,
                                                                                "column": 17
                                                                              },
                                                                              "text": "."
                                                                            },
                                                                            {
                                                                              "type": "property_identifier",
                                                                              "start": {
                                                                                "row": 30,
                                                                                "column": 17
                                                                              },
                                                                              "end": {
                                                                                "row": 30,
                                                                                "column": 31
                                                                              },
                                                                              "text": "complexBinding"
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": ")",
                                                                          "start": {
                                                                            "row": 30,
                                                                            "column": 31
                                                                          },
                                                                          "end": {
                                                                            "row": 30,
                                                                            "column": 32
                                                                          },
                                                                          "text": ")"
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": ";",
                                                                  "start": {
                                                                    "row": 30,
                                                                    "column": 32
                                                                  },
                                                                  "end": {
                                                                    "row": 30,
                                                                    "column": 33
                                                                  },
                                                                  "text": ";"
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "}",
                                                              "start": {
                                                                "row": 31,
                                                                "column": 4
                                                              },
                                                              "end": {
                                                                "row": 31,
                                                                "column": 5
                                                              },
                                                              "text": "}"
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ")",
                                                      "start": {
                                                        "row": 31,
                                                        "column": 5
                                                      },
                                                      "end": {
                                                        "row": 31,
                                                        "column": 6
                                                      },
                                                      "text": ")"
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start": {
                                            "row": 31,
                                            "column": 6
                                          },
                                          "end": {
                                            "row": 31,
                                            "column": 7
                                          },
                                          "text": ";"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start": {
                                        "row": 32,
                                        "column": 4
                                      },
                                      "end": {
                                        "row": 34,
                                        "column": 55
                                      },
                                      "text": "oResult = bExpression\n\t\t\t\t\t? {result : \"expression\", value : aParts.join(\"+\")}\n\t\t\t\t\t: {result : \"composite\", value : aParts.join(\"\")};",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start": {
                                            "row": 32,
                                            "column": 4
                                          },
                                          "end": {
                                            "row": 34,
                                            "column": 54
                                          },
                                          "text": "oResult = bExpression\n\t\t\t\t\t? {result : \"expression\", value : aParts.join(\"+\")}\n\t\t\t\t\t: {result : \"composite\", value : aParts.join(\"\")}",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 32,
                                                "column": 4
                                              },
                                              "end": {
                                                "row": 32,
                                                "column": 11
                                              },
                                              "text": "oResult"
                                            },
                                            {
                                              "type": "=",
                                              "start": {
                                                "row": 32,
                                                "column": 12
                                              },
                                              "end": {
                                                "row": 32,
                                                "column": 13
                                              },
                                              "text": "="
                                            },
                                            {
                                              "type": "ternary_expression",
                                              "start": {
                                                "row": 32,
                                                "column": 14
                                              },
                                              "end": {
                                                "row": 34,
                                                "column": 54
                                              },
                                              "text": "bExpression\n\t\t\t\t\t? {result : \"expression\", value : aParts.join(\"+\")}\n\t\t\t\t\t: {result : \"composite\", value : aParts.join(\"\")}",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 32,
                                                    "column": 14
                                                  },
                                                  "end": {
                                                    "row": 32,
                                                    "column": 25
                                                  },
                                                  "text": "bExpression"
                                                },
                                                {
                                                  "type": "?",
                                                  "start": {
                                                    "row": 33,
                                                    "column": 5
                                                  },
                                                  "end": {
                                                    "row": 33,
                                                    "column": 6
                                                  },
                                                  "text": "?"
                                                },
                                                {
                                                  "type": "object",
                                                  "start": {
                                                    "row": 33,
                                                    "column": 7
                                                  },
                                                  "end": {
                                                    "row": 33,
                                                    "column": 56
                                                  },
                                                  "text": "{result : \"expression\", value : aParts.join(\"+\")}",
                                                  "children": [
                                                    {
                                                      "type": "{",
                                                      "start": {
                                                        "row": 33,
                                                        "column": 7
                                                      },
                                                      "end": {
                                                        "row": 33,
                                                        "column": 8
                                                      },
                                                      "text": "{"
                                                    },
                                                    {
                                                      "type": "pair",
                                                      "start": {
                                                        "row": 33,
                                                        "column": 8
                                                      },
                                                      "end": {
                                                        "row": 33,
                                                        "column": 29
                                                      },
                                                      "text": "result : \"expression\"",
                                                      "children": [
                                                        {
                                                          "type": "property_identifier",
                                                          "start": {
                                                            "row": 33,
                                                            "column": 8
                                                          },
                                                          "end": {
                                                            "row": 33,
                                                            "column": 14
                                                          },
                                                          "text": "result"
                                                        },
                                                        {
                                                          "type": ":",
                                                          "start": {
                                                            "row": 33,
                                                            "column": 15
                                                          },
                                                          "end": {
                                                            "row": 33,
                                                            "column": 16
                                                          },
                                                          "text": ":"
                                                        },
                                                        {
                                                          "type": "string",
                                                          "start": {
                                                            "row": 33,
                                                            "column": 17
                                                          },
                                                          "end": {
                                                            "row": 33,
                                                            "column": 29
                                                          },
                                                          "text": "\"expression\"",
                                                          "children": [
                                                            {
                                                              "type": "\"",
                                                              "start": {
                                                                "row": 33,
                                                                "column": 17
                                                              },
                                                              "end": {
                                                                "row": 33,
                                                                "column": 18
                                                              },
                                                              "text": "\""
                                                            },
                                                            {
                                                              "type": "string_fragment",
                                                              "start": {
                                                                "row": 33,
                                                                "column": 18
                                                              },
                                                              "end": {
                                                                "row": 33,
                                                                "column": 28
                                                              },
                                                              "text": "expression"
                                                            },
                                                            {
                                                              "type": "\"",
                                                              "start": {
                                                                "row": 33,
                                                                "column": 28
                                                              },
                                                              "end": {
                                                                "row": 33,
                                                                "column": 29
                                                              },
                                                              "text": "\""
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ",",
                                                      "start": {
                                                        "row": 33,
                                                        "column": 29
                                                      },
                                                      "end": {
                                                        "row": 33,
                                                        "column": 30
                                                      },
                                                      "text": ","
                                                    },
                                                    {
                                                      "type": "pair",
                                                      "start": {
                                                        "row": 33,
                                                        "column": 31
                                                      },
                                                      "end": {
                                                        "row": 33,
                                                        "column": 55
                                                      },
                                                      "text": "value : aParts.join(\"+\")",
                                                      "children": [
                                                        {
                                                          "type": "property_identifier",
                                                          "start": {
                                                            "row": 33,
                                                            "column": 31
                                                          },
                                                          "end": {
                                                            "row": 33,
                                                            "column": 36
                                                          },
                                                          "text": "value"
                                                        },
                                                        {
                                                          "type": ":",
                                                          "start": {
                                                            "row": 33,
                                                            "column": 37
                                                          },
                                                          "end": {
                                                            "row": 33,
                                                            "column": 38
                                                          },
                                                          "text": ":"
                                                        },
                                                        {
                                                          "type": "call_expression",
                                                          "start": {
                                                            "row": 33,
                                                            "column": 39
                                                          },
                                                          "end": {
                                                            "row": 33,
                                                            "column": 55
                                                          },
                                                          "text": "aParts.join(\"+\")",
                                                          "children": [
                                                            {
                                                              "type": "member_expression",
                                                              "start": {
                                                                "row": 33,
                                                                "column": 39
                                                              },
                                                              "end": {
                                                                "row": 33,
                                                                "column": 50
                                                              },
                                                              "text": "aParts.join",
                                                              "children": [
                                                                {
                                                                  "type": "identifier",
                                                                  "start": {
                                                                    "row": 33,
                                                                    "column": 39
                                                                  },
                                                                  "end": {
                                                                    "row": 33,
                                                                    "column": 45
                                                                  },
                                                                  "text": "aParts"
                                                                },
                                                                {
                                                                  "type": ".",
                                                                  "start": {
                                                                    "row": 33,
                                                                    "column": 45
                                                                  },
                                                                  "end": {
                                                                    "row": 33,
                                                                    "column": 46
                                                                  },
                                                                  "text": "."
                                                                },
                                                                {
                                                                  "type": "property_identifier",
                                                                  "start": {
                                                                    "row": 33,
                                                                    "column": 46
                                                                  },
                                                                  "end": {
                                                                    "row": 33,
                                                                    "column": 50
                                                                  },
                                                                  "text": "join"
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "arguments",
                                                              "start": {
                                                                "row": 33,
                                                                "column": 50
                                                              },
                                                              "end": {
                                                                "row": 33,
                                                                "column": 55
                                                              },
                                                              "text": "(\"+\")",
                                                              "children": [
                                                                {
                                                                  "type": "(",
                                                                  "start": {
                                                                    "row": 33,
                                                                    "column": 50
                                                                  },
                                                                  "end": {
                                                                    "row": 33,
                                                                    "column": 51
                                                                  },
                                                                  "text": "("
                                                                },
                                                                {
                                                                  "type": "string",
                                                                  "start": {
                                                                    "row": 33,
                                                                    "column": 51
                                                                  },
                                                                  "end": {
                                                                    "row": 33,
                                                                    "column": 54
                                                                  },
                                                                  "text": "\"+\"",
                                                                  "children": [
                                                                    {
                                                                      "type": "\"",
                                                                      "start": {
                                                                        "row": 33,
                                                                        "column": 51
                                                                      },
                                                                      "end": {
                                                                        "row": 33,
                                                                        "column": 52
                                                                      },
                                                                      "text": "\""
                                                                    },
                                                                    {
                                                                      "type": "string_fragment",
                                                                      "start": {
                                                                        "row": 33,
                                                                        "column": 52
                                                                      },
                                                                      "end": {
                                                                        "row": 33,
                                                                        "column": 53
                                                                      },
                                                                      "text": "+"
                                                                    },
                                                                    {
                                                                      "type": "\"",
                                                                      "start": {
                                                                        "row": 33,
                                                                        "column": 53
                                                                      },
                                                                      "end": {
                                                                        "row": 33,
                                                                        "column": 54
                                                                      },
                                                                      "text": "\""
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": ")",
                                                                  "start": {
                                                                    "row": 33,
                                                                    "column": 54
                                                                  },
                                                                  "end": {
                                                                    "row": 33,
                                                                    "column": 55
                                                                  },
                                                                  "text": ")"
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "}",
                                                      "start": {
                                                        "row": 33,
                                                        "column": 55
                                                      },
                                                      "end": {
                                                        "row": 33,
                                                        "column": 56
                                                      },
                                                      "text": "}"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ":",
                                                  "start": {
                                                    "row": 34,
                                                    "column": 5
                                                  },
                                                  "end": {
                                                    "row": 34,
                                                    "column": 6
                                                  },
                                                  "text": ":"
                                                },
                                                {
                                                  "type": "object",
                                                  "start": {
                                                    "row": 34,
                                                    "column": 7
                                                  },
                                                  "end": {
                                                    "row": 34,
                                                    "column": 54
                                                  },
                                                  "text": "{result : \"composite\", value : aParts.join(\"\")}",
                                                  "children": [
                                                    {
                                                      "type": "{",
                                                      "start": {
                                                        "row": 34,
                                                        "column": 7
                                                      },
                                                      "end": {
                                                        "row": 34,
                                                        "column": 8
                                                      },
                                                      "text": "{"
                                                    },
                                                    {
                                                      "type": "pair",
                                                      "start": {
                                                        "row": 34,
                                                        "column": 8
                                                      },
                                                      "end": {
                                                        "row": 34,
                                                        "column": 28
                                                      },
                                                      "text": "result : \"composite\"",
                                                      "children": [
                                                        {
                                                          "type": "property_identifier",
                                                          "start": {
                                                            "row": 34,
                                                            "column": 8
                                                          },
                                                          "end": {
                                                            "row": 34,
                                                            "column": 14
                                                          },
                                                          "text": "result"
                                                        },
                                                        {
                                                          "type": ":",
                                                          "start": {
                                                            "row": 34,
                                                            "column": 15
                                                          },
                                                          "end": {
                                                            "row": 34,
                                                            "column": 16
                                                          },
                                                          "text": ":"
                                                        },
                                                        {
                                                          "type": "string",
                                                          "start": {
                                                            "row": 34,
                                                            "column": 17
                                                          },
                                                          "end": {
                                                            "row": 34,
                                                            "column": 28
                                                          },
                                                          "text": "\"composite\"",
                                                          "children": [
                                                            {
                                                              "type": "\"",
                                                              "start": {
                                                                "row": 34,
                                                                "column": 17
                                                              },
                                                              "end": {
                                                                "row": 34,
                                                                "column": 18
                                                              },
                                                              "text": "\""
                                                            },
                                                            {
                                                              "type": "string_fragment",
                                                              "start": {
                                                                "row": 34,
                                                                "column": 18
                                                              },
                                                              "end": {
                                                                "row": 34,
                                                                "column": 27
                                                              },
                                                              "text": "composite"
                                                            },
                                                            {
                                                              "type": "\"",
                                                              "start": {
                                                                "row": 34,
                                                                "column": 27
                                                              },
                                                              "end": {
                                                                "row": 34,
                                                                "column": 28
                                                              },
                                                              "text": "\""
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ",",
                                                      "start": {
                                                        "row": 34,
                                                        "column": 28
                                                      },
                                                      "end": {
                                                        "row": 34,
                                                        "column": 29
                                                      },
                                                      "text": ","
                                                    },
                                                    {
                                                      "type": "pair",
                                                      "start": {
                                                        "row": 34,
                                                        "column": 30
                                                      },
                                                      "end": {
                                                        "row": 34,
                                                        "column": 53
                                                      },
                                                      "text": "value : aParts.join(\"\")",
                                                      "children": [
                                                        {
                                                          "type": "property_identifier",
                                                          "start": {
                                                            "row": 34,
                                                            "column": 30
                                                          },
                                                          "end": {
                                                            "row": 34,
                                                            "column": 35
                                                          },
                                                          "text": "value"
                                                        },
                                                        {
                                                          "type": ":",
                                                          "start": {
                                                            "row": 34,
                                                            "column": 36
                                                          },
                                                          "end": {
                                                            "row": 34,
                                                            "column": 37
                                                          },
                                                          "text": ":"
                                                        },
                                                        {
                                                          "type": "call_expression",
                                                          "start": {
                                                            "row": 34,
                                                            "column": 38
                                                          },
                                                          "end": {
                                                            "row": 34,
                                                            "column": 53
                                                          },
                                                          "text": "aParts.join(\"\")",
                                                          "children": [
                                                            {
                                                              "type": "member_expression",
                                                              "start": {
                                                                "row": 34,
                                                                "column": 38
                                                              },
                                                              "end": {
                                                                "row": 34,
                                                                "column": 49
                                                              },
                                                              "text": "aParts.join",
                                                              "children": [
                                                                {
                                                                  "type": "identifier",
                                                                  "start": {
                                                                    "row": 34,
                                                                    "column": 38
                                                                  },
                                                                  "end": {
                                                                    "row": 34,
                                                                    "column": 44
                                                                  },
                                                                  "text": "aParts"
                                                                },
                                                                {
                                                                  "type": ".",
                                                                  "start": {
                                                                    "row": 34,
                                                                    "column": 44
                                                                  },
                                                                  "end": {
                                                                    "row": 34,
                                                                    "column": 45
                                                                  },
                                                                  "text": "."
                                                                },
                                                                {
                                                                  "type": "property_identifier",
                                                                  "start": {
                                                                    "row": 34,
                                                                    "column": 45
                                                                  },
                                                                  "end": {
                                                                    "row": 34,
                                                                    "column": 49
                                                                  },
                                                                  "text": "join"
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "arguments",
                                                              "start": {
                                                                "row": 34,
                                                                "column": 49
                                                              },
                                                              "end": {
                                                                "row": 34,
                                                                "column": 53
                                                              },
                                                              "text": "(\"\")",
                                                              "children": [
                                                                {
                                                                  "type": "(",
                                                                  "start": {
                                                                    "row": 34,
                                                                    "column": 49
                                                                  },
                                                                  "end": {
                                                                    "row": 34,
                                                                    "column": 50
                                                                  },
                                                                  "text": "("
                                                                },
                                                                {
                                                                  "type": "string",
                                                                  "start": {
                                                                    "row": 34,
                                                                    "column": 50
                                                                  },
                                                                  "end": {
                                                                    "row": 34,
                                                                    "column": 52
                                                                  },
                                                                  "text": "\"\"",
                                                                  "children": [
                                                                    {
                                                                      "type": "\"",
                                                                      "start": {
                                                                        "row": 34,
                                                                        "column": 50
                                                                      },
                                                                      "end": {
                                                                        "row": 34,
                                                                        "column": 51
                                                                      },
                                                                      "text": "\""
                                                                    },
                                                                    {
                                                                      "type": "\"",
                                                                      "start": {
                                                                        "row": 34,
                                                                        "column": 51
                                                                      },
                                                                      "end": {
                                                                        "row": 34,
                                                                        "column": 52
                                                                      },
                                                                      "text": "\""
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": ")",
                                                                  "start": {
                                                                    "row": 34,
                                                                    "column": 52
                                                                  },
                                                                  "end": {
                                                                    "row": 34,
                                                                    "column": 53
                                                                  },
                                                                  "text": ")"
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "}",
                                                      "start": {
                                                        "row": 34,
                                                        "column": 53
                                                      },
                                                      "end": {
                                                        "row": 34,
                                                        "column": 54
                                                      },
                                                      "text": "}"
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start": {
                                            "row": 34,
                                            "column": 54
                                          },
                                          "end": {
                                            "row": 34,
                                            "column": 55
                                          },
                                          "text": ";"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start": {
                                        "row": 35,
                                        "column": 4
                                      },
                                      "end": {
                                        "row": 35,
                                        "column": 32
                                      },
                                      "text": "oResult.type = \"Edm.String\";",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start": {
                                            "row": 35,
                                            "column": 4
                                          },
                                          "end": {
                                            "row": 35,
                                            "column": 31
                                          },
                                          "text": "oResult.type = \"Edm.String\"",
                                          "children": [
                                            {
                                              "type": "member_expression",
                                              "start": {
                                                "row": 35,
                                                "column": 4
                                              },
                                              "end": {
                                                "row": 35,
                                                "column": 16
                                              },
                                              "text": "oResult.type",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 35,
                                                    "column": 4
                                                  },
                                                  "end": {
                                                    "row": 35,
                                                    "column": 11
                                                  },
                                                  "text": "oResult"
                                                },
                                                {
                                                  "type": ".",
                                                  "start": {
                                                    "row": 35,
                                                    "column": 11
                                                  },
                                                  "end": {
                                                    "row": 35,
                                                    "column": 12
                                                  },
                                                  "text": "."
                                                },
                                                {
                                                  "type": "property_identifier",
                                                  "start": {
                                                    "row": 35,
                                                    "column": 12
                                                  },
                                                  "end": {
                                                    "row": 35,
                                                    "column": 16
                                                  },
                                                  "text": "type"
                                                }
                                              ]
                                            },
                                            {
                                              "type": "=",
                                              "start": {
                                                "row": 35,
                                                "column": 17
                                              },
                                              "end": {
                                                "row": 35,
                                                "column": 18
                                              },
                                              "text": "="
                                            },
                                            {
                                              "type": "string",
                                              "start": {
                                                "row": 35,
                                                "column": 19
                                              },
                                              "end": {
                                                "row": 35,
                                                "column": 31
                                              },
                                              "text": "\"Edm.String\"",
                                              "children": [
                                                {
                                                  "type": "\"",
                                                  "start": {
                                                    "row": 35,
                                                    "column": 19
                                                  },
                                                  "end": {
                                                    "row": 35,
                                                    "column": 20
                                                  },
                                                  "text": "\""
                                                },
                                                {
                                                  "type": "string_fragment",
                                                  "start": {
                                                    "row": 35,
                                                    "column": 20
                                                  },
                                                  "end": {
                                                    "row": 35,
                                                    "column": 30
                                                  },
                                                  "text": "Edm.String"
                                                },
                                                {
                                                  "type": "\"",
                                                  "start": {
                                                    "row": 35,
                                                    "column": 30
                                                  },
                                                  "end": {
                                                    "row": 35,
                                                    "column": 31
                                                  },
                                                  "text": "\""
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start": {
                                            "row": 35,
                                            "column": 31
                                          },
                                          "end": {
                                            "row": 35,
                                            "column": 32
                                          },
                                          "text": ";"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "return_statement",
                                      "start": {
                                        "row": 37,
                                        "column": 4
                                      },
                                      "end": {
                                        "row": 37,
                                        "column": 19
                                      },
                                      "text": "return oResult;",
                                      "children": [
                                        {
                                          "type": "return",
                                          "start": {
                                            "row": 37,
                                            "column": 4
                                          },
                                          "end": {
                                            "row": 37,
                                            "column": 10
                                          },
                                          "text": "return"
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 37,
                                            "column": 11
                                          },
                                          "end": {
                                            "row": 37,
                                            "column": 18
                                          },
                                          "text": "oResult"
                                        },
                                        {
                                          "type": ";",
                                          "start": {
                                            "row": 37,
                                            "column": 18
                                          },
                                          "end": {
                                            "row": 37,
                                            "column": 19
                                          },
                                          "text": ";"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start": {
                                        "row": 38,
                                        "column": 3
                                      },
                                      "end": {
                                        "row": 38,
                                        "column": 4
                                      },
                                      "text": "}"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 38,
                                "column": 4
                              },
                              "end": {
                                "row": 38,
                                "column": 5
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start": {
                        "row": 38,
                        "column": 5
                      },
                      "end": {
                        "row": 38,
                        "column": 6
                      },
                      "text": ";"
                    }
                  ]
                },
                {
                  "type": "}",
                  "start": {
                    "row": 39,
                    "column": 2
                  },
                  "end": {
                    "row": 39,
                    "column": 3
                  },
                  "text": "}"
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}