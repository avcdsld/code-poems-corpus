{
  "type": "program",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 18,
    "column": 4
  },
  "text": "function compileJsonPathToFunction( uncompiledJsonPath, \n                                       parserGeneratedSoFar ) {\n\n      /**\n       * On finding a match, if there is remaining text to be compiled\n       * we want to either continue parsing using a recursive call to \n       * compileJsonPathToFunction. Otherwise, we want to stop and return \n       * the parser that we have found so far.\n       */\n      var onFind =      uncompiledJsonPath\n                     ?  compileJsonPathToFunction \n                     :  returnFoundParser;\n                   \n      return   clauseForJsonPath( \n                  uncompiledJsonPath, \n                  parserGeneratedSoFar, \n                  onFind\n               );                              \n   }",
  "children": [
    {
      "type": "function_declaration",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 18,
        "column": 4
      },
      "text": "function compileJsonPathToFunction( uncompiledJsonPath, \n                                       parserGeneratedSoFar ) {\n\n      /**\n       * On finding a match, if there is remaining text to be compiled\n       * we want to either continue parsing using a recursive call to \n       * compileJsonPathToFunction. Otherwise, we want to stop and return \n       * the parser that we have found so far.\n       */\n      var onFind =      uncompiledJsonPath\n                     ?  compileJsonPathToFunction \n                     :  returnFoundParser;\n                   \n      return   clauseForJsonPath( \n                  uncompiledJsonPath, \n                  parserGeneratedSoFar, \n                  onFind\n               );                              \n   }",
      "children": [
        {
          "type": "function",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 8
          },
          "text": "function"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 9
          },
          "end": {
            "row": 0,
            "column": 34
          },
          "text": "compileJsonPathToFunction"
        },
        {
          "type": "formal_parameters",
          "start": {
            "row": 0,
            "column": 34
          },
          "end": {
            "row": 1,
            "column": 61
          },
          "text": "( uncompiledJsonPath, \n                                       parserGeneratedSoFar )",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 34
              },
              "end": {
                "row": 0,
                "column": 35
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 36
              },
              "end": {
                "row": 0,
                "column": 54
              },
              "text": "uncompiledJsonPath"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 54
              },
              "end": {
                "row": 0,
                "column": 55
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 1,
                "column": 39
              },
              "end": {
                "row": 1,
                "column": 59
              },
              "text": "parserGeneratedSoFar"
            },
            {
              "type": ")",
              "start": {
                "row": 1,
                "column": 60
              },
              "end": {
                "row": 1,
                "column": 61
              },
              "text": ")"
            }
          ]
        },
        {
          "type": "statement_block",
          "start": {
            "row": 1,
            "column": 62
          },
          "end": {
            "row": 18,
            "column": 4
          },
          "text": "{\n\n      /**\n       * On finding a match, if there is remaining text to be compiled\n       * we want to either continue parsing using a recursive call to \n       * compileJsonPathToFunction. Otherwise, we want to stop and return \n       * the parser that we have found so far.\n       */\n      var onFind =      uncompiledJsonPath\n                     ?  compileJsonPathToFunction \n                     :  returnFoundParser;\n                   \n      return   clauseForJsonPath( \n                  uncompiledJsonPath, \n                  parserGeneratedSoFar, \n                  onFind\n               );                              \n   }",
          "children": [
            {
              "type": "{",
              "start": {
                "row": 1,
                "column": 62
              },
              "end": {
                "row": 1,
                "column": 63
              },
              "text": "{"
            },
            {
              "type": "comment",
              "start": {
                "row": 3,
                "column": 6
              },
              "end": {
                "row": 8,
                "column": 9
              },
              "text": "/**\n       * On finding a match, if there is remaining text to be compiled\n       * we want to either continue parsing using a recursive call to \n       * compileJsonPathToFunction. Otherwise, we want to stop and return \n       * the parser that we have found so far.\n       */"
            },
            {
              "type": "variable_declaration",
              "start": {
                "row": 9,
                "column": 6
              },
              "end": {
                "row": 11,
                "column": 42
              },
              "text": "var onFind =      uncompiledJsonPath\n                     ?  compileJsonPathToFunction \n                     :  returnFoundParser;",
              "children": [
                {
                  "type": "var",
                  "start": {
                    "row": 9,
                    "column": 6
                  },
                  "end": {
                    "row": 9,
                    "column": 9
                  },
                  "text": "var"
                },
                {
                  "type": "variable_declarator",
                  "start": {
                    "row": 9,
                    "column": 10
                  },
                  "end": {
                    "row": 11,
                    "column": 41
                  },
                  "text": "onFind =      uncompiledJsonPath\n                     ?  compileJsonPathToFunction \n                     :  returnFoundParser",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 9,
                        "column": 10
                      },
                      "end": {
                        "row": 9,
                        "column": 16
                      },
                      "text": "onFind"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 9,
                        "column": 17
                      },
                      "end": {
                        "row": 9,
                        "column": 18
                      },
                      "text": "="
                    },
                    {
                      "type": "ternary_expression",
                      "start": {
                        "row": 9,
                        "column": 24
                      },
                      "end": {
                        "row": 11,
                        "column": 41
                      },
                      "text": "uncompiledJsonPath\n                     ?  compileJsonPathToFunction \n                     :  returnFoundParser",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 9,
                            "column": 24
                          },
                          "end": {
                            "row": 9,
                            "column": 42
                          },
                          "text": "uncompiledJsonPath"
                        },
                        {
                          "type": "?",
                          "start": {
                            "row": 10,
                            "column": 21
                          },
                          "end": {
                            "row": 10,
                            "column": 22
                          },
                          "text": "?"
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 10,
                            "column": 24
                          },
                          "end": {
                            "row": 10,
                            "column": 49
                          },
                          "text": "compileJsonPathToFunction"
                        },
                        {
                          "type": ":",
                          "start": {
                            "row": 11,
                            "column": 21
                          },
                          "end": {
                            "row": 11,
                            "column": 22
                          },
                          "text": ":"
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 11,
                            "column": 24
                          },
                          "end": {
                            "row": 11,
                            "column": 41
                          },
                          "text": "returnFoundParser"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 11,
                    "column": 41
                  },
                  "end": {
                    "row": 11,
                    "column": 42
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 13,
                "column": 6
              },
              "end": {
                "row": 17,
                "column": 17
              },
              "text": "return   clauseForJsonPath( \n                  uncompiledJsonPath, \n                  parserGeneratedSoFar, \n                  onFind\n               );",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 13,
                    "column": 6
                  },
                  "end": {
                    "row": 13,
                    "column": 12
                  },
                  "text": "return"
                },
                {
                  "type": "call_expression",
                  "start": {
                    "row": 13,
                    "column": 15
                  },
                  "end": {
                    "row": 17,
                    "column": 16
                  },
                  "text": "clauseForJsonPath( \n                  uncompiledJsonPath, \n                  parserGeneratedSoFar, \n                  onFind\n               )",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 13,
                        "column": 15
                      },
                      "end": {
                        "row": 13,
                        "column": 32
                      },
                      "text": "clauseForJsonPath"
                    },
                    {
                      "type": "arguments",
                      "start": {
                        "row": 13,
                        "column": 32
                      },
                      "end": {
                        "row": 17,
                        "column": 16
                      },
                      "text": "( \n                  uncompiledJsonPath, \n                  parserGeneratedSoFar, \n                  onFind\n               )",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 13,
                            "column": 32
                          },
                          "end": {
                            "row": 13,
                            "column": 33
                          },
                          "text": "("
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 14,
                            "column": 18
                          },
                          "end": {
                            "row": 14,
                            "column": 36
                          },
                          "text": "uncompiledJsonPath"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 14,
                            "column": 36
                          },
                          "end": {
                            "row": 14,
                            "column": 37
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 15,
                            "column": 18
                          },
                          "end": {
                            "row": 15,
                            "column": 38
                          },
                          "text": "parserGeneratedSoFar"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 15,
                            "column": 38
                          },
                          "end": {
                            "row": 15,
                            "column": 39
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 16,
                            "column": 18
                          },
                          "end": {
                            "row": 16,
                            "column": 24
                          },
                          "text": "onFind"
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 17,
                            "column": 15
                          },
                          "end": {
                            "row": 17,
                            "column": 16
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start": {
                    "row": 17,
                    "column": 16
                  },
                  "end": {
                    "row": 17,
                    "column": 17
                  },
                  "text": ";"
                }
              ]
            },
            {
              "type": "}",
              "start": {
                "row": 18,
                "column": 3
              },
              "end": {
                "row": 18,
                "column": 4
              },
              "text": "}"
            }
          ]
        }
      ]
    }
  ]
}