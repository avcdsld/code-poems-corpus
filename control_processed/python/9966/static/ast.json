{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 30,
    "column": 21
  },
  "text": "def try_read_prompt(self, timeout_multiplier):\n        '''This facilitates using communication timeouts to perform\n        synchronization as quickly as possible, while supporting high latency\n        connections with a tunable worst case performance. Fast connections\n        should be read almost immediately. Worst case performance for this\n        method is timeout_multiplier * 3 seconds.\n        '''\n\n        # maximum time allowed to read the first response\n        first_char_timeout = timeout_multiplier * 0.5\n\n        # maximum time allowed between subsequent characters\n        inter_char_timeout = timeout_multiplier * 0.1\n\n        # maximum time for reading the entire prompt\n        total_timeout = timeout_multiplier * 3.0\n\n        prompt = self.string_type()\n        begin = time.time()\n        expired = 0.0\n        timeout = first_char_timeout\n\n        while expired < total_timeout:\n            try:\n                prompt += self.read_nonblocking(size=1, timeout=timeout)\n                expired = time.time() - begin # updated total time expired\n                timeout = inter_char_timeout\n            except TIMEOUT:\n                break\n\n        return prompt",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 30,
        "column": 21
      },
      "text": "def try_read_prompt(self, timeout_multiplier):\n        '''This facilitates using communication timeouts to perform\n        synchronization as quickly as possible, while supporting high latency\n        connections with a tunable worst case performance. Fast connections\n        should be read almost immediately. Worst case performance for this\n        method is timeout_multiplier * 3 seconds.\n        '''\n\n        # maximum time allowed to read the first response\n        first_char_timeout = timeout_multiplier * 0.5\n\n        # maximum time allowed between subsequent characters\n        inter_char_timeout = timeout_multiplier * 0.1\n\n        # maximum time for reading the entire prompt\n        total_timeout = timeout_multiplier * 3.0\n\n        prompt = self.string_type()\n        begin = time.time()\n        expired = 0.0\n        timeout = first_char_timeout\n\n        while expired < total_timeout:\n            try:\n                prompt += self.read_nonblocking(size=1, timeout=timeout)\n                expired = time.time() - begin # updated total time expired\n                timeout = inter_char_timeout\n            except TIMEOUT:\n                break\n\n        return prompt",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 19
          },
          "text": "try_read_prompt"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 19
          },
          "end": {
            "row": 0,
            "column": 45
          },
          "text": "(self, timeout_multiplier)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 19
              },
              "end": {
                "row": 0,
                "column": 20
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 20
              },
              "end": {
                "row": 0,
                "column": 24
              },
              "text": "self"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 24
              },
              "end": {
                "row": 0,
                "column": 25
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 26
              },
              "end": {
                "row": 0,
                "column": 44
              },
              "text": "timeout_multiplier"
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 44
              },
              "end": {
                "row": 0,
                "column": 45
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 45
          },
          "end": {
            "row": 0,
            "column": 46
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 8
          },
          "end": {
            "row": 30,
            "column": 21
          },
          "text": "'''This facilitates using communication timeouts to perform\n        synchronization as quickly as possible, while supporting high latency\n        connections with a tunable worst case performance. Fast connections\n        should be read almost immediately. Worst case performance for this\n        method is timeout_multiplier * 3 seconds.\n        '''\n\n        # maximum time allowed to read the first response\n        first_char_timeout = timeout_multiplier * 0.5\n\n        # maximum time allowed between subsequent characters\n        inter_char_timeout = timeout_multiplier * 0.1\n\n        # maximum time for reading the entire prompt\n        total_timeout = timeout_multiplier * 3.0\n\n        prompt = self.string_type()\n        begin = time.time()\n        expired = 0.0\n        timeout = first_char_timeout\n\n        while expired < total_timeout:\n            try:\n                prompt += self.read_nonblocking(size=1, timeout=timeout)\n                expired = time.time() - begin # updated total time expired\n                timeout = inter_char_timeout\n            except TIMEOUT:\n                break\n\n        return prompt",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 8
              },
              "end": {
                "row": 6,
                "column": 11
              },
              "text": "'''This facilitates using communication timeouts to perform\n        synchronization as quickly as possible, while supporting high latency\n        connections with a tunable worst case performance. Fast connections\n        should be read almost immediately. Worst case performance for this\n        method is timeout_multiplier * 3 seconds.\n        '''",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 8
                  },
                  "end": {
                    "row": 6,
                    "column": 11
                  },
                  "text": "'''This facilitates using communication timeouts to perform\n        synchronization as quickly as possible, while supporting high latency\n        connections with a tunable worst case performance. Fast connections\n        should be read almost immediately. Worst case performance for this\n        method is timeout_multiplier * 3 seconds.\n        '''",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 8
                      },
                      "end": {
                        "row": 1,
                        "column": 11
                      },
                      "text": "'''"
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 11
                      },
                      "end": {
                        "row": 6,
                        "column": 8
                      },
                      "text": "This facilitates using communication timeouts to perform\n        synchronization as quickly as possible, while supporting high latency\n        connections with a tunable worst case performance. Fast connections\n        should be read almost immediately. Worst case performance for this\n        method is timeout_multiplier * 3 seconds.\n        "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 6,
                        "column": 8
                      },
                      "end": {
                        "row": 6,
                        "column": 11
                      },
                      "text": "'''"
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 8,
                "column": 8
              },
              "end": {
                "row": 8,
                "column": 57
              },
              "text": "# maximum time allowed to read the first response"
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 9,
                "column": 8
              },
              "end": {
                "row": 9,
                "column": 53
              },
              "text": "first_char_timeout = timeout_multiplier * 0.5",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 9,
                    "column": 8
                  },
                  "end": {
                    "row": 9,
                    "column": 53
                  },
                  "text": "first_char_timeout = timeout_multiplier * 0.5",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 9,
                        "column": 8
                      },
                      "end": {
                        "row": 9,
                        "column": 26
                      },
                      "text": "first_char_timeout"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 9,
                        "column": 27
                      },
                      "end": {
                        "row": 9,
                        "column": 28
                      },
                      "text": "="
                    },
                    {
                      "type": "binary_operator",
                      "start": {
                        "row": 9,
                        "column": 29
                      },
                      "end": {
                        "row": 9,
                        "column": 53
                      },
                      "text": "timeout_multiplier * 0.5",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 9,
                            "column": 29
                          },
                          "end": {
                            "row": 9,
                            "column": 47
                          },
                          "text": "timeout_multiplier"
                        },
                        {
                          "type": "*",
                          "start": {
                            "row": 9,
                            "column": 48
                          },
                          "end": {
                            "row": 9,
                            "column": 49
                          },
                          "text": "*"
                        },
                        {
                          "type": "float",
                          "start": {
                            "row": 9,
                            "column": 50
                          },
                          "end": {
                            "row": 9,
                            "column": 53
                          },
                          "text": "0.5"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 11,
                "column": 8
              },
              "end": {
                "row": 11,
                "column": 60
              },
              "text": "# maximum time allowed between subsequent characters"
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 12,
                "column": 8
              },
              "end": {
                "row": 12,
                "column": 53
              },
              "text": "inter_char_timeout = timeout_multiplier * 0.1",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 12,
                    "column": 8
                  },
                  "end": {
                    "row": 12,
                    "column": 53
                  },
                  "text": "inter_char_timeout = timeout_multiplier * 0.1",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 12,
                        "column": 8
                      },
                      "end": {
                        "row": 12,
                        "column": 26
                      },
                      "text": "inter_char_timeout"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 12,
                        "column": 27
                      },
                      "end": {
                        "row": 12,
                        "column": 28
                      },
                      "text": "="
                    },
                    {
                      "type": "binary_operator",
                      "start": {
                        "row": 12,
                        "column": 29
                      },
                      "end": {
                        "row": 12,
                        "column": 53
                      },
                      "text": "timeout_multiplier * 0.1",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 12,
                            "column": 29
                          },
                          "end": {
                            "row": 12,
                            "column": 47
                          },
                          "text": "timeout_multiplier"
                        },
                        {
                          "type": "*",
                          "start": {
                            "row": 12,
                            "column": 48
                          },
                          "end": {
                            "row": 12,
                            "column": 49
                          },
                          "text": "*"
                        },
                        {
                          "type": "float",
                          "start": {
                            "row": 12,
                            "column": 50
                          },
                          "end": {
                            "row": 12,
                            "column": 53
                          },
                          "text": "0.1"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 14,
                "column": 8
              },
              "end": {
                "row": 14,
                "column": 52
              },
              "text": "# maximum time for reading the entire prompt"
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 15,
                "column": 8
              },
              "end": {
                "row": 15,
                "column": 48
              },
              "text": "total_timeout = timeout_multiplier * 3.0",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 15,
                    "column": 8
                  },
                  "end": {
                    "row": 15,
                    "column": 48
                  },
                  "text": "total_timeout = timeout_multiplier * 3.0",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 15,
                        "column": 8
                      },
                      "end": {
                        "row": 15,
                        "column": 21
                      },
                      "text": "total_timeout"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 15,
                        "column": 22
                      },
                      "end": {
                        "row": 15,
                        "column": 23
                      },
                      "text": "="
                    },
                    {
                      "type": "binary_operator",
                      "start": {
                        "row": 15,
                        "column": 24
                      },
                      "end": {
                        "row": 15,
                        "column": 48
                      },
                      "text": "timeout_multiplier * 3.0",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 15,
                            "column": 24
                          },
                          "end": {
                            "row": 15,
                            "column": 42
                          },
                          "text": "timeout_multiplier"
                        },
                        {
                          "type": "*",
                          "start": {
                            "row": 15,
                            "column": 43
                          },
                          "end": {
                            "row": 15,
                            "column": 44
                          },
                          "text": "*"
                        },
                        {
                          "type": "float",
                          "start": {
                            "row": 15,
                            "column": 45
                          },
                          "end": {
                            "row": 15,
                            "column": 48
                          },
                          "text": "3.0"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 17,
                "column": 8
              },
              "end": {
                "row": 17,
                "column": 35
              },
              "text": "prompt = self.string_type()",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 17,
                    "column": 8
                  },
                  "end": {
                    "row": 17,
                    "column": 35
                  },
                  "text": "prompt = self.string_type()",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 17,
                        "column": 8
                      },
                      "end": {
                        "row": 17,
                        "column": 14
                      },
                      "text": "prompt"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 17,
                        "column": 15
                      },
                      "end": {
                        "row": 17,
                        "column": 16
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 17,
                        "column": 17
                      },
                      "end": {
                        "row": 17,
                        "column": 35
                      },
                      "text": "self.string_type()",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 17,
                            "column": 17
                          },
                          "end": {
                            "row": 17,
                            "column": 33
                          },
                          "text": "self.string_type",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 17,
                                "column": 17
                              },
                              "end": {
                                "row": 17,
                                "column": 21
                              },
                              "text": "self"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 17,
                                "column": 21
                              },
                              "end": {
                                "row": 17,
                                "column": 22
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 17,
                                "column": 22
                              },
                              "end": {
                                "row": 17,
                                "column": 33
                              },
                              "text": "string_type"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 17,
                            "column": 33
                          },
                          "end": {
                            "row": 17,
                            "column": 35
                          },
                          "text": "()",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 17,
                                "column": 33
                              },
                              "end": {
                                "row": 17,
                                "column": 34
                              },
                              "text": "("
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 17,
                                "column": 34
                              },
                              "end": {
                                "row": 17,
                                "column": 35
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 18,
                "column": 8
              },
              "end": {
                "row": 18,
                "column": 27
              },
              "text": "begin = time.time()",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 18,
                    "column": 8
                  },
                  "end": {
                    "row": 18,
                    "column": 27
                  },
                  "text": "begin = time.time()",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 18,
                        "column": 8
                      },
                      "end": {
                        "row": 18,
                        "column": 13
                      },
                      "text": "begin"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 18,
                        "column": 14
                      },
                      "end": {
                        "row": 18,
                        "column": 15
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 18,
                        "column": 16
                      },
                      "end": {
                        "row": 18,
                        "column": 27
                      },
                      "text": "time.time()",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 18,
                            "column": 16
                          },
                          "end": {
                            "row": 18,
                            "column": 25
                          },
                          "text": "time.time",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 18,
                                "column": 16
                              },
                              "end": {
                                "row": 18,
                                "column": 20
                              },
                              "text": "time"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 18,
                                "column": 20
                              },
                              "end": {
                                "row": 18,
                                "column": 21
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 18,
                                "column": 21
                              },
                              "end": {
                                "row": 18,
                                "column": 25
                              },
                              "text": "time"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 18,
                            "column": 25
                          },
                          "end": {
                            "row": 18,
                            "column": 27
                          },
                          "text": "()",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 18,
                                "column": 25
                              },
                              "end": {
                                "row": 18,
                                "column": 26
                              },
                              "text": "("
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 18,
                                "column": 26
                              },
                              "end": {
                                "row": 18,
                                "column": 27
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 19,
                "column": 8
              },
              "end": {
                "row": 19,
                "column": 21
              },
              "text": "expired = 0.0",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 19,
                    "column": 8
                  },
                  "end": {
                    "row": 19,
                    "column": 21
                  },
                  "text": "expired = 0.0",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 19,
                        "column": 8
                      },
                      "end": {
                        "row": 19,
                        "column": 15
                      },
                      "text": "expired"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 19,
                        "column": 16
                      },
                      "end": {
                        "row": 19,
                        "column": 17
                      },
                      "text": "="
                    },
                    {
                      "type": "float",
                      "start": {
                        "row": 19,
                        "column": 18
                      },
                      "end": {
                        "row": 19,
                        "column": 21
                      },
                      "text": "0.0"
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 20,
                "column": 8
              },
              "end": {
                "row": 20,
                "column": 36
              },
              "text": "timeout = first_char_timeout",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 20,
                    "column": 8
                  },
                  "end": {
                    "row": 20,
                    "column": 36
                  },
                  "text": "timeout = first_char_timeout",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 20,
                        "column": 8
                      },
                      "end": {
                        "row": 20,
                        "column": 15
                      },
                      "text": "timeout"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 20,
                        "column": 16
                      },
                      "end": {
                        "row": 20,
                        "column": 17
                      },
                      "text": "="
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 20,
                        "column": 18
                      },
                      "end": {
                        "row": 20,
                        "column": 36
                      },
                      "text": "first_char_timeout"
                    }
                  ]
                }
              ]
            },
            {
              "type": "while_statement",
              "start": {
                "row": 22,
                "column": 8
              },
              "end": {
                "row": 28,
                "column": 21
              },
              "text": "while expired < total_timeout:\n            try:\n                prompt += self.read_nonblocking(size=1, timeout=timeout)\n                expired = time.time() - begin # updated total time expired\n                timeout = inter_char_timeout\n            except TIMEOUT:\n                break",
              "children": [
                {
                  "type": "while",
                  "start": {
                    "row": 22,
                    "column": 8
                  },
                  "end": {
                    "row": 22,
                    "column": 13
                  },
                  "text": "while"
                },
                {
                  "type": "comparison_operator",
                  "start": {
                    "row": 22,
                    "column": 14
                  },
                  "end": {
                    "row": 22,
                    "column": 37
                  },
                  "text": "expired < total_timeout",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 22,
                        "column": 14
                      },
                      "end": {
                        "row": 22,
                        "column": 21
                      },
                      "text": "expired"
                    },
                    {
                      "type": "<",
                      "start": {
                        "row": 22,
                        "column": 22
                      },
                      "end": {
                        "row": 22,
                        "column": 23
                      },
                      "text": "<"
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 22,
                        "column": 24
                      },
                      "end": {
                        "row": 22,
                        "column": 37
                      },
                      "text": "total_timeout"
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 22,
                    "column": 37
                  },
                  "end": {
                    "row": 22,
                    "column": 38
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 23,
                    "column": 12
                  },
                  "end": {
                    "row": 28,
                    "column": 21
                  },
                  "text": "try:\n                prompt += self.read_nonblocking(size=1, timeout=timeout)\n                expired = time.time() - begin # updated total time expired\n                timeout = inter_char_timeout\n            except TIMEOUT:\n                break",
                  "children": [
                    {
                      "type": "try_statement",
                      "start": {
                        "row": 23,
                        "column": 12
                      },
                      "end": {
                        "row": 28,
                        "column": 21
                      },
                      "text": "try:\n                prompt += self.read_nonblocking(size=1, timeout=timeout)\n                expired = time.time() - begin # updated total time expired\n                timeout = inter_char_timeout\n            except TIMEOUT:\n                break",
                      "children": [
                        {
                          "type": "try",
                          "start": {
                            "row": 23,
                            "column": 12
                          },
                          "end": {
                            "row": 23,
                            "column": 15
                          },
                          "text": "try"
                        },
                        {
                          "type": ":",
                          "start": {
                            "row": 23,
                            "column": 15
                          },
                          "end": {
                            "row": 23,
                            "column": 16
                          },
                          "text": ":"
                        },
                        {
                          "type": "block",
                          "start": {
                            "row": 24,
                            "column": 16
                          },
                          "end": {
                            "row": 26,
                            "column": 44
                          },
                          "text": "prompt += self.read_nonblocking(size=1, timeout=timeout)\n                expired = time.time() - begin # updated total time expired\n                timeout = inter_char_timeout",
                          "children": [
                            {
                              "type": "expression_statement",
                              "start": {
                                "row": 24,
                                "column": 16
                              },
                              "end": {
                                "row": 24,
                                "column": 72
                              },
                              "text": "prompt += self.read_nonblocking(size=1, timeout=timeout)",
                              "children": [
                                {
                                  "type": "augmented_assignment",
                                  "start": {
                                    "row": 24,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 24,
                                    "column": 72
                                  },
                                  "text": "prompt += self.read_nonblocking(size=1, timeout=timeout)",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 24,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 24,
                                        "column": 22
                                      },
                                      "text": "prompt"
                                    },
                                    {
                                      "type": "+=",
                                      "start": {
                                        "row": 24,
                                        "column": 23
                                      },
                                      "end": {
                                        "row": 24,
                                        "column": 25
                                      },
                                      "text": "+="
                                    },
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 24,
                                        "column": 26
                                      },
                                      "end": {
                                        "row": 24,
                                        "column": 72
                                      },
                                      "text": "self.read_nonblocking(size=1, timeout=timeout)",
                                      "children": [
                                        {
                                          "type": "attribute",
                                          "start": {
                                            "row": 24,
                                            "column": 26
                                          },
                                          "end": {
                                            "row": 24,
                                            "column": 47
                                          },
                                          "text": "self.read_nonblocking",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 24,
                                                "column": 26
                                              },
                                              "end": {
                                                "row": 24,
                                                "column": 30
                                              },
                                              "text": "self"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 24,
                                                "column": 30
                                              },
                                              "end": {
                                                "row": 24,
                                                "column": 31
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 24,
                                                "column": 31
                                              },
                                              "end": {
                                                "row": 24,
                                                "column": 47
                                              },
                                              "text": "read_nonblocking"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 24,
                                            "column": 47
                                          },
                                          "end": {
                                            "row": 24,
                                            "column": 72
                                          },
                                          "text": "(size=1, timeout=timeout)",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 24,
                                                "column": 47
                                              },
                                              "end": {
                                                "row": 24,
                                                "column": 48
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "keyword_argument",
                                              "start": {
                                                "row": 24,
                                                "column": 48
                                              },
                                              "end": {
                                                "row": 24,
                                                "column": 54
                                              },
                                              "text": "size=1",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 24,
                                                    "column": 48
                                                  },
                                                  "end": {
                                                    "row": 24,
                                                    "column": 52
                                                  },
                                                  "text": "size"
                                                },
                                                {
                                                  "type": "=",
                                                  "start": {
                                                    "row": 24,
                                                    "column": 52
                                                  },
                                                  "end": {
                                                    "row": 24,
                                                    "column": 53
                                                  },
                                                  "text": "="
                                                },
                                                {
                                                  "type": "integer",
                                                  "start": {
                                                    "row": 24,
                                                    "column": 53
                                                  },
                                                  "end": {
                                                    "row": 24,
                                                    "column": 54
                                                  },
                                                  "text": "1"
                                                }
                                              ]
                                            },
                                            {
                                              "type": ",",
                                              "start": {
                                                "row": 24,
                                                "column": 54
                                              },
                                              "end": {
                                                "row": 24,
                                                "column": 55
                                              },
                                              "text": ","
                                            },
                                            {
                                              "type": "keyword_argument",
                                              "start": {
                                                "row": 24,
                                                "column": 56
                                              },
                                              "end": {
                                                "row": 24,
                                                "column": 71
                                              },
                                              "text": "timeout=timeout",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 24,
                                                    "column": 56
                                                  },
                                                  "end": {
                                                    "row": 24,
                                                    "column": 63
                                                  },
                                                  "text": "timeout"
                                                },
                                                {
                                                  "type": "=",
                                                  "start": {
                                                    "row": 24,
                                                    "column": 63
                                                  },
                                                  "end": {
                                                    "row": 24,
                                                    "column": 64
                                                  },
                                                  "text": "="
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 24,
                                                    "column": 64
                                                  },
                                                  "end": {
                                                    "row": 24,
                                                    "column": 71
                                                  },
                                                  "text": "timeout"
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 24,
                                                "column": 71
                                              },
                                              "end": {
                                                "row": 24,
                                                "column": 72
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start": {
                                "row": 25,
                                "column": 16
                              },
                              "end": {
                                "row": 25,
                                "column": 45
                              },
                              "text": "expired = time.time() - begin",
                              "children": [
                                {
                                  "type": "assignment",
                                  "start": {
                                    "row": 25,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 25,
                                    "column": 45
                                  },
                                  "text": "expired = time.time() - begin",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 25,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 25,
                                        "column": 23
                                      },
                                      "text": "expired"
                                    },
                                    {
                                      "type": "=",
                                      "start": {
                                        "row": 25,
                                        "column": 24
                                      },
                                      "end": {
                                        "row": 25,
                                        "column": 25
                                      },
                                      "text": "="
                                    },
                                    {
                                      "type": "binary_operator",
                                      "start": {
                                        "row": 25,
                                        "column": 26
                                      },
                                      "end": {
                                        "row": 25,
                                        "column": 45
                                      },
                                      "text": "time.time() - begin",
                                      "children": [
                                        {
                                          "type": "call",
                                          "start": {
                                            "row": 25,
                                            "column": 26
                                          },
                                          "end": {
                                            "row": 25,
                                            "column": 37
                                          },
                                          "text": "time.time()",
                                          "children": [
                                            {
                                              "type": "attribute",
                                              "start": {
                                                "row": 25,
                                                "column": 26
                                              },
                                              "end": {
                                                "row": 25,
                                                "column": 35
                                              },
                                              "text": "time.time",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 25,
                                                    "column": 26
                                                  },
                                                  "end": {
                                                    "row": 25,
                                                    "column": 30
                                                  },
                                                  "text": "time"
                                                },
                                                {
                                                  "type": ".",
                                                  "start": {
                                                    "row": 25,
                                                    "column": 30
                                                  },
                                                  "end": {
                                                    "row": 25,
                                                    "column": 31
                                                  },
                                                  "text": "."
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 25,
                                                    "column": 31
                                                  },
                                                  "end": {
                                                    "row": 25,
                                                    "column": 35
                                                  },
                                                  "text": "time"
                                                }
                                              ]
                                            },
                                            {
                                              "type": "argument_list",
                                              "start": {
                                                "row": 25,
                                                "column": 35
                                              },
                                              "end": {
                                                "row": 25,
                                                "column": 37
                                              },
                                              "text": "()",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 25,
                                                    "column": 35
                                                  },
                                                  "end": {
                                                    "row": 25,
                                                    "column": 36
                                                  },
                                                  "text": "("
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 25,
                                                    "column": 36
                                                  },
                                                  "end": {
                                                    "row": 25,
                                                    "column": 37
                                                  },
                                                  "text": ")"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "-",
                                          "start": {
                                            "row": 25,
                                            "column": 38
                                          },
                                          "end": {
                                            "row": 25,
                                            "column": 39
                                          },
                                          "text": "-"
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 25,
                                            "column": 40
                                          },
                                          "end": {
                                            "row": 25,
                                            "column": 45
                                          },
                                          "text": "begin"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "comment",
                              "start": {
                                "row": 25,
                                "column": 46
                              },
                              "end": {
                                "row": 25,
                                "column": 74
                              },
                              "text": "# updated total time expired"
                            },
                            {
                              "type": "expression_statement",
                              "start": {
                                "row": 26,
                                "column": 16
                              },
                              "end": {
                                "row": 26,
                                "column": 44
                              },
                              "text": "timeout = inter_char_timeout",
                              "children": [
                                {
                                  "type": "assignment",
                                  "start": {
                                    "row": 26,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 26,
                                    "column": 44
                                  },
                                  "text": "timeout = inter_char_timeout",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 26,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 26,
                                        "column": 23
                                      },
                                      "text": "timeout"
                                    },
                                    {
                                      "type": "=",
                                      "start": {
                                        "row": 26,
                                        "column": 24
                                      },
                                      "end": {
                                        "row": 26,
                                        "column": 25
                                      },
                                      "text": "="
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 26,
                                        "column": 26
                                      },
                                      "end": {
                                        "row": 26,
                                        "column": 44
                                      },
                                      "text": "inter_char_timeout"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "except_clause",
                          "start": {
                            "row": 27,
                            "column": 12
                          },
                          "end": {
                            "row": 28,
                            "column": 21
                          },
                          "text": "except TIMEOUT:\n                break",
                          "children": [
                            {
                              "type": "except",
                              "start": {
                                "row": 27,
                                "column": 12
                              },
                              "end": {
                                "row": 27,
                                "column": 18
                              },
                              "text": "except"
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 27,
                                "column": 19
                              },
                              "end": {
                                "row": 27,
                                "column": 26
                              },
                              "text": "TIMEOUT"
                            },
                            {
                              "type": ":",
                              "start": {
                                "row": 27,
                                "column": 26
                              },
                              "end": {
                                "row": 27,
                                "column": 27
                              },
                              "text": ":"
                            },
                            {
                              "type": "block",
                              "start": {
                                "row": 28,
                                "column": 16
                              },
                              "end": {
                                "row": 28,
                                "column": 21
                              },
                              "text": "break",
                              "children": [
                                {
                                  "type": "break_statement",
                                  "start": {
                                    "row": 28,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 28,
                                    "column": 21
                                  },
                                  "text": "break",
                                  "children": [
                                    {
                                      "type": "break",
                                      "start": {
                                        "row": 28,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 28,
                                        "column": 21
                                      },
                                      "text": "break"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 30,
                "column": 8
              },
              "end": {
                "row": 30,
                "column": 21
              },
              "text": "return prompt",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 30,
                    "column": 8
                  },
                  "end": {
                    "row": 30,
                    "column": 14
                  },
                  "text": "return"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 30,
                    "column": 15
                  },
                  "end": {
                    "row": 30,
                    "column": 21
                  },
                  "text": "prompt"
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}