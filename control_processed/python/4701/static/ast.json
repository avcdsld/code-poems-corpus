{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 28,
    "column": 33
  },
  "text": "def reset(self, indices=None):\n    \"\"\"Resets environments at given indices.\n\n    Subclasses should override _reset to do the actual reset if something other\n    than the default implementation is desired.\n\n    Args:\n      indices: Indices of environments to reset. If None all envs are reset.\n\n    Returns:\n      Batch of initial observations of reset environments.\n    \"\"\"\n\n    if indices is None:\n      indices = np.arange(self.trajectories.batch_size)\n\n    # If this is empty (not None) then don't do anything, no env was done.\n    if indices.size == 0:\n      tf.logging.warning(\n          \"`reset` called with empty indices array, this is a no-op.\")\n      return None\n\n    observations = self._reset(indices)\n    processed_observations = self.process_observations(observations)\n\n    # Record history.\n    self.trajectories.reset(indices, observations)\n\n    return processed_observations",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 28,
        "column": 33
      },
      "text": "def reset(self, indices=None):\n    \"\"\"Resets environments at given indices.\n\n    Subclasses should override _reset to do the actual reset if something other\n    than the default implementation is desired.\n\n    Args:\n      indices: Indices of environments to reset. If None all envs are reset.\n\n    Returns:\n      Batch of initial observations of reset environments.\n    \"\"\"\n\n    if indices is None:\n      indices = np.arange(self.trajectories.batch_size)\n\n    # If this is empty (not None) then don't do anything, no env was done.\n    if indices.size == 0:\n      tf.logging.warning(\n          \"`reset` called with empty indices array, this is a no-op.\")\n      return None\n\n    observations = self._reset(indices)\n    processed_observations = self.process_observations(observations)\n\n    # Record history.\n    self.trajectories.reset(indices, observations)\n\n    return processed_observations",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 9
          },
          "text": "reset"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 9
          },
          "end": {
            "row": 0,
            "column": 29
          },
          "text": "(self, indices=None)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 9
              },
              "end": {
                "row": 0,
                "column": 10
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 10
              },
              "end": {
                "row": 0,
                "column": 14
              },
              "text": "self"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 14
              },
              "end": {
                "row": 0,
                "column": 15
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 0,
                "column": 16
              },
              "end": {
                "row": 0,
                "column": 28
              },
              "text": "indices=None",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 16
                  },
                  "end": {
                    "row": 0,
                    "column": 23
                  },
                  "text": "indices"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 0,
                    "column": 23
                  },
                  "end": {
                    "row": 0,
                    "column": 24
                  },
                  "text": "="
                },
                {
                  "type": "none",
                  "start": {
                    "row": 0,
                    "column": 24
                  },
                  "end": {
                    "row": 0,
                    "column": 28
                  },
                  "text": "None"
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 28
              },
              "end": {
                "row": 0,
                "column": 29
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 29
          },
          "end": {
            "row": 0,
            "column": 30
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 4
          },
          "end": {
            "row": 28,
            "column": 33
          },
          "text": "\"\"\"Resets environments at given indices.\n\n    Subclasses should override _reset to do the actual reset if something other\n    than the default implementation is desired.\n\n    Args:\n      indices: Indices of environments to reset. If None all envs are reset.\n\n    Returns:\n      Batch of initial observations of reset environments.\n    \"\"\"\n\n    if indices is None:\n      indices = np.arange(self.trajectories.batch_size)\n\n    # If this is empty (not None) then don't do anything, no env was done.\n    if indices.size == 0:\n      tf.logging.warning(\n          \"`reset` called with empty indices array, this is a no-op.\")\n      return None\n\n    observations = self._reset(indices)\n    processed_observations = self.process_observations(observations)\n\n    # Record history.\n    self.trajectories.reset(indices, observations)\n\n    return processed_observations",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 4
              },
              "end": {
                "row": 11,
                "column": 7
              },
              "text": "\"\"\"Resets environments at given indices.\n\n    Subclasses should override _reset to do the actual reset if something other\n    than the default implementation is desired.\n\n    Args:\n      indices: Indices of environments to reset. If None all envs are reset.\n\n    Returns:\n      Batch of initial observations of reset environments.\n    \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 4
                  },
                  "end": {
                    "row": 11,
                    "column": 7
                  },
                  "text": "\"\"\"Resets environments at given indices.\n\n    Subclasses should override _reset to do the actual reset if something other\n    than the default implementation is desired.\n\n    Args:\n      indices: Indices of environments to reset. If None all envs are reset.\n\n    Returns:\n      Batch of initial observations of reset environments.\n    \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 4
                      },
                      "end": {
                        "row": 1,
                        "column": 7
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 7
                      },
                      "end": {
                        "row": 11,
                        "column": 4
                      },
                      "text": "Resets environments at given indices.\n\n    Subclasses should override _reset to do the actual reset if something other\n    than the default implementation is desired.\n\n    Args:\n      indices: Indices of environments to reset. If None all envs are reset.\n\n    Returns:\n      Batch of initial observations of reset environments.\n    "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 11,
                        "column": 4
                      },
                      "end": {
                        "row": 11,
                        "column": 7
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 13,
                "column": 4
              },
              "end": {
                "row": 14,
                "column": 55
              },
              "text": "if indices is None:\n      indices = np.arange(self.trajectories.batch_size)",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 13,
                    "column": 4
                  },
                  "end": {
                    "row": 13,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "comparison_operator",
                  "start": {
                    "row": 13,
                    "column": 7
                  },
                  "end": {
                    "row": 13,
                    "column": 22
                  },
                  "text": "indices is None",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 13,
                        "column": 7
                      },
                      "end": {
                        "row": 13,
                        "column": 14
                      },
                      "text": "indices"
                    },
                    {
                      "type": "is",
                      "start": {
                        "row": 13,
                        "column": 15
                      },
                      "end": {
                        "row": 13,
                        "column": 17
                      },
                      "text": "is"
                    },
                    {
                      "type": "none",
                      "start": {
                        "row": 13,
                        "column": 18
                      },
                      "end": {
                        "row": 13,
                        "column": 22
                      },
                      "text": "None"
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 13,
                    "column": 22
                  },
                  "end": {
                    "row": 13,
                    "column": 23
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 14,
                    "column": 6
                  },
                  "end": {
                    "row": 14,
                    "column": 55
                  },
                  "text": "indices = np.arange(self.trajectories.batch_size)",
                  "children": [
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 14,
                        "column": 6
                      },
                      "end": {
                        "row": 14,
                        "column": 55
                      },
                      "text": "indices = np.arange(self.trajectories.batch_size)",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 14,
                            "column": 6
                          },
                          "end": {
                            "row": 14,
                            "column": 55
                          },
                          "text": "indices = np.arange(self.trajectories.batch_size)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 14,
                                "column": 6
                              },
                              "end": {
                                "row": 14,
                                "column": 13
                              },
                              "text": "indices"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 14,
                                "column": 14
                              },
                              "end": {
                                "row": 14,
                                "column": 15
                              },
                              "text": "="
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 14,
                                "column": 16
                              },
                              "end": {
                                "row": 14,
                                "column": 55
                              },
                              "text": "np.arange(self.trajectories.batch_size)",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 14,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 14,
                                    "column": 25
                                  },
                                  "text": "np.arange",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 14,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 14,
                                        "column": 18
                                      },
                                      "text": "np"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 14,
                                        "column": 18
                                      },
                                      "end": {
                                        "row": 14,
                                        "column": 19
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 14,
                                        "column": 19
                                      },
                                      "end": {
                                        "row": 14,
                                        "column": 25
                                      },
                                      "text": "arange"
                                    }
                                  ]
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 14,
                                    "column": 25
                                  },
                                  "end": {
                                    "row": 14,
                                    "column": 55
                                  },
                                  "text": "(self.trajectories.batch_size)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 14,
                                        "column": 25
                                      },
                                      "end": {
                                        "row": 14,
                                        "column": 26
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "attribute",
                                      "start": {
                                        "row": 14,
                                        "column": 26
                                      },
                                      "end": {
                                        "row": 14,
                                        "column": 54
                                      },
                                      "text": "self.trajectories.batch_size",
                                      "children": [
                                        {
                                          "type": "attribute",
                                          "start": {
                                            "row": 14,
                                            "column": 26
                                          },
                                          "end": {
                                            "row": 14,
                                            "column": 43
                                          },
                                          "text": "self.trajectories",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 14,
                                                "column": 26
                                              },
                                              "end": {
                                                "row": 14,
                                                "column": 30
                                              },
                                              "text": "self"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 14,
                                                "column": 30
                                              },
                                              "end": {
                                                "row": 14,
                                                "column": 31
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 14,
                                                "column": 31
                                              },
                                              "end": {
                                                "row": 14,
                                                "column": 43
                                              },
                                              "text": "trajectories"
                                            }
                                          ]
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 14,
                                            "column": 43
                                          },
                                          "end": {
                                            "row": 14,
                                            "column": 44
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 14,
                                            "column": 44
                                          },
                                          "end": {
                                            "row": 14,
                                            "column": 54
                                          },
                                          "text": "batch_size"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 14,
                                        "column": 54
                                      },
                                      "end": {
                                        "row": 14,
                                        "column": 55
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 16,
                "column": 4
              },
              "end": {
                "row": 16,
                "column": 74
              },
              "text": "# If this is empty (not None) then don't do anything, no env was done."
            },
            {
              "type": "if_statement",
              "start": {
                "row": 17,
                "column": 4
              },
              "end": {
                "row": 20,
                "column": 17
              },
              "text": "if indices.size == 0:\n      tf.logging.warning(\n          \"`reset` called with empty indices array, this is a no-op.\")\n      return None",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 17,
                    "column": 4
                  },
                  "end": {
                    "row": 17,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "comparison_operator",
                  "start": {
                    "row": 17,
                    "column": 7
                  },
                  "end": {
                    "row": 17,
                    "column": 24
                  },
                  "text": "indices.size == 0",
                  "children": [
                    {
                      "type": "attribute",
                      "start": {
                        "row": 17,
                        "column": 7
                      },
                      "end": {
                        "row": 17,
                        "column": 19
                      },
                      "text": "indices.size",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 17,
                            "column": 7
                          },
                          "end": {
                            "row": 17,
                            "column": 14
                          },
                          "text": "indices"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 17,
                            "column": 14
                          },
                          "end": {
                            "row": 17,
                            "column": 15
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 17,
                            "column": 15
                          },
                          "end": {
                            "row": 17,
                            "column": 19
                          },
                          "text": "size"
                        }
                      ]
                    },
                    {
                      "type": "==",
                      "start": {
                        "row": 17,
                        "column": 20
                      },
                      "end": {
                        "row": 17,
                        "column": 22
                      },
                      "text": "=="
                    },
                    {
                      "type": "integer",
                      "start": {
                        "row": 17,
                        "column": 23
                      },
                      "end": {
                        "row": 17,
                        "column": 24
                      },
                      "text": "0"
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 17,
                    "column": 24
                  },
                  "end": {
                    "row": 17,
                    "column": 25
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 18,
                    "column": 6
                  },
                  "end": {
                    "row": 20,
                    "column": 17
                  },
                  "text": "tf.logging.warning(\n          \"`reset` called with empty indices array, this is a no-op.\")\n      return None",
                  "children": [
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 18,
                        "column": 6
                      },
                      "end": {
                        "row": 19,
                        "column": 70
                      },
                      "text": "tf.logging.warning(\n          \"`reset` called with empty indices array, this is a no-op.\")",
                      "children": [
                        {
                          "type": "call",
                          "start": {
                            "row": 18,
                            "column": 6
                          },
                          "end": {
                            "row": 19,
                            "column": 70
                          },
                          "text": "tf.logging.warning(\n          \"`reset` called with empty indices array, this is a no-op.\")",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 18,
                                "column": 6
                              },
                              "end": {
                                "row": 18,
                                "column": 24
                              },
                              "text": "tf.logging.warning",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 18,
                                    "column": 6
                                  },
                                  "end": {
                                    "row": 18,
                                    "column": 16
                                  },
                                  "text": "tf.logging",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 18,
                                        "column": 6
                                      },
                                      "end": {
                                        "row": 18,
                                        "column": 8
                                      },
                                      "text": "tf"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 18,
                                        "column": 8
                                      },
                                      "end": {
                                        "row": 18,
                                        "column": 9
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 18,
                                        "column": 9
                                      },
                                      "end": {
                                        "row": 18,
                                        "column": 16
                                      },
                                      "text": "logging"
                                    }
                                  ]
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 18,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 18,
                                    "column": 17
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 18,
                                    "column": 17
                                  },
                                  "end": {
                                    "row": 18,
                                    "column": 24
                                  },
                                  "text": "warning"
                                }
                              ]
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 18,
                                "column": 24
                              },
                              "end": {
                                "row": 19,
                                "column": 70
                              },
                              "text": "(\n          \"`reset` called with empty indices array, this is a no-op.\")",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 18,
                                    "column": 24
                                  },
                                  "end": {
                                    "row": 18,
                                    "column": 25
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "string",
                                  "start": {
                                    "row": 19,
                                    "column": 10
                                  },
                                  "end": {
                                    "row": 19,
                                    "column": 69
                                  },
                                  "text": "\"`reset` called with empty indices array, this is a no-op.\"",
                                  "children": [
                                    {
                                      "type": "string_start",
                                      "start": {
                                        "row": 19,
                                        "column": 10
                                      },
                                      "end": {
                                        "row": 19,
                                        "column": 11
                                      },
                                      "text": "\""
                                    },
                                    {
                                      "type": "string_content",
                                      "start": {
                                        "row": 19,
                                        "column": 11
                                      },
                                      "end": {
                                        "row": 19,
                                        "column": 68
                                      },
                                      "text": "`reset` called with empty indices array, this is a no-op."
                                    },
                                    {
                                      "type": "string_end",
                                      "start": {
                                        "row": 19,
                                        "column": 68
                                      },
                                      "end": {
                                        "row": 19,
                                        "column": 69
                                      },
                                      "text": "\""
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 19,
                                    "column": 69
                                  },
                                  "end": {
                                    "row": 19,
                                    "column": 70
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "return_statement",
                      "start": {
                        "row": 20,
                        "column": 6
                      },
                      "end": {
                        "row": 20,
                        "column": 17
                      },
                      "text": "return None",
                      "children": [
                        {
                          "type": "return",
                          "start": {
                            "row": 20,
                            "column": 6
                          },
                          "end": {
                            "row": 20,
                            "column": 12
                          },
                          "text": "return"
                        },
                        {
                          "type": "none",
                          "start": {
                            "row": 20,
                            "column": 13
                          },
                          "end": {
                            "row": 20,
                            "column": 17
                          },
                          "text": "None"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 22,
                "column": 4
              },
              "end": {
                "row": 22,
                "column": 39
              },
              "text": "observations = self._reset(indices)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 22,
                    "column": 4
                  },
                  "end": {
                    "row": 22,
                    "column": 39
                  },
                  "text": "observations = self._reset(indices)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 22,
                        "column": 4
                      },
                      "end": {
                        "row": 22,
                        "column": 16
                      },
                      "text": "observations"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 22,
                        "column": 17
                      },
                      "end": {
                        "row": 22,
                        "column": 18
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 22,
                        "column": 19
                      },
                      "end": {
                        "row": 22,
                        "column": 39
                      },
                      "text": "self._reset(indices)",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 22,
                            "column": 19
                          },
                          "end": {
                            "row": 22,
                            "column": 30
                          },
                          "text": "self._reset",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 22,
                                "column": 19
                              },
                              "end": {
                                "row": 22,
                                "column": 23
                              },
                              "text": "self"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 22,
                                "column": 23
                              },
                              "end": {
                                "row": 22,
                                "column": 24
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 22,
                                "column": 24
                              },
                              "end": {
                                "row": 22,
                                "column": 30
                              },
                              "text": "_reset"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 22,
                            "column": 30
                          },
                          "end": {
                            "row": 22,
                            "column": 39
                          },
                          "text": "(indices)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 22,
                                "column": 30
                              },
                              "end": {
                                "row": 22,
                                "column": 31
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 22,
                                "column": 31
                              },
                              "end": {
                                "row": 22,
                                "column": 38
                              },
                              "text": "indices"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 22,
                                "column": 38
                              },
                              "end": {
                                "row": 22,
                                "column": 39
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 23,
                "column": 4
              },
              "end": {
                "row": 23,
                "column": 68
              },
              "text": "processed_observations = self.process_observations(observations)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 23,
                    "column": 4
                  },
                  "end": {
                    "row": 23,
                    "column": 68
                  },
                  "text": "processed_observations = self.process_observations(observations)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 23,
                        "column": 4
                      },
                      "end": {
                        "row": 23,
                        "column": 26
                      },
                      "text": "processed_observations"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 23,
                        "column": 27
                      },
                      "end": {
                        "row": 23,
                        "column": 28
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 23,
                        "column": 29
                      },
                      "end": {
                        "row": 23,
                        "column": 68
                      },
                      "text": "self.process_observations(observations)",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 23,
                            "column": 29
                          },
                          "end": {
                            "row": 23,
                            "column": 54
                          },
                          "text": "self.process_observations",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 23,
                                "column": 29
                              },
                              "end": {
                                "row": 23,
                                "column": 33
                              },
                              "text": "self"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 23,
                                "column": 33
                              },
                              "end": {
                                "row": 23,
                                "column": 34
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 23,
                                "column": 34
                              },
                              "end": {
                                "row": 23,
                                "column": 54
                              },
                              "text": "process_observations"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 23,
                            "column": 54
                          },
                          "end": {
                            "row": 23,
                            "column": 68
                          },
                          "text": "(observations)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 23,
                                "column": 54
                              },
                              "end": {
                                "row": 23,
                                "column": 55
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 23,
                                "column": 55
                              },
                              "end": {
                                "row": 23,
                                "column": 67
                              },
                              "text": "observations"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 23,
                                "column": 67
                              },
                              "end": {
                                "row": 23,
                                "column": 68
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 25,
                "column": 4
              },
              "end": {
                "row": 25,
                "column": 21
              },
              "text": "# Record history."
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 26,
                "column": 4
              },
              "end": {
                "row": 26,
                "column": 50
              },
              "text": "self.trajectories.reset(indices, observations)",
              "children": [
                {
                  "type": "call",
                  "start": {
                    "row": 26,
                    "column": 4
                  },
                  "end": {
                    "row": 26,
                    "column": 50
                  },
                  "text": "self.trajectories.reset(indices, observations)",
                  "children": [
                    {
                      "type": "attribute",
                      "start": {
                        "row": 26,
                        "column": 4
                      },
                      "end": {
                        "row": 26,
                        "column": 27
                      },
                      "text": "self.trajectories.reset",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 26,
                            "column": 4
                          },
                          "end": {
                            "row": 26,
                            "column": 21
                          },
                          "text": "self.trajectories",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 26,
                                "column": 4
                              },
                              "end": {
                                "row": 26,
                                "column": 8
                              },
                              "text": "self"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 26,
                                "column": 8
                              },
                              "end": {
                                "row": 26,
                                "column": 9
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 26,
                                "column": 9
                              },
                              "end": {
                                "row": 26,
                                "column": 21
                              },
                              "text": "trajectories"
                            }
                          ]
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 26,
                            "column": 21
                          },
                          "end": {
                            "row": 26,
                            "column": 22
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 26,
                            "column": 22
                          },
                          "end": {
                            "row": 26,
                            "column": 27
                          },
                          "text": "reset"
                        }
                      ]
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 26,
                        "column": 27
                      },
                      "end": {
                        "row": 26,
                        "column": 50
                      },
                      "text": "(indices, observations)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 26,
                            "column": 27
                          },
                          "end": {
                            "row": 26,
                            "column": 28
                          },
                          "text": "("
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 26,
                            "column": 28
                          },
                          "end": {
                            "row": 26,
                            "column": 35
                          },
                          "text": "indices"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 26,
                            "column": 35
                          },
                          "end": {
                            "row": 26,
                            "column": 36
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 26,
                            "column": 37
                          },
                          "end": {
                            "row": 26,
                            "column": 49
                          },
                          "text": "observations"
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 26,
                            "column": 49
                          },
                          "end": {
                            "row": 26,
                            "column": 50
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 28,
                "column": 4
              },
              "end": {
                "row": 28,
                "column": 33
              },
              "text": "return processed_observations",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 28,
                    "column": 4
                  },
                  "end": {
                    "row": 28,
                    "column": 10
                  },
                  "text": "return"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 28,
                    "column": 11
                  },
                  "end": {
                    "row": 28,
                    "column": 33
                  },
                  "text": "processed_observations"
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}