{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 15,
    "column": 76
  },
  "text": "def add_transition (self, input_symbol, state, action=None, next_state=None):\n\n        '''This adds a transition that associates:\n\n                (input_symbol, current_state) --> (action, next_state)\n\n        The action may be set to None in which case the process() method will\n        ignore the action and only set the next_state. The next_state may be\n        set to None in which case the current state will be unchanged.\n\n        You can also set transitions for a list of symbols by using\n        add_transition_list(). '''\n\n        if next_state is None:\n            next_state = state\n        self.state_transitions[(input_symbol, state)] = (action, next_state)",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 15,
        "column": 76
      },
      "text": "def add_transition (self, input_symbol, state, action=None, next_state=None):\n\n        '''This adds a transition that associates:\n\n                (input_symbol, current_state) --> (action, next_state)\n\n        The action may be set to None in which case the process() method will\n        ignore the action and only set the next_state. The next_state may be\n        set to None in which case the current state will be unchanged.\n\n        You can also set transitions for a list of symbols by using\n        add_transition_list(). '''\n\n        if next_state is None:\n            next_state = state\n        self.state_transitions[(input_symbol, state)] = (action, next_state)",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 18
          },
          "text": "add_transition"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 19
          },
          "end": {
            "row": 0,
            "column": 76
          },
          "text": "(self, input_symbol, state, action=None, next_state=None)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 19
              },
              "end": {
                "row": 0,
                "column": 20
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 20
              },
              "end": {
                "row": 0,
                "column": 24
              },
              "text": "self"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 24
              },
              "end": {
                "row": 0,
                "column": 25
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 26
              },
              "end": {
                "row": 0,
                "column": 38
              },
              "text": "input_symbol"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 38
              },
              "end": {
                "row": 0,
                "column": 39
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 40
              },
              "end": {
                "row": 0,
                "column": 45
              },
              "text": "state"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 45
              },
              "end": {
                "row": 0,
                "column": 46
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 0,
                "column": 47
              },
              "end": {
                "row": 0,
                "column": 58
              },
              "text": "action=None",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 47
                  },
                  "end": {
                    "row": 0,
                    "column": 53
                  },
                  "text": "action"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 0,
                    "column": 53
                  },
                  "end": {
                    "row": 0,
                    "column": 54
                  },
                  "text": "="
                },
                {
                  "type": "none",
                  "start": {
                    "row": 0,
                    "column": 54
                  },
                  "end": {
                    "row": 0,
                    "column": 58
                  },
                  "text": "None"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 58
              },
              "end": {
                "row": 0,
                "column": 59
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 0,
                "column": 60
              },
              "end": {
                "row": 0,
                "column": 75
              },
              "text": "next_state=None",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 60
                  },
                  "end": {
                    "row": 0,
                    "column": 70
                  },
                  "text": "next_state"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 0,
                    "column": 70
                  },
                  "end": {
                    "row": 0,
                    "column": 71
                  },
                  "text": "="
                },
                {
                  "type": "none",
                  "start": {
                    "row": 0,
                    "column": 71
                  },
                  "end": {
                    "row": 0,
                    "column": 75
                  },
                  "text": "None"
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 75
              },
              "end": {
                "row": 0,
                "column": 76
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 76
          },
          "end": {
            "row": 0,
            "column": 77
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 2,
            "column": 8
          },
          "end": {
            "row": 15,
            "column": 76
          },
          "text": "'''This adds a transition that associates:\n\n                (input_symbol, current_state) --> (action, next_state)\n\n        The action may be set to None in which case the process() method will\n        ignore the action and only set the next_state. The next_state may be\n        set to None in which case the current state will be unchanged.\n\n        You can also set transitions for a list of symbols by using\n        add_transition_list(). '''\n\n        if next_state is None:\n            next_state = state\n        self.state_transitions[(input_symbol, state)] = (action, next_state)",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 2,
                "column": 8
              },
              "end": {
                "row": 11,
                "column": 34
              },
              "text": "'''This adds a transition that associates:\n\n                (input_symbol, current_state) --> (action, next_state)\n\n        The action may be set to None in which case the process() method will\n        ignore the action and only set the next_state. The next_state may be\n        set to None in which case the current state will be unchanged.\n\n        You can also set transitions for a list of symbols by using\n        add_transition_list(). '''",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 2,
                    "column": 8
                  },
                  "end": {
                    "row": 11,
                    "column": 34
                  },
                  "text": "'''This adds a transition that associates:\n\n                (input_symbol, current_state) --> (action, next_state)\n\n        The action may be set to None in which case the process() method will\n        ignore the action and only set the next_state. The next_state may be\n        set to None in which case the current state will be unchanged.\n\n        You can also set transitions for a list of symbols by using\n        add_transition_list(). '''",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 2,
                        "column": 8
                      },
                      "end": {
                        "row": 2,
                        "column": 11
                      },
                      "text": "'''"
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 2,
                        "column": 11
                      },
                      "end": {
                        "row": 11,
                        "column": 31
                      },
                      "text": "This adds a transition that associates:\n\n                (input_symbol, current_state) --> (action, next_state)\n\n        The action may be set to None in which case the process() method will\n        ignore the action and only set the next_state. The next_state may be\n        set to None in which case the current state will be unchanged.\n\n        You can also set transitions for a list of symbols by using\n        add_transition_list(). "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 11,
                        "column": 31
                      },
                      "end": {
                        "row": 11,
                        "column": 34
                      },
                      "text": "'''"
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 13,
                "column": 8
              },
              "end": {
                "row": 14,
                "column": 30
              },
              "text": "if next_state is None:\n            next_state = state",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 13,
                    "column": 8
                  },
                  "end": {
                    "row": 13,
                    "column": 10
                  },
                  "text": "if"
                },
                {
                  "type": "comparison_operator",
                  "start": {
                    "row": 13,
                    "column": 11
                  },
                  "end": {
                    "row": 13,
                    "column": 29
                  },
                  "text": "next_state is None",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 13,
                        "column": 11
                      },
                      "end": {
                        "row": 13,
                        "column": 21
                      },
                      "text": "next_state"
                    },
                    {
                      "type": "is",
                      "start": {
                        "row": 13,
                        "column": 22
                      },
                      "end": {
                        "row": 13,
                        "column": 24
                      },
                      "text": "is"
                    },
                    {
                      "type": "none",
                      "start": {
                        "row": 13,
                        "column": 25
                      },
                      "end": {
                        "row": 13,
                        "column": 29
                      },
                      "text": "None"
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 13,
                    "column": 29
                  },
                  "end": {
                    "row": 13,
                    "column": 30
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 14,
                    "column": 12
                  },
                  "end": {
                    "row": 14,
                    "column": 30
                  },
                  "text": "next_state = state",
                  "children": [
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 14,
                        "column": 12
                      },
                      "end": {
                        "row": 14,
                        "column": 30
                      },
                      "text": "next_state = state",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 14,
                            "column": 12
                          },
                          "end": {
                            "row": 14,
                            "column": 30
                          },
                          "text": "next_state = state",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 14,
                                "column": 12
                              },
                              "end": {
                                "row": 14,
                                "column": 22
                              },
                              "text": "next_state"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 14,
                                "column": 23
                              },
                              "end": {
                                "row": 14,
                                "column": 24
                              },
                              "text": "="
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 14,
                                "column": 25
                              },
                              "end": {
                                "row": 14,
                                "column": 30
                              },
                              "text": "state"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 15,
                "column": 8
              },
              "end": {
                "row": 15,
                "column": 76
              },
              "text": "self.state_transitions[(input_symbol, state)] = (action, next_state)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 15,
                    "column": 8
                  },
                  "end": {
                    "row": 15,
                    "column": 76
                  },
                  "text": "self.state_transitions[(input_symbol, state)] = (action, next_state)",
                  "children": [
                    {
                      "type": "subscript",
                      "start": {
                        "row": 15,
                        "column": 8
                      },
                      "end": {
                        "row": 15,
                        "column": 53
                      },
                      "text": "self.state_transitions[(input_symbol, state)]",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 15,
                            "column": 8
                          },
                          "end": {
                            "row": 15,
                            "column": 30
                          },
                          "text": "self.state_transitions",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 15,
                                "column": 8
                              },
                              "end": {
                                "row": 15,
                                "column": 12
                              },
                              "text": "self"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 15,
                                "column": 12
                              },
                              "end": {
                                "row": 15,
                                "column": 13
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 15,
                                "column": 13
                              },
                              "end": {
                                "row": 15,
                                "column": 30
                              },
                              "text": "state_transitions"
                            }
                          ]
                        },
                        {
                          "type": "[",
                          "start": {
                            "row": 15,
                            "column": 30
                          },
                          "end": {
                            "row": 15,
                            "column": 31
                          },
                          "text": "["
                        },
                        {
                          "type": "tuple",
                          "start": {
                            "row": 15,
                            "column": 31
                          },
                          "end": {
                            "row": 15,
                            "column": 52
                          },
                          "text": "(input_symbol, state)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 15,
                                "column": 31
                              },
                              "end": {
                                "row": 15,
                                "column": 32
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 15,
                                "column": 32
                              },
                              "end": {
                                "row": 15,
                                "column": 44
                              },
                              "text": "input_symbol"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 15,
                                "column": 44
                              },
                              "end": {
                                "row": 15,
                                "column": 45
                              },
                              "text": ","
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 15,
                                "column": 46
                              },
                              "end": {
                                "row": 15,
                                "column": 51
                              },
                              "text": "state"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 15,
                                "column": 51
                              },
                              "end": {
                                "row": 15,
                                "column": 52
                              },
                              "text": ")"
                            }
                          ]
                        },
                        {
                          "type": "]",
                          "start": {
                            "row": 15,
                            "column": 52
                          },
                          "end": {
                            "row": 15,
                            "column": 53
                          },
                          "text": "]"
                        }
                      ]
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 15,
                        "column": 54
                      },
                      "end": {
                        "row": 15,
                        "column": 55
                      },
                      "text": "="
                    },
                    {
                      "type": "tuple",
                      "start": {
                        "row": 15,
                        "column": 56
                      },
                      "end": {
                        "row": 15,
                        "column": 76
                      },
                      "text": "(action, next_state)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 15,
                            "column": 56
                          },
                          "end": {
                            "row": 15,
                            "column": 57
                          },
                          "text": "("
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 15,
                            "column": 57
                          },
                          "end": {
                            "row": 15,
                            "column": 63
                          },
                          "text": "action"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 15,
                            "column": 63
                          },
                          "end": {
                            "row": 15,
                            "column": 64
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 15,
                            "column": 65
                          },
                          "end": {
                            "row": 15,
                            "column": 75
                          },
                          "text": "next_state"
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 15,
                            "column": 75
                          },
                          "end": {
                            "row": 15,
                            "column": 76
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}