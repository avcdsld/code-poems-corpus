{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 16,
    "column": 71
  },
  "text": "def update_metric(self, eval_metric, labels, pre_sliced=False):\n        \"\"\"Evaluates and accumulates evaluation metric on outputs of the last forward computation.\n\n        See Also\n        ----------\n        :meth:`BaseModule.update_metric`.\n\n        Parameters\n        ----------\n        eval_metric : EvalMetric\n            Evaluation metric to use.\n        labels : list of NDArray if `pre_sliced` parameter is set to `False`,\n            list of lists of NDArray otherwise. Typically `data_batch.label`.\n        pre_sliced: bool\n            Whether the labels are already sliced per device (default: False).\n        \"\"\"\n        self._exec_group.update_metric(eval_metric, labels, pre_sliced)",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 16,
        "column": 71
      },
      "text": "def update_metric(self, eval_metric, labels, pre_sliced=False):\n        \"\"\"Evaluates and accumulates evaluation metric on outputs of the last forward computation.\n\n        See Also\n        ----------\n        :meth:`BaseModule.update_metric`.\n\n        Parameters\n        ----------\n        eval_metric : EvalMetric\n            Evaluation metric to use.\n        labels : list of NDArray if `pre_sliced` parameter is set to `False`,\n            list of lists of NDArray otherwise. Typically `data_batch.label`.\n        pre_sliced: bool\n            Whether the labels are already sliced per device (default: False).\n        \"\"\"\n        self._exec_group.update_metric(eval_metric, labels, pre_sliced)",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 17
          },
          "text": "update_metric"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 17
          },
          "end": {
            "row": 0,
            "column": 62
          },
          "text": "(self, eval_metric, labels, pre_sliced=False)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 17
              },
              "end": {
                "row": 0,
                "column": 18
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 18
              },
              "end": {
                "row": 0,
                "column": 22
              },
              "text": "self"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 22
              },
              "end": {
                "row": 0,
                "column": 23
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 24
              },
              "end": {
                "row": 0,
                "column": 35
              },
              "text": "eval_metric"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 35
              },
              "end": {
                "row": 0,
                "column": 36
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 37
              },
              "end": {
                "row": 0,
                "column": 43
              },
              "text": "labels"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 43
              },
              "end": {
                "row": 0,
                "column": 44
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 0,
                "column": 45
              },
              "end": {
                "row": 0,
                "column": 61
              },
              "text": "pre_sliced=False",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 45
                  },
                  "end": {
                    "row": 0,
                    "column": 55
                  },
                  "text": "pre_sliced"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 0,
                    "column": 55
                  },
                  "end": {
                    "row": 0,
                    "column": 56
                  },
                  "text": "="
                },
                {
                  "type": "false",
                  "start": {
                    "row": 0,
                    "column": 56
                  },
                  "end": {
                    "row": 0,
                    "column": 61
                  },
                  "text": "False"
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 61
              },
              "end": {
                "row": 0,
                "column": 62
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 62
          },
          "end": {
            "row": 0,
            "column": 63
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 8
          },
          "end": {
            "row": 16,
            "column": 71
          },
          "text": "\"\"\"Evaluates and accumulates evaluation metric on outputs of the last forward computation.\n\n        See Also\n        ----------\n        :meth:`BaseModule.update_metric`.\n\n        Parameters\n        ----------\n        eval_metric : EvalMetric\n            Evaluation metric to use.\n        labels : list of NDArray if `pre_sliced` parameter is set to `False`,\n            list of lists of NDArray otherwise. Typically `data_batch.label`.\n        pre_sliced: bool\n            Whether the labels are already sliced per device (default: False).\n        \"\"\"\n        self._exec_group.update_metric(eval_metric, labels, pre_sliced)",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 8
              },
              "end": {
                "row": 15,
                "column": 11
              },
              "text": "\"\"\"Evaluates and accumulates evaluation metric on outputs of the last forward computation.\n\n        See Also\n        ----------\n        :meth:`BaseModule.update_metric`.\n\n        Parameters\n        ----------\n        eval_metric : EvalMetric\n            Evaluation metric to use.\n        labels : list of NDArray if `pre_sliced` parameter is set to `False`,\n            list of lists of NDArray otherwise. Typically `data_batch.label`.\n        pre_sliced: bool\n            Whether the labels are already sliced per device (default: False).\n        \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 8
                  },
                  "end": {
                    "row": 15,
                    "column": 11
                  },
                  "text": "\"\"\"Evaluates and accumulates evaluation metric on outputs of the last forward computation.\n\n        See Also\n        ----------\n        :meth:`BaseModule.update_metric`.\n\n        Parameters\n        ----------\n        eval_metric : EvalMetric\n            Evaluation metric to use.\n        labels : list of NDArray if `pre_sliced` parameter is set to `False`,\n            list of lists of NDArray otherwise. Typically `data_batch.label`.\n        pre_sliced: bool\n            Whether the labels are already sliced per device (default: False).\n        \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 8
                      },
                      "end": {
                        "row": 1,
                        "column": 11
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 11
                      },
                      "end": {
                        "row": 15,
                        "column": 8
                      },
                      "text": "Evaluates and accumulates evaluation metric on outputs of the last forward computation.\n\n        See Also\n        ----------\n        :meth:`BaseModule.update_metric`.\n\n        Parameters\n        ----------\n        eval_metric : EvalMetric\n            Evaluation metric to use.\n        labels : list of NDArray if `pre_sliced` parameter is set to `False`,\n            list of lists of NDArray otherwise. Typically `data_batch.label`.\n        pre_sliced: bool\n            Whether the labels are already sliced per device (default: False).\n        "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 15,
                        "column": 8
                      },
                      "end": {
                        "row": 15,
                        "column": 11
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 16,
                "column": 8
              },
              "end": {
                "row": 16,
                "column": 71
              },
              "text": "self._exec_group.update_metric(eval_metric, labels, pre_sliced)",
              "children": [
                {
                  "type": "call",
                  "start": {
                    "row": 16,
                    "column": 8
                  },
                  "end": {
                    "row": 16,
                    "column": 71
                  },
                  "text": "self._exec_group.update_metric(eval_metric, labels, pre_sliced)",
                  "children": [
                    {
                      "type": "attribute",
                      "start": {
                        "row": 16,
                        "column": 8
                      },
                      "end": {
                        "row": 16,
                        "column": 38
                      },
                      "text": "self._exec_group.update_metric",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 16,
                            "column": 8
                          },
                          "end": {
                            "row": 16,
                            "column": 24
                          },
                          "text": "self._exec_group",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 16,
                                "column": 8
                              },
                              "end": {
                                "row": 16,
                                "column": 12
                              },
                              "text": "self"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 16,
                                "column": 12
                              },
                              "end": {
                                "row": 16,
                                "column": 13
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 16,
                                "column": 13
                              },
                              "end": {
                                "row": 16,
                                "column": 24
                              },
                              "text": "_exec_group"
                            }
                          ]
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 16,
                            "column": 24
                          },
                          "end": {
                            "row": 16,
                            "column": 25
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 16,
                            "column": 25
                          },
                          "end": {
                            "row": 16,
                            "column": 38
                          },
                          "text": "update_metric"
                        }
                      ]
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 16,
                        "column": 38
                      },
                      "end": {
                        "row": 16,
                        "column": 71
                      },
                      "text": "(eval_metric, labels, pre_sliced)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 16,
                            "column": 38
                          },
                          "end": {
                            "row": 16,
                            "column": 39
                          },
                          "text": "("
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 16,
                            "column": 39
                          },
                          "end": {
                            "row": 16,
                            "column": 50
                          },
                          "text": "eval_metric"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 16,
                            "column": 50
                          },
                          "end": {
                            "row": 16,
                            "column": 51
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 16,
                            "column": 52
                          },
                          "end": {
                            "row": 16,
                            "column": 58
                          },
                          "text": "labels"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 16,
                            "column": 58
                          },
                          "end": {
                            "row": 16,
                            "column": 59
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 16,
                            "column": 60
                          },
                          "end": {
                            "row": 16,
                            "column": 70
                          },
                          "text": "pre_sliced"
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 16,
                            "column": 70
                          },
                          "end": {
                            "row": 16,
                            "column": 71
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}