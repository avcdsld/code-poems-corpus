{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 34,
    "column": 12
  },
  "text": "def clip_eta(eta, ord, eps):\n  \"\"\"\n  Helper function to clip the perturbation to epsilon norm ball.\n  :param eta: A tensor with the current perturbation.\n  :param ord: Order of the norm (mimics Numpy).\n              Possible values: np.inf, 1 or 2.\n  :param eps: Epsilon, bound of the perturbation.\n  \"\"\"\n\n  # Clipping perturbation eta to self.ord norm ball\n  if ord not in [np.inf, 1, 2]:\n    raise ValueError('ord must be np.inf, 1, or 2.')\n  reduc_ind = list(xrange(1, len(eta.get_shape())))\n  avoid_zero_div = 1e-12\n  if ord == np.inf:\n    eta = clip_by_value(eta, -eps, eps)\n  else:\n    if ord == 1:\n      raise NotImplementedError(\"The expression below is not the correct way\"\n                                \" to project onto the L1 norm ball.\")\n      norm = tf.maximum(avoid_zero_div,\n                        reduce_sum(tf.abs(eta),\n                                   reduc_ind, keepdims=True))\n    elif ord == 2:\n      # avoid_zero_div must go inside sqrt to avoid a divide by zero\n      # in the gradient through this operation\n      norm = tf.sqrt(tf.maximum(avoid_zero_div,\n                                reduce_sum(tf.square(eta),\n                                           reduc_ind,\n                                           keepdims=True)))\n    # We must *clip* to within the norm ball, not *normalize* onto the\n    # surface of the ball\n    factor = tf.minimum(1., div(eps, norm))\n    eta = eta * factor\n  return eta",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 34,
        "column": 12
      },
      "text": "def clip_eta(eta, ord, eps):\n  \"\"\"\n  Helper function to clip the perturbation to epsilon norm ball.\n  :param eta: A tensor with the current perturbation.\n  :param ord: Order of the norm (mimics Numpy).\n              Possible values: np.inf, 1 or 2.\n  :param eps: Epsilon, bound of the perturbation.\n  \"\"\"\n\n  # Clipping perturbation eta to self.ord norm ball\n  if ord not in [np.inf, 1, 2]:\n    raise ValueError('ord must be np.inf, 1, or 2.')\n  reduc_ind = list(xrange(1, len(eta.get_shape())))\n  avoid_zero_div = 1e-12\n  if ord == np.inf:\n    eta = clip_by_value(eta, -eps, eps)\n  else:\n    if ord == 1:\n      raise NotImplementedError(\"The expression below is not the correct way\"\n                                \" to project onto the L1 norm ball.\")\n      norm = tf.maximum(avoid_zero_div,\n                        reduce_sum(tf.abs(eta),\n                                   reduc_ind, keepdims=True))\n    elif ord == 2:\n      # avoid_zero_div must go inside sqrt to avoid a divide by zero\n      # in the gradient through this operation\n      norm = tf.sqrt(tf.maximum(avoid_zero_div,\n                                reduce_sum(tf.square(eta),\n                                           reduc_ind,\n                                           keepdims=True)))\n    # We must *clip* to within the norm ball, not *normalize* onto the\n    # surface of the ball\n    factor = tf.minimum(1., div(eps, norm))\n    eta = eta * factor\n  return eta",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 12
          },
          "text": "clip_eta"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 12
          },
          "end": {
            "row": 0,
            "column": 27
          },
          "text": "(eta, ord, eps)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 12
              },
              "end": {
                "row": 0,
                "column": 13
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 13
              },
              "end": {
                "row": 0,
                "column": 16
              },
              "text": "eta"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 16
              },
              "end": {
                "row": 0,
                "column": 17
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 18
              },
              "end": {
                "row": 0,
                "column": 21
              },
              "text": "ord"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 21
              },
              "end": {
                "row": 0,
                "column": 22
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 23
              },
              "end": {
                "row": 0,
                "column": 26
              },
              "text": "eps"
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 26
              },
              "end": {
                "row": 0,
                "column": 27
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 27
          },
          "end": {
            "row": 0,
            "column": 28
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 2
          },
          "end": {
            "row": 34,
            "column": 12
          },
          "text": "\"\"\"\n  Helper function to clip the perturbation to epsilon norm ball.\n  :param eta: A tensor with the current perturbation.\n  :param ord: Order of the norm (mimics Numpy).\n              Possible values: np.inf, 1 or 2.\n  :param eps: Epsilon, bound of the perturbation.\n  \"\"\"\n\n  # Clipping perturbation eta to self.ord norm ball\n  if ord not in [np.inf, 1, 2]:\n    raise ValueError('ord must be np.inf, 1, or 2.')\n  reduc_ind = list(xrange(1, len(eta.get_shape())))\n  avoid_zero_div = 1e-12\n  if ord == np.inf:\n    eta = clip_by_value(eta, -eps, eps)\n  else:\n    if ord == 1:\n      raise NotImplementedError(\"The expression below is not the correct way\"\n                                \" to project onto the L1 norm ball.\")\n      norm = tf.maximum(avoid_zero_div,\n                        reduce_sum(tf.abs(eta),\n                                   reduc_ind, keepdims=True))\n    elif ord == 2:\n      # avoid_zero_div must go inside sqrt to avoid a divide by zero\n      # in the gradient through this operation\n      norm = tf.sqrt(tf.maximum(avoid_zero_div,\n                                reduce_sum(tf.square(eta),\n                                           reduc_ind,\n                                           keepdims=True)))\n    # We must *clip* to within the norm ball, not *normalize* onto the\n    # surface of the ball\n    factor = tf.minimum(1., div(eps, norm))\n    eta = eta * factor\n  return eta",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 2
              },
              "end": {
                "row": 7,
                "column": 5
              },
              "text": "\"\"\"\n  Helper function to clip the perturbation to epsilon norm ball.\n  :param eta: A tensor with the current perturbation.\n  :param ord: Order of the norm (mimics Numpy).\n              Possible values: np.inf, 1 or 2.\n  :param eps: Epsilon, bound of the perturbation.\n  \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 2
                  },
                  "end": {
                    "row": 7,
                    "column": 5
                  },
                  "text": "\"\"\"\n  Helper function to clip the perturbation to epsilon norm ball.\n  :param eta: A tensor with the current perturbation.\n  :param ord: Order of the norm (mimics Numpy).\n              Possible values: np.inf, 1 or 2.\n  :param eps: Epsilon, bound of the perturbation.\n  \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 2
                      },
                      "end": {
                        "row": 1,
                        "column": 5
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 5
                      },
                      "end": {
                        "row": 7,
                        "column": 2
                      },
                      "text": "\n  Helper function to clip the perturbation to epsilon norm ball.\n  :param eta: A tensor with the current perturbation.\n  :param ord: Order of the norm (mimics Numpy).\n              Possible values: np.inf, 1 or 2.\n  :param eps: Epsilon, bound of the perturbation.\n  "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 7,
                        "column": 2
                      },
                      "end": {
                        "row": 7,
                        "column": 5
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 9,
                "column": 2
              },
              "end": {
                "row": 9,
                "column": 51
              },
              "text": "# Clipping perturbation eta to self.ord norm ball"
            },
            {
              "type": "if_statement",
              "start": {
                "row": 10,
                "column": 2
              },
              "end": {
                "row": 11,
                "column": 52
              },
              "text": "if ord not in [np.inf, 1, 2]:\n    raise ValueError('ord must be np.inf, 1, or 2.')",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 10,
                    "column": 2
                  },
                  "end": {
                    "row": 10,
                    "column": 4
                  },
                  "text": "if"
                },
                {
                  "type": "comparison_operator",
                  "start": {
                    "row": 10,
                    "column": 5
                  },
                  "end": {
                    "row": 10,
                    "column": 30
                  },
                  "text": "ord not in [np.inf, 1, 2]",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 10,
                        "column": 5
                      },
                      "end": {
                        "row": 10,
                        "column": 8
                      },
                      "text": "ord"
                    },
                    {
                      "type": "not in",
                      "start": {
                        "row": 10,
                        "column": 9
                      },
                      "end": {
                        "row": 10,
                        "column": 12
                      },
                      "text": "not"
                    },
                    {
                      "type": "not in",
                      "start": {
                        "row": 10,
                        "column": 13
                      },
                      "end": {
                        "row": 10,
                        "column": 15
                      },
                      "text": "in"
                    },
                    {
                      "type": "list",
                      "start": {
                        "row": 10,
                        "column": 16
                      },
                      "end": {
                        "row": 10,
                        "column": 30
                      },
                      "text": "[np.inf, 1, 2]",
                      "children": [
                        {
                          "type": "[",
                          "start": {
                            "row": 10,
                            "column": 16
                          },
                          "end": {
                            "row": 10,
                            "column": 17
                          },
                          "text": "["
                        },
                        {
                          "type": "attribute",
                          "start": {
                            "row": 10,
                            "column": 17
                          },
                          "end": {
                            "row": 10,
                            "column": 23
                          },
                          "text": "np.inf",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 10,
                                "column": 17
                              },
                              "end": {
                                "row": 10,
                                "column": 19
                              },
                              "text": "np"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 10,
                                "column": 19
                              },
                              "end": {
                                "row": 10,
                                "column": 20
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 10,
                                "column": 20
                              },
                              "end": {
                                "row": 10,
                                "column": 23
                              },
                              "text": "inf"
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 10,
                            "column": 23
                          },
                          "end": {
                            "row": 10,
                            "column": 24
                          },
                          "text": ","
                        },
                        {
                          "type": "integer",
                          "start": {
                            "row": 10,
                            "column": 25
                          },
                          "end": {
                            "row": 10,
                            "column": 26
                          },
                          "text": "1"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 10,
                            "column": 26
                          },
                          "end": {
                            "row": 10,
                            "column": 27
                          },
                          "text": ","
                        },
                        {
                          "type": "integer",
                          "start": {
                            "row": 10,
                            "column": 28
                          },
                          "end": {
                            "row": 10,
                            "column": 29
                          },
                          "text": "2"
                        },
                        {
                          "type": "]",
                          "start": {
                            "row": 10,
                            "column": 29
                          },
                          "end": {
                            "row": 10,
                            "column": 30
                          },
                          "text": "]"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 10,
                    "column": 30
                  },
                  "end": {
                    "row": 10,
                    "column": 31
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 11,
                    "column": 4
                  },
                  "end": {
                    "row": 11,
                    "column": 52
                  },
                  "text": "raise ValueError('ord must be np.inf, 1, or 2.')",
                  "children": [
                    {
                      "type": "raise_statement",
                      "start": {
                        "row": 11,
                        "column": 4
                      },
                      "end": {
                        "row": 11,
                        "column": 52
                      },
                      "text": "raise ValueError('ord must be np.inf, 1, or 2.')",
                      "children": [
                        {
                          "type": "raise",
                          "start": {
                            "row": 11,
                            "column": 4
                          },
                          "end": {
                            "row": 11,
                            "column": 9
                          },
                          "text": "raise"
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 11,
                            "column": 10
                          },
                          "end": {
                            "row": 11,
                            "column": 52
                          },
                          "text": "ValueError('ord must be np.inf, 1, or 2.')",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 11,
                                "column": 10
                              },
                              "end": {
                                "row": 11,
                                "column": 20
                              },
                              "text": "ValueError"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 11,
                                "column": 20
                              },
                              "end": {
                                "row": 11,
                                "column": 52
                              },
                              "text": "('ord must be np.inf, 1, or 2.')",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 11,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 21
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "string",
                                  "start": {
                                    "row": 11,
                                    "column": 21
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 51
                                  },
                                  "text": "'ord must be np.inf, 1, or 2.'",
                                  "children": [
                                    {
                                      "type": "string_start",
                                      "start": {
                                        "row": 11,
                                        "column": 21
                                      },
                                      "end": {
                                        "row": 11,
                                        "column": 22
                                      },
                                      "text": "'"
                                    },
                                    {
                                      "type": "string_content",
                                      "start": {
                                        "row": 11,
                                        "column": 22
                                      },
                                      "end": {
                                        "row": 11,
                                        "column": 50
                                      },
                                      "text": "ord must be np.inf, 1, or 2."
                                    },
                                    {
                                      "type": "string_end",
                                      "start": {
                                        "row": 11,
                                        "column": 50
                                      },
                                      "end": {
                                        "row": 11,
                                        "column": 51
                                      },
                                      "text": "'"
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 11,
                                    "column": 51
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 52
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 12,
                "column": 2
              },
              "end": {
                "row": 12,
                "column": 51
              },
              "text": "reduc_ind = list(xrange(1, len(eta.get_shape())))",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 12,
                    "column": 2
                  },
                  "end": {
                    "row": 12,
                    "column": 51
                  },
                  "text": "reduc_ind = list(xrange(1, len(eta.get_shape())))",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 12,
                        "column": 2
                      },
                      "end": {
                        "row": 12,
                        "column": 11
                      },
                      "text": "reduc_ind"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 12,
                        "column": 12
                      },
                      "end": {
                        "row": 12,
                        "column": 13
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 12,
                        "column": 14
                      },
                      "end": {
                        "row": 12,
                        "column": 51
                      },
                      "text": "list(xrange(1, len(eta.get_shape())))",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 12,
                            "column": 14
                          },
                          "end": {
                            "row": 12,
                            "column": 18
                          },
                          "text": "list"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 12,
                            "column": 18
                          },
                          "end": {
                            "row": 12,
                            "column": 51
                          },
                          "text": "(xrange(1, len(eta.get_shape())))",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 12,
                                "column": 18
                              },
                              "end": {
                                "row": 12,
                                "column": 19
                              },
                              "text": "("
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 12,
                                "column": 19
                              },
                              "end": {
                                "row": 12,
                                "column": 50
                              },
                              "text": "xrange(1, len(eta.get_shape()))",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 12,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 12,
                                    "column": 25
                                  },
                                  "text": "xrange"
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 12,
                                    "column": 25
                                  },
                                  "end": {
                                    "row": 12,
                                    "column": 50
                                  },
                                  "text": "(1, len(eta.get_shape()))",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 12,
                                        "column": 25
                                      },
                                      "end": {
                                        "row": 12,
                                        "column": 26
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "integer",
                                      "start": {
                                        "row": 12,
                                        "column": 26
                                      },
                                      "end": {
                                        "row": 12,
                                        "column": 27
                                      },
                                      "text": "1"
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 12,
                                        "column": 27
                                      },
                                      "end": {
                                        "row": 12,
                                        "column": 28
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 12,
                                        "column": 29
                                      },
                                      "end": {
                                        "row": 12,
                                        "column": 49
                                      },
                                      "text": "len(eta.get_shape())",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 12,
                                            "column": 29
                                          },
                                          "end": {
                                            "row": 12,
                                            "column": 32
                                          },
                                          "text": "len"
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 12,
                                            "column": 32
                                          },
                                          "end": {
                                            "row": 12,
                                            "column": 49
                                          },
                                          "text": "(eta.get_shape())",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 12,
                                                "column": 32
                                              },
                                              "end": {
                                                "row": 12,
                                                "column": 33
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "call",
                                              "start": {
                                                "row": 12,
                                                "column": 33
                                              },
                                              "end": {
                                                "row": 12,
                                                "column": 48
                                              },
                                              "text": "eta.get_shape()",
                                              "children": [
                                                {
                                                  "type": "attribute",
                                                  "start": {
                                                    "row": 12,
                                                    "column": 33
                                                  },
                                                  "end": {
                                                    "row": 12,
                                                    "column": 46
                                                  },
                                                  "text": "eta.get_shape",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 12,
                                                        "column": 33
                                                      },
                                                      "end": {
                                                        "row": 12,
                                                        "column": 36
                                                      },
                                                      "text": "eta"
                                                    },
                                                    {
                                                      "type": ".",
                                                      "start": {
                                                        "row": 12,
                                                        "column": 36
                                                      },
                                                      "end": {
                                                        "row": 12,
                                                        "column": 37
                                                      },
                                                      "text": "."
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 12,
                                                        "column": 37
                                                      },
                                                      "end": {
                                                        "row": 12,
                                                        "column": 46
                                                      },
                                                      "text": "get_shape"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "argument_list",
                                                  "start": {
                                                    "row": 12,
                                                    "column": 46
                                                  },
                                                  "end": {
                                                    "row": 12,
                                                    "column": 48
                                                  },
                                                  "text": "()",
                                                  "children": [
                                                    {
                                                      "type": "(",
                                                      "start": {
                                                        "row": 12,
                                                        "column": 46
                                                      },
                                                      "end": {
                                                        "row": 12,
                                                        "column": 47
                                                      },
                                                      "text": "("
                                                    },
                                                    {
                                                      "type": ")",
                                                      "start": {
                                                        "row": 12,
                                                        "column": 47
                                                      },
                                                      "end": {
                                                        "row": 12,
                                                        "column": 48
                                                      },
                                                      "text": ")"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 12,
                                                "column": 48
                                              },
                                              "end": {
                                                "row": 12,
                                                "column": 49
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 12,
                                        "column": 49
                                      },
                                      "end": {
                                        "row": 12,
                                        "column": 50
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 12,
                                "column": 50
                              },
                              "end": {
                                "row": 12,
                                "column": 51
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 13,
                "column": 2
              },
              "end": {
                "row": 13,
                "column": 24
              },
              "text": "avoid_zero_div = 1e-12",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 13,
                    "column": 2
                  },
                  "end": {
                    "row": 13,
                    "column": 24
                  },
                  "text": "avoid_zero_div = 1e-12",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 13,
                        "column": 2
                      },
                      "end": {
                        "row": 13,
                        "column": 16
                      },
                      "text": "avoid_zero_div"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 13,
                        "column": 17
                      },
                      "end": {
                        "row": 13,
                        "column": 18
                      },
                      "text": "="
                    },
                    {
                      "type": "float",
                      "start": {
                        "row": 13,
                        "column": 19
                      },
                      "end": {
                        "row": 13,
                        "column": 24
                      },
                      "text": "1e-12"
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 14,
                "column": 2
              },
              "end": {
                "row": 33,
                "column": 22
              },
              "text": "if ord == np.inf:\n    eta = clip_by_value(eta, -eps, eps)\n  else:\n    if ord == 1:\n      raise NotImplementedError(\"The expression below is not the correct way\"\n                                \" to project onto the L1 norm ball.\")\n      norm = tf.maximum(avoid_zero_div,\n                        reduce_sum(tf.abs(eta),\n                                   reduc_ind, keepdims=True))\n    elif ord == 2:\n      # avoid_zero_div must go inside sqrt to avoid a divide by zero\n      # in the gradient through this operation\n      norm = tf.sqrt(tf.maximum(avoid_zero_div,\n                                reduce_sum(tf.square(eta),\n                                           reduc_ind,\n                                           keepdims=True)))\n    # We must *clip* to within the norm ball, not *normalize* onto the\n    # surface of the ball\n    factor = tf.minimum(1., div(eps, norm))\n    eta = eta * factor",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 14,
                    "column": 2
                  },
                  "end": {
                    "row": 14,
                    "column": 4
                  },
                  "text": "if"
                },
                {
                  "type": "comparison_operator",
                  "start": {
                    "row": 14,
                    "column": 5
                  },
                  "end": {
                    "row": 14,
                    "column": 18
                  },
                  "text": "ord == np.inf",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 14,
                        "column": 5
                      },
                      "end": {
                        "row": 14,
                        "column": 8
                      },
                      "text": "ord"
                    },
                    {
                      "type": "==",
                      "start": {
                        "row": 14,
                        "column": 9
                      },
                      "end": {
                        "row": 14,
                        "column": 11
                      },
                      "text": "=="
                    },
                    {
                      "type": "attribute",
                      "start": {
                        "row": 14,
                        "column": 12
                      },
                      "end": {
                        "row": 14,
                        "column": 18
                      },
                      "text": "np.inf",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 14,
                            "column": 12
                          },
                          "end": {
                            "row": 14,
                            "column": 14
                          },
                          "text": "np"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 14,
                            "column": 14
                          },
                          "end": {
                            "row": 14,
                            "column": 15
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 14,
                            "column": 15
                          },
                          "end": {
                            "row": 14,
                            "column": 18
                          },
                          "text": "inf"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 14,
                    "column": 18
                  },
                  "end": {
                    "row": 14,
                    "column": 19
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 15,
                    "column": 4
                  },
                  "end": {
                    "row": 15,
                    "column": 39
                  },
                  "text": "eta = clip_by_value(eta, -eps, eps)",
                  "children": [
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 15,
                        "column": 4
                      },
                      "end": {
                        "row": 15,
                        "column": 39
                      },
                      "text": "eta = clip_by_value(eta, -eps, eps)",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 15,
                            "column": 4
                          },
                          "end": {
                            "row": 15,
                            "column": 39
                          },
                          "text": "eta = clip_by_value(eta, -eps, eps)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 15,
                                "column": 4
                              },
                              "end": {
                                "row": 15,
                                "column": 7
                              },
                              "text": "eta"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 15,
                                "column": 8
                              },
                              "end": {
                                "row": 15,
                                "column": 9
                              },
                              "text": "="
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 15,
                                "column": 10
                              },
                              "end": {
                                "row": 15,
                                "column": 39
                              },
                              "text": "clip_by_value(eta, -eps, eps)",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 15,
                                    "column": 10
                                  },
                                  "end": {
                                    "row": 15,
                                    "column": 23
                                  },
                                  "text": "clip_by_value"
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 15,
                                    "column": 23
                                  },
                                  "end": {
                                    "row": 15,
                                    "column": 39
                                  },
                                  "text": "(eta, -eps, eps)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 15,
                                        "column": 23
                                      },
                                      "end": {
                                        "row": 15,
                                        "column": 24
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 15,
                                        "column": 24
                                      },
                                      "end": {
                                        "row": 15,
                                        "column": 27
                                      },
                                      "text": "eta"
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 15,
                                        "column": 27
                                      },
                                      "end": {
                                        "row": 15,
                                        "column": 28
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "unary_operator",
                                      "start": {
                                        "row": 15,
                                        "column": 29
                                      },
                                      "end": {
                                        "row": 15,
                                        "column": 33
                                      },
                                      "text": "-eps",
                                      "children": [
                                        {
                                          "type": "-",
                                          "start": {
                                            "row": 15,
                                            "column": 29
                                          },
                                          "end": {
                                            "row": 15,
                                            "column": 30
                                          },
                                          "text": "-"
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 15,
                                            "column": 30
                                          },
                                          "end": {
                                            "row": 15,
                                            "column": 33
                                          },
                                          "text": "eps"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 15,
                                        "column": 33
                                      },
                                      "end": {
                                        "row": 15,
                                        "column": 34
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 15,
                                        "column": 35
                                      },
                                      "end": {
                                        "row": 15,
                                        "column": 38
                                      },
                                      "text": "eps"
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 15,
                                        "column": 38
                                      },
                                      "end": {
                                        "row": 15,
                                        "column": 39
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "else_clause",
                  "start": {
                    "row": 16,
                    "column": 2
                  },
                  "end": {
                    "row": 33,
                    "column": 22
                  },
                  "text": "else:\n    if ord == 1:\n      raise NotImplementedError(\"The expression below is not the correct way\"\n                                \" to project onto the L1 norm ball.\")\n      norm = tf.maximum(avoid_zero_div,\n                        reduce_sum(tf.abs(eta),\n                                   reduc_ind, keepdims=True))\n    elif ord == 2:\n      # avoid_zero_div must go inside sqrt to avoid a divide by zero\n      # in the gradient through this operation\n      norm = tf.sqrt(tf.maximum(avoid_zero_div,\n                                reduce_sum(tf.square(eta),\n                                           reduc_ind,\n                                           keepdims=True)))\n    # We must *clip* to within the norm ball, not *normalize* onto the\n    # surface of the ball\n    factor = tf.minimum(1., div(eps, norm))\n    eta = eta * factor",
                  "children": [
                    {
                      "type": "else",
                      "start": {
                        "row": 16,
                        "column": 2
                      },
                      "end": {
                        "row": 16,
                        "column": 6
                      },
                      "text": "else"
                    },
                    {
                      "type": ":",
                      "start": {
                        "row": 16,
                        "column": 6
                      },
                      "end": {
                        "row": 16,
                        "column": 7
                      },
                      "text": ":"
                    },
                    {
                      "type": "block",
                      "start": {
                        "row": 17,
                        "column": 4
                      },
                      "end": {
                        "row": 33,
                        "column": 22
                      },
                      "text": "if ord == 1:\n      raise NotImplementedError(\"The expression below is not the correct way\"\n                                \" to project onto the L1 norm ball.\")\n      norm = tf.maximum(avoid_zero_div,\n                        reduce_sum(tf.abs(eta),\n                                   reduc_ind, keepdims=True))\n    elif ord == 2:\n      # avoid_zero_div must go inside sqrt to avoid a divide by zero\n      # in the gradient through this operation\n      norm = tf.sqrt(tf.maximum(avoid_zero_div,\n                                reduce_sum(tf.square(eta),\n                                           reduc_ind,\n                                           keepdims=True)))\n    # We must *clip* to within the norm ball, not *normalize* onto the\n    # surface of the ball\n    factor = tf.minimum(1., div(eps, norm))\n    eta = eta * factor",
                      "children": [
                        {
                          "type": "if_statement",
                          "start": {
                            "row": 17,
                            "column": 4
                          },
                          "end": {
                            "row": 29,
                            "column": 59
                          },
                          "text": "if ord == 1:\n      raise NotImplementedError(\"The expression below is not the correct way\"\n                                \" to project onto the L1 norm ball.\")\n      norm = tf.maximum(avoid_zero_div,\n                        reduce_sum(tf.abs(eta),\n                                   reduc_ind, keepdims=True))\n    elif ord == 2:\n      # avoid_zero_div must go inside sqrt to avoid a divide by zero\n      # in the gradient through this operation\n      norm = tf.sqrt(tf.maximum(avoid_zero_div,\n                                reduce_sum(tf.square(eta),\n                                           reduc_ind,\n                                           keepdims=True)))",
                          "children": [
                            {
                              "type": "if",
                              "start": {
                                "row": 17,
                                "column": 4
                              },
                              "end": {
                                "row": 17,
                                "column": 6
                              },
                              "text": "if"
                            },
                            {
                              "type": "comparison_operator",
                              "start": {
                                "row": 17,
                                "column": 7
                              },
                              "end": {
                                "row": 17,
                                "column": 15
                              },
                              "text": "ord == 1",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 17,
                                    "column": 7
                                  },
                                  "end": {
                                    "row": 17,
                                    "column": 10
                                  },
                                  "text": "ord"
                                },
                                {
                                  "type": "==",
                                  "start": {
                                    "row": 17,
                                    "column": 11
                                  },
                                  "end": {
                                    "row": 17,
                                    "column": 13
                                  },
                                  "text": "=="
                                },
                                {
                                  "type": "integer",
                                  "start": {
                                    "row": 17,
                                    "column": 14
                                  },
                                  "end": {
                                    "row": 17,
                                    "column": 15
                                  },
                                  "text": "1"
                                }
                              ]
                            },
                            {
                              "type": ":",
                              "start": {
                                "row": 17,
                                "column": 15
                              },
                              "end": {
                                "row": 17,
                                "column": 16
                              },
                              "text": ":"
                            },
                            {
                              "type": "block",
                              "start": {
                                "row": 18,
                                "column": 6
                              },
                              "end": {
                                "row": 22,
                                "column": 61
                              },
                              "text": "raise NotImplementedError(\"The expression below is not the correct way\"\n                                \" to project onto the L1 norm ball.\")\n      norm = tf.maximum(avoid_zero_div,\n                        reduce_sum(tf.abs(eta),\n                                   reduc_ind, keepdims=True))",
                              "children": [
                                {
                                  "type": "raise_statement",
                                  "start": {
                                    "row": 18,
                                    "column": 6
                                  },
                                  "end": {
                                    "row": 19,
                                    "column": 69
                                  },
                                  "text": "raise NotImplementedError(\"The expression below is not the correct way\"\n                                \" to project onto the L1 norm ball.\")",
                                  "children": [
                                    {
                                      "type": "raise",
                                      "start": {
                                        "row": 18,
                                        "column": 6
                                      },
                                      "end": {
                                        "row": 18,
                                        "column": 11
                                      },
                                      "text": "raise"
                                    },
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 18,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 19,
                                        "column": 69
                                      },
                                      "text": "NotImplementedError(\"The expression below is not the correct way\"\n                                \" to project onto the L1 norm ball.\")",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 18,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 18,
                                            "column": 31
                                          },
                                          "text": "NotImplementedError"
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 18,
                                            "column": 31
                                          },
                                          "end": {
                                            "row": 19,
                                            "column": 69
                                          },
                                          "text": "(\"The expression below is not the correct way\"\n                                \" to project onto the L1 norm ball.\")",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 18,
                                                "column": 31
                                              },
                                              "end": {
                                                "row": 18,
                                                "column": 32
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "concatenated_string",
                                              "start": {
                                                "row": 18,
                                                "column": 32
                                              },
                                              "end": {
                                                "row": 19,
                                                "column": 68
                                              },
                                              "text": "\"The expression below is not the correct way\"\n                                \" to project onto the L1 norm ball.\"",
                                              "children": [
                                                {
                                                  "type": "string",
                                                  "start": {
                                                    "row": 18,
                                                    "column": 32
                                                  },
                                                  "end": {
                                                    "row": 18,
                                                    "column": 77
                                                  },
                                                  "text": "\"The expression below is not the correct way\"",
                                                  "children": [
                                                    {
                                                      "type": "string_start",
                                                      "start": {
                                                        "row": 18,
                                                        "column": 32
                                                      },
                                                      "end": {
                                                        "row": 18,
                                                        "column": 33
                                                      },
                                                      "text": "\""
                                                    },
                                                    {
                                                      "type": "string_content",
                                                      "start": {
                                                        "row": 18,
                                                        "column": 33
                                                      },
                                                      "end": {
                                                        "row": 18,
                                                        "column": 76
                                                      },
                                                      "text": "The expression below is not the correct way"
                                                    },
                                                    {
                                                      "type": "string_end",
                                                      "start": {
                                                        "row": 18,
                                                        "column": 76
                                                      },
                                                      "end": {
                                                        "row": 18,
                                                        "column": 77
                                                      },
                                                      "text": "\""
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "string",
                                                  "start": {
                                                    "row": 19,
                                                    "column": 32
                                                  },
                                                  "end": {
                                                    "row": 19,
                                                    "column": 68
                                                  },
                                                  "text": "\" to project onto the L1 norm ball.\"",
                                                  "children": [
                                                    {
                                                      "type": "string_start",
                                                      "start": {
                                                        "row": 19,
                                                        "column": 32
                                                      },
                                                      "end": {
                                                        "row": 19,
                                                        "column": 33
                                                      },
                                                      "text": "\""
                                                    },
                                                    {
                                                      "type": "string_content",
                                                      "start": {
                                                        "row": 19,
                                                        "column": 33
                                                      },
                                                      "end": {
                                                        "row": 19,
                                                        "column": 67
                                                      },
                                                      "text": " to project onto the L1 norm ball."
                                                    },
                                                    {
                                                      "type": "string_end",
                                                      "start": {
                                                        "row": 19,
                                                        "column": 67
                                                      },
                                                      "end": {
                                                        "row": 19,
                                                        "column": 68
                                                      },
                                                      "text": "\""
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 19,
                                                "column": 68
                                              },
                                              "end": {
                                                "row": 19,
                                                "column": 69
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "expression_statement",
                                  "start": {
                                    "row": 20,
                                    "column": 6
                                  },
                                  "end": {
                                    "row": 22,
                                    "column": 61
                                  },
                                  "text": "norm = tf.maximum(avoid_zero_div,\n                        reduce_sum(tf.abs(eta),\n                                   reduc_ind, keepdims=True))",
                                  "children": [
                                    {
                                      "type": "assignment",
                                      "start": {
                                        "row": 20,
                                        "column": 6
                                      },
                                      "end": {
                                        "row": 22,
                                        "column": 61
                                      },
                                      "text": "norm = tf.maximum(avoid_zero_div,\n                        reduce_sum(tf.abs(eta),\n                                   reduc_ind, keepdims=True))",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 20,
                                            "column": 6
                                          },
                                          "end": {
                                            "row": 20,
                                            "column": 10
                                          },
                                          "text": "norm"
                                        },
                                        {
                                          "type": "=",
                                          "start": {
                                            "row": 20,
                                            "column": 11
                                          },
                                          "end": {
                                            "row": 20,
                                            "column": 12
                                          },
                                          "text": "="
                                        },
                                        {
                                          "type": "call",
                                          "start": {
                                            "row": 20,
                                            "column": 13
                                          },
                                          "end": {
                                            "row": 22,
                                            "column": 61
                                          },
                                          "text": "tf.maximum(avoid_zero_div,\n                        reduce_sum(tf.abs(eta),\n                                   reduc_ind, keepdims=True))",
                                          "children": [
                                            {
                                              "type": "attribute",
                                              "start": {
                                                "row": 20,
                                                "column": 13
                                              },
                                              "end": {
                                                "row": 20,
                                                "column": 23
                                              },
                                              "text": "tf.maximum",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 20,
                                                    "column": 13
                                                  },
                                                  "end": {
                                                    "row": 20,
                                                    "column": 15
                                                  },
                                                  "text": "tf"
                                                },
                                                {
                                                  "type": ".",
                                                  "start": {
                                                    "row": 20,
                                                    "column": 15
                                                  },
                                                  "end": {
                                                    "row": 20,
                                                    "column": 16
                                                  },
                                                  "text": "."
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 20,
                                                    "column": 16
                                                  },
                                                  "end": {
                                                    "row": 20,
                                                    "column": 23
                                                  },
                                                  "text": "maximum"
                                                }
                                              ]
                                            },
                                            {
                                              "type": "argument_list",
                                              "start": {
                                                "row": 20,
                                                "column": 23
                                              },
                                              "end": {
                                                "row": 22,
                                                "column": 61
                                              },
                                              "text": "(avoid_zero_div,\n                        reduce_sum(tf.abs(eta),\n                                   reduc_ind, keepdims=True))",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 20,
                                                    "column": 23
                                                  },
                                                  "end": {
                                                    "row": 20,
                                                    "column": 24
                                                  },
                                                  "text": "("
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 20,
                                                    "column": 24
                                                  },
                                                  "end": {
                                                    "row": 20,
                                                    "column": 38
                                                  },
                                                  "text": "avoid_zero_div"
                                                },
                                                {
                                                  "type": ",",
                                                  "start": {
                                                    "row": 20,
                                                    "column": 38
                                                  },
                                                  "end": {
                                                    "row": 20,
                                                    "column": 39
                                                  },
                                                  "text": ","
                                                },
                                                {
                                                  "type": "call",
                                                  "start": {
                                                    "row": 21,
                                                    "column": 24
                                                  },
                                                  "end": {
                                                    "row": 22,
                                                    "column": 60
                                                  },
                                                  "text": "reduce_sum(tf.abs(eta),\n                                   reduc_ind, keepdims=True)",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 21,
                                                        "column": 24
                                                      },
                                                      "end": {
                                                        "row": 21,
                                                        "column": 34
                                                      },
                                                      "text": "reduce_sum"
                                                    },
                                                    {
                                                      "type": "argument_list",
                                                      "start": {
                                                        "row": 21,
                                                        "column": 34
                                                      },
                                                      "end": {
                                                        "row": 22,
                                                        "column": 60
                                                      },
                                                      "text": "(tf.abs(eta),\n                                   reduc_ind, keepdims=True)",
                                                      "children": [
                                                        {
                                                          "type": "(",
                                                          "start": {
                                                            "row": 21,
                                                            "column": 34
                                                          },
                                                          "end": {
                                                            "row": 21,
                                                            "column": 35
                                                          },
                                                          "text": "("
                                                        },
                                                        {
                                                          "type": "call",
                                                          "start": {
                                                            "row": 21,
                                                            "column": 35
                                                          },
                                                          "end": {
                                                            "row": 21,
                                                            "column": 46
                                                          },
                                                          "text": "tf.abs(eta)",
                                                          "children": [
                                                            {
                                                              "type": "attribute",
                                                              "start": {
                                                                "row": 21,
                                                                "column": 35
                                                              },
                                                              "end": {
                                                                "row": 21,
                                                                "column": 41
                                                              },
                                                              "text": "tf.abs",
                                                              "children": [
                                                                {
                                                                  "type": "identifier",
                                                                  "start": {
                                                                    "row": 21,
                                                                    "column": 35
                                                                  },
                                                                  "end": {
                                                                    "row": 21,
                                                                    "column": 37
                                                                  },
                                                                  "text": "tf"
                                                                },
                                                                {
                                                                  "type": ".",
                                                                  "start": {
                                                                    "row": 21,
                                                                    "column": 37
                                                                  },
                                                                  "end": {
                                                                    "row": 21,
                                                                    "column": 38
                                                                  },
                                                                  "text": "."
                                                                },
                                                                {
                                                                  "type": "identifier",
                                                                  "start": {
                                                                    "row": 21,
                                                                    "column": 38
                                                                  },
                                                                  "end": {
                                                                    "row": 21,
                                                                    "column": 41
                                                                  },
                                                                  "text": "abs"
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "argument_list",
                                                              "start": {
                                                                "row": 21,
                                                                "column": 41
                                                              },
                                                              "end": {
                                                                "row": 21,
                                                                "column": 46
                                                              },
                                                              "text": "(eta)",
                                                              "children": [
                                                                {
                                                                  "type": "(",
                                                                  "start": {
                                                                    "row": 21,
                                                                    "column": 41
                                                                  },
                                                                  "end": {
                                                                    "row": 21,
                                                                    "column": 42
                                                                  },
                                                                  "text": "("
                                                                },
                                                                {
                                                                  "type": "identifier",
                                                                  "start": {
                                                                    "row": 21,
                                                                    "column": 42
                                                                  },
                                                                  "end": {
                                                                    "row": 21,
                                                                    "column": 45
                                                                  },
                                                                  "text": "eta"
                                                                },
                                                                {
                                                                  "type": ")",
                                                                  "start": {
                                                                    "row": 21,
                                                                    "column": 45
                                                                  },
                                                                  "end": {
                                                                    "row": 21,
                                                                    "column": 46
                                                                  },
                                                                  "text": ")"
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": ",",
                                                          "start": {
                                                            "row": 21,
                                                            "column": 46
                                                          },
                                                          "end": {
                                                            "row": 21,
                                                            "column": 47
                                                          },
                                                          "text": ","
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 22,
                                                            "column": 35
                                                          },
                                                          "end": {
                                                            "row": 22,
                                                            "column": 44
                                                          },
                                                          "text": "reduc_ind"
                                                        },
                                                        {
                                                          "type": ",",
                                                          "start": {
                                                            "row": 22,
                                                            "column": 44
                                                          },
                                                          "end": {
                                                            "row": 22,
                                                            "column": 45
                                                          },
                                                          "text": ","
                                                        },
                                                        {
                                                          "type": "keyword_argument",
                                                          "start": {
                                                            "row": 22,
                                                            "column": 46
                                                          },
                                                          "end": {
                                                            "row": 22,
                                                            "column": 59
                                                          },
                                                          "text": "keepdims=True",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start": {
                                                                "row": 22,
                                                                "column": 46
                                                              },
                                                              "end": {
                                                                "row": 22,
                                                                "column": 54
                                                              },
                                                              "text": "keepdims"
                                                            },
                                                            {
                                                              "type": "=",
                                                              "start": {
                                                                "row": 22,
                                                                "column": 54
                                                              },
                                                              "end": {
                                                                "row": 22,
                                                                "column": 55
                                                              },
                                                              "text": "="
                                                            },
                                                            {
                                                              "type": "true",
                                                              "start": {
                                                                "row": 22,
                                                                "column": 55
                                                              },
                                                              "end": {
                                                                "row": 22,
                                                                "column": 59
                                                              },
                                                              "text": "True"
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": ")",
                                                          "start": {
                                                            "row": 22,
                                                            "column": 59
                                                          },
                                                          "end": {
                                                            "row": 22,
                                                            "column": 60
                                                          },
                                                          "text": ")"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 22,
                                                    "column": 60
                                                  },
                                                  "end": {
                                                    "row": 22,
                                                    "column": 61
                                                  },
                                                  "text": ")"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "elif_clause",
                              "start": {
                                "row": 23,
                                "column": 4
                              },
                              "end": {
                                "row": 29,
                                "column": 59
                              },
                              "text": "elif ord == 2:\n      # avoid_zero_div must go inside sqrt to avoid a divide by zero\n      # in the gradient through this operation\n      norm = tf.sqrt(tf.maximum(avoid_zero_div,\n                                reduce_sum(tf.square(eta),\n                                           reduc_ind,\n                                           keepdims=True)))",
                              "children": [
                                {
                                  "type": "elif",
                                  "start": {
                                    "row": 23,
                                    "column": 4
                                  },
                                  "end": {
                                    "row": 23,
                                    "column": 8
                                  },
                                  "text": "elif"
                                },
                                {
                                  "type": "comparison_operator",
                                  "start": {
                                    "row": 23,
                                    "column": 9
                                  },
                                  "end": {
                                    "row": 23,
                                    "column": 17
                                  },
                                  "text": "ord == 2",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 23,
                                        "column": 9
                                      },
                                      "end": {
                                        "row": 23,
                                        "column": 12
                                      },
                                      "text": "ord"
                                    },
                                    {
                                      "type": "==",
                                      "start": {
                                        "row": 23,
                                        "column": 13
                                      },
                                      "end": {
                                        "row": 23,
                                        "column": 15
                                      },
                                      "text": "=="
                                    },
                                    {
                                      "type": "integer",
                                      "start": {
                                        "row": 23,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 23,
                                        "column": 17
                                      },
                                      "text": "2"
                                    }
                                  ]
                                },
                                {
                                  "type": ":",
                                  "start": {
                                    "row": 23,
                                    "column": 17
                                  },
                                  "end": {
                                    "row": 23,
                                    "column": 18
                                  },
                                  "text": ":"
                                },
                                {
                                  "type": "comment",
                                  "start": {
                                    "row": 24,
                                    "column": 6
                                  },
                                  "end": {
                                    "row": 24,
                                    "column": 68
                                  },
                                  "text": "# avoid_zero_div must go inside sqrt to avoid a divide by zero"
                                },
                                {
                                  "type": "comment",
                                  "start": {
                                    "row": 25,
                                    "column": 6
                                  },
                                  "end": {
                                    "row": 25,
                                    "column": 46
                                  },
                                  "text": "# in the gradient through this operation"
                                },
                                {
                                  "type": "block",
                                  "start": {
                                    "row": 26,
                                    "column": 6
                                  },
                                  "end": {
                                    "row": 29,
                                    "column": 59
                                  },
                                  "text": "norm = tf.sqrt(tf.maximum(avoid_zero_div,\n                                reduce_sum(tf.square(eta),\n                                           reduc_ind,\n                                           keepdims=True)))",
                                  "children": [
                                    {
                                      "type": "expression_statement",
                                      "start": {
                                        "row": 26,
                                        "column": 6
                                      },
                                      "end": {
                                        "row": 29,
                                        "column": 59
                                      },
                                      "text": "norm = tf.sqrt(tf.maximum(avoid_zero_div,\n                                reduce_sum(tf.square(eta),\n                                           reduc_ind,\n                                           keepdims=True)))",
                                      "children": [
                                        {
                                          "type": "assignment",
                                          "start": {
                                            "row": 26,
                                            "column": 6
                                          },
                                          "end": {
                                            "row": 29,
                                            "column": 59
                                          },
                                          "text": "norm = tf.sqrt(tf.maximum(avoid_zero_div,\n                                reduce_sum(tf.square(eta),\n                                           reduc_ind,\n                                           keepdims=True)))",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 26,
                                                "column": 6
                                              },
                                              "end": {
                                                "row": 26,
                                                "column": 10
                                              },
                                              "text": "norm"
                                            },
                                            {
                                              "type": "=",
                                              "start": {
                                                "row": 26,
                                                "column": 11
                                              },
                                              "end": {
                                                "row": 26,
                                                "column": 12
                                              },
                                              "text": "="
                                            },
                                            {
                                              "type": "call",
                                              "start": {
                                                "row": 26,
                                                "column": 13
                                              },
                                              "end": {
                                                "row": 29,
                                                "column": 59
                                              },
                                              "text": "tf.sqrt(tf.maximum(avoid_zero_div,\n                                reduce_sum(tf.square(eta),\n                                           reduc_ind,\n                                           keepdims=True)))",
                                              "children": [
                                                {
                                                  "type": "attribute",
                                                  "start": {
                                                    "row": 26,
                                                    "column": 13
                                                  },
                                                  "end": {
                                                    "row": 26,
                                                    "column": 20
                                                  },
                                                  "text": "tf.sqrt",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 26,
                                                        "column": 13
                                                      },
                                                      "end": {
                                                        "row": 26,
                                                        "column": 15
                                                      },
                                                      "text": "tf"
                                                    },
                                                    {
                                                      "type": ".",
                                                      "start": {
                                                        "row": 26,
                                                        "column": 15
                                                      },
                                                      "end": {
                                                        "row": 26,
                                                        "column": 16
                                                      },
                                                      "text": "."
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 26,
                                                        "column": 16
                                                      },
                                                      "end": {
                                                        "row": 26,
                                                        "column": 20
                                                      },
                                                      "text": "sqrt"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "argument_list",
                                                  "start": {
                                                    "row": 26,
                                                    "column": 20
                                                  },
                                                  "end": {
                                                    "row": 29,
                                                    "column": 59
                                                  },
                                                  "text": "(tf.maximum(avoid_zero_div,\n                                reduce_sum(tf.square(eta),\n                                           reduc_ind,\n                                           keepdims=True)))",
                                                  "children": [
                                                    {
                                                      "type": "(",
                                                      "start": {
                                                        "row": 26,
                                                        "column": 20
                                                      },
                                                      "end": {
                                                        "row": 26,
                                                        "column": 21
                                                      },
                                                      "text": "("
                                                    },
                                                    {
                                                      "type": "call",
                                                      "start": {
                                                        "row": 26,
                                                        "column": 21
                                                      },
                                                      "end": {
                                                        "row": 29,
                                                        "column": 58
                                                      },
                                                      "text": "tf.maximum(avoid_zero_div,\n                                reduce_sum(tf.square(eta),\n                                           reduc_ind,\n                                           keepdims=True))",
                                                      "children": [
                                                        {
                                                          "type": "attribute",
                                                          "start": {
                                                            "row": 26,
                                                            "column": 21
                                                          },
                                                          "end": {
                                                            "row": 26,
                                                            "column": 31
                                                          },
                                                          "text": "tf.maximum",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start": {
                                                                "row": 26,
                                                                "column": 21
                                                              },
                                                              "end": {
                                                                "row": 26,
                                                                "column": 23
                                                              },
                                                              "text": "tf"
                                                            },
                                                            {
                                                              "type": ".",
                                                              "start": {
                                                                "row": 26,
                                                                "column": 23
                                                              },
                                                              "end": {
                                                                "row": 26,
                                                                "column": 24
                                                              },
                                                              "text": "."
                                                            },
                                                            {
                                                              "type": "identifier",
                                                              "start": {
                                                                "row": 26,
                                                                "column": 24
                                                              },
                                                              "end": {
                                                                "row": 26,
                                                                "column": 31
                                                              },
                                                              "text": "maximum"
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "argument_list",
                                                          "start": {
                                                            "row": 26,
                                                            "column": 31
                                                          },
                                                          "end": {
                                                            "row": 29,
                                                            "column": 58
                                                          },
                                                          "text": "(avoid_zero_div,\n                                reduce_sum(tf.square(eta),\n                                           reduc_ind,\n                                           keepdims=True))",
                                                          "children": [
                                                            {
                                                              "type": "(",
                                                              "start": {
                                                                "row": 26,
                                                                "column": 31
                                                              },
                                                              "end": {
                                                                "row": 26,
                                                                "column": 32
                                                              },
                                                              "text": "("
                                                            },
                                                            {
                                                              "type": "identifier",
                                                              "start": {
                                                                "row": 26,
                                                                "column": 32
                                                              },
                                                              "end": {
                                                                "row": 26,
                                                                "column": 46
                                                              },
                                                              "text": "avoid_zero_div"
                                                            },
                                                            {
                                                              "type": ",",
                                                              "start": {
                                                                "row": 26,
                                                                "column": 46
                                                              },
                                                              "end": {
                                                                "row": 26,
                                                                "column": 47
                                                              },
                                                              "text": ","
                                                            },
                                                            {
                                                              "type": "call",
                                                              "start": {
                                                                "row": 27,
                                                                "column": 32
                                                              },
                                                              "end": {
                                                                "row": 29,
                                                                "column": 57
                                                              },
                                                              "text": "reduce_sum(tf.square(eta),\n                                           reduc_ind,\n                                           keepdims=True)",
                                                              "children": [
                                                                {
                                                                  "type": "identifier",
                                                                  "start": {
                                                                    "row": 27,
                                                                    "column": 32
                                                                  },
                                                                  "end": {
                                                                    "row": 27,
                                                                    "column": 42
                                                                  },
                                                                  "text": "reduce_sum"
                                                                },
                                                                {
                                                                  "type": "argument_list",
                                                                  "start": {
                                                                    "row": 27,
                                                                    "column": 42
                                                                  },
                                                                  "end": {
                                                                    "row": 29,
                                                                    "column": 57
                                                                  },
                                                                  "text": "(tf.square(eta),\n                                           reduc_ind,\n                                           keepdims=True)",
                                                                  "children": [
                                                                    {
                                                                      "type": "(",
                                                                      "start": {
                                                                        "row": 27,
                                                                        "column": 42
                                                                      },
                                                                      "end": {
                                                                        "row": 27,
                                                                        "column": 43
                                                                      },
                                                                      "text": "("
                                                                    },
                                                                    {
                                                                      "type": "call",
                                                                      "start": {
                                                                        "row": 27,
                                                                        "column": 43
                                                                      },
                                                                      "end": {
                                                                        "row": 27,
                                                                        "column": 57
                                                                      },
                                                                      "text": "tf.square(eta)",
                                                                      "children": [
                                                                        {
                                                                          "type": "attribute",
                                                                          "start": {
                                                                            "row": 27,
                                                                            "column": 43
                                                                          },
                                                                          "end": {
                                                                            "row": 27,
                                                                            "column": 52
                                                                          },
                                                                          "text": "tf.square",
                                                                          "children": [
                                                                            {
                                                                              "type": "identifier",
                                                                              "start": {
                                                                                "row": 27,
                                                                                "column": 43
                                                                              },
                                                                              "end": {
                                                                                "row": 27,
                                                                                "column": 45
                                                                              },
                                                                              "text": "tf"
                                                                            },
                                                                            {
                                                                              "type": ".",
                                                                              "start": {
                                                                                "row": 27,
                                                                                "column": 45
                                                                              },
                                                                              "end": {
                                                                                "row": 27,
                                                                                "column": 46
                                                                              },
                                                                              "text": "."
                                                                            },
                                                                            {
                                                                              "type": "identifier",
                                                                              "start": {
                                                                                "row": 27,
                                                                                "column": 46
                                                                              },
                                                                              "end": {
                                                                                "row": 27,
                                                                                "column": 52
                                                                              },
                                                                              "text": "square"
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "argument_list",
                                                                          "start": {
                                                                            "row": 27,
                                                                            "column": 52
                                                                          },
                                                                          "end": {
                                                                            "row": 27,
                                                                            "column": 57
                                                                          },
                                                                          "text": "(eta)",
                                                                          "children": [
                                                                            {
                                                                              "type": "(",
                                                                              "start": {
                                                                                "row": 27,
                                                                                "column": 52
                                                                              },
                                                                              "end": {
                                                                                "row": 27,
                                                                                "column": 53
                                                                              },
                                                                              "text": "("
                                                                            },
                                                                            {
                                                                              "type": "identifier",
                                                                              "start": {
                                                                                "row": 27,
                                                                                "column": 53
                                                                              },
                                                                              "end": {
                                                                                "row": 27,
                                                                                "column": 56
                                                                              },
                                                                              "text": "eta"
                                                                            },
                                                                            {
                                                                              "type": ")",
                                                                              "start": {
                                                                                "row": 27,
                                                                                "column": 56
                                                                              },
                                                                              "end": {
                                                                                "row": 27,
                                                                                "column": 57
                                                                              },
                                                                              "text": ")"
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": ",",
                                                                      "start": {
                                                                        "row": 27,
                                                                        "column": 57
                                                                      },
                                                                      "end": {
                                                                        "row": 27,
                                                                        "column": 58
                                                                      },
                                                                      "text": ","
                                                                    },
                                                                    {
                                                                      "type": "identifier",
                                                                      "start": {
                                                                        "row": 28,
                                                                        "column": 43
                                                                      },
                                                                      "end": {
                                                                        "row": 28,
                                                                        "column": 52
                                                                      },
                                                                      "text": "reduc_ind"
                                                                    },
                                                                    {
                                                                      "type": ",",
                                                                      "start": {
                                                                        "row": 28,
                                                                        "column": 52
                                                                      },
                                                                      "end": {
                                                                        "row": 28,
                                                                        "column": 53
                                                                      },
                                                                      "text": ","
                                                                    },
                                                                    {
                                                                      "type": "keyword_argument",
                                                                      "start": {
                                                                        "row": 29,
                                                                        "column": 43
                                                                      },
                                                                      "end": {
                                                                        "row": 29,
                                                                        "column": 56
                                                                      },
                                                                      "text": "keepdims=True",
                                                                      "children": [
                                                                        {
                                                                          "type": "identifier",
                                                                          "start": {
                                                                            "row": 29,
                                                                            "column": 43
                                                                          },
                                                                          "end": {
                                                                            "row": 29,
                                                                            "column": 51
                                                                          },
                                                                          "text": "keepdims"
                                                                        },
                                                                        {
                                                                          "type": "=",
                                                                          "start": {
                                                                            "row": 29,
                                                                            "column": 51
                                                                          },
                                                                          "end": {
                                                                            "row": 29,
                                                                            "column": 52
                                                                          },
                                                                          "text": "="
                                                                        },
                                                                        {
                                                                          "type": "true",
                                                                          "start": {
                                                                            "row": 29,
                                                                            "column": 52
                                                                          },
                                                                          "end": {
                                                                            "row": 29,
                                                                            "column": 56
                                                                          },
                                                                          "text": "True"
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": ")",
                                                                      "start": {
                                                                        "row": 29,
                                                                        "column": 56
                                                                      },
                                                                      "end": {
                                                                        "row": 29,
                                                                        "column": 57
                                                                      },
                                                                      "text": ")"
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": ")",
                                                              "start": {
                                                                "row": 29,
                                                                "column": 57
                                                              },
                                                              "end": {
                                                                "row": 29,
                                                                "column": 58
                                                              },
                                                              "text": ")"
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ")",
                                                      "start": {
                                                        "row": 29,
                                                        "column": 58
                                                      },
                                                      "end": {
                                                        "row": 29,
                                                        "column": 59
                                                      },
                                                      "text": ")"
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "comment",
                          "start": {
                            "row": 30,
                            "column": 4
                          },
                          "end": {
                            "row": 30,
                            "column": 70
                          },
                          "text": "# We must *clip* to within the norm ball, not *normalize* onto the"
                        },
                        {
                          "type": "comment",
                          "start": {
                            "row": 31,
                            "column": 4
                          },
                          "end": {
                            "row": 31,
                            "column": 25
                          },
                          "text": "# surface of the ball"
                        },
                        {
                          "type": "expression_statement",
                          "start": {
                            "row": 32,
                            "column": 4
                          },
                          "end": {
                            "row": 32,
                            "column": 43
                          },
                          "text": "factor = tf.minimum(1., div(eps, norm))",
                          "children": [
                            {
                              "type": "assignment",
                              "start": {
                                "row": 32,
                                "column": 4
                              },
                              "end": {
                                "row": 32,
                                "column": 43
                              },
                              "text": "factor = tf.minimum(1., div(eps, norm))",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 32,
                                    "column": 4
                                  },
                                  "end": {
                                    "row": 32,
                                    "column": 10
                                  },
                                  "text": "factor"
                                },
                                {
                                  "type": "=",
                                  "start": {
                                    "row": 32,
                                    "column": 11
                                  },
                                  "end": {
                                    "row": 32,
                                    "column": 12
                                  },
                                  "text": "="
                                },
                                {
                                  "type": "call",
                                  "start": {
                                    "row": 32,
                                    "column": 13
                                  },
                                  "end": {
                                    "row": 32,
                                    "column": 43
                                  },
                                  "text": "tf.minimum(1., div(eps, norm))",
                                  "children": [
                                    {
                                      "type": "attribute",
                                      "start": {
                                        "row": 32,
                                        "column": 13
                                      },
                                      "end": {
                                        "row": 32,
                                        "column": 23
                                      },
                                      "text": "tf.minimum",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 32,
                                            "column": 13
                                          },
                                          "end": {
                                            "row": 32,
                                            "column": 15
                                          },
                                          "text": "tf"
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 32,
                                            "column": 15
                                          },
                                          "end": {
                                            "row": 32,
                                            "column": 16
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 32,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 32,
                                            "column": 23
                                          },
                                          "text": "minimum"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "argument_list",
                                      "start": {
                                        "row": 32,
                                        "column": 23
                                      },
                                      "end": {
                                        "row": 32,
                                        "column": 43
                                      },
                                      "text": "(1., div(eps, norm))",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 32,
                                            "column": 23
                                          },
                                          "end": {
                                            "row": 32,
                                            "column": 24
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "float",
                                          "start": {
                                            "row": 32,
                                            "column": 24
                                          },
                                          "end": {
                                            "row": 32,
                                            "column": 26
                                          },
                                          "text": "1."
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 32,
                                            "column": 26
                                          },
                                          "end": {
                                            "row": 32,
                                            "column": 27
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "call",
                                          "start": {
                                            "row": 32,
                                            "column": 28
                                          },
                                          "end": {
                                            "row": 32,
                                            "column": 42
                                          },
                                          "text": "div(eps, norm)",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 32,
                                                "column": 28
                                              },
                                              "end": {
                                                "row": 32,
                                                "column": 31
                                              },
                                              "text": "div"
                                            },
                                            {
                                              "type": "argument_list",
                                              "start": {
                                                "row": 32,
                                                "column": 31
                                              },
                                              "end": {
                                                "row": 32,
                                                "column": 42
                                              },
                                              "text": "(eps, norm)",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 32,
                                                    "column": 31
                                                  },
                                                  "end": {
                                                    "row": 32,
                                                    "column": 32
                                                  },
                                                  "text": "("
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 32,
                                                    "column": 32
                                                  },
                                                  "end": {
                                                    "row": 32,
                                                    "column": 35
                                                  },
                                                  "text": "eps"
                                                },
                                                {
                                                  "type": ",",
                                                  "start": {
                                                    "row": 32,
                                                    "column": 35
                                                  },
                                                  "end": {
                                                    "row": 32,
                                                    "column": 36
                                                  },
                                                  "text": ","
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 32,
                                                    "column": 37
                                                  },
                                                  "end": {
                                                    "row": 32,
                                                    "column": 41
                                                  },
                                                  "text": "norm"
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 32,
                                                    "column": 41
                                                  },
                                                  "end": {
                                                    "row": 32,
                                                    "column": 42
                                                  },
                                                  "text": ")"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 32,
                                            "column": 42
                                          },
                                          "end": {
                                            "row": 32,
                                            "column": 43
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "expression_statement",
                          "start": {
                            "row": 33,
                            "column": 4
                          },
                          "end": {
                            "row": 33,
                            "column": 22
                          },
                          "text": "eta = eta * factor",
                          "children": [
                            {
                              "type": "assignment",
                              "start": {
                                "row": 33,
                                "column": 4
                              },
                              "end": {
                                "row": 33,
                                "column": 22
                              },
                              "text": "eta = eta * factor",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 33,
                                    "column": 4
                                  },
                                  "end": {
                                    "row": 33,
                                    "column": 7
                                  },
                                  "text": "eta"
                                },
                                {
                                  "type": "=",
                                  "start": {
                                    "row": 33,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 33,
                                    "column": 9
                                  },
                                  "text": "="
                                },
                                {
                                  "type": "binary_operator",
                                  "start": {
                                    "row": 33,
                                    "column": 10
                                  },
                                  "end": {
                                    "row": 33,
                                    "column": 22
                                  },
                                  "text": "eta * factor",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 33,
                                        "column": 10
                                      },
                                      "end": {
                                        "row": 33,
                                        "column": 13
                                      },
                                      "text": "eta"
                                    },
                                    {
                                      "type": "*",
                                      "start": {
                                        "row": 33,
                                        "column": 14
                                      },
                                      "end": {
                                        "row": 33,
                                        "column": 15
                                      },
                                      "text": "*"
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 33,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 33,
                                        "column": 22
                                      },
                                      "text": "factor"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 34,
                "column": 2
              },
              "end": {
                "row": 34,
                "column": 12
              },
              "text": "return eta",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 34,
                    "column": 2
                  },
                  "end": {
                    "row": 34,
                    "column": 8
                  },
                  "text": "return"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 34,
                    "column": 9
                  },
                  "end": {
                    "row": 34,
                    "column": 12
                  },
                  "text": "eta"
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}