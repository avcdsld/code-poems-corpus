{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 53,
    "column": 16
  },
  "text": "def algebra_inverse_solve(left, right, var, solve_ops):\n  \"\"\"Solves for the value of the given var in an expression.\n\n  Args:\n    left: The root of the ExprNode tree on the left side of the equals sign.\n    right: The root of the ExprNode tree on the right side of the equals sign.\n    var: A char. The variable to solve for.\n    solve_ops: A dictionary with the following properties.\n        * For each operator in the expression, there is a rule that determines\n          how to cancel out a value either to the left or the right of that\n          operator.\n        * For each rule, there is an entry in the dictionary. The key is two\n          chars- the op char, and either 'l' or 'r' meaning rule for canceling\n          out the left or right sides. For example, '+l', '+r', '-l', '-r'.\n        * The value of each entry is a function with the following signature:\n          (left, right, to_tree) -> (new_from_tree, new_to_tree)\n          left- Expression on left side of the op.\n          right- Expression on the right side of the op.\n          to_tree- The tree on the other side of the equal sign. The canceled\n              out expression will be moved here.\n          new_from_tree- The resulting from_tree after the algebraic\n              manipulation.\n          new_to_tree- The resulting to_tree after the algebraic manipulation.\n\n  Returns:\n    The root of an ExprNode tree which holds the value of `var` after solving.\n\n  Raises:\n    ValueError: If `var` does not appear exactly once in the equation (which\n        includes the left and right sides).\n  \"\"\"\n  is_in_left = is_in_expr(left, var)\n  is_in_right = is_in_expr(right, var)\n  if is_in_left == is_in_right:\n    if is_in_left:\n      raise ValueError(\"Solve-variable '%s' is on both sides of the equation. \"\n                       \"Only equations where the solve variable-appears once \"\n                       \"are supported by this solver. Left: '%s', right: '%s'\" %\n                       (var, str(left), str(right)))\n    else:\n      raise ValueError(\"Solve-variable '%s' is not present in the equation. It \"\n                       \"must appear once. Left: '%s', right: '%s'\" %\n                       (var, str(left), str(right)))\n\n  from_tree = left if is_in_left else right\n  to_tree = left if not is_in_left else right\n  while from_tree != var:\n    is_in_left = is_in_expr(from_tree.left, var)\n    is_in_right = is_in_expr(from_tree.right, var)\n    from_tree, to_tree = (solve_ops[str(from_tree.op)\n                                    + (\"l\" if is_in_left else \"r\")](\n                                        from_tree.left, from_tree.right,\n                                        to_tree))\n  return to_tree",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 53,
        "column": 16
      },
      "text": "def algebra_inverse_solve(left, right, var, solve_ops):\n  \"\"\"Solves for the value of the given var in an expression.\n\n  Args:\n    left: The root of the ExprNode tree on the left side of the equals sign.\n    right: The root of the ExprNode tree on the right side of the equals sign.\n    var: A char. The variable to solve for.\n    solve_ops: A dictionary with the following properties.\n        * For each operator in the expression, there is a rule that determines\n          how to cancel out a value either to the left or the right of that\n          operator.\n        * For each rule, there is an entry in the dictionary. The key is two\n          chars- the op char, and either 'l' or 'r' meaning rule for canceling\n          out the left or right sides. For example, '+l', '+r', '-l', '-r'.\n        * The value of each entry is a function with the following signature:\n          (left, right, to_tree) -> (new_from_tree, new_to_tree)\n          left- Expression on left side of the op.\n          right- Expression on the right side of the op.\n          to_tree- The tree on the other side of the equal sign. The canceled\n              out expression will be moved here.\n          new_from_tree- The resulting from_tree after the algebraic\n              manipulation.\n          new_to_tree- The resulting to_tree after the algebraic manipulation.\n\n  Returns:\n    The root of an ExprNode tree which holds the value of `var` after solving.\n\n  Raises:\n    ValueError: If `var` does not appear exactly once in the equation (which\n        includes the left and right sides).\n  \"\"\"\n  is_in_left = is_in_expr(left, var)\n  is_in_right = is_in_expr(right, var)\n  if is_in_left == is_in_right:\n    if is_in_left:\n      raise ValueError(\"Solve-variable '%s' is on both sides of the equation. \"\n                       \"Only equations where the solve variable-appears once \"\n                       \"are supported by this solver. Left: '%s', right: '%s'\" %\n                       (var, str(left), str(right)))\n    else:\n      raise ValueError(\"Solve-variable '%s' is not present in the equation. It \"\n                       \"must appear once. Left: '%s', right: '%s'\" %\n                       (var, str(left), str(right)))\n\n  from_tree = left if is_in_left else right\n  to_tree = left if not is_in_left else right\n  while from_tree != var:\n    is_in_left = is_in_expr(from_tree.left, var)\n    is_in_right = is_in_expr(from_tree.right, var)\n    from_tree, to_tree = (solve_ops[str(from_tree.op)\n                                    + (\"l\" if is_in_left else \"r\")](\n                                        from_tree.left, from_tree.right,\n                                        to_tree))\n  return to_tree",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 25
          },
          "text": "algebra_inverse_solve"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 25
          },
          "end": {
            "row": 0,
            "column": 54
          },
          "text": "(left, right, var, solve_ops)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 25
              },
              "end": {
                "row": 0,
                "column": 26
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 26
              },
              "end": {
                "row": 0,
                "column": 30
              },
              "text": "left"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 30
              },
              "end": {
                "row": 0,
                "column": 31
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 32
              },
              "end": {
                "row": 0,
                "column": 37
              },
              "text": "right"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 37
              },
              "end": {
                "row": 0,
                "column": 38
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 39
              },
              "end": {
                "row": 0,
                "column": 42
              },
              "text": "var"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 42
              },
              "end": {
                "row": 0,
                "column": 43
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 44
              },
              "end": {
                "row": 0,
                "column": 53
              },
              "text": "solve_ops"
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 53
              },
              "end": {
                "row": 0,
                "column": 54
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 54
          },
          "end": {
            "row": 0,
            "column": 55
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 2
          },
          "end": {
            "row": 53,
            "column": 16
          },
          "text": "\"\"\"Solves for the value of the given var in an expression.\n\n  Args:\n    left: The root of the ExprNode tree on the left side of the equals sign.\n    right: The root of the ExprNode tree on the right side of the equals sign.\n    var: A char. The variable to solve for.\n    solve_ops: A dictionary with the following properties.\n        * For each operator in the expression, there is a rule that determines\n          how to cancel out a value either to the left or the right of that\n          operator.\n        * For each rule, there is an entry in the dictionary. The key is two\n          chars- the op char, and either 'l' or 'r' meaning rule for canceling\n          out the left or right sides. For example, '+l', '+r', '-l', '-r'.\n        * The value of each entry is a function with the following signature:\n          (left, right, to_tree) -> (new_from_tree, new_to_tree)\n          left- Expression on left side of the op.\n          right- Expression on the right side of the op.\n          to_tree- The tree on the other side of the equal sign. The canceled\n              out expression will be moved here.\n          new_from_tree- The resulting from_tree after the algebraic\n              manipulation.\n          new_to_tree- The resulting to_tree after the algebraic manipulation.\n\n  Returns:\n    The root of an ExprNode tree which holds the value of `var` after solving.\n\n  Raises:\n    ValueError: If `var` does not appear exactly once in the equation (which\n        includes the left and right sides).\n  \"\"\"\n  is_in_left = is_in_expr(left, var)\n  is_in_right = is_in_expr(right, var)\n  if is_in_left == is_in_right:\n    if is_in_left:\n      raise ValueError(\"Solve-variable '%s' is on both sides of the equation. \"\n                       \"Only equations where the solve variable-appears once \"\n                       \"are supported by this solver. Left: '%s', right: '%s'\" %\n                       (var, str(left), str(right)))\n    else:\n      raise ValueError(\"Solve-variable '%s' is not present in the equation. It \"\n                       \"must appear once. Left: '%s', right: '%s'\" %\n                       (var, str(left), str(right)))\n\n  from_tree = left if is_in_left else right\n  to_tree = left if not is_in_left else right\n  while from_tree != var:\n    is_in_left = is_in_expr(from_tree.left, var)\n    is_in_right = is_in_expr(from_tree.right, var)\n    from_tree, to_tree = (solve_ops[str(from_tree.op)\n                                    + (\"l\" if is_in_left else \"r\")](\n                                        from_tree.left, from_tree.right,\n                                        to_tree))\n  return to_tree",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 2
              },
              "end": {
                "row": 30,
                "column": 5
              },
              "text": "\"\"\"Solves for the value of the given var in an expression.\n\n  Args:\n    left: The root of the ExprNode tree on the left side of the equals sign.\n    right: The root of the ExprNode tree on the right side of the equals sign.\n    var: A char. The variable to solve for.\n    solve_ops: A dictionary with the following properties.\n        * For each operator in the expression, there is a rule that determines\n          how to cancel out a value either to the left or the right of that\n          operator.\n        * For each rule, there is an entry in the dictionary. The key is two\n          chars- the op char, and either 'l' or 'r' meaning rule for canceling\n          out the left or right sides. For example, '+l', '+r', '-l', '-r'.\n        * The value of each entry is a function with the following signature:\n          (left, right, to_tree) -> (new_from_tree, new_to_tree)\n          left- Expression on left side of the op.\n          right- Expression on the right side of the op.\n          to_tree- The tree on the other side of the equal sign. The canceled\n              out expression will be moved here.\n          new_from_tree- The resulting from_tree after the algebraic\n              manipulation.\n          new_to_tree- The resulting to_tree after the algebraic manipulation.\n\n  Returns:\n    The root of an ExprNode tree which holds the value of `var` after solving.\n\n  Raises:\n    ValueError: If `var` does not appear exactly once in the equation (which\n        includes the left and right sides).\n  \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 2
                  },
                  "end": {
                    "row": 30,
                    "column": 5
                  },
                  "text": "\"\"\"Solves for the value of the given var in an expression.\n\n  Args:\n    left: The root of the ExprNode tree on the left side of the equals sign.\n    right: The root of the ExprNode tree on the right side of the equals sign.\n    var: A char. The variable to solve for.\n    solve_ops: A dictionary with the following properties.\n        * For each operator in the expression, there is a rule that determines\n          how to cancel out a value either to the left or the right of that\n          operator.\n        * For each rule, there is an entry in the dictionary. The key is two\n          chars- the op char, and either 'l' or 'r' meaning rule for canceling\n          out the left or right sides. For example, '+l', '+r', '-l', '-r'.\n        * The value of each entry is a function with the following signature:\n          (left, right, to_tree) -> (new_from_tree, new_to_tree)\n          left- Expression on left side of the op.\n          right- Expression on the right side of the op.\n          to_tree- The tree on the other side of the equal sign. The canceled\n              out expression will be moved here.\n          new_from_tree- The resulting from_tree after the algebraic\n              manipulation.\n          new_to_tree- The resulting to_tree after the algebraic manipulation.\n\n  Returns:\n    The root of an ExprNode tree which holds the value of `var` after solving.\n\n  Raises:\n    ValueError: If `var` does not appear exactly once in the equation (which\n        includes the left and right sides).\n  \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 2
                      },
                      "end": {
                        "row": 1,
                        "column": 5
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 5
                      },
                      "end": {
                        "row": 30,
                        "column": 2
                      },
                      "text": "Solves for the value of the given var in an expression.\n\n  Args:\n    left: The root of the ExprNode tree on the left side of the equals sign.\n    right: The root of the ExprNode tree on the right side of the equals sign.\n    var: A char. The variable to solve for.\n    solve_ops: A dictionary with the following properties.\n        * For each operator in the expression, there is a rule that determines\n          how to cancel out a value either to the left or the right of that\n          operator.\n        * For each rule, there is an entry in the dictionary. The key is two\n          chars- the op char, and either 'l' or 'r' meaning rule for canceling\n          out the left or right sides. For example, '+l', '+r', '-l', '-r'.\n        * The value of each entry is a function with the following signature:\n          (left, right, to_tree) -> (new_from_tree, new_to_tree)\n          left- Expression on left side of the op.\n          right- Expression on the right side of the op.\n          to_tree- The tree on the other side of the equal sign. The canceled\n              out expression will be moved here.\n          new_from_tree- The resulting from_tree after the algebraic\n              manipulation.\n          new_to_tree- The resulting to_tree after the algebraic manipulation.\n\n  Returns:\n    The root of an ExprNode tree which holds the value of `var` after solving.\n\n  Raises:\n    ValueError: If `var` does not appear exactly once in the equation (which\n        includes the left and right sides).\n  "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 30,
                        "column": 2
                      },
                      "end": {
                        "row": 30,
                        "column": 5
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 31,
                "column": 2
              },
              "end": {
                "row": 31,
                "column": 36
              },
              "text": "is_in_left = is_in_expr(left, var)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 31,
                    "column": 2
                  },
                  "end": {
                    "row": 31,
                    "column": 36
                  },
                  "text": "is_in_left = is_in_expr(left, var)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 31,
                        "column": 2
                      },
                      "end": {
                        "row": 31,
                        "column": 12
                      },
                      "text": "is_in_left"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 31,
                        "column": 13
                      },
                      "end": {
                        "row": 31,
                        "column": 14
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 31,
                        "column": 15
                      },
                      "end": {
                        "row": 31,
                        "column": 36
                      },
                      "text": "is_in_expr(left, var)",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 31,
                            "column": 15
                          },
                          "end": {
                            "row": 31,
                            "column": 25
                          },
                          "text": "is_in_expr"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 31,
                            "column": 25
                          },
                          "end": {
                            "row": 31,
                            "column": 36
                          },
                          "text": "(left, var)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 31,
                                "column": 25
                              },
                              "end": {
                                "row": 31,
                                "column": 26
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 31,
                                "column": 26
                              },
                              "end": {
                                "row": 31,
                                "column": 30
                              },
                              "text": "left"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 31,
                                "column": 30
                              },
                              "end": {
                                "row": 31,
                                "column": 31
                              },
                              "text": ","
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 31,
                                "column": 32
                              },
                              "end": {
                                "row": 31,
                                "column": 35
                              },
                              "text": "var"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 31,
                                "column": 35
                              },
                              "end": {
                                "row": 31,
                                "column": 36
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 32,
                "column": 2
              },
              "end": {
                "row": 32,
                "column": 38
              },
              "text": "is_in_right = is_in_expr(right, var)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 32,
                    "column": 2
                  },
                  "end": {
                    "row": 32,
                    "column": 38
                  },
                  "text": "is_in_right = is_in_expr(right, var)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 32,
                        "column": 2
                      },
                      "end": {
                        "row": 32,
                        "column": 13
                      },
                      "text": "is_in_right"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 32,
                        "column": 14
                      },
                      "end": {
                        "row": 32,
                        "column": 15
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 32,
                        "column": 16
                      },
                      "end": {
                        "row": 32,
                        "column": 38
                      },
                      "text": "is_in_expr(right, var)",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 32,
                            "column": 16
                          },
                          "end": {
                            "row": 32,
                            "column": 26
                          },
                          "text": "is_in_expr"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 32,
                            "column": 26
                          },
                          "end": {
                            "row": 32,
                            "column": 38
                          },
                          "text": "(right, var)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 32,
                                "column": 26
                              },
                              "end": {
                                "row": 32,
                                "column": 27
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 32,
                                "column": 27
                              },
                              "end": {
                                "row": 32,
                                "column": 32
                              },
                              "text": "right"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 32,
                                "column": 32
                              },
                              "end": {
                                "row": 32,
                                "column": 33
                              },
                              "text": ","
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 32,
                                "column": 34
                              },
                              "end": {
                                "row": 32,
                                "column": 37
                              },
                              "text": "var"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 32,
                                "column": 37
                              },
                              "end": {
                                "row": 32,
                                "column": 38
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 33,
                "column": 2
              },
              "end": {
                "row": 42,
                "column": 52
              },
              "text": "if is_in_left == is_in_right:\n    if is_in_left:\n      raise ValueError(\"Solve-variable '%s' is on both sides of the equation. \"\n                       \"Only equations where the solve variable-appears once \"\n                       \"are supported by this solver. Left: '%s', right: '%s'\" %\n                       (var, str(left), str(right)))\n    else:\n      raise ValueError(\"Solve-variable '%s' is not present in the equation. It \"\n                       \"must appear once. Left: '%s', right: '%s'\" %\n                       (var, str(left), str(right)))",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 33,
                    "column": 2
                  },
                  "end": {
                    "row": 33,
                    "column": 4
                  },
                  "text": "if"
                },
                {
                  "type": "comparison_operator",
                  "start": {
                    "row": 33,
                    "column": 5
                  },
                  "end": {
                    "row": 33,
                    "column": 30
                  },
                  "text": "is_in_left == is_in_right",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 33,
                        "column": 5
                      },
                      "end": {
                        "row": 33,
                        "column": 15
                      },
                      "text": "is_in_left"
                    },
                    {
                      "type": "==",
                      "start": {
                        "row": 33,
                        "column": 16
                      },
                      "end": {
                        "row": 33,
                        "column": 18
                      },
                      "text": "=="
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 33,
                        "column": 19
                      },
                      "end": {
                        "row": 33,
                        "column": 30
                      },
                      "text": "is_in_right"
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 33,
                    "column": 30
                  },
                  "end": {
                    "row": 33,
                    "column": 31
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 34,
                    "column": 4
                  },
                  "end": {
                    "row": 42,
                    "column": 52
                  },
                  "text": "if is_in_left:\n      raise ValueError(\"Solve-variable '%s' is on both sides of the equation. \"\n                       \"Only equations where the solve variable-appears once \"\n                       \"are supported by this solver. Left: '%s', right: '%s'\" %\n                       (var, str(left), str(right)))\n    else:\n      raise ValueError(\"Solve-variable '%s' is not present in the equation. It \"\n                       \"must appear once. Left: '%s', right: '%s'\" %\n                       (var, str(left), str(right)))",
                  "children": [
                    {
                      "type": "if_statement",
                      "start": {
                        "row": 34,
                        "column": 4
                      },
                      "end": {
                        "row": 42,
                        "column": 52
                      },
                      "text": "if is_in_left:\n      raise ValueError(\"Solve-variable '%s' is on both sides of the equation. \"\n                       \"Only equations where the solve variable-appears once \"\n                       \"are supported by this solver. Left: '%s', right: '%s'\" %\n                       (var, str(left), str(right)))\n    else:\n      raise ValueError(\"Solve-variable '%s' is not present in the equation. It \"\n                       \"must appear once. Left: '%s', right: '%s'\" %\n                       (var, str(left), str(right)))",
                      "children": [
                        {
                          "type": "if",
                          "start": {
                            "row": 34,
                            "column": 4
                          },
                          "end": {
                            "row": 34,
                            "column": 6
                          },
                          "text": "if"
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 34,
                            "column": 7
                          },
                          "end": {
                            "row": 34,
                            "column": 17
                          },
                          "text": "is_in_left"
                        },
                        {
                          "type": ":",
                          "start": {
                            "row": 34,
                            "column": 17
                          },
                          "end": {
                            "row": 34,
                            "column": 18
                          },
                          "text": ":"
                        },
                        {
                          "type": "block",
                          "start": {
                            "row": 35,
                            "column": 6
                          },
                          "end": {
                            "row": 38,
                            "column": 52
                          },
                          "text": "raise ValueError(\"Solve-variable '%s' is on both sides of the equation. \"\n                       \"Only equations where the solve variable-appears once \"\n                       \"are supported by this solver. Left: '%s', right: '%s'\" %\n                       (var, str(left), str(right)))",
                          "children": [
                            {
                              "type": "raise_statement",
                              "start": {
                                "row": 35,
                                "column": 6
                              },
                              "end": {
                                "row": 38,
                                "column": 52
                              },
                              "text": "raise ValueError(\"Solve-variable '%s' is on both sides of the equation. \"\n                       \"Only equations where the solve variable-appears once \"\n                       \"are supported by this solver. Left: '%s', right: '%s'\" %\n                       (var, str(left), str(right)))",
                              "children": [
                                {
                                  "type": "raise",
                                  "start": {
                                    "row": 35,
                                    "column": 6
                                  },
                                  "end": {
                                    "row": 35,
                                    "column": 11
                                  },
                                  "text": "raise"
                                },
                                {
                                  "type": "call",
                                  "start": {
                                    "row": 35,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 38,
                                    "column": 52
                                  },
                                  "text": "ValueError(\"Solve-variable '%s' is on both sides of the equation. \"\n                       \"Only equations where the solve variable-appears once \"\n                       \"are supported by this solver. Left: '%s', right: '%s'\" %\n                       (var, str(left), str(right)))",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 35,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 35,
                                        "column": 22
                                      },
                                      "text": "ValueError"
                                    },
                                    {
                                      "type": "argument_list",
                                      "start": {
                                        "row": 35,
                                        "column": 22
                                      },
                                      "end": {
                                        "row": 38,
                                        "column": 52
                                      },
                                      "text": "(\"Solve-variable '%s' is on both sides of the equation. \"\n                       \"Only equations where the solve variable-appears once \"\n                       \"are supported by this solver. Left: '%s', right: '%s'\" %\n                       (var, str(left), str(right)))",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 35,
                                            "column": 22
                                          },
                                          "end": {
                                            "row": 35,
                                            "column": 23
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "binary_operator",
                                          "start": {
                                            "row": 35,
                                            "column": 23
                                          },
                                          "end": {
                                            "row": 38,
                                            "column": 51
                                          },
                                          "text": "\"Solve-variable '%s' is on both sides of the equation. \"\n                       \"Only equations where the solve variable-appears once \"\n                       \"are supported by this solver. Left: '%s', right: '%s'\" %\n                       (var, str(left), str(right))",
                                          "children": [
                                            {
                                              "type": "concatenated_string",
                                              "start": {
                                                "row": 35,
                                                "column": 23
                                              },
                                              "end": {
                                                "row": 37,
                                                "column": 78
                                              },
                                              "text": "\"Solve-variable '%s' is on both sides of the equation. \"\n                       \"Only equations where the solve variable-appears once \"\n                       \"are supported by this solver. Left: '%s', right: '%s'\"",
                                              "children": [
                                                {
                                                  "type": "string",
                                                  "start": {
                                                    "row": 35,
                                                    "column": 23
                                                  },
                                                  "end": {
                                                    "row": 35,
                                                    "column": 79
                                                  },
                                                  "text": "\"Solve-variable '%s' is on both sides of the equation. \"",
                                                  "children": [
                                                    {
                                                      "type": "string_start",
                                                      "start": {
                                                        "row": 35,
                                                        "column": 23
                                                      },
                                                      "end": {
                                                        "row": 35,
                                                        "column": 24
                                                      },
                                                      "text": "\""
                                                    },
                                                    {
                                                      "type": "string_content",
                                                      "start": {
                                                        "row": 35,
                                                        "column": 24
                                                      },
                                                      "end": {
                                                        "row": 35,
                                                        "column": 78
                                                      },
                                                      "text": "Solve-variable '%s' is on both sides of the equation. "
                                                    },
                                                    {
                                                      "type": "string_end",
                                                      "start": {
                                                        "row": 35,
                                                        "column": 78
                                                      },
                                                      "end": {
                                                        "row": 35,
                                                        "column": 79
                                                      },
                                                      "text": "\""
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "string",
                                                  "start": {
                                                    "row": 36,
                                                    "column": 23
                                                  },
                                                  "end": {
                                                    "row": 36,
                                                    "column": 78
                                                  },
                                                  "text": "\"Only equations where the solve variable-appears once \"",
                                                  "children": [
                                                    {
                                                      "type": "string_start",
                                                      "start": {
                                                        "row": 36,
                                                        "column": 23
                                                      },
                                                      "end": {
                                                        "row": 36,
                                                        "column": 24
                                                      },
                                                      "text": "\""
                                                    },
                                                    {
                                                      "type": "string_content",
                                                      "start": {
                                                        "row": 36,
                                                        "column": 24
                                                      },
                                                      "end": {
                                                        "row": 36,
                                                        "column": 77
                                                      },
                                                      "text": "Only equations where the solve variable-appears once "
                                                    },
                                                    {
                                                      "type": "string_end",
                                                      "start": {
                                                        "row": 36,
                                                        "column": 77
                                                      },
                                                      "end": {
                                                        "row": 36,
                                                        "column": 78
                                                      },
                                                      "text": "\""
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "string",
                                                  "start": {
                                                    "row": 37,
                                                    "column": 23
                                                  },
                                                  "end": {
                                                    "row": 37,
                                                    "column": 78
                                                  },
                                                  "text": "\"are supported by this solver. Left: '%s', right: '%s'\"",
                                                  "children": [
                                                    {
                                                      "type": "string_start",
                                                      "start": {
                                                        "row": 37,
                                                        "column": 23
                                                      },
                                                      "end": {
                                                        "row": 37,
                                                        "column": 24
                                                      },
                                                      "text": "\""
                                                    },
                                                    {
                                                      "type": "string_content",
                                                      "start": {
                                                        "row": 37,
                                                        "column": 24
                                                      },
                                                      "end": {
                                                        "row": 37,
                                                        "column": 77
                                                      },
                                                      "text": "are supported by this solver. Left: '%s', right: '%s'"
                                                    },
                                                    {
                                                      "type": "string_end",
                                                      "start": {
                                                        "row": 37,
                                                        "column": 77
                                                      },
                                                      "end": {
                                                        "row": 37,
                                                        "column": 78
                                                      },
                                                      "text": "\""
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "%",
                                              "start": {
                                                "row": 37,
                                                "column": 79
                                              },
                                              "end": {
                                                "row": 37,
                                                "column": 80
                                              },
                                              "text": "%"
                                            },
                                            {
                                              "type": "tuple",
                                              "start": {
                                                "row": 38,
                                                "column": 23
                                              },
                                              "end": {
                                                "row": 38,
                                                "column": 51
                                              },
                                              "text": "(var, str(left), str(right))",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 38,
                                                    "column": 23
                                                  },
                                                  "end": {
                                                    "row": 38,
                                                    "column": 24
                                                  },
                                                  "text": "("
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 38,
                                                    "column": 24
                                                  },
                                                  "end": {
                                                    "row": 38,
                                                    "column": 27
                                                  },
                                                  "text": "var"
                                                },
                                                {
                                                  "type": ",",
                                                  "start": {
                                                    "row": 38,
                                                    "column": 27
                                                  },
                                                  "end": {
                                                    "row": 38,
                                                    "column": 28
                                                  },
                                                  "text": ","
                                                },
                                                {
                                                  "type": "call",
                                                  "start": {
                                                    "row": 38,
                                                    "column": 29
                                                  },
                                                  "end": {
                                                    "row": 38,
                                                    "column": 38
                                                  },
                                                  "text": "str(left)",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 38,
                                                        "column": 29
                                                      },
                                                      "end": {
                                                        "row": 38,
                                                        "column": 32
                                                      },
                                                      "text": "str"
                                                    },
                                                    {
                                                      "type": "argument_list",
                                                      "start": {
                                                        "row": 38,
                                                        "column": 32
                                                      },
                                                      "end": {
                                                        "row": 38,
                                                        "column": 38
                                                      },
                                                      "text": "(left)",
                                                      "children": [
                                                        {
                                                          "type": "(",
                                                          "start": {
                                                            "row": 38,
                                                            "column": 32
                                                          },
                                                          "end": {
                                                            "row": 38,
                                                            "column": 33
                                                          },
                                                          "text": "("
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 38,
                                                            "column": 33
                                                          },
                                                          "end": {
                                                            "row": 38,
                                                            "column": 37
                                                          },
                                                          "text": "left"
                                                        },
                                                        {
                                                          "type": ")",
                                                          "start": {
                                                            "row": 38,
                                                            "column": 37
                                                          },
                                                          "end": {
                                                            "row": 38,
                                                            "column": 38
                                                          },
                                                          "text": ")"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ",",
                                                  "start": {
                                                    "row": 38,
                                                    "column": 38
                                                  },
                                                  "end": {
                                                    "row": 38,
                                                    "column": 39
                                                  },
                                                  "text": ","
                                                },
                                                {
                                                  "type": "call",
                                                  "start": {
                                                    "row": 38,
                                                    "column": 40
                                                  },
                                                  "end": {
                                                    "row": 38,
                                                    "column": 50
                                                  },
                                                  "text": "str(right)",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 38,
                                                        "column": 40
                                                      },
                                                      "end": {
                                                        "row": 38,
                                                        "column": 43
                                                      },
                                                      "text": "str"
                                                    },
                                                    {
                                                      "type": "argument_list",
                                                      "start": {
                                                        "row": 38,
                                                        "column": 43
                                                      },
                                                      "end": {
                                                        "row": 38,
                                                        "column": 50
                                                      },
                                                      "text": "(right)",
                                                      "children": [
                                                        {
                                                          "type": "(",
                                                          "start": {
                                                            "row": 38,
                                                            "column": 43
                                                          },
                                                          "end": {
                                                            "row": 38,
                                                            "column": 44
                                                          },
                                                          "text": "("
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 38,
                                                            "column": 44
                                                          },
                                                          "end": {
                                                            "row": 38,
                                                            "column": 49
                                                          },
                                                          "text": "right"
                                                        },
                                                        {
                                                          "type": ")",
                                                          "start": {
                                                            "row": 38,
                                                            "column": 49
                                                          },
                                                          "end": {
                                                            "row": 38,
                                                            "column": 50
                                                          },
                                                          "text": ")"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 38,
                                                    "column": 50
                                                  },
                                                  "end": {
                                                    "row": 38,
                                                    "column": 51
                                                  },
                                                  "text": ")"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 38,
                                            "column": 51
                                          },
                                          "end": {
                                            "row": 38,
                                            "column": 52
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "else_clause",
                          "start": {
                            "row": 39,
                            "column": 4
                          },
                          "end": {
                            "row": 42,
                            "column": 52
                          },
                          "text": "else:\n      raise ValueError(\"Solve-variable '%s' is not present in the equation. It \"\n                       \"must appear once. Left: '%s', right: '%s'\" %\n                       (var, str(left), str(right)))",
                          "children": [
                            {
                              "type": "else",
                              "start": {
                                "row": 39,
                                "column": 4
                              },
                              "end": {
                                "row": 39,
                                "column": 8
                              },
                              "text": "else"
                            },
                            {
                              "type": ":",
                              "start": {
                                "row": 39,
                                "column": 8
                              },
                              "end": {
                                "row": 39,
                                "column": 9
                              },
                              "text": ":"
                            },
                            {
                              "type": "block",
                              "start": {
                                "row": 40,
                                "column": 6
                              },
                              "end": {
                                "row": 42,
                                "column": 52
                              },
                              "text": "raise ValueError(\"Solve-variable '%s' is not present in the equation. It \"\n                       \"must appear once. Left: '%s', right: '%s'\" %\n                       (var, str(left), str(right)))",
                              "children": [
                                {
                                  "type": "raise_statement",
                                  "start": {
                                    "row": 40,
                                    "column": 6
                                  },
                                  "end": {
                                    "row": 42,
                                    "column": 52
                                  },
                                  "text": "raise ValueError(\"Solve-variable '%s' is not present in the equation. It \"\n                       \"must appear once. Left: '%s', right: '%s'\" %\n                       (var, str(left), str(right)))",
                                  "children": [
                                    {
                                      "type": "raise",
                                      "start": {
                                        "row": 40,
                                        "column": 6
                                      },
                                      "end": {
                                        "row": 40,
                                        "column": 11
                                      },
                                      "text": "raise"
                                    },
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 40,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 42,
                                        "column": 52
                                      },
                                      "text": "ValueError(\"Solve-variable '%s' is not present in the equation. It \"\n                       \"must appear once. Left: '%s', right: '%s'\" %\n                       (var, str(left), str(right)))",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 40,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 40,
                                            "column": 22
                                          },
                                          "text": "ValueError"
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 40,
                                            "column": 22
                                          },
                                          "end": {
                                            "row": 42,
                                            "column": 52
                                          },
                                          "text": "(\"Solve-variable '%s' is not present in the equation. It \"\n                       \"must appear once. Left: '%s', right: '%s'\" %\n                       (var, str(left), str(right)))",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 40,
                                                "column": 22
                                              },
                                              "end": {
                                                "row": 40,
                                                "column": 23
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "binary_operator",
                                              "start": {
                                                "row": 40,
                                                "column": 23
                                              },
                                              "end": {
                                                "row": 42,
                                                "column": 51
                                              },
                                              "text": "\"Solve-variable '%s' is not present in the equation. It \"\n                       \"must appear once. Left: '%s', right: '%s'\" %\n                       (var, str(left), str(right))",
                                              "children": [
                                                {
                                                  "type": "concatenated_string",
                                                  "start": {
                                                    "row": 40,
                                                    "column": 23
                                                  },
                                                  "end": {
                                                    "row": 41,
                                                    "column": 66
                                                  },
                                                  "text": "\"Solve-variable '%s' is not present in the equation. It \"\n                       \"must appear once. Left: '%s', right: '%s'\"",
                                                  "children": [
                                                    {
                                                      "type": "string",
                                                      "start": {
                                                        "row": 40,
                                                        "column": 23
                                                      },
                                                      "end": {
                                                        "row": 40,
                                                        "column": 80
                                                      },
                                                      "text": "\"Solve-variable '%s' is not present in the equation. It \"",
                                                      "children": [
                                                        {
                                                          "type": "string_start",
                                                          "start": {
                                                            "row": 40,
                                                            "column": 23
                                                          },
                                                          "end": {
                                                            "row": 40,
                                                            "column": 24
                                                          },
                                                          "text": "\""
                                                        },
                                                        {
                                                          "type": "string_content",
                                                          "start": {
                                                            "row": 40,
                                                            "column": 24
                                                          },
                                                          "end": {
                                                            "row": 40,
                                                            "column": 79
                                                          },
                                                          "text": "Solve-variable '%s' is not present in the equation. It "
                                                        },
                                                        {
                                                          "type": "string_end",
                                                          "start": {
                                                            "row": 40,
                                                            "column": 79
                                                          },
                                                          "end": {
                                                            "row": 40,
                                                            "column": 80
                                                          },
                                                          "text": "\""
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "string",
                                                      "start": {
                                                        "row": 41,
                                                        "column": 23
                                                      },
                                                      "end": {
                                                        "row": 41,
                                                        "column": 66
                                                      },
                                                      "text": "\"must appear once. Left: '%s', right: '%s'\"",
                                                      "children": [
                                                        {
                                                          "type": "string_start",
                                                          "start": {
                                                            "row": 41,
                                                            "column": 23
                                                          },
                                                          "end": {
                                                            "row": 41,
                                                            "column": 24
                                                          },
                                                          "text": "\""
                                                        },
                                                        {
                                                          "type": "string_content",
                                                          "start": {
                                                            "row": 41,
                                                            "column": 24
                                                          },
                                                          "end": {
                                                            "row": 41,
                                                            "column": 65
                                                          },
                                                          "text": "must appear once. Left: '%s', right: '%s'"
                                                        },
                                                        {
                                                          "type": "string_end",
                                                          "start": {
                                                            "row": 41,
                                                            "column": 65
                                                          },
                                                          "end": {
                                                            "row": 41,
                                                            "column": 66
                                                          },
                                                          "text": "\""
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "%",
                                                  "start": {
                                                    "row": 41,
                                                    "column": 67
                                                  },
                                                  "end": {
                                                    "row": 41,
                                                    "column": 68
                                                  },
                                                  "text": "%"
                                                },
                                                {
                                                  "type": "tuple",
                                                  "start": {
                                                    "row": 42,
                                                    "column": 23
                                                  },
                                                  "end": {
                                                    "row": 42,
                                                    "column": 51
                                                  },
                                                  "text": "(var, str(left), str(right))",
                                                  "children": [
                                                    {
                                                      "type": "(",
                                                      "start": {
                                                        "row": 42,
                                                        "column": 23
                                                      },
                                                      "end": {
                                                        "row": 42,
                                                        "column": 24
                                                      },
                                                      "text": "("
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 42,
                                                        "column": 24
                                                      },
                                                      "end": {
                                                        "row": 42,
                                                        "column": 27
                                                      },
                                                      "text": "var"
                                                    },
                                                    {
                                                      "type": ",",
                                                      "start": {
                                                        "row": 42,
                                                        "column": 27
                                                      },
                                                      "end": {
                                                        "row": 42,
                                                        "column": 28
                                                      },
                                                      "text": ","
                                                    },
                                                    {
                                                      "type": "call",
                                                      "start": {
                                                        "row": 42,
                                                        "column": 29
                                                      },
                                                      "end": {
                                                        "row": 42,
                                                        "column": 38
                                                      },
                                                      "text": "str(left)",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 42,
                                                            "column": 29
                                                          },
                                                          "end": {
                                                            "row": 42,
                                                            "column": 32
                                                          },
                                                          "text": "str"
                                                        },
                                                        {
                                                          "type": "argument_list",
                                                          "start": {
                                                            "row": 42,
                                                            "column": 32
                                                          },
                                                          "end": {
                                                            "row": 42,
                                                            "column": 38
                                                          },
                                                          "text": "(left)",
                                                          "children": [
                                                            {
                                                              "type": "(",
                                                              "start": {
                                                                "row": 42,
                                                                "column": 32
                                                              },
                                                              "end": {
                                                                "row": 42,
                                                                "column": 33
                                                              },
                                                              "text": "("
                                                            },
                                                            {
                                                              "type": "identifier",
                                                              "start": {
                                                                "row": 42,
                                                                "column": 33
                                                              },
                                                              "end": {
                                                                "row": 42,
                                                                "column": 37
                                                              },
                                                              "text": "left"
                                                            },
                                                            {
                                                              "type": ")",
                                                              "start": {
                                                                "row": 42,
                                                                "column": 37
                                                              },
                                                              "end": {
                                                                "row": 42,
                                                                "column": 38
                                                              },
                                                              "text": ")"
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ",",
                                                      "start": {
                                                        "row": 42,
                                                        "column": 38
                                                      },
                                                      "end": {
                                                        "row": 42,
                                                        "column": 39
                                                      },
                                                      "text": ","
                                                    },
                                                    {
                                                      "type": "call",
                                                      "start": {
                                                        "row": 42,
                                                        "column": 40
                                                      },
                                                      "end": {
                                                        "row": 42,
                                                        "column": 50
                                                      },
                                                      "text": "str(right)",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 42,
                                                            "column": 40
                                                          },
                                                          "end": {
                                                            "row": 42,
                                                            "column": 43
                                                          },
                                                          "text": "str"
                                                        },
                                                        {
                                                          "type": "argument_list",
                                                          "start": {
                                                            "row": 42,
                                                            "column": 43
                                                          },
                                                          "end": {
                                                            "row": 42,
                                                            "column": 50
                                                          },
                                                          "text": "(right)",
                                                          "children": [
                                                            {
                                                              "type": "(",
                                                              "start": {
                                                                "row": 42,
                                                                "column": 43
                                                              },
                                                              "end": {
                                                                "row": 42,
                                                                "column": 44
                                                              },
                                                              "text": "("
                                                            },
                                                            {
                                                              "type": "identifier",
                                                              "start": {
                                                                "row": 42,
                                                                "column": 44
                                                              },
                                                              "end": {
                                                                "row": 42,
                                                                "column": 49
                                                              },
                                                              "text": "right"
                                                            },
                                                            {
                                                              "type": ")",
                                                              "start": {
                                                                "row": 42,
                                                                "column": 49
                                                              },
                                                              "end": {
                                                                "row": 42,
                                                                "column": 50
                                                              },
                                                              "text": ")"
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ")",
                                                      "start": {
                                                        "row": 42,
                                                        "column": 50
                                                      },
                                                      "end": {
                                                        "row": 42,
                                                        "column": 51
                                                      },
                                                      "text": ")"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 42,
                                                "column": 51
                                              },
                                              "end": {
                                                "row": 42,
                                                "column": 52
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 44,
                "column": 2
              },
              "end": {
                "row": 44,
                "column": 43
              },
              "text": "from_tree = left if is_in_left else right",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 44,
                    "column": 2
                  },
                  "end": {
                    "row": 44,
                    "column": 43
                  },
                  "text": "from_tree = left if is_in_left else right",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 44,
                        "column": 2
                      },
                      "end": {
                        "row": 44,
                        "column": 11
                      },
                      "text": "from_tree"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 44,
                        "column": 12
                      },
                      "end": {
                        "row": 44,
                        "column": 13
                      },
                      "text": "="
                    },
                    {
                      "type": "conditional_expression",
                      "start": {
                        "row": 44,
                        "column": 14
                      },
                      "end": {
                        "row": 44,
                        "column": 43
                      },
                      "text": "left if is_in_left else right",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 44,
                            "column": 14
                          },
                          "end": {
                            "row": 44,
                            "column": 18
                          },
                          "text": "left"
                        },
                        {
                          "type": "if",
                          "start": {
                            "row": 44,
                            "column": 19
                          },
                          "end": {
                            "row": 44,
                            "column": 21
                          },
                          "text": "if"
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 44,
                            "column": 22
                          },
                          "end": {
                            "row": 44,
                            "column": 32
                          },
                          "text": "is_in_left"
                        },
                        {
                          "type": "else",
                          "start": {
                            "row": 44,
                            "column": 33
                          },
                          "end": {
                            "row": 44,
                            "column": 37
                          },
                          "text": "else"
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 44,
                            "column": 38
                          },
                          "end": {
                            "row": 44,
                            "column": 43
                          },
                          "text": "right"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 45,
                "column": 2
              },
              "end": {
                "row": 45,
                "column": 45
              },
              "text": "to_tree = left if not is_in_left else right",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 45,
                    "column": 2
                  },
                  "end": {
                    "row": 45,
                    "column": 45
                  },
                  "text": "to_tree = left if not is_in_left else right",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 45,
                        "column": 2
                      },
                      "end": {
                        "row": 45,
                        "column": 9
                      },
                      "text": "to_tree"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 45,
                        "column": 10
                      },
                      "end": {
                        "row": 45,
                        "column": 11
                      },
                      "text": "="
                    },
                    {
                      "type": "conditional_expression",
                      "start": {
                        "row": 45,
                        "column": 12
                      },
                      "end": {
                        "row": 45,
                        "column": 45
                      },
                      "text": "left if not is_in_left else right",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 45,
                            "column": 12
                          },
                          "end": {
                            "row": 45,
                            "column": 16
                          },
                          "text": "left"
                        },
                        {
                          "type": "if",
                          "start": {
                            "row": 45,
                            "column": 17
                          },
                          "end": {
                            "row": 45,
                            "column": 19
                          },
                          "text": "if"
                        },
                        {
                          "type": "not_operator",
                          "start": {
                            "row": 45,
                            "column": 20
                          },
                          "end": {
                            "row": 45,
                            "column": 34
                          },
                          "text": "not is_in_left",
                          "children": [
                            {
                              "type": "not",
                              "start": {
                                "row": 45,
                                "column": 20
                              },
                              "end": {
                                "row": 45,
                                "column": 23
                              },
                              "text": "not"
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 45,
                                "column": 24
                              },
                              "end": {
                                "row": 45,
                                "column": 34
                              },
                              "text": "is_in_left"
                            }
                          ]
                        },
                        {
                          "type": "else",
                          "start": {
                            "row": 45,
                            "column": 35
                          },
                          "end": {
                            "row": 45,
                            "column": 39
                          },
                          "text": "else"
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 45,
                            "column": 40
                          },
                          "end": {
                            "row": 45,
                            "column": 45
                          },
                          "text": "right"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "while_statement",
              "start": {
                "row": 46,
                "column": 2
              },
              "end": {
                "row": 52,
                "column": 49
              },
              "text": "while from_tree != var:\n    is_in_left = is_in_expr(from_tree.left, var)\n    is_in_right = is_in_expr(from_tree.right, var)\n    from_tree, to_tree = (solve_ops[str(from_tree.op)\n                                    + (\"l\" if is_in_left else \"r\")](\n                                        from_tree.left, from_tree.right,\n                                        to_tree))",
              "children": [
                {
                  "type": "while",
                  "start": {
                    "row": 46,
                    "column": 2
                  },
                  "end": {
                    "row": 46,
                    "column": 7
                  },
                  "text": "while"
                },
                {
                  "type": "comparison_operator",
                  "start": {
                    "row": 46,
                    "column": 8
                  },
                  "end": {
                    "row": 46,
                    "column": 24
                  },
                  "text": "from_tree != var",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 46,
                        "column": 8
                      },
                      "end": {
                        "row": 46,
                        "column": 17
                      },
                      "text": "from_tree"
                    },
                    {
                      "type": "!=",
                      "start": {
                        "row": 46,
                        "column": 18
                      },
                      "end": {
                        "row": 46,
                        "column": 20
                      },
                      "text": "!="
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 46,
                        "column": 21
                      },
                      "end": {
                        "row": 46,
                        "column": 24
                      },
                      "text": "var"
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 46,
                    "column": 24
                  },
                  "end": {
                    "row": 46,
                    "column": 25
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 47,
                    "column": 4
                  },
                  "end": {
                    "row": 52,
                    "column": 49
                  },
                  "text": "is_in_left = is_in_expr(from_tree.left, var)\n    is_in_right = is_in_expr(from_tree.right, var)\n    from_tree, to_tree = (solve_ops[str(from_tree.op)\n                                    + (\"l\" if is_in_left else \"r\")](\n                                        from_tree.left, from_tree.right,\n                                        to_tree))",
                  "children": [
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 47,
                        "column": 4
                      },
                      "end": {
                        "row": 47,
                        "column": 48
                      },
                      "text": "is_in_left = is_in_expr(from_tree.left, var)",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 47,
                            "column": 4
                          },
                          "end": {
                            "row": 47,
                            "column": 48
                          },
                          "text": "is_in_left = is_in_expr(from_tree.left, var)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 47,
                                "column": 4
                              },
                              "end": {
                                "row": 47,
                                "column": 14
                              },
                              "text": "is_in_left"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 47,
                                "column": 15
                              },
                              "end": {
                                "row": 47,
                                "column": 16
                              },
                              "text": "="
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 47,
                                "column": 17
                              },
                              "end": {
                                "row": 47,
                                "column": 48
                              },
                              "text": "is_in_expr(from_tree.left, var)",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 47,
                                    "column": 17
                                  },
                                  "end": {
                                    "row": 47,
                                    "column": 27
                                  },
                                  "text": "is_in_expr"
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 47,
                                    "column": 27
                                  },
                                  "end": {
                                    "row": 47,
                                    "column": 48
                                  },
                                  "text": "(from_tree.left, var)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 47,
                                        "column": 27
                                      },
                                      "end": {
                                        "row": 47,
                                        "column": 28
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "attribute",
                                      "start": {
                                        "row": 47,
                                        "column": 28
                                      },
                                      "end": {
                                        "row": 47,
                                        "column": 42
                                      },
                                      "text": "from_tree.left",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 47,
                                            "column": 28
                                          },
                                          "end": {
                                            "row": 47,
                                            "column": 37
                                          },
                                          "text": "from_tree"
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 47,
                                            "column": 37
                                          },
                                          "end": {
                                            "row": 47,
                                            "column": 38
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 47,
                                            "column": 38
                                          },
                                          "end": {
                                            "row": 47,
                                            "column": 42
                                          },
                                          "text": "left"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 47,
                                        "column": 42
                                      },
                                      "end": {
                                        "row": 47,
                                        "column": 43
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 47,
                                        "column": 44
                                      },
                                      "end": {
                                        "row": 47,
                                        "column": 47
                                      },
                                      "text": "var"
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 47,
                                        "column": 47
                                      },
                                      "end": {
                                        "row": 47,
                                        "column": 48
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 48,
                        "column": 4
                      },
                      "end": {
                        "row": 48,
                        "column": 50
                      },
                      "text": "is_in_right = is_in_expr(from_tree.right, var)",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 48,
                            "column": 4
                          },
                          "end": {
                            "row": 48,
                            "column": 50
                          },
                          "text": "is_in_right = is_in_expr(from_tree.right, var)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 48,
                                "column": 4
                              },
                              "end": {
                                "row": 48,
                                "column": 15
                              },
                              "text": "is_in_right"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 48,
                                "column": 16
                              },
                              "end": {
                                "row": 48,
                                "column": 17
                              },
                              "text": "="
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 48,
                                "column": 18
                              },
                              "end": {
                                "row": 48,
                                "column": 50
                              },
                              "text": "is_in_expr(from_tree.right, var)",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 48,
                                    "column": 18
                                  },
                                  "end": {
                                    "row": 48,
                                    "column": 28
                                  },
                                  "text": "is_in_expr"
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 48,
                                    "column": 28
                                  },
                                  "end": {
                                    "row": 48,
                                    "column": 50
                                  },
                                  "text": "(from_tree.right, var)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 48,
                                        "column": 28
                                      },
                                      "end": {
                                        "row": 48,
                                        "column": 29
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "attribute",
                                      "start": {
                                        "row": 48,
                                        "column": 29
                                      },
                                      "end": {
                                        "row": 48,
                                        "column": 44
                                      },
                                      "text": "from_tree.right",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 48,
                                            "column": 29
                                          },
                                          "end": {
                                            "row": 48,
                                            "column": 38
                                          },
                                          "text": "from_tree"
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 48,
                                            "column": 38
                                          },
                                          "end": {
                                            "row": 48,
                                            "column": 39
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 48,
                                            "column": 39
                                          },
                                          "end": {
                                            "row": 48,
                                            "column": 44
                                          },
                                          "text": "right"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 48,
                                        "column": 44
                                      },
                                      "end": {
                                        "row": 48,
                                        "column": 45
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 48,
                                        "column": 46
                                      },
                                      "end": {
                                        "row": 48,
                                        "column": 49
                                      },
                                      "text": "var"
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 48,
                                        "column": 49
                                      },
                                      "end": {
                                        "row": 48,
                                        "column": 50
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 49,
                        "column": 4
                      },
                      "end": {
                        "row": 52,
                        "column": 49
                      },
                      "text": "from_tree, to_tree = (solve_ops[str(from_tree.op)\n                                    + (\"l\" if is_in_left else \"r\")](\n                                        from_tree.left, from_tree.right,\n                                        to_tree))",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 49,
                            "column": 4
                          },
                          "end": {
                            "row": 52,
                            "column": 49
                          },
                          "text": "from_tree, to_tree = (solve_ops[str(from_tree.op)\n                                    + (\"l\" if is_in_left else \"r\")](\n                                        from_tree.left, from_tree.right,\n                                        to_tree))",
                          "children": [
                            {
                              "type": "pattern_list",
                              "start": {
                                "row": 49,
                                "column": 4
                              },
                              "end": {
                                "row": 49,
                                "column": 22
                              },
                              "text": "from_tree, to_tree",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 49,
                                    "column": 4
                                  },
                                  "end": {
                                    "row": 49,
                                    "column": 13
                                  },
                                  "text": "from_tree"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 49,
                                    "column": 13
                                  },
                                  "end": {
                                    "row": 49,
                                    "column": 14
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 49,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 49,
                                    "column": 22
                                  },
                                  "text": "to_tree"
                                }
                              ]
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 49,
                                "column": 23
                              },
                              "end": {
                                "row": 49,
                                "column": 24
                              },
                              "text": "="
                            },
                            {
                              "type": "parenthesized_expression",
                              "start": {
                                "row": 49,
                                "column": 25
                              },
                              "end": {
                                "row": 52,
                                "column": 49
                              },
                              "text": "(solve_ops[str(from_tree.op)\n                                    + (\"l\" if is_in_left else \"r\")](\n                                        from_tree.left, from_tree.right,\n                                        to_tree))",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 49,
                                    "column": 25
                                  },
                                  "end": {
                                    "row": 49,
                                    "column": 26
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "call",
                                  "start": {
                                    "row": 49,
                                    "column": 26
                                  },
                                  "end": {
                                    "row": 52,
                                    "column": 48
                                  },
                                  "text": "solve_ops[str(from_tree.op)\n                                    + (\"l\" if is_in_left else \"r\")](\n                                        from_tree.left, from_tree.right,\n                                        to_tree)",
                                  "children": [
                                    {
                                      "type": "subscript",
                                      "start": {
                                        "row": 49,
                                        "column": 26
                                      },
                                      "end": {
                                        "row": 50,
                                        "column": 67
                                      },
                                      "text": "solve_ops[str(from_tree.op)\n                                    + (\"l\" if is_in_left else \"r\")]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 49,
                                            "column": 26
                                          },
                                          "end": {
                                            "row": 49,
                                            "column": 35
                                          },
                                          "text": "solve_ops"
                                        },
                                        {
                                          "type": "[",
                                          "start": {
                                            "row": 49,
                                            "column": 35
                                          },
                                          "end": {
                                            "row": 49,
                                            "column": 36
                                          },
                                          "text": "["
                                        },
                                        {
                                          "type": "binary_operator",
                                          "start": {
                                            "row": 49,
                                            "column": 36
                                          },
                                          "end": {
                                            "row": 50,
                                            "column": 66
                                          },
                                          "text": "str(from_tree.op)\n                                    + (\"l\" if is_in_left else \"r\")",
                                          "children": [
                                            {
                                              "type": "call",
                                              "start": {
                                                "row": 49,
                                                "column": 36
                                              },
                                              "end": {
                                                "row": 49,
                                                "column": 53
                                              },
                                              "text": "str(from_tree.op)",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 49,
                                                    "column": 36
                                                  },
                                                  "end": {
                                                    "row": 49,
                                                    "column": 39
                                                  },
                                                  "text": "str"
                                                },
                                                {
                                                  "type": "argument_list",
                                                  "start": {
                                                    "row": 49,
                                                    "column": 39
                                                  },
                                                  "end": {
                                                    "row": 49,
                                                    "column": 53
                                                  },
                                                  "text": "(from_tree.op)",
                                                  "children": [
                                                    {
                                                      "type": "(",
                                                      "start": {
                                                        "row": 49,
                                                        "column": 39
                                                      },
                                                      "end": {
                                                        "row": 49,
                                                        "column": 40
                                                      },
                                                      "text": "("
                                                    },
                                                    {
                                                      "type": "attribute",
                                                      "start": {
                                                        "row": 49,
                                                        "column": 40
                                                      },
                                                      "end": {
                                                        "row": 49,
                                                        "column": 52
                                                      },
                                                      "text": "from_tree.op",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 49,
                                                            "column": 40
                                                          },
                                                          "end": {
                                                            "row": 49,
                                                            "column": 49
                                                          },
                                                          "text": "from_tree"
                                                        },
                                                        {
                                                          "type": ".",
                                                          "start": {
                                                            "row": 49,
                                                            "column": 49
                                                          },
                                                          "end": {
                                                            "row": 49,
                                                            "column": 50
                                                          },
                                                          "text": "."
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 49,
                                                            "column": 50
                                                          },
                                                          "end": {
                                                            "row": 49,
                                                            "column": 52
                                                          },
                                                          "text": "op"
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ")",
                                                      "start": {
                                                        "row": 49,
                                                        "column": 52
                                                      },
                                                      "end": {
                                                        "row": 49,
                                                        "column": 53
                                                      },
                                                      "text": ")"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "+",
                                              "start": {
                                                "row": 50,
                                                "column": 36
                                              },
                                              "end": {
                                                "row": 50,
                                                "column": 37
                                              },
                                              "text": "+"
                                            },
                                            {
                                              "type": "parenthesized_expression",
                                              "start": {
                                                "row": 50,
                                                "column": 38
                                              },
                                              "end": {
                                                "row": 50,
                                                "column": 66
                                              },
                                              "text": "(\"l\" if is_in_left else \"r\")",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 50,
                                                    "column": 38
                                                  },
                                                  "end": {
                                                    "row": 50,
                                                    "column": 39
                                                  },
                                                  "text": "("
                                                },
                                                {
                                                  "type": "conditional_expression",
                                                  "start": {
                                                    "row": 50,
                                                    "column": 39
                                                  },
                                                  "end": {
                                                    "row": 50,
                                                    "column": 65
                                                  },
                                                  "text": "\"l\" if is_in_left else \"r\"",
                                                  "children": [
                                                    {
                                                      "type": "string",
                                                      "start": {
                                                        "row": 50,
                                                        "column": 39
                                                      },
                                                      "end": {
                                                        "row": 50,
                                                        "column": 42
                                                      },
                                                      "text": "\"l\"",
                                                      "children": [
                                                        {
                                                          "type": "string_start",
                                                          "start": {
                                                            "row": 50,
                                                            "column": 39
                                                          },
                                                          "end": {
                                                            "row": 50,
                                                            "column": 40
                                                          },
                                                          "text": "\""
                                                        },
                                                        {
                                                          "type": "string_content",
                                                          "start": {
                                                            "row": 50,
                                                            "column": 40
                                                          },
                                                          "end": {
                                                            "row": 50,
                                                            "column": 41
                                                          },
                                                          "text": "l"
                                                        },
                                                        {
                                                          "type": "string_end",
                                                          "start": {
                                                            "row": 50,
                                                            "column": 41
                                                          },
                                                          "end": {
                                                            "row": 50,
                                                            "column": 42
                                                          },
                                                          "text": "\""
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "if",
                                                      "start": {
                                                        "row": 50,
                                                        "column": 43
                                                      },
                                                      "end": {
                                                        "row": 50,
                                                        "column": 45
                                                      },
                                                      "text": "if"
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 50,
                                                        "column": 46
                                                      },
                                                      "end": {
                                                        "row": 50,
                                                        "column": 56
                                                      },
                                                      "text": "is_in_left"
                                                    },
                                                    {
                                                      "type": "else",
                                                      "start": {
                                                        "row": 50,
                                                        "column": 57
                                                      },
                                                      "end": {
                                                        "row": 50,
                                                        "column": 61
                                                      },
                                                      "text": "else"
                                                    },
                                                    {
                                                      "type": "string",
                                                      "start": {
                                                        "row": 50,
                                                        "column": 62
                                                      },
                                                      "end": {
                                                        "row": 50,
                                                        "column": 65
                                                      },
                                                      "text": "\"r\"",
                                                      "children": [
                                                        {
                                                          "type": "string_start",
                                                          "start": {
                                                            "row": 50,
                                                            "column": 62
                                                          },
                                                          "end": {
                                                            "row": 50,
                                                            "column": 63
                                                          },
                                                          "text": "\""
                                                        },
                                                        {
                                                          "type": "string_content",
                                                          "start": {
                                                            "row": 50,
                                                            "column": 63
                                                          },
                                                          "end": {
                                                            "row": 50,
                                                            "column": 64
                                                          },
                                                          "text": "r"
                                                        },
                                                        {
                                                          "type": "string_end",
                                                          "start": {
                                                            "row": 50,
                                                            "column": 64
                                                          },
                                                          "end": {
                                                            "row": 50,
                                                            "column": 65
                                                          },
                                                          "text": "\""
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 50,
                                                    "column": 65
                                                  },
                                                  "end": {
                                                    "row": 50,
                                                    "column": 66
                                                  },
                                                  "text": ")"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "]",
                                          "start": {
                                            "row": 50,
                                            "column": 66
                                          },
                                          "end": {
                                            "row": 50,
                                            "column": 67
                                          },
                                          "text": "]"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "argument_list",
                                      "start": {
                                        "row": 50,
                                        "column": 67
                                      },
                                      "end": {
                                        "row": 52,
                                        "column": 48
                                      },
                                      "text": "(\n                                        from_tree.left, from_tree.right,\n                                        to_tree)",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 50,
                                            "column": 67
                                          },
                                          "end": {
                                            "row": 50,
                                            "column": 68
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "attribute",
                                          "start": {
                                            "row": 51,
                                            "column": 40
                                          },
                                          "end": {
                                            "row": 51,
                                            "column": 54
                                          },
                                          "text": "from_tree.left",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 51,
                                                "column": 40
                                              },
                                              "end": {
                                                "row": 51,
                                                "column": 49
                                              },
                                              "text": "from_tree"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 51,
                                                "column": 49
                                              },
                                              "end": {
                                                "row": 51,
                                                "column": 50
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 51,
                                                "column": 50
                                              },
                                              "end": {
                                                "row": 51,
                                                "column": 54
                                              },
                                              "text": "left"
                                            }
                                          ]
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 51,
                                            "column": 54
                                          },
                                          "end": {
                                            "row": 51,
                                            "column": 55
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "attribute",
                                          "start": {
                                            "row": 51,
                                            "column": 56
                                          },
                                          "end": {
                                            "row": 51,
                                            "column": 71
                                          },
                                          "text": "from_tree.right",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 51,
                                                "column": 56
                                              },
                                              "end": {
                                                "row": 51,
                                                "column": 65
                                              },
                                              "text": "from_tree"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 51,
                                                "column": 65
                                              },
                                              "end": {
                                                "row": 51,
                                                "column": 66
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 51,
                                                "column": 66
                                              },
                                              "end": {
                                                "row": 51,
                                                "column": 71
                                              },
                                              "text": "right"
                                            }
                                          ]
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 51,
                                            "column": 71
                                          },
                                          "end": {
                                            "row": 51,
                                            "column": 72
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 52,
                                            "column": 40
                                          },
                                          "end": {
                                            "row": 52,
                                            "column": 47
                                          },
                                          "text": "to_tree"
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 52,
                                            "column": 47
                                          },
                                          "end": {
                                            "row": 52,
                                            "column": 48
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 52,
                                    "column": 48
                                  },
                                  "end": {
                                    "row": 52,
                                    "column": 49
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 53,
                "column": 2
              },
              "end": {
                "row": 53,
                "column": 16
              },
              "text": "return to_tree",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 53,
                    "column": 2
                  },
                  "end": {
                    "row": 53,
                    "column": 8
                  },
                  "text": "return"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 53,
                    "column": 9
                  },
                  "end": {
                    "row": 53,
                    "column": 16
                  },
                  "text": "to_tree"
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}