{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 89,
    "column": 74
  },
  "text": "def create_apply_graph(self, signature, input_tensors, name):\n    \"\"\"See `ModuleImpl.create_apply_graph`.\"\"\"\n    signature_def = self._meta_graph.signature_def.get(signature)\n    meta_graph = meta_graph_pb2.MetaGraphDef()\n    meta_graph.CopyFrom(self._meta_graph)\n    apply_graph = tf_v1.get_default_graph()\n    infeed_map = tensor_info.build_input_map(signature_def.inputs,\n                                             input_tensors)\n\n    # Build a input map to feed when importing the apply-graph by augmenting the\n    # state_map with the input args. This allows an input to override a tensor\n    # from the state-graph.\n    feed_map = dict(self._state_map)\n    # If we are applying the module in a function with a TPUReplicateContext, we\n    # must capture the state tensors in generating our feedmap and prune out\n    # assign ops. Function graph semantics are different in that all ops are\n    # executed regardless of dependency.\n    # TODO(b/112575006): The following adds functionality of function call\n    # within a TPU context. Work to generalize this for all function calls is\n    # ongoing.\n    if self._is_tpu_graph_function():\n      for k, v in self._state_map.items():\n        feed_map[k] = apply_graph.capture(v)\n      meta_graph_lib.prune_unused_nodes(meta_graph, signature_def)\n      # After we prune the metagraph def, we might need to prune away\n      # infeeds which no longer exist.\n      meta_graph_lib.prune_feed_map(meta_graph, infeed_map)\n    elif apply_graph.building_function:\n      raise NotImplementedError(\n          \"Using TF-Hub module within a TensorFlow defined function \"\n          \"is currently not supported.\")\n\n    # As state ops in the apply graph are unused, replace them with Placeholders\n    # so that in a heirarchical instantiation, apply_graph state ops are\n    # ignored.\n    replace_apply_state(meta_graph,\n                        list_registered_stateful_ops_without_inputs(), feed_map)\n    feed_map.update(infeed_map)\n\n    # Make state tensors enter the current context. This way the Module can be\n    # applied inside a control flow structure such as a while_loop.\n    control_flow = apply_graph._get_control_flow_context()  # pylint: disable=protected-access\n    if control_flow:\n      for key, value in sorted(feed_map.items()):\n        feed_map[key] = control_flow.AddValue(value)\n\n    # Don't mark the name as used at this point - import_scoped_meta_graph will\n    # start using it.\n    absolute_scope_name = apply_graph.unique_name(name, mark_as_used=False)\n    relative_scope_name = absolute_scope_name.split(\"/\")[-1]\n\n    import_collections = [\n        # In most cases ASSET_FILEPATHS are only used for the TABLE_INITIALIZERS\n        # ops, however one could create a graph that uses an asset at any other\n        # time. As so everytime we bring the tensor with that has the asset\n        # filename we must annotate it as so, so later re-exports have that\n        # semantic information and can handle it.\n        tf_v1.GraphKeys.ASSET_FILEPATHS,\n        tf_v1.GraphKeys.COND_CONTEXT,\n        tf_v1.GraphKeys.WHILE_CONTEXT,\n    ]\n    if self._trainable:\n      import_collections.extend([tf_v1.GraphKeys.UPDATE_OPS])\n\n    meta_graph_lib.filter_collections(meta_graph, import_collections)\n    meta_graph_lib.prefix_shared_name_attributes(meta_graph,\n                                                 absolute_scope_name)\n    if len(meta_graph.collection_def) and self._is_tpu_graph_function():\n      raise NotImplementedError(\n          \"Applying modules with collections inside TPU functions is not \"\n          \"supported.\")\n\n    tf_v1.train.import_meta_graph(\n        meta_graph,\n        input_map=feed_map,\n        import_scope=relative_scope_name)\n    fix_colocation_after_import(input_map=feed_map,\n                                absolute_import_scope=absolute_scope_name)\n\n    def get_tensor(name):\n      # When trying to output an input tensor there are no nodes created within\n      # the apply scope. So one must look into the input map.\n      try:\n        return feed_map[name]\n      except KeyError:\n        return apply_graph.get_tensor_by_name(\n            meta_graph_lib.prepend_name_scope(\n                name, import_scope=absolute_scope_name))\n\n    return tensor_info.build_output_map(signature_def.outputs, get_tensor)",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 89,
        "column": 74
      },
      "text": "def create_apply_graph(self, signature, input_tensors, name):\n    \"\"\"See `ModuleImpl.create_apply_graph`.\"\"\"\n    signature_def = self._meta_graph.signature_def.get(signature)\n    meta_graph = meta_graph_pb2.MetaGraphDef()\n    meta_graph.CopyFrom(self._meta_graph)\n    apply_graph = tf_v1.get_default_graph()\n    infeed_map = tensor_info.build_input_map(signature_def.inputs,\n                                             input_tensors)\n\n    # Build a input map to feed when importing the apply-graph by augmenting the\n    # state_map with the input args. This allows an input to override a tensor\n    # from the state-graph.\n    feed_map = dict(self._state_map)\n    # If we are applying the module in a function with a TPUReplicateContext, we\n    # must capture the state tensors in generating our feedmap and prune out\n    # assign ops. Function graph semantics are different in that all ops are\n    # executed regardless of dependency.\n    # TODO(b/112575006): The following adds functionality of function call\n    # within a TPU context. Work to generalize this for all function calls is\n    # ongoing.\n    if self._is_tpu_graph_function():\n      for k, v in self._state_map.items():\n        feed_map[k] = apply_graph.capture(v)\n      meta_graph_lib.prune_unused_nodes(meta_graph, signature_def)\n      # After we prune the metagraph def, we might need to prune away\n      # infeeds which no longer exist.\n      meta_graph_lib.prune_feed_map(meta_graph, infeed_map)\n    elif apply_graph.building_function:\n      raise NotImplementedError(\n          \"Using TF-Hub module within a TensorFlow defined function \"\n          \"is currently not supported.\")\n\n    # As state ops in the apply graph are unused, replace them with Placeholders\n    # so that in a heirarchical instantiation, apply_graph state ops are\n    # ignored.\n    replace_apply_state(meta_graph,\n                        list_registered_stateful_ops_without_inputs(), feed_map)\n    feed_map.update(infeed_map)\n\n    # Make state tensors enter the current context. This way the Module can be\n    # applied inside a control flow structure such as a while_loop.\n    control_flow = apply_graph._get_control_flow_context()  # pylint: disable=protected-access\n    if control_flow:\n      for key, value in sorted(feed_map.items()):\n        feed_map[key] = control_flow.AddValue(value)\n\n    # Don't mark the name as used at this point - import_scoped_meta_graph will\n    # start using it.\n    absolute_scope_name = apply_graph.unique_name(name, mark_as_used=False)\n    relative_scope_name = absolute_scope_name.split(\"/\")[-1]\n\n    import_collections = [\n        # In most cases ASSET_FILEPATHS are only used for the TABLE_INITIALIZERS\n        # ops, however one could create a graph that uses an asset at any other\n        # time. As so everytime we bring the tensor with that has the asset\n        # filename we must annotate it as so, so later re-exports have that\n        # semantic information and can handle it.\n        tf_v1.GraphKeys.ASSET_FILEPATHS,\n        tf_v1.GraphKeys.COND_CONTEXT,\n        tf_v1.GraphKeys.WHILE_CONTEXT,\n    ]\n    if self._trainable:\n      import_collections.extend([tf_v1.GraphKeys.UPDATE_OPS])\n\n    meta_graph_lib.filter_collections(meta_graph, import_collections)\n    meta_graph_lib.prefix_shared_name_attributes(meta_graph,\n                                                 absolute_scope_name)\n    if len(meta_graph.collection_def) and self._is_tpu_graph_function():\n      raise NotImplementedError(\n          \"Applying modules with collections inside TPU functions is not \"\n          \"supported.\")\n\n    tf_v1.train.import_meta_graph(\n        meta_graph,\n        input_map=feed_map,\n        import_scope=relative_scope_name)\n    fix_colocation_after_import(input_map=feed_map,\n                                absolute_import_scope=absolute_scope_name)\n\n    def get_tensor(name):\n      # When trying to output an input tensor there are no nodes created within\n      # the apply scope. So one must look into the input map.\n      try:\n        return feed_map[name]\n      except KeyError:\n        return apply_graph.get_tensor_by_name(\n            meta_graph_lib.prepend_name_scope(\n                name, import_scope=absolute_scope_name))\n\n    return tensor_info.build_output_map(signature_def.outputs, get_tensor)",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 22
          },
          "text": "create_apply_graph"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 22
          },
          "end": {
            "row": 0,
            "column": 60
          },
          "text": "(self, signature, input_tensors, name)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 22
              },
              "end": {
                "row": 0,
                "column": 23
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 23
              },
              "end": {
                "row": 0,
                "column": 27
              },
              "text": "self"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 27
              },
              "end": {
                "row": 0,
                "column": 28
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 29
              },
              "end": {
                "row": 0,
                "column": 38
              },
              "text": "signature"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 38
              },
              "end": {
                "row": 0,
                "column": 39
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 40
              },
              "end": {
                "row": 0,
                "column": 53
              },
              "text": "input_tensors"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 53
              },
              "end": {
                "row": 0,
                "column": 54
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 55
              },
              "end": {
                "row": 0,
                "column": 59
              },
              "text": "name"
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 59
              },
              "end": {
                "row": 0,
                "column": 60
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 60
          },
          "end": {
            "row": 0,
            "column": 61
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 4
          },
          "end": {
            "row": 89,
            "column": 74
          },
          "text": "\"\"\"See `ModuleImpl.create_apply_graph`.\"\"\"\n    signature_def = self._meta_graph.signature_def.get(signature)\n    meta_graph = meta_graph_pb2.MetaGraphDef()\n    meta_graph.CopyFrom(self._meta_graph)\n    apply_graph = tf_v1.get_default_graph()\n    infeed_map = tensor_info.build_input_map(signature_def.inputs,\n                                             input_tensors)\n\n    # Build a input map to feed when importing the apply-graph by augmenting the\n    # state_map with the input args. This allows an input to override a tensor\n    # from the state-graph.\n    feed_map = dict(self._state_map)\n    # If we are applying the module in a function with a TPUReplicateContext, we\n    # must capture the state tensors in generating our feedmap and prune out\n    # assign ops. Function graph semantics are different in that all ops are\n    # executed regardless of dependency.\n    # TODO(b/112575006): The following adds functionality of function call\n    # within a TPU context. Work to generalize this for all function calls is\n    # ongoing.\n    if self._is_tpu_graph_function():\n      for k, v in self._state_map.items():\n        feed_map[k] = apply_graph.capture(v)\n      meta_graph_lib.prune_unused_nodes(meta_graph, signature_def)\n      # After we prune the metagraph def, we might need to prune away\n      # infeeds which no longer exist.\n      meta_graph_lib.prune_feed_map(meta_graph, infeed_map)\n    elif apply_graph.building_function:\n      raise NotImplementedError(\n          \"Using TF-Hub module within a TensorFlow defined function \"\n          \"is currently not supported.\")\n\n    # As state ops in the apply graph are unused, replace them with Placeholders\n    # so that in a heirarchical instantiation, apply_graph state ops are\n    # ignored.\n    replace_apply_state(meta_graph,\n                        list_registered_stateful_ops_without_inputs(), feed_map)\n    feed_map.update(infeed_map)\n\n    # Make state tensors enter the current context. This way the Module can be\n    # applied inside a control flow structure such as a while_loop.\n    control_flow = apply_graph._get_control_flow_context()  # pylint: disable=protected-access\n    if control_flow:\n      for key, value in sorted(feed_map.items()):\n        feed_map[key] = control_flow.AddValue(value)\n\n    # Don't mark the name as used at this point - import_scoped_meta_graph will\n    # start using it.\n    absolute_scope_name = apply_graph.unique_name(name, mark_as_used=False)\n    relative_scope_name = absolute_scope_name.split(\"/\")[-1]\n\n    import_collections = [\n        # In most cases ASSET_FILEPATHS are only used for the TABLE_INITIALIZERS\n        # ops, however one could create a graph that uses an asset at any other\n        # time. As so everytime we bring the tensor with that has the asset\n        # filename we must annotate it as so, so later re-exports have that\n        # semantic information and can handle it.\n        tf_v1.GraphKeys.ASSET_FILEPATHS,\n        tf_v1.GraphKeys.COND_CONTEXT,\n        tf_v1.GraphKeys.WHILE_CONTEXT,\n    ]\n    if self._trainable:\n      import_collections.extend([tf_v1.GraphKeys.UPDATE_OPS])\n\n    meta_graph_lib.filter_collections(meta_graph, import_collections)\n    meta_graph_lib.prefix_shared_name_attributes(meta_graph,\n                                                 absolute_scope_name)\n    if len(meta_graph.collection_def) and self._is_tpu_graph_function():\n      raise NotImplementedError(\n          \"Applying modules with collections inside TPU functions is not \"\n          \"supported.\")\n\n    tf_v1.train.import_meta_graph(\n        meta_graph,\n        input_map=feed_map,\n        import_scope=relative_scope_name)\n    fix_colocation_after_import(input_map=feed_map,\n                                absolute_import_scope=absolute_scope_name)\n\n    def get_tensor(name):\n      # When trying to output an input tensor there are no nodes created within\n      # the apply scope. So one must look into the input map.\n      try:\n        return feed_map[name]\n      except KeyError:\n        return apply_graph.get_tensor_by_name(\n            meta_graph_lib.prepend_name_scope(\n                name, import_scope=absolute_scope_name))\n\n    return tensor_info.build_output_map(signature_def.outputs, get_tensor)",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 4
              },
              "end": {
                "row": 1,
                "column": 46
              },
              "text": "\"\"\"See `ModuleImpl.create_apply_graph`.\"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 4
                  },
                  "end": {
                    "row": 1,
                    "column": 46
                  },
                  "text": "\"\"\"See `ModuleImpl.create_apply_graph`.\"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 4
                      },
                      "end": {
                        "row": 1,
                        "column": 7
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 7
                      },
                      "end": {
                        "row": 1,
                        "column": 43
                      },
                      "text": "See `ModuleImpl.create_apply_graph`."
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 1,
                        "column": 43
                      },
                      "end": {
                        "row": 1,
                        "column": 46
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 2,
                "column": 4
              },
              "end": {
                "row": 2,
                "column": 65
              },
              "text": "signature_def = self._meta_graph.signature_def.get(signature)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 2,
                    "column": 4
                  },
                  "end": {
                    "row": 2,
                    "column": 65
                  },
                  "text": "signature_def = self._meta_graph.signature_def.get(signature)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 2,
                        "column": 4
                      },
                      "end": {
                        "row": 2,
                        "column": 17
                      },
                      "text": "signature_def"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 2,
                        "column": 18
                      },
                      "end": {
                        "row": 2,
                        "column": 19
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 2,
                        "column": 20
                      },
                      "end": {
                        "row": 2,
                        "column": 65
                      },
                      "text": "self._meta_graph.signature_def.get(signature)",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 2,
                            "column": 20
                          },
                          "end": {
                            "row": 2,
                            "column": 54
                          },
                          "text": "self._meta_graph.signature_def.get",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 2,
                                "column": 20
                              },
                              "end": {
                                "row": 2,
                                "column": 50
                              },
                              "text": "self._meta_graph.signature_def",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 2,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 2,
                                    "column": 36
                                  },
                                  "text": "self._meta_graph",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 2,
                                        "column": 20
                                      },
                                      "end": {
                                        "row": 2,
                                        "column": 24
                                      },
                                      "text": "self"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 2,
                                        "column": 24
                                      },
                                      "end": {
                                        "row": 2,
                                        "column": 25
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 2,
                                        "column": 25
                                      },
                                      "end": {
                                        "row": 2,
                                        "column": 36
                                      },
                                      "text": "_meta_graph"
                                    }
                                  ]
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 2,
                                    "column": 36
                                  },
                                  "end": {
                                    "row": 2,
                                    "column": 37
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 2,
                                    "column": 37
                                  },
                                  "end": {
                                    "row": 2,
                                    "column": 50
                                  },
                                  "text": "signature_def"
                                }
                              ]
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 2,
                                "column": 50
                              },
                              "end": {
                                "row": 2,
                                "column": 51
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 2,
                                "column": 51
                              },
                              "end": {
                                "row": 2,
                                "column": 54
                              },
                              "text": "get"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 2,
                            "column": 54
                          },
                          "end": {
                            "row": 2,
                            "column": 65
                          },
                          "text": "(signature)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 2,
                                "column": 54
                              },
                              "end": {
                                "row": 2,
                                "column": 55
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 2,
                                "column": 55
                              },
                              "end": {
                                "row": 2,
                                "column": 64
                              },
                              "text": "signature"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 2,
                                "column": 64
                              },
                              "end": {
                                "row": 2,
                                "column": 65
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 3,
                "column": 4
              },
              "end": {
                "row": 3,
                "column": 46
              },
              "text": "meta_graph = meta_graph_pb2.MetaGraphDef()",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 3,
                    "column": 4
                  },
                  "end": {
                    "row": 3,
                    "column": 46
                  },
                  "text": "meta_graph = meta_graph_pb2.MetaGraphDef()",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 3,
                        "column": 4
                      },
                      "end": {
                        "row": 3,
                        "column": 14
                      },
                      "text": "meta_graph"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 3,
                        "column": 15
                      },
                      "end": {
                        "row": 3,
                        "column": 16
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 3,
                        "column": 17
                      },
                      "end": {
                        "row": 3,
                        "column": 46
                      },
                      "text": "meta_graph_pb2.MetaGraphDef()",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 3,
                            "column": 17
                          },
                          "end": {
                            "row": 3,
                            "column": 44
                          },
                          "text": "meta_graph_pb2.MetaGraphDef",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 3,
                                "column": 17
                              },
                              "end": {
                                "row": 3,
                                "column": 31
                              },
                              "text": "meta_graph_pb2"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 3,
                                "column": 31
                              },
                              "end": {
                                "row": 3,
                                "column": 32
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 3,
                                "column": 32
                              },
                              "end": {
                                "row": 3,
                                "column": 44
                              },
                              "text": "MetaGraphDef"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 3,
                            "column": 44
                          },
                          "end": {
                            "row": 3,
                            "column": 46
                          },
                          "text": "()",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 3,
                                "column": 44
                              },
                              "end": {
                                "row": 3,
                                "column": 45
                              },
                              "text": "("
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 3,
                                "column": 45
                              },
                              "end": {
                                "row": 3,
                                "column": 46
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 4,
                "column": 4
              },
              "end": {
                "row": 4,
                "column": 41
              },
              "text": "meta_graph.CopyFrom(self._meta_graph)",
              "children": [
                {
                  "type": "call",
                  "start": {
                    "row": 4,
                    "column": 4
                  },
                  "end": {
                    "row": 4,
                    "column": 41
                  },
                  "text": "meta_graph.CopyFrom(self._meta_graph)",
                  "children": [
                    {
                      "type": "attribute",
                      "start": {
                        "row": 4,
                        "column": 4
                      },
                      "end": {
                        "row": 4,
                        "column": 23
                      },
                      "text": "meta_graph.CopyFrom",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 4,
                            "column": 4
                          },
                          "end": {
                            "row": 4,
                            "column": 14
                          },
                          "text": "meta_graph"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 4,
                            "column": 14
                          },
                          "end": {
                            "row": 4,
                            "column": 15
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 4,
                            "column": 15
                          },
                          "end": {
                            "row": 4,
                            "column": 23
                          },
                          "text": "CopyFrom"
                        }
                      ]
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 4,
                        "column": 23
                      },
                      "end": {
                        "row": 4,
                        "column": 41
                      },
                      "text": "(self._meta_graph)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 4,
                            "column": 23
                          },
                          "end": {
                            "row": 4,
                            "column": 24
                          },
                          "text": "("
                        },
                        {
                          "type": "attribute",
                          "start": {
                            "row": 4,
                            "column": 24
                          },
                          "end": {
                            "row": 4,
                            "column": 40
                          },
                          "text": "self._meta_graph",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 4,
                                "column": 24
                              },
                              "end": {
                                "row": 4,
                                "column": 28
                              },
                              "text": "self"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 4,
                                "column": 28
                              },
                              "end": {
                                "row": 4,
                                "column": 29
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 4,
                                "column": 29
                              },
                              "end": {
                                "row": 4,
                                "column": 40
                              },
                              "text": "_meta_graph"
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 4,
                            "column": 40
                          },
                          "end": {
                            "row": 4,
                            "column": 41
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 5,
                "column": 4
              },
              "end": {
                "row": 5,
                "column": 43
              },
              "text": "apply_graph = tf_v1.get_default_graph()",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 5,
                    "column": 4
                  },
                  "end": {
                    "row": 5,
                    "column": 43
                  },
                  "text": "apply_graph = tf_v1.get_default_graph()",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 5,
                        "column": 4
                      },
                      "end": {
                        "row": 5,
                        "column": 15
                      },
                      "text": "apply_graph"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 5,
                        "column": 16
                      },
                      "end": {
                        "row": 5,
                        "column": 17
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 5,
                        "column": 18
                      },
                      "end": {
                        "row": 5,
                        "column": 43
                      },
                      "text": "tf_v1.get_default_graph()",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 5,
                            "column": 18
                          },
                          "end": {
                            "row": 5,
                            "column": 41
                          },
                          "text": "tf_v1.get_default_graph",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 5,
                                "column": 18
                              },
                              "end": {
                                "row": 5,
                                "column": 23
                              },
                              "text": "tf_v1"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 5,
                                "column": 23
                              },
                              "end": {
                                "row": 5,
                                "column": 24
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 5,
                                "column": 24
                              },
                              "end": {
                                "row": 5,
                                "column": 41
                              },
                              "text": "get_default_graph"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 5,
                            "column": 41
                          },
                          "end": {
                            "row": 5,
                            "column": 43
                          },
                          "text": "()",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 5,
                                "column": 41
                              },
                              "end": {
                                "row": 5,
                                "column": 42
                              },
                              "text": "("
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 5,
                                "column": 42
                              },
                              "end": {
                                "row": 5,
                                "column": 43
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 6,
                "column": 4
              },
              "end": {
                "row": 7,
                "column": 59
              },
              "text": "infeed_map = tensor_info.build_input_map(signature_def.inputs,\n                                             input_tensors)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 6,
                    "column": 4
                  },
                  "end": {
                    "row": 7,
                    "column": 59
                  },
                  "text": "infeed_map = tensor_info.build_input_map(signature_def.inputs,\n                                             input_tensors)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 6,
                        "column": 4
                      },
                      "end": {
                        "row": 6,
                        "column": 14
                      },
                      "text": "infeed_map"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 6,
                        "column": 15
                      },
                      "end": {
                        "row": 6,
                        "column": 16
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 6,
                        "column": 17
                      },
                      "end": {
                        "row": 7,
                        "column": 59
                      },
                      "text": "tensor_info.build_input_map(signature_def.inputs,\n                                             input_tensors)",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 6,
                            "column": 17
                          },
                          "end": {
                            "row": 6,
                            "column": 44
                          },
                          "text": "tensor_info.build_input_map",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 6,
                                "column": 17
                              },
                              "end": {
                                "row": 6,
                                "column": 28
                              },
                              "text": "tensor_info"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 6,
                                "column": 28
                              },
                              "end": {
                                "row": 6,
                                "column": 29
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 6,
                                "column": 29
                              },
                              "end": {
                                "row": 6,
                                "column": 44
                              },
                              "text": "build_input_map"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 6,
                            "column": 44
                          },
                          "end": {
                            "row": 7,
                            "column": 59
                          },
                          "text": "(signature_def.inputs,\n                                             input_tensors)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 6,
                                "column": 44
                              },
                              "end": {
                                "row": 6,
                                "column": 45
                              },
                              "text": "("
                            },
                            {
                              "type": "attribute",
                              "start": {
                                "row": 6,
                                "column": 45
                              },
                              "end": {
                                "row": 6,
                                "column": 65
                              },
                              "text": "signature_def.inputs",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 6,
                                    "column": 45
                                  },
                                  "end": {
                                    "row": 6,
                                    "column": 58
                                  },
                                  "text": "signature_def"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 6,
                                    "column": 58
                                  },
                                  "end": {
                                    "row": 6,
                                    "column": 59
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 6,
                                    "column": 59
                                  },
                                  "end": {
                                    "row": 6,
                                    "column": 65
                                  },
                                  "text": "inputs"
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 6,
                                "column": 65
                              },
                              "end": {
                                "row": 6,
                                "column": 66
                              },
                              "text": ","
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 7,
                                "column": 45
                              },
                              "end": {
                                "row": 7,
                                "column": 58
                              },
                              "text": "input_tensors"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 7,
                                "column": 58
                              },
                              "end": {
                                "row": 7,
                                "column": 59
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 9,
                "column": 4
              },
              "end": {
                "row": 9,
                "column": 80
              },
              "text": "# Build a input map to feed when importing the apply-graph by augmenting the"
            },
            {
              "type": "comment",
              "start": {
                "row": 10,
                "column": 4
              },
              "end": {
                "row": 10,
                "column": 78
              },
              "text": "# state_map with the input args. This allows an input to override a tensor"
            },
            {
              "type": "comment",
              "start": {
                "row": 11,
                "column": 4
              },
              "end": {
                "row": 11,
                "column": 27
              },
              "text": "# from the state-graph."
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 12,
                "column": 4
              },
              "end": {
                "row": 12,
                "column": 36
              },
              "text": "feed_map = dict(self._state_map)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 12,
                    "column": 4
                  },
                  "end": {
                    "row": 12,
                    "column": 36
                  },
                  "text": "feed_map = dict(self._state_map)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 12,
                        "column": 4
                      },
                      "end": {
                        "row": 12,
                        "column": 12
                      },
                      "text": "feed_map"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 12,
                        "column": 13
                      },
                      "end": {
                        "row": 12,
                        "column": 14
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 12,
                        "column": 15
                      },
                      "end": {
                        "row": 12,
                        "column": 36
                      },
                      "text": "dict(self._state_map)",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 12,
                            "column": 15
                          },
                          "end": {
                            "row": 12,
                            "column": 19
                          },
                          "text": "dict"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 12,
                            "column": 19
                          },
                          "end": {
                            "row": 12,
                            "column": 36
                          },
                          "text": "(self._state_map)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 12,
                                "column": 19
                              },
                              "end": {
                                "row": 12,
                                "column": 20
                              },
                              "text": "("
                            },
                            {
                              "type": "attribute",
                              "start": {
                                "row": 12,
                                "column": 20
                              },
                              "end": {
                                "row": 12,
                                "column": 35
                              },
                              "text": "self._state_map",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 12,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 12,
                                    "column": 24
                                  },
                                  "text": "self"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 12,
                                    "column": 24
                                  },
                                  "end": {
                                    "row": 12,
                                    "column": 25
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 12,
                                    "column": 25
                                  },
                                  "end": {
                                    "row": 12,
                                    "column": 35
                                  },
                                  "text": "_state_map"
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 12,
                                "column": 35
                              },
                              "end": {
                                "row": 12,
                                "column": 36
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 13,
                "column": 4
              },
              "end": {
                "row": 13,
                "column": 80
              },
              "text": "# If we are applying the module in a function with a TPUReplicateContext, we"
            },
            {
              "type": "comment",
              "start": {
                "row": 14,
                "column": 4
              },
              "end": {
                "row": 14,
                "column": 76
              },
              "text": "# must capture the state tensors in generating our feedmap and prune out"
            },
            {
              "type": "comment",
              "start": {
                "row": 15,
                "column": 4
              },
              "end": {
                "row": 15,
                "column": 76
              },
              "text": "# assign ops. Function graph semantics are different in that all ops are"
            },
            {
              "type": "comment",
              "start": {
                "row": 16,
                "column": 4
              },
              "end": {
                "row": 16,
                "column": 40
              },
              "text": "# executed regardless of dependency."
            },
            {
              "type": "comment",
              "start": {
                "row": 17,
                "column": 4
              },
              "end": {
                "row": 17,
                "column": 74
              },
              "text": "# TODO(b/112575006): The following adds functionality of function call"
            },
            {
              "type": "comment",
              "start": {
                "row": 18,
                "column": 4
              },
              "end": {
                "row": 18,
                "column": 77
              },
              "text": "# within a TPU context. Work to generalize this for all function calls is"
            },
            {
              "type": "comment",
              "start": {
                "row": 19,
                "column": 4
              },
              "end": {
                "row": 19,
                "column": 14
              },
              "text": "# ongoing."
            },
            {
              "type": "if_statement",
              "start": {
                "row": 20,
                "column": 4
              },
              "end": {
                "row": 30,
                "column": 40
              },
              "text": "if self._is_tpu_graph_function():\n      for k, v in self._state_map.items():\n        feed_map[k] = apply_graph.capture(v)\n      meta_graph_lib.prune_unused_nodes(meta_graph, signature_def)\n      # After we prune the metagraph def, we might need to prune away\n      # infeeds which no longer exist.\n      meta_graph_lib.prune_feed_map(meta_graph, infeed_map)\n    elif apply_graph.building_function:\n      raise NotImplementedError(\n          \"Using TF-Hub module within a TensorFlow defined function \"\n          \"is currently not supported.\")",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 20,
                    "column": 4
                  },
                  "end": {
                    "row": 20,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "call",
                  "start": {
                    "row": 20,
                    "column": 7
                  },
                  "end": {
                    "row": 20,
                    "column": 36
                  },
                  "text": "self._is_tpu_graph_function()",
                  "children": [
                    {
                      "type": "attribute",
                      "start": {
                        "row": 20,
                        "column": 7
                      },
                      "end": {
                        "row": 20,
                        "column": 34
                      },
                      "text": "self._is_tpu_graph_function",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 20,
                            "column": 7
                          },
                          "end": {
                            "row": 20,
                            "column": 11
                          },
                          "text": "self"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 20,
                            "column": 11
                          },
                          "end": {
                            "row": 20,
                            "column": 12
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 20,
                            "column": 12
                          },
                          "end": {
                            "row": 20,
                            "column": 34
                          },
                          "text": "_is_tpu_graph_function"
                        }
                      ]
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 20,
                        "column": 34
                      },
                      "end": {
                        "row": 20,
                        "column": 36
                      },
                      "text": "()",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 20,
                            "column": 34
                          },
                          "end": {
                            "row": 20,
                            "column": 35
                          },
                          "text": "("
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 20,
                            "column": 35
                          },
                          "end": {
                            "row": 20,
                            "column": 36
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 20,
                    "column": 36
                  },
                  "end": {
                    "row": 20,
                    "column": 37
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 21,
                    "column": 6
                  },
                  "end": {
                    "row": 26,
                    "column": 59
                  },
                  "text": "for k, v in self._state_map.items():\n        feed_map[k] = apply_graph.capture(v)\n      meta_graph_lib.prune_unused_nodes(meta_graph, signature_def)\n      # After we prune the metagraph def, we might need to prune away\n      # infeeds which no longer exist.\n      meta_graph_lib.prune_feed_map(meta_graph, infeed_map)",
                  "children": [
                    {
                      "type": "for_statement",
                      "start": {
                        "row": 21,
                        "column": 6
                      },
                      "end": {
                        "row": 22,
                        "column": 44
                      },
                      "text": "for k, v in self._state_map.items():\n        feed_map[k] = apply_graph.capture(v)",
                      "children": [
                        {
                          "type": "for",
                          "start": {
                            "row": 21,
                            "column": 6
                          },
                          "end": {
                            "row": 21,
                            "column": 9
                          },
                          "text": "for"
                        },
                        {
                          "type": "pattern_list",
                          "start": {
                            "row": 21,
                            "column": 10
                          },
                          "end": {
                            "row": 21,
                            "column": 14
                          },
                          "text": "k, v",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 21,
                                "column": 10
                              },
                              "end": {
                                "row": 21,
                                "column": 11
                              },
                              "text": "k"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 21,
                                "column": 11
                              },
                              "end": {
                                "row": 21,
                                "column": 12
                              },
                              "text": ","
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 21,
                                "column": 13
                              },
                              "end": {
                                "row": 21,
                                "column": 14
                              },
                              "text": "v"
                            }
                          ]
                        },
                        {
                          "type": "in",
                          "start": {
                            "row": 21,
                            "column": 15
                          },
                          "end": {
                            "row": 21,
                            "column": 17
                          },
                          "text": "in"
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 21,
                            "column": 18
                          },
                          "end": {
                            "row": 21,
                            "column": 41
                          },
                          "text": "self._state_map.items()",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 21,
                                "column": 18
                              },
                              "end": {
                                "row": 21,
                                "column": 39
                              },
                              "text": "self._state_map.items",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 21,
                                    "column": 18
                                  },
                                  "end": {
                                    "row": 21,
                                    "column": 33
                                  },
                                  "text": "self._state_map",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 21,
                                        "column": 18
                                      },
                                      "end": {
                                        "row": 21,
                                        "column": 22
                                      },
                                      "text": "self"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 21,
                                        "column": 22
                                      },
                                      "end": {
                                        "row": 21,
                                        "column": 23
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 21,
                                        "column": 23
                                      },
                                      "end": {
                                        "row": 21,
                                        "column": 33
                                      },
                                      "text": "_state_map"
                                    }
                                  ]
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 21,
                                    "column": 33
                                  },
                                  "end": {
                                    "row": 21,
                                    "column": 34
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 21,
                                    "column": 34
                                  },
                                  "end": {
                                    "row": 21,
                                    "column": 39
                                  },
                                  "text": "items"
                                }
                              ]
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 21,
                                "column": 39
                              },
                              "end": {
                                "row": 21,
                                "column": 41
                              },
                              "text": "()",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 21,
                                    "column": 39
                                  },
                                  "end": {
                                    "row": 21,
                                    "column": 40
                                  },
                                  "text": "("
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 21,
                                    "column": 40
                                  },
                                  "end": {
                                    "row": 21,
                                    "column": 41
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ":",
                          "start": {
                            "row": 21,
                            "column": 41
                          },
                          "end": {
                            "row": 21,
                            "column": 42
                          },
                          "text": ":"
                        },
                        {
                          "type": "block",
                          "start": {
                            "row": 22,
                            "column": 8
                          },
                          "end": {
                            "row": 22,
                            "column": 44
                          },
                          "text": "feed_map[k] = apply_graph.capture(v)",
                          "children": [
                            {
                              "type": "expression_statement",
                              "start": {
                                "row": 22,
                                "column": 8
                              },
                              "end": {
                                "row": 22,
                                "column": 44
                              },
                              "text": "feed_map[k] = apply_graph.capture(v)",
                              "children": [
                                {
                                  "type": "assignment",
                                  "start": {
                                    "row": 22,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 22,
                                    "column": 44
                                  },
                                  "text": "feed_map[k] = apply_graph.capture(v)",
                                  "children": [
                                    {
                                      "type": "subscript",
                                      "start": {
                                        "row": 22,
                                        "column": 8
                                      },
                                      "end": {
                                        "row": 22,
                                        "column": 19
                                      },
                                      "text": "feed_map[k]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 22,
                                            "column": 8
                                          },
                                          "end": {
                                            "row": 22,
                                            "column": 16
                                          },
                                          "text": "feed_map"
                                        },
                                        {
                                          "type": "[",
                                          "start": {
                                            "row": 22,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 22,
                                            "column": 17
                                          },
                                          "text": "["
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 22,
                                            "column": 17
                                          },
                                          "end": {
                                            "row": 22,
                                            "column": 18
                                          },
                                          "text": "k"
                                        },
                                        {
                                          "type": "]",
                                          "start": {
                                            "row": 22,
                                            "column": 18
                                          },
                                          "end": {
                                            "row": 22,
                                            "column": 19
                                          },
                                          "text": "]"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "=",
                                      "start": {
                                        "row": 22,
                                        "column": 20
                                      },
                                      "end": {
                                        "row": 22,
                                        "column": 21
                                      },
                                      "text": "="
                                    },
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 22,
                                        "column": 22
                                      },
                                      "end": {
                                        "row": 22,
                                        "column": 44
                                      },
                                      "text": "apply_graph.capture(v)",
                                      "children": [
                                        {
                                          "type": "attribute",
                                          "start": {
                                            "row": 22,
                                            "column": 22
                                          },
                                          "end": {
                                            "row": 22,
                                            "column": 41
                                          },
                                          "text": "apply_graph.capture",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 22,
                                                "column": 22
                                              },
                                              "end": {
                                                "row": 22,
                                                "column": 33
                                              },
                                              "text": "apply_graph"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 22,
                                                "column": 33
                                              },
                                              "end": {
                                                "row": 22,
                                                "column": 34
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 22,
                                                "column": 34
                                              },
                                              "end": {
                                                "row": 22,
                                                "column": 41
                                              },
                                              "text": "capture"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 22,
                                            "column": 41
                                          },
                                          "end": {
                                            "row": 22,
                                            "column": 44
                                          },
                                          "text": "(v)",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 22,
                                                "column": 41
                                              },
                                              "end": {
                                                "row": 22,
                                                "column": 42
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 22,
                                                "column": 42
                                              },
                                              "end": {
                                                "row": 22,
                                                "column": 43
                                              },
                                              "text": "v"
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 22,
                                                "column": 43
                                              },
                                              "end": {
                                                "row": 22,
                                                "column": 44
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 23,
                        "column": 6
                      },
                      "end": {
                        "row": 23,
                        "column": 66
                      },
                      "text": "meta_graph_lib.prune_unused_nodes(meta_graph, signature_def)",
                      "children": [
                        {
                          "type": "call",
                          "start": {
                            "row": 23,
                            "column": 6
                          },
                          "end": {
                            "row": 23,
                            "column": 66
                          },
                          "text": "meta_graph_lib.prune_unused_nodes(meta_graph, signature_def)",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 23,
                                "column": 6
                              },
                              "end": {
                                "row": 23,
                                "column": 39
                              },
                              "text": "meta_graph_lib.prune_unused_nodes",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 23,
                                    "column": 6
                                  },
                                  "end": {
                                    "row": 23,
                                    "column": 20
                                  },
                                  "text": "meta_graph_lib"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 23,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 23,
                                    "column": 21
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 23,
                                    "column": 21
                                  },
                                  "end": {
                                    "row": 23,
                                    "column": 39
                                  },
                                  "text": "prune_unused_nodes"
                                }
                              ]
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 23,
                                "column": 39
                              },
                              "end": {
                                "row": 23,
                                "column": 66
                              },
                              "text": "(meta_graph, signature_def)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 23,
                                    "column": 39
                                  },
                                  "end": {
                                    "row": 23,
                                    "column": 40
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 23,
                                    "column": 40
                                  },
                                  "end": {
                                    "row": 23,
                                    "column": 50
                                  },
                                  "text": "meta_graph"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 23,
                                    "column": 50
                                  },
                                  "end": {
                                    "row": 23,
                                    "column": 51
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 23,
                                    "column": 52
                                  },
                                  "end": {
                                    "row": 23,
                                    "column": 65
                                  },
                                  "text": "signature_def"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 23,
                                    "column": 65
                                  },
                                  "end": {
                                    "row": 23,
                                    "column": 66
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 24,
                        "column": 6
                      },
                      "end": {
                        "row": 24,
                        "column": 69
                      },
                      "text": "# After we prune the metagraph def, we might need to prune away"
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 25,
                        "column": 6
                      },
                      "end": {
                        "row": 25,
                        "column": 38
                      },
                      "text": "# infeeds which no longer exist."
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 26,
                        "column": 6
                      },
                      "end": {
                        "row": 26,
                        "column": 59
                      },
                      "text": "meta_graph_lib.prune_feed_map(meta_graph, infeed_map)",
                      "children": [
                        {
                          "type": "call",
                          "start": {
                            "row": 26,
                            "column": 6
                          },
                          "end": {
                            "row": 26,
                            "column": 59
                          },
                          "text": "meta_graph_lib.prune_feed_map(meta_graph, infeed_map)",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 26,
                                "column": 6
                              },
                              "end": {
                                "row": 26,
                                "column": 35
                              },
                              "text": "meta_graph_lib.prune_feed_map",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 26,
                                    "column": 6
                                  },
                                  "end": {
                                    "row": 26,
                                    "column": 20
                                  },
                                  "text": "meta_graph_lib"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 26,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 26,
                                    "column": 21
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 26,
                                    "column": 21
                                  },
                                  "end": {
                                    "row": 26,
                                    "column": 35
                                  },
                                  "text": "prune_feed_map"
                                }
                              ]
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 26,
                                "column": 35
                              },
                              "end": {
                                "row": 26,
                                "column": 59
                              },
                              "text": "(meta_graph, infeed_map)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 26,
                                    "column": 35
                                  },
                                  "end": {
                                    "row": 26,
                                    "column": 36
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 26,
                                    "column": 36
                                  },
                                  "end": {
                                    "row": 26,
                                    "column": 46
                                  },
                                  "text": "meta_graph"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 26,
                                    "column": 46
                                  },
                                  "end": {
                                    "row": 26,
                                    "column": 47
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 26,
                                    "column": 48
                                  },
                                  "end": {
                                    "row": 26,
                                    "column": 58
                                  },
                                  "text": "infeed_map"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 26,
                                    "column": 58
                                  },
                                  "end": {
                                    "row": 26,
                                    "column": 59
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "elif_clause",
                  "start": {
                    "row": 27,
                    "column": 4
                  },
                  "end": {
                    "row": 30,
                    "column": 40
                  },
                  "text": "elif apply_graph.building_function:\n      raise NotImplementedError(\n          \"Using TF-Hub module within a TensorFlow defined function \"\n          \"is currently not supported.\")",
                  "children": [
                    {
                      "type": "elif",
                      "start": {
                        "row": 27,
                        "column": 4
                      },
                      "end": {
                        "row": 27,
                        "column": 8
                      },
                      "text": "elif"
                    },
                    {
                      "type": "attribute",
                      "start": {
                        "row": 27,
                        "column": 9
                      },
                      "end": {
                        "row": 27,
                        "column": 38
                      },
                      "text": "apply_graph.building_function",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 27,
                            "column": 9
                          },
                          "end": {
                            "row": 27,
                            "column": 20
                          },
                          "text": "apply_graph"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 27,
                            "column": 20
                          },
                          "end": {
                            "row": 27,
                            "column": 21
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 27,
                            "column": 21
                          },
                          "end": {
                            "row": 27,
                            "column": 38
                          },
                          "text": "building_function"
                        }
                      ]
                    },
                    {
                      "type": ":",
                      "start": {
                        "row": 27,
                        "column": 38
                      },
                      "end": {
                        "row": 27,
                        "column": 39
                      },
                      "text": ":"
                    },
                    {
                      "type": "block",
                      "start": {
                        "row": 28,
                        "column": 6
                      },
                      "end": {
                        "row": 30,
                        "column": 40
                      },
                      "text": "raise NotImplementedError(\n          \"Using TF-Hub module within a TensorFlow defined function \"\n          \"is currently not supported.\")",
                      "children": [
                        {
                          "type": "raise_statement",
                          "start": {
                            "row": 28,
                            "column": 6
                          },
                          "end": {
                            "row": 30,
                            "column": 40
                          },
                          "text": "raise NotImplementedError(\n          \"Using TF-Hub module within a TensorFlow defined function \"\n          \"is currently not supported.\")",
                          "children": [
                            {
                              "type": "raise",
                              "start": {
                                "row": 28,
                                "column": 6
                              },
                              "end": {
                                "row": 28,
                                "column": 11
                              },
                              "text": "raise"
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 28,
                                "column": 12
                              },
                              "end": {
                                "row": 30,
                                "column": 40
                              },
                              "text": "NotImplementedError(\n          \"Using TF-Hub module within a TensorFlow defined function \"\n          \"is currently not supported.\")",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 28,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 28,
                                    "column": 31
                                  },
                                  "text": "NotImplementedError"
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 28,
                                    "column": 31
                                  },
                                  "end": {
                                    "row": 30,
                                    "column": 40
                                  },
                                  "text": "(\n          \"Using TF-Hub module within a TensorFlow defined function \"\n          \"is currently not supported.\")",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 28,
                                        "column": 31
                                      },
                                      "end": {
                                        "row": 28,
                                        "column": 32
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "concatenated_string",
                                      "start": {
                                        "row": 29,
                                        "column": 10
                                      },
                                      "end": {
                                        "row": 30,
                                        "column": 39
                                      },
                                      "text": "\"Using TF-Hub module within a TensorFlow defined function \"\n          \"is currently not supported.\"",
                                      "children": [
                                        {
                                          "type": "string",
                                          "start": {
                                            "row": 29,
                                            "column": 10
                                          },
                                          "end": {
                                            "row": 29,
                                            "column": 69
                                          },
                                          "text": "\"Using TF-Hub module within a TensorFlow defined function \"",
                                          "children": [
                                            {
                                              "type": "string_start",
                                              "start": {
                                                "row": 29,
                                                "column": 10
                                              },
                                              "end": {
                                                "row": 29,
                                                "column": 11
                                              },
                                              "text": "\""
                                            },
                                            {
                                              "type": "string_content",
                                              "start": {
                                                "row": 29,
                                                "column": 11
                                              },
                                              "end": {
                                                "row": 29,
                                                "column": 68
                                              },
                                              "text": "Using TF-Hub module within a TensorFlow defined function "
                                            },
                                            {
                                              "type": "string_end",
                                              "start": {
                                                "row": 29,
                                                "column": 68
                                              },
                                              "end": {
                                                "row": 29,
                                                "column": 69
                                              },
                                              "text": "\""
                                            }
                                          ]
                                        },
                                        {
                                          "type": "string",
                                          "start": {
                                            "row": 30,
                                            "column": 10
                                          },
                                          "end": {
                                            "row": 30,
                                            "column": 39
                                          },
                                          "text": "\"is currently not supported.\"",
                                          "children": [
                                            {
                                              "type": "string_start",
                                              "start": {
                                                "row": 30,
                                                "column": 10
                                              },
                                              "end": {
                                                "row": 30,
                                                "column": 11
                                              },
                                              "text": "\""
                                            },
                                            {
                                              "type": "string_content",
                                              "start": {
                                                "row": 30,
                                                "column": 11
                                              },
                                              "end": {
                                                "row": 30,
                                                "column": 38
                                              },
                                              "text": "is currently not supported."
                                            },
                                            {
                                              "type": "string_end",
                                              "start": {
                                                "row": 30,
                                                "column": 38
                                              },
                                              "end": {
                                                "row": 30,
                                                "column": 39
                                              },
                                              "text": "\""
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 30,
                                        "column": 39
                                      },
                                      "end": {
                                        "row": 30,
                                        "column": 40
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 32,
                "column": 4
              },
              "end": {
                "row": 32,
                "column": 80
              },
              "text": "# As state ops in the apply graph are unused, replace them with Placeholders"
            },
            {
              "type": "comment",
              "start": {
                "row": 33,
                "column": 4
              },
              "end": {
                "row": 33,
                "column": 72
              },
              "text": "# so that in a heirarchical instantiation, apply_graph state ops are"
            },
            {
              "type": "comment",
              "start": {
                "row": 34,
                "column": 4
              },
              "end": {
                "row": 34,
                "column": 14
              },
              "text": "# ignored."
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 35,
                "column": 4
              },
              "end": {
                "row": 36,
                "column": 80
              },
              "text": "replace_apply_state(meta_graph,\n                        list_registered_stateful_ops_without_inputs(), feed_map)",
              "children": [
                {
                  "type": "call",
                  "start": {
                    "row": 35,
                    "column": 4
                  },
                  "end": {
                    "row": 36,
                    "column": 80
                  },
                  "text": "replace_apply_state(meta_graph,\n                        list_registered_stateful_ops_without_inputs(), feed_map)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 35,
                        "column": 4
                      },
                      "end": {
                        "row": 35,
                        "column": 23
                      },
                      "text": "replace_apply_state"
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 35,
                        "column": 23
                      },
                      "end": {
                        "row": 36,
                        "column": 80
                      },
                      "text": "(meta_graph,\n                        list_registered_stateful_ops_without_inputs(), feed_map)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 35,
                            "column": 23
                          },
                          "end": {
                            "row": 35,
                            "column": 24
                          },
                          "text": "("
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 35,
                            "column": 24
                          },
                          "end": {
                            "row": 35,
                            "column": 34
                          },
                          "text": "meta_graph"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 35,
                            "column": 34
                          },
                          "end": {
                            "row": 35,
                            "column": 35
                          },
                          "text": ","
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 36,
                            "column": 24
                          },
                          "end": {
                            "row": 36,
                            "column": 69
                          },
                          "text": "list_registered_stateful_ops_without_inputs()",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 36,
                                "column": 24
                              },
                              "end": {
                                "row": 36,
                                "column": 67
                              },
                              "text": "list_registered_stateful_ops_without_inputs"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 36,
                                "column": 67
                              },
                              "end": {
                                "row": 36,
                                "column": 69
                              },
                              "text": "()",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 36,
                                    "column": 67
                                  },
                                  "end": {
                                    "row": 36,
                                    "column": 68
                                  },
                                  "text": "("
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 36,
                                    "column": 68
                                  },
                                  "end": {
                                    "row": 36,
                                    "column": 69
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 36,
                            "column": 69
                          },
                          "end": {
                            "row": 36,
                            "column": 70
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 36,
                            "column": 71
                          },
                          "end": {
                            "row": 36,
                            "column": 79
                          },
                          "text": "feed_map"
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 36,
                            "column": 79
                          },
                          "end": {
                            "row": 36,
                            "column": 80
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 37,
                "column": 4
              },
              "end": {
                "row": 37,
                "column": 31
              },
              "text": "feed_map.update(infeed_map)",
              "children": [
                {
                  "type": "call",
                  "start": {
                    "row": 37,
                    "column": 4
                  },
                  "end": {
                    "row": 37,
                    "column": 31
                  },
                  "text": "feed_map.update(infeed_map)",
                  "children": [
                    {
                      "type": "attribute",
                      "start": {
                        "row": 37,
                        "column": 4
                      },
                      "end": {
                        "row": 37,
                        "column": 19
                      },
                      "text": "feed_map.update",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 37,
                            "column": 4
                          },
                          "end": {
                            "row": 37,
                            "column": 12
                          },
                          "text": "feed_map"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 37,
                            "column": 12
                          },
                          "end": {
                            "row": 37,
                            "column": 13
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 37,
                            "column": 13
                          },
                          "end": {
                            "row": 37,
                            "column": 19
                          },
                          "text": "update"
                        }
                      ]
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 37,
                        "column": 19
                      },
                      "end": {
                        "row": 37,
                        "column": 31
                      },
                      "text": "(infeed_map)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 37,
                            "column": 19
                          },
                          "end": {
                            "row": 37,
                            "column": 20
                          },
                          "text": "("
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 37,
                            "column": 20
                          },
                          "end": {
                            "row": 37,
                            "column": 30
                          },
                          "text": "infeed_map"
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 37,
                            "column": 30
                          },
                          "end": {
                            "row": 37,
                            "column": 31
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 39,
                "column": 4
              },
              "end": {
                "row": 39,
                "column": 78
              },
              "text": "# Make state tensors enter the current context. This way the Module can be"
            },
            {
              "type": "comment",
              "start": {
                "row": 40,
                "column": 4
              },
              "end": {
                "row": 40,
                "column": 67
              },
              "text": "# applied inside a control flow structure such as a while_loop."
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 41,
                "column": 4
              },
              "end": {
                "row": 41,
                "column": 58
              },
              "text": "control_flow = apply_graph._get_control_flow_context()",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 41,
                    "column": 4
                  },
                  "end": {
                    "row": 41,
                    "column": 58
                  },
                  "text": "control_flow = apply_graph._get_control_flow_context()",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 41,
                        "column": 4
                      },
                      "end": {
                        "row": 41,
                        "column": 16
                      },
                      "text": "control_flow"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 41,
                        "column": 17
                      },
                      "end": {
                        "row": 41,
                        "column": 18
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 41,
                        "column": 19
                      },
                      "end": {
                        "row": 41,
                        "column": 58
                      },
                      "text": "apply_graph._get_control_flow_context()",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 41,
                            "column": 19
                          },
                          "end": {
                            "row": 41,
                            "column": 56
                          },
                          "text": "apply_graph._get_control_flow_context",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 41,
                                "column": 19
                              },
                              "end": {
                                "row": 41,
                                "column": 30
                              },
                              "text": "apply_graph"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 41,
                                "column": 30
                              },
                              "end": {
                                "row": 41,
                                "column": 31
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 41,
                                "column": 31
                              },
                              "end": {
                                "row": 41,
                                "column": 56
                              },
                              "text": "_get_control_flow_context"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 41,
                            "column": 56
                          },
                          "end": {
                            "row": 41,
                            "column": 58
                          },
                          "text": "()",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 41,
                                "column": 56
                              },
                              "end": {
                                "row": 41,
                                "column": 57
                              },
                              "text": "("
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 41,
                                "column": 57
                              },
                              "end": {
                                "row": 41,
                                "column": 58
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 41,
                "column": 60
              },
              "end": {
                "row": 41,
                "column": 94
              },
              "text": "# pylint: disable=protected-access"
            },
            {
              "type": "if_statement",
              "start": {
                "row": 42,
                "column": 4
              },
              "end": {
                "row": 44,
                "column": 52
              },
              "text": "if control_flow:\n      for key, value in sorted(feed_map.items()):\n        feed_map[key] = control_flow.AddValue(value)",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 42,
                    "column": 4
                  },
                  "end": {
                    "row": 42,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 42,
                    "column": 7
                  },
                  "end": {
                    "row": 42,
                    "column": 19
                  },
                  "text": "control_flow"
                },
                {
                  "type": ":",
                  "start": {
                    "row": 42,
                    "column": 19
                  },
                  "end": {
                    "row": 42,
                    "column": 20
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 43,
                    "column": 6
                  },
                  "end": {
                    "row": 44,
                    "column": 52
                  },
                  "text": "for key, value in sorted(feed_map.items()):\n        feed_map[key] = control_flow.AddValue(value)",
                  "children": [
                    {
                      "type": "for_statement",
                      "start": {
                        "row": 43,
                        "column": 6
                      },
                      "end": {
                        "row": 44,
                        "column": 52
                      },
                      "text": "for key, value in sorted(feed_map.items()):\n        feed_map[key] = control_flow.AddValue(value)",
                      "children": [
                        {
                          "type": "for",
                          "start": {
                            "row": 43,
                            "column": 6
                          },
                          "end": {
                            "row": 43,
                            "column": 9
                          },
                          "text": "for"
                        },
                        {
                          "type": "pattern_list",
                          "start": {
                            "row": 43,
                            "column": 10
                          },
                          "end": {
                            "row": 43,
                            "column": 20
                          },
                          "text": "key, value",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 43,
                                "column": 10
                              },
                              "end": {
                                "row": 43,
                                "column": 13
                              },
                              "text": "key"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 43,
                                "column": 13
                              },
                              "end": {
                                "row": 43,
                                "column": 14
                              },
                              "text": ","
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 43,
                                "column": 15
                              },
                              "end": {
                                "row": 43,
                                "column": 20
                              },
                              "text": "value"
                            }
                          ]
                        },
                        {
                          "type": "in",
                          "start": {
                            "row": 43,
                            "column": 21
                          },
                          "end": {
                            "row": 43,
                            "column": 23
                          },
                          "text": "in"
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 43,
                            "column": 24
                          },
                          "end": {
                            "row": 43,
                            "column": 48
                          },
                          "text": "sorted(feed_map.items())",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 43,
                                "column": 24
                              },
                              "end": {
                                "row": 43,
                                "column": 30
                              },
                              "text": "sorted"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 43,
                                "column": 30
                              },
                              "end": {
                                "row": 43,
                                "column": 48
                              },
                              "text": "(feed_map.items())",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 43,
                                    "column": 30
                                  },
                                  "end": {
                                    "row": 43,
                                    "column": 31
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "call",
                                  "start": {
                                    "row": 43,
                                    "column": 31
                                  },
                                  "end": {
                                    "row": 43,
                                    "column": 47
                                  },
                                  "text": "feed_map.items()",
                                  "children": [
                                    {
                                      "type": "attribute",
                                      "start": {
                                        "row": 43,
                                        "column": 31
                                      },
                                      "end": {
                                        "row": 43,
                                        "column": 45
                                      },
                                      "text": "feed_map.items",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 43,
                                            "column": 31
                                          },
                                          "end": {
                                            "row": 43,
                                            "column": 39
                                          },
                                          "text": "feed_map"
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 43,
                                            "column": 39
                                          },
                                          "end": {
                                            "row": 43,
                                            "column": 40
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 43,
                                            "column": 40
                                          },
                                          "end": {
                                            "row": 43,
                                            "column": 45
                                          },
                                          "text": "items"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "argument_list",
                                      "start": {
                                        "row": 43,
                                        "column": 45
                                      },
                                      "end": {
                                        "row": 43,
                                        "column": 47
                                      },
                                      "text": "()",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 43,
                                            "column": 45
                                          },
                                          "end": {
                                            "row": 43,
                                            "column": 46
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 43,
                                            "column": 46
                                          },
                                          "end": {
                                            "row": 43,
                                            "column": 47
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 43,
                                    "column": 47
                                  },
                                  "end": {
                                    "row": 43,
                                    "column": 48
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ":",
                          "start": {
                            "row": 43,
                            "column": 48
                          },
                          "end": {
                            "row": 43,
                            "column": 49
                          },
                          "text": ":"
                        },
                        {
                          "type": "block",
                          "start": {
                            "row": 44,
                            "column": 8
                          },
                          "end": {
                            "row": 44,
                            "column": 52
                          },
                          "text": "feed_map[key] = control_flow.AddValue(value)",
                          "children": [
                            {
                              "type": "expression_statement",
                              "start": {
                                "row": 44,
                                "column": 8
                              },
                              "end": {
                                "row": 44,
                                "column": 52
                              },
                              "text": "feed_map[key] = control_flow.AddValue(value)",
                              "children": [
                                {
                                  "type": "assignment",
                                  "start": {
                                    "row": 44,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 44,
                                    "column": 52
                                  },
                                  "text": "feed_map[key] = control_flow.AddValue(value)",
                                  "children": [
                                    {
                                      "type": "subscript",
                                      "start": {
                                        "row": 44,
                                        "column": 8
                                      },
                                      "end": {
                                        "row": 44,
                                        "column": 21
                                      },
                                      "text": "feed_map[key]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 44,
                                            "column": 8
                                          },
                                          "end": {
                                            "row": 44,
                                            "column": 16
                                          },
                                          "text": "feed_map"
                                        },
                                        {
                                          "type": "[",
                                          "start": {
                                            "row": 44,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 44,
                                            "column": 17
                                          },
                                          "text": "["
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 44,
                                            "column": 17
                                          },
                                          "end": {
                                            "row": 44,
                                            "column": 20
                                          },
                                          "text": "key"
                                        },
                                        {
                                          "type": "]",
                                          "start": {
                                            "row": 44,
                                            "column": 20
                                          },
                                          "end": {
                                            "row": 44,
                                            "column": 21
                                          },
                                          "text": "]"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "=",
                                      "start": {
                                        "row": 44,
                                        "column": 22
                                      },
                                      "end": {
                                        "row": 44,
                                        "column": 23
                                      },
                                      "text": "="
                                    },
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 44,
                                        "column": 24
                                      },
                                      "end": {
                                        "row": 44,
                                        "column": 52
                                      },
                                      "text": "control_flow.AddValue(value)",
                                      "children": [
                                        {
                                          "type": "attribute",
                                          "start": {
                                            "row": 44,
                                            "column": 24
                                          },
                                          "end": {
                                            "row": 44,
                                            "column": 45
                                          },
                                          "text": "control_flow.AddValue",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 44,
                                                "column": 24
                                              },
                                              "end": {
                                                "row": 44,
                                                "column": 36
                                              },
                                              "text": "control_flow"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 44,
                                                "column": 36
                                              },
                                              "end": {
                                                "row": 44,
                                                "column": 37
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 44,
                                                "column": 37
                                              },
                                              "end": {
                                                "row": 44,
                                                "column": 45
                                              },
                                              "text": "AddValue"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 44,
                                            "column": 45
                                          },
                                          "end": {
                                            "row": 44,
                                            "column": 52
                                          },
                                          "text": "(value)",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 44,
                                                "column": 45
                                              },
                                              "end": {
                                                "row": 44,
                                                "column": 46
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 44,
                                                "column": 46
                                              },
                                              "end": {
                                                "row": 44,
                                                "column": 51
                                              },
                                              "text": "value"
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 44,
                                                "column": 51
                                              },
                                              "end": {
                                                "row": 44,
                                                "column": 52
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 46,
                "column": 4
              },
              "end": {
                "row": 46,
                "column": 79
              },
              "text": "# Don't mark the name as used at this point - import_scoped_meta_graph will"
            },
            {
              "type": "comment",
              "start": {
                "row": 47,
                "column": 4
              },
              "end": {
                "row": 47,
                "column": 21
              },
              "text": "# start using it."
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 48,
                "column": 4
              },
              "end": {
                "row": 48,
                "column": 75
              },
              "text": "absolute_scope_name = apply_graph.unique_name(name, mark_as_used=False)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 48,
                    "column": 4
                  },
                  "end": {
                    "row": 48,
                    "column": 75
                  },
                  "text": "absolute_scope_name = apply_graph.unique_name(name, mark_as_used=False)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 48,
                        "column": 4
                      },
                      "end": {
                        "row": 48,
                        "column": 23
                      },
                      "text": "absolute_scope_name"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 48,
                        "column": 24
                      },
                      "end": {
                        "row": 48,
                        "column": 25
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 48,
                        "column": 26
                      },
                      "end": {
                        "row": 48,
                        "column": 75
                      },
                      "text": "apply_graph.unique_name(name, mark_as_used=False)",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 48,
                            "column": 26
                          },
                          "end": {
                            "row": 48,
                            "column": 49
                          },
                          "text": "apply_graph.unique_name",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 48,
                                "column": 26
                              },
                              "end": {
                                "row": 48,
                                "column": 37
                              },
                              "text": "apply_graph"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 48,
                                "column": 37
                              },
                              "end": {
                                "row": 48,
                                "column": 38
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 48,
                                "column": 38
                              },
                              "end": {
                                "row": 48,
                                "column": 49
                              },
                              "text": "unique_name"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 48,
                            "column": 49
                          },
                          "end": {
                            "row": 48,
                            "column": 75
                          },
                          "text": "(name, mark_as_used=False)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 48,
                                "column": 49
                              },
                              "end": {
                                "row": 48,
                                "column": 50
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 48,
                                "column": 50
                              },
                              "end": {
                                "row": 48,
                                "column": 54
                              },
                              "text": "name"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 48,
                                "column": 54
                              },
                              "end": {
                                "row": 48,
                                "column": 55
                              },
                              "text": ","
                            },
                            {
                              "type": "keyword_argument",
                              "start": {
                                "row": 48,
                                "column": 56
                              },
                              "end": {
                                "row": 48,
                                "column": 74
                              },
                              "text": "mark_as_used=False",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 48,
                                    "column": 56
                                  },
                                  "end": {
                                    "row": 48,
                                    "column": 68
                                  },
                                  "text": "mark_as_used"
                                },
                                {
                                  "type": "=",
                                  "start": {
                                    "row": 48,
                                    "column": 68
                                  },
                                  "end": {
                                    "row": 48,
                                    "column": 69
                                  },
                                  "text": "="
                                },
                                {
                                  "type": "false",
                                  "start": {
                                    "row": 48,
                                    "column": 69
                                  },
                                  "end": {
                                    "row": 48,
                                    "column": 74
                                  },
                                  "text": "False"
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 48,
                                "column": 74
                              },
                              "end": {
                                "row": 48,
                                "column": 75
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 49,
                "column": 4
              },
              "end": {
                "row": 49,
                "column": 60
              },
              "text": "relative_scope_name = absolute_scope_name.split(\"/\")[-1]",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 49,
                    "column": 4
                  },
                  "end": {
                    "row": 49,
                    "column": 60
                  },
                  "text": "relative_scope_name = absolute_scope_name.split(\"/\")[-1]",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 49,
                        "column": 4
                      },
                      "end": {
                        "row": 49,
                        "column": 23
                      },
                      "text": "relative_scope_name"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 49,
                        "column": 24
                      },
                      "end": {
                        "row": 49,
                        "column": 25
                      },
                      "text": "="
                    },
                    {
                      "type": "subscript",
                      "start": {
                        "row": 49,
                        "column": 26
                      },
                      "end": {
                        "row": 49,
                        "column": 60
                      },
                      "text": "absolute_scope_name.split(\"/\")[-1]",
                      "children": [
                        {
                          "type": "call",
                          "start": {
                            "row": 49,
                            "column": 26
                          },
                          "end": {
                            "row": 49,
                            "column": 56
                          },
                          "text": "absolute_scope_name.split(\"/\")",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 49,
                                "column": 26
                              },
                              "end": {
                                "row": 49,
                                "column": 51
                              },
                              "text": "absolute_scope_name.split",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 49,
                                    "column": 26
                                  },
                                  "end": {
                                    "row": 49,
                                    "column": 45
                                  },
                                  "text": "absolute_scope_name"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 49,
                                    "column": 45
                                  },
                                  "end": {
                                    "row": 49,
                                    "column": 46
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 49,
                                    "column": 46
                                  },
                                  "end": {
                                    "row": 49,
                                    "column": 51
                                  },
                                  "text": "split"
                                }
                              ]
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 49,
                                "column": 51
                              },
                              "end": {
                                "row": 49,
                                "column": 56
                              },
                              "text": "(\"/\")",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 49,
                                    "column": 51
                                  },
                                  "end": {
                                    "row": 49,
                                    "column": 52
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "string",
                                  "start": {
                                    "row": 49,
                                    "column": 52
                                  },
                                  "end": {
                                    "row": 49,
                                    "column": 55
                                  },
                                  "text": "\"/\"",
                                  "children": [
                                    {
                                      "type": "string_start",
                                      "start": {
                                        "row": 49,
                                        "column": 52
                                      },
                                      "end": {
                                        "row": 49,
                                        "column": 53
                                      },
                                      "text": "\""
                                    },
                                    {
                                      "type": "string_content",
                                      "start": {
                                        "row": 49,
                                        "column": 53
                                      },
                                      "end": {
                                        "row": 49,
                                        "column": 54
                                      },
                                      "text": "/"
                                    },
                                    {
                                      "type": "string_end",
                                      "start": {
                                        "row": 49,
                                        "column": 54
                                      },
                                      "end": {
                                        "row": 49,
                                        "column": 55
                                      },
                                      "text": "\""
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 49,
                                    "column": 55
                                  },
                                  "end": {
                                    "row": 49,
                                    "column": 56
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "[",
                          "start": {
                            "row": 49,
                            "column": 56
                          },
                          "end": {
                            "row": 49,
                            "column": 57
                          },
                          "text": "["
                        },
                        {
                          "type": "unary_operator",
                          "start": {
                            "row": 49,
                            "column": 57
                          },
                          "end": {
                            "row": 49,
                            "column": 59
                          },
                          "text": "-1",
                          "children": [
                            {
                              "type": "-",
                              "start": {
                                "row": 49,
                                "column": 57
                              },
                              "end": {
                                "row": 49,
                                "column": 58
                              },
                              "text": "-"
                            },
                            {
                              "type": "integer",
                              "start": {
                                "row": 49,
                                "column": 58
                              },
                              "end": {
                                "row": 49,
                                "column": 59
                              },
                              "text": "1"
                            }
                          ]
                        },
                        {
                          "type": "]",
                          "start": {
                            "row": 49,
                            "column": 59
                          },
                          "end": {
                            "row": 49,
                            "column": 60
                          },
                          "text": "]"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 51,
                "column": 4
              },
              "end": {
                "row": 60,
                "column": 5
              },
              "text": "import_collections = [\n        # In most cases ASSET_FILEPATHS are only used for the TABLE_INITIALIZERS\n        # ops, however one could create a graph that uses an asset at any other\n        # time. As so everytime we bring the tensor with that has the asset\n        # filename we must annotate it as so, so later re-exports have that\n        # semantic information and can handle it.\n        tf_v1.GraphKeys.ASSET_FILEPATHS,\n        tf_v1.GraphKeys.COND_CONTEXT,\n        tf_v1.GraphKeys.WHILE_CONTEXT,\n    ]",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 51,
                    "column": 4
                  },
                  "end": {
                    "row": 60,
                    "column": 5
                  },
                  "text": "import_collections = [\n        # In most cases ASSET_FILEPATHS are only used for the TABLE_INITIALIZERS\n        # ops, however one could create a graph that uses an asset at any other\n        # time. As so everytime we bring the tensor with that has the asset\n        # filename we must annotate it as so, so later re-exports have that\n        # semantic information and can handle it.\n        tf_v1.GraphKeys.ASSET_FILEPATHS,\n        tf_v1.GraphKeys.COND_CONTEXT,\n        tf_v1.GraphKeys.WHILE_CONTEXT,\n    ]",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 51,
                        "column": 4
                      },
                      "end": {
                        "row": 51,
                        "column": 22
                      },
                      "text": "import_collections"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 51,
                        "column": 23
                      },
                      "end": {
                        "row": 51,
                        "column": 24
                      },
                      "text": "="
                    },
                    {
                      "type": "list",
                      "start": {
                        "row": 51,
                        "column": 25
                      },
                      "end": {
                        "row": 60,
                        "column": 5
                      },
                      "text": "[\n        # In most cases ASSET_FILEPATHS are only used for the TABLE_INITIALIZERS\n        # ops, however one could create a graph that uses an asset at any other\n        # time. As so everytime we bring the tensor with that has the asset\n        # filename we must annotate it as so, so later re-exports have that\n        # semantic information and can handle it.\n        tf_v1.GraphKeys.ASSET_FILEPATHS,\n        tf_v1.GraphKeys.COND_CONTEXT,\n        tf_v1.GraphKeys.WHILE_CONTEXT,\n    ]",
                      "children": [
                        {
                          "type": "[",
                          "start": {
                            "row": 51,
                            "column": 25
                          },
                          "end": {
                            "row": 51,
                            "column": 26
                          },
                          "text": "["
                        },
                        {
                          "type": "comment",
                          "start": {
                            "row": 52,
                            "column": 8
                          },
                          "end": {
                            "row": 52,
                            "column": 80
                          },
                          "text": "# In most cases ASSET_FILEPATHS are only used for the TABLE_INITIALIZERS"
                        },
                        {
                          "type": "comment",
                          "start": {
                            "row": 53,
                            "column": 8
                          },
                          "end": {
                            "row": 53,
                            "column": 79
                          },
                          "text": "# ops, however one could create a graph that uses an asset at any other"
                        },
                        {
                          "type": "comment",
                          "start": {
                            "row": 54,
                            "column": 8
                          },
                          "end": {
                            "row": 54,
                            "column": 75
                          },
                          "text": "# time. As so everytime we bring the tensor with that has the asset"
                        },
                        {
                          "type": "comment",
                          "start": {
                            "row": 55,
                            "column": 8
                          },
                          "end": {
                            "row": 55,
                            "column": 75
                          },
                          "text": "# filename we must annotate it as so, so later re-exports have that"
                        },
                        {
                          "type": "comment",
                          "start": {
                            "row": 56,
                            "column": 8
                          },
                          "end": {
                            "row": 56,
                            "column": 49
                          },
                          "text": "# semantic information and can handle it."
                        },
                        {
                          "type": "attribute",
                          "start": {
                            "row": 57,
                            "column": 8
                          },
                          "end": {
                            "row": 57,
                            "column": 39
                          },
                          "text": "tf_v1.GraphKeys.ASSET_FILEPATHS",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 57,
                                "column": 8
                              },
                              "end": {
                                "row": 57,
                                "column": 23
                              },
                              "text": "tf_v1.GraphKeys",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 57,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 57,
                                    "column": 13
                                  },
                                  "text": "tf_v1"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 57,
                                    "column": 13
                                  },
                                  "end": {
                                    "row": 57,
                                    "column": 14
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 57,
                                    "column": 14
                                  },
                                  "end": {
                                    "row": 57,
                                    "column": 23
                                  },
                                  "text": "GraphKeys"
                                }
                              ]
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 57,
                                "column": 23
                              },
                              "end": {
                                "row": 57,
                                "column": 24
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 57,
                                "column": 24
                              },
                              "end": {
                                "row": 57,
                                "column": 39
                              },
                              "text": "ASSET_FILEPATHS"
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 57,
                            "column": 39
                          },
                          "end": {
                            "row": 57,
                            "column": 40
                          },
                          "text": ","
                        },
                        {
                          "type": "attribute",
                          "start": {
                            "row": 58,
                            "column": 8
                          },
                          "end": {
                            "row": 58,
                            "column": 36
                          },
                          "text": "tf_v1.GraphKeys.COND_CONTEXT",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 58,
                                "column": 8
                              },
                              "end": {
                                "row": 58,
                                "column": 23
                              },
                              "text": "tf_v1.GraphKeys",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 58,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 58,
                                    "column": 13
                                  },
                                  "text": "tf_v1"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 58,
                                    "column": 13
                                  },
                                  "end": {
                                    "row": 58,
                                    "column": 14
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 58,
                                    "column": 14
                                  },
                                  "end": {
                                    "row": 58,
                                    "column": 23
                                  },
                                  "text": "GraphKeys"
                                }
                              ]
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 58,
                                "column": 23
                              },
                              "end": {
                                "row": 58,
                                "column": 24
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 58,
                                "column": 24
                              },
                              "end": {
                                "row": 58,
                                "column": 36
                              },
                              "text": "COND_CONTEXT"
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 58,
                            "column": 36
                          },
                          "end": {
                            "row": 58,
                            "column": 37
                          },
                          "text": ","
                        },
                        {
                          "type": "attribute",
                          "start": {
                            "row": 59,
                            "column": 8
                          },
                          "end": {
                            "row": 59,
                            "column": 37
                          },
                          "text": "tf_v1.GraphKeys.WHILE_CONTEXT",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 59,
                                "column": 8
                              },
                              "end": {
                                "row": 59,
                                "column": 23
                              },
                              "text": "tf_v1.GraphKeys",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 59,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 59,
                                    "column": 13
                                  },
                                  "text": "tf_v1"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 59,
                                    "column": 13
                                  },
                                  "end": {
                                    "row": 59,
                                    "column": 14
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 59,
                                    "column": 14
                                  },
                                  "end": {
                                    "row": 59,
                                    "column": 23
                                  },
                                  "text": "GraphKeys"
                                }
                              ]
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 59,
                                "column": 23
                              },
                              "end": {
                                "row": 59,
                                "column": 24
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 59,
                                "column": 24
                              },
                              "end": {
                                "row": 59,
                                "column": 37
                              },
                              "text": "WHILE_CONTEXT"
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 59,
                            "column": 37
                          },
                          "end": {
                            "row": 59,
                            "column": 38
                          },
                          "text": ","
                        },
                        {
                          "type": "]",
                          "start": {
                            "row": 60,
                            "column": 4
                          },
                          "end": {
                            "row": 60,
                            "column": 5
                          },
                          "text": "]"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 61,
                "column": 4
              },
              "end": {
                "row": 62,
                "column": 61
              },
              "text": "if self._trainable:\n      import_collections.extend([tf_v1.GraphKeys.UPDATE_OPS])",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 61,
                    "column": 4
                  },
                  "end": {
                    "row": 61,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "attribute",
                  "start": {
                    "row": 61,
                    "column": 7
                  },
                  "end": {
                    "row": 61,
                    "column": 22
                  },
                  "text": "self._trainable",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 61,
                        "column": 7
                      },
                      "end": {
                        "row": 61,
                        "column": 11
                      },
                      "text": "self"
                    },
                    {
                      "type": ".",
                      "start": {
                        "row": 61,
                        "column": 11
                      },
                      "end": {
                        "row": 61,
                        "column": 12
                      },
                      "text": "."
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 61,
                        "column": 12
                      },
                      "end": {
                        "row": 61,
                        "column": 22
                      },
                      "text": "_trainable"
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 61,
                    "column": 22
                  },
                  "end": {
                    "row": 61,
                    "column": 23
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 62,
                    "column": 6
                  },
                  "end": {
                    "row": 62,
                    "column": 61
                  },
                  "text": "import_collections.extend([tf_v1.GraphKeys.UPDATE_OPS])",
                  "children": [
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 62,
                        "column": 6
                      },
                      "end": {
                        "row": 62,
                        "column": 61
                      },
                      "text": "import_collections.extend([tf_v1.GraphKeys.UPDATE_OPS])",
                      "children": [
                        {
                          "type": "call",
                          "start": {
                            "row": 62,
                            "column": 6
                          },
                          "end": {
                            "row": 62,
                            "column": 61
                          },
                          "text": "import_collections.extend([tf_v1.GraphKeys.UPDATE_OPS])",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 62,
                                "column": 6
                              },
                              "end": {
                                "row": 62,
                                "column": 31
                              },
                              "text": "import_collections.extend",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 62,
                                    "column": 6
                                  },
                                  "end": {
                                    "row": 62,
                                    "column": 24
                                  },
                                  "text": "import_collections"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 62,
                                    "column": 24
                                  },
                                  "end": {
                                    "row": 62,
                                    "column": 25
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 62,
                                    "column": 25
                                  },
                                  "end": {
                                    "row": 62,
                                    "column": 31
                                  },
                                  "text": "extend"
                                }
                              ]
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 62,
                                "column": 31
                              },
                              "end": {
                                "row": 62,
                                "column": 61
                              },
                              "text": "([tf_v1.GraphKeys.UPDATE_OPS])",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 62,
                                    "column": 31
                                  },
                                  "end": {
                                    "row": 62,
                                    "column": 32
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "list",
                                  "start": {
                                    "row": 62,
                                    "column": 32
                                  },
                                  "end": {
                                    "row": 62,
                                    "column": 60
                                  },
                                  "text": "[tf_v1.GraphKeys.UPDATE_OPS]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start": {
                                        "row": 62,
                                        "column": 32
                                      },
                                      "end": {
                                        "row": 62,
                                        "column": 33
                                      },
                                      "text": "["
                                    },
                                    {
                                      "type": "attribute",
                                      "start": {
                                        "row": 62,
                                        "column": 33
                                      },
                                      "end": {
                                        "row": 62,
                                        "column": 59
                                      },
                                      "text": "tf_v1.GraphKeys.UPDATE_OPS",
                                      "children": [
                                        {
                                          "type": "attribute",
                                          "start": {
                                            "row": 62,
                                            "column": 33
                                          },
                                          "end": {
                                            "row": 62,
                                            "column": 48
                                          },
                                          "text": "tf_v1.GraphKeys",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 62,
                                                "column": 33
                                              },
                                              "end": {
                                                "row": 62,
                                                "column": 38
                                              },
                                              "text": "tf_v1"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 62,
                                                "column": 38
                                              },
                                              "end": {
                                                "row": 62,
                                                "column": 39
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 62,
                                                "column": 39
                                              },
                                              "end": {
                                                "row": 62,
                                                "column": 48
                                              },
                                              "text": "GraphKeys"
                                            }
                                          ]
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 62,
                                            "column": 48
                                          },
                                          "end": {
                                            "row": 62,
                                            "column": 49
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 62,
                                            "column": 49
                                          },
                                          "end": {
                                            "row": 62,
                                            "column": 59
                                          },
                                          "text": "UPDATE_OPS"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "]",
                                      "start": {
                                        "row": 62,
                                        "column": 59
                                      },
                                      "end": {
                                        "row": 62,
                                        "column": 60
                                      },
                                      "text": "]"
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 62,
                                    "column": 60
                                  },
                                  "end": {
                                    "row": 62,
                                    "column": 61
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 64,
                "column": 4
              },
              "end": {
                "row": 64,
                "column": 69
              },
              "text": "meta_graph_lib.filter_collections(meta_graph, import_collections)",
              "children": [
                {
                  "type": "call",
                  "start": {
                    "row": 64,
                    "column": 4
                  },
                  "end": {
                    "row": 64,
                    "column": 69
                  },
                  "text": "meta_graph_lib.filter_collections(meta_graph, import_collections)",
                  "children": [
                    {
                      "type": "attribute",
                      "start": {
                        "row": 64,
                        "column": 4
                      },
                      "end": {
                        "row": 64,
                        "column": 37
                      },
                      "text": "meta_graph_lib.filter_collections",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 64,
                            "column": 4
                          },
                          "end": {
                            "row": 64,
                            "column": 18
                          },
                          "text": "meta_graph_lib"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 64,
                            "column": 18
                          },
                          "end": {
                            "row": 64,
                            "column": 19
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 64,
                            "column": 19
                          },
                          "end": {
                            "row": 64,
                            "column": 37
                          },
                          "text": "filter_collections"
                        }
                      ]
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 64,
                        "column": 37
                      },
                      "end": {
                        "row": 64,
                        "column": 69
                      },
                      "text": "(meta_graph, import_collections)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 64,
                            "column": 37
                          },
                          "end": {
                            "row": 64,
                            "column": 38
                          },
                          "text": "("
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 64,
                            "column": 38
                          },
                          "end": {
                            "row": 64,
                            "column": 48
                          },
                          "text": "meta_graph"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 64,
                            "column": 48
                          },
                          "end": {
                            "row": 64,
                            "column": 49
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 64,
                            "column": 50
                          },
                          "end": {
                            "row": 64,
                            "column": 68
                          },
                          "text": "import_collections"
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 64,
                            "column": 68
                          },
                          "end": {
                            "row": 64,
                            "column": 69
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 65,
                "column": 4
              },
              "end": {
                "row": 66,
                "column": 69
              },
              "text": "meta_graph_lib.prefix_shared_name_attributes(meta_graph,\n                                                 absolute_scope_name)",
              "children": [
                {
                  "type": "call",
                  "start": {
                    "row": 65,
                    "column": 4
                  },
                  "end": {
                    "row": 66,
                    "column": 69
                  },
                  "text": "meta_graph_lib.prefix_shared_name_attributes(meta_graph,\n                                                 absolute_scope_name)",
                  "children": [
                    {
                      "type": "attribute",
                      "start": {
                        "row": 65,
                        "column": 4
                      },
                      "end": {
                        "row": 65,
                        "column": 48
                      },
                      "text": "meta_graph_lib.prefix_shared_name_attributes",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 65,
                            "column": 4
                          },
                          "end": {
                            "row": 65,
                            "column": 18
                          },
                          "text": "meta_graph_lib"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 65,
                            "column": 18
                          },
                          "end": {
                            "row": 65,
                            "column": 19
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 65,
                            "column": 19
                          },
                          "end": {
                            "row": 65,
                            "column": 48
                          },
                          "text": "prefix_shared_name_attributes"
                        }
                      ]
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 65,
                        "column": 48
                      },
                      "end": {
                        "row": 66,
                        "column": 69
                      },
                      "text": "(meta_graph,\n                                                 absolute_scope_name)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 65,
                            "column": 48
                          },
                          "end": {
                            "row": 65,
                            "column": 49
                          },
                          "text": "("
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 65,
                            "column": 49
                          },
                          "end": {
                            "row": 65,
                            "column": 59
                          },
                          "text": "meta_graph"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 65,
                            "column": 59
                          },
                          "end": {
                            "row": 65,
                            "column": 60
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 66,
                            "column": 49
                          },
                          "end": {
                            "row": 66,
                            "column": 68
                          },
                          "text": "absolute_scope_name"
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 66,
                            "column": 68
                          },
                          "end": {
                            "row": 66,
                            "column": 69
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 67,
                "column": 4
              },
              "end": {
                "row": 70,
                "column": 23
              },
              "text": "if len(meta_graph.collection_def) and self._is_tpu_graph_function():\n      raise NotImplementedError(\n          \"Applying modules with collections inside TPU functions is not \"\n          \"supported.\")",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 67,
                    "column": 4
                  },
                  "end": {
                    "row": 67,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "boolean_operator",
                  "start": {
                    "row": 67,
                    "column": 7
                  },
                  "end": {
                    "row": 67,
                    "column": 71
                  },
                  "text": "len(meta_graph.collection_def) and self._is_tpu_graph_function()",
                  "children": [
                    {
                      "type": "call",
                      "start": {
                        "row": 67,
                        "column": 7
                      },
                      "end": {
                        "row": 67,
                        "column": 37
                      },
                      "text": "len(meta_graph.collection_def)",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 67,
                            "column": 7
                          },
                          "end": {
                            "row": 67,
                            "column": 10
                          },
                          "text": "len"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 67,
                            "column": 10
                          },
                          "end": {
                            "row": 67,
                            "column": 37
                          },
                          "text": "(meta_graph.collection_def)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 67,
                                "column": 10
                              },
                              "end": {
                                "row": 67,
                                "column": 11
                              },
                              "text": "("
                            },
                            {
                              "type": "attribute",
                              "start": {
                                "row": 67,
                                "column": 11
                              },
                              "end": {
                                "row": 67,
                                "column": 36
                              },
                              "text": "meta_graph.collection_def",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 67,
                                    "column": 11
                                  },
                                  "end": {
                                    "row": 67,
                                    "column": 21
                                  },
                                  "text": "meta_graph"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 67,
                                    "column": 21
                                  },
                                  "end": {
                                    "row": 67,
                                    "column": 22
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 67,
                                    "column": 22
                                  },
                                  "end": {
                                    "row": 67,
                                    "column": 36
                                  },
                                  "text": "collection_def"
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 67,
                                "column": 36
                              },
                              "end": {
                                "row": 67,
                                "column": 37
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "and",
                      "start": {
                        "row": 67,
                        "column": 38
                      },
                      "end": {
                        "row": 67,
                        "column": 41
                      },
                      "text": "and"
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 67,
                        "column": 42
                      },
                      "end": {
                        "row": 67,
                        "column": 71
                      },
                      "text": "self._is_tpu_graph_function()",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 67,
                            "column": 42
                          },
                          "end": {
                            "row": 67,
                            "column": 69
                          },
                          "text": "self._is_tpu_graph_function",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 67,
                                "column": 42
                              },
                              "end": {
                                "row": 67,
                                "column": 46
                              },
                              "text": "self"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 67,
                                "column": 46
                              },
                              "end": {
                                "row": 67,
                                "column": 47
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 67,
                                "column": 47
                              },
                              "end": {
                                "row": 67,
                                "column": 69
                              },
                              "text": "_is_tpu_graph_function"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 67,
                            "column": 69
                          },
                          "end": {
                            "row": 67,
                            "column": 71
                          },
                          "text": "()",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 67,
                                "column": 69
                              },
                              "end": {
                                "row": 67,
                                "column": 70
                              },
                              "text": "("
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 67,
                                "column": 70
                              },
                              "end": {
                                "row": 67,
                                "column": 71
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 67,
                    "column": 71
                  },
                  "end": {
                    "row": 67,
                    "column": 72
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 68,
                    "column": 6
                  },
                  "end": {
                    "row": 70,
                    "column": 23
                  },
                  "text": "raise NotImplementedError(\n          \"Applying modules with collections inside TPU functions is not \"\n          \"supported.\")",
                  "children": [
                    {
                      "type": "raise_statement",
                      "start": {
                        "row": 68,
                        "column": 6
                      },
                      "end": {
                        "row": 70,
                        "column": 23
                      },
                      "text": "raise NotImplementedError(\n          \"Applying modules with collections inside TPU functions is not \"\n          \"supported.\")",
                      "children": [
                        {
                          "type": "raise",
                          "start": {
                            "row": 68,
                            "column": 6
                          },
                          "end": {
                            "row": 68,
                            "column": 11
                          },
                          "text": "raise"
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 68,
                            "column": 12
                          },
                          "end": {
                            "row": 70,
                            "column": 23
                          },
                          "text": "NotImplementedError(\n          \"Applying modules with collections inside TPU functions is not \"\n          \"supported.\")",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 68,
                                "column": 12
                              },
                              "end": {
                                "row": 68,
                                "column": 31
                              },
                              "text": "NotImplementedError"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 68,
                                "column": 31
                              },
                              "end": {
                                "row": 70,
                                "column": 23
                              },
                              "text": "(\n          \"Applying modules with collections inside TPU functions is not \"\n          \"supported.\")",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 68,
                                    "column": 31
                                  },
                                  "end": {
                                    "row": 68,
                                    "column": 32
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "concatenated_string",
                                  "start": {
                                    "row": 69,
                                    "column": 10
                                  },
                                  "end": {
                                    "row": 70,
                                    "column": 22
                                  },
                                  "text": "\"Applying modules with collections inside TPU functions is not \"\n          \"supported.\"",
                                  "children": [
                                    {
                                      "type": "string",
                                      "start": {
                                        "row": 69,
                                        "column": 10
                                      },
                                      "end": {
                                        "row": 69,
                                        "column": 74
                                      },
                                      "text": "\"Applying modules with collections inside TPU functions is not \"",
                                      "children": [
                                        {
                                          "type": "string_start",
                                          "start": {
                                            "row": 69,
                                            "column": 10
                                          },
                                          "end": {
                                            "row": 69,
                                            "column": 11
                                          },
                                          "text": "\""
                                        },
                                        {
                                          "type": "string_content",
                                          "start": {
                                            "row": 69,
                                            "column": 11
                                          },
                                          "end": {
                                            "row": 69,
                                            "column": 73
                                          },
                                          "text": "Applying modules with collections inside TPU functions is not "
                                        },
                                        {
                                          "type": "string_end",
                                          "start": {
                                            "row": 69,
                                            "column": 73
                                          },
                                          "end": {
                                            "row": 69,
                                            "column": 74
                                          },
                                          "text": "\""
                                        }
                                      ]
                                    },
                                    {
                                      "type": "string",
                                      "start": {
                                        "row": 70,
                                        "column": 10
                                      },
                                      "end": {
                                        "row": 70,
                                        "column": 22
                                      },
                                      "text": "\"supported.\"",
                                      "children": [
                                        {
                                          "type": "string_start",
                                          "start": {
                                            "row": 70,
                                            "column": 10
                                          },
                                          "end": {
                                            "row": 70,
                                            "column": 11
                                          },
                                          "text": "\""
                                        },
                                        {
                                          "type": "string_content",
                                          "start": {
                                            "row": 70,
                                            "column": 11
                                          },
                                          "end": {
                                            "row": 70,
                                            "column": 21
                                          },
                                          "text": "supported."
                                        },
                                        {
                                          "type": "string_end",
                                          "start": {
                                            "row": 70,
                                            "column": 21
                                          },
                                          "end": {
                                            "row": 70,
                                            "column": 22
                                          },
                                          "text": "\""
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 70,
                                    "column": 22
                                  },
                                  "end": {
                                    "row": 70,
                                    "column": 23
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 72,
                "column": 4
              },
              "end": {
                "row": 75,
                "column": 41
              },
              "text": "tf_v1.train.import_meta_graph(\n        meta_graph,\n        input_map=feed_map,\n        import_scope=relative_scope_name)",
              "children": [
                {
                  "type": "call",
                  "start": {
                    "row": 72,
                    "column": 4
                  },
                  "end": {
                    "row": 75,
                    "column": 41
                  },
                  "text": "tf_v1.train.import_meta_graph(\n        meta_graph,\n        input_map=feed_map,\n        import_scope=relative_scope_name)",
                  "children": [
                    {
                      "type": "attribute",
                      "start": {
                        "row": 72,
                        "column": 4
                      },
                      "end": {
                        "row": 72,
                        "column": 33
                      },
                      "text": "tf_v1.train.import_meta_graph",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 72,
                            "column": 4
                          },
                          "end": {
                            "row": 72,
                            "column": 15
                          },
                          "text": "tf_v1.train",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 72,
                                "column": 4
                              },
                              "end": {
                                "row": 72,
                                "column": 9
                              },
                              "text": "tf_v1"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 72,
                                "column": 9
                              },
                              "end": {
                                "row": 72,
                                "column": 10
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 72,
                                "column": 10
                              },
                              "end": {
                                "row": 72,
                                "column": 15
                              },
                              "text": "train"
                            }
                          ]
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 72,
                            "column": 15
                          },
                          "end": {
                            "row": 72,
                            "column": 16
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 72,
                            "column": 16
                          },
                          "end": {
                            "row": 72,
                            "column": 33
                          },
                          "text": "import_meta_graph"
                        }
                      ]
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 72,
                        "column": 33
                      },
                      "end": {
                        "row": 75,
                        "column": 41
                      },
                      "text": "(\n        meta_graph,\n        input_map=feed_map,\n        import_scope=relative_scope_name)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 72,
                            "column": 33
                          },
                          "end": {
                            "row": 72,
                            "column": 34
                          },
                          "text": "("
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 73,
                            "column": 8
                          },
                          "end": {
                            "row": 73,
                            "column": 18
                          },
                          "text": "meta_graph"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 73,
                            "column": 18
                          },
                          "end": {
                            "row": 73,
                            "column": 19
                          },
                          "text": ","
                        },
                        {
                          "type": "keyword_argument",
                          "start": {
                            "row": 74,
                            "column": 8
                          },
                          "end": {
                            "row": 74,
                            "column": 26
                          },
                          "text": "input_map=feed_map",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 74,
                                "column": 8
                              },
                              "end": {
                                "row": 74,
                                "column": 17
                              },
                              "text": "input_map"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 74,
                                "column": 17
                              },
                              "end": {
                                "row": 74,
                                "column": 18
                              },
                              "text": "="
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 74,
                                "column": 18
                              },
                              "end": {
                                "row": 74,
                                "column": 26
                              },
                              "text": "feed_map"
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 74,
                            "column": 26
                          },
                          "end": {
                            "row": 74,
                            "column": 27
                          },
                          "text": ","
                        },
                        {
                          "type": "keyword_argument",
                          "start": {
                            "row": 75,
                            "column": 8
                          },
                          "end": {
                            "row": 75,
                            "column": 40
                          },
                          "text": "import_scope=relative_scope_name",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 75,
                                "column": 8
                              },
                              "end": {
                                "row": 75,
                                "column": 20
                              },
                              "text": "import_scope"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 75,
                                "column": 20
                              },
                              "end": {
                                "row": 75,
                                "column": 21
                              },
                              "text": "="
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 75,
                                "column": 21
                              },
                              "end": {
                                "row": 75,
                                "column": 40
                              },
                              "text": "relative_scope_name"
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 75,
                            "column": 40
                          },
                          "end": {
                            "row": 75,
                            "column": 41
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 76,
                "column": 4
              },
              "end": {
                "row": 77,
                "column": 74
              },
              "text": "fix_colocation_after_import(input_map=feed_map,\n                                absolute_import_scope=absolute_scope_name)",
              "children": [
                {
                  "type": "call",
                  "start": {
                    "row": 76,
                    "column": 4
                  },
                  "end": {
                    "row": 77,
                    "column": 74
                  },
                  "text": "fix_colocation_after_import(input_map=feed_map,\n                                absolute_import_scope=absolute_scope_name)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 76,
                        "column": 4
                      },
                      "end": {
                        "row": 76,
                        "column": 31
                      },
                      "text": "fix_colocation_after_import"
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 76,
                        "column": 31
                      },
                      "end": {
                        "row": 77,
                        "column": 74
                      },
                      "text": "(input_map=feed_map,\n                                absolute_import_scope=absolute_scope_name)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 76,
                            "column": 31
                          },
                          "end": {
                            "row": 76,
                            "column": 32
                          },
                          "text": "("
                        },
                        {
                          "type": "keyword_argument",
                          "start": {
                            "row": 76,
                            "column": 32
                          },
                          "end": {
                            "row": 76,
                            "column": 50
                          },
                          "text": "input_map=feed_map",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 76,
                                "column": 32
                              },
                              "end": {
                                "row": 76,
                                "column": 41
                              },
                              "text": "input_map"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 76,
                                "column": 41
                              },
                              "end": {
                                "row": 76,
                                "column": 42
                              },
                              "text": "="
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 76,
                                "column": 42
                              },
                              "end": {
                                "row": 76,
                                "column": 50
                              },
                              "text": "feed_map"
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 76,
                            "column": 50
                          },
                          "end": {
                            "row": 76,
                            "column": 51
                          },
                          "text": ","
                        },
                        {
                          "type": "keyword_argument",
                          "start": {
                            "row": 77,
                            "column": 32
                          },
                          "end": {
                            "row": 77,
                            "column": 73
                          },
                          "text": "absolute_import_scope=absolute_scope_name",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 77,
                                "column": 32
                              },
                              "end": {
                                "row": 77,
                                "column": 53
                              },
                              "text": "absolute_import_scope"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 77,
                                "column": 53
                              },
                              "end": {
                                "row": 77,
                                "column": 54
                              },
                              "text": "="
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 77,
                                "column": 54
                              },
                              "end": {
                                "row": 77,
                                "column": 73
                              },
                              "text": "absolute_scope_name"
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 77,
                            "column": 73
                          },
                          "end": {
                            "row": 77,
                            "column": 74
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "function_definition",
              "start": {
                "row": 79,
                "column": 4
              },
              "end": {
                "row": 87,
                "column": 56
              },
              "text": "def get_tensor(name):\n      # When trying to output an input tensor there are no nodes created within\n      # the apply scope. So one must look into the input map.\n      try:\n        return feed_map[name]\n      except KeyError:\n        return apply_graph.get_tensor_by_name(\n            meta_graph_lib.prepend_name_scope(\n                name, import_scope=absolute_scope_name))",
              "children": [
                {
                  "type": "def",
                  "start": {
                    "row": 79,
                    "column": 4
                  },
                  "end": {
                    "row": 79,
                    "column": 7
                  },
                  "text": "def"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 79,
                    "column": 8
                  },
                  "end": {
                    "row": 79,
                    "column": 18
                  },
                  "text": "get_tensor"
                },
                {
                  "type": "parameters",
                  "start": {
                    "row": 79,
                    "column": 18
                  },
                  "end": {
                    "row": 79,
                    "column": 24
                  },
                  "text": "(name)",
                  "children": [
                    {
                      "type": "(",
                      "start": {
                        "row": 79,
                        "column": 18
                      },
                      "end": {
                        "row": 79,
                        "column": 19
                      },
                      "text": "("
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 79,
                        "column": 19
                      },
                      "end": {
                        "row": 79,
                        "column": 23
                      },
                      "text": "name"
                    },
                    {
                      "type": ")",
                      "start": {
                        "row": 79,
                        "column": 23
                      },
                      "end": {
                        "row": 79,
                        "column": 24
                      },
                      "text": ")"
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 79,
                    "column": 24
                  },
                  "end": {
                    "row": 79,
                    "column": 25
                  },
                  "text": ":"
                },
                {
                  "type": "comment",
                  "start": {
                    "row": 80,
                    "column": 6
                  },
                  "end": {
                    "row": 80,
                    "column": 79
                  },
                  "text": "# When trying to output an input tensor there are no nodes created within"
                },
                {
                  "type": "comment",
                  "start": {
                    "row": 81,
                    "column": 6
                  },
                  "end": {
                    "row": 81,
                    "column": 61
                  },
                  "text": "# the apply scope. So one must look into the input map."
                },
                {
                  "type": "block",
                  "start": {
                    "row": 82,
                    "column": 6
                  },
                  "end": {
                    "row": 87,
                    "column": 56
                  },
                  "text": "try:\n        return feed_map[name]\n      except KeyError:\n        return apply_graph.get_tensor_by_name(\n            meta_graph_lib.prepend_name_scope(\n                name, import_scope=absolute_scope_name))",
                  "children": [
                    {
                      "type": "try_statement",
                      "start": {
                        "row": 82,
                        "column": 6
                      },
                      "end": {
                        "row": 87,
                        "column": 56
                      },
                      "text": "try:\n        return feed_map[name]\n      except KeyError:\n        return apply_graph.get_tensor_by_name(\n            meta_graph_lib.prepend_name_scope(\n                name, import_scope=absolute_scope_name))",
                      "children": [
                        {
                          "type": "try",
                          "start": {
                            "row": 82,
                            "column": 6
                          },
                          "end": {
                            "row": 82,
                            "column": 9
                          },
                          "text": "try"
                        },
                        {
                          "type": ":",
                          "start": {
                            "row": 82,
                            "column": 9
                          },
                          "end": {
                            "row": 82,
                            "column": 10
                          },
                          "text": ":"
                        },
                        {
                          "type": "block",
                          "start": {
                            "row": 83,
                            "column": 8
                          },
                          "end": {
                            "row": 83,
                            "column": 29
                          },
                          "text": "return feed_map[name]",
                          "children": [
                            {
                              "type": "return_statement",
                              "start": {
                                "row": 83,
                                "column": 8
                              },
                              "end": {
                                "row": 83,
                                "column": 29
                              },
                              "text": "return feed_map[name]",
                              "children": [
                                {
                                  "type": "return",
                                  "start": {
                                    "row": 83,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 83,
                                    "column": 14
                                  },
                                  "text": "return"
                                },
                                {
                                  "type": "subscript",
                                  "start": {
                                    "row": 83,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 83,
                                    "column": 29
                                  },
                                  "text": "feed_map[name]",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 83,
                                        "column": 15
                                      },
                                      "end": {
                                        "row": 83,
                                        "column": 23
                                      },
                                      "text": "feed_map"
                                    },
                                    {
                                      "type": "[",
                                      "start": {
                                        "row": 83,
                                        "column": 23
                                      },
                                      "end": {
                                        "row": 83,
                                        "column": 24
                                      },
                                      "text": "["
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 83,
                                        "column": 24
                                      },
                                      "end": {
                                        "row": 83,
                                        "column": 28
                                      },
                                      "text": "name"
                                    },
                                    {
                                      "type": "]",
                                      "start": {
                                        "row": 83,
                                        "column": 28
                                      },
                                      "end": {
                                        "row": 83,
                                        "column": 29
                                      },
                                      "text": "]"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "except_clause",
                          "start": {
                            "row": 84,
                            "column": 6
                          },
                          "end": {
                            "row": 87,
                            "column": 56
                          },
                          "text": "except KeyError:\n        return apply_graph.get_tensor_by_name(\n            meta_graph_lib.prepend_name_scope(\n                name, import_scope=absolute_scope_name))",
                          "children": [
                            {
                              "type": "except",
                              "start": {
                                "row": 84,
                                "column": 6
                              },
                              "end": {
                                "row": 84,
                                "column": 12
                              },
                              "text": "except"
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 84,
                                "column": 13
                              },
                              "end": {
                                "row": 84,
                                "column": 21
                              },
                              "text": "KeyError"
                            },
                            {
                              "type": ":",
                              "start": {
                                "row": 84,
                                "column": 21
                              },
                              "end": {
                                "row": 84,
                                "column": 22
                              },
                              "text": ":"
                            },
                            {
                              "type": "block",
                              "start": {
                                "row": 85,
                                "column": 8
                              },
                              "end": {
                                "row": 87,
                                "column": 56
                              },
                              "text": "return apply_graph.get_tensor_by_name(\n            meta_graph_lib.prepend_name_scope(\n                name, import_scope=absolute_scope_name))",
                              "children": [
                                {
                                  "type": "return_statement",
                                  "start": {
                                    "row": 85,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 87,
                                    "column": 56
                                  },
                                  "text": "return apply_graph.get_tensor_by_name(\n            meta_graph_lib.prepend_name_scope(\n                name, import_scope=absolute_scope_name))",
                                  "children": [
                                    {
                                      "type": "return",
                                      "start": {
                                        "row": 85,
                                        "column": 8
                                      },
                                      "end": {
                                        "row": 85,
                                        "column": 14
                                      },
                                      "text": "return"
                                    },
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 85,
                                        "column": 15
                                      },
                                      "end": {
                                        "row": 87,
                                        "column": 56
                                      },
                                      "text": "apply_graph.get_tensor_by_name(\n            meta_graph_lib.prepend_name_scope(\n                name, import_scope=absolute_scope_name))",
                                      "children": [
                                        {
                                          "type": "attribute",
                                          "start": {
                                            "row": 85,
                                            "column": 15
                                          },
                                          "end": {
                                            "row": 85,
                                            "column": 45
                                          },
                                          "text": "apply_graph.get_tensor_by_name",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 85,
                                                "column": 15
                                              },
                                              "end": {
                                                "row": 85,
                                                "column": 26
                                              },
                                              "text": "apply_graph"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 85,
                                                "column": 26
                                              },
                                              "end": {
                                                "row": 85,
                                                "column": 27
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 85,
                                                "column": 27
                                              },
                                              "end": {
                                                "row": 85,
                                                "column": 45
                                              },
                                              "text": "get_tensor_by_name"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 85,
                                            "column": 45
                                          },
                                          "end": {
                                            "row": 87,
                                            "column": 56
                                          },
                                          "text": "(\n            meta_graph_lib.prepend_name_scope(\n                name, import_scope=absolute_scope_name))",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 85,
                                                "column": 45
                                              },
                                              "end": {
                                                "row": 85,
                                                "column": 46
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "call",
                                              "start": {
                                                "row": 86,
                                                "column": 12
                                              },
                                              "end": {
                                                "row": 87,
                                                "column": 55
                                              },
                                              "text": "meta_graph_lib.prepend_name_scope(\n                name, import_scope=absolute_scope_name)",
                                              "children": [
                                                {
                                                  "type": "attribute",
                                                  "start": {
                                                    "row": 86,
                                                    "column": 12
                                                  },
                                                  "end": {
                                                    "row": 86,
                                                    "column": 45
                                                  },
                                                  "text": "meta_graph_lib.prepend_name_scope",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 86,
                                                        "column": 12
                                                      },
                                                      "end": {
                                                        "row": 86,
                                                        "column": 26
                                                      },
                                                      "text": "meta_graph_lib"
                                                    },
                                                    {
                                                      "type": ".",
                                                      "start": {
                                                        "row": 86,
                                                        "column": 26
                                                      },
                                                      "end": {
                                                        "row": 86,
                                                        "column": 27
                                                      },
                                                      "text": "."
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 86,
                                                        "column": 27
                                                      },
                                                      "end": {
                                                        "row": 86,
                                                        "column": 45
                                                      },
                                                      "text": "prepend_name_scope"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "argument_list",
                                                  "start": {
                                                    "row": 86,
                                                    "column": 45
                                                  },
                                                  "end": {
                                                    "row": 87,
                                                    "column": 55
                                                  },
                                                  "text": "(\n                name, import_scope=absolute_scope_name)",
                                                  "children": [
                                                    {
                                                      "type": "(",
                                                      "start": {
                                                        "row": 86,
                                                        "column": 45
                                                      },
                                                      "end": {
                                                        "row": 86,
                                                        "column": 46
                                                      },
                                                      "text": "("
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 87,
                                                        "column": 16
                                                      },
                                                      "end": {
                                                        "row": 87,
                                                        "column": 20
                                                      },
                                                      "text": "name"
                                                    },
                                                    {
                                                      "type": ",",
                                                      "start": {
                                                        "row": 87,
                                                        "column": 20
                                                      },
                                                      "end": {
                                                        "row": 87,
                                                        "column": 21
                                                      },
                                                      "text": ","
                                                    },
                                                    {
                                                      "type": "keyword_argument",
                                                      "start": {
                                                        "row": 87,
                                                        "column": 22
                                                      },
                                                      "end": {
                                                        "row": 87,
                                                        "column": 54
                                                      },
                                                      "text": "import_scope=absolute_scope_name",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 87,
                                                            "column": 22
                                                          },
                                                          "end": {
                                                            "row": 87,
                                                            "column": 34
                                                          },
                                                          "text": "import_scope"
                                                        },
                                                        {
                                                          "type": "=",
                                                          "start": {
                                                            "row": 87,
                                                            "column": 34
                                                          },
                                                          "end": {
                                                            "row": 87,
                                                            "column": 35
                                                          },
                                                          "text": "="
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 87,
                                                            "column": 35
                                                          },
                                                          "end": {
                                                            "row": 87,
                                                            "column": 54
                                                          },
                                                          "text": "absolute_scope_name"
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ")",
                                                      "start": {
                                                        "row": 87,
                                                        "column": 54
                                                      },
                                                      "end": {
                                                        "row": 87,
                                                        "column": 55
                                                      },
                                                      "text": ")"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 87,
                                                "column": 55
                                              },
                                              "end": {
                                                "row": 87,
                                                "column": 56
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 89,
                "column": 4
              },
              "end": {
                "row": 89,
                "column": 74
              },
              "text": "return tensor_info.build_output_map(signature_def.outputs, get_tensor)",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 89,
                    "column": 4
                  },
                  "end": {
                    "row": 89,
                    "column": 10
                  },
                  "text": "return"
                },
                {
                  "type": "call",
                  "start": {
                    "row": 89,
                    "column": 11
                  },
                  "end": {
                    "row": 89,
                    "column": 74
                  },
                  "text": "tensor_info.build_output_map(signature_def.outputs, get_tensor)",
                  "children": [
                    {
                      "type": "attribute",
                      "start": {
                        "row": 89,
                        "column": 11
                      },
                      "end": {
                        "row": 89,
                        "column": 39
                      },
                      "text": "tensor_info.build_output_map",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 89,
                            "column": 11
                          },
                          "end": {
                            "row": 89,
                            "column": 22
                          },
                          "text": "tensor_info"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 89,
                            "column": 22
                          },
                          "end": {
                            "row": 89,
                            "column": 23
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 89,
                            "column": 23
                          },
                          "end": {
                            "row": 89,
                            "column": 39
                          },
                          "text": "build_output_map"
                        }
                      ]
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 89,
                        "column": 39
                      },
                      "end": {
                        "row": 89,
                        "column": 74
                      },
                      "text": "(signature_def.outputs, get_tensor)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 89,
                            "column": 39
                          },
                          "end": {
                            "row": 89,
                            "column": 40
                          },
                          "text": "("
                        },
                        {
                          "type": "attribute",
                          "start": {
                            "row": 89,
                            "column": 40
                          },
                          "end": {
                            "row": 89,
                            "column": 61
                          },
                          "text": "signature_def.outputs",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 89,
                                "column": 40
                              },
                              "end": {
                                "row": 89,
                                "column": 53
                              },
                              "text": "signature_def"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 89,
                                "column": 53
                              },
                              "end": {
                                "row": 89,
                                "column": 54
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 89,
                                "column": 54
                              },
                              "end": {
                                "row": 89,
                                "column": 61
                              },
                              "text": "outputs"
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 89,
                            "column": 61
                          },
                          "end": {
                            "row": 89,
                            "column": 62
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 89,
                            "column": 63
                          },
                          "end": {
                            "row": 89,
                            "column": 73
                          },
                          "text": "get_tensor"
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 89,
                            "column": 73
                          },
                          "end": {
                            "row": 89,
                            "column": 74
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}