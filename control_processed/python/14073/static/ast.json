{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 28,
    "column": 29
  },
  "text": "def _resolve_subkeys(key, separator=\".\"):\n    \"\"\"Resolve a potentially nested key.\n\n    If the key contains the ``separator`` (e.g. ``.``) then the key will be\n    split on the first instance of the subkey::\n\n       >>> _resolve_subkeys('a.b.c')\n       ('a', 'b.c')\n       >>> _resolve_subkeys('d|e|f', separator='|')\n       ('d', 'e|f')\n\n    If not, the subkey will be :data:`None`::\n\n        >>> _resolve_subkeys('foo')\n        ('foo', None)\n\n    Args:\n        key (str): A string that may or may not contain the separator.\n        separator (str): The namespace separator. Defaults to `.`.\n\n    Returns:\n        Tuple[str, str]: The key and subkey(s).\n    \"\"\"\n    parts = key.split(separator, 1)\n\n    if len(parts) > 1:\n        return parts\n    else:\n        return parts[0], None",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 28,
        "column": 29
      },
      "text": "def _resolve_subkeys(key, separator=\".\"):\n    \"\"\"Resolve a potentially nested key.\n\n    If the key contains the ``separator`` (e.g. ``.``) then the key will be\n    split on the first instance of the subkey::\n\n       >>> _resolve_subkeys('a.b.c')\n       ('a', 'b.c')\n       >>> _resolve_subkeys('d|e|f', separator='|')\n       ('d', 'e|f')\n\n    If not, the subkey will be :data:`None`::\n\n        >>> _resolve_subkeys('foo')\n        ('foo', None)\n\n    Args:\n        key (str): A string that may or may not contain the separator.\n        separator (str): The namespace separator. Defaults to `.`.\n\n    Returns:\n        Tuple[str, str]: The key and subkey(s).\n    \"\"\"\n    parts = key.split(separator, 1)\n\n    if len(parts) > 1:\n        return parts\n    else:\n        return parts[0], None",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 20
          },
          "text": "_resolve_subkeys"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 20
          },
          "end": {
            "row": 0,
            "column": 40
          },
          "text": "(key, separator=\".\")",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 20
              },
              "end": {
                "row": 0,
                "column": 21
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 21
              },
              "end": {
                "row": 0,
                "column": 24
              },
              "text": "key"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 24
              },
              "end": {
                "row": 0,
                "column": 25
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 0,
                "column": 26
              },
              "end": {
                "row": 0,
                "column": 39
              },
              "text": "separator=\".\"",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 26
                  },
                  "end": {
                    "row": 0,
                    "column": 35
                  },
                  "text": "separator"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 0,
                    "column": 35
                  },
                  "end": {
                    "row": 0,
                    "column": 36
                  },
                  "text": "="
                },
                {
                  "type": "string",
                  "start": {
                    "row": 0,
                    "column": 36
                  },
                  "end": {
                    "row": 0,
                    "column": 39
                  },
                  "text": "\".\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 0,
                        "column": 36
                      },
                      "end": {
                        "row": 0,
                        "column": 37
                      },
                      "text": "\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 0,
                        "column": 37
                      },
                      "end": {
                        "row": 0,
                        "column": 38
                      },
                      "text": "."
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 0,
                        "column": 38
                      },
                      "end": {
                        "row": 0,
                        "column": 39
                      },
                      "text": "\""
                    }
                  ]
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 39
              },
              "end": {
                "row": 0,
                "column": 40
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 40
          },
          "end": {
            "row": 0,
            "column": 41
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 4
          },
          "end": {
            "row": 28,
            "column": 29
          },
          "text": "\"\"\"Resolve a potentially nested key.\n\n    If the key contains the ``separator`` (e.g. ``.``) then the key will be\n    split on the first instance of the subkey::\n\n       >>> _resolve_subkeys('a.b.c')\n       ('a', 'b.c')\n       >>> _resolve_subkeys('d|e|f', separator='|')\n       ('d', 'e|f')\n\n    If not, the subkey will be :data:`None`::\n\n        >>> _resolve_subkeys('foo')\n        ('foo', None)\n\n    Args:\n        key (str): A string that may or may not contain the separator.\n        separator (str): The namespace separator. Defaults to `.`.\n\n    Returns:\n        Tuple[str, str]: The key and subkey(s).\n    \"\"\"\n    parts = key.split(separator, 1)\n\n    if len(parts) > 1:\n        return parts\n    else:\n        return parts[0], None",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 4
              },
              "end": {
                "row": 22,
                "column": 7
              },
              "text": "\"\"\"Resolve a potentially nested key.\n\n    If the key contains the ``separator`` (e.g. ``.``) then the key will be\n    split on the first instance of the subkey::\n\n       >>> _resolve_subkeys('a.b.c')\n       ('a', 'b.c')\n       >>> _resolve_subkeys('d|e|f', separator='|')\n       ('d', 'e|f')\n\n    If not, the subkey will be :data:`None`::\n\n        >>> _resolve_subkeys('foo')\n        ('foo', None)\n\n    Args:\n        key (str): A string that may or may not contain the separator.\n        separator (str): The namespace separator. Defaults to `.`.\n\n    Returns:\n        Tuple[str, str]: The key and subkey(s).\n    \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 4
                  },
                  "end": {
                    "row": 22,
                    "column": 7
                  },
                  "text": "\"\"\"Resolve a potentially nested key.\n\n    If the key contains the ``separator`` (e.g. ``.``) then the key will be\n    split on the first instance of the subkey::\n\n       >>> _resolve_subkeys('a.b.c')\n       ('a', 'b.c')\n       >>> _resolve_subkeys('d|e|f', separator='|')\n       ('d', 'e|f')\n\n    If not, the subkey will be :data:`None`::\n\n        >>> _resolve_subkeys('foo')\n        ('foo', None)\n\n    Args:\n        key (str): A string that may or may not contain the separator.\n        separator (str): The namespace separator. Defaults to `.`.\n\n    Returns:\n        Tuple[str, str]: The key and subkey(s).\n    \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 4
                      },
                      "end": {
                        "row": 1,
                        "column": 7
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 7
                      },
                      "end": {
                        "row": 22,
                        "column": 4
                      },
                      "text": "Resolve a potentially nested key.\n\n    If the key contains the ``separator`` (e.g. ``.``) then the key will be\n    split on the first instance of the subkey::\n\n       >>> _resolve_subkeys('a.b.c')\n       ('a', 'b.c')\n       >>> _resolve_subkeys('d|e|f', separator='|')\n       ('d', 'e|f')\n\n    If not, the subkey will be :data:`None`::\n\n        >>> _resolve_subkeys('foo')\n        ('foo', None)\n\n    Args:\n        key (str): A string that may or may not contain the separator.\n        separator (str): The namespace separator. Defaults to `.`.\n\n    Returns:\n        Tuple[str, str]: The key and subkey(s).\n    "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 22,
                        "column": 4
                      },
                      "end": {
                        "row": 22,
                        "column": 7
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 23,
                "column": 4
              },
              "end": {
                "row": 23,
                "column": 35
              },
              "text": "parts = key.split(separator, 1)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 23,
                    "column": 4
                  },
                  "end": {
                    "row": 23,
                    "column": 35
                  },
                  "text": "parts = key.split(separator, 1)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 23,
                        "column": 4
                      },
                      "end": {
                        "row": 23,
                        "column": 9
                      },
                      "text": "parts"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 23,
                        "column": 10
                      },
                      "end": {
                        "row": 23,
                        "column": 11
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 23,
                        "column": 12
                      },
                      "end": {
                        "row": 23,
                        "column": 35
                      },
                      "text": "key.split(separator, 1)",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 23,
                            "column": 12
                          },
                          "end": {
                            "row": 23,
                            "column": 21
                          },
                          "text": "key.split",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 23,
                                "column": 12
                              },
                              "end": {
                                "row": 23,
                                "column": 15
                              },
                              "text": "key"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 23,
                                "column": 15
                              },
                              "end": {
                                "row": 23,
                                "column": 16
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 23,
                                "column": 16
                              },
                              "end": {
                                "row": 23,
                                "column": 21
                              },
                              "text": "split"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 23,
                            "column": 21
                          },
                          "end": {
                            "row": 23,
                            "column": 35
                          },
                          "text": "(separator, 1)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 23,
                                "column": 21
                              },
                              "end": {
                                "row": 23,
                                "column": 22
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 23,
                                "column": 22
                              },
                              "end": {
                                "row": 23,
                                "column": 31
                              },
                              "text": "separator"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 23,
                                "column": 31
                              },
                              "end": {
                                "row": 23,
                                "column": 32
                              },
                              "text": ","
                            },
                            {
                              "type": "integer",
                              "start": {
                                "row": 23,
                                "column": 33
                              },
                              "end": {
                                "row": 23,
                                "column": 34
                              },
                              "text": "1"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 23,
                                "column": 34
                              },
                              "end": {
                                "row": 23,
                                "column": 35
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 25,
                "column": 4
              },
              "end": {
                "row": 28,
                "column": 29
              },
              "text": "if len(parts) > 1:\n        return parts\n    else:\n        return parts[0], None",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 25,
                    "column": 4
                  },
                  "end": {
                    "row": 25,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "comparison_operator",
                  "start": {
                    "row": 25,
                    "column": 7
                  },
                  "end": {
                    "row": 25,
                    "column": 21
                  },
                  "text": "len(parts) > 1",
                  "children": [
                    {
                      "type": "call",
                      "start": {
                        "row": 25,
                        "column": 7
                      },
                      "end": {
                        "row": 25,
                        "column": 17
                      },
                      "text": "len(parts)",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 25,
                            "column": 7
                          },
                          "end": {
                            "row": 25,
                            "column": 10
                          },
                          "text": "len"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 25,
                            "column": 10
                          },
                          "end": {
                            "row": 25,
                            "column": 17
                          },
                          "text": "(parts)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 25,
                                "column": 10
                              },
                              "end": {
                                "row": 25,
                                "column": 11
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 25,
                                "column": 11
                              },
                              "end": {
                                "row": 25,
                                "column": 16
                              },
                              "text": "parts"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 25,
                                "column": 16
                              },
                              "end": {
                                "row": 25,
                                "column": 17
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ">",
                      "start": {
                        "row": 25,
                        "column": 18
                      },
                      "end": {
                        "row": 25,
                        "column": 19
                      },
                      "text": ">"
                    },
                    {
                      "type": "integer",
                      "start": {
                        "row": 25,
                        "column": 20
                      },
                      "end": {
                        "row": 25,
                        "column": 21
                      },
                      "text": "1"
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 25,
                    "column": 21
                  },
                  "end": {
                    "row": 25,
                    "column": 22
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 26,
                    "column": 8
                  },
                  "end": {
                    "row": 26,
                    "column": 20
                  },
                  "text": "return parts",
                  "children": [
                    {
                      "type": "return_statement",
                      "start": {
                        "row": 26,
                        "column": 8
                      },
                      "end": {
                        "row": 26,
                        "column": 20
                      },
                      "text": "return parts",
                      "children": [
                        {
                          "type": "return",
                          "start": {
                            "row": 26,
                            "column": 8
                          },
                          "end": {
                            "row": 26,
                            "column": 14
                          },
                          "text": "return"
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 26,
                            "column": 15
                          },
                          "end": {
                            "row": 26,
                            "column": 20
                          },
                          "text": "parts"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "else_clause",
                  "start": {
                    "row": 27,
                    "column": 4
                  },
                  "end": {
                    "row": 28,
                    "column": 29
                  },
                  "text": "else:\n        return parts[0], None",
                  "children": [
                    {
                      "type": "else",
                      "start": {
                        "row": 27,
                        "column": 4
                      },
                      "end": {
                        "row": 27,
                        "column": 8
                      },
                      "text": "else"
                    },
                    {
                      "type": ":",
                      "start": {
                        "row": 27,
                        "column": 8
                      },
                      "end": {
                        "row": 27,
                        "column": 9
                      },
                      "text": ":"
                    },
                    {
                      "type": "block",
                      "start": {
                        "row": 28,
                        "column": 8
                      },
                      "end": {
                        "row": 28,
                        "column": 29
                      },
                      "text": "return parts[0], None",
                      "children": [
                        {
                          "type": "return_statement",
                          "start": {
                            "row": 28,
                            "column": 8
                          },
                          "end": {
                            "row": 28,
                            "column": 29
                          },
                          "text": "return parts[0], None",
                          "children": [
                            {
                              "type": "return",
                              "start": {
                                "row": 28,
                                "column": 8
                              },
                              "end": {
                                "row": 28,
                                "column": 14
                              },
                              "text": "return"
                            },
                            {
                              "type": "expression_list",
                              "start": {
                                "row": 28,
                                "column": 15
                              },
                              "end": {
                                "row": 28,
                                "column": 29
                              },
                              "text": "parts[0], None",
                              "children": [
                                {
                                  "type": "subscript",
                                  "start": {
                                    "row": 28,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 28,
                                    "column": 23
                                  },
                                  "text": "parts[0]",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 28,
                                        "column": 15
                                      },
                                      "end": {
                                        "row": 28,
                                        "column": 20
                                      },
                                      "text": "parts"
                                    },
                                    {
                                      "type": "[",
                                      "start": {
                                        "row": 28,
                                        "column": 20
                                      },
                                      "end": {
                                        "row": 28,
                                        "column": 21
                                      },
                                      "text": "["
                                    },
                                    {
                                      "type": "integer",
                                      "start": {
                                        "row": 28,
                                        "column": 21
                                      },
                                      "end": {
                                        "row": 28,
                                        "column": 22
                                      },
                                      "text": "0"
                                    },
                                    {
                                      "type": "]",
                                      "start": {
                                        "row": 28,
                                        "column": 22
                                      },
                                      "end": {
                                        "row": 28,
                                        "column": 23
                                      },
                                      "text": "]"
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 28,
                                    "column": 23
                                  },
                                  "end": {
                                    "row": 28,
                                    "column": 24
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "none",
                                  "start": {
                                    "row": 28,
                                    "column": 25
                                  },
                                  "end": {
                                    "row": 28,
                                    "column": 29
                                  },
                                  "text": "None"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}