{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 49,
    "column": 41
  },
  "text": "def getTreeBuilder(treeType, implementation=None, **kwargs):\n    \"\"\"Get a TreeBuilder class for various types of trees with built-in support\n\n    :arg treeType: the name of the tree type required (case-insensitive). Supported\n        values are:\n\n        * \"dom\" - A generic builder for DOM implementations, defaulting to a\n          xml.dom.minidom based implementation.\n        * \"etree\" - A generic builder for tree implementations exposing an\n          ElementTree-like interface, defaulting to xml.etree.cElementTree if\n          available and xml.etree.ElementTree if not.\n        * \"lxml\" - A etree-based builder for lxml.etree, handling limitations\n          of lxml's implementation.\n\n    :arg implementation: (Currently applies to the \"etree\" and \"dom\" tree\n        types). A module implementing the tree type e.g. xml.etree.ElementTree\n        or xml.etree.cElementTree.\n\n    :arg kwargs: Any additional options to pass to the TreeBuilder when\n        creating it.\n\n    Example:\n\n    >>> from html5lib.treebuilders import getTreeBuilder\n    >>> builder = getTreeBuilder('etree')\n\n    \"\"\"\n\n    treeType = treeType.lower()\n    if treeType not in treeBuilderCache:\n        if treeType == \"dom\":\n            from . import dom\n            # Come up with a sane default (pref. from the stdlib)\n            if implementation is None:\n                from xml.dom import minidom\n                implementation = minidom\n            # NEVER cache here, caching is done in the dom submodule\n            return dom.getDomModule(implementation, **kwargs).TreeBuilder\n        elif treeType == \"lxml\":\n            from . import etree_lxml\n            treeBuilderCache[treeType] = etree_lxml.TreeBuilder\n        elif treeType == \"etree\":\n            from . import etree\n            if implementation is None:\n                implementation = default_etree\n            # NEVER cache here, caching is done in the etree submodule\n            return etree.getETreeModule(implementation, **kwargs).TreeBuilder\n        else:\n            raise ValueError(\"\"\"Unrecognised treebuilder \"%s\" \"\"\" % treeType)\n    return treeBuilderCache.get(treeType)",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 49,
        "column": 41
      },
      "text": "def getTreeBuilder(treeType, implementation=None, **kwargs):\n    \"\"\"Get a TreeBuilder class for various types of trees with built-in support\n\n    :arg treeType: the name of the tree type required (case-insensitive). Supported\n        values are:\n\n        * \"dom\" - A generic builder for DOM implementations, defaulting to a\n          xml.dom.minidom based implementation.\n        * \"etree\" - A generic builder for tree implementations exposing an\n          ElementTree-like interface, defaulting to xml.etree.cElementTree if\n          available and xml.etree.ElementTree if not.\n        * \"lxml\" - A etree-based builder for lxml.etree, handling limitations\n          of lxml's implementation.\n\n    :arg implementation: (Currently applies to the \"etree\" and \"dom\" tree\n        types). A module implementing the tree type e.g. xml.etree.ElementTree\n        or xml.etree.cElementTree.\n\n    :arg kwargs: Any additional options to pass to the TreeBuilder when\n        creating it.\n\n    Example:\n\n    >>> from html5lib.treebuilders import getTreeBuilder\n    >>> builder = getTreeBuilder('etree')\n\n    \"\"\"\n\n    treeType = treeType.lower()\n    if treeType not in treeBuilderCache:\n        if treeType == \"dom\":\n            from . import dom\n            # Come up with a sane default (pref. from the stdlib)\n            if implementation is None:\n                from xml.dom import minidom\n                implementation = minidom\n            # NEVER cache here, caching is done in the dom submodule\n            return dom.getDomModule(implementation, **kwargs).TreeBuilder\n        elif treeType == \"lxml\":\n            from . import etree_lxml\n            treeBuilderCache[treeType] = etree_lxml.TreeBuilder\n        elif treeType == \"etree\":\n            from . import etree\n            if implementation is None:\n                implementation = default_etree\n            # NEVER cache here, caching is done in the etree submodule\n            return etree.getETreeModule(implementation, **kwargs).TreeBuilder\n        else:\n            raise ValueError(\"\"\"Unrecognised treebuilder \"%s\" \"\"\" % treeType)\n    return treeBuilderCache.get(treeType)",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 18
          },
          "text": "getTreeBuilder"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 18
          },
          "end": {
            "row": 0,
            "column": 59
          },
          "text": "(treeType, implementation=None, **kwargs)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 18
              },
              "end": {
                "row": 0,
                "column": 19
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 19
              },
              "end": {
                "row": 0,
                "column": 27
              },
              "text": "treeType"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 27
              },
              "end": {
                "row": 0,
                "column": 28
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 0,
                "column": 29
              },
              "end": {
                "row": 0,
                "column": 48
              },
              "text": "implementation=None",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 29
                  },
                  "end": {
                    "row": 0,
                    "column": 43
                  },
                  "text": "implementation"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 0,
                    "column": 43
                  },
                  "end": {
                    "row": 0,
                    "column": 44
                  },
                  "text": "="
                },
                {
                  "type": "none",
                  "start": {
                    "row": 0,
                    "column": 44
                  },
                  "end": {
                    "row": 0,
                    "column": 48
                  },
                  "text": "None"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 48
              },
              "end": {
                "row": 0,
                "column": 49
              },
              "text": ","
            },
            {
              "type": "dictionary_splat_pattern",
              "start": {
                "row": 0,
                "column": 50
              },
              "end": {
                "row": 0,
                "column": 58
              },
              "text": "**kwargs",
              "children": [
                {
                  "type": "**",
                  "start": {
                    "row": 0,
                    "column": 50
                  },
                  "end": {
                    "row": 0,
                    "column": 52
                  },
                  "text": "**"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 52
                  },
                  "end": {
                    "row": 0,
                    "column": 58
                  },
                  "text": "kwargs"
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 58
              },
              "end": {
                "row": 0,
                "column": 59
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 59
          },
          "end": {
            "row": 0,
            "column": 60
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 4
          },
          "end": {
            "row": 49,
            "column": 41
          },
          "text": "\"\"\"Get a TreeBuilder class for various types of trees with built-in support\n\n    :arg treeType: the name of the tree type required (case-insensitive). Supported\n        values are:\n\n        * \"dom\" - A generic builder for DOM implementations, defaulting to a\n          xml.dom.minidom based implementation.\n        * \"etree\" - A generic builder for tree implementations exposing an\n          ElementTree-like interface, defaulting to xml.etree.cElementTree if\n          available and xml.etree.ElementTree if not.\n        * \"lxml\" - A etree-based builder for lxml.etree, handling limitations\n          of lxml's implementation.\n\n    :arg implementation: (Currently applies to the \"etree\" and \"dom\" tree\n        types). A module implementing the tree type e.g. xml.etree.ElementTree\n        or xml.etree.cElementTree.\n\n    :arg kwargs: Any additional options to pass to the TreeBuilder when\n        creating it.\n\n    Example:\n\n    >>> from html5lib.treebuilders import getTreeBuilder\n    >>> builder = getTreeBuilder('etree')\n\n    \"\"\"\n\n    treeType = treeType.lower()\n    if treeType not in treeBuilderCache:\n        if treeType == \"dom\":\n            from . import dom\n            # Come up with a sane default (pref. from the stdlib)\n            if implementation is None:\n                from xml.dom import minidom\n                implementation = minidom\n            # NEVER cache here, caching is done in the dom submodule\n            return dom.getDomModule(implementation, **kwargs).TreeBuilder\n        elif treeType == \"lxml\":\n            from . import etree_lxml\n            treeBuilderCache[treeType] = etree_lxml.TreeBuilder\n        elif treeType == \"etree\":\n            from . import etree\n            if implementation is None:\n                implementation = default_etree\n            # NEVER cache here, caching is done in the etree submodule\n            return etree.getETreeModule(implementation, **kwargs).TreeBuilder\n        else:\n            raise ValueError(\"\"\"Unrecognised treebuilder \"%s\" \"\"\" % treeType)\n    return treeBuilderCache.get(treeType)",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 4
              },
              "end": {
                "row": 26,
                "column": 7
              },
              "text": "\"\"\"Get a TreeBuilder class for various types of trees with built-in support\n\n    :arg treeType: the name of the tree type required (case-insensitive). Supported\n        values are:\n\n        * \"dom\" - A generic builder for DOM implementations, defaulting to a\n          xml.dom.minidom based implementation.\n        * \"etree\" - A generic builder for tree implementations exposing an\n          ElementTree-like interface, defaulting to xml.etree.cElementTree if\n          available and xml.etree.ElementTree if not.\n        * \"lxml\" - A etree-based builder for lxml.etree, handling limitations\n          of lxml's implementation.\n\n    :arg implementation: (Currently applies to the \"etree\" and \"dom\" tree\n        types). A module implementing the tree type e.g. xml.etree.ElementTree\n        or xml.etree.cElementTree.\n\n    :arg kwargs: Any additional options to pass to the TreeBuilder when\n        creating it.\n\n    Example:\n\n    >>> from html5lib.treebuilders import getTreeBuilder\n    >>> builder = getTreeBuilder('etree')\n\n    \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 4
                  },
                  "end": {
                    "row": 26,
                    "column": 7
                  },
                  "text": "\"\"\"Get a TreeBuilder class for various types of trees with built-in support\n\n    :arg treeType: the name of the tree type required (case-insensitive). Supported\n        values are:\n\n        * \"dom\" - A generic builder for DOM implementations, defaulting to a\n          xml.dom.minidom based implementation.\n        * \"etree\" - A generic builder for tree implementations exposing an\n          ElementTree-like interface, defaulting to xml.etree.cElementTree if\n          available and xml.etree.ElementTree if not.\n        * \"lxml\" - A etree-based builder for lxml.etree, handling limitations\n          of lxml's implementation.\n\n    :arg implementation: (Currently applies to the \"etree\" and \"dom\" tree\n        types). A module implementing the tree type e.g. xml.etree.ElementTree\n        or xml.etree.cElementTree.\n\n    :arg kwargs: Any additional options to pass to the TreeBuilder when\n        creating it.\n\n    Example:\n\n    >>> from html5lib.treebuilders import getTreeBuilder\n    >>> builder = getTreeBuilder('etree')\n\n    \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 4
                      },
                      "end": {
                        "row": 1,
                        "column": 7
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 7
                      },
                      "end": {
                        "row": 26,
                        "column": 4
                      },
                      "text": "Get a TreeBuilder class for various types of trees with built-in support\n\n    :arg treeType: the name of the tree type required (case-insensitive). Supported\n        values are:\n\n        * \"dom\" - A generic builder for DOM implementations, defaulting to a\n          xml.dom.minidom based implementation.\n        * \"etree\" - A generic builder for tree implementations exposing an\n          ElementTree-like interface, defaulting to xml.etree.cElementTree if\n          available and xml.etree.ElementTree if not.\n        * \"lxml\" - A etree-based builder for lxml.etree, handling limitations\n          of lxml's implementation.\n\n    :arg implementation: (Currently applies to the \"etree\" and \"dom\" tree\n        types). A module implementing the tree type e.g. xml.etree.ElementTree\n        or xml.etree.cElementTree.\n\n    :arg kwargs: Any additional options to pass to the TreeBuilder when\n        creating it.\n\n    Example:\n\n    >>> from html5lib.treebuilders import getTreeBuilder\n    >>> builder = getTreeBuilder('etree')\n\n    "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 26,
                        "column": 4
                      },
                      "end": {
                        "row": 26,
                        "column": 7
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 28,
                "column": 4
              },
              "end": {
                "row": 28,
                "column": 31
              },
              "text": "treeType = treeType.lower()",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 28,
                    "column": 4
                  },
                  "end": {
                    "row": 28,
                    "column": 31
                  },
                  "text": "treeType = treeType.lower()",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 28,
                        "column": 4
                      },
                      "end": {
                        "row": 28,
                        "column": 12
                      },
                      "text": "treeType"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 28,
                        "column": 13
                      },
                      "end": {
                        "row": 28,
                        "column": 14
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 28,
                        "column": 15
                      },
                      "end": {
                        "row": 28,
                        "column": 31
                      },
                      "text": "treeType.lower()",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 28,
                            "column": 15
                          },
                          "end": {
                            "row": 28,
                            "column": 29
                          },
                          "text": "treeType.lower",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 28,
                                "column": 15
                              },
                              "end": {
                                "row": 28,
                                "column": 23
                              },
                              "text": "treeType"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 28,
                                "column": 23
                              },
                              "end": {
                                "row": 28,
                                "column": 24
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 28,
                                "column": 24
                              },
                              "end": {
                                "row": 28,
                                "column": 29
                              },
                              "text": "lower"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 28,
                            "column": 29
                          },
                          "end": {
                            "row": 28,
                            "column": 31
                          },
                          "text": "()",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 28,
                                "column": 29
                              },
                              "end": {
                                "row": 28,
                                "column": 30
                              },
                              "text": "("
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 28,
                                "column": 30
                              },
                              "end": {
                                "row": 28,
                                "column": 31
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 29,
                "column": 4
              },
              "end": {
                "row": 48,
                "column": 77
              },
              "text": "if treeType not in treeBuilderCache:\n        if treeType == \"dom\":\n            from . import dom\n            # Come up with a sane default (pref. from the stdlib)\n            if implementation is None:\n                from xml.dom import minidom\n                implementation = minidom\n            # NEVER cache here, caching is done in the dom submodule\n            return dom.getDomModule(implementation, **kwargs).TreeBuilder\n        elif treeType == \"lxml\":\n            from . import etree_lxml\n            treeBuilderCache[treeType] = etree_lxml.TreeBuilder\n        elif treeType == \"etree\":\n            from . import etree\n            if implementation is None:\n                implementation = default_etree\n            # NEVER cache here, caching is done in the etree submodule\n            return etree.getETreeModule(implementation, **kwargs).TreeBuilder\n        else:\n            raise ValueError(\"\"\"Unrecognised treebuilder \"%s\" \"\"\" % treeType)",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 29,
                    "column": 4
                  },
                  "end": {
                    "row": 29,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "comparison_operator",
                  "start": {
                    "row": 29,
                    "column": 7
                  },
                  "end": {
                    "row": 29,
                    "column": 39
                  },
                  "text": "treeType not in treeBuilderCache",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 29,
                        "column": 7
                      },
                      "end": {
                        "row": 29,
                        "column": 15
                      },
                      "text": "treeType"
                    },
                    {
                      "type": "not in",
                      "start": {
                        "row": 29,
                        "column": 16
                      },
                      "end": {
                        "row": 29,
                        "column": 19
                      },
                      "text": "not"
                    },
                    {
                      "type": "not in",
                      "start": {
                        "row": 29,
                        "column": 20
                      },
                      "end": {
                        "row": 29,
                        "column": 22
                      },
                      "text": "in"
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 29,
                        "column": 23
                      },
                      "end": {
                        "row": 29,
                        "column": 39
                      },
                      "text": "treeBuilderCache"
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 29,
                    "column": 39
                  },
                  "end": {
                    "row": 29,
                    "column": 40
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 30,
                    "column": 8
                  },
                  "end": {
                    "row": 48,
                    "column": 77
                  },
                  "text": "if treeType == \"dom\":\n            from . import dom\n            # Come up with a sane default (pref. from the stdlib)\n            if implementation is None:\n                from xml.dom import minidom\n                implementation = minidom\n            # NEVER cache here, caching is done in the dom submodule\n            return dom.getDomModule(implementation, **kwargs).TreeBuilder\n        elif treeType == \"lxml\":\n            from . import etree_lxml\n            treeBuilderCache[treeType] = etree_lxml.TreeBuilder\n        elif treeType == \"etree\":\n            from . import etree\n            if implementation is None:\n                implementation = default_etree\n            # NEVER cache here, caching is done in the etree submodule\n            return etree.getETreeModule(implementation, **kwargs).TreeBuilder\n        else:\n            raise ValueError(\"\"\"Unrecognised treebuilder \"%s\" \"\"\" % treeType)",
                  "children": [
                    {
                      "type": "if_statement",
                      "start": {
                        "row": 30,
                        "column": 8
                      },
                      "end": {
                        "row": 48,
                        "column": 77
                      },
                      "text": "if treeType == \"dom\":\n            from . import dom\n            # Come up with a sane default (pref. from the stdlib)\n            if implementation is None:\n                from xml.dom import minidom\n                implementation = minidom\n            # NEVER cache here, caching is done in the dom submodule\n            return dom.getDomModule(implementation, **kwargs).TreeBuilder\n        elif treeType == \"lxml\":\n            from . import etree_lxml\n            treeBuilderCache[treeType] = etree_lxml.TreeBuilder\n        elif treeType == \"etree\":\n            from . import etree\n            if implementation is None:\n                implementation = default_etree\n            # NEVER cache here, caching is done in the etree submodule\n            return etree.getETreeModule(implementation, **kwargs).TreeBuilder\n        else:\n            raise ValueError(\"\"\"Unrecognised treebuilder \"%s\" \"\"\" % treeType)",
                      "children": [
                        {
                          "type": "if",
                          "start": {
                            "row": 30,
                            "column": 8
                          },
                          "end": {
                            "row": 30,
                            "column": 10
                          },
                          "text": "if"
                        },
                        {
                          "type": "comparison_operator",
                          "start": {
                            "row": 30,
                            "column": 11
                          },
                          "end": {
                            "row": 30,
                            "column": 28
                          },
                          "text": "treeType == \"dom\"",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 30,
                                "column": 11
                              },
                              "end": {
                                "row": 30,
                                "column": 19
                              },
                              "text": "treeType"
                            },
                            {
                              "type": "==",
                              "start": {
                                "row": 30,
                                "column": 20
                              },
                              "end": {
                                "row": 30,
                                "column": 22
                              },
                              "text": "=="
                            },
                            {
                              "type": "string",
                              "start": {
                                "row": 30,
                                "column": 23
                              },
                              "end": {
                                "row": 30,
                                "column": 28
                              },
                              "text": "\"dom\"",
                              "children": [
                                {
                                  "type": "string_start",
                                  "start": {
                                    "row": 30,
                                    "column": 23
                                  },
                                  "end": {
                                    "row": 30,
                                    "column": 24
                                  },
                                  "text": "\""
                                },
                                {
                                  "type": "string_content",
                                  "start": {
                                    "row": 30,
                                    "column": 24
                                  },
                                  "end": {
                                    "row": 30,
                                    "column": 27
                                  },
                                  "text": "dom"
                                },
                                {
                                  "type": "string_end",
                                  "start": {
                                    "row": 30,
                                    "column": 27
                                  },
                                  "end": {
                                    "row": 30,
                                    "column": 28
                                  },
                                  "text": "\""
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ":",
                          "start": {
                            "row": 30,
                            "column": 28
                          },
                          "end": {
                            "row": 30,
                            "column": 29
                          },
                          "text": ":"
                        },
                        {
                          "type": "block",
                          "start": {
                            "row": 31,
                            "column": 12
                          },
                          "end": {
                            "row": 37,
                            "column": 73
                          },
                          "text": "from . import dom\n            # Come up with a sane default (pref. from the stdlib)\n            if implementation is None:\n                from xml.dom import minidom\n                implementation = minidom\n            # NEVER cache here, caching is done in the dom submodule\n            return dom.getDomModule(implementation, **kwargs).TreeBuilder",
                          "children": [
                            {
                              "type": "import_from_statement",
                              "start": {
                                "row": 31,
                                "column": 12
                              },
                              "end": {
                                "row": 31,
                                "column": 29
                              },
                              "text": "from . import dom",
                              "children": [
                                {
                                  "type": "from",
                                  "start": {
                                    "row": 31,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 31,
                                    "column": 16
                                  },
                                  "text": "from"
                                },
                                {
                                  "type": "relative_import",
                                  "start": {
                                    "row": 31,
                                    "column": 17
                                  },
                                  "end": {
                                    "row": 31,
                                    "column": 18
                                  },
                                  "text": ".",
                                  "children": [
                                    {
                                      "type": "import_prefix",
                                      "start": {
                                        "row": 31,
                                        "column": 17
                                      },
                                      "end": {
                                        "row": 31,
                                        "column": 18
                                      },
                                      "text": ".",
                                      "children": [
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 31,
                                            "column": 17
                                          },
                                          "end": {
                                            "row": 31,
                                            "column": 18
                                          },
                                          "text": "."
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "import",
                                  "start": {
                                    "row": 31,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 31,
                                    "column": 25
                                  },
                                  "text": "import"
                                },
                                {
                                  "type": "dotted_name",
                                  "start": {
                                    "row": 31,
                                    "column": 26
                                  },
                                  "end": {
                                    "row": 31,
                                    "column": 29
                                  },
                                  "text": "dom",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 31,
                                        "column": 26
                                      },
                                      "end": {
                                        "row": 31,
                                        "column": 29
                                      },
                                      "text": "dom"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "comment",
                              "start": {
                                "row": 32,
                                "column": 12
                              },
                              "end": {
                                "row": 32,
                                "column": 65
                              },
                              "text": "# Come up with a sane default (pref. from the stdlib)"
                            },
                            {
                              "type": "if_statement",
                              "start": {
                                "row": 33,
                                "column": 12
                              },
                              "end": {
                                "row": 35,
                                "column": 40
                              },
                              "text": "if implementation is None:\n                from xml.dom import minidom\n                implementation = minidom",
                              "children": [
                                {
                                  "type": "if",
                                  "start": {
                                    "row": 33,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 33,
                                    "column": 14
                                  },
                                  "text": "if"
                                },
                                {
                                  "type": "comparison_operator",
                                  "start": {
                                    "row": 33,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 33,
                                    "column": 37
                                  },
                                  "text": "implementation is None",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 33,
                                        "column": 15
                                      },
                                      "end": {
                                        "row": 33,
                                        "column": 29
                                      },
                                      "text": "implementation"
                                    },
                                    {
                                      "type": "is",
                                      "start": {
                                        "row": 33,
                                        "column": 30
                                      },
                                      "end": {
                                        "row": 33,
                                        "column": 32
                                      },
                                      "text": "is"
                                    },
                                    {
                                      "type": "none",
                                      "start": {
                                        "row": 33,
                                        "column": 33
                                      },
                                      "end": {
                                        "row": 33,
                                        "column": 37
                                      },
                                      "text": "None"
                                    }
                                  ]
                                },
                                {
                                  "type": ":",
                                  "start": {
                                    "row": 33,
                                    "column": 37
                                  },
                                  "end": {
                                    "row": 33,
                                    "column": 38
                                  },
                                  "text": ":"
                                },
                                {
                                  "type": "block",
                                  "start": {
                                    "row": 34,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 35,
                                    "column": 40
                                  },
                                  "text": "from xml.dom import minidom\n                implementation = minidom",
                                  "children": [
                                    {
                                      "type": "import_from_statement",
                                      "start": {
                                        "row": 34,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 34,
                                        "column": 43
                                      },
                                      "text": "from xml.dom import minidom",
                                      "children": [
                                        {
                                          "type": "from",
                                          "start": {
                                            "row": 34,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 34,
                                            "column": 20
                                          },
                                          "text": "from"
                                        },
                                        {
                                          "type": "dotted_name",
                                          "start": {
                                            "row": 34,
                                            "column": 21
                                          },
                                          "end": {
                                            "row": 34,
                                            "column": 28
                                          },
                                          "text": "xml.dom",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 34,
                                                "column": 21
                                              },
                                              "end": {
                                                "row": 34,
                                                "column": 24
                                              },
                                              "text": "xml"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 34,
                                                "column": 24
                                              },
                                              "end": {
                                                "row": 34,
                                                "column": 25
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 34,
                                                "column": 25
                                              },
                                              "end": {
                                                "row": 34,
                                                "column": 28
                                              },
                                              "text": "dom"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "import",
                                          "start": {
                                            "row": 34,
                                            "column": 29
                                          },
                                          "end": {
                                            "row": 34,
                                            "column": 35
                                          },
                                          "text": "import"
                                        },
                                        {
                                          "type": "dotted_name",
                                          "start": {
                                            "row": 34,
                                            "column": 36
                                          },
                                          "end": {
                                            "row": 34,
                                            "column": 43
                                          },
                                          "text": "minidom",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 34,
                                                "column": 36
                                              },
                                              "end": {
                                                "row": 34,
                                                "column": 43
                                              },
                                              "text": "minidom"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start": {
                                        "row": 35,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 35,
                                        "column": 40
                                      },
                                      "text": "implementation = minidom",
                                      "children": [
                                        {
                                          "type": "assignment",
                                          "start": {
                                            "row": 35,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 35,
                                            "column": 40
                                          },
                                          "text": "implementation = minidom",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 35,
                                                "column": 16
                                              },
                                              "end": {
                                                "row": 35,
                                                "column": 30
                                              },
                                              "text": "implementation"
                                            },
                                            {
                                              "type": "=",
                                              "start": {
                                                "row": 35,
                                                "column": 31
                                              },
                                              "end": {
                                                "row": 35,
                                                "column": 32
                                              },
                                              "text": "="
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 35,
                                                "column": 33
                                              },
                                              "end": {
                                                "row": 35,
                                                "column": 40
                                              },
                                              "text": "minidom"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "comment",
                              "start": {
                                "row": 36,
                                "column": 12
                              },
                              "end": {
                                "row": 36,
                                "column": 68
                              },
                              "text": "# NEVER cache here, caching is done in the dom submodule"
                            },
                            {
                              "type": "return_statement",
                              "start": {
                                "row": 37,
                                "column": 12
                              },
                              "end": {
                                "row": 37,
                                "column": 73
                              },
                              "text": "return dom.getDomModule(implementation, **kwargs).TreeBuilder",
                              "children": [
                                {
                                  "type": "return",
                                  "start": {
                                    "row": 37,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 37,
                                    "column": 18
                                  },
                                  "text": "return"
                                },
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 37,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 37,
                                    "column": 73
                                  },
                                  "text": "dom.getDomModule(implementation, **kwargs).TreeBuilder",
                                  "children": [
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 37,
                                        "column": 19
                                      },
                                      "end": {
                                        "row": 37,
                                        "column": 61
                                      },
                                      "text": "dom.getDomModule(implementation, **kwargs)",
                                      "children": [
                                        {
                                          "type": "attribute",
                                          "start": {
                                            "row": 37,
                                            "column": 19
                                          },
                                          "end": {
                                            "row": 37,
                                            "column": 35
                                          },
                                          "text": "dom.getDomModule",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 37,
                                                "column": 19
                                              },
                                              "end": {
                                                "row": 37,
                                                "column": 22
                                              },
                                              "text": "dom"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 37,
                                                "column": 22
                                              },
                                              "end": {
                                                "row": 37,
                                                "column": 23
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 37,
                                                "column": 23
                                              },
                                              "end": {
                                                "row": 37,
                                                "column": 35
                                              },
                                              "text": "getDomModule"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 37,
                                            "column": 35
                                          },
                                          "end": {
                                            "row": 37,
                                            "column": 61
                                          },
                                          "text": "(implementation, **kwargs)",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 37,
                                                "column": 35
                                              },
                                              "end": {
                                                "row": 37,
                                                "column": 36
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 37,
                                                "column": 36
                                              },
                                              "end": {
                                                "row": 37,
                                                "column": 50
                                              },
                                              "text": "implementation"
                                            },
                                            {
                                              "type": ",",
                                              "start": {
                                                "row": 37,
                                                "column": 50
                                              },
                                              "end": {
                                                "row": 37,
                                                "column": 51
                                              },
                                              "text": ","
                                            },
                                            {
                                              "type": "dictionary_splat",
                                              "start": {
                                                "row": 37,
                                                "column": 52
                                              },
                                              "end": {
                                                "row": 37,
                                                "column": 60
                                              },
                                              "text": "**kwargs",
                                              "children": [
                                                {
                                                  "type": "**",
                                                  "start": {
                                                    "row": 37,
                                                    "column": 52
                                                  },
                                                  "end": {
                                                    "row": 37,
                                                    "column": 54
                                                  },
                                                  "text": "**"
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 37,
                                                    "column": 54
                                                  },
                                                  "end": {
                                                    "row": 37,
                                                    "column": 60
                                                  },
                                                  "text": "kwargs"
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 37,
                                                "column": 60
                                              },
                                              "end": {
                                                "row": 37,
                                                "column": 61
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 37,
                                        "column": 61
                                      },
                                      "end": {
                                        "row": 37,
                                        "column": 62
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 37,
                                        "column": 62
                                      },
                                      "end": {
                                        "row": 37,
                                        "column": 73
                                      },
                                      "text": "TreeBuilder"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "elif_clause",
                          "start": {
                            "row": 38,
                            "column": 8
                          },
                          "end": {
                            "row": 40,
                            "column": 63
                          },
                          "text": "elif treeType == \"lxml\":\n            from . import etree_lxml\n            treeBuilderCache[treeType] = etree_lxml.TreeBuilder",
                          "children": [
                            {
                              "type": "elif",
                              "start": {
                                "row": 38,
                                "column": 8
                              },
                              "end": {
                                "row": 38,
                                "column": 12
                              },
                              "text": "elif"
                            },
                            {
                              "type": "comparison_operator",
                              "start": {
                                "row": 38,
                                "column": 13
                              },
                              "end": {
                                "row": 38,
                                "column": 31
                              },
                              "text": "treeType == \"lxml\"",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 38,
                                    "column": 13
                                  },
                                  "end": {
                                    "row": 38,
                                    "column": 21
                                  },
                                  "text": "treeType"
                                },
                                {
                                  "type": "==",
                                  "start": {
                                    "row": 38,
                                    "column": 22
                                  },
                                  "end": {
                                    "row": 38,
                                    "column": 24
                                  },
                                  "text": "=="
                                },
                                {
                                  "type": "string",
                                  "start": {
                                    "row": 38,
                                    "column": 25
                                  },
                                  "end": {
                                    "row": 38,
                                    "column": 31
                                  },
                                  "text": "\"lxml\"",
                                  "children": [
                                    {
                                      "type": "string_start",
                                      "start": {
                                        "row": 38,
                                        "column": 25
                                      },
                                      "end": {
                                        "row": 38,
                                        "column": 26
                                      },
                                      "text": "\""
                                    },
                                    {
                                      "type": "string_content",
                                      "start": {
                                        "row": 38,
                                        "column": 26
                                      },
                                      "end": {
                                        "row": 38,
                                        "column": 30
                                      },
                                      "text": "lxml"
                                    },
                                    {
                                      "type": "string_end",
                                      "start": {
                                        "row": 38,
                                        "column": 30
                                      },
                                      "end": {
                                        "row": 38,
                                        "column": 31
                                      },
                                      "text": "\""
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ":",
                              "start": {
                                "row": 38,
                                "column": 31
                              },
                              "end": {
                                "row": 38,
                                "column": 32
                              },
                              "text": ":"
                            },
                            {
                              "type": "block",
                              "start": {
                                "row": 39,
                                "column": 12
                              },
                              "end": {
                                "row": 40,
                                "column": 63
                              },
                              "text": "from . import etree_lxml\n            treeBuilderCache[treeType] = etree_lxml.TreeBuilder",
                              "children": [
                                {
                                  "type": "import_from_statement",
                                  "start": {
                                    "row": 39,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 39,
                                    "column": 36
                                  },
                                  "text": "from . import etree_lxml",
                                  "children": [
                                    {
                                      "type": "from",
                                      "start": {
                                        "row": 39,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 39,
                                        "column": 16
                                      },
                                      "text": "from"
                                    },
                                    {
                                      "type": "relative_import",
                                      "start": {
                                        "row": 39,
                                        "column": 17
                                      },
                                      "end": {
                                        "row": 39,
                                        "column": 18
                                      },
                                      "text": ".",
                                      "children": [
                                        {
                                          "type": "import_prefix",
                                          "start": {
                                            "row": 39,
                                            "column": 17
                                          },
                                          "end": {
                                            "row": 39,
                                            "column": 18
                                          },
                                          "text": ".",
                                          "children": [
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 39,
                                                "column": 17
                                              },
                                              "end": {
                                                "row": 39,
                                                "column": 18
                                              },
                                              "text": "."
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "import",
                                      "start": {
                                        "row": 39,
                                        "column": 19
                                      },
                                      "end": {
                                        "row": 39,
                                        "column": 25
                                      },
                                      "text": "import"
                                    },
                                    {
                                      "type": "dotted_name",
                                      "start": {
                                        "row": 39,
                                        "column": 26
                                      },
                                      "end": {
                                        "row": 39,
                                        "column": 36
                                      },
                                      "text": "etree_lxml",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 39,
                                            "column": 26
                                          },
                                          "end": {
                                            "row": 39,
                                            "column": 36
                                          },
                                          "text": "etree_lxml"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "expression_statement",
                                  "start": {
                                    "row": 40,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 40,
                                    "column": 63
                                  },
                                  "text": "treeBuilderCache[treeType] = etree_lxml.TreeBuilder",
                                  "children": [
                                    {
                                      "type": "assignment",
                                      "start": {
                                        "row": 40,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 40,
                                        "column": 63
                                      },
                                      "text": "treeBuilderCache[treeType] = etree_lxml.TreeBuilder",
                                      "children": [
                                        {
                                          "type": "subscript",
                                          "start": {
                                            "row": 40,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 40,
                                            "column": 38
                                          },
                                          "text": "treeBuilderCache[treeType]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 40,
                                                "column": 12
                                              },
                                              "end": {
                                                "row": 40,
                                                "column": 28
                                              },
                                              "text": "treeBuilderCache"
                                            },
                                            {
                                              "type": "[",
                                              "start": {
                                                "row": 40,
                                                "column": 28
                                              },
                                              "end": {
                                                "row": 40,
                                                "column": 29
                                              },
                                              "text": "["
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 40,
                                                "column": 29
                                              },
                                              "end": {
                                                "row": 40,
                                                "column": 37
                                              },
                                              "text": "treeType"
                                            },
                                            {
                                              "type": "]",
                                              "start": {
                                                "row": 40,
                                                "column": 37
                                              },
                                              "end": {
                                                "row": 40,
                                                "column": 38
                                              },
                                              "text": "]"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "=",
                                          "start": {
                                            "row": 40,
                                            "column": 39
                                          },
                                          "end": {
                                            "row": 40,
                                            "column": 40
                                          },
                                          "text": "="
                                        },
                                        {
                                          "type": "attribute",
                                          "start": {
                                            "row": 40,
                                            "column": 41
                                          },
                                          "end": {
                                            "row": 40,
                                            "column": 63
                                          },
                                          "text": "etree_lxml.TreeBuilder",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 40,
                                                "column": 41
                                              },
                                              "end": {
                                                "row": 40,
                                                "column": 51
                                              },
                                              "text": "etree_lxml"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 40,
                                                "column": 51
                                              },
                                              "end": {
                                                "row": 40,
                                                "column": 52
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 40,
                                                "column": 52
                                              },
                                              "end": {
                                                "row": 40,
                                                "column": 63
                                              },
                                              "text": "TreeBuilder"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "elif_clause",
                          "start": {
                            "row": 41,
                            "column": 8
                          },
                          "end": {
                            "row": 46,
                            "column": 77
                          },
                          "text": "elif treeType == \"etree\":\n            from . import etree\n            if implementation is None:\n                implementation = default_etree\n            # NEVER cache here, caching is done in the etree submodule\n            return etree.getETreeModule(implementation, **kwargs).TreeBuilder",
                          "children": [
                            {
                              "type": "elif",
                              "start": {
                                "row": 41,
                                "column": 8
                              },
                              "end": {
                                "row": 41,
                                "column": 12
                              },
                              "text": "elif"
                            },
                            {
                              "type": "comparison_operator",
                              "start": {
                                "row": 41,
                                "column": 13
                              },
                              "end": {
                                "row": 41,
                                "column": 32
                              },
                              "text": "treeType == \"etree\"",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 41,
                                    "column": 13
                                  },
                                  "end": {
                                    "row": 41,
                                    "column": 21
                                  },
                                  "text": "treeType"
                                },
                                {
                                  "type": "==",
                                  "start": {
                                    "row": 41,
                                    "column": 22
                                  },
                                  "end": {
                                    "row": 41,
                                    "column": 24
                                  },
                                  "text": "=="
                                },
                                {
                                  "type": "string",
                                  "start": {
                                    "row": 41,
                                    "column": 25
                                  },
                                  "end": {
                                    "row": 41,
                                    "column": 32
                                  },
                                  "text": "\"etree\"",
                                  "children": [
                                    {
                                      "type": "string_start",
                                      "start": {
                                        "row": 41,
                                        "column": 25
                                      },
                                      "end": {
                                        "row": 41,
                                        "column": 26
                                      },
                                      "text": "\""
                                    },
                                    {
                                      "type": "string_content",
                                      "start": {
                                        "row": 41,
                                        "column": 26
                                      },
                                      "end": {
                                        "row": 41,
                                        "column": 31
                                      },
                                      "text": "etree"
                                    },
                                    {
                                      "type": "string_end",
                                      "start": {
                                        "row": 41,
                                        "column": 31
                                      },
                                      "end": {
                                        "row": 41,
                                        "column": 32
                                      },
                                      "text": "\""
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ":",
                              "start": {
                                "row": 41,
                                "column": 32
                              },
                              "end": {
                                "row": 41,
                                "column": 33
                              },
                              "text": ":"
                            },
                            {
                              "type": "block",
                              "start": {
                                "row": 42,
                                "column": 12
                              },
                              "end": {
                                "row": 46,
                                "column": 77
                              },
                              "text": "from . import etree\n            if implementation is None:\n                implementation = default_etree\n            # NEVER cache here, caching is done in the etree submodule\n            return etree.getETreeModule(implementation, **kwargs).TreeBuilder",
                              "children": [
                                {
                                  "type": "import_from_statement",
                                  "start": {
                                    "row": 42,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 42,
                                    "column": 31
                                  },
                                  "text": "from . import etree",
                                  "children": [
                                    {
                                      "type": "from",
                                      "start": {
                                        "row": 42,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 42,
                                        "column": 16
                                      },
                                      "text": "from"
                                    },
                                    {
                                      "type": "relative_import",
                                      "start": {
                                        "row": 42,
                                        "column": 17
                                      },
                                      "end": {
                                        "row": 42,
                                        "column": 18
                                      },
                                      "text": ".",
                                      "children": [
                                        {
                                          "type": "import_prefix",
                                          "start": {
                                            "row": 42,
                                            "column": 17
                                          },
                                          "end": {
                                            "row": 42,
                                            "column": 18
                                          },
                                          "text": ".",
                                          "children": [
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 42,
                                                "column": 17
                                              },
                                              "end": {
                                                "row": 42,
                                                "column": 18
                                              },
                                              "text": "."
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "import",
                                      "start": {
                                        "row": 42,
                                        "column": 19
                                      },
                                      "end": {
                                        "row": 42,
                                        "column": 25
                                      },
                                      "text": "import"
                                    },
                                    {
                                      "type": "dotted_name",
                                      "start": {
                                        "row": 42,
                                        "column": 26
                                      },
                                      "end": {
                                        "row": 42,
                                        "column": 31
                                      },
                                      "text": "etree",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 42,
                                            "column": 26
                                          },
                                          "end": {
                                            "row": 42,
                                            "column": 31
                                          },
                                          "text": "etree"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "if_statement",
                                  "start": {
                                    "row": 43,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 44,
                                    "column": 46
                                  },
                                  "text": "if implementation is None:\n                implementation = default_etree",
                                  "children": [
                                    {
                                      "type": "if",
                                      "start": {
                                        "row": 43,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 43,
                                        "column": 14
                                      },
                                      "text": "if"
                                    },
                                    {
                                      "type": "comparison_operator",
                                      "start": {
                                        "row": 43,
                                        "column": 15
                                      },
                                      "end": {
                                        "row": 43,
                                        "column": 37
                                      },
                                      "text": "implementation is None",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 43,
                                            "column": 15
                                          },
                                          "end": {
                                            "row": 43,
                                            "column": 29
                                          },
                                          "text": "implementation"
                                        },
                                        {
                                          "type": "is",
                                          "start": {
                                            "row": 43,
                                            "column": 30
                                          },
                                          "end": {
                                            "row": 43,
                                            "column": 32
                                          },
                                          "text": "is"
                                        },
                                        {
                                          "type": "none",
                                          "start": {
                                            "row": 43,
                                            "column": 33
                                          },
                                          "end": {
                                            "row": 43,
                                            "column": 37
                                          },
                                          "text": "None"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ":",
                                      "start": {
                                        "row": 43,
                                        "column": 37
                                      },
                                      "end": {
                                        "row": 43,
                                        "column": 38
                                      },
                                      "text": ":"
                                    },
                                    {
                                      "type": "block",
                                      "start": {
                                        "row": 44,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 44,
                                        "column": 46
                                      },
                                      "text": "implementation = default_etree",
                                      "children": [
                                        {
                                          "type": "expression_statement",
                                          "start": {
                                            "row": 44,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 44,
                                            "column": 46
                                          },
                                          "text": "implementation = default_etree",
                                          "children": [
                                            {
                                              "type": "assignment",
                                              "start": {
                                                "row": 44,
                                                "column": 16
                                              },
                                              "end": {
                                                "row": 44,
                                                "column": 46
                                              },
                                              "text": "implementation = default_etree",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 44,
                                                    "column": 16
                                                  },
                                                  "end": {
                                                    "row": 44,
                                                    "column": 30
                                                  },
                                                  "text": "implementation"
                                                },
                                                {
                                                  "type": "=",
                                                  "start": {
                                                    "row": 44,
                                                    "column": 31
                                                  },
                                                  "end": {
                                                    "row": 44,
                                                    "column": 32
                                                  },
                                                  "text": "="
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 44,
                                                    "column": 33
                                                  },
                                                  "end": {
                                                    "row": 44,
                                                    "column": 46
                                                  },
                                                  "text": "default_etree"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "comment",
                                  "start": {
                                    "row": 45,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 45,
                                    "column": 70
                                  },
                                  "text": "# NEVER cache here, caching is done in the etree submodule"
                                },
                                {
                                  "type": "return_statement",
                                  "start": {
                                    "row": 46,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 46,
                                    "column": 77
                                  },
                                  "text": "return etree.getETreeModule(implementation, **kwargs).TreeBuilder",
                                  "children": [
                                    {
                                      "type": "return",
                                      "start": {
                                        "row": 46,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 46,
                                        "column": 18
                                      },
                                      "text": "return"
                                    },
                                    {
                                      "type": "attribute",
                                      "start": {
                                        "row": 46,
                                        "column": 19
                                      },
                                      "end": {
                                        "row": 46,
                                        "column": 77
                                      },
                                      "text": "etree.getETreeModule(implementation, **kwargs).TreeBuilder",
                                      "children": [
                                        {
                                          "type": "call",
                                          "start": {
                                            "row": 46,
                                            "column": 19
                                          },
                                          "end": {
                                            "row": 46,
                                            "column": 65
                                          },
                                          "text": "etree.getETreeModule(implementation, **kwargs)",
                                          "children": [
                                            {
                                              "type": "attribute",
                                              "start": {
                                                "row": 46,
                                                "column": 19
                                              },
                                              "end": {
                                                "row": 46,
                                                "column": 39
                                              },
                                              "text": "etree.getETreeModule",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 46,
                                                    "column": 19
                                                  },
                                                  "end": {
                                                    "row": 46,
                                                    "column": 24
                                                  },
                                                  "text": "etree"
                                                },
                                                {
                                                  "type": ".",
                                                  "start": {
                                                    "row": 46,
                                                    "column": 24
                                                  },
                                                  "end": {
                                                    "row": 46,
                                                    "column": 25
                                                  },
                                                  "text": "."
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 46,
                                                    "column": 25
                                                  },
                                                  "end": {
                                                    "row": 46,
                                                    "column": 39
                                                  },
                                                  "text": "getETreeModule"
                                                }
                                              ]
                                            },
                                            {
                                              "type": "argument_list",
                                              "start": {
                                                "row": 46,
                                                "column": 39
                                              },
                                              "end": {
                                                "row": 46,
                                                "column": 65
                                              },
                                              "text": "(implementation, **kwargs)",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 46,
                                                    "column": 39
                                                  },
                                                  "end": {
                                                    "row": 46,
                                                    "column": 40
                                                  },
                                                  "text": "("
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 46,
                                                    "column": 40
                                                  },
                                                  "end": {
                                                    "row": 46,
                                                    "column": 54
                                                  },
                                                  "text": "implementation"
                                                },
                                                {
                                                  "type": ",",
                                                  "start": {
                                                    "row": 46,
                                                    "column": 54
                                                  },
                                                  "end": {
                                                    "row": 46,
                                                    "column": 55
                                                  },
                                                  "text": ","
                                                },
                                                {
                                                  "type": "dictionary_splat",
                                                  "start": {
                                                    "row": 46,
                                                    "column": 56
                                                  },
                                                  "end": {
                                                    "row": 46,
                                                    "column": 64
                                                  },
                                                  "text": "**kwargs",
                                                  "children": [
                                                    {
                                                      "type": "**",
                                                      "start": {
                                                        "row": 46,
                                                        "column": 56
                                                      },
                                                      "end": {
                                                        "row": 46,
                                                        "column": 58
                                                      },
                                                      "text": "**"
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 46,
                                                        "column": 58
                                                      },
                                                      "end": {
                                                        "row": 46,
                                                        "column": 64
                                                      },
                                                      "text": "kwargs"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 46,
                                                    "column": 64
                                                  },
                                                  "end": {
                                                    "row": 46,
                                                    "column": 65
                                                  },
                                                  "text": ")"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 46,
                                            "column": 65
                                          },
                                          "end": {
                                            "row": 46,
                                            "column": 66
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 46,
                                            "column": 66
                                          },
                                          "end": {
                                            "row": 46,
                                            "column": 77
                                          },
                                          "text": "TreeBuilder"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "else_clause",
                          "start": {
                            "row": 47,
                            "column": 8
                          },
                          "end": {
                            "row": 48,
                            "column": 77
                          },
                          "text": "else:\n            raise ValueError(\"\"\"Unrecognised treebuilder \"%s\" \"\"\" % treeType)",
                          "children": [
                            {
                              "type": "else",
                              "start": {
                                "row": 47,
                                "column": 8
                              },
                              "end": {
                                "row": 47,
                                "column": 12
                              },
                              "text": "else"
                            },
                            {
                              "type": ":",
                              "start": {
                                "row": 47,
                                "column": 12
                              },
                              "end": {
                                "row": 47,
                                "column": 13
                              },
                              "text": ":"
                            },
                            {
                              "type": "block",
                              "start": {
                                "row": 48,
                                "column": 12
                              },
                              "end": {
                                "row": 48,
                                "column": 77
                              },
                              "text": "raise ValueError(\"\"\"Unrecognised treebuilder \"%s\" \"\"\" % treeType)",
                              "children": [
                                {
                                  "type": "raise_statement",
                                  "start": {
                                    "row": 48,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 48,
                                    "column": 77
                                  },
                                  "text": "raise ValueError(\"\"\"Unrecognised treebuilder \"%s\" \"\"\" % treeType)",
                                  "children": [
                                    {
                                      "type": "raise",
                                      "start": {
                                        "row": 48,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 48,
                                        "column": 17
                                      },
                                      "text": "raise"
                                    },
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 48,
                                        "column": 18
                                      },
                                      "end": {
                                        "row": 48,
                                        "column": 77
                                      },
                                      "text": "ValueError(\"\"\"Unrecognised treebuilder \"%s\" \"\"\" % treeType)",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 48,
                                            "column": 18
                                          },
                                          "end": {
                                            "row": 48,
                                            "column": 28
                                          },
                                          "text": "ValueError"
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 48,
                                            "column": 28
                                          },
                                          "end": {
                                            "row": 48,
                                            "column": 77
                                          },
                                          "text": "(\"\"\"Unrecognised treebuilder \"%s\" \"\"\" % treeType)",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 48,
                                                "column": 28
                                              },
                                              "end": {
                                                "row": 48,
                                                "column": 29
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "binary_operator",
                                              "start": {
                                                "row": 48,
                                                "column": 29
                                              },
                                              "end": {
                                                "row": 48,
                                                "column": 76
                                              },
                                              "text": "\"\"\"Unrecognised treebuilder \"%s\" \"\"\" % treeType",
                                              "children": [
                                                {
                                                  "type": "string",
                                                  "start": {
                                                    "row": 48,
                                                    "column": 29
                                                  },
                                                  "end": {
                                                    "row": 48,
                                                    "column": 65
                                                  },
                                                  "text": "\"\"\"Unrecognised treebuilder \"%s\" \"\"\"",
                                                  "children": [
                                                    {
                                                      "type": "string_start",
                                                      "start": {
                                                        "row": 48,
                                                        "column": 29
                                                      },
                                                      "end": {
                                                        "row": 48,
                                                        "column": 32
                                                      },
                                                      "text": "\"\"\""
                                                    },
                                                    {
                                                      "type": "string_content",
                                                      "start": {
                                                        "row": 48,
                                                        "column": 32
                                                      },
                                                      "end": {
                                                        "row": 48,
                                                        "column": 62
                                                      },
                                                      "text": "Unrecognised treebuilder \"%s\" "
                                                    },
                                                    {
                                                      "type": "string_end",
                                                      "start": {
                                                        "row": 48,
                                                        "column": 62
                                                      },
                                                      "end": {
                                                        "row": 48,
                                                        "column": 65
                                                      },
                                                      "text": "\"\"\""
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "%",
                                                  "start": {
                                                    "row": 48,
                                                    "column": 66
                                                  },
                                                  "end": {
                                                    "row": 48,
                                                    "column": 67
                                                  },
                                                  "text": "%"
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 48,
                                                    "column": 68
                                                  },
                                                  "end": {
                                                    "row": 48,
                                                    "column": 76
                                                  },
                                                  "text": "treeType"
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 48,
                                                "column": 76
                                              },
                                              "end": {
                                                "row": 48,
                                                "column": 77
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 49,
                "column": 4
              },
              "end": {
                "row": 49,
                "column": 41
              },
              "text": "return treeBuilderCache.get(treeType)",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 49,
                    "column": 4
                  },
                  "end": {
                    "row": 49,
                    "column": 10
                  },
                  "text": "return"
                },
                {
                  "type": "call",
                  "start": {
                    "row": 49,
                    "column": 11
                  },
                  "end": {
                    "row": 49,
                    "column": 41
                  },
                  "text": "treeBuilderCache.get(treeType)",
                  "children": [
                    {
                      "type": "attribute",
                      "start": {
                        "row": 49,
                        "column": 11
                      },
                      "end": {
                        "row": 49,
                        "column": 31
                      },
                      "text": "treeBuilderCache.get",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 49,
                            "column": 11
                          },
                          "end": {
                            "row": 49,
                            "column": 27
                          },
                          "text": "treeBuilderCache"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 49,
                            "column": 27
                          },
                          "end": {
                            "row": 49,
                            "column": 28
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 49,
                            "column": 28
                          },
                          "end": {
                            "row": 49,
                            "column": 31
                          },
                          "text": "get"
                        }
                      ]
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 49,
                        "column": 31
                      },
                      "end": {
                        "row": 49,
                        "column": 41
                      },
                      "text": "(treeType)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 49,
                            "column": 31
                          },
                          "end": {
                            "row": 49,
                            "column": 32
                          },
                          "text": "("
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 49,
                            "column": 32
                          },
                          "end": {
                            "row": 49,
                            "column": 40
                          },
                          "text": "treeType"
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 49,
                            "column": 40
                          },
                          "end": {
                            "row": 49,
                            "column": 41
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}