{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 25,
    "column": 68
  },
  "text": "def reduceByKeyLocally(self, func):\n        \"\"\"\n        Merge the values for each key using an associative and commutative reduce function, but\n        return the results immediately to the master as a dictionary.\n\n        This will also perform the merging locally on each mapper before\n        sending results to a reducer, similarly to a \"combiner\" in MapReduce.\n\n        >>> from operator import add\n        >>> rdd = sc.parallelize([(\"a\", 1), (\"b\", 1), (\"a\", 1)])\n        >>> sorted(rdd.reduceByKeyLocally(add).items())\n        [('a', 2), ('b', 1)]\n        \"\"\"\n        func = fail_on_stopiteration(func)\n\n        def reducePartition(iterator):\n            m = {}\n            for k, v in iterator:\n                m[k] = func(m[k], v) if k in m else v\n            yield m\n\n        def mergeMaps(m1, m2):\n            for k, v in m2.items():\n                m1[k] = func(m1[k], v) if k in m1 else v\n            return m1\n        return self.mapPartitions(reducePartition).reduce(mergeMaps)",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 25,
        "column": 68
      },
      "text": "def reduceByKeyLocally(self, func):\n        \"\"\"\n        Merge the values for each key using an associative and commutative reduce function, but\n        return the results immediately to the master as a dictionary.\n\n        This will also perform the merging locally on each mapper before\n        sending results to a reducer, similarly to a \"combiner\" in MapReduce.\n\n        >>> from operator import add\n        >>> rdd = sc.parallelize([(\"a\", 1), (\"b\", 1), (\"a\", 1)])\n        >>> sorted(rdd.reduceByKeyLocally(add).items())\n        [('a', 2), ('b', 1)]\n        \"\"\"\n        func = fail_on_stopiteration(func)\n\n        def reducePartition(iterator):\n            m = {}\n            for k, v in iterator:\n                m[k] = func(m[k], v) if k in m else v\n            yield m\n\n        def mergeMaps(m1, m2):\n            for k, v in m2.items():\n                m1[k] = func(m1[k], v) if k in m1 else v\n            return m1\n        return self.mapPartitions(reducePartition).reduce(mergeMaps)",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 22
          },
          "text": "reduceByKeyLocally"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 22
          },
          "end": {
            "row": 0,
            "column": 34
          },
          "text": "(self, func)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 22
              },
              "end": {
                "row": 0,
                "column": 23
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 23
              },
              "end": {
                "row": 0,
                "column": 27
              },
              "text": "self"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 27
              },
              "end": {
                "row": 0,
                "column": 28
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 29
              },
              "end": {
                "row": 0,
                "column": 33
              },
              "text": "func"
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 33
              },
              "end": {
                "row": 0,
                "column": 34
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 34
          },
          "end": {
            "row": 0,
            "column": 35
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 8
          },
          "end": {
            "row": 25,
            "column": 68
          },
          "text": "\"\"\"\n        Merge the values for each key using an associative and commutative reduce function, but\n        return the results immediately to the master as a dictionary.\n\n        This will also perform the merging locally on each mapper before\n        sending results to a reducer, similarly to a \"combiner\" in MapReduce.\n\n        >>> from operator import add\n        >>> rdd = sc.parallelize([(\"a\", 1), (\"b\", 1), (\"a\", 1)])\n        >>> sorted(rdd.reduceByKeyLocally(add).items())\n        [('a', 2), ('b', 1)]\n        \"\"\"\n        func = fail_on_stopiteration(func)\n\n        def reducePartition(iterator):\n            m = {}\n            for k, v in iterator:\n                m[k] = func(m[k], v) if k in m else v\n            yield m\n\n        def mergeMaps(m1, m2):\n            for k, v in m2.items():\n                m1[k] = func(m1[k], v) if k in m1 else v\n            return m1\n        return self.mapPartitions(reducePartition).reduce(mergeMaps)",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 8
              },
              "end": {
                "row": 12,
                "column": 11
              },
              "text": "\"\"\"\n        Merge the values for each key using an associative and commutative reduce function, but\n        return the results immediately to the master as a dictionary.\n\n        This will also perform the merging locally on each mapper before\n        sending results to a reducer, similarly to a \"combiner\" in MapReduce.\n\n        >>> from operator import add\n        >>> rdd = sc.parallelize([(\"a\", 1), (\"b\", 1), (\"a\", 1)])\n        >>> sorted(rdd.reduceByKeyLocally(add).items())\n        [('a', 2), ('b', 1)]\n        \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 8
                  },
                  "end": {
                    "row": 12,
                    "column": 11
                  },
                  "text": "\"\"\"\n        Merge the values for each key using an associative and commutative reduce function, but\n        return the results immediately to the master as a dictionary.\n\n        This will also perform the merging locally on each mapper before\n        sending results to a reducer, similarly to a \"combiner\" in MapReduce.\n\n        >>> from operator import add\n        >>> rdd = sc.parallelize([(\"a\", 1), (\"b\", 1), (\"a\", 1)])\n        >>> sorted(rdd.reduceByKeyLocally(add).items())\n        [('a', 2), ('b', 1)]\n        \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 8
                      },
                      "end": {
                        "row": 1,
                        "column": 11
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 11
                      },
                      "end": {
                        "row": 12,
                        "column": 8
                      },
                      "text": "\n        Merge the values for each key using an associative and commutative reduce function, but\n        return the results immediately to the master as a dictionary.\n\n        This will also perform the merging locally on each mapper before\n        sending results to a reducer, similarly to a \"combiner\" in MapReduce.\n\n        >>> from operator import add\n        >>> rdd = sc.parallelize([(\"a\", 1), (\"b\", 1), (\"a\", 1)])\n        >>> sorted(rdd.reduceByKeyLocally(add).items())\n        [('a', 2), ('b', 1)]\n        "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 12,
                        "column": 8
                      },
                      "end": {
                        "row": 12,
                        "column": 11
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 13,
                "column": 8
              },
              "end": {
                "row": 13,
                "column": 42
              },
              "text": "func = fail_on_stopiteration(func)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 13,
                    "column": 8
                  },
                  "end": {
                    "row": 13,
                    "column": 42
                  },
                  "text": "func = fail_on_stopiteration(func)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 13,
                        "column": 8
                      },
                      "end": {
                        "row": 13,
                        "column": 12
                      },
                      "text": "func"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 13,
                        "column": 13
                      },
                      "end": {
                        "row": 13,
                        "column": 14
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 13,
                        "column": 15
                      },
                      "end": {
                        "row": 13,
                        "column": 42
                      },
                      "text": "fail_on_stopiteration(func)",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 13,
                            "column": 15
                          },
                          "end": {
                            "row": 13,
                            "column": 36
                          },
                          "text": "fail_on_stopiteration"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 13,
                            "column": 36
                          },
                          "end": {
                            "row": 13,
                            "column": 42
                          },
                          "text": "(func)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 13,
                                "column": 36
                              },
                              "end": {
                                "row": 13,
                                "column": 37
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 13,
                                "column": 37
                              },
                              "end": {
                                "row": 13,
                                "column": 41
                              },
                              "text": "func"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 13,
                                "column": 41
                              },
                              "end": {
                                "row": 13,
                                "column": 42
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "function_definition",
              "start": {
                "row": 15,
                "column": 8
              },
              "end": {
                "row": 19,
                "column": 19
              },
              "text": "def reducePartition(iterator):\n            m = {}\n            for k, v in iterator:\n                m[k] = func(m[k], v) if k in m else v\n            yield m",
              "children": [
                {
                  "type": "def",
                  "start": {
                    "row": 15,
                    "column": 8
                  },
                  "end": {
                    "row": 15,
                    "column": 11
                  },
                  "text": "def"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 15,
                    "column": 12
                  },
                  "end": {
                    "row": 15,
                    "column": 27
                  },
                  "text": "reducePartition"
                },
                {
                  "type": "parameters",
                  "start": {
                    "row": 15,
                    "column": 27
                  },
                  "end": {
                    "row": 15,
                    "column": 37
                  },
                  "text": "(iterator)",
                  "children": [
                    {
                      "type": "(",
                      "start": {
                        "row": 15,
                        "column": 27
                      },
                      "end": {
                        "row": 15,
                        "column": 28
                      },
                      "text": "("
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 15,
                        "column": 28
                      },
                      "end": {
                        "row": 15,
                        "column": 36
                      },
                      "text": "iterator"
                    },
                    {
                      "type": ")",
                      "start": {
                        "row": 15,
                        "column": 36
                      },
                      "end": {
                        "row": 15,
                        "column": 37
                      },
                      "text": ")"
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 15,
                    "column": 37
                  },
                  "end": {
                    "row": 15,
                    "column": 38
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 16,
                    "column": 12
                  },
                  "end": {
                    "row": 19,
                    "column": 19
                  },
                  "text": "m = {}\n            for k, v in iterator:\n                m[k] = func(m[k], v) if k in m else v\n            yield m",
                  "children": [
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 16,
                        "column": 12
                      },
                      "end": {
                        "row": 16,
                        "column": 18
                      },
                      "text": "m = {}",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 16,
                            "column": 12
                          },
                          "end": {
                            "row": 16,
                            "column": 18
                          },
                          "text": "m = {}",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 16,
                                "column": 12
                              },
                              "end": {
                                "row": 16,
                                "column": 13
                              },
                              "text": "m"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 16,
                                "column": 14
                              },
                              "end": {
                                "row": 16,
                                "column": 15
                              },
                              "text": "="
                            },
                            {
                              "type": "dictionary",
                              "start": {
                                "row": 16,
                                "column": 16
                              },
                              "end": {
                                "row": 16,
                                "column": 18
                              },
                              "text": "{}",
                              "children": [
                                {
                                  "type": "{",
                                  "start": {
                                    "row": 16,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 17
                                  },
                                  "text": "{"
                                },
                                {
                                  "type": "}",
                                  "start": {
                                    "row": 16,
                                    "column": 17
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 18
                                  },
                                  "text": "}"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start": {
                        "row": 17,
                        "column": 12
                      },
                      "end": {
                        "row": 18,
                        "column": 53
                      },
                      "text": "for k, v in iterator:\n                m[k] = func(m[k], v) if k in m else v",
                      "children": [
                        {
                          "type": "for",
                          "start": {
                            "row": 17,
                            "column": 12
                          },
                          "end": {
                            "row": 17,
                            "column": 15
                          },
                          "text": "for"
                        },
                        {
                          "type": "pattern_list",
                          "start": {
                            "row": 17,
                            "column": 16
                          },
                          "end": {
                            "row": 17,
                            "column": 20
                          },
                          "text": "k, v",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 17,
                                "column": 16
                              },
                              "end": {
                                "row": 17,
                                "column": 17
                              },
                              "text": "k"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 17,
                                "column": 17
                              },
                              "end": {
                                "row": 17,
                                "column": 18
                              },
                              "text": ","
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 17,
                                "column": 19
                              },
                              "end": {
                                "row": 17,
                                "column": 20
                              },
                              "text": "v"
                            }
                          ]
                        },
                        {
                          "type": "in",
                          "start": {
                            "row": 17,
                            "column": 21
                          },
                          "end": {
                            "row": 17,
                            "column": 23
                          },
                          "text": "in"
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 17,
                            "column": 24
                          },
                          "end": {
                            "row": 17,
                            "column": 32
                          },
                          "text": "iterator"
                        },
                        {
                          "type": ":",
                          "start": {
                            "row": 17,
                            "column": 32
                          },
                          "end": {
                            "row": 17,
                            "column": 33
                          },
                          "text": ":"
                        },
                        {
                          "type": "block",
                          "start": {
                            "row": 18,
                            "column": 16
                          },
                          "end": {
                            "row": 18,
                            "column": 53
                          },
                          "text": "m[k] = func(m[k], v) if k in m else v",
                          "children": [
                            {
                              "type": "expression_statement",
                              "start": {
                                "row": 18,
                                "column": 16
                              },
                              "end": {
                                "row": 18,
                                "column": 53
                              },
                              "text": "m[k] = func(m[k], v) if k in m else v",
                              "children": [
                                {
                                  "type": "assignment",
                                  "start": {
                                    "row": 18,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 18,
                                    "column": 53
                                  },
                                  "text": "m[k] = func(m[k], v) if k in m else v",
                                  "children": [
                                    {
                                      "type": "subscript",
                                      "start": {
                                        "row": 18,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 18,
                                        "column": 20
                                      },
                                      "text": "m[k]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 18,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 18,
                                            "column": 17
                                          },
                                          "text": "m"
                                        },
                                        {
                                          "type": "[",
                                          "start": {
                                            "row": 18,
                                            "column": 17
                                          },
                                          "end": {
                                            "row": 18,
                                            "column": 18
                                          },
                                          "text": "["
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 18,
                                            "column": 18
                                          },
                                          "end": {
                                            "row": 18,
                                            "column": 19
                                          },
                                          "text": "k"
                                        },
                                        {
                                          "type": "]",
                                          "start": {
                                            "row": 18,
                                            "column": 19
                                          },
                                          "end": {
                                            "row": 18,
                                            "column": 20
                                          },
                                          "text": "]"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "=",
                                      "start": {
                                        "row": 18,
                                        "column": 21
                                      },
                                      "end": {
                                        "row": 18,
                                        "column": 22
                                      },
                                      "text": "="
                                    },
                                    {
                                      "type": "conditional_expression",
                                      "start": {
                                        "row": 18,
                                        "column": 23
                                      },
                                      "end": {
                                        "row": 18,
                                        "column": 53
                                      },
                                      "text": "func(m[k], v) if k in m else v",
                                      "children": [
                                        {
                                          "type": "call",
                                          "start": {
                                            "row": 18,
                                            "column": 23
                                          },
                                          "end": {
                                            "row": 18,
                                            "column": 36
                                          },
                                          "text": "func(m[k], v)",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 18,
                                                "column": 23
                                              },
                                              "end": {
                                                "row": 18,
                                                "column": 27
                                              },
                                              "text": "func"
                                            },
                                            {
                                              "type": "argument_list",
                                              "start": {
                                                "row": 18,
                                                "column": 27
                                              },
                                              "end": {
                                                "row": 18,
                                                "column": 36
                                              },
                                              "text": "(m[k], v)",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 18,
                                                    "column": 27
                                                  },
                                                  "end": {
                                                    "row": 18,
                                                    "column": 28
                                                  },
                                                  "text": "("
                                                },
                                                {
                                                  "type": "subscript",
                                                  "start": {
                                                    "row": 18,
                                                    "column": 28
                                                  },
                                                  "end": {
                                                    "row": 18,
                                                    "column": 32
                                                  },
                                                  "text": "m[k]",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 18,
                                                        "column": 28
                                                      },
                                                      "end": {
                                                        "row": 18,
                                                        "column": 29
                                                      },
                                                      "text": "m"
                                                    },
                                                    {
                                                      "type": "[",
                                                      "start": {
                                                        "row": 18,
                                                        "column": 29
                                                      },
                                                      "end": {
                                                        "row": 18,
                                                        "column": 30
                                                      },
                                                      "text": "["
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 18,
                                                        "column": 30
                                                      },
                                                      "end": {
                                                        "row": 18,
                                                        "column": 31
                                                      },
                                                      "text": "k"
                                                    },
                                                    {
                                                      "type": "]",
                                                      "start": {
                                                        "row": 18,
                                                        "column": 31
                                                      },
                                                      "end": {
                                                        "row": 18,
                                                        "column": 32
                                                      },
                                                      "text": "]"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ",",
                                                  "start": {
                                                    "row": 18,
                                                    "column": 32
                                                  },
                                                  "end": {
                                                    "row": 18,
                                                    "column": 33
                                                  },
                                                  "text": ","
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 18,
                                                    "column": 34
                                                  },
                                                  "end": {
                                                    "row": 18,
                                                    "column": 35
                                                  },
                                                  "text": "v"
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 18,
                                                    "column": 35
                                                  },
                                                  "end": {
                                                    "row": 18,
                                                    "column": 36
                                                  },
                                                  "text": ")"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "if",
                                          "start": {
                                            "row": 18,
                                            "column": 37
                                          },
                                          "end": {
                                            "row": 18,
                                            "column": 39
                                          },
                                          "text": "if"
                                        },
                                        {
                                          "type": "comparison_operator",
                                          "start": {
                                            "row": 18,
                                            "column": 40
                                          },
                                          "end": {
                                            "row": 18,
                                            "column": 46
                                          },
                                          "text": "k in m",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 18,
                                                "column": 40
                                              },
                                              "end": {
                                                "row": 18,
                                                "column": 41
                                              },
                                              "text": "k"
                                            },
                                            {
                                              "type": "in",
                                              "start": {
                                                "row": 18,
                                                "column": 42
                                              },
                                              "end": {
                                                "row": 18,
                                                "column": 44
                                              },
                                              "text": "in"
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 18,
                                                "column": 45
                                              },
                                              "end": {
                                                "row": 18,
                                                "column": 46
                                              },
                                              "text": "m"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "else",
                                          "start": {
                                            "row": 18,
                                            "column": 47
                                          },
                                          "end": {
                                            "row": 18,
                                            "column": 51
                                          },
                                          "text": "else"
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 18,
                                            "column": 52
                                          },
                                          "end": {
                                            "row": 18,
                                            "column": 53
                                          },
                                          "text": "v"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 19,
                        "column": 12
                      },
                      "end": {
                        "row": 19,
                        "column": 19
                      },
                      "text": "yield m",
                      "children": [
                        {
                          "type": "yield",
                          "start": {
                            "row": 19,
                            "column": 12
                          },
                          "end": {
                            "row": 19,
                            "column": 19
                          },
                          "text": "yield m",
                          "children": [
                            {
                              "type": "yield",
                              "start": {
                                "row": 19,
                                "column": 12
                              },
                              "end": {
                                "row": 19,
                                "column": 17
                              },
                              "text": "yield"
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 19,
                                "column": 18
                              },
                              "end": {
                                "row": 19,
                                "column": 19
                              },
                              "text": "m"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "function_definition",
              "start": {
                "row": 21,
                "column": 8
              },
              "end": {
                "row": 24,
                "column": 21
              },
              "text": "def mergeMaps(m1, m2):\n            for k, v in m2.items():\n                m1[k] = func(m1[k], v) if k in m1 else v\n            return m1",
              "children": [
                {
                  "type": "def",
                  "start": {
                    "row": 21,
                    "column": 8
                  },
                  "end": {
                    "row": 21,
                    "column": 11
                  },
                  "text": "def"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 21,
                    "column": 12
                  },
                  "end": {
                    "row": 21,
                    "column": 21
                  },
                  "text": "mergeMaps"
                },
                {
                  "type": "parameters",
                  "start": {
                    "row": 21,
                    "column": 21
                  },
                  "end": {
                    "row": 21,
                    "column": 29
                  },
                  "text": "(m1, m2)",
                  "children": [
                    {
                      "type": "(",
                      "start": {
                        "row": 21,
                        "column": 21
                      },
                      "end": {
                        "row": 21,
                        "column": 22
                      },
                      "text": "("
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 21,
                        "column": 22
                      },
                      "end": {
                        "row": 21,
                        "column": 24
                      },
                      "text": "m1"
                    },
                    {
                      "type": ",",
                      "start": {
                        "row": 21,
                        "column": 24
                      },
                      "end": {
                        "row": 21,
                        "column": 25
                      },
                      "text": ","
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 21,
                        "column": 26
                      },
                      "end": {
                        "row": 21,
                        "column": 28
                      },
                      "text": "m2"
                    },
                    {
                      "type": ")",
                      "start": {
                        "row": 21,
                        "column": 28
                      },
                      "end": {
                        "row": 21,
                        "column": 29
                      },
                      "text": ")"
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 21,
                    "column": 29
                  },
                  "end": {
                    "row": 21,
                    "column": 30
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 22,
                    "column": 12
                  },
                  "end": {
                    "row": 24,
                    "column": 21
                  },
                  "text": "for k, v in m2.items():\n                m1[k] = func(m1[k], v) if k in m1 else v\n            return m1",
                  "children": [
                    {
                      "type": "for_statement",
                      "start": {
                        "row": 22,
                        "column": 12
                      },
                      "end": {
                        "row": 23,
                        "column": 56
                      },
                      "text": "for k, v in m2.items():\n                m1[k] = func(m1[k], v) if k in m1 else v",
                      "children": [
                        {
                          "type": "for",
                          "start": {
                            "row": 22,
                            "column": 12
                          },
                          "end": {
                            "row": 22,
                            "column": 15
                          },
                          "text": "for"
                        },
                        {
                          "type": "pattern_list",
                          "start": {
                            "row": 22,
                            "column": 16
                          },
                          "end": {
                            "row": 22,
                            "column": 20
                          },
                          "text": "k, v",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 22,
                                "column": 16
                              },
                              "end": {
                                "row": 22,
                                "column": 17
                              },
                              "text": "k"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 22,
                                "column": 17
                              },
                              "end": {
                                "row": 22,
                                "column": 18
                              },
                              "text": ","
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 22,
                                "column": 19
                              },
                              "end": {
                                "row": 22,
                                "column": 20
                              },
                              "text": "v"
                            }
                          ]
                        },
                        {
                          "type": "in",
                          "start": {
                            "row": 22,
                            "column": 21
                          },
                          "end": {
                            "row": 22,
                            "column": 23
                          },
                          "text": "in"
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 22,
                            "column": 24
                          },
                          "end": {
                            "row": 22,
                            "column": 34
                          },
                          "text": "m2.items()",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 22,
                                "column": 24
                              },
                              "end": {
                                "row": 22,
                                "column": 32
                              },
                              "text": "m2.items",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 22,
                                    "column": 24
                                  },
                                  "end": {
                                    "row": 22,
                                    "column": 26
                                  },
                                  "text": "m2"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 22,
                                    "column": 26
                                  },
                                  "end": {
                                    "row": 22,
                                    "column": 27
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 22,
                                    "column": 27
                                  },
                                  "end": {
                                    "row": 22,
                                    "column": 32
                                  },
                                  "text": "items"
                                }
                              ]
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 22,
                                "column": 32
                              },
                              "end": {
                                "row": 22,
                                "column": 34
                              },
                              "text": "()",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 22,
                                    "column": 32
                                  },
                                  "end": {
                                    "row": 22,
                                    "column": 33
                                  },
                                  "text": "("
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 22,
                                    "column": 33
                                  },
                                  "end": {
                                    "row": 22,
                                    "column": 34
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ":",
                          "start": {
                            "row": 22,
                            "column": 34
                          },
                          "end": {
                            "row": 22,
                            "column": 35
                          },
                          "text": ":"
                        },
                        {
                          "type": "block",
                          "start": {
                            "row": 23,
                            "column": 16
                          },
                          "end": {
                            "row": 23,
                            "column": 56
                          },
                          "text": "m1[k] = func(m1[k], v) if k in m1 else v",
                          "children": [
                            {
                              "type": "expression_statement",
                              "start": {
                                "row": 23,
                                "column": 16
                              },
                              "end": {
                                "row": 23,
                                "column": 56
                              },
                              "text": "m1[k] = func(m1[k], v) if k in m1 else v",
                              "children": [
                                {
                                  "type": "assignment",
                                  "start": {
                                    "row": 23,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 23,
                                    "column": 56
                                  },
                                  "text": "m1[k] = func(m1[k], v) if k in m1 else v",
                                  "children": [
                                    {
                                      "type": "subscript",
                                      "start": {
                                        "row": 23,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 23,
                                        "column": 21
                                      },
                                      "text": "m1[k]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 23,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 23,
                                            "column": 18
                                          },
                                          "text": "m1"
                                        },
                                        {
                                          "type": "[",
                                          "start": {
                                            "row": 23,
                                            "column": 18
                                          },
                                          "end": {
                                            "row": 23,
                                            "column": 19
                                          },
                                          "text": "["
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 23,
                                            "column": 19
                                          },
                                          "end": {
                                            "row": 23,
                                            "column": 20
                                          },
                                          "text": "k"
                                        },
                                        {
                                          "type": "]",
                                          "start": {
                                            "row": 23,
                                            "column": 20
                                          },
                                          "end": {
                                            "row": 23,
                                            "column": 21
                                          },
                                          "text": "]"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "=",
                                      "start": {
                                        "row": 23,
                                        "column": 22
                                      },
                                      "end": {
                                        "row": 23,
                                        "column": 23
                                      },
                                      "text": "="
                                    },
                                    {
                                      "type": "conditional_expression",
                                      "start": {
                                        "row": 23,
                                        "column": 24
                                      },
                                      "end": {
                                        "row": 23,
                                        "column": 56
                                      },
                                      "text": "func(m1[k], v) if k in m1 else v",
                                      "children": [
                                        {
                                          "type": "call",
                                          "start": {
                                            "row": 23,
                                            "column": 24
                                          },
                                          "end": {
                                            "row": 23,
                                            "column": 38
                                          },
                                          "text": "func(m1[k], v)",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 23,
                                                "column": 24
                                              },
                                              "end": {
                                                "row": 23,
                                                "column": 28
                                              },
                                              "text": "func"
                                            },
                                            {
                                              "type": "argument_list",
                                              "start": {
                                                "row": 23,
                                                "column": 28
                                              },
                                              "end": {
                                                "row": 23,
                                                "column": 38
                                              },
                                              "text": "(m1[k], v)",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 23,
                                                    "column": 28
                                                  },
                                                  "end": {
                                                    "row": 23,
                                                    "column": 29
                                                  },
                                                  "text": "("
                                                },
                                                {
                                                  "type": "subscript",
                                                  "start": {
                                                    "row": 23,
                                                    "column": 29
                                                  },
                                                  "end": {
                                                    "row": 23,
                                                    "column": 34
                                                  },
                                                  "text": "m1[k]",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 23,
                                                        "column": 29
                                                      },
                                                      "end": {
                                                        "row": 23,
                                                        "column": 31
                                                      },
                                                      "text": "m1"
                                                    },
                                                    {
                                                      "type": "[",
                                                      "start": {
                                                        "row": 23,
                                                        "column": 31
                                                      },
                                                      "end": {
                                                        "row": 23,
                                                        "column": 32
                                                      },
                                                      "text": "["
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 23,
                                                        "column": 32
                                                      },
                                                      "end": {
                                                        "row": 23,
                                                        "column": 33
                                                      },
                                                      "text": "k"
                                                    },
                                                    {
                                                      "type": "]",
                                                      "start": {
                                                        "row": 23,
                                                        "column": 33
                                                      },
                                                      "end": {
                                                        "row": 23,
                                                        "column": 34
                                                      },
                                                      "text": "]"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ",",
                                                  "start": {
                                                    "row": 23,
                                                    "column": 34
                                                  },
                                                  "end": {
                                                    "row": 23,
                                                    "column": 35
                                                  },
                                                  "text": ","
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 23,
                                                    "column": 36
                                                  },
                                                  "end": {
                                                    "row": 23,
                                                    "column": 37
                                                  },
                                                  "text": "v"
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 23,
                                                    "column": 37
                                                  },
                                                  "end": {
                                                    "row": 23,
                                                    "column": 38
                                                  },
                                                  "text": ")"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "if",
                                          "start": {
                                            "row": 23,
                                            "column": 39
                                          },
                                          "end": {
                                            "row": 23,
                                            "column": 41
                                          },
                                          "text": "if"
                                        },
                                        {
                                          "type": "comparison_operator",
                                          "start": {
                                            "row": 23,
                                            "column": 42
                                          },
                                          "end": {
                                            "row": 23,
                                            "column": 49
                                          },
                                          "text": "k in m1",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 23,
                                                "column": 42
                                              },
                                              "end": {
                                                "row": 23,
                                                "column": 43
                                              },
                                              "text": "k"
                                            },
                                            {
                                              "type": "in",
                                              "start": {
                                                "row": 23,
                                                "column": 44
                                              },
                                              "end": {
                                                "row": 23,
                                                "column": 46
                                              },
                                              "text": "in"
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 23,
                                                "column": 47
                                              },
                                              "end": {
                                                "row": 23,
                                                "column": 49
                                              },
                                              "text": "m1"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "else",
                                          "start": {
                                            "row": 23,
                                            "column": 50
                                          },
                                          "end": {
                                            "row": 23,
                                            "column": 54
                                          },
                                          "text": "else"
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 23,
                                            "column": 55
                                          },
                                          "end": {
                                            "row": 23,
                                            "column": 56
                                          },
                                          "text": "v"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "return_statement",
                      "start": {
                        "row": 24,
                        "column": 12
                      },
                      "end": {
                        "row": 24,
                        "column": 21
                      },
                      "text": "return m1",
                      "children": [
                        {
                          "type": "return",
                          "start": {
                            "row": 24,
                            "column": 12
                          },
                          "end": {
                            "row": 24,
                            "column": 18
                          },
                          "text": "return"
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 24,
                            "column": 19
                          },
                          "end": {
                            "row": 24,
                            "column": 21
                          },
                          "text": "m1"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 25,
                "column": 8
              },
              "end": {
                "row": 25,
                "column": 68
              },
              "text": "return self.mapPartitions(reducePartition).reduce(mergeMaps)",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 25,
                    "column": 8
                  },
                  "end": {
                    "row": 25,
                    "column": 14
                  },
                  "text": "return"
                },
                {
                  "type": "call",
                  "start": {
                    "row": 25,
                    "column": 15
                  },
                  "end": {
                    "row": 25,
                    "column": 68
                  },
                  "text": "self.mapPartitions(reducePartition).reduce(mergeMaps)",
                  "children": [
                    {
                      "type": "attribute",
                      "start": {
                        "row": 25,
                        "column": 15
                      },
                      "end": {
                        "row": 25,
                        "column": 57
                      },
                      "text": "self.mapPartitions(reducePartition).reduce",
                      "children": [
                        {
                          "type": "call",
                          "start": {
                            "row": 25,
                            "column": 15
                          },
                          "end": {
                            "row": 25,
                            "column": 50
                          },
                          "text": "self.mapPartitions(reducePartition)",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 25,
                                "column": 15
                              },
                              "end": {
                                "row": 25,
                                "column": 33
                              },
                              "text": "self.mapPartitions",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 25,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 25,
                                    "column": 19
                                  },
                                  "text": "self"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 25,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 25,
                                    "column": 20
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 25,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 25,
                                    "column": 33
                                  },
                                  "text": "mapPartitions"
                                }
                              ]
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 25,
                                "column": 33
                              },
                              "end": {
                                "row": 25,
                                "column": 50
                              },
                              "text": "(reducePartition)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 25,
                                    "column": 33
                                  },
                                  "end": {
                                    "row": 25,
                                    "column": 34
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 25,
                                    "column": 34
                                  },
                                  "end": {
                                    "row": 25,
                                    "column": 49
                                  },
                                  "text": "reducePartition"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 25,
                                    "column": 49
                                  },
                                  "end": {
                                    "row": 25,
                                    "column": 50
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 25,
                            "column": 50
                          },
                          "end": {
                            "row": 25,
                            "column": 51
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 25,
                            "column": 51
                          },
                          "end": {
                            "row": 25,
                            "column": 57
                          },
                          "text": "reduce"
                        }
                      ]
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 25,
                        "column": 57
                      },
                      "end": {
                        "row": 25,
                        "column": 68
                      },
                      "text": "(mergeMaps)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 25,
                            "column": 57
                          },
                          "end": {
                            "row": 25,
                            "column": 58
                          },
                          "text": "("
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 25,
                            "column": 58
                          },
                          "end": {
                            "row": 25,
                            "column": 67
                          },
                          "text": "mergeMaps"
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 25,
                            "column": 67
                          },
                          "end": {
                            "row": 25,
                            "column": 68
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}