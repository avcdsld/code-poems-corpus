{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 38,
    "column": 16
  },
  "text": "def vatm(model,\n         x,\n         logits,\n         eps,\n         num_iterations=1,\n         xi=1e-6,\n         clip_min=None,\n         clip_max=None,\n         scope=None):\n  \"\"\"\n  Tensorflow implementation of the perturbation method used for virtual\n  adversarial training: https://arxiv.org/abs/1507.00677\n  :param model: the model which returns the network unnormalized logits\n  :param x: the input placeholder\n  :param logits: the model's unnormalized output tensor (the input to\n                 the softmax layer)\n  :param eps: the epsilon (input variation parameter)\n  :param num_iterations: the number of iterations\n  :param xi: the finite difference parameter\n  :param clip_min: optional parameter that can be used to set a minimum\n                  value for components of the example returned\n  :param clip_max: optional parameter that can be used to set a maximum\n                  value for components of the example returned\n  :param seed: the seed for random generator\n  :return: a tensor for the adversarial example\n  \"\"\"\n  with tf.name_scope(scope, \"virtual_adversarial_perturbation\"):\n    d = tf.random_normal(tf.shape(x), dtype=tf_dtype)\n    for _ in range(num_iterations):\n      d = xi * utils_tf.l2_batch_normalize(d)\n      logits_d = model.get_logits(x + d)\n      kl = utils_tf.kl_with_logits(logits, logits_d)\n      Hd = tf.gradients(kl, d)[0]\n      d = tf.stop_gradient(Hd)\n    d = eps * utils_tf.l2_batch_normalize(d)\n    adv_x = x + d\n    if (clip_min is not None) and (clip_max is not None):\n      adv_x = tf.clip_by_value(adv_x, clip_min, clip_max)\n    return adv_x",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 38,
        "column": 16
      },
      "text": "def vatm(model,\n         x,\n         logits,\n         eps,\n         num_iterations=1,\n         xi=1e-6,\n         clip_min=None,\n         clip_max=None,\n         scope=None):\n  \"\"\"\n  Tensorflow implementation of the perturbation method used for virtual\n  adversarial training: https://arxiv.org/abs/1507.00677\n  :param model: the model which returns the network unnormalized logits\n  :param x: the input placeholder\n  :param logits: the model's unnormalized output tensor (the input to\n                 the softmax layer)\n  :param eps: the epsilon (input variation parameter)\n  :param num_iterations: the number of iterations\n  :param xi: the finite difference parameter\n  :param clip_min: optional parameter that can be used to set a minimum\n                  value for components of the example returned\n  :param clip_max: optional parameter that can be used to set a maximum\n                  value for components of the example returned\n  :param seed: the seed for random generator\n  :return: a tensor for the adversarial example\n  \"\"\"\n  with tf.name_scope(scope, \"virtual_adversarial_perturbation\"):\n    d = tf.random_normal(tf.shape(x), dtype=tf_dtype)\n    for _ in range(num_iterations):\n      d = xi * utils_tf.l2_batch_normalize(d)\n      logits_d = model.get_logits(x + d)\n      kl = utils_tf.kl_with_logits(logits, logits_d)\n      Hd = tf.gradients(kl, d)[0]\n      d = tf.stop_gradient(Hd)\n    d = eps * utils_tf.l2_batch_normalize(d)\n    adv_x = x + d\n    if (clip_min is not None) and (clip_max is not None):\n      adv_x = tf.clip_by_value(adv_x, clip_min, clip_max)\n    return adv_x",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 8
          },
          "text": "vatm"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 8
          },
          "end": {
            "row": 8,
            "column": 20
          },
          "text": "(model,\n         x,\n         logits,\n         eps,\n         num_iterations=1,\n         xi=1e-6,\n         clip_min=None,\n         clip_max=None,\n         scope=None)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 8
              },
              "end": {
                "row": 0,
                "column": 9
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 9
              },
              "end": {
                "row": 0,
                "column": 14
              },
              "text": "model"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 14
              },
              "end": {
                "row": 0,
                "column": 15
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 1,
                "column": 9
              },
              "end": {
                "row": 1,
                "column": 10
              },
              "text": "x"
            },
            {
              "type": ",",
              "start": {
                "row": 1,
                "column": 10
              },
              "end": {
                "row": 1,
                "column": 11
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 2,
                "column": 9
              },
              "end": {
                "row": 2,
                "column": 15
              },
              "text": "logits"
            },
            {
              "type": ",",
              "start": {
                "row": 2,
                "column": 15
              },
              "end": {
                "row": 2,
                "column": 16
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 3,
                "column": 9
              },
              "end": {
                "row": 3,
                "column": 12
              },
              "text": "eps"
            },
            {
              "type": ",",
              "start": {
                "row": 3,
                "column": 12
              },
              "end": {
                "row": 3,
                "column": 13
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 4,
                "column": 9
              },
              "end": {
                "row": 4,
                "column": 25
              },
              "text": "num_iterations=1",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 4,
                    "column": 9
                  },
                  "end": {
                    "row": 4,
                    "column": 23
                  },
                  "text": "num_iterations"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 4,
                    "column": 23
                  },
                  "end": {
                    "row": 4,
                    "column": 24
                  },
                  "text": "="
                },
                {
                  "type": "integer",
                  "start": {
                    "row": 4,
                    "column": 24
                  },
                  "end": {
                    "row": 4,
                    "column": 25
                  },
                  "text": "1"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 4,
                "column": 25
              },
              "end": {
                "row": 4,
                "column": 26
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 5,
                "column": 9
              },
              "end": {
                "row": 5,
                "column": 16
              },
              "text": "xi=1e-6",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 5,
                    "column": 9
                  },
                  "end": {
                    "row": 5,
                    "column": 11
                  },
                  "text": "xi"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 5,
                    "column": 11
                  },
                  "end": {
                    "row": 5,
                    "column": 12
                  },
                  "text": "="
                },
                {
                  "type": "float",
                  "start": {
                    "row": 5,
                    "column": 12
                  },
                  "end": {
                    "row": 5,
                    "column": 16
                  },
                  "text": "1e-6"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 5,
                "column": 16
              },
              "end": {
                "row": 5,
                "column": 17
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 6,
                "column": 9
              },
              "end": {
                "row": 6,
                "column": 22
              },
              "text": "clip_min=None",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 6,
                    "column": 9
                  },
                  "end": {
                    "row": 6,
                    "column": 17
                  },
                  "text": "clip_min"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 6,
                    "column": 17
                  },
                  "end": {
                    "row": 6,
                    "column": 18
                  },
                  "text": "="
                },
                {
                  "type": "none",
                  "start": {
                    "row": 6,
                    "column": 18
                  },
                  "end": {
                    "row": 6,
                    "column": 22
                  },
                  "text": "None"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 6,
                "column": 22
              },
              "end": {
                "row": 6,
                "column": 23
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 7,
                "column": 9
              },
              "end": {
                "row": 7,
                "column": 22
              },
              "text": "clip_max=None",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 7,
                    "column": 9
                  },
                  "end": {
                    "row": 7,
                    "column": 17
                  },
                  "text": "clip_max"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 7,
                    "column": 17
                  },
                  "end": {
                    "row": 7,
                    "column": 18
                  },
                  "text": "="
                },
                {
                  "type": "none",
                  "start": {
                    "row": 7,
                    "column": 18
                  },
                  "end": {
                    "row": 7,
                    "column": 22
                  },
                  "text": "None"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 7,
                "column": 22
              },
              "end": {
                "row": 7,
                "column": 23
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 8,
                "column": 9
              },
              "end": {
                "row": 8,
                "column": 19
              },
              "text": "scope=None",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 8,
                    "column": 9
                  },
                  "end": {
                    "row": 8,
                    "column": 14
                  },
                  "text": "scope"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 8,
                    "column": 14
                  },
                  "end": {
                    "row": 8,
                    "column": 15
                  },
                  "text": "="
                },
                {
                  "type": "none",
                  "start": {
                    "row": 8,
                    "column": 15
                  },
                  "end": {
                    "row": 8,
                    "column": 19
                  },
                  "text": "None"
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 8,
                "column": 19
              },
              "end": {
                "row": 8,
                "column": 20
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 8,
            "column": 20
          },
          "end": {
            "row": 8,
            "column": 21
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 9,
            "column": 2
          },
          "end": {
            "row": 38,
            "column": 16
          },
          "text": "\"\"\"\n  Tensorflow implementation of the perturbation method used for virtual\n  adversarial training: https://arxiv.org/abs/1507.00677\n  :param model: the model which returns the network unnormalized logits\n  :param x: the input placeholder\n  :param logits: the model's unnormalized output tensor (the input to\n                 the softmax layer)\n  :param eps: the epsilon (input variation parameter)\n  :param num_iterations: the number of iterations\n  :param xi: the finite difference parameter\n  :param clip_min: optional parameter that can be used to set a minimum\n                  value for components of the example returned\n  :param clip_max: optional parameter that can be used to set a maximum\n                  value for components of the example returned\n  :param seed: the seed for random generator\n  :return: a tensor for the adversarial example\n  \"\"\"\n  with tf.name_scope(scope, \"virtual_adversarial_perturbation\"):\n    d = tf.random_normal(tf.shape(x), dtype=tf_dtype)\n    for _ in range(num_iterations):\n      d = xi * utils_tf.l2_batch_normalize(d)\n      logits_d = model.get_logits(x + d)\n      kl = utils_tf.kl_with_logits(logits, logits_d)\n      Hd = tf.gradients(kl, d)[0]\n      d = tf.stop_gradient(Hd)\n    d = eps * utils_tf.l2_batch_normalize(d)\n    adv_x = x + d\n    if (clip_min is not None) and (clip_max is not None):\n      adv_x = tf.clip_by_value(adv_x, clip_min, clip_max)\n    return adv_x",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 9,
                "column": 2
              },
              "end": {
                "row": 25,
                "column": 5
              },
              "text": "\"\"\"\n  Tensorflow implementation of the perturbation method used for virtual\n  adversarial training: https://arxiv.org/abs/1507.00677\n  :param model: the model which returns the network unnormalized logits\n  :param x: the input placeholder\n  :param logits: the model's unnormalized output tensor (the input to\n                 the softmax layer)\n  :param eps: the epsilon (input variation parameter)\n  :param num_iterations: the number of iterations\n  :param xi: the finite difference parameter\n  :param clip_min: optional parameter that can be used to set a minimum\n                  value for components of the example returned\n  :param clip_max: optional parameter that can be used to set a maximum\n                  value for components of the example returned\n  :param seed: the seed for random generator\n  :return: a tensor for the adversarial example\n  \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 9,
                    "column": 2
                  },
                  "end": {
                    "row": 25,
                    "column": 5
                  },
                  "text": "\"\"\"\n  Tensorflow implementation of the perturbation method used for virtual\n  adversarial training: https://arxiv.org/abs/1507.00677\n  :param model: the model which returns the network unnormalized logits\n  :param x: the input placeholder\n  :param logits: the model's unnormalized output tensor (the input to\n                 the softmax layer)\n  :param eps: the epsilon (input variation parameter)\n  :param num_iterations: the number of iterations\n  :param xi: the finite difference parameter\n  :param clip_min: optional parameter that can be used to set a minimum\n                  value for components of the example returned\n  :param clip_max: optional parameter that can be used to set a maximum\n                  value for components of the example returned\n  :param seed: the seed for random generator\n  :return: a tensor for the adversarial example\n  \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 9,
                        "column": 2
                      },
                      "end": {
                        "row": 9,
                        "column": 5
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 9,
                        "column": 5
                      },
                      "end": {
                        "row": 25,
                        "column": 2
                      },
                      "text": "\n  Tensorflow implementation of the perturbation method used for virtual\n  adversarial training: https://arxiv.org/abs/1507.00677\n  :param model: the model which returns the network unnormalized logits\n  :param x: the input placeholder\n  :param logits: the model's unnormalized output tensor (the input to\n                 the softmax layer)\n  :param eps: the epsilon (input variation parameter)\n  :param num_iterations: the number of iterations\n  :param xi: the finite difference parameter\n  :param clip_min: optional parameter that can be used to set a minimum\n                  value for components of the example returned\n  :param clip_max: optional parameter that can be used to set a maximum\n                  value for components of the example returned\n  :param seed: the seed for random generator\n  :return: a tensor for the adversarial example\n  "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 25,
                        "column": 2
                      },
                      "end": {
                        "row": 25,
                        "column": 5
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "with_statement",
              "start": {
                "row": 26,
                "column": 2
              },
              "end": {
                "row": 38,
                "column": 16
              },
              "text": "with tf.name_scope(scope, \"virtual_adversarial_perturbation\"):\n    d = tf.random_normal(tf.shape(x), dtype=tf_dtype)\n    for _ in range(num_iterations):\n      d = xi * utils_tf.l2_batch_normalize(d)\n      logits_d = model.get_logits(x + d)\n      kl = utils_tf.kl_with_logits(logits, logits_d)\n      Hd = tf.gradients(kl, d)[0]\n      d = tf.stop_gradient(Hd)\n    d = eps * utils_tf.l2_batch_normalize(d)\n    adv_x = x + d\n    if (clip_min is not None) and (clip_max is not None):\n      adv_x = tf.clip_by_value(adv_x, clip_min, clip_max)\n    return adv_x",
              "children": [
                {
                  "type": "with",
                  "start": {
                    "row": 26,
                    "column": 2
                  },
                  "end": {
                    "row": 26,
                    "column": 6
                  },
                  "text": "with"
                },
                {
                  "type": "with_clause",
                  "start": {
                    "row": 26,
                    "column": 7
                  },
                  "end": {
                    "row": 26,
                    "column": 63
                  },
                  "text": "tf.name_scope(scope, \"virtual_adversarial_perturbation\")",
                  "children": [
                    {
                      "type": "with_item",
                      "start": {
                        "row": 26,
                        "column": 7
                      },
                      "end": {
                        "row": 26,
                        "column": 63
                      },
                      "text": "tf.name_scope(scope, \"virtual_adversarial_perturbation\")",
                      "children": [
                        {
                          "type": "call",
                          "start": {
                            "row": 26,
                            "column": 7
                          },
                          "end": {
                            "row": 26,
                            "column": 63
                          },
                          "text": "tf.name_scope(scope, \"virtual_adversarial_perturbation\")",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 26,
                                "column": 7
                              },
                              "end": {
                                "row": 26,
                                "column": 20
                              },
                              "text": "tf.name_scope",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 26,
                                    "column": 7
                                  },
                                  "end": {
                                    "row": 26,
                                    "column": 9
                                  },
                                  "text": "tf"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 26,
                                    "column": 9
                                  },
                                  "end": {
                                    "row": 26,
                                    "column": 10
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 26,
                                    "column": 10
                                  },
                                  "end": {
                                    "row": 26,
                                    "column": 20
                                  },
                                  "text": "name_scope"
                                }
                              ]
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 26,
                                "column": 20
                              },
                              "end": {
                                "row": 26,
                                "column": 63
                              },
                              "text": "(scope, \"virtual_adversarial_perturbation\")",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 26,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 26,
                                    "column": 21
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 26,
                                    "column": 21
                                  },
                                  "end": {
                                    "row": 26,
                                    "column": 26
                                  },
                                  "text": "scope"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 26,
                                    "column": 26
                                  },
                                  "end": {
                                    "row": 26,
                                    "column": 27
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "string",
                                  "start": {
                                    "row": 26,
                                    "column": 28
                                  },
                                  "end": {
                                    "row": 26,
                                    "column": 62
                                  },
                                  "text": "\"virtual_adversarial_perturbation\"",
                                  "children": [
                                    {
                                      "type": "string_start",
                                      "start": {
                                        "row": 26,
                                        "column": 28
                                      },
                                      "end": {
                                        "row": 26,
                                        "column": 29
                                      },
                                      "text": "\""
                                    },
                                    {
                                      "type": "string_content",
                                      "start": {
                                        "row": 26,
                                        "column": 29
                                      },
                                      "end": {
                                        "row": 26,
                                        "column": 61
                                      },
                                      "text": "virtual_adversarial_perturbation"
                                    },
                                    {
                                      "type": "string_end",
                                      "start": {
                                        "row": 26,
                                        "column": 61
                                      },
                                      "end": {
                                        "row": 26,
                                        "column": 62
                                      },
                                      "text": "\""
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 26,
                                    "column": 62
                                  },
                                  "end": {
                                    "row": 26,
                                    "column": 63
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 26,
                    "column": 63
                  },
                  "end": {
                    "row": 26,
                    "column": 64
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 27,
                    "column": 4
                  },
                  "end": {
                    "row": 38,
                    "column": 16
                  },
                  "text": "d = tf.random_normal(tf.shape(x), dtype=tf_dtype)\n    for _ in range(num_iterations):\n      d = xi * utils_tf.l2_batch_normalize(d)\n      logits_d = model.get_logits(x + d)\n      kl = utils_tf.kl_with_logits(logits, logits_d)\n      Hd = tf.gradients(kl, d)[0]\n      d = tf.stop_gradient(Hd)\n    d = eps * utils_tf.l2_batch_normalize(d)\n    adv_x = x + d\n    if (clip_min is not None) and (clip_max is not None):\n      adv_x = tf.clip_by_value(adv_x, clip_min, clip_max)\n    return adv_x",
                  "children": [
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 27,
                        "column": 4
                      },
                      "end": {
                        "row": 27,
                        "column": 53
                      },
                      "text": "d = tf.random_normal(tf.shape(x), dtype=tf_dtype)",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 27,
                            "column": 4
                          },
                          "end": {
                            "row": 27,
                            "column": 53
                          },
                          "text": "d = tf.random_normal(tf.shape(x), dtype=tf_dtype)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 27,
                                "column": 4
                              },
                              "end": {
                                "row": 27,
                                "column": 5
                              },
                              "text": "d"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 27,
                                "column": 6
                              },
                              "end": {
                                "row": 27,
                                "column": 7
                              },
                              "text": "="
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 27,
                                "column": 8
                              },
                              "end": {
                                "row": 27,
                                "column": 53
                              },
                              "text": "tf.random_normal(tf.shape(x), dtype=tf_dtype)",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 27,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 27,
                                    "column": 24
                                  },
                                  "text": "tf.random_normal",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 27,
                                        "column": 8
                                      },
                                      "end": {
                                        "row": 27,
                                        "column": 10
                                      },
                                      "text": "tf"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 27,
                                        "column": 10
                                      },
                                      "end": {
                                        "row": 27,
                                        "column": 11
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 27,
                                        "column": 11
                                      },
                                      "end": {
                                        "row": 27,
                                        "column": 24
                                      },
                                      "text": "random_normal"
                                    }
                                  ]
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 27,
                                    "column": 24
                                  },
                                  "end": {
                                    "row": 27,
                                    "column": 53
                                  },
                                  "text": "(tf.shape(x), dtype=tf_dtype)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 27,
                                        "column": 24
                                      },
                                      "end": {
                                        "row": 27,
                                        "column": 25
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 27,
                                        "column": 25
                                      },
                                      "end": {
                                        "row": 27,
                                        "column": 36
                                      },
                                      "text": "tf.shape(x)",
                                      "children": [
                                        {
                                          "type": "attribute",
                                          "start": {
                                            "row": 27,
                                            "column": 25
                                          },
                                          "end": {
                                            "row": 27,
                                            "column": 33
                                          },
                                          "text": "tf.shape",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 27,
                                                "column": 25
                                              },
                                              "end": {
                                                "row": 27,
                                                "column": 27
                                              },
                                              "text": "tf"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 27,
                                                "column": 27
                                              },
                                              "end": {
                                                "row": 27,
                                                "column": 28
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 27,
                                                "column": 28
                                              },
                                              "end": {
                                                "row": 27,
                                                "column": 33
                                              },
                                              "text": "shape"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 27,
                                            "column": 33
                                          },
                                          "end": {
                                            "row": 27,
                                            "column": 36
                                          },
                                          "text": "(x)",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 27,
                                                "column": 33
                                              },
                                              "end": {
                                                "row": 27,
                                                "column": 34
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 27,
                                                "column": 34
                                              },
                                              "end": {
                                                "row": 27,
                                                "column": 35
                                              },
                                              "text": "x"
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 27,
                                                "column": 35
                                              },
                                              "end": {
                                                "row": 27,
                                                "column": 36
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 27,
                                        "column": 36
                                      },
                                      "end": {
                                        "row": 27,
                                        "column": 37
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "keyword_argument",
                                      "start": {
                                        "row": 27,
                                        "column": 38
                                      },
                                      "end": {
                                        "row": 27,
                                        "column": 52
                                      },
                                      "text": "dtype=tf_dtype",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 27,
                                            "column": 38
                                          },
                                          "end": {
                                            "row": 27,
                                            "column": 43
                                          },
                                          "text": "dtype"
                                        },
                                        {
                                          "type": "=",
                                          "start": {
                                            "row": 27,
                                            "column": 43
                                          },
                                          "end": {
                                            "row": 27,
                                            "column": 44
                                          },
                                          "text": "="
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 27,
                                            "column": 44
                                          },
                                          "end": {
                                            "row": 27,
                                            "column": 52
                                          },
                                          "text": "tf_dtype"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 27,
                                        "column": 52
                                      },
                                      "end": {
                                        "row": 27,
                                        "column": 53
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start": {
                        "row": 28,
                        "column": 4
                      },
                      "end": {
                        "row": 33,
                        "column": 30
                      },
                      "text": "for _ in range(num_iterations):\n      d = xi * utils_tf.l2_batch_normalize(d)\n      logits_d = model.get_logits(x + d)\n      kl = utils_tf.kl_with_logits(logits, logits_d)\n      Hd = tf.gradients(kl, d)[0]\n      d = tf.stop_gradient(Hd)",
                      "children": [
                        {
                          "type": "for",
                          "start": {
                            "row": 28,
                            "column": 4
                          },
                          "end": {
                            "row": 28,
                            "column": 7
                          },
                          "text": "for"
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 28,
                            "column": 8
                          },
                          "end": {
                            "row": 28,
                            "column": 9
                          },
                          "text": "_"
                        },
                        {
                          "type": "in",
                          "start": {
                            "row": 28,
                            "column": 10
                          },
                          "end": {
                            "row": 28,
                            "column": 12
                          },
                          "text": "in"
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 28,
                            "column": 13
                          },
                          "end": {
                            "row": 28,
                            "column": 34
                          },
                          "text": "range(num_iterations)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 28,
                                "column": 13
                              },
                              "end": {
                                "row": 28,
                                "column": 18
                              },
                              "text": "range"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 28,
                                "column": 18
                              },
                              "end": {
                                "row": 28,
                                "column": 34
                              },
                              "text": "(num_iterations)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 28,
                                    "column": 18
                                  },
                                  "end": {
                                    "row": 28,
                                    "column": 19
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 28,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 28,
                                    "column": 33
                                  },
                                  "text": "num_iterations"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 28,
                                    "column": 33
                                  },
                                  "end": {
                                    "row": 28,
                                    "column": 34
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ":",
                          "start": {
                            "row": 28,
                            "column": 34
                          },
                          "end": {
                            "row": 28,
                            "column": 35
                          },
                          "text": ":"
                        },
                        {
                          "type": "block",
                          "start": {
                            "row": 29,
                            "column": 6
                          },
                          "end": {
                            "row": 33,
                            "column": 30
                          },
                          "text": "d = xi * utils_tf.l2_batch_normalize(d)\n      logits_d = model.get_logits(x + d)\n      kl = utils_tf.kl_with_logits(logits, logits_d)\n      Hd = tf.gradients(kl, d)[0]\n      d = tf.stop_gradient(Hd)",
                          "children": [
                            {
                              "type": "expression_statement",
                              "start": {
                                "row": 29,
                                "column": 6
                              },
                              "end": {
                                "row": 29,
                                "column": 45
                              },
                              "text": "d = xi * utils_tf.l2_batch_normalize(d)",
                              "children": [
                                {
                                  "type": "assignment",
                                  "start": {
                                    "row": 29,
                                    "column": 6
                                  },
                                  "end": {
                                    "row": 29,
                                    "column": 45
                                  },
                                  "text": "d = xi * utils_tf.l2_batch_normalize(d)",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 29,
                                        "column": 6
                                      },
                                      "end": {
                                        "row": 29,
                                        "column": 7
                                      },
                                      "text": "d"
                                    },
                                    {
                                      "type": "=",
                                      "start": {
                                        "row": 29,
                                        "column": 8
                                      },
                                      "end": {
                                        "row": 29,
                                        "column": 9
                                      },
                                      "text": "="
                                    },
                                    {
                                      "type": "binary_operator",
                                      "start": {
                                        "row": 29,
                                        "column": 10
                                      },
                                      "end": {
                                        "row": 29,
                                        "column": 45
                                      },
                                      "text": "xi * utils_tf.l2_batch_normalize(d)",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 29,
                                            "column": 10
                                          },
                                          "end": {
                                            "row": 29,
                                            "column": 12
                                          },
                                          "text": "xi"
                                        },
                                        {
                                          "type": "*",
                                          "start": {
                                            "row": 29,
                                            "column": 13
                                          },
                                          "end": {
                                            "row": 29,
                                            "column": 14
                                          },
                                          "text": "*"
                                        },
                                        {
                                          "type": "call",
                                          "start": {
                                            "row": 29,
                                            "column": 15
                                          },
                                          "end": {
                                            "row": 29,
                                            "column": 45
                                          },
                                          "text": "utils_tf.l2_batch_normalize(d)",
                                          "children": [
                                            {
                                              "type": "attribute",
                                              "start": {
                                                "row": 29,
                                                "column": 15
                                              },
                                              "end": {
                                                "row": 29,
                                                "column": 42
                                              },
                                              "text": "utils_tf.l2_batch_normalize",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 29,
                                                    "column": 15
                                                  },
                                                  "end": {
                                                    "row": 29,
                                                    "column": 23
                                                  },
                                                  "text": "utils_tf"
                                                },
                                                {
                                                  "type": ".",
                                                  "start": {
                                                    "row": 29,
                                                    "column": 23
                                                  },
                                                  "end": {
                                                    "row": 29,
                                                    "column": 24
                                                  },
                                                  "text": "."
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 29,
                                                    "column": 24
                                                  },
                                                  "end": {
                                                    "row": 29,
                                                    "column": 42
                                                  },
                                                  "text": "l2_batch_normalize"
                                                }
                                              ]
                                            },
                                            {
                                              "type": "argument_list",
                                              "start": {
                                                "row": 29,
                                                "column": 42
                                              },
                                              "end": {
                                                "row": 29,
                                                "column": 45
                                              },
                                              "text": "(d)",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 29,
                                                    "column": 42
                                                  },
                                                  "end": {
                                                    "row": 29,
                                                    "column": 43
                                                  },
                                                  "text": "("
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 29,
                                                    "column": 43
                                                  },
                                                  "end": {
                                                    "row": 29,
                                                    "column": 44
                                                  },
                                                  "text": "d"
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 29,
                                                    "column": 44
                                                  },
                                                  "end": {
                                                    "row": 29,
                                                    "column": 45
                                                  },
                                                  "text": ")"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start": {
                                "row": 30,
                                "column": 6
                              },
                              "end": {
                                "row": 30,
                                "column": 40
                              },
                              "text": "logits_d = model.get_logits(x + d)",
                              "children": [
                                {
                                  "type": "assignment",
                                  "start": {
                                    "row": 30,
                                    "column": 6
                                  },
                                  "end": {
                                    "row": 30,
                                    "column": 40
                                  },
                                  "text": "logits_d = model.get_logits(x + d)",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 30,
                                        "column": 6
                                      },
                                      "end": {
                                        "row": 30,
                                        "column": 14
                                      },
                                      "text": "logits_d"
                                    },
                                    {
                                      "type": "=",
                                      "start": {
                                        "row": 30,
                                        "column": 15
                                      },
                                      "end": {
                                        "row": 30,
                                        "column": 16
                                      },
                                      "text": "="
                                    },
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 30,
                                        "column": 17
                                      },
                                      "end": {
                                        "row": 30,
                                        "column": 40
                                      },
                                      "text": "model.get_logits(x + d)",
                                      "children": [
                                        {
                                          "type": "attribute",
                                          "start": {
                                            "row": 30,
                                            "column": 17
                                          },
                                          "end": {
                                            "row": 30,
                                            "column": 33
                                          },
                                          "text": "model.get_logits",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 30,
                                                "column": 17
                                              },
                                              "end": {
                                                "row": 30,
                                                "column": 22
                                              },
                                              "text": "model"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 30,
                                                "column": 22
                                              },
                                              "end": {
                                                "row": 30,
                                                "column": 23
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 30,
                                                "column": 23
                                              },
                                              "end": {
                                                "row": 30,
                                                "column": 33
                                              },
                                              "text": "get_logits"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 30,
                                            "column": 33
                                          },
                                          "end": {
                                            "row": 30,
                                            "column": 40
                                          },
                                          "text": "(x + d)",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 30,
                                                "column": 33
                                              },
                                              "end": {
                                                "row": 30,
                                                "column": 34
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "binary_operator",
                                              "start": {
                                                "row": 30,
                                                "column": 34
                                              },
                                              "end": {
                                                "row": 30,
                                                "column": 39
                                              },
                                              "text": "x + d",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 30,
                                                    "column": 34
                                                  },
                                                  "end": {
                                                    "row": 30,
                                                    "column": 35
                                                  },
                                                  "text": "x"
                                                },
                                                {
                                                  "type": "+",
                                                  "start": {
                                                    "row": 30,
                                                    "column": 36
                                                  },
                                                  "end": {
                                                    "row": 30,
                                                    "column": 37
                                                  },
                                                  "text": "+"
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 30,
                                                    "column": 38
                                                  },
                                                  "end": {
                                                    "row": 30,
                                                    "column": 39
                                                  },
                                                  "text": "d"
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 30,
                                                "column": 39
                                              },
                                              "end": {
                                                "row": 30,
                                                "column": 40
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start": {
                                "row": 31,
                                "column": 6
                              },
                              "end": {
                                "row": 31,
                                "column": 52
                              },
                              "text": "kl = utils_tf.kl_with_logits(logits, logits_d)",
                              "children": [
                                {
                                  "type": "assignment",
                                  "start": {
                                    "row": 31,
                                    "column": 6
                                  },
                                  "end": {
                                    "row": 31,
                                    "column": 52
                                  },
                                  "text": "kl = utils_tf.kl_with_logits(logits, logits_d)",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 31,
                                        "column": 6
                                      },
                                      "end": {
                                        "row": 31,
                                        "column": 8
                                      },
                                      "text": "kl"
                                    },
                                    {
                                      "type": "=",
                                      "start": {
                                        "row": 31,
                                        "column": 9
                                      },
                                      "end": {
                                        "row": 31,
                                        "column": 10
                                      },
                                      "text": "="
                                    },
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 31,
                                        "column": 11
                                      },
                                      "end": {
                                        "row": 31,
                                        "column": 52
                                      },
                                      "text": "utils_tf.kl_with_logits(logits, logits_d)",
                                      "children": [
                                        {
                                          "type": "attribute",
                                          "start": {
                                            "row": 31,
                                            "column": 11
                                          },
                                          "end": {
                                            "row": 31,
                                            "column": 34
                                          },
                                          "text": "utils_tf.kl_with_logits",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 31,
                                                "column": 11
                                              },
                                              "end": {
                                                "row": 31,
                                                "column": 19
                                              },
                                              "text": "utils_tf"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 31,
                                                "column": 19
                                              },
                                              "end": {
                                                "row": 31,
                                                "column": 20
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 31,
                                                "column": 20
                                              },
                                              "end": {
                                                "row": 31,
                                                "column": 34
                                              },
                                              "text": "kl_with_logits"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 31,
                                            "column": 34
                                          },
                                          "end": {
                                            "row": 31,
                                            "column": 52
                                          },
                                          "text": "(logits, logits_d)",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 31,
                                                "column": 34
                                              },
                                              "end": {
                                                "row": 31,
                                                "column": 35
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 31,
                                                "column": 35
                                              },
                                              "end": {
                                                "row": 31,
                                                "column": 41
                                              },
                                              "text": "logits"
                                            },
                                            {
                                              "type": ",",
                                              "start": {
                                                "row": 31,
                                                "column": 41
                                              },
                                              "end": {
                                                "row": 31,
                                                "column": 42
                                              },
                                              "text": ","
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 31,
                                                "column": 43
                                              },
                                              "end": {
                                                "row": 31,
                                                "column": 51
                                              },
                                              "text": "logits_d"
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 31,
                                                "column": 51
                                              },
                                              "end": {
                                                "row": 31,
                                                "column": 52
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start": {
                                "row": 32,
                                "column": 6
                              },
                              "end": {
                                "row": 32,
                                "column": 33
                              },
                              "text": "Hd = tf.gradients(kl, d)[0]",
                              "children": [
                                {
                                  "type": "assignment",
                                  "start": {
                                    "row": 32,
                                    "column": 6
                                  },
                                  "end": {
                                    "row": 32,
                                    "column": 33
                                  },
                                  "text": "Hd = tf.gradients(kl, d)[0]",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 32,
                                        "column": 6
                                      },
                                      "end": {
                                        "row": 32,
                                        "column": 8
                                      },
                                      "text": "Hd"
                                    },
                                    {
                                      "type": "=",
                                      "start": {
                                        "row": 32,
                                        "column": 9
                                      },
                                      "end": {
                                        "row": 32,
                                        "column": 10
                                      },
                                      "text": "="
                                    },
                                    {
                                      "type": "subscript",
                                      "start": {
                                        "row": 32,
                                        "column": 11
                                      },
                                      "end": {
                                        "row": 32,
                                        "column": 33
                                      },
                                      "text": "tf.gradients(kl, d)[0]",
                                      "children": [
                                        {
                                          "type": "call",
                                          "start": {
                                            "row": 32,
                                            "column": 11
                                          },
                                          "end": {
                                            "row": 32,
                                            "column": 30
                                          },
                                          "text": "tf.gradients(kl, d)",
                                          "children": [
                                            {
                                              "type": "attribute",
                                              "start": {
                                                "row": 32,
                                                "column": 11
                                              },
                                              "end": {
                                                "row": 32,
                                                "column": 23
                                              },
                                              "text": "tf.gradients",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 32,
                                                    "column": 11
                                                  },
                                                  "end": {
                                                    "row": 32,
                                                    "column": 13
                                                  },
                                                  "text": "tf"
                                                },
                                                {
                                                  "type": ".",
                                                  "start": {
                                                    "row": 32,
                                                    "column": 13
                                                  },
                                                  "end": {
                                                    "row": 32,
                                                    "column": 14
                                                  },
                                                  "text": "."
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 32,
                                                    "column": 14
                                                  },
                                                  "end": {
                                                    "row": 32,
                                                    "column": 23
                                                  },
                                                  "text": "gradients"
                                                }
                                              ]
                                            },
                                            {
                                              "type": "argument_list",
                                              "start": {
                                                "row": 32,
                                                "column": 23
                                              },
                                              "end": {
                                                "row": 32,
                                                "column": 30
                                              },
                                              "text": "(kl, d)",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 32,
                                                    "column": 23
                                                  },
                                                  "end": {
                                                    "row": 32,
                                                    "column": 24
                                                  },
                                                  "text": "("
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 32,
                                                    "column": 24
                                                  },
                                                  "end": {
                                                    "row": 32,
                                                    "column": 26
                                                  },
                                                  "text": "kl"
                                                },
                                                {
                                                  "type": ",",
                                                  "start": {
                                                    "row": 32,
                                                    "column": 26
                                                  },
                                                  "end": {
                                                    "row": 32,
                                                    "column": 27
                                                  },
                                                  "text": ","
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 32,
                                                    "column": 28
                                                  },
                                                  "end": {
                                                    "row": 32,
                                                    "column": 29
                                                  },
                                                  "text": "d"
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 32,
                                                    "column": 29
                                                  },
                                                  "end": {
                                                    "row": 32,
                                                    "column": 30
                                                  },
                                                  "text": ")"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "[",
                                          "start": {
                                            "row": 32,
                                            "column": 30
                                          },
                                          "end": {
                                            "row": 32,
                                            "column": 31
                                          },
                                          "text": "["
                                        },
                                        {
                                          "type": "integer",
                                          "start": {
                                            "row": 32,
                                            "column": 31
                                          },
                                          "end": {
                                            "row": 32,
                                            "column": 32
                                          },
                                          "text": "0"
                                        },
                                        {
                                          "type": "]",
                                          "start": {
                                            "row": 32,
                                            "column": 32
                                          },
                                          "end": {
                                            "row": 32,
                                            "column": 33
                                          },
                                          "text": "]"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start": {
                                "row": 33,
                                "column": 6
                              },
                              "end": {
                                "row": 33,
                                "column": 30
                              },
                              "text": "d = tf.stop_gradient(Hd)",
                              "children": [
                                {
                                  "type": "assignment",
                                  "start": {
                                    "row": 33,
                                    "column": 6
                                  },
                                  "end": {
                                    "row": 33,
                                    "column": 30
                                  },
                                  "text": "d = tf.stop_gradient(Hd)",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 33,
                                        "column": 6
                                      },
                                      "end": {
                                        "row": 33,
                                        "column": 7
                                      },
                                      "text": "d"
                                    },
                                    {
                                      "type": "=",
                                      "start": {
                                        "row": 33,
                                        "column": 8
                                      },
                                      "end": {
                                        "row": 33,
                                        "column": 9
                                      },
                                      "text": "="
                                    },
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 33,
                                        "column": 10
                                      },
                                      "end": {
                                        "row": 33,
                                        "column": 30
                                      },
                                      "text": "tf.stop_gradient(Hd)",
                                      "children": [
                                        {
                                          "type": "attribute",
                                          "start": {
                                            "row": 33,
                                            "column": 10
                                          },
                                          "end": {
                                            "row": 33,
                                            "column": 26
                                          },
                                          "text": "tf.stop_gradient",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 33,
                                                "column": 10
                                              },
                                              "end": {
                                                "row": 33,
                                                "column": 12
                                              },
                                              "text": "tf"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 33,
                                                "column": 12
                                              },
                                              "end": {
                                                "row": 33,
                                                "column": 13
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 33,
                                                "column": 13
                                              },
                                              "end": {
                                                "row": 33,
                                                "column": 26
                                              },
                                              "text": "stop_gradient"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 33,
                                            "column": 26
                                          },
                                          "end": {
                                            "row": 33,
                                            "column": 30
                                          },
                                          "text": "(Hd)",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 33,
                                                "column": 26
                                              },
                                              "end": {
                                                "row": 33,
                                                "column": 27
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 33,
                                                "column": 27
                                              },
                                              "end": {
                                                "row": 33,
                                                "column": 29
                                              },
                                              "text": "Hd"
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 33,
                                                "column": 29
                                              },
                                              "end": {
                                                "row": 33,
                                                "column": 30
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 34,
                        "column": 4
                      },
                      "end": {
                        "row": 34,
                        "column": 44
                      },
                      "text": "d = eps * utils_tf.l2_batch_normalize(d)",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 34,
                            "column": 4
                          },
                          "end": {
                            "row": 34,
                            "column": 44
                          },
                          "text": "d = eps * utils_tf.l2_batch_normalize(d)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 34,
                                "column": 4
                              },
                              "end": {
                                "row": 34,
                                "column": 5
                              },
                              "text": "d"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 34,
                                "column": 6
                              },
                              "end": {
                                "row": 34,
                                "column": 7
                              },
                              "text": "="
                            },
                            {
                              "type": "binary_operator",
                              "start": {
                                "row": 34,
                                "column": 8
                              },
                              "end": {
                                "row": 34,
                                "column": 44
                              },
                              "text": "eps * utils_tf.l2_batch_normalize(d)",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 34,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 34,
                                    "column": 11
                                  },
                                  "text": "eps"
                                },
                                {
                                  "type": "*",
                                  "start": {
                                    "row": 34,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 34,
                                    "column": 13
                                  },
                                  "text": "*"
                                },
                                {
                                  "type": "call",
                                  "start": {
                                    "row": 34,
                                    "column": 14
                                  },
                                  "end": {
                                    "row": 34,
                                    "column": 44
                                  },
                                  "text": "utils_tf.l2_batch_normalize(d)",
                                  "children": [
                                    {
                                      "type": "attribute",
                                      "start": {
                                        "row": 34,
                                        "column": 14
                                      },
                                      "end": {
                                        "row": 34,
                                        "column": 41
                                      },
                                      "text": "utils_tf.l2_batch_normalize",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 34,
                                            "column": 14
                                          },
                                          "end": {
                                            "row": 34,
                                            "column": 22
                                          },
                                          "text": "utils_tf"
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 34,
                                            "column": 22
                                          },
                                          "end": {
                                            "row": 34,
                                            "column": 23
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 34,
                                            "column": 23
                                          },
                                          "end": {
                                            "row": 34,
                                            "column": 41
                                          },
                                          "text": "l2_batch_normalize"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "argument_list",
                                      "start": {
                                        "row": 34,
                                        "column": 41
                                      },
                                      "end": {
                                        "row": 34,
                                        "column": 44
                                      },
                                      "text": "(d)",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 34,
                                            "column": 41
                                          },
                                          "end": {
                                            "row": 34,
                                            "column": 42
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 34,
                                            "column": 42
                                          },
                                          "end": {
                                            "row": 34,
                                            "column": 43
                                          },
                                          "text": "d"
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 34,
                                            "column": 43
                                          },
                                          "end": {
                                            "row": 34,
                                            "column": 44
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 35,
                        "column": 4
                      },
                      "end": {
                        "row": 35,
                        "column": 17
                      },
                      "text": "adv_x = x + d",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 35,
                            "column": 4
                          },
                          "end": {
                            "row": 35,
                            "column": 17
                          },
                          "text": "adv_x = x + d",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 35,
                                "column": 4
                              },
                              "end": {
                                "row": 35,
                                "column": 9
                              },
                              "text": "adv_x"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 35,
                                "column": 10
                              },
                              "end": {
                                "row": 35,
                                "column": 11
                              },
                              "text": "="
                            },
                            {
                              "type": "binary_operator",
                              "start": {
                                "row": 35,
                                "column": 12
                              },
                              "end": {
                                "row": 35,
                                "column": 17
                              },
                              "text": "x + d",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 35,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 35,
                                    "column": 13
                                  },
                                  "text": "x"
                                },
                                {
                                  "type": "+",
                                  "start": {
                                    "row": 35,
                                    "column": 14
                                  },
                                  "end": {
                                    "row": 35,
                                    "column": 15
                                  },
                                  "text": "+"
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 35,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 35,
                                    "column": 17
                                  },
                                  "text": "d"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "if_statement",
                      "start": {
                        "row": 36,
                        "column": 4
                      },
                      "end": {
                        "row": 37,
                        "column": 57
                      },
                      "text": "if (clip_min is not None) and (clip_max is not None):\n      adv_x = tf.clip_by_value(adv_x, clip_min, clip_max)",
                      "children": [
                        {
                          "type": "if",
                          "start": {
                            "row": 36,
                            "column": 4
                          },
                          "end": {
                            "row": 36,
                            "column": 6
                          },
                          "text": "if"
                        },
                        {
                          "type": "boolean_operator",
                          "start": {
                            "row": 36,
                            "column": 7
                          },
                          "end": {
                            "row": 36,
                            "column": 56
                          },
                          "text": "(clip_min is not None) and (clip_max is not None)",
                          "children": [
                            {
                              "type": "parenthesized_expression",
                              "start": {
                                "row": 36,
                                "column": 7
                              },
                              "end": {
                                "row": 36,
                                "column": 29
                              },
                              "text": "(clip_min is not None)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 36,
                                    "column": 7
                                  },
                                  "end": {
                                    "row": 36,
                                    "column": 8
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "comparison_operator",
                                  "start": {
                                    "row": 36,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 36,
                                    "column": 28
                                  },
                                  "text": "clip_min is not None",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 36,
                                        "column": 8
                                      },
                                      "end": {
                                        "row": 36,
                                        "column": 16
                                      },
                                      "text": "clip_min"
                                    },
                                    {
                                      "type": "is not",
                                      "start": {
                                        "row": 36,
                                        "column": 17
                                      },
                                      "end": {
                                        "row": 36,
                                        "column": 19
                                      },
                                      "text": "is"
                                    },
                                    {
                                      "type": "is not",
                                      "start": {
                                        "row": 36,
                                        "column": 20
                                      },
                                      "end": {
                                        "row": 36,
                                        "column": 23
                                      },
                                      "text": "not"
                                    },
                                    {
                                      "type": "none",
                                      "start": {
                                        "row": 36,
                                        "column": 24
                                      },
                                      "end": {
                                        "row": 36,
                                        "column": 28
                                      },
                                      "text": "None"
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 36,
                                    "column": 28
                                  },
                                  "end": {
                                    "row": 36,
                                    "column": 29
                                  },
                                  "text": ")"
                                }
                              ]
                            },
                            {
                              "type": "and",
                              "start": {
                                "row": 36,
                                "column": 30
                              },
                              "end": {
                                "row": 36,
                                "column": 33
                              },
                              "text": "and"
                            },
                            {
                              "type": "parenthesized_expression",
                              "start": {
                                "row": 36,
                                "column": 34
                              },
                              "end": {
                                "row": 36,
                                "column": 56
                              },
                              "text": "(clip_max is not None)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 36,
                                    "column": 34
                                  },
                                  "end": {
                                    "row": 36,
                                    "column": 35
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "comparison_operator",
                                  "start": {
                                    "row": 36,
                                    "column": 35
                                  },
                                  "end": {
                                    "row": 36,
                                    "column": 55
                                  },
                                  "text": "clip_max is not None",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 36,
                                        "column": 35
                                      },
                                      "end": {
                                        "row": 36,
                                        "column": 43
                                      },
                                      "text": "clip_max"
                                    },
                                    {
                                      "type": "is not",
                                      "start": {
                                        "row": 36,
                                        "column": 44
                                      },
                                      "end": {
                                        "row": 36,
                                        "column": 46
                                      },
                                      "text": "is"
                                    },
                                    {
                                      "type": "is not",
                                      "start": {
                                        "row": 36,
                                        "column": 47
                                      },
                                      "end": {
                                        "row": 36,
                                        "column": 50
                                      },
                                      "text": "not"
                                    },
                                    {
                                      "type": "none",
                                      "start": {
                                        "row": 36,
                                        "column": 51
                                      },
                                      "end": {
                                        "row": 36,
                                        "column": 55
                                      },
                                      "text": "None"
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 36,
                                    "column": 55
                                  },
                                  "end": {
                                    "row": 36,
                                    "column": 56
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ":",
                          "start": {
                            "row": 36,
                            "column": 56
                          },
                          "end": {
                            "row": 36,
                            "column": 57
                          },
                          "text": ":"
                        },
                        {
                          "type": "block",
                          "start": {
                            "row": 37,
                            "column": 6
                          },
                          "end": {
                            "row": 37,
                            "column": 57
                          },
                          "text": "adv_x = tf.clip_by_value(adv_x, clip_min, clip_max)",
                          "children": [
                            {
                              "type": "expression_statement",
                              "start": {
                                "row": 37,
                                "column": 6
                              },
                              "end": {
                                "row": 37,
                                "column": 57
                              },
                              "text": "adv_x = tf.clip_by_value(adv_x, clip_min, clip_max)",
                              "children": [
                                {
                                  "type": "assignment",
                                  "start": {
                                    "row": 37,
                                    "column": 6
                                  },
                                  "end": {
                                    "row": 37,
                                    "column": 57
                                  },
                                  "text": "adv_x = tf.clip_by_value(adv_x, clip_min, clip_max)",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 37,
                                        "column": 6
                                      },
                                      "end": {
                                        "row": 37,
                                        "column": 11
                                      },
                                      "text": "adv_x"
                                    },
                                    {
                                      "type": "=",
                                      "start": {
                                        "row": 37,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 37,
                                        "column": 13
                                      },
                                      "text": "="
                                    },
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 37,
                                        "column": 14
                                      },
                                      "end": {
                                        "row": 37,
                                        "column": 57
                                      },
                                      "text": "tf.clip_by_value(adv_x, clip_min, clip_max)",
                                      "children": [
                                        {
                                          "type": "attribute",
                                          "start": {
                                            "row": 37,
                                            "column": 14
                                          },
                                          "end": {
                                            "row": 37,
                                            "column": 30
                                          },
                                          "text": "tf.clip_by_value",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 37,
                                                "column": 14
                                              },
                                              "end": {
                                                "row": 37,
                                                "column": 16
                                              },
                                              "text": "tf"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 37,
                                                "column": 16
                                              },
                                              "end": {
                                                "row": 37,
                                                "column": 17
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 37,
                                                "column": 17
                                              },
                                              "end": {
                                                "row": 37,
                                                "column": 30
                                              },
                                              "text": "clip_by_value"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 37,
                                            "column": 30
                                          },
                                          "end": {
                                            "row": 37,
                                            "column": 57
                                          },
                                          "text": "(adv_x, clip_min, clip_max)",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 37,
                                                "column": 30
                                              },
                                              "end": {
                                                "row": 37,
                                                "column": 31
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 37,
                                                "column": 31
                                              },
                                              "end": {
                                                "row": 37,
                                                "column": 36
                                              },
                                              "text": "adv_x"
                                            },
                                            {
                                              "type": ",",
                                              "start": {
                                                "row": 37,
                                                "column": 36
                                              },
                                              "end": {
                                                "row": 37,
                                                "column": 37
                                              },
                                              "text": ","
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 37,
                                                "column": 38
                                              },
                                              "end": {
                                                "row": 37,
                                                "column": 46
                                              },
                                              "text": "clip_min"
                                            },
                                            {
                                              "type": ",",
                                              "start": {
                                                "row": 37,
                                                "column": 46
                                              },
                                              "end": {
                                                "row": 37,
                                                "column": 47
                                              },
                                              "text": ","
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 37,
                                                "column": 48
                                              },
                                              "end": {
                                                "row": 37,
                                                "column": 56
                                              },
                                              "text": "clip_max"
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 37,
                                                "column": 56
                                              },
                                              "end": {
                                                "row": 37,
                                                "column": 57
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "return_statement",
                      "start": {
                        "row": 38,
                        "column": 4
                      },
                      "end": {
                        "row": 38,
                        "column": 16
                      },
                      "text": "return adv_x",
                      "children": [
                        {
                          "type": "return",
                          "start": {
                            "row": 38,
                            "column": 4
                          },
                          "end": {
                            "row": 38,
                            "column": 10
                          },
                          "text": "return"
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 38,
                            "column": 11
                          },
                          "end": {
                            "row": 38,
                            "column": 16
                          },
                          "text": "adv_x"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}