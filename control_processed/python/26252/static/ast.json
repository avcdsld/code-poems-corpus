{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 21,
    "column": 55
  },
  "text": "def set_(key,\n         value,\n         host=DEFAULT_HOST,\n         port=DEFAULT_PORT,\n         time=DEFAULT_TIME,\n         min_compress_len=DEFAULT_MIN_COMPRESS_LEN):\n    '''\n    Set a key on the memcached server, overwriting the value if it exists.\n\n    CLI Example:\n\n    .. code-block:: bash\n\n        salt '*' memcached.set <key> <value>\n    '''\n    if not isinstance(time, six.integer_types):\n        raise SaltInvocationError('\\'time\\' must be an integer')\n    if not isinstance(min_compress_len, six.integer_types):\n        raise SaltInvocationError('\\'min_compress_len\\' must be an integer')\n    conn = _connect(host, port)\n    _check_stats(conn)\n    return conn.set(key, value, time, min_compress_len)",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 21,
        "column": 55
      },
      "text": "def set_(key,\n         value,\n         host=DEFAULT_HOST,\n         port=DEFAULT_PORT,\n         time=DEFAULT_TIME,\n         min_compress_len=DEFAULT_MIN_COMPRESS_LEN):\n    '''\n    Set a key on the memcached server, overwriting the value if it exists.\n\n    CLI Example:\n\n    .. code-block:: bash\n\n        salt '*' memcached.set <key> <value>\n    '''\n    if not isinstance(time, six.integer_types):\n        raise SaltInvocationError('\\'time\\' must be an integer')\n    if not isinstance(min_compress_len, six.integer_types):\n        raise SaltInvocationError('\\'min_compress_len\\' must be an integer')\n    conn = _connect(host, port)\n    _check_stats(conn)\n    return conn.set(key, value, time, min_compress_len)",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 8
          },
          "text": "set_"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 8
          },
          "end": {
            "row": 5,
            "column": 51
          },
          "text": "(key,\n         value,\n         host=DEFAULT_HOST,\n         port=DEFAULT_PORT,\n         time=DEFAULT_TIME,\n         min_compress_len=DEFAULT_MIN_COMPRESS_LEN)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 8
              },
              "end": {
                "row": 0,
                "column": 9
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 9
              },
              "end": {
                "row": 0,
                "column": 12
              },
              "text": "key"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 12
              },
              "end": {
                "row": 0,
                "column": 13
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 1,
                "column": 9
              },
              "end": {
                "row": 1,
                "column": 14
              },
              "text": "value"
            },
            {
              "type": ",",
              "start": {
                "row": 1,
                "column": 14
              },
              "end": {
                "row": 1,
                "column": 15
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 2,
                "column": 9
              },
              "end": {
                "row": 2,
                "column": 26
              },
              "text": "host=DEFAULT_HOST",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 2,
                    "column": 9
                  },
                  "end": {
                    "row": 2,
                    "column": 13
                  },
                  "text": "host"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 2,
                    "column": 13
                  },
                  "end": {
                    "row": 2,
                    "column": 14
                  },
                  "text": "="
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 2,
                    "column": 14
                  },
                  "end": {
                    "row": 2,
                    "column": 26
                  },
                  "text": "DEFAULT_HOST"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 2,
                "column": 26
              },
              "end": {
                "row": 2,
                "column": 27
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 3,
                "column": 9
              },
              "end": {
                "row": 3,
                "column": 26
              },
              "text": "port=DEFAULT_PORT",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 3,
                    "column": 9
                  },
                  "end": {
                    "row": 3,
                    "column": 13
                  },
                  "text": "port"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 3,
                    "column": 13
                  },
                  "end": {
                    "row": 3,
                    "column": 14
                  },
                  "text": "="
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 3,
                    "column": 14
                  },
                  "end": {
                    "row": 3,
                    "column": 26
                  },
                  "text": "DEFAULT_PORT"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 3,
                "column": 26
              },
              "end": {
                "row": 3,
                "column": 27
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 4,
                "column": 9
              },
              "end": {
                "row": 4,
                "column": 26
              },
              "text": "time=DEFAULT_TIME",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 4,
                    "column": 9
                  },
                  "end": {
                    "row": 4,
                    "column": 13
                  },
                  "text": "time"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 4,
                    "column": 13
                  },
                  "end": {
                    "row": 4,
                    "column": 14
                  },
                  "text": "="
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 4,
                    "column": 14
                  },
                  "end": {
                    "row": 4,
                    "column": 26
                  },
                  "text": "DEFAULT_TIME"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 4,
                "column": 26
              },
              "end": {
                "row": 4,
                "column": 27
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 5,
                "column": 9
              },
              "end": {
                "row": 5,
                "column": 50
              },
              "text": "min_compress_len=DEFAULT_MIN_COMPRESS_LEN",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 5,
                    "column": 9
                  },
                  "end": {
                    "row": 5,
                    "column": 25
                  },
                  "text": "min_compress_len"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 5,
                    "column": 25
                  },
                  "end": {
                    "row": 5,
                    "column": 26
                  },
                  "text": "="
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 5,
                    "column": 26
                  },
                  "end": {
                    "row": 5,
                    "column": 50
                  },
                  "text": "DEFAULT_MIN_COMPRESS_LEN"
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 5,
                "column": 50
              },
              "end": {
                "row": 5,
                "column": 51
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 5,
            "column": 51
          },
          "end": {
            "row": 5,
            "column": 52
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 6,
            "column": 4
          },
          "end": {
            "row": 21,
            "column": 55
          },
          "text": "'''\n    Set a key on the memcached server, overwriting the value if it exists.\n\n    CLI Example:\n\n    .. code-block:: bash\n\n        salt '*' memcached.set <key> <value>\n    '''\n    if not isinstance(time, six.integer_types):\n        raise SaltInvocationError('\\'time\\' must be an integer')\n    if not isinstance(min_compress_len, six.integer_types):\n        raise SaltInvocationError('\\'min_compress_len\\' must be an integer')\n    conn = _connect(host, port)\n    _check_stats(conn)\n    return conn.set(key, value, time, min_compress_len)",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 6,
                "column": 4
              },
              "end": {
                "row": 14,
                "column": 7
              },
              "text": "'''\n    Set a key on the memcached server, overwriting the value if it exists.\n\n    CLI Example:\n\n    .. code-block:: bash\n\n        salt '*' memcached.set <key> <value>\n    '''",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 6,
                    "column": 4
                  },
                  "end": {
                    "row": 14,
                    "column": 7
                  },
                  "text": "'''\n    Set a key on the memcached server, overwriting the value if it exists.\n\n    CLI Example:\n\n    .. code-block:: bash\n\n        salt '*' memcached.set <key> <value>\n    '''",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 6,
                        "column": 4
                      },
                      "end": {
                        "row": 6,
                        "column": 7
                      },
                      "text": "'''"
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 6,
                        "column": 7
                      },
                      "end": {
                        "row": 14,
                        "column": 4
                      },
                      "text": "\n    Set a key on the memcached server, overwriting the value if it exists.\n\n    CLI Example:\n\n    .. code-block:: bash\n\n        salt '*' memcached.set <key> <value>\n    "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 14,
                        "column": 4
                      },
                      "end": {
                        "row": 14,
                        "column": 7
                      },
                      "text": "'''"
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 15,
                "column": 4
              },
              "end": {
                "row": 16,
                "column": 64
              },
              "text": "if not isinstance(time, six.integer_types):\n        raise SaltInvocationError('\\'time\\' must be an integer')",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 15,
                    "column": 4
                  },
                  "end": {
                    "row": 15,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "not_operator",
                  "start": {
                    "row": 15,
                    "column": 7
                  },
                  "end": {
                    "row": 15,
                    "column": 46
                  },
                  "text": "not isinstance(time, six.integer_types)",
                  "children": [
                    {
                      "type": "not",
                      "start": {
                        "row": 15,
                        "column": 7
                      },
                      "end": {
                        "row": 15,
                        "column": 10
                      },
                      "text": "not"
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 15,
                        "column": 11
                      },
                      "end": {
                        "row": 15,
                        "column": 46
                      },
                      "text": "isinstance(time, six.integer_types)",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 15,
                            "column": 11
                          },
                          "end": {
                            "row": 15,
                            "column": 21
                          },
                          "text": "isinstance"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 15,
                            "column": 21
                          },
                          "end": {
                            "row": 15,
                            "column": 46
                          },
                          "text": "(time, six.integer_types)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 15,
                                "column": 21
                              },
                              "end": {
                                "row": 15,
                                "column": 22
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 15,
                                "column": 22
                              },
                              "end": {
                                "row": 15,
                                "column": 26
                              },
                              "text": "time"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 15,
                                "column": 26
                              },
                              "end": {
                                "row": 15,
                                "column": 27
                              },
                              "text": ","
                            },
                            {
                              "type": "attribute",
                              "start": {
                                "row": 15,
                                "column": 28
                              },
                              "end": {
                                "row": 15,
                                "column": 45
                              },
                              "text": "six.integer_types",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 15,
                                    "column": 28
                                  },
                                  "end": {
                                    "row": 15,
                                    "column": 31
                                  },
                                  "text": "six"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 15,
                                    "column": 31
                                  },
                                  "end": {
                                    "row": 15,
                                    "column": 32
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 15,
                                    "column": 32
                                  },
                                  "end": {
                                    "row": 15,
                                    "column": 45
                                  },
                                  "text": "integer_types"
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 15,
                                "column": 45
                              },
                              "end": {
                                "row": 15,
                                "column": 46
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 15,
                    "column": 46
                  },
                  "end": {
                    "row": 15,
                    "column": 47
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 16,
                    "column": 8
                  },
                  "end": {
                    "row": 16,
                    "column": 64
                  },
                  "text": "raise SaltInvocationError('\\'time\\' must be an integer')",
                  "children": [
                    {
                      "type": "raise_statement",
                      "start": {
                        "row": 16,
                        "column": 8
                      },
                      "end": {
                        "row": 16,
                        "column": 64
                      },
                      "text": "raise SaltInvocationError('\\'time\\' must be an integer')",
                      "children": [
                        {
                          "type": "raise",
                          "start": {
                            "row": 16,
                            "column": 8
                          },
                          "end": {
                            "row": 16,
                            "column": 13
                          },
                          "text": "raise"
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 16,
                            "column": 14
                          },
                          "end": {
                            "row": 16,
                            "column": 64
                          },
                          "text": "SaltInvocationError('\\'time\\' must be an integer')",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 16,
                                "column": 14
                              },
                              "end": {
                                "row": 16,
                                "column": 33
                              },
                              "text": "SaltInvocationError"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 16,
                                "column": 33
                              },
                              "end": {
                                "row": 16,
                                "column": 64
                              },
                              "text": "('\\'time\\' must be an integer')",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 16,
                                    "column": 33
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 34
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "string",
                                  "start": {
                                    "row": 16,
                                    "column": 34
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 63
                                  },
                                  "text": "'\\'time\\' must be an integer'",
                                  "children": [
                                    {
                                      "type": "string_start",
                                      "start": {
                                        "row": 16,
                                        "column": 34
                                      },
                                      "end": {
                                        "row": 16,
                                        "column": 35
                                      },
                                      "text": "'"
                                    },
                                    {
                                      "type": "string_content",
                                      "start": {
                                        "row": 16,
                                        "column": 35
                                      },
                                      "end": {
                                        "row": 16,
                                        "column": 62
                                      },
                                      "text": "\\'time\\' must be an integer",
                                      "children": [
                                        {
                                          "type": "escape_sequence",
                                          "start": {
                                            "row": 16,
                                            "column": 35
                                          },
                                          "end": {
                                            "row": 16,
                                            "column": 37
                                          },
                                          "text": "\\'"
                                        },
                                        {
                                          "type": "escape_sequence",
                                          "start": {
                                            "row": 16,
                                            "column": 41
                                          },
                                          "end": {
                                            "row": 16,
                                            "column": 43
                                          },
                                          "text": "\\'"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "string_end",
                                      "start": {
                                        "row": 16,
                                        "column": 62
                                      },
                                      "end": {
                                        "row": 16,
                                        "column": 63
                                      },
                                      "text": "'"
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 16,
                                    "column": 63
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 64
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 17,
                "column": 4
              },
              "end": {
                "row": 18,
                "column": 76
              },
              "text": "if not isinstance(min_compress_len, six.integer_types):\n        raise SaltInvocationError('\\'min_compress_len\\' must be an integer')",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 17,
                    "column": 4
                  },
                  "end": {
                    "row": 17,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "not_operator",
                  "start": {
                    "row": 17,
                    "column": 7
                  },
                  "end": {
                    "row": 17,
                    "column": 58
                  },
                  "text": "not isinstance(min_compress_len, six.integer_types)",
                  "children": [
                    {
                      "type": "not",
                      "start": {
                        "row": 17,
                        "column": 7
                      },
                      "end": {
                        "row": 17,
                        "column": 10
                      },
                      "text": "not"
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 17,
                        "column": 11
                      },
                      "end": {
                        "row": 17,
                        "column": 58
                      },
                      "text": "isinstance(min_compress_len, six.integer_types)",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 17,
                            "column": 11
                          },
                          "end": {
                            "row": 17,
                            "column": 21
                          },
                          "text": "isinstance"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 17,
                            "column": 21
                          },
                          "end": {
                            "row": 17,
                            "column": 58
                          },
                          "text": "(min_compress_len, six.integer_types)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 17,
                                "column": 21
                              },
                              "end": {
                                "row": 17,
                                "column": 22
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 17,
                                "column": 22
                              },
                              "end": {
                                "row": 17,
                                "column": 38
                              },
                              "text": "min_compress_len"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 17,
                                "column": 38
                              },
                              "end": {
                                "row": 17,
                                "column": 39
                              },
                              "text": ","
                            },
                            {
                              "type": "attribute",
                              "start": {
                                "row": 17,
                                "column": 40
                              },
                              "end": {
                                "row": 17,
                                "column": 57
                              },
                              "text": "six.integer_types",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 17,
                                    "column": 40
                                  },
                                  "end": {
                                    "row": 17,
                                    "column": 43
                                  },
                                  "text": "six"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 17,
                                    "column": 43
                                  },
                                  "end": {
                                    "row": 17,
                                    "column": 44
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 17,
                                    "column": 44
                                  },
                                  "end": {
                                    "row": 17,
                                    "column": 57
                                  },
                                  "text": "integer_types"
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 17,
                                "column": 57
                              },
                              "end": {
                                "row": 17,
                                "column": 58
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 17,
                    "column": 58
                  },
                  "end": {
                    "row": 17,
                    "column": 59
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 18,
                    "column": 8
                  },
                  "end": {
                    "row": 18,
                    "column": 76
                  },
                  "text": "raise SaltInvocationError('\\'min_compress_len\\' must be an integer')",
                  "children": [
                    {
                      "type": "raise_statement",
                      "start": {
                        "row": 18,
                        "column": 8
                      },
                      "end": {
                        "row": 18,
                        "column": 76
                      },
                      "text": "raise SaltInvocationError('\\'min_compress_len\\' must be an integer')",
                      "children": [
                        {
                          "type": "raise",
                          "start": {
                            "row": 18,
                            "column": 8
                          },
                          "end": {
                            "row": 18,
                            "column": 13
                          },
                          "text": "raise"
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 18,
                            "column": 14
                          },
                          "end": {
                            "row": 18,
                            "column": 76
                          },
                          "text": "SaltInvocationError('\\'min_compress_len\\' must be an integer')",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 18,
                                "column": 14
                              },
                              "end": {
                                "row": 18,
                                "column": 33
                              },
                              "text": "SaltInvocationError"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 18,
                                "column": 33
                              },
                              "end": {
                                "row": 18,
                                "column": 76
                              },
                              "text": "('\\'min_compress_len\\' must be an integer')",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 18,
                                    "column": 33
                                  },
                                  "end": {
                                    "row": 18,
                                    "column": 34
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "string",
                                  "start": {
                                    "row": 18,
                                    "column": 34
                                  },
                                  "end": {
                                    "row": 18,
                                    "column": 75
                                  },
                                  "text": "'\\'min_compress_len\\' must be an integer'",
                                  "children": [
                                    {
                                      "type": "string_start",
                                      "start": {
                                        "row": 18,
                                        "column": 34
                                      },
                                      "end": {
                                        "row": 18,
                                        "column": 35
                                      },
                                      "text": "'"
                                    },
                                    {
                                      "type": "string_content",
                                      "start": {
                                        "row": 18,
                                        "column": 35
                                      },
                                      "end": {
                                        "row": 18,
                                        "column": 74
                                      },
                                      "text": "\\'min_compress_len\\' must be an integer",
                                      "children": [
                                        {
                                          "type": "escape_sequence",
                                          "start": {
                                            "row": 18,
                                            "column": 35
                                          },
                                          "end": {
                                            "row": 18,
                                            "column": 37
                                          },
                                          "text": "\\'"
                                        },
                                        {
                                          "type": "escape_sequence",
                                          "start": {
                                            "row": 18,
                                            "column": 53
                                          },
                                          "end": {
                                            "row": 18,
                                            "column": 55
                                          },
                                          "text": "\\'"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "string_end",
                                      "start": {
                                        "row": 18,
                                        "column": 74
                                      },
                                      "end": {
                                        "row": 18,
                                        "column": 75
                                      },
                                      "text": "'"
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 18,
                                    "column": 75
                                  },
                                  "end": {
                                    "row": 18,
                                    "column": 76
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 19,
                "column": 4
              },
              "end": {
                "row": 19,
                "column": 31
              },
              "text": "conn = _connect(host, port)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 19,
                    "column": 4
                  },
                  "end": {
                    "row": 19,
                    "column": 31
                  },
                  "text": "conn = _connect(host, port)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 19,
                        "column": 4
                      },
                      "end": {
                        "row": 19,
                        "column": 8
                      },
                      "text": "conn"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 19,
                        "column": 9
                      },
                      "end": {
                        "row": 19,
                        "column": 10
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 19,
                        "column": 11
                      },
                      "end": {
                        "row": 19,
                        "column": 31
                      },
                      "text": "_connect(host, port)",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 19,
                            "column": 11
                          },
                          "end": {
                            "row": 19,
                            "column": 19
                          },
                          "text": "_connect"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 19,
                            "column": 19
                          },
                          "end": {
                            "row": 19,
                            "column": 31
                          },
                          "text": "(host, port)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 19,
                                "column": 19
                              },
                              "end": {
                                "row": 19,
                                "column": 20
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 19,
                                "column": 20
                              },
                              "end": {
                                "row": 19,
                                "column": 24
                              },
                              "text": "host"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 19,
                                "column": 24
                              },
                              "end": {
                                "row": 19,
                                "column": 25
                              },
                              "text": ","
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 19,
                                "column": 26
                              },
                              "end": {
                                "row": 19,
                                "column": 30
                              },
                              "text": "port"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 19,
                                "column": 30
                              },
                              "end": {
                                "row": 19,
                                "column": 31
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 20,
                "column": 4
              },
              "end": {
                "row": 20,
                "column": 22
              },
              "text": "_check_stats(conn)",
              "children": [
                {
                  "type": "call",
                  "start": {
                    "row": 20,
                    "column": 4
                  },
                  "end": {
                    "row": 20,
                    "column": 22
                  },
                  "text": "_check_stats(conn)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 20,
                        "column": 4
                      },
                      "end": {
                        "row": 20,
                        "column": 16
                      },
                      "text": "_check_stats"
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 20,
                        "column": 16
                      },
                      "end": {
                        "row": 20,
                        "column": 22
                      },
                      "text": "(conn)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 20,
                            "column": 16
                          },
                          "end": {
                            "row": 20,
                            "column": 17
                          },
                          "text": "("
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 20,
                            "column": 17
                          },
                          "end": {
                            "row": 20,
                            "column": 21
                          },
                          "text": "conn"
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 20,
                            "column": 21
                          },
                          "end": {
                            "row": 20,
                            "column": 22
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 21,
                "column": 4
              },
              "end": {
                "row": 21,
                "column": 55
              },
              "text": "return conn.set(key, value, time, min_compress_len)",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 21,
                    "column": 4
                  },
                  "end": {
                    "row": 21,
                    "column": 10
                  },
                  "text": "return"
                },
                {
                  "type": "call",
                  "start": {
                    "row": 21,
                    "column": 11
                  },
                  "end": {
                    "row": 21,
                    "column": 55
                  },
                  "text": "conn.set(key, value, time, min_compress_len)",
                  "children": [
                    {
                      "type": "attribute",
                      "start": {
                        "row": 21,
                        "column": 11
                      },
                      "end": {
                        "row": 21,
                        "column": 19
                      },
                      "text": "conn.set",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 21,
                            "column": 11
                          },
                          "end": {
                            "row": 21,
                            "column": 15
                          },
                          "text": "conn"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 21,
                            "column": 15
                          },
                          "end": {
                            "row": 21,
                            "column": 16
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 21,
                            "column": 16
                          },
                          "end": {
                            "row": 21,
                            "column": 19
                          },
                          "text": "set"
                        }
                      ]
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 21,
                        "column": 19
                      },
                      "end": {
                        "row": 21,
                        "column": 55
                      },
                      "text": "(key, value, time, min_compress_len)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 21,
                            "column": 19
                          },
                          "end": {
                            "row": 21,
                            "column": 20
                          },
                          "text": "("
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 21,
                            "column": 20
                          },
                          "end": {
                            "row": 21,
                            "column": 23
                          },
                          "text": "key"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 21,
                            "column": 23
                          },
                          "end": {
                            "row": 21,
                            "column": 24
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 21,
                            "column": 25
                          },
                          "end": {
                            "row": 21,
                            "column": 30
                          },
                          "text": "value"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 21,
                            "column": 30
                          },
                          "end": {
                            "row": 21,
                            "column": 31
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 21,
                            "column": 32
                          },
                          "end": {
                            "row": 21,
                            "column": 36
                          },
                          "text": "time"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 21,
                            "column": 36
                          },
                          "end": {
                            "row": 21,
                            "column": 37
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 21,
                            "column": 38
                          },
                          "end": {
                            "row": 21,
                            "column": 54
                          },
                          "text": "min_compress_len"
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 21,
                            "column": 54
                          },
                          "end": {
                            "row": 21,
                            "column": 55
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}