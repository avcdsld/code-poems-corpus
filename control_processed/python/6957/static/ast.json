{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 25,
    "column": 76
  },
  "text": "def prepare(self, data_batch, sparse_row_id_fn=None):\n        \"\"\"Prepares two modules for processing a data batch.\n\n        Usually involves switching bucket and reshaping.\n        For modules that contain `row_sparse` parameters in KVStore,\n        it prepares the `row_sparse` parameters based on the sparse_row_id_fn.\n\n        When KVStore is used to update parameters for multi-device or multi-machine training,\n        a copy of the parameters are stored in KVStore. Note that for `row_sparse` parameters,\n        the `update()` updates the copy of parameters in KVStore, but doesn't broadcast\n        the updated parameters to all devices / machines. The `prepare` function is used to\n        broadcast `row_sparse` parameters with the next batch of data.\n\n        Parameters\n        ----------\n        data_batch : DataBatch\n            The current batch of data for forward computation.\n\n        sparse_row_id_fn : A callback function\n            The function  takes `data_batch` as an input and returns a dict of\n            str -> NDArray. The resulting dict is used for pulling row_sparse\n            parameters from the kvstore, where the str key is the name of the param,\n            and the value is the row id of the param to pull.\n        \"\"\"\n        super(SVRGModule, self).prepare(data_batch, sparse_row_id_fn=sparse_row_id_fn)\n        self._mod_aux.prepare(data_batch, sparse_row_id_fn=sparse_row_id_fn)",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 25,
        "column": 76
      },
      "text": "def prepare(self, data_batch, sparse_row_id_fn=None):\n        \"\"\"Prepares two modules for processing a data batch.\n\n        Usually involves switching bucket and reshaping.\n        For modules that contain `row_sparse` parameters in KVStore,\n        it prepares the `row_sparse` parameters based on the sparse_row_id_fn.\n\n        When KVStore is used to update parameters for multi-device or multi-machine training,\n        a copy of the parameters are stored in KVStore. Note that for `row_sparse` parameters,\n        the `update()` updates the copy of parameters in KVStore, but doesn't broadcast\n        the updated parameters to all devices / machines. The `prepare` function is used to\n        broadcast `row_sparse` parameters with the next batch of data.\n\n        Parameters\n        ----------\n        data_batch : DataBatch\n            The current batch of data for forward computation.\n\n        sparse_row_id_fn : A callback function\n            The function  takes `data_batch` as an input and returns a dict of\n            str -> NDArray. The resulting dict is used for pulling row_sparse\n            parameters from the kvstore, where the str key is the name of the param,\n            and the value is the row id of the param to pull.\n        \"\"\"\n        super(SVRGModule, self).prepare(data_batch, sparse_row_id_fn=sparse_row_id_fn)\n        self._mod_aux.prepare(data_batch, sparse_row_id_fn=sparse_row_id_fn)",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 11
          },
          "text": "prepare"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 11
          },
          "end": {
            "row": 0,
            "column": 52
          },
          "text": "(self, data_batch, sparse_row_id_fn=None)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 11
              },
              "end": {
                "row": 0,
                "column": 12
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 12
              },
              "end": {
                "row": 0,
                "column": 16
              },
              "text": "self"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 16
              },
              "end": {
                "row": 0,
                "column": 17
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 18
              },
              "end": {
                "row": 0,
                "column": 28
              },
              "text": "data_batch"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 28
              },
              "end": {
                "row": 0,
                "column": 29
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 0,
                "column": 30
              },
              "end": {
                "row": 0,
                "column": 51
              },
              "text": "sparse_row_id_fn=None",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 30
                  },
                  "end": {
                    "row": 0,
                    "column": 46
                  },
                  "text": "sparse_row_id_fn"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 0,
                    "column": 46
                  },
                  "end": {
                    "row": 0,
                    "column": 47
                  },
                  "text": "="
                },
                {
                  "type": "none",
                  "start": {
                    "row": 0,
                    "column": 47
                  },
                  "end": {
                    "row": 0,
                    "column": 51
                  },
                  "text": "None"
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 51
              },
              "end": {
                "row": 0,
                "column": 52
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 52
          },
          "end": {
            "row": 0,
            "column": 53
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 8
          },
          "end": {
            "row": 25,
            "column": 76
          },
          "text": "\"\"\"Prepares two modules for processing a data batch.\n\n        Usually involves switching bucket and reshaping.\n        For modules that contain `row_sparse` parameters in KVStore,\n        it prepares the `row_sparse` parameters based on the sparse_row_id_fn.\n\n        When KVStore is used to update parameters for multi-device or multi-machine training,\n        a copy of the parameters are stored in KVStore. Note that for `row_sparse` parameters,\n        the `update()` updates the copy of parameters in KVStore, but doesn't broadcast\n        the updated parameters to all devices / machines. The `prepare` function is used to\n        broadcast `row_sparse` parameters with the next batch of data.\n\n        Parameters\n        ----------\n        data_batch : DataBatch\n            The current batch of data for forward computation.\n\n        sparse_row_id_fn : A callback function\n            The function  takes `data_batch` as an input and returns a dict of\n            str -> NDArray. The resulting dict is used for pulling row_sparse\n            parameters from the kvstore, where the str key is the name of the param,\n            and the value is the row id of the param to pull.\n        \"\"\"\n        super(SVRGModule, self).prepare(data_batch, sparse_row_id_fn=sparse_row_id_fn)\n        self._mod_aux.prepare(data_batch, sparse_row_id_fn=sparse_row_id_fn)",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 8
              },
              "end": {
                "row": 23,
                "column": 11
              },
              "text": "\"\"\"Prepares two modules for processing a data batch.\n\n        Usually involves switching bucket and reshaping.\n        For modules that contain `row_sparse` parameters in KVStore,\n        it prepares the `row_sparse` parameters based on the sparse_row_id_fn.\n\n        When KVStore is used to update parameters for multi-device or multi-machine training,\n        a copy of the parameters are stored in KVStore. Note that for `row_sparse` parameters,\n        the `update()` updates the copy of parameters in KVStore, but doesn't broadcast\n        the updated parameters to all devices / machines. The `prepare` function is used to\n        broadcast `row_sparse` parameters with the next batch of data.\n\n        Parameters\n        ----------\n        data_batch : DataBatch\n            The current batch of data for forward computation.\n\n        sparse_row_id_fn : A callback function\n            The function  takes `data_batch` as an input and returns a dict of\n            str -> NDArray. The resulting dict is used for pulling row_sparse\n            parameters from the kvstore, where the str key is the name of the param,\n            and the value is the row id of the param to pull.\n        \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 8
                  },
                  "end": {
                    "row": 23,
                    "column": 11
                  },
                  "text": "\"\"\"Prepares two modules for processing a data batch.\n\n        Usually involves switching bucket and reshaping.\n        For modules that contain `row_sparse` parameters in KVStore,\n        it prepares the `row_sparse` parameters based on the sparse_row_id_fn.\n\n        When KVStore is used to update parameters for multi-device or multi-machine training,\n        a copy of the parameters are stored in KVStore. Note that for `row_sparse` parameters,\n        the `update()` updates the copy of parameters in KVStore, but doesn't broadcast\n        the updated parameters to all devices / machines. The `prepare` function is used to\n        broadcast `row_sparse` parameters with the next batch of data.\n\n        Parameters\n        ----------\n        data_batch : DataBatch\n            The current batch of data for forward computation.\n\n        sparse_row_id_fn : A callback function\n            The function  takes `data_batch` as an input and returns a dict of\n            str -> NDArray. The resulting dict is used for pulling row_sparse\n            parameters from the kvstore, where the str key is the name of the param,\n            and the value is the row id of the param to pull.\n        \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 8
                      },
                      "end": {
                        "row": 1,
                        "column": 11
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 11
                      },
                      "end": {
                        "row": 23,
                        "column": 8
                      },
                      "text": "Prepares two modules for processing a data batch.\n\n        Usually involves switching bucket and reshaping.\n        For modules that contain `row_sparse` parameters in KVStore,\n        it prepares the `row_sparse` parameters based on the sparse_row_id_fn.\n\n        When KVStore is used to update parameters for multi-device or multi-machine training,\n        a copy of the parameters are stored in KVStore. Note that for `row_sparse` parameters,\n        the `update()` updates the copy of parameters in KVStore, but doesn't broadcast\n        the updated parameters to all devices / machines. The `prepare` function is used to\n        broadcast `row_sparse` parameters with the next batch of data.\n\n        Parameters\n        ----------\n        data_batch : DataBatch\n            The current batch of data for forward computation.\n\n        sparse_row_id_fn : A callback function\n            The function  takes `data_batch` as an input and returns a dict of\n            str -> NDArray. The resulting dict is used for pulling row_sparse\n            parameters from the kvstore, where the str key is the name of the param,\n            and the value is the row id of the param to pull.\n        "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 23,
                        "column": 8
                      },
                      "end": {
                        "row": 23,
                        "column": 11
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 24,
                "column": 8
              },
              "end": {
                "row": 24,
                "column": 86
              },
              "text": "super(SVRGModule, self).prepare(data_batch, sparse_row_id_fn=sparse_row_id_fn)",
              "children": [
                {
                  "type": "call",
                  "start": {
                    "row": 24,
                    "column": 8
                  },
                  "end": {
                    "row": 24,
                    "column": 86
                  },
                  "text": "super(SVRGModule, self).prepare(data_batch, sparse_row_id_fn=sparse_row_id_fn)",
                  "children": [
                    {
                      "type": "attribute",
                      "start": {
                        "row": 24,
                        "column": 8
                      },
                      "end": {
                        "row": 24,
                        "column": 39
                      },
                      "text": "super(SVRGModule, self).prepare",
                      "children": [
                        {
                          "type": "call",
                          "start": {
                            "row": 24,
                            "column": 8
                          },
                          "end": {
                            "row": 24,
                            "column": 31
                          },
                          "text": "super(SVRGModule, self)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 24,
                                "column": 8
                              },
                              "end": {
                                "row": 24,
                                "column": 13
                              },
                              "text": "super"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 24,
                                "column": 13
                              },
                              "end": {
                                "row": 24,
                                "column": 31
                              },
                              "text": "(SVRGModule, self)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 24,
                                    "column": 13
                                  },
                                  "end": {
                                    "row": 24,
                                    "column": 14
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 24,
                                    "column": 14
                                  },
                                  "end": {
                                    "row": 24,
                                    "column": 24
                                  },
                                  "text": "SVRGModule"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 24,
                                    "column": 24
                                  },
                                  "end": {
                                    "row": 24,
                                    "column": 25
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 24,
                                    "column": 26
                                  },
                                  "end": {
                                    "row": 24,
                                    "column": 30
                                  },
                                  "text": "self"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 24,
                                    "column": 30
                                  },
                                  "end": {
                                    "row": 24,
                                    "column": 31
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 24,
                            "column": 31
                          },
                          "end": {
                            "row": 24,
                            "column": 32
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 24,
                            "column": 32
                          },
                          "end": {
                            "row": 24,
                            "column": 39
                          },
                          "text": "prepare"
                        }
                      ]
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 24,
                        "column": 39
                      },
                      "end": {
                        "row": 24,
                        "column": 86
                      },
                      "text": "(data_batch, sparse_row_id_fn=sparse_row_id_fn)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 24,
                            "column": 39
                          },
                          "end": {
                            "row": 24,
                            "column": 40
                          },
                          "text": "("
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 24,
                            "column": 40
                          },
                          "end": {
                            "row": 24,
                            "column": 50
                          },
                          "text": "data_batch"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 24,
                            "column": 50
                          },
                          "end": {
                            "row": 24,
                            "column": 51
                          },
                          "text": ","
                        },
                        {
                          "type": "keyword_argument",
                          "start": {
                            "row": 24,
                            "column": 52
                          },
                          "end": {
                            "row": 24,
                            "column": 85
                          },
                          "text": "sparse_row_id_fn=sparse_row_id_fn",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 24,
                                "column": 52
                              },
                              "end": {
                                "row": 24,
                                "column": 68
                              },
                              "text": "sparse_row_id_fn"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 24,
                                "column": 68
                              },
                              "end": {
                                "row": 24,
                                "column": 69
                              },
                              "text": "="
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 24,
                                "column": 69
                              },
                              "end": {
                                "row": 24,
                                "column": 85
                              },
                              "text": "sparse_row_id_fn"
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 24,
                            "column": 85
                          },
                          "end": {
                            "row": 24,
                            "column": 86
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 25,
                "column": 8
              },
              "end": {
                "row": 25,
                "column": 76
              },
              "text": "self._mod_aux.prepare(data_batch, sparse_row_id_fn=sparse_row_id_fn)",
              "children": [
                {
                  "type": "call",
                  "start": {
                    "row": 25,
                    "column": 8
                  },
                  "end": {
                    "row": 25,
                    "column": 76
                  },
                  "text": "self._mod_aux.prepare(data_batch, sparse_row_id_fn=sparse_row_id_fn)",
                  "children": [
                    {
                      "type": "attribute",
                      "start": {
                        "row": 25,
                        "column": 8
                      },
                      "end": {
                        "row": 25,
                        "column": 29
                      },
                      "text": "self._mod_aux.prepare",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 25,
                            "column": 8
                          },
                          "end": {
                            "row": 25,
                            "column": 21
                          },
                          "text": "self._mod_aux",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 25,
                                "column": 8
                              },
                              "end": {
                                "row": 25,
                                "column": 12
                              },
                              "text": "self"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 25,
                                "column": 12
                              },
                              "end": {
                                "row": 25,
                                "column": 13
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 25,
                                "column": 13
                              },
                              "end": {
                                "row": 25,
                                "column": 21
                              },
                              "text": "_mod_aux"
                            }
                          ]
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 25,
                            "column": 21
                          },
                          "end": {
                            "row": 25,
                            "column": 22
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 25,
                            "column": 22
                          },
                          "end": {
                            "row": 25,
                            "column": 29
                          },
                          "text": "prepare"
                        }
                      ]
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 25,
                        "column": 29
                      },
                      "end": {
                        "row": 25,
                        "column": 76
                      },
                      "text": "(data_batch, sparse_row_id_fn=sparse_row_id_fn)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 25,
                            "column": 29
                          },
                          "end": {
                            "row": 25,
                            "column": 30
                          },
                          "text": "("
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 25,
                            "column": 30
                          },
                          "end": {
                            "row": 25,
                            "column": 40
                          },
                          "text": "data_batch"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 25,
                            "column": 40
                          },
                          "end": {
                            "row": 25,
                            "column": 41
                          },
                          "text": ","
                        },
                        {
                          "type": "keyword_argument",
                          "start": {
                            "row": 25,
                            "column": 42
                          },
                          "end": {
                            "row": 25,
                            "column": 75
                          },
                          "text": "sparse_row_id_fn=sparse_row_id_fn",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 25,
                                "column": 42
                              },
                              "end": {
                                "row": 25,
                                "column": 58
                              },
                              "text": "sparse_row_id_fn"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 25,
                                "column": 58
                              },
                              "end": {
                                "row": 25,
                                "column": 59
                              },
                              "text": "="
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 25,
                                "column": 59
                              },
                              "end": {
                                "row": 25,
                                "column": 75
                              },
                              "text": "sparse_row_id_fn"
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 25,
                            "column": 75
                          },
                          "end": {
                            "row": 25,
                            "column": 76
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}