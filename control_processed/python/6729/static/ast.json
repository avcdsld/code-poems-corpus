{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 111,
    "column": 30
  },
  "text": "def dynamic_unroll(cell, inputs, begin_state, drop_inputs=0, drop_outputs=0,\n                   layout='TNC', valid_length=None):\n    \"\"\"Unrolls an RNN cell across time steps.\n\n    Currently, 'TNC' is a preferred layout. unroll on the input of this layout\n    runs much faster.\n\n    Parameters\n    ----------\n    cell : an object whose base class is RNNCell.\n        The RNN cell to run on the input sequence.\n    inputs : Symbol\n        It should have shape (batch_size, length, ...) if `layout` is 'NTC',\n        or (length, batch_size, ...) if `layout` is 'TNC'.\n    begin_state : nested list of Symbol\n        The initial states of the RNN sequence.\n    drop_inputs : float, default 0.\n        The dropout rate for inputs. Won't apply dropout if it equals 0.\n    drop_outputs : float, default 0.\n        The dropout rate for outputs. Won't apply dropout if it equals 0.\n    layout : str, optional\n        `layout` of input symbol. Only used if inputs\n        is a single Symbol.\n    valid_length : Symbol, NDArray or None\n        `valid_length` specifies the length of the sequences in the batch without padding.\n        This option is especially useful for building sequence-to-sequence models where\n        the input and output sequences would potentially be padded.\n        If `valid_length` is None, all sequences are assumed to have the same length.\n        If `valid_length` is a Symbol or NDArray, it should have shape (batch_size,).\n        The ith element will be the length of the ith sequence in the batch.\n        The last valid state will be return and the padded outputs will be masked with 0.\n        Note that `valid_length` must be smaller or equal to `length`.\n\n    Returns\n    -------\n    outputs : Symbol\n        the output of the RNN from this unrolling.\n\n    states : list of Symbol\n        The new state of this RNN after this unrolling.\n        The type of this symbol is same as the output of `begin_state`.\n\n    Examples\n    --------\n    >>> seq_len = 3\n    >>> batch_size = 2\n    >>> input_size = 5\n    >>> cell = mx.gluon.rnn.LSTMCell(input_size, prefix='rnn_')\n    >>> cell.initialize(ctx=mx.cpu())\n    >>> rnn_data = mx.nd.normal(loc=0, scale=1, shape=(seq_len, batch_size, input_size))\n    >>> state_shape = (batch_size, input_size)\n    >>> states = [mx.nd.normal(loc=0, scale=1, shape=state_shape) for i in range(2)]\n    >>> valid_length = mx.nd.array([2, 3])\n    >>> output, states = mx.gluon.contrib.rnn.rnn_cell.dynamic_unroll(cell, rnn_data, states,\n                                                                      valid_length=valid_length,\n                                                                      layout='TNC')\n    >>> print(output)\n    [[[ 0.00767238  0.00023103  0.03973929 -0.00925503 -0.05660512]\n      [ 0.00881535  0.05428379 -0.02493718 -0.01834097  0.02189514]]\n     [[-0.00676967  0.01447039  0.01287002 -0.00574152 -0.05734247]\n      [ 0.01568508  0.02650866 -0.04270559 -0.04328435  0.00904011]]\n     [[ 0.          0.          0.          0.          0.        ]\n      [ 0.01055336  0.02734251 -0.03153727 -0.03742751 -0.01378113]]]\n     <NDArray 3x2x5 @cpu(0)>\n    \"\"\"\n\n    # Merge is always True, so we don't need length.\n    inputs, axis, F, _ = _format_sequence(0, inputs, layout, True)\n    if axis != 0:\n        axes = list(range(len(layout)))\n        tmp = axes[0]\n        axes[0] = axes[axis]\n        axes[axis] = tmp\n        inputs = F.transpose(inputs, axes=axes)\n    states = begin_state\n\n    if drop_inputs:\n        inputs = F.Dropout(inputs, p=drop_inputs, axes=(axis,))\n\n    if valid_length is None:\n        def loop_body(inputs, states):\n            return cell(inputs, states)\n    else:\n        zeros = []\n        for s in states:\n            zeros.append(F.zeros_like(s))\n        states = list(_as_list(states))\n        states.append(F.zeros((1)))\n        def loop_body(inputs, states):\n            cell_states = states[:-1]\n            iter_no = states[-1]\n            out, new_states = cell(inputs, cell_states)\n            for i, state in enumerate(cell_states):\n                new_states[i] = F.where(F.broadcast_greater(valid_length, iter_no),\n                                        new_states[i], state)\n            new_states.append(iter_no + 1)\n            return out, new_states\n\n    outputs, states = F.contrib.foreach(loop_body, inputs, states)\n    if drop_outputs:\n        outputs = F.Dropout(outputs, p=drop_outputs, axes=(axis,))\n    if valid_length is not None:\n        if axis != 0:\n            outputs = F.transpose(outputs, axes)\n        outputs = F.SequenceMask(outputs, sequence_length=valid_length,\n                                 use_sequence_length=True, axis=axis)\n        # the last state is the iteration number. We don't need it.\n        return outputs, states[:-1]\n    else:\n        if axis != 0:\n            outputs = F.transpose(outputs, axes)\n        return outputs, states",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 111,
        "column": 30
      },
      "text": "def dynamic_unroll(cell, inputs, begin_state, drop_inputs=0, drop_outputs=0,\n                   layout='TNC', valid_length=None):\n    \"\"\"Unrolls an RNN cell across time steps.\n\n    Currently, 'TNC' is a preferred layout. unroll on the input of this layout\n    runs much faster.\n\n    Parameters\n    ----------\n    cell : an object whose base class is RNNCell.\n        The RNN cell to run on the input sequence.\n    inputs : Symbol\n        It should have shape (batch_size, length, ...) if `layout` is 'NTC',\n        or (length, batch_size, ...) if `layout` is 'TNC'.\n    begin_state : nested list of Symbol\n        The initial states of the RNN sequence.\n    drop_inputs : float, default 0.\n        The dropout rate for inputs. Won't apply dropout if it equals 0.\n    drop_outputs : float, default 0.\n        The dropout rate for outputs. Won't apply dropout if it equals 0.\n    layout : str, optional\n        `layout` of input symbol. Only used if inputs\n        is a single Symbol.\n    valid_length : Symbol, NDArray or None\n        `valid_length` specifies the length of the sequences in the batch without padding.\n        This option is especially useful for building sequence-to-sequence models where\n        the input and output sequences would potentially be padded.\n        If `valid_length` is None, all sequences are assumed to have the same length.\n        If `valid_length` is a Symbol or NDArray, it should have shape (batch_size,).\n        The ith element will be the length of the ith sequence in the batch.\n        The last valid state will be return and the padded outputs will be masked with 0.\n        Note that `valid_length` must be smaller or equal to `length`.\n\n    Returns\n    -------\n    outputs : Symbol\n        the output of the RNN from this unrolling.\n\n    states : list of Symbol\n        The new state of this RNN after this unrolling.\n        The type of this symbol is same as the output of `begin_state`.\n\n    Examples\n    --------\n    >>> seq_len = 3\n    >>> batch_size = 2\n    >>> input_size = 5\n    >>> cell = mx.gluon.rnn.LSTMCell(input_size, prefix='rnn_')\n    >>> cell.initialize(ctx=mx.cpu())\n    >>> rnn_data = mx.nd.normal(loc=0, scale=1, shape=(seq_len, batch_size, input_size))\n    >>> state_shape = (batch_size, input_size)\n    >>> states = [mx.nd.normal(loc=0, scale=1, shape=state_shape) for i in range(2)]\n    >>> valid_length = mx.nd.array([2, 3])\n    >>> output, states = mx.gluon.contrib.rnn.rnn_cell.dynamic_unroll(cell, rnn_data, states,\n                                                                      valid_length=valid_length,\n                                                                      layout='TNC')\n    >>> print(output)\n    [[[ 0.00767238  0.00023103  0.03973929 -0.00925503 -0.05660512]\n      [ 0.00881535  0.05428379 -0.02493718 -0.01834097  0.02189514]]\n     [[-0.00676967  0.01447039  0.01287002 -0.00574152 -0.05734247]\n      [ 0.01568508  0.02650866 -0.04270559 -0.04328435  0.00904011]]\n     [[ 0.          0.          0.          0.          0.        ]\n      [ 0.01055336  0.02734251 -0.03153727 -0.03742751 -0.01378113]]]\n     <NDArray 3x2x5 @cpu(0)>\n    \"\"\"\n\n    # Merge is always True, so we don't need length.\n    inputs, axis, F, _ = _format_sequence(0, inputs, layout, True)\n    if axis != 0:\n        axes = list(range(len(layout)))\n        tmp = axes[0]\n        axes[0] = axes[axis]\n        axes[axis] = tmp\n        inputs = F.transpose(inputs, axes=axes)\n    states = begin_state\n\n    if drop_inputs:\n        inputs = F.Dropout(inputs, p=drop_inputs, axes=(axis,))\n\n    if valid_length is None:\n        def loop_body(inputs, states):\n            return cell(inputs, states)\n    else:\n        zeros = []\n        for s in states:\n            zeros.append(F.zeros_like(s))\n        states = list(_as_list(states))\n        states.append(F.zeros((1)))\n        def loop_body(inputs, states):\n            cell_states = states[:-1]\n            iter_no = states[-1]\n            out, new_states = cell(inputs, cell_states)\n            for i, state in enumerate(cell_states):\n                new_states[i] = F.where(F.broadcast_greater(valid_length, iter_no),\n                                        new_states[i], state)\n            new_states.append(iter_no + 1)\n            return out, new_states\n\n    outputs, states = F.contrib.foreach(loop_body, inputs, states)\n    if drop_outputs:\n        outputs = F.Dropout(outputs, p=drop_outputs, axes=(axis,))\n    if valid_length is not None:\n        if axis != 0:\n            outputs = F.transpose(outputs, axes)\n        outputs = F.SequenceMask(outputs, sequence_length=valid_length,\n                                 use_sequence_length=True, axis=axis)\n        # the last state is the iteration number. We don't need it.\n        return outputs, states[:-1]\n    else:\n        if axis != 0:\n            outputs = F.transpose(outputs, axes)\n        return outputs, states",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 18
          },
          "text": "dynamic_unroll"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 18
          },
          "end": {
            "row": 1,
            "column": 51
          },
          "text": "(cell, inputs, begin_state, drop_inputs=0, drop_outputs=0,\n                   layout='TNC', valid_length=None)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 18
              },
              "end": {
                "row": 0,
                "column": 19
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 19
              },
              "end": {
                "row": 0,
                "column": 23
              },
              "text": "cell"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 23
              },
              "end": {
                "row": 0,
                "column": 24
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 25
              },
              "end": {
                "row": 0,
                "column": 31
              },
              "text": "inputs"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 31
              },
              "end": {
                "row": 0,
                "column": 32
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 33
              },
              "end": {
                "row": 0,
                "column": 44
              },
              "text": "begin_state"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 44
              },
              "end": {
                "row": 0,
                "column": 45
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 0,
                "column": 46
              },
              "end": {
                "row": 0,
                "column": 59
              },
              "text": "drop_inputs=0",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 46
                  },
                  "end": {
                    "row": 0,
                    "column": 57
                  },
                  "text": "drop_inputs"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 0,
                    "column": 57
                  },
                  "end": {
                    "row": 0,
                    "column": 58
                  },
                  "text": "="
                },
                {
                  "type": "integer",
                  "start": {
                    "row": 0,
                    "column": 58
                  },
                  "end": {
                    "row": 0,
                    "column": 59
                  },
                  "text": "0"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 59
              },
              "end": {
                "row": 0,
                "column": 60
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 0,
                "column": 61
              },
              "end": {
                "row": 0,
                "column": 75
              },
              "text": "drop_outputs=0",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 61
                  },
                  "end": {
                    "row": 0,
                    "column": 73
                  },
                  "text": "drop_outputs"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 0,
                    "column": 73
                  },
                  "end": {
                    "row": 0,
                    "column": 74
                  },
                  "text": "="
                },
                {
                  "type": "integer",
                  "start": {
                    "row": 0,
                    "column": 74
                  },
                  "end": {
                    "row": 0,
                    "column": 75
                  },
                  "text": "0"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 75
              },
              "end": {
                "row": 0,
                "column": 76
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 1,
                "column": 19
              },
              "end": {
                "row": 1,
                "column": 31
              },
              "text": "layout='TNC'",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 1,
                    "column": 19
                  },
                  "end": {
                    "row": 1,
                    "column": 25
                  },
                  "text": "layout"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 1,
                    "column": 25
                  },
                  "end": {
                    "row": 1,
                    "column": 26
                  },
                  "text": "="
                },
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 26
                  },
                  "end": {
                    "row": 1,
                    "column": 31
                  },
                  "text": "'TNC'",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 26
                      },
                      "end": {
                        "row": 1,
                        "column": 27
                      },
                      "text": "'"
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 27
                      },
                      "end": {
                        "row": 1,
                        "column": 30
                      },
                      "text": "TNC"
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 1,
                        "column": 30
                      },
                      "end": {
                        "row": 1,
                        "column": 31
                      },
                      "text": "'"
                    }
                  ]
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 1,
                "column": 31
              },
              "end": {
                "row": 1,
                "column": 32
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 1,
                "column": 33
              },
              "end": {
                "row": 1,
                "column": 50
              },
              "text": "valid_length=None",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 1,
                    "column": 33
                  },
                  "end": {
                    "row": 1,
                    "column": 45
                  },
                  "text": "valid_length"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 1,
                    "column": 45
                  },
                  "end": {
                    "row": 1,
                    "column": 46
                  },
                  "text": "="
                },
                {
                  "type": "none",
                  "start": {
                    "row": 1,
                    "column": 46
                  },
                  "end": {
                    "row": 1,
                    "column": 50
                  },
                  "text": "None"
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 1,
                "column": 50
              },
              "end": {
                "row": 1,
                "column": 51
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 1,
            "column": 51
          },
          "end": {
            "row": 1,
            "column": 52
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 2,
            "column": 4
          },
          "end": {
            "row": 111,
            "column": 30
          },
          "text": "\"\"\"Unrolls an RNN cell across time steps.\n\n    Currently, 'TNC' is a preferred layout. unroll on the input of this layout\n    runs much faster.\n\n    Parameters\n    ----------\n    cell : an object whose base class is RNNCell.\n        The RNN cell to run on the input sequence.\n    inputs : Symbol\n        It should have shape (batch_size, length, ...) if `layout` is 'NTC',\n        or (length, batch_size, ...) if `layout` is 'TNC'.\n    begin_state : nested list of Symbol\n        The initial states of the RNN sequence.\n    drop_inputs : float, default 0.\n        The dropout rate for inputs. Won't apply dropout if it equals 0.\n    drop_outputs : float, default 0.\n        The dropout rate for outputs. Won't apply dropout if it equals 0.\n    layout : str, optional\n        `layout` of input symbol. Only used if inputs\n        is a single Symbol.\n    valid_length : Symbol, NDArray or None\n        `valid_length` specifies the length of the sequences in the batch without padding.\n        This option is especially useful for building sequence-to-sequence models where\n        the input and output sequences would potentially be padded.\n        If `valid_length` is None, all sequences are assumed to have the same length.\n        If `valid_length` is a Symbol or NDArray, it should have shape (batch_size,).\n        The ith element will be the length of the ith sequence in the batch.\n        The last valid state will be return and the padded outputs will be masked with 0.\n        Note that `valid_length` must be smaller or equal to `length`.\n\n    Returns\n    -------\n    outputs : Symbol\n        the output of the RNN from this unrolling.\n\n    states : list of Symbol\n        The new state of this RNN after this unrolling.\n        The type of this symbol is same as the output of `begin_state`.\n\n    Examples\n    --------\n    >>> seq_len = 3\n    >>> batch_size = 2\n    >>> input_size = 5\n    >>> cell = mx.gluon.rnn.LSTMCell(input_size, prefix='rnn_')\n    >>> cell.initialize(ctx=mx.cpu())\n    >>> rnn_data = mx.nd.normal(loc=0, scale=1, shape=(seq_len, batch_size, input_size))\n    >>> state_shape = (batch_size, input_size)\n    >>> states = [mx.nd.normal(loc=0, scale=1, shape=state_shape) for i in range(2)]\n    >>> valid_length = mx.nd.array([2, 3])\n    >>> output, states = mx.gluon.contrib.rnn.rnn_cell.dynamic_unroll(cell, rnn_data, states,\n                                                                      valid_length=valid_length,\n                                                                      layout='TNC')\n    >>> print(output)\n    [[[ 0.00767238  0.00023103  0.03973929 -0.00925503 -0.05660512]\n      [ 0.00881535  0.05428379 -0.02493718 -0.01834097  0.02189514]]\n     [[-0.00676967  0.01447039  0.01287002 -0.00574152 -0.05734247]\n      [ 0.01568508  0.02650866 -0.04270559 -0.04328435  0.00904011]]\n     [[ 0.          0.          0.          0.          0.        ]\n      [ 0.01055336  0.02734251 -0.03153727 -0.03742751 -0.01378113]]]\n     <NDArray 3x2x5 @cpu(0)>\n    \"\"\"\n\n    # Merge is always True, so we don't need length.\n    inputs, axis, F, _ = _format_sequence(0, inputs, layout, True)\n    if axis != 0:\n        axes = list(range(len(layout)))\n        tmp = axes[0]\n        axes[0] = axes[axis]\n        axes[axis] = tmp\n        inputs = F.transpose(inputs, axes=axes)\n    states = begin_state\n\n    if drop_inputs:\n        inputs = F.Dropout(inputs, p=drop_inputs, axes=(axis,))\n\n    if valid_length is None:\n        def loop_body(inputs, states):\n            return cell(inputs, states)\n    else:\n        zeros = []\n        for s in states:\n            zeros.append(F.zeros_like(s))\n        states = list(_as_list(states))\n        states.append(F.zeros((1)))\n        def loop_body(inputs, states):\n            cell_states = states[:-1]\n            iter_no = states[-1]\n            out, new_states = cell(inputs, cell_states)\n            for i, state in enumerate(cell_states):\n                new_states[i] = F.where(F.broadcast_greater(valid_length, iter_no),\n                                        new_states[i], state)\n            new_states.append(iter_no + 1)\n            return out, new_states\n\n    outputs, states = F.contrib.foreach(loop_body, inputs, states)\n    if drop_outputs:\n        outputs = F.Dropout(outputs, p=drop_outputs, axes=(axis,))\n    if valid_length is not None:\n        if axis != 0:\n            outputs = F.transpose(outputs, axes)\n        outputs = F.SequenceMask(outputs, sequence_length=valid_length,\n                                 use_sequence_length=True, axis=axis)\n        # the last state is the iteration number. We don't need it.\n        return outputs, states[:-1]\n    else:\n        if axis != 0:\n            outputs = F.transpose(outputs, axes)\n        return outputs, states",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 2,
                "column": 4
              },
              "end": {
                "row": 64,
                "column": 7
              },
              "text": "\"\"\"Unrolls an RNN cell across time steps.\n\n    Currently, 'TNC' is a preferred layout. unroll on the input of this layout\n    runs much faster.\n\n    Parameters\n    ----------\n    cell : an object whose base class is RNNCell.\n        The RNN cell to run on the input sequence.\n    inputs : Symbol\n        It should have shape (batch_size, length, ...) if `layout` is 'NTC',\n        or (length, batch_size, ...) if `layout` is 'TNC'.\n    begin_state : nested list of Symbol\n        The initial states of the RNN sequence.\n    drop_inputs : float, default 0.\n        The dropout rate for inputs. Won't apply dropout if it equals 0.\n    drop_outputs : float, default 0.\n        The dropout rate for outputs. Won't apply dropout if it equals 0.\n    layout : str, optional\n        `layout` of input symbol. Only used if inputs\n        is a single Symbol.\n    valid_length : Symbol, NDArray or None\n        `valid_length` specifies the length of the sequences in the batch without padding.\n        This option is especially useful for building sequence-to-sequence models where\n        the input and output sequences would potentially be padded.\n        If `valid_length` is None, all sequences are assumed to have the same length.\n        If `valid_length` is a Symbol or NDArray, it should have shape (batch_size,).\n        The ith element will be the length of the ith sequence in the batch.\n        The last valid state will be return and the padded outputs will be masked with 0.\n        Note that `valid_length` must be smaller or equal to `length`.\n\n    Returns\n    -------\n    outputs : Symbol\n        the output of the RNN from this unrolling.\n\n    states : list of Symbol\n        The new state of this RNN after this unrolling.\n        The type of this symbol is same as the output of `begin_state`.\n\n    Examples\n    --------\n    >>> seq_len = 3\n    >>> batch_size = 2\n    >>> input_size = 5\n    >>> cell = mx.gluon.rnn.LSTMCell(input_size, prefix='rnn_')\n    >>> cell.initialize(ctx=mx.cpu())\n    >>> rnn_data = mx.nd.normal(loc=0, scale=1, shape=(seq_len, batch_size, input_size))\n    >>> state_shape = (batch_size, input_size)\n    >>> states = [mx.nd.normal(loc=0, scale=1, shape=state_shape) for i in range(2)]\n    >>> valid_length = mx.nd.array([2, 3])\n    >>> output, states = mx.gluon.contrib.rnn.rnn_cell.dynamic_unroll(cell, rnn_data, states,\n                                                                      valid_length=valid_length,\n                                                                      layout='TNC')\n    >>> print(output)\n    [[[ 0.00767238  0.00023103  0.03973929 -0.00925503 -0.05660512]\n      [ 0.00881535  0.05428379 -0.02493718 -0.01834097  0.02189514]]\n     [[-0.00676967  0.01447039  0.01287002 -0.00574152 -0.05734247]\n      [ 0.01568508  0.02650866 -0.04270559 -0.04328435  0.00904011]]\n     [[ 0.          0.          0.          0.          0.        ]\n      [ 0.01055336  0.02734251 -0.03153727 -0.03742751 -0.01378113]]]\n     <NDArray 3x2x5 @cpu(0)>\n    \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 2,
                    "column": 4
                  },
                  "end": {
                    "row": 64,
                    "column": 7
                  },
                  "text": "\"\"\"Unrolls an RNN cell across time steps.\n\n    Currently, 'TNC' is a preferred layout. unroll on the input of this layout\n    runs much faster.\n\n    Parameters\n    ----------\n    cell : an object whose base class is RNNCell.\n        The RNN cell to run on the input sequence.\n    inputs : Symbol\n        It should have shape (batch_size, length, ...) if `layout` is 'NTC',\n        or (length, batch_size, ...) if `layout` is 'TNC'.\n    begin_state : nested list of Symbol\n        The initial states of the RNN sequence.\n    drop_inputs : float, default 0.\n        The dropout rate for inputs. Won't apply dropout if it equals 0.\n    drop_outputs : float, default 0.\n        The dropout rate for outputs. Won't apply dropout if it equals 0.\n    layout : str, optional\n        `layout` of input symbol. Only used if inputs\n        is a single Symbol.\n    valid_length : Symbol, NDArray or None\n        `valid_length` specifies the length of the sequences in the batch without padding.\n        This option is especially useful for building sequence-to-sequence models where\n        the input and output sequences would potentially be padded.\n        If `valid_length` is None, all sequences are assumed to have the same length.\n        If `valid_length` is a Symbol or NDArray, it should have shape (batch_size,).\n        The ith element will be the length of the ith sequence in the batch.\n        The last valid state will be return and the padded outputs will be masked with 0.\n        Note that `valid_length` must be smaller or equal to `length`.\n\n    Returns\n    -------\n    outputs : Symbol\n        the output of the RNN from this unrolling.\n\n    states : list of Symbol\n        The new state of this RNN after this unrolling.\n        The type of this symbol is same as the output of `begin_state`.\n\n    Examples\n    --------\n    >>> seq_len = 3\n    >>> batch_size = 2\n    >>> input_size = 5\n    >>> cell = mx.gluon.rnn.LSTMCell(input_size, prefix='rnn_')\n    >>> cell.initialize(ctx=mx.cpu())\n    >>> rnn_data = mx.nd.normal(loc=0, scale=1, shape=(seq_len, batch_size, input_size))\n    >>> state_shape = (batch_size, input_size)\n    >>> states = [mx.nd.normal(loc=0, scale=1, shape=state_shape) for i in range(2)]\n    >>> valid_length = mx.nd.array([2, 3])\n    >>> output, states = mx.gluon.contrib.rnn.rnn_cell.dynamic_unroll(cell, rnn_data, states,\n                                                                      valid_length=valid_length,\n                                                                      layout='TNC')\n    >>> print(output)\n    [[[ 0.00767238  0.00023103  0.03973929 -0.00925503 -0.05660512]\n      [ 0.00881535  0.05428379 -0.02493718 -0.01834097  0.02189514]]\n     [[-0.00676967  0.01447039  0.01287002 -0.00574152 -0.05734247]\n      [ 0.01568508  0.02650866 -0.04270559 -0.04328435  0.00904011]]\n     [[ 0.          0.          0.          0.          0.        ]\n      [ 0.01055336  0.02734251 -0.03153727 -0.03742751 -0.01378113]]]\n     <NDArray 3x2x5 @cpu(0)>\n    \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 2,
                        "column": 4
                      },
                      "end": {
                        "row": 2,
                        "column": 7
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 2,
                        "column": 7
                      },
                      "end": {
                        "row": 64,
                        "column": 4
                      },
                      "text": "Unrolls an RNN cell across time steps.\n\n    Currently, 'TNC' is a preferred layout. unroll on the input of this layout\n    runs much faster.\n\n    Parameters\n    ----------\n    cell : an object whose base class is RNNCell.\n        The RNN cell to run on the input sequence.\n    inputs : Symbol\n        It should have shape (batch_size, length, ...) if `layout` is 'NTC',\n        or (length, batch_size, ...) if `layout` is 'TNC'.\n    begin_state : nested list of Symbol\n        The initial states of the RNN sequence.\n    drop_inputs : float, default 0.\n        The dropout rate for inputs. Won't apply dropout if it equals 0.\n    drop_outputs : float, default 0.\n        The dropout rate for outputs. Won't apply dropout if it equals 0.\n    layout : str, optional\n        `layout` of input symbol. Only used if inputs\n        is a single Symbol.\n    valid_length : Symbol, NDArray or None\n        `valid_length` specifies the length of the sequences in the batch without padding.\n        This option is especially useful for building sequence-to-sequence models where\n        the input and output sequences would potentially be padded.\n        If `valid_length` is None, all sequences are assumed to have the same length.\n        If `valid_length` is a Symbol or NDArray, it should have shape (batch_size,).\n        The ith element will be the length of the ith sequence in the batch.\n        The last valid state will be return and the padded outputs will be masked with 0.\n        Note that `valid_length` must be smaller or equal to `length`.\n\n    Returns\n    -------\n    outputs : Symbol\n        the output of the RNN from this unrolling.\n\n    states : list of Symbol\n        The new state of this RNN after this unrolling.\n        The type of this symbol is same as the output of `begin_state`.\n\n    Examples\n    --------\n    >>> seq_len = 3\n    >>> batch_size = 2\n    >>> input_size = 5\n    >>> cell = mx.gluon.rnn.LSTMCell(input_size, prefix='rnn_')\n    >>> cell.initialize(ctx=mx.cpu())\n    >>> rnn_data = mx.nd.normal(loc=0, scale=1, shape=(seq_len, batch_size, input_size))\n    >>> state_shape = (batch_size, input_size)\n    >>> states = [mx.nd.normal(loc=0, scale=1, shape=state_shape) for i in range(2)]\n    >>> valid_length = mx.nd.array([2, 3])\n    >>> output, states = mx.gluon.contrib.rnn.rnn_cell.dynamic_unroll(cell, rnn_data, states,\n                                                                      valid_length=valid_length,\n                                                                      layout='TNC')\n    >>> print(output)\n    [[[ 0.00767238  0.00023103  0.03973929 -0.00925503 -0.05660512]\n      [ 0.00881535  0.05428379 -0.02493718 -0.01834097  0.02189514]]\n     [[-0.00676967  0.01447039  0.01287002 -0.00574152 -0.05734247]\n      [ 0.01568508  0.02650866 -0.04270559 -0.04328435  0.00904011]]\n     [[ 0.          0.          0.          0.          0.        ]\n      [ 0.01055336  0.02734251 -0.03153727 -0.03742751 -0.01378113]]]\n     <NDArray 3x2x5 @cpu(0)>\n    "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 64,
                        "column": 4
                      },
                      "end": {
                        "row": 64,
                        "column": 7
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 66,
                "column": 4
              },
              "end": {
                "row": 66,
                "column": 52
              },
              "text": "# Merge is always True, so we don't need length."
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 67,
                "column": 4
              },
              "end": {
                "row": 67,
                "column": 66
              },
              "text": "inputs, axis, F, _ = _format_sequence(0, inputs, layout, True)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 67,
                    "column": 4
                  },
                  "end": {
                    "row": 67,
                    "column": 66
                  },
                  "text": "inputs, axis, F, _ = _format_sequence(0, inputs, layout, True)",
                  "children": [
                    {
                      "type": "pattern_list",
                      "start": {
                        "row": 67,
                        "column": 4
                      },
                      "end": {
                        "row": 67,
                        "column": 22
                      },
                      "text": "inputs, axis, F, _",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 67,
                            "column": 4
                          },
                          "end": {
                            "row": 67,
                            "column": 10
                          },
                          "text": "inputs"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 67,
                            "column": 10
                          },
                          "end": {
                            "row": 67,
                            "column": 11
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 67,
                            "column": 12
                          },
                          "end": {
                            "row": 67,
                            "column": 16
                          },
                          "text": "axis"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 67,
                            "column": 16
                          },
                          "end": {
                            "row": 67,
                            "column": 17
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 67,
                            "column": 18
                          },
                          "end": {
                            "row": 67,
                            "column": 19
                          },
                          "text": "F"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 67,
                            "column": 19
                          },
                          "end": {
                            "row": 67,
                            "column": 20
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 67,
                            "column": 21
                          },
                          "end": {
                            "row": 67,
                            "column": 22
                          },
                          "text": "_"
                        }
                      ]
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 67,
                        "column": 23
                      },
                      "end": {
                        "row": 67,
                        "column": 24
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 67,
                        "column": 25
                      },
                      "end": {
                        "row": 67,
                        "column": 66
                      },
                      "text": "_format_sequence(0, inputs, layout, True)",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 67,
                            "column": 25
                          },
                          "end": {
                            "row": 67,
                            "column": 41
                          },
                          "text": "_format_sequence"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 67,
                            "column": 41
                          },
                          "end": {
                            "row": 67,
                            "column": 66
                          },
                          "text": "(0, inputs, layout, True)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 67,
                                "column": 41
                              },
                              "end": {
                                "row": 67,
                                "column": 42
                              },
                              "text": "("
                            },
                            {
                              "type": "integer",
                              "start": {
                                "row": 67,
                                "column": 42
                              },
                              "end": {
                                "row": 67,
                                "column": 43
                              },
                              "text": "0"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 67,
                                "column": 43
                              },
                              "end": {
                                "row": 67,
                                "column": 44
                              },
                              "text": ","
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 67,
                                "column": 45
                              },
                              "end": {
                                "row": 67,
                                "column": 51
                              },
                              "text": "inputs"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 67,
                                "column": 51
                              },
                              "end": {
                                "row": 67,
                                "column": 52
                              },
                              "text": ","
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 67,
                                "column": 53
                              },
                              "end": {
                                "row": 67,
                                "column": 59
                              },
                              "text": "layout"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 67,
                                "column": 59
                              },
                              "end": {
                                "row": 67,
                                "column": 60
                              },
                              "text": ","
                            },
                            {
                              "type": "true",
                              "start": {
                                "row": 67,
                                "column": 61
                              },
                              "end": {
                                "row": 67,
                                "column": 65
                              },
                              "text": "True"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 67,
                                "column": 65
                              },
                              "end": {
                                "row": 67,
                                "column": 66
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 68,
                "column": 4
              },
              "end": {
                "row": 73,
                "column": 47
              },
              "text": "if axis != 0:\n        axes = list(range(len(layout)))\n        tmp = axes[0]\n        axes[0] = axes[axis]\n        axes[axis] = tmp\n        inputs = F.transpose(inputs, axes=axes)",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 68,
                    "column": 4
                  },
                  "end": {
                    "row": 68,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "comparison_operator",
                  "start": {
                    "row": 68,
                    "column": 7
                  },
                  "end": {
                    "row": 68,
                    "column": 16
                  },
                  "text": "axis != 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 68,
                        "column": 7
                      },
                      "end": {
                        "row": 68,
                        "column": 11
                      },
                      "text": "axis"
                    },
                    {
                      "type": "!=",
                      "start": {
                        "row": 68,
                        "column": 12
                      },
                      "end": {
                        "row": 68,
                        "column": 14
                      },
                      "text": "!="
                    },
                    {
                      "type": "integer",
                      "start": {
                        "row": 68,
                        "column": 15
                      },
                      "end": {
                        "row": 68,
                        "column": 16
                      },
                      "text": "0"
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 68,
                    "column": 16
                  },
                  "end": {
                    "row": 68,
                    "column": 17
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 69,
                    "column": 8
                  },
                  "end": {
                    "row": 73,
                    "column": 47
                  },
                  "text": "axes = list(range(len(layout)))\n        tmp = axes[0]\n        axes[0] = axes[axis]\n        axes[axis] = tmp\n        inputs = F.transpose(inputs, axes=axes)",
                  "children": [
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 69,
                        "column": 8
                      },
                      "end": {
                        "row": 69,
                        "column": 39
                      },
                      "text": "axes = list(range(len(layout)))",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 69,
                            "column": 8
                          },
                          "end": {
                            "row": 69,
                            "column": 39
                          },
                          "text": "axes = list(range(len(layout)))",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 69,
                                "column": 8
                              },
                              "end": {
                                "row": 69,
                                "column": 12
                              },
                              "text": "axes"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 69,
                                "column": 13
                              },
                              "end": {
                                "row": 69,
                                "column": 14
                              },
                              "text": "="
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 69,
                                "column": 15
                              },
                              "end": {
                                "row": 69,
                                "column": 39
                              },
                              "text": "list(range(len(layout)))",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 69,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 69,
                                    "column": 19
                                  },
                                  "text": "list"
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 69,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 69,
                                    "column": 39
                                  },
                                  "text": "(range(len(layout)))",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 69,
                                        "column": 19
                                      },
                                      "end": {
                                        "row": 69,
                                        "column": 20
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 69,
                                        "column": 20
                                      },
                                      "end": {
                                        "row": 69,
                                        "column": 38
                                      },
                                      "text": "range(len(layout))",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 69,
                                            "column": 20
                                          },
                                          "end": {
                                            "row": 69,
                                            "column": 25
                                          },
                                          "text": "range"
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 69,
                                            "column": 25
                                          },
                                          "end": {
                                            "row": 69,
                                            "column": 38
                                          },
                                          "text": "(len(layout))",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 69,
                                                "column": 25
                                              },
                                              "end": {
                                                "row": 69,
                                                "column": 26
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "call",
                                              "start": {
                                                "row": 69,
                                                "column": 26
                                              },
                                              "end": {
                                                "row": 69,
                                                "column": 37
                                              },
                                              "text": "len(layout)",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 69,
                                                    "column": 26
                                                  },
                                                  "end": {
                                                    "row": 69,
                                                    "column": 29
                                                  },
                                                  "text": "len"
                                                },
                                                {
                                                  "type": "argument_list",
                                                  "start": {
                                                    "row": 69,
                                                    "column": 29
                                                  },
                                                  "end": {
                                                    "row": 69,
                                                    "column": 37
                                                  },
                                                  "text": "(layout)",
                                                  "children": [
                                                    {
                                                      "type": "(",
                                                      "start": {
                                                        "row": 69,
                                                        "column": 29
                                                      },
                                                      "end": {
                                                        "row": 69,
                                                        "column": 30
                                                      },
                                                      "text": "("
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 69,
                                                        "column": 30
                                                      },
                                                      "end": {
                                                        "row": 69,
                                                        "column": 36
                                                      },
                                                      "text": "layout"
                                                    },
                                                    {
                                                      "type": ")",
                                                      "start": {
                                                        "row": 69,
                                                        "column": 36
                                                      },
                                                      "end": {
                                                        "row": 69,
                                                        "column": 37
                                                      },
                                                      "text": ")"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 69,
                                                "column": 37
                                              },
                                              "end": {
                                                "row": 69,
                                                "column": 38
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 69,
                                        "column": 38
                                      },
                                      "end": {
                                        "row": 69,
                                        "column": 39
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 70,
                        "column": 8
                      },
                      "end": {
                        "row": 70,
                        "column": 21
                      },
                      "text": "tmp = axes[0]",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 70,
                            "column": 8
                          },
                          "end": {
                            "row": 70,
                            "column": 21
                          },
                          "text": "tmp = axes[0]",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 70,
                                "column": 8
                              },
                              "end": {
                                "row": 70,
                                "column": 11
                              },
                              "text": "tmp"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 70,
                                "column": 12
                              },
                              "end": {
                                "row": 70,
                                "column": 13
                              },
                              "text": "="
                            },
                            {
                              "type": "subscript",
                              "start": {
                                "row": 70,
                                "column": 14
                              },
                              "end": {
                                "row": 70,
                                "column": 21
                              },
                              "text": "axes[0]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 70,
                                    "column": 14
                                  },
                                  "end": {
                                    "row": 70,
                                    "column": 18
                                  },
                                  "text": "axes"
                                },
                                {
                                  "type": "[",
                                  "start": {
                                    "row": 70,
                                    "column": 18
                                  },
                                  "end": {
                                    "row": 70,
                                    "column": 19
                                  },
                                  "text": "["
                                },
                                {
                                  "type": "integer",
                                  "start": {
                                    "row": 70,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 70,
                                    "column": 20
                                  },
                                  "text": "0"
                                },
                                {
                                  "type": "]",
                                  "start": {
                                    "row": 70,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 70,
                                    "column": 21
                                  },
                                  "text": "]"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 71,
                        "column": 8
                      },
                      "end": {
                        "row": 71,
                        "column": 28
                      },
                      "text": "axes[0] = axes[axis]",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 71,
                            "column": 8
                          },
                          "end": {
                            "row": 71,
                            "column": 28
                          },
                          "text": "axes[0] = axes[axis]",
                          "children": [
                            {
                              "type": "subscript",
                              "start": {
                                "row": 71,
                                "column": 8
                              },
                              "end": {
                                "row": 71,
                                "column": 15
                              },
                              "text": "axes[0]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 71,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 71,
                                    "column": 12
                                  },
                                  "text": "axes"
                                },
                                {
                                  "type": "[",
                                  "start": {
                                    "row": 71,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 71,
                                    "column": 13
                                  },
                                  "text": "["
                                },
                                {
                                  "type": "integer",
                                  "start": {
                                    "row": 71,
                                    "column": 13
                                  },
                                  "end": {
                                    "row": 71,
                                    "column": 14
                                  },
                                  "text": "0"
                                },
                                {
                                  "type": "]",
                                  "start": {
                                    "row": 71,
                                    "column": 14
                                  },
                                  "end": {
                                    "row": 71,
                                    "column": 15
                                  },
                                  "text": "]"
                                }
                              ]
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 71,
                                "column": 16
                              },
                              "end": {
                                "row": 71,
                                "column": 17
                              },
                              "text": "="
                            },
                            {
                              "type": "subscript",
                              "start": {
                                "row": 71,
                                "column": 18
                              },
                              "end": {
                                "row": 71,
                                "column": 28
                              },
                              "text": "axes[axis]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 71,
                                    "column": 18
                                  },
                                  "end": {
                                    "row": 71,
                                    "column": 22
                                  },
                                  "text": "axes"
                                },
                                {
                                  "type": "[",
                                  "start": {
                                    "row": 71,
                                    "column": 22
                                  },
                                  "end": {
                                    "row": 71,
                                    "column": 23
                                  },
                                  "text": "["
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 71,
                                    "column": 23
                                  },
                                  "end": {
                                    "row": 71,
                                    "column": 27
                                  },
                                  "text": "axis"
                                },
                                {
                                  "type": "]",
                                  "start": {
                                    "row": 71,
                                    "column": 27
                                  },
                                  "end": {
                                    "row": 71,
                                    "column": 28
                                  },
                                  "text": "]"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 72,
                        "column": 8
                      },
                      "end": {
                        "row": 72,
                        "column": 24
                      },
                      "text": "axes[axis] = tmp",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 72,
                            "column": 8
                          },
                          "end": {
                            "row": 72,
                            "column": 24
                          },
                          "text": "axes[axis] = tmp",
                          "children": [
                            {
                              "type": "subscript",
                              "start": {
                                "row": 72,
                                "column": 8
                              },
                              "end": {
                                "row": 72,
                                "column": 18
                              },
                              "text": "axes[axis]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 72,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 72,
                                    "column": 12
                                  },
                                  "text": "axes"
                                },
                                {
                                  "type": "[",
                                  "start": {
                                    "row": 72,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 72,
                                    "column": 13
                                  },
                                  "text": "["
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 72,
                                    "column": 13
                                  },
                                  "end": {
                                    "row": 72,
                                    "column": 17
                                  },
                                  "text": "axis"
                                },
                                {
                                  "type": "]",
                                  "start": {
                                    "row": 72,
                                    "column": 17
                                  },
                                  "end": {
                                    "row": 72,
                                    "column": 18
                                  },
                                  "text": "]"
                                }
                              ]
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 72,
                                "column": 19
                              },
                              "end": {
                                "row": 72,
                                "column": 20
                              },
                              "text": "="
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 72,
                                "column": 21
                              },
                              "end": {
                                "row": 72,
                                "column": 24
                              },
                              "text": "tmp"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 73,
                        "column": 8
                      },
                      "end": {
                        "row": 73,
                        "column": 47
                      },
                      "text": "inputs = F.transpose(inputs, axes=axes)",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 73,
                            "column": 8
                          },
                          "end": {
                            "row": 73,
                            "column": 47
                          },
                          "text": "inputs = F.transpose(inputs, axes=axes)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 73,
                                "column": 8
                              },
                              "end": {
                                "row": 73,
                                "column": 14
                              },
                              "text": "inputs"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 73,
                                "column": 15
                              },
                              "end": {
                                "row": 73,
                                "column": 16
                              },
                              "text": "="
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 73,
                                "column": 17
                              },
                              "end": {
                                "row": 73,
                                "column": 47
                              },
                              "text": "F.transpose(inputs, axes=axes)",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 73,
                                    "column": 17
                                  },
                                  "end": {
                                    "row": 73,
                                    "column": 28
                                  },
                                  "text": "F.transpose",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 73,
                                        "column": 17
                                      },
                                      "end": {
                                        "row": 73,
                                        "column": 18
                                      },
                                      "text": "F"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 73,
                                        "column": 18
                                      },
                                      "end": {
                                        "row": 73,
                                        "column": 19
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 73,
                                        "column": 19
                                      },
                                      "end": {
                                        "row": 73,
                                        "column": 28
                                      },
                                      "text": "transpose"
                                    }
                                  ]
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 73,
                                    "column": 28
                                  },
                                  "end": {
                                    "row": 73,
                                    "column": 47
                                  },
                                  "text": "(inputs, axes=axes)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 73,
                                        "column": 28
                                      },
                                      "end": {
                                        "row": 73,
                                        "column": 29
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 73,
                                        "column": 29
                                      },
                                      "end": {
                                        "row": 73,
                                        "column": 35
                                      },
                                      "text": "inputs"
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 73,
                                        "column": 35
                                      },
                                      "end": {
                                        "row": 73,
                                        "column": 36
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "keyword_argument",
                                      "start": {
                                        "row": 73,
                                        "column": 37
                                      },
                                      "end": {
                                        "row": 73,
                                        "column": 46
                                      },
                                      "text": "axes=axes",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 73,
                                            "column": 37
                                          },
                                          "end": {
                                            "row": 73,
                                            "column": 41
                                          },
                                          "text": "axes"
                                        },
                                        {
                                          "type": "=",
                                          "start": {
                                            "row": 73,
                                            "column": 41
                                          },
                                          "end": {
                                            "row": 73,
                                            "column": 42
                                          },
                                          "text": "="
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 73,
                                            "column": 42
                                          },
                                          "end": {
                                            "row": 73,
                                            "column": 46
                                          },
                                          "text": "axes"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 73,
                                        "column": 46
                                      },
                                      "end": {
                                        "row": 73,
                                        "column": 47
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 74,
                "column": 4
              },
              "end": {
                "row": 74,
                "column": 24
              },
              "text": "states = begin_state",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 74,
                    "column": 4
                  },
                  "end": {
                    "row": 74,
                    "column": 24
                  },
                  "text": "states = begin_state",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 74,
                        "column": 4
                      },
                      "end": {
                        "row": 74,
                        "column": 10
                      },
                      "text": "states"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 74,
                        "column": 11
                      },
                      "end": {
                        "row": 74,
                        "column": 12
                      },
                      "text": "="
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 74,
                        "column": 13
                      },
                      "end": {
                        "row": 74,
                        "column": 24
                      },
                      "text": "begin_state"
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 76,
                "column": 4
              },
              "end": {
                "row": 77,
                "column": 63
              },
              "text": "if drop_inputs:\n        inputs = F.Dropout(inputs, p=drop_inputs, axes=(axis,))",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 76,
                    "column": 4
                  },
                  "end": {
                    "row": 76,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 76,
                    "column": 7
                  },
                  "end": {
                    "row": 76,
                    "column": 18
                  },
                  "text": "drop_inputs"
                },
                {
                  "type": ":",
                  "start": {
                    "row": 76,
                    "column": 18
                  },
                  "end": {
                    "row": 76,
                    "column": 19
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 77,
                    "column": 8
                  },
                  "end": {
                    "row": 77,
                    "column": 63
                  },
                  "text": "inputs = F.Dropout(inputs, p=drop_inputs, axes=(axis,))",
                  "children": [
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 77,
                        "column": 8
                      },
                      "end": {
                        "row": 77,
                        "column": 63
                      },
                      "text": "inputs = F.Dropout(inputs, p=drop_inputs, axes=(axis,))",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 77,
                            "column": 8
                          },
                          "end": {
                            "row": 77,
                            "column": 63
                          },
                          "text": "inputs = F.Dropout(inputs, p=drop_inputs, axes=(axis,))",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 77,
                                "column": 8
                              },
                              "end": {
                                "row": 77,
                                "column": 14
                              },
                              "text": "inputs"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 77,
                                "column": 15
                              },
                              "end": {
                                "row": 77,
                                "column": 16
                              },
                              "text": "="
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 77,
                                "column": 17
                              },
                              "end": {
                                "row": 77,
                                "column": 63
                              },
                              "text": "F.Dropout(inputs, p=drop_inputs, axes=(axis,))",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 77,
                                    "column": 17
                                  },
                                  "end": {
                                    "row": 77,
                                    "column": 26
                                  },
                                  "text": "F.Dropout",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 77,
                                        "column": 17
                                      },
                                      "end": {
                                        "row": 77,
                                        "column": 18
                                      },
                                      "text": "F"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 77,
                                        "column": 18
                                      },
                                      "end": {
                                        "row": 77,
                                        "column": 19
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 77,
                                        "column": 19
                                      },
                                      "end": {
                                        "row": 77,
                                        "column": 26
                                      },
                                      "text": "Dropout"
                                    }
                                  ]
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 77,
                                    "column": 26
                                  },
                                  "end": {
                                    "row": 77,
                                    "column": 63
                                  },
                                  "text": "(inputs, p=drop_inputs, axes=(axis,))",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 77,
                                        "column": 26
                                      },
                                      "end": {
                                        "row": 77,
                                        "column": 27
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 77,
                                        "column": 27
                                      },
                                      "end": {
                                        "row": 77,
                                        "column": 33
                                      },
                                      "text": "inputs"
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 77,
                                        "column": 33
                                      },
                                      "end": {
                                        "row": 77,
                                        "column": 34
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "keyword_argument",
                                      "start": {
                                        "row": 77,
                                        "column": 35
                                      },
                                      "end": {
                                        "row": 77,
                                        "column": 48
                                      },
                                      "text": "p=drop_inputs",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 77,
                                            "column": 35
                                          },
                                          "end": {
                                            "row": 77,
                                            "column": 36
                                          },
                                          "text": "p"
                                        },
                                        {
                                          "type": "=",
                                          "start": {
                                            "row": 77,
                                            "column": 36
                                          },
                                          "end": {
                                            "row": 77,
                                            "column": 37
                                          },
                                          "text": "="
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 77,
                                            "column": 37
                                          },
                                          "end": {
                                            "row": 77,
                                            "column": 48
                                          },
                                          "text": "drop_inputs"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 77,
                                        "column": 48
                                      },
                                      "end": {
                                        "row": 77,
                                        "column": 49
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "keyword_argument",
                                      "start": {
                                        "row": 77,
                                        "column": 50
                                      },
                                      "end": {
                                        "row": 77,
                                        "column": 62
                                      },
                                      "text": "axes=(axis,)",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 77,
                                            "column": 50
                                          },
                                          "end": {
                                            "row": 77,
                                            "column": 54
                                          },
                                          "text": "axes"
                                        },
                                        {
                                          "type": "=",
                                          "start": {
                                            "row": 77,
                                            "column": 54
                                          },
                                          "end": {
                                            "row": 77,
                                            "column": 55
                                          },
                                          "text": "="
                                        },
                                        {
                                          "type": "tuple",
                                          "start": {
                                            "row": 77,
                                            "column": 55
                                          },
                                          "end": {
                                            "row": 77,
                                            "column": 62
                                          },
                                          "text": "(axis,)",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 77,
                                                "column": 55
                                              },
                                              "end": {
                                                "row": 77,
                                                "column": 56
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 77,
                                                "column": 56
                                              },
                                              "end": {
                                                "row": 77,
                                                "column": 60
                                              },
                                              "text": "axis"
                                            },
                                            {
                                              "type": ",",
                                              "start": {
                                                "row": 77,
                                                "column": 60
                                              },
                                              "end": {
                                                "row": 77,
                                                "column": 61
                                              },
                                              "text": ","
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 77,
                                                "column": 61
                                              },
                                              "end": {
                                                "row": 77,
                                                "column": 62
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 77,
                                        "column": 62
                                      },
                                      "end": {
                                        "row": 77,
                                        "column": 63
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 79,
                "column": 4
              },
              "end": {
                "row": 96,
                "column": 34
              },
              "text": "if valid_length is None:\n        def loop_body(inputs, states):\n            return cell(inputs, states)\n    else:\n        zeros = []\n        for s in states:\n            zeros.append(F.zeros_like(s))\n        states = list(_as_list(states))\n        states.append(F.zeros((1)))\n        def loop_body(inputs, states):\n            cell_states = states[:-1]\n            iter_no = states[-1]\n            out, new_states = cell(inputs, cell_states)\n            for i, state in enumerate(cell_states):\n                new_states[i] = F.where(F.broadcast_greater(valid_length, iter_no),\n                                        new_states[i], state)\n            new_states.append(iter_no + 1)\n            return out, new_states",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 79,
                    "column": 4
                  },
                  "end": {
                    "row": 79,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "comparison_operator",
                  "start": {
                    "row": 79,
                    "column": 7
                  },
                  "end": {
                    "row": 79,
                    "column": 27
                  },
                  "text": "valid_length is None",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 79,
                        "column": 7
                      },
                      "end": {
                        "row": 79,
                        "column": 19
                      },
                      "text": "valid_length"
                    },
                    {
                      "type": "is",
                      "start": {
                        "row": 79,
                        "column": 20
                      },
                      "end": {
                        "row": 79,
                        "column": 22
                      },
                      "text": "is"
                    },
                    {
                      "type": "none",
                      "start": {
                        "row": 79,
                        "column": 23
                      },
                      "end": {
                        "row": 79,
                        "column": 27
                      },
                      "text": "None"
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 79,
                    "column": 27
                  },
                  "end": {
                    "row": 79,
                    "column": 28
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 80,
                    "column": 8
                  },
                  "end": {
                    "row": 81,
                    "column": 39
                  },
                  "text": "def loop_body(inputs, states):\n            return cell(inputs, states)",
                  "children": [
                    {
                      "type": "function_definition",
                      "start": {
                        "row": 80,
                        "column": 8
                      },
                      "end": {
                        "row": 81,
                        "column": 39
                      },
                      "text": "def loop_body(inputs, states):\n            return cell(inputs, states)",
                      "children": [
                        {
                          "type": "def",
                          "start": {
                            "row": 80,
                            "column": 8
                          },
                          "end": {
                            "row": 80,
                            "column": 11
                          },
                          "text": "def"
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 80,
                            "column": 12
                          },
                          "end": {
                            "row": 80,
                            "column": 21
                          },
                          "text": "loop_body"
                        },
                        {
                          "type": "parameters",
                          "start": {
                            "row": 80,
                            "column": 21
                          },
                          "end": {
                            "row": 80,
                            "column": 37
                          },
                          "text": "(inputs, states)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 80,
                                "column": 21
                              },
                              "end": {
                                "row": 80,
                                "column": 22
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 80,
                                "column": 22
                              },
                              "end": {
                                "row": 80,
                                "column": 28
                              },
                              "text": "inputs"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 80,
                                "column": 28
                              },
                              "end": {
                                "row": 80,
                                "column": 29
                              },
                              "text": ","
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 80,
                                "column": 30
                              },
                              "end": {
                                "row": 80,
                                "column": 36
                              },
                              "text": "states"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 80,
                                "column": 36
                              },
                              "end": {
                                "row": 80,
                                "column": 37
                              },
                              "text": ")"
                            }
                          ]
                        },
                        {
                          "type": ":",
                          "start": {
                            "row": 80,
                            "column": 37
                          },
                          "end": {
                            "row": 80,
                            "column": 38
                          },
                          "text": ":"
                        },
                        {
                          "type": "block",
                          "start": {
                            "row": 81,
                            "column": 12
                          },
                          "end": {
                            "row": 81,
                            "column": 39
                          },
                          "text": "return cell(inputs, states)",
                          "children": [
                            {
                              "type": "return_statement",
                              "start": {
                                "row": 81,
                                "column": 12
                              },
                              "end": {
                                "row": 81,
                                "column": 39
                              },
                              "text": "return cell(inputs, states)",
                              "children": [
                                {
                                  "type": "return",
                                  "start": {
                                    "row": 81,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 81,
                                    "column": 18
                                  },
                                  "text": "return"
                                },
                                {
                                  "type": "call",
                                  "start": {
                                    "row": 81,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 81,
                                    "column": 39
                                  },
                                  "text": "cell(inputs, states)",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 81,
                                        "column": 19
                                      },
                                      "end": {
                                        "row": 81,
                                        "column": 23
                                      },
                                      "text": "cell"
                                    },
                                    {
                                      "type": "argument_list",
                                      "start": {
                                        "row": 81,
                                        "column": 23
                                      },
                                      "end": {
                                        "row": 81,
                                        "column": 39
                                      },
                                      "text": "(inputs, states)",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 81,
                                            "column": 23
                                          },
                                          "end": {
                                            "row": 81,
                                            "column": 24
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 81,
                                            "column": 24
                                          },
                                          "end": {
                                            "row": 81,
                                            "column": 30
                                          },
                                          "text": "inputs"
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 81,
                                            "column": 30
                                          },
                                          "end": {
                                            "row": 81,
                                            "column": 31
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 81,
                                            "column": 32
                                          },
                                          "end": {
                                            "row": 81,
                                            "column": 38
                                          },
                                          "text": "states"
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 81,
                                            "column": 38
                                          },
                                          "end": {
                                            "row": 81,
                                            "column": 39
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "else_clause",
                  "start": {
                    "row": 82,
                    "column": 4
                  },
                  "end": {
                    "row": 96,
                    "column": 34
                  },
                  "text": "else:\n        zeros = []\n        for s in states:\n            zeros.append(F.zeros_like(s))\n        states = list(_as_list(states))\n        states.append(F.zeros((1)))\n        def loop_body(inputs, states):\n            cell_states = states[:-1]\n            iter_no = states[-1]\n            out, new_states = cell(inputs, cell_states)\n            for i, state in enumerate(cell_states):\n                new_states[i] = F.where(F.broadcast_greater(valid_length, iter_no),\n                                        new_states[i], state)\n            new_states.append(iter_no + 1)\n            return out, new_states",
                  "children": [
                    {
                      "type": "else",
                      "start": {
                        "row": 82,
                        "column": 4
                      },
                      "end": {
                        "row": 82,
                        "column": 8
                      },
                      "text": "else"
                    },
                    {
                      "type": ":",
                      "start": {
                        "row": 82,
                        "column": 8
                      },
                      "end": {
                        "row": 82,
                        "column": 9
                      },
                      "text": ":"
                    },
                    {
                      "type": "block",
                      "start": {
                        "row": 83,
                        "column": 8
                      },
                      "end": {
                        "row": 96,
                        "column": 34
                      },
                      "text": "zeros = []\n        for s in states:\n            zeros.append(F.zeros_like(s))\n        states = list(_as_list(states))\n        states.append(F.zeros((1)))\n        def loop_body(inputs, states):\n            cell_states = states[:-1]\n            iter_no = states[-1]\n            out, new_states = cell(inputs, cell_states)\n            for i, state in enumerate(cell_states):\n                new_states[i] = F.where(F.broadcast_greater(valid_length, iter_no),\n                                        new_states[i], state)\n            new_states.append(iter_no + 1)\n            return out, new_states",
                      "children": [
                        {
                          "type": "expression_statement",
                          "start": {
                            "row": 83,
                            "column": 8
                          },
                          "end": {
                            "row": 83,
                            "column": 18
                          },
                          "text": "zeros = []",
                          "children": [
                            {
                              "type": "assignment",
                              "start": {
                                "row": 83,
                                "column": 8
                              },
                              "end": {
                                "row": 83,
                                "column": 18
                              },
                              "text": "zeros = []",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 83,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 83,
                                    "column": 13
                                  },
                                  "text": "zeros"
                                },
                                {
                                  "type": "=",
                                  "start": {
                                    "row": 83,
                                    "column": 14
                                  },
                                  "end": {
                                    "row": 83,
                                    "column": 15
                                  },
                                  "text": "="
                                },
                                {
                                  "type": "list",
                                  "start": {
                                    "row": 83,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 83,
                                    "column": 18
                                  },
                                  "text": "[]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start": {
                                        "row": 83,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 83,
                                        "column": 17
                                      },
                                      "text": "["
                                    },
                                    {
                                      "type": "]",
                                      "start": {
                                        "row": 83,
                                        "column": 17
                                      },
                                      "end": {
                                        "row": 83,
                                        "column": 18
                                      },
                                      "text": "]"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "for_statement",
                          "start": {
                            "row": 84,
                            "column": 8
                          },
                          "end": {
                            "row": 85,
                            "column": 41
                          },
                          "text": "for s in states:\n            zeros.append(F.zeros_like(s))",
                          "children": [
                            {
                              "type": "for",
                              "start": {
                                "row": 84,
                                "column": 8
                              },
                              "end": {
                                "row": 84,
                                "column": 11
                              },
                              "text": "for"
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 84,
                                "column": 12
                              },
                              "end": {
                                "row": 84,
                                "column": 13
                              },
                              "text": "s"
                            },
                            {
                              "type": "in",
                              "start": {
                                "row": 84,
                                "column": 14
                              },
                              "end": {
                                "row": 84,
                                "column": 16
                              },
                              "text": "in"
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 84,
                                "column": 17
                              },
                              "end": {
                                "row": 84,
                                "column": 23
                              },
                              "text": "states"
                            },
                            {
                              "type": ":",
                              "start": {
                                "row": 84,
                                "column": 23
                              },
                              "end": {
                                "row": 84,
                                "column": 24
                              },
                              "text": ":"
                            },
                            {
                              "type": "block",
                              "start": {
                                "row": 85,
                                "column": 12
                              },
                              "end": {
                                "row": 85,
                                "column": 41
                              },
                              "text": "zeros.append(F.zeros_like(s))",
                              "children": [
                                {
                                  "type": "expression_statement",
                                  "start": {
                                    "row": 85,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 85,
                                    "column": 41
                                  },
                                  "text": "zeros.append(F.zeros_like(s))",
                                  "children": [
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 85,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 85,
                                        "column": 41
                                      },
                                      "text": "zeros.append(F.zeros_like(s))",
                                      "children": [
                                        {
                                          "type": "attribute",
                                          "start": {
                                            "row": 85,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 85,
                                            "column": 24
                                          },
                                          "text": "zeros.append",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 85,
                                                "column": 12
                                              },
                                              "end": {
                                                "row": 85,
                                                "column": 17
                                              },
                                              "text": "zeros"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 85,
                                                "column": 17
                                              },
                                              "end": {
                                                "row": 85,
                                                "column": 18
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 85,
                                                "column": 18
                                              },
                                              "end": {
                                                "row": 85,
                                                "column": 24
                                              },
                                              "text": "append"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 85,
                                            "column": 24
                                          },
                                          "end": {
                                            "row": 85,
                                            "column": 41
                                          },
                                          "text": "(F.zeros_like(s))",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 85,
                                                "column": 24
                                              },
                                              "end": {
                                                "row": 85,
                                                "column": 25
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "call",
                                              "start": {
                                                "row": 85,
                                                "column": 25
                                              },
                                              "end": {
                                                "row": 85,
                                                "column": 40
                                              },
                                              "text": "F.zeros_like(s)",
                                              "children": [
                                                {
                                                  "type": "attribute",
                                                  "start": {
                                                    "row": 85,
                                                    "column": 25
                                                  },
                                                  "end": {
                                                    "row": 85,
                                                    "column": 37
                                                  },
                                                  "text": "F.zeros_like",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 85,
                                                        "column": 25
                                                      },
                                                      "end": {
                                                        "row": 85,
                                                        "column": 26
                                                      },
                                                      "text": "F"
                                                    },
                                                    {
                                                      "type": ".",
                                                      "start": {
                                                        "row": 85,
                                                        "column": 26
                                                      },
                                                      "end": {
                                                        "row": 85,
                                                        "column": 27
                                                      },
                                                      "text": "."
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 85,
                                                        "column": 27
                                                      },
                                                      "end": {
                                                        "row": 85,
                                                        "column": 37
                                                      },
                                                      "text": "zeros_like"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "argument_list",
                                                  "start": {
                                                    "row": 85,
                                                    "column": 37
                                                  },
                                                  "end": {
                                                    "row": 85,
                                                    "column": 40
                                                  },
                                                  "text": "(s)",
                                                  "children": [
                                                    {
                                                      "type": "(",
                                                      "start": {
                                                        "row": 85,
                                                        "column": 37
                                                      },
                                                      "end": {
                                                        "row": 85,
                                                        "column": 38
                                                      },
                                                      "text": "("
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 85,
                                                        "column": 38
                                                      },
                                                      "end": {
                                                        "row": 85,
                                                        "column": 39
                                                      },
                                                      "text": "s"
                                                    },
                                                    {
                                                      "type": ")",
                                                      "start": {
                                                        "row": 85,
                                                        "column": 39
                                                      },
                                                      "end": {
                                                        "row": 85,
                                                        "column": 40
                                                      },
                                                      "text": ")"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 85,
                                                "column": 40
                                              },
                                              "end": {
                                                "row": 85,
                                                "column": 41
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "expression_statement",
                          "start": {
                            "row": 86,
                            "column": 8
                          },
                          "end": {
                            "row": 86,
                            "column": 39
                          },
                          "text": "states = list(_as_list(states))",
                          "children": [
                            {
                              "type": "assignment",
                              "start": {
                                "row": 86,
                                "column": 8
                              },
                              "end": {
                                "row": 86,
                                "column": 39
                              },
                              "text": "states = list(_as_list(states))",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 86,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 86,
                                    "column": 14
                                  },
                                  "text": "states"
                                },
                                {
                                  "type": "=",
                                  "start": {
                                    "row": 86,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 86,
                                    "column": 16
                                  },
                                  "text": "="
                                },
                                {
                                  "type": "call",
                                  "start": {
                                    "row": 86,
                                    "column": 17
                                  },
                                  "end": {
                                    "row": 86,
                                    "column": 39
                                  },
                                  "text": "list(_as_list(states))",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 86,
                                        "column": 17
                                      },
                                      "end": {
                                        "row": 86,
                                        "column": 21
                                      },
                                      "text": "list"
                                    },
                                    {
                                      "type": "argument_list",
                                      "start": {
                                        "row": 86,
                                        "column": 21
                                      },
                                      "end": {
                                        "row": 86,
                                        "column": 39
                                      },
                                      "text": "(_as_list(states))",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 86,
                                            "column": 21
                                          },
                                          "end": {
                                            "row": 86,
                                            "column": 22
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "call",
                                          "start": {
                                            "row": 86,
                                            "column": 22
                                          },
                                          "end": {
                                            "row": 86,
                                            "column": 38
                                          },
                                          "text": "_as_list(states)",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 86,
                                                "column": 22
                                              },
                                              "end": {
                                                "row": 86,
                                                "column": 30
                                              },
                                              "text": "_as_list"
                                            },
                                            {
                                              "type": "argument_list",
                                              "start": {
                                                "row": 86,
                                                "column": 30
                                              },
                                              "end": {
                                                "row": 86,
                                                "column": 38
                                              },
                                              "text": "(states)",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 86,
                                                    "column": 30
                                                  },
                                                  "end": {
                                                    "row": 86,
                                                    "column": 31
                                                  },
                                                  "text": "("
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 86,
                                                    "column": 31
                                                  },
                                                  "end": {
                                                    "row": 86,
                                                    "column": 37
                                                  },
                                                  "text": "states"
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 86,
                                                    "column": 37
                                                  },
                                                  "end": {
                                                    "row": 86,
                                                    "column": 38
                                                  },
                                                  "text": ")"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 86,
                                            "column": 38
                                          },
                                          "end": {
                                            "row": 86,
                                            "column": 39
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "expression_statement",
                          "start": {
                            "row": 87,
                            "column": 8
                          },
                          "end": {
                            "row": 87,
                            "column": 35
                          },
                          "text": "states.append(F.zeros((1)))",
                          "children": [
                            {
                              "type": "call",
                              "start": {
                                "row": 87,
                                "column": 8
                              },
                              "end": {
                                "row": 87,
                                "column": 35
                              },
                              "text": "states.append(F.zeros((1)))",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 87,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 87,
                                    "column": 21
                                  },
                                  "text": "states.append",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 87,
                                        "column": 8
                                      },
                                      "end": {
                                        "row": 87,
                                        "column": 14
                                      },
                                      "text": "states"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 87,
                                        "column": 14
                                      },
                                      "end": {
                                        "row": 87,
                                        "column": 15
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 87,
                                        "column": 15
                                      },
                                      "end": {
                                        "row": 87,
                                        "column": 21
                                      },
                                      "text": "append"
                                    }
                                  ]
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 87,
                                    "column": 21
                                  },
                                  "end": {
                                    "row": 87,
                                    "column": 35
                                  },
                                  "text": "(F.zeros((1)))",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 87,
                                        "column": 21
                                      },
                                      "end": {
                                        "row": 87,
                                        "column": 22
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 87,
                                        "column": 22
                                      },
                                      "end": {
                                        "row": 87,
                                        "column": 34
                                      },
                                      "text": "F.zeros((1))",
                                      "children": [
                                        {
                                          "type": "attribute",
                                          "start": {
                                            "row": 87,
                                            "column": 22
                                          },
                                          "end": {
                                            "row": 87,
                                            "column": 29
                                          },
                                          "text": "F.zeros",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 87,
                                                "column": 22
                                              },
                                              "end": {
                                                "row": 87,
                                                "column": 23
                                              },
                                              "text": "F"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 87,
                                                "column": 23
                                              },
                                              "end": {
                                                "row": 87,
                                                "column": 24
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 87,
                                                "column": 24
                                              },
                                              "end": {
                                                "row": 87,
                                                "column": 29
                                              },
                                              "text": "zeros"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 87,
                                            "column": 29
                                          },
                                          "end": {
                                            "row": 87,
                                            "column": 34
                                          },
                                          "text": "((1))",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 87,
                                                "column": 29
                                              },
                                              "end": {
                                                "row": 87,
                                                "column": 30
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "parenthesized_expression",
                                              "start": {
                                                "row": 87,
                                                "column": 30
                                              },
                                              "end": {
                                                "row": 87,
                                                "column": 33
                                              },
                                              "text": "(1)",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 87,
                                                    "column": 30
                                                  },
                                                  "end": {
                                                    "row": 87,
                                                    "column": 31
                                                  },
                                                  "text": "("
                                                },
                                                {
                                                  "type": "integer",
                                                  "start": {
                                                    "row": 87,
                                                    "column": 31
                                                  },
                                                  "end": {
                                                    "row": 87,
                                                    "column": 32
                                                  },
                                                  "text": "1"
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 87,
                                                    "column": 32
                                                  },
                                                  "end": {
                                                    "row": 87,
                                                    "column": 33
                                                  },
                                                  "text": ")"
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 87,
                                                "column": 33
                                              },
                                              "end": {
                                                "row": 87,
                                                "column": 34
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 87,
                                        "column": 34
                                      },
                                      "end": {
                                        "row": 87,
                                        "column": 35
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "function_definition",
                          "start": {
                            "row": 88,
                            "column": 8
                          },
                          "end": {
                            "row": 96,
                            "column": 34
                          },
                          "text": "def loop_body(inputs, states):\n            cell_states = states[:-1]\n            iter_no = states[-1]\n            out, new_states = cell(inputs, cell_states)\n            for i, state in enumerate(cell_states):\n                new_states[i] = F.where(F.broadcast_greater(valid_length, iter_no),\n                                        new_states[i], state)\n            new_states.append(iter_no + 1)\n            return out, new_states",
                          "children": [
                            {
                              "type": "def",
                              "start": {
                                "row": 88,
                                "column": 8
                              },
                              "end": {
                                "row": 88,
                                "column": 11
                              },
                              "text": "def"
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 88,
                                "column": 12
                              },
                              "end": {
                                "row": 88,
                                "column": 21
                              },
                              "text": "loop_body"
                            },
                            {
                              "type": "parameters",
                              "start": {
                                "row": 88,
                                "column": 21
                              },
                              "end": {
                                "row": 88,
                                "column": 37
                              },
                              "text": "(inputs, states)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 88,
                                    "column": 21
                                  },
                                  "end": {
                                    "row": 88,
                                    "column": 22
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 88,
                                    "column": 22
                                  },
                                  "end": {
                                    "row": 88,
                                    "column": 28
                                  },
                                  "text": "inputs"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 88,
                                    "column": 28
                                  },
                                  "end": {
                                    "row": 88,
                                    "column": 29
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 88,
                                    "column": 30
                                  },
                                  "end": {
                                    "row": 88,
                                    "column": 36
                                  },
                                  "text": "states"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 88,
                                    "column": 36
                                  },
                                  "end": {
                                    "row": 88,
                                    "column": 37
                                  },
                                  "text": ")"
                                }
                              ]
                            },
                            {
                              "type": ":",
                              "start": {
                                "row": 88,
                                "column": 37
                              },
                              "end": {
                                "row": 88,
                                "column": 38
                              },
                              "text": ":"
                            },
                            {
                              "type": "block",
                              "start": {
                                "row": 89,
                                "column": 12
                              },
                              "end": {
                                "row": 96,
                                "column": 34
                              },
                              "text": "cell_states = states[:-1]\n            iter_no = states[-1]\n            out, new_states = cell(inputs, cell_states)\n            for i, state in enumerate(cell_states):\n                new_states[i] = F.where(F.broadcast_greater(valid_length, iter_no),\n                                        new_states[i], state)\n            new_states.append(iter_no + 1)\n            return out, new_states",
                              "children": [
                                {
                                  "type": "expression_statement",
                                  "start": {
                                    "row": 89,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 89,
                                    "column": 37
                                  },
                                  "text": "cell_states = states[:-1]",
                                  "children": [
                                    {
                                      "type": "assignment",
                                      "start": {
                                        "row": 89,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 89,
                                        "column": 37
                                      },
                                      "text": "cell_states = states[:-1]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 89,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 89,
                                            "column": 23
                                          },
                                          "text": "cell_states"
                                        },
                                        {
                                          "type": "=",
                                          "start": {
                                            "row": 89,
                                            "column": 24
                                          },
                                          "end": {
                                            "row": 89,
                                            "column": 25
                                          },
                                          "text": "="
                                        },
                                        {
                                          "type": "subscript",
                                          "start": {
                                            "row": 89,
                                            "column": 26
                                          },
                                          "end": {
                                            "row": 89,
                                            "column": 37
                                          },
                                          "text": "states[:-1]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 89,
                                                "column": 26
                                              },
                                              "end": {
                                                "row": 89,
                                                "column": 32
                                              },
                                              "text": "states"
                                            },
                                            {
                                              "type": "[",
                                              "start": {
                                                "row": 89,
                                                "column": 32
                                              },
                                              "end": {
                                                "row": 89,
                                                "column": 33
                                              },
                                              "text": "["
                                            },
                                            {
                                              "type": "slice",
                                              "start": {
                                                "row": 89,
                                                "column": 33
                                              },
                                              "end": {
                                                "row": 89,
                                                "column": 36
                                              },
                                              "text": ":-1",
                                              "children": [
                                                {
                                                  "type": ":",
                                                  "start": {
                                                    "row": 89,
                                                    "column": 33
                                                  },
                                                  "end": {
                                                    "row": 89,
                                                    "column": 34
                                                  },
                                                  "text": ":"
                                                },
                                                {
                                                  "type": "unary_operator",
                                                  "start": {
                                                    "row": 89,
                                                    "column": 34
                                                  },
                                                  "end": {
                                                    "row": 89,
                                                    "column": 36
                                                  },
                                                  "text": "-1",
                                                  "children": [
                                                    {
                                                      "type": "-",
                                                      "start": {
                                                        "row": 89,
                                                        "column": 34
                                                      },
                                                      "end": {
                                                        "row": 89,
                                                        "column": 35
                                                      },
                                                      "text": "-"
                                                    },
                                                    {
                                                      "type": "integer",
                                                      "start": {
                                                        "row": 89,
                                                        "column": 35
                                                      },
                                                      "end": {
                                                        "row": 89,
                                                        "column": 36
                                                      },
                                                      "text": "1"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "]",
                                              "start": {
                                                "row": 89,
                                                "column": 36
                                              },
                                              "end": {
                                                "row": 89,
                                                "column": 37
                                              },
                                              "text": "]"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "expression_statement",
                                  "start": {
                                    "row": 90,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 90,
                                    "column": 32
                                  },
                                  "text": "iter_no = states[-1]",
                                  "children": [
                                    {
                                      "type": "assignment",
                                      "start": {
                                        "row": 90,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 90,
                                        "column": 32
                                      },
                                      "text": "iter_no = states[-1]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 90,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 90,
                                            "column": 19
                                          },
                                          "text": "iter_no"
                                        },
                                        {
                                          "type": "=",
                                          "start": {
                                            "row": 90,
                                            "column": 20
                                          },
                                          "end": {
                                            "row": 90,
                                            "column": 21
                                          },
                                          "text": "="
                                        },
                                        {
                                          "type": "subscript",
                                          "start": {
                                            "row": 90,
                                            "column": 22
                                          },
                                          "end": {
                                            "row": 90,
                                            "column": 32
                                          },
                                          "text": "states[-1]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 90,
                                                "column": 22
                                              },
                                              "end": {
                                                "row": 90,
                                                "column": 28
                                              },
                                              "text": "states"
                                            },
                                            {
                                              "type": "[",
                                              "start": {
                                                "row": 90,
                                                "column": 28
                                              },
                                              "end": {
                                                "row": 90,
                                                "column": 29
                                              },
                                              "text": "["
                                            },
                                            {
                                              "type": "unary_operator",
                                              "start": {
                                                "row": 90,
                                                "column": 29
                                              },
                                              "end": {
                                                "row": 90,
                                                "column": 31
                                              },
                                              "text": "-1",
                                              "children": [
                                                {
                                                  "type": "-",
                                                  "start": {
                                                    "row": 90,
                                                    "column": 29
                                                  },
                                                  "end": {
                                                    "row": 90,
                                                    "column": 30
                                                  },
                                                  "text": "-"
                                                },
                                                {
                                                  "type": "integer",
                                                  "start": {
                                                    "row": 90,
                                                    "column": 30
                                                  },
                                                  "end": {
                                                    "row": 90,
                                                    "column": 31
                                                  },
                                                  "text": "1"
                                                }
                                              ]
                                            },
                                            {
                                              "type": "]",
                                              "start": {
                                                "row": 90,
                                                "column": 31
                                              },
                                              "end": {
                                                "row": 90,
                                                "column": 32
                                              },
                                              "text": "]"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "expression_statement",
                                  "start": {
                                    "row": 91,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 91,
                                    "column": 55
                                  },
                                  "text": "out, new_states = cell(inputs, cell_states)",
                                  "children": [
                                    {
                                      "type": "assignment",
                                      "start": {
                                        "row": 91,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 91,
                                        "column": 55
                                      },
                                      "text": "out, new_states = cell(inputs, cell_states)",
                                      "children": [
                                        {
                                          "type": "pattern_list",
                                          "start": {
                                            "row": 91,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 91,
                                            "column": 27
                                          },
                                          "text": "out, new_states",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 91,
                                                "column": 12
                                              },
                                              "end": {
                                                "row": 91,
                                                "column": 15
                                              },
                                              "text": "out"
                                            },
                                            {
                                              "type": ",",
                                              "start": {
                                                "row": 91,
                                                "column": 15
                                              },
                                              "end": {
                                                "row": 91,
                                                "column": 16
                                              },
                                              "text": ","
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 91,
                                                "column": 17
                                              },
                                              "end": {
                                                "row": 91,
                                                "column": 27
                                              },
                                              "text": "new_states"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "=",
                                          "start": {
                                            "row": 91,
                                            "column": 28
                                          },
                                          "end": {
                                            "row": 91,
                                            "column": 29
                                          },
                                          "text": "="
                                        },
                                        {
                                          "type": "call",
                                          "start": {
                                            "row": 91,
                                            "column": 30
                                          },
                                          "end": {
                                            "row": 91,
                                            "column": 55
                                          },
                                          "text": "cell(inputs, cell_states)",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 91,
                                                "column": 30
                                              },
                                              "end": {
                                                "row": 91,
                                                "column": 34
                                              },
                                              "text": "cell"
                                            },
                                            {
                                              "type": "argument_list",
                                              "start": {
                                                "row": 91,
                                                "column": 34
                                              },
                                              "end": {
                                                "row": 91,
                                                "column": 55
                                              },
                                              "text": "(inputs, cell_states)",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 91,
                                                    "column": 34
                                                  },
                                                  "end": {
                                                    "row": 91,
                                                    "column": 35
                                                  },
                                                  "text": "("
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 91,
                                                    "column": 35
                                                  },
                                                  "end": {
                                                    "row": 91,
                                                    "column": 41
                                                  },
                                                  "text": "inputs"
                                                },
                                                {
                                                  "type": ",",
                                                  "start": {
                                                    "row": 91,
                                                    "column": 41
                                                  },
                                                  "end": {
                                                    "row": 91,
                                                    "column": 42
                                                  },
                                                  "text": ","
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 91,
                                                    "column": 43
                                                  },
                                                  "end": {
                                                    "row": 91,
                                                    "column": 54
                                                  },
                                                  "text": "cell_states"
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 91,
                                                    "column": 54
                                                  },
                                                  "end": {
                                                    "row": 91,
                                                    "column": 55
                                                  },
                                                  "text": ")"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "for_statement",
                                  "start": {
                                    "row": 92,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 94,
                                    "column": 61
                                  },
                                  "text": "for i, state in enumerate(cell_states):\n                new_states[i] = F.where(F.broadcast_greater(valid_length, iter_no),\n                                        new_states[i], state)",
                                  "children": [
                                    {
                                      "type": "for",
                                      "start": {
                                        "row": 92,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 92,
                                        "column": 15
                                      },
                                      "text": "for"
                                    },
                                    {
                                      "type": "pattern_list",
                                      "start": {
                                        "row": 92,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 92,
                                        "column": 24
                                      },
                                      "text": "i, state",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 92,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 92,
                                            "column": 17
                                          },
                                          "text": "i"
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 92,
                                            "column": 17
                                          },
                                          "end": {
                                            "row": 92,
                                            "column": 18
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 92,
                                            "column": 19
                                          },
                                          "end": {
                                            "row": 92,
                                            "column": 24
                                          },
                                          "text": "state"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "in",
                                      "start": {
                                        "row": 92,
                                        "column": 25
                                      },
                                      "end": {
                                        "row": 92,
                                        "column": 27
                                      },
                                      "text": "in"
                                    },
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 92,
                                        "column": 28
                                      },
                                      "end": {
                                        "row": 92,
                                        "column": 50
                                      },
                                      "text": "enumerate(cell_states)",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 92,
                                            "column": 28
                                          },
                                          "end": {
                                            "row": 92,
                                            "column": 37
                                          },
                                          "text": "enumerate"
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 92,
                                            "column": 37
                                          },
                                          "end": {
                                            "row": 92,
                                            "column": 50
                                          },
                                          "text": "(cell_states)",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 92,
                                                "column": 37
                                              },
                                              "end": {
                                                "row": 92,
                                                "column": 38
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 92,
                                                "column": 38
                                              },
                                              "end": {
                                                "row": 92,
                                                "column": 49
                                              },
                                              "text": "cell_states"
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 92,
                                                "column": 49
                                              },
                                              "end": {
                                                "row": 92,
                                                "column": 50
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ":",
                                      "start": {
                                        "row": 92,
                                        "column": 50
                                      },
                                      "end": {
                                        "row": 92,
                                        "column": 51
                                      },
                                      "text": ":"
                                    },
                                    {
                                      "type": "block",
                                      "start": {
                                        "row": 93,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 94,
                                        "column": 61
                                      },
                                      "text": "new_states[i] = F.where(F.broadcast_greater(valid_length, iter_no),\n                                        new_states[i], state)",
                                      "children": [
                                        {
                                          "type": "expression_statement",
                                          "start": {
                                            "row": 93,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 94,
                                            "column": 61
                                          },
                                          "text": "new_states[i] = F.where(F.broadcast_greater(valid_length, iter_no),\n                                        new_states[i], state)",
                                          "children": [
                                            {
                                              "type": "assignment",
                                              "start": {
                                                "row": 93,
                                                "column": 16
                                              },
                                              "end": {
                                                "row": 94,
                                                "column": 61
                                              },
                                              "text": "new_states[i] = F.where(F.broadcast_greater(valid_length, iter_no),\n                                        new_states[i], state)",
                                              "children": [
                                                {
                                                  "type": "subscript",
                                                  "start": {
                                                    "row": 93,
                                                    "column": 16
                                                  },
                                                  "end": {
                                                    "row": 93,
                                                    "column": 29
                                                  },
                                                  "text": "new_states[i]",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 93,
                                                        "column": 16
                                                      },
                                                      "end": {
                                                        "row": 93,
                                                        "column": 26
                                                      },
                                                      "text": "new_states"
                                                    },
                                                    {
                                                      "type": "[",
                                                      "start": {
                                                        "row": 93,
                                                        "column": 26
                                                      },
                                                      "end": {
                                                        "row": 93,
                                                        "column": 27
                                                      },
                                                      "text": "["
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 93,
                                                        "column": 27
                                                      },
                                                      "end": {
                                                        "row": 93,
                                                        "column": 28
                                                      },
                                                      "text": "i"
                                                    },
                                                    {
                                                      "type": "]",
                                                      "start": {
                                                        "row": 93,
                                                        "column": 28
                                                      },
                                                      "end": {
                                                        "row": 93,
                                                        "column": 29
                                                      },
                                                      "text": "]"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "=",
                                                  "start": {
                                                    "row": 93,
                                                    "column": 30
                                                  },
                                                  "end": {
                                                    "row": 93,
                                                    "column": 31
                                                  },
                                                  "text": "="
                                                },
                                                {
                                                  "type": "call",
                                                  "start": {
                                                    "row": 93,
                                                    "column": 32
                                                  },
                                                  "end": {
                                                    "row": 94,
                                                    "column": 61
                                                  },
                                                  "text": "F.where(F.broadcast_greater(valid_length, iter_no),\n                                        new_states[i], state)",
                                                  "children": [
                                                    {
                                                      "type": "attribute",
                                                      "start": {
                                                        "row": 93,
                                                        "column": 32
                                                      },
                                                      "end": {
                                                        "row": 93,
                                                        "column": 39
                                                      },
                                                      "text": "F.where",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 93,
                                                            "column": 32
                                                          },
                                                          "end": {
                                                            "row": 93,
                                                            "column": 33
                                                          },
                                                          "text": "F"
                                                        },
                                                        {
                                                          "type": ".",
                                                          "start": {
                                                            "row": 93,
                                                            "column": 33
                                                          },
                                                          "end": {
                                                            "row": 93,
                                                            "column": 34
                                                          },
                                                          "text": "."
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 93,
                                                            "column": 34
                                                          },
                                                          "end": {
                                                            "row": 93,
                                                            "column": 39
                                                          },
                                                          "text": "where"
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "argument_list",
                                                      "start": {
                                                        "row": 93,
                                                        "column": 39
                                                      },
                                                      "end": {
                                                        "row": 94,
                                                        "column": 61
                                                      },
                                                      "text": "(F.broadcast_greater(valid_length, iter_no),\n                                        new_states[i], state)",
                                                      "children": [
                                                        {
                                                          "type": "(",
                                                          "start": {
                                                            "row": 93,
                                                            "column": 39
                                                          },
                                                          "end": {
                                                            "row": 93,
                                                            "column": 40
                                                          },
                                                          "text": "("
                                                        },
                                                        {
                                                          "type": "call",
                                                          "start": {
                                                            "row": 93,
                                                            "column": 40
                                                          },
                                                          "end": {
                                                            "row": 93,
                                                            "column": 82
                                                          },
                                                          "text": "F.broadcast_greater(valid_length, iter_no)",
                                                          "children": [
                                                            {
                                                              "type": "attribute",
                                                              "start": {
                                                                "row": 93,
                                                                "column": 40
                                                              },
                                                              "end": {
                                                                "row": 93,
                                                                "column": 59
                                                              },
                                                              "text": "F.broadcast_greater",
                                                              "children": [
                                                                {
                                                                  "type": "identifier",
                                                                  "start": {
                                                                    "row": 93,
                                                                    "column": 40
                                                                  },
                                                                  "end": {
                                                                    "row": 93,
                                                                    "column": 41
                                                                  },
                                                                  "text": "F"
                                                                },
                                                                {
                                                                  "type": ".",
                                                                  "start": {
                                                                    "row": 93,
                                                                    "column": 41
                                                                  },
                                                                  "end": {
                                                                    "row": 93,
                                                                    "column": 42
                                                                  },
                                                                  "text": "."
                                                                },
                                                                {
                                                                  "type": "identifier",
                                                                  "start": {
                                                                    "row": 93,
                                                                    "column": 42
                                                                  },
                                                                  "end": {
                                                                    "row": 93,
                                                                    "column": 59
                                                                  },
                                                                  "text": "broadcast_greater"
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "argument_list",
                                                              "start": {
                                                                "row": 93,
                                                                "column": 59
                                                              },
                                                              "end": {
                                                                "row": 93,
                                                                "column": 82
                                                              },
                                                              "text": "(valid_length, iter_no)",
                                                              "children": [
                                                                {
                                                                  "type": "(",
                                                                  "start": {
                                                                    "row": 93,
                                                                    "column": 59
                                                                  },
                                                                  "end": {
                                                                    "row": 93,
                                                                    "column": 60
                                                                  },
                                                                  "text": "("
                                                                },
                                                                {
                                                                  "type": "identifier",
                                                                  "start": {
                                                                    "row": 93,
                                                                    "column": 60
                                                                  },
                                                                  "end": {
                                                                    "row": 93,
                                                                    "column": 72
                                                                  },
                                                                  "text": "valid_length"
                                                                },
                                                                {
                                                                  "type": ",",
                                                                  "start": {
                                                                    "row": 93,
                                                                    "column": 72
                                                                  },
                                                                  "end": {
                                                                    "row": 93,
                                                                    "column": 73
                                                                  },
                                                                  "text": ","
                                                                },
                                                                {
                                                                  "type": "identifier",
                                                                  "start": {
                                                                    "row": 93,
                                                                    "column": 74
                                                                  },
                                                                  "end": {
                                                                    "row": 93,
                                                                    "column": 81
                                                                  },
                                                                  "text": "iter_no"
                                                                },
                                                                {
                                                                  "type": ")",
                                                                  "start": {
                                                                    "row": 93,
                                                                    "column": 81
                                                                  },
                                                                  "end": {
                                                                    "row": 93,
                                                                    "column": 82
                                                                  },
                                                                  "text": ")"
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": ",",
                                                          "start": {
                                                            "row": 93,
                                                            "column": 82
                                                          },
                                                          "end": {
                                                            "row": 93,
                                                            "column": 83
                                                          },
                                                          "text": ","
                                                        },
                                                        {
                                                          "type": "subscript",
                                                          "start": {
                                                            "row": 94,
                                                            "column": 40
                                                          },
                                                          "end": {
                                                            "row": 94,
                                                            "column": 53
                                                          },
                                                          "text": "new_states[i]",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start": {
                                                                "row": 94,
                                                                "column": 40
                                                              },
                                                              "end": {
                                                                "row": 94,
                                                                "column": 50
                                                              },
                                                              "text": "new_states"
                                                            },
                                                            {
                                                              "type": "[",
                                                              "start": {
                                                                "row": 94,
                                                                "column": 50
                                                              },
                                                              "end": {
                                                                "row": 94,
                                                                "column": 51
                                                              },
                                                              "text": "["
                                                            },
                                                            {
                                                              "type": "identifier",
                                                              "start": {
                                                                "row": 94,
                                                                "column": 51
                                                              },
                                                              "end": {
                                                                "row": 94,
                                                                "column": 52
                                                              },
                                                              "text": "i"
                                                            },
                                                            {
                                                              "type": "]",
                                                              "start": {
                                                                "row": 94,
                                                                "column": 52
                                                              },
                                                              "end": {
                                                                "row": 94,
                                                                "column": 53
                                                              },
                                                              "text": "]"
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": ",",
                                                          "start": {
                                                            "row": 94,
                                                            "column": 53
                                                          },
                                                          "end": {
                                                            "row": 94,
                                                            "column": 54
                                                          },
                                                          "text": ","
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 94,
                                                            "column": 55
                                                          },
                                                          "end": {
                                                            "row": 94,
                                                            "column": 60
                                                          },
                                                          "text": "state"
                                                        },
                                                        {
                                                          "type": ")",
                                                          "start": {
                                                            "row": 94,
                                                            "column": 60
                                                          },
                                                          "end": {
                                                            "row": 94,
                                                            "column": 61
                                                          },
                                                          "text": ")"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "expression_statement",
                                  "start": {
                                    "row": 95,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 95,
                                    "column": 42
                                  },
                                  "text": "new_states.append(iter_no + 1)",
                                  "children": [
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 95,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 95,
                                        "column": 42
                                      },
                                      "text": "new_states.append(iter_no + 1)",
                                      "children": [
                                        {
                                          "type": "attribute",
                                          "start": {
                                            "row": 95,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 95,
                                            "column": 29
                                          },
                                          "text": "new_states.append",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 95,
                                                "column": 12
                                              },
                                              "end": {
                                                "row": 95,
                                                "column": 22
                                              },
                                              "text": "new_states"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 95,
                                                "column": 22
                                              },
                                              "end": {
                                                "row": 95,
                                                "column": 23
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 95,
                                                "column": 23
                                              },
                                              "end": {
                                                "row": 95,
                                                "column": 29
                                              },
                                              "text": "append"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 95,
                                            "column": 29
                                          },
                                          "end": {
                                            "row": 95,
                                            "column": 42
                                          },
                                          "text": "(iter_no + 1)",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 95,
                                                "column": 29
                                              },
                                              "end": {
                                                "row": 95,
                                                "column": 30
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "binary_operator",
                                              "start": {
                                                "row": 95,
                                                "column": 30
                                              },
                                              "end": {
                                                "row": 95,
                                                "column": 41
                                              },
                                              "text": "iter_no + 1",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 95,
                                                    "column": 30
                                                  },
                                                  "end": {
                                                    "row": 95,
                                                    "column": 37
                                                  },
                                                  "text": "iter_no"
                                                },
                                                {
                                                  "type": "+",
                                                  "start": {
                                                    "row": 95,
                                                    "column": 38
                                                  },
                                                  "end": {
                                                    "row": 95,
                                                    "column": 39
                                                  },
                                                  "text": "+"
                                                },
                                                {
                                                  "type": "integer",
                                                  "start": {
                                                    "row": 95,
                                                    "column": 40
                                                  },
                                                  "end": {
                                                    "row": 95,
                                                    "column": 41
                                                  },
                                                  "text": "1"
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 95,
                                                "column": 41
                                              },
                                              "end": {
                                                "row": 95,
                                                "column": 42
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "return_statement",
                                  "start": {
                                    "row": 96,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 96,
                                    "column": 34
                                  },
                                  "text": "return out, new_states",
                                  "children": [
                                    {
                                      "type": "return",
                                      "start": {
                                        "row": 96,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 96,
                                        "column": 18
                                      },
                                      "text": "return"
                                    },
                                    {
                                      "type": "expression_list",
                                      "start": {
                                        "row": 96,
                                        "column": 19
                                      },
                                      "end": {
                                        "row": 96,
                                        "column": 34
                                      },
                                      "text": "out, new_states",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 96,
                                            "column": 19
                                          },
                                          "end": {
                                            "row": 96,
                                            "column": 22
                                          },
                                          "text": "out"
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 96,
                                            "column": 22
                                          },
                                          "end": {
                                            "row": 96,
                                            "column": 23
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 96,
                                            "column": 24
                                          },
                                          "end": {
                                            "row": 96,
                                            "column": 34
                                          },
                                          "text": "new_states"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 98,
                "column": 4
              },
              "end": {
                "row": 98,
                "column": 66
              },
              "text": "outputs, states = F.contrib.foreach(loop_body, inputs, states)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 98,
                    "column": 4
                  },
                  "end": {
                    "row": 98,
                    "column": 66
                  },
                  "text": "outputs, states = F.contrib.foreach(loop_body, inputs, states)",
                  "children": [
                    {
                      "type": "pattern_list",
                      "start": {
                        "row": 98,
                        "column": 4
                      },
                      "end": {
                        "row": 98,
                        "column": 19
                      },
                      "text": "outputs, states",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 98,
                            "column": 4
                          },
                          "end": {
                            "row": 98,
                            "column": 11
                          },
                          "text": "outputs"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 98,
                            "column": 11
                          },
                          "end": {
                            "row": 98,
                            "column": 12
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 98,
                            "column": 13
                          },
                          "end": {
                            "row": 98,
                            "column": 19
                          },
                          "text": "states"
                        }
                      ]
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 98,
                        "column": 20
                      },
                      "end": {
                        "row": 98,
                        "column": 21
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 98,
                        "column": 22
                      },
                      "end": {
                        "row": 98,
                        "column": 66
                      },
                      "text": "F.contrib.foreach(loop_body, inputs, states)",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 98,
                            "column": 22
                          },
                          "end": {
                            "row": 98,
                            "column": 39
                          },
                          "text": "F.contrib.foreach",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 98,
                                "column": 22
                              },
                              "end": {
                                "row": 98,
                                "column": 31
                              },
                              "text": "F.contrib",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 98,
                                    "column": 22
                                  },
                                  "end": {
                                    "row": 98,
                                    "column": 23
                                  },
                                  "text": "F"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 98,
                                    "column": 23
                                  },
                                  "end": {
                                    "row": 98,
                                    "column": 24
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 98,
                                    "column": 24
                                  },
                                  "end": {
                                    "row": 98,
                                    "column": 31
                                  },
                                  "text": "contrib"
                                }
                              ]
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 98,
                                "column": 31
                              },
                              "end": {
                                "row": 98,
                                "column": 32
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 98,
                                "column": 32
                              },
                              "end": {
                                "row": 98,
                                "column": 39
                              },
                              "text": "foreach"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 98,
                            "column": 39
                          },
                          "end": {
                            "row": 98,
                            "column": 66
                          },
                          "text": "(loop_body, inputs, states)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 98,
                                "column": 39
                              },
                              "end": {
                                "row": 98,
                                "column": 40
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 98,
                                "column": 40
                              },
                              "end": {
                                "row": 98,
                                "column": 49
                              },
                              "text": "loop_body"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 98,
                                "column": 49
                              },
                              "end": {
                                "row": 98,
                                "column": 50
                              },
                              "text": ","
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 98,
                                "column": 51
                              },
                              "end": {
                                "row": 98,
                                "column": 57
                              },
                              "text": "inputs"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 98,
                                "column": 57
                              },
                              "end": {
                                "row": 98,
                                "column": 58
                              },
                              "text": ","
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 98,
                                "column": 59
                              },
                              "end": {
                                "row": 98,
                                "column": 65
                              },
                              "text": "states"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 98,
                                "column": 65
                              },
                              "end": {
                                "row": 98,
                                "column": 66
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 99,
                "column": 4
              },
              "end": {
                "row": 100,
                "column": 66
              },
              "text": "if drop_outputs:\n        outputs = F.Dropout(outputs, p=drop_outputs, axes=(axis,))",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 99,
                    "column": 4
                  },
                  "end": {
                    "row": 99,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 99,
                    "column": 7
                  },
                  "end": {
                    "row": 99,
                    "column": 19
                  },
                  "text": "drop_outputs"
                },
                {
                  "type": ":",
                  "start": {
                    "row": 99,
                    "column": 19
                  },
                  "end": {
                    "row": 99,
                    "column": 20
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 100,
                    "column": 8
                  },
                  "end": {
                    "row": 100,
                    "column": 66
                  },
                  "text": "outputs = F.Dropout(outputs, p=drop_outputs, axes=(axis,))",
                  "children": [
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 100,
                        "column": 8
                      },
                      "end": {
                        "row": 100,
                        "column": 66
                      },
                      "text": "outputs = F.Dropout(outputs, p=drop_outputs, axes=(axis,))",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 100,
                            "column": 8
                          },
                          "end": {
                            "row": 100,
                            "column": 66
                          },
                          "text": "outputs = F.Dropout(outputs, p=drop_outputs, axes=(axis,))",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 100,
                                "column": 8
                              },
                              "end": {
                                "row": 100,
                                "column": 15
                              },
                              "text": "outputs"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 100,
                                "column": 16
                              },
                              "end": {
                                "row": 100,
                                "column": 17
                              },
                              "text": "="
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 100,
                                "column": 18
                              },
                              "end": {
                                "row": 100,
                                "column": 66
                              },
                              "text": "F.Dropout(outputs, p=drop_outputs, axes=(axis,))",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 100,
                                    "column": 18
                                  },
                                  "end": {
                                    "row": 100,
                                    "column": 27
                                  },
                                  "text": "F.Dropout",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 100,
                                        "column": 18
                                      },
                                      "end": {
                                        "row": 100,
                                        "column": 19
                                      },
                                      "text": "F"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 100,
                                        "column": 19
                                      },
                                      "end": {
                                        "row": 100,
                                        "column": 20
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 100,
                                        "column": 20
                                      },
                                      "end": {
                                        "row": 100,
                                        "column": 27
                                      },
                                      "text": "Dropout"
                                    }
                                  ]
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 100,
                                    "column": 27
                                  },
                                  "end": {
                                    "row": 100,
                                    "column": 66
                                  },
                                  "text": "(outputs, p=drop_outputs, axes=(axis,))",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 100,
                                        "column": 27
                                      },
                                      "end": {
                                        "row": 100,
                                        "column": 28
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 100,
                                        "column": 28
                                      },
                                      "end": {
                                        "row": 100,
                                        "column": 35
                                      },
                                      "text": "outputs"
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 100,
                                        "column": 35
                                      },
                                      "end": {
                                        "row": 100,
                                        "column": 36
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "keyword_argument",
                                      "start": {
                                        "row": 100,
                                        "column": 37
                                      },
                                      "end": {
                                        "row": 100,
                                        "column": 51
                                      },
                                      "text": "p=drop_outputs",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 100,
                                            "column": 37
                                          },
                                          "end": {
                                            "row": 100,
                                            "column": 38
                                          },
                                          "text": "p"
                                        },
                                        {
                                          "type": "=",
                                          "start": {
                                            "row": 100,
                                            "column": 38
                                          },
                                          "end": {
                                            "row": 100,
                                            "column": 39
                                          },
                                          "text": "="
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 100,
                                            "column": 39
                                          },
                                          "end": {
                                            "row": 100,
                                            "column": 51
                                          },
                                          "text": "drop_outputs"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 100,
                                        "column": 51
                                      },
                                      "end": {
                                        "row": 100,
                                        "column": 52
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "keyword_argument",
                                      "start": {
                                        "row": 100,
                                        "column": 53
                                      },
                                      "end": {
                                        "row": 100,
                                        "column": 65
                                      },
                                      "text": "axes=(axis,)",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 100,
                                            "column": 53
                                          },
                                          "end": {
                                            "row": 100,
                                            "column": 57
                                          },
                                          "text": "axes"
                                        },
                                        {
                                          "type": "=",
                                          "start": {
                                            "row": 100,
                                            "column": 57
                                          },
                                          "end": {
                                            "row": 100,
                                            "column": 58
                                          },
                                          "text": "="
                                        },
                                        {
                                          "type": "tuple",
                                          "start": {
                                            "row": 100,
                                            "column": 58
                                          },
                                          "end": {
                                            "row": 100,
                                            "column": 65
                                          },
                                          "text": "(axis,)",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 100,
                                                "column": 58
                                              },
                                              "end": {
                                                "row": 100,
                                                "column": 59
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 100,
                                                "column": 59
                                              },
                                              "end": {
                                                "row": 100,
                                                "column": 63
                                              },
                                              "text": "axis"
                                            },
                                            {
                                              "type": ",",
                                              "start": {
                                                "row": 100,
                                                "column": 63
                                              },
                                              "end": {
                                                "row": 100,
                                                "column": 64
                                              },
                                              "text": ","
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 100,
                                                "column": 64
                                              },
                                              "end": {
                                                "row": 100,
                                                "column": 65
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 100,
                                        "column": 65
                                      },
                                      "end": {
                                        "row": 100,
                                        "column": 66
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 101,
                "column": 4
              },
              "end": {
                "row": 111,
                "column": 30
              },
              "text": "if valid_length is not None:\n        if axis != 0:\n            outputs = F.transpose(outputs, axes)\n        outputs = F.SequenceMask(outputs, sequence_length=valid_length,\n                                 use_sequence_length=True, axis=axis)\n        # the last state is the iteration number. We don't need it.\n        return outputs, states[:-1]\n    else:\n        if axis != 0:\n            outputs = F.transpose(outputs, axes)\n        return outputs, states",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 101,
                    "column": 4
                  },
                  "end": {
                    "row": 101,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "comparison_operator",
                  "start": {
                    "row": 101,
                    "column": 7
                  },
                  "end": {
                    "row": 101,
                    "column": 31
                  },
                  "text": "valid_length is not None",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 101,
                        "column": 7
                      },
                      "end": {
                        "row": 101,
                        "column": 19
                      },
                      "text": "valid_length"
                    },
                    {
                      "type": "is not",
                      "start": {
                        "row": 101,
                        "column": 20
                      },
                      "end": {
                        "row": 101,
                        "column": 22
                      },
                      "text": "is"
                    },
                    {
                      "type": "is not",
                      "start": {
                        "row": 101,
                        "column": 23
                      },
                      "end": {
                        "row": 101,
                        "column": 26
                      },
                      "text": "not"
                    },
                    {
                      "type": "none",
                      "start": {
                        "row": 101,
                        "column": 27
                      },
                      "end": {
                        "row": 101,
                        "column": 31
                      },
                      "text": "None"
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 101,
                    "column": 31
                  },
                  "end": {
                    "row": 101,
                    "column": 32
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 102,
                    "column": 8
                  },
                  "end": {
                    "row": 107,
                    "column": 35
                  },
                  "text": "if axis != 0:\n            outputs = F.transpose(outputs, axes)\n        outputs = F.SequenceMask(outputs, sequence_length=valid_length,\n                                 use_sequence_length=True, axis=axis)\n        # the last state is the iteration number. We don't need it.\n        return outputs, states[:-1]",
                  "children": [
                    {
                      "type": "if_statement",
                      "start": {
                        "row": 102,
                        "column": 8
                      },
                      "end": {
                        "row": 103,
                        "column": 48
                      },
                      "text": "if axis != 0:\n            outputs = F.transpose(outputs, axes)",
                      "children": [
                        {
                          "type": "if",
                          "start": {
                            "row": 102,
                            "column": 8
                          },
                          "end": {
                            "row": 102,
                            "column": 10
                          },
                          "text": "if"
                        },
                        {
                          "type": "comparison_operator",
                          "start": {
                            "row": 102,
                            "column": 11
                          },
                          "end": {
                            "row": 102,
                            "column": 20
                          },
                          "text": "axis != 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 102,
                                "column": 11
                              },
                              "end": {
                                "row": 102,
                                "column": 15
                              },
                              "text": "axis"
                            },
                            {
                              "type": "!=",
                              "start": {
                                "row": 102,
                                "column": 16
                              },
                              "end": {
                                "row": 102,
                                "column": 18
                              },
                              "text": "!="
                            },
                            {
                              "type": "integer",
                              "start": {
                                "row": 102,
                                "column": 19
                              },
                              "end": {
                                "row": 102,
                                "column": 20
                              },
                              "text": "0"
                            }
                          ]
                        },
                        {
                          "type": ":",
                          "start": {
                            "row": 102,
                            "column": 20
                          },
                          "end": {
                            "row": 102,
                            "column": 21
                          },
                          "text": ":"
                        },
                        {
                          "type": "block",
                          "start": {
                            "row": 103,
                            "column": 12
                          },
                          "end": {
                            "row": 103,
                            "column": 48
                          },
                          "text": "outputs = F.transpose(outputs, axes)",
                          "children": [
                            {
                              "type": "expression_statement",
                              "start": {
                                "row": 103,
                                "column": 12
                              },
                              "end": {
                                "row": 103,
                                "column": 48
                              },
                              "text": "outputs = F.transpose(outputs, axes)",
                              "children": [
                                {
                                  "type": "assignment",
                                  "start": {
                                    "row": 103,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 103,
                                    "column": 48
                                  },
                                  "text": "outputs = F.transpose(outputs, axes)",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 103,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 103,
                                        "column": 19
                                      },
                                      "text": "outputs"
                                    },
                                    {
                                      "type": "=",
                                      "start": {
                                        "row": 103,
                                        "column": 20
                                      },
                                      "end": {
                                        "row": 103,
                                        "column": 21
                                      },
                                      "text": "="
                                    },
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 103,
                                        "column": 22
                                      },
                                      "end": {
                                        "row": 103,
                                        "column": 48
                                      },
                                      "text": "F.transpose(outputs, axes)",
                                      "children": [
                                        {
                                          "type": "attribute",
                                          "start": {
                                            "row": 103,
                                            "column": 22
                                          },
                                          "end": {
                                            "row": 103,
                                            "column": 33
                                          },
                                          "text": "F.transpose",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 103,
                                                "column": 22
                                              },
                                              "end": {
                                                "row": 103,
                                                "column": 23
                                              },
                                              "text": "F"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 103,
                                                "column": 23
                                              },
                                              "end": {
                                                "row": 103,
                                                "column": 24
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 103,
                                                "column": 24
                                              },
                                              "end": {
                                                "row": 103,
                                                "column": 33
                                              },
                                              "text": "transpose"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 103,
                                            "column": 33
                                          },
                                          "end": {
                                            "row": 103,
                                            "column": 48
                                          },
                                          "text": "(outputs, axes)",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 103,
                                                "column": 33
                                              },
                                              "end": {
                                                "row": 103,
                                                "column": 34
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 103,
                                                "column": 34
                                              },
                                              "end": {
                                                "row": 103,
                                                "column": 41
                                              },
                                              "text": "outputs"
                                            },
                                            {
                                              "type": ",",
                                              "start": {
                                                "row": 103,
                                                "column": 41
                                              },
                                              "end": {
                                                "row": 103,
                                                "column": 42
                                              },
                                              "text": ","
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 103,
                                                "column": 43
                                              },
                                              "end": {
                                                "row": 103,
                                                "column": 47
                                              },
                                              "text": "axes"
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 103,
                                                "column": 47
                                              },
                                              "end": {
                                                "row": 103,
                                                "column": 48
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 104,
                        "column": 8
                      },
                      "end": {
                        "row": 105,
                        "column": 69
                      },
                      "text": "outputs = F.SequenceMask(outputs, sequence_length=valid_length,\n                                 use_sequence_length=True, axis=axis)",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 104,
                            "column": 8
                          },
                          "end": {
                            "row": 105,
                            "column": 69
                          },
                          "text": "outputs = F.SequenceMask(outputs, sequence_length=valid_length,\n                                 use_sequence_length=True, axis=axis)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 104,
                                "column": 8
                              },
                              "end": {
                                "row": 104,
                                "column": 15
                              },
                              "text": "outputs"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 104,
                                "column": 16
                              },
                              "end": {
                                "row": 104,
                                "column": 17
                              },
                              "text": "="
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 104,
                                "column": 18
                              },
                              "end": {
                                "row": 105,
                                "column": 69
                              },
                              "text": "F.SequenceMask(outputs, sequence_length=valid_length,\n                                 use_sequence_length=True, axis=axis)",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 104,
                                    "column": 18
                                  },
                                  "end": {
                                    "row": 104,
                                    "column": 32
                                  },
                                  "text": "F.SequenceMask",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 104,
                                        "column": 18
                                      },
                                      "end": {
                                        "row": 104,
                                        "column": 19
                                      },
                                      "text": "F"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 104,
                                        "column": 19
                                      },
                                      "end": {
                                        "row": 104,
                                        "column": 20
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 104,
                                        "column": 20
                                      },
                                      "end": {
                                        "row": 104,
                                        "column": 32
                                      },
                                      "text": "SequenceMask"
                                    }
                                  ]
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 104,
                                    "column": 32
                                  },
                                  "end": {
                                    "row": 105,
                                    "column": 69
                                  },
                                  "text": "(outputs, sequence_length=valid_length,\n                                 use_sequence_length=True, axis=axis)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 104,
                                        "column": 32
                                      },
                                      "end": {
                                        "row": 104,
                                        "column": 33
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 104,
                                        "column": 33
                                      },
                                      "end": {
                                        "row": 104,
                                        "column": 40
                                      },
                                      "text": "outputs"
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 104,
                                        "column": 40
                                      },
                                      "end": {
                                        "row": 104,
                                        "column": 41
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "keyword_argument",
                                      "start": {
                                        "row": 104,
                                        "column": 42
                                      },
                                      "end": {
                                        "row": 104,
                                        "column": 70
                                      },
                                      "text": "sequence_length=valid_length",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 104,
                                            "column": 42
                                          },
                                          "end": {
                                            "row": 104,
                                            "column": 57
                                          },
                                          "text": "sequence_length"
                                        },
                                        {
                                          "type": "=",
                                          "start": {
                                            "row": 104,
                                            "column": 57
                                          },
                                          "end": {
                                            "row": 104,
                                            "column": 58
                                          },
                                          "text": "="
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 104,
                                            "column": 58
                                          },
                                          "end": {
                                            "row": 104,
                                            "column": 70
                                          },
                                          "text": "valid_length"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 104,
                                        "column": 70
                                      },
                                      "end": {
                                        "row": 104,
                                        "column": 71
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "keyword_argument",
                                      "start": {
                                        "row": 105,
                                        "column": 33
                                      },
                                      "end": {
                                        "row": 105,
                                        "column": 57
                                      },
                                      "text": "use_sequence_length=True",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 105,
                                            "column": 33
                                          },
                                          "end": {
                                            "row": 105,
                                            "column": 52
                                          },
                                          "text": "use_sequence_length"
                                        },
                                        {
                                          "type": "=",
                                          "start": {
                                            "row": 105,
                                            "column": 52
                                          },
                                          "end": {
                                            "row": 105,
                                            "column": 53
                                          },
                                          "text": "="
                                        },
                                        {
                                          "type": "true",
                                          "start": {
                                            "row": 105,
                                            "column": 53
                                          },
                                          "end": {
                                            "row": 105,
                                            "column": 57
                                          },
                                          "text": "True"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 105,
                                        "column": 57
                                      },
                                      "end": {
                                        "row": 105,
                                        "column": 58
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "keyword_argument",
                                      "start": {
                                        "row": 105,
                                        "column": 59
                                      },
                                      "end": {
                                        "row": 105,
                                        "column": 68
                                      },
                                      "text": "axis=axis",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 105,
                                            "column": 59
                                          },
                                          "end": {
                                            "row": 105,
                                            "column": 63
                                          },
                                          "text": "axis"
                                        },
                                        {
                                          "type": "=",
                                          "start": {
                                            "row": 105,
                                            "column": 63
                                          },
                                          "end": {
                                            "row": 105,
                                            "column": 64
                                          },
                                          "text": "="
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 105,
                                            "column": 64
                                          },
                                          "end": {
                                            "row": 105,
                                            "column": 68
                                          },
                                          "text": "axis"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 105,
                                        "column": 68
                                      },
                                      "end": {
                                        "row": 105,
                                        "column": 69
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 106,
                        "column": 8
                      },
                      "end": {
                        "row": 106,
                        "column": 67
                      },
                      "text": "# the last state is the iteration number. We don't need it."
                    },
                    {
                      "type": "return_statement",
                      "start": {
                        "row": 107,
                        "column": 8
                      },
                      "end": {
                        "row": 107,
                        "column": 35
                      },
                      "text": "return outputs, states[:-1]",
                      "children": [
                        {
                          "type": "return",
                          "start": {
                            "row": 107,
                            "column": 8
                          },
                          "end": {
                            "row": 107,
                            "column": 14
                          },
                          "text": "return"
                        },
                        {
                          "type": "expression_list",
                          "start": {
                            "row": 107,
                            "column": 15
                          },
                          "end": {
                            "row": 107,
                            "column": 35
                          },
                          "text": "outputs, states[:-1]",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 107,
                                "column": 15
                              },
                              "end": {
                                "row": 107,
                                "column": 22
                              },
                              "text": "outputs"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 107,
                                "column": 22
                              },
                              "end": {
                                "row": 107,
                                "column": 23
                              },
                              "text": ","
                            },
                            {
                              "type": "subscript",
                              "start": {
                                "row": 107,
                                "column": 24
                              },
                              "end": {
                                "row": 107,
                                "column": 35
                              },
                              "text": "states[:-1]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 107,
                                    "column": 24
                                  },
                                  "end": {
                                    "row": 107,
                                    "column": 30
                                  },
                                  "text": "states"
                                },
                                {
                                  "type": "[",
                                  "start": {
                                    "row": 107,
                                    "column": 30
                                  },
                                  "end": {
                                    "row": 107,
                                    "column": 31
                                  },
                                  "text": "["
                                },
                                {
                                  "type": "slice",
                                  "start": {
                                    "row": 107,
                                    "column": 31
                                  },
                                  "end": {
                                    "row": 107,
                                    "column": 34
                                  },
                                  "text": ":-1",
                                  "children": [
                                    {
                                      "type": ":",
                                      "start": {
                                        "row": 107,
                                        "column": 31
                                      },
                                      "end": {
                                        "row": 107,
                                        "column": 32
                                      },
                                      "text": ":"
                                    },
                                    {
                                      "type": "unary_operator",
                                      "start": {
                                        "row": 107,
                                        "column": 32
                                      },
                                      "end": {
                                        "row": 107,
                                        "column": 34
                                      },
                                      "text": "-1",
                                      "children": [
                                        {
                                          "type": "-",
                                          "start": {
                                            "row": 107,
                                            "column": 32
                                          },
                                          "end": {
                                            "row": 107,
                                            "column": 33
                                          },
                                          "text": "-"
                                        },
                                        {
                                          "type": "integer",
                                          "start": {
                                            "row": 107,
                                            "column": 33
                                          },
                                          "end": {
                                            "row": 107,
                                            "column": 34
                                          },
                                          "text": "1"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "]",
                                  "start": {
                                    "row": 107,
                                    "column": 34
                                  },
                                  "end": {
                                    "row": 107,
                                    "column": 35
                                  },
                                  "text": "]"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "else_clause",
                  "start": {
                    "row": 108,
                    "column": 4
                  },
                  "end": {
                    "row": 111,
                    "column": 30
                  },
                  "text": "else:\n        if axis != 0:\n            outputs = F.transpose(outputs, axes)\n        return outputs, states",
                  "children": [
                    {
                      "type": "else",
                      "start": {
                        "row": 108,
                        "column": 4
                      },
                      "end": {
                        "row": 108,
                        "column": 8
                      },
                      "text": "else"
                    },
                    {
                      "type": ":",
                      "start": {
                        "row": 108,
                        "column": 8
                      },
                      "end": {
                        "row": 108,
                        "column": 9
                      },
                      "text": ":"
                    },
                    {
                      "type": "block",
                      "start": {
                        "row": 109,
                        "column": 8
                      },
                      "end": {
                        "row": 111,
                        "column": 30
                      },
                      "text": "if axis != 0:\n            outputs = F.transpose(outputs, axes)\n        return outputs, states",
                      "children": [
                        {
                          "type": "if_statement",
                          "start": {
                            "row": 109,
                            "column": 8
                          },
                          "end": {
                            "row": 110,
                            "column": 48
                          },
                          "text": "if axis != 0:\n            outputs = F.transpose(outputs, axes)",
                          "children": [
                            {
                              "type": "if",
                              "start": {
                                "row": 109,
                                "column": 8
                              },
                              "end": {
                                "row": 109,
                                "column": 10
                              },
                              "text": "if"
                            },
                            {
                              "type": "comparison_operator",
                              "start": {
                                "row": 109,
                                "column": 11
                              },
                              "end": {
                                "row": 109,
                                "column": 20
                              },
                              "text": "axis != 0",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 109,
                                    "column": 11
                                  },
                                  "end": {
                                    "row": 109,
                                    "column": 15
                                  },
                                  "text": "axis"
                                },
                                {
                                  "type": "!=",
                                  "start": {
                                    "row": 109,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 109,
                                    "column": 18
                                  },
                                  "text": "!="
                                },
                                {
                                  "type": "integer",
                                  "start": {
                                    "row": 109,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 109,
                                    "column": 20
                                  },
                                  "text": "0"
                                }
                              ]
                            },
                            {
                              "type": ":",
                              "start": {
                                "row": 109,
                                "column": 20
                              },
                              "end": {
                                "row": 109,
                                "column": 21
                              },
                              "text": ":"
                            },
                            {
                              "type": "block",
                              "start": {
                                "row": 110,
                                "column": 12
                              },
                              "end": {
                                "row": 110,
                                "column": 48
                              },
                              "text": "outputs = F.transpose(outputs, axes)",
                              "children": [
                                {
                                  "type": "expression_statement",
                                  "start": {
                                    "row": 110,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 110,
                                    "column": 48
                                  },
                                  "text": "outputs = F.transpose(outputs, axes)",
                                  "children": [
                                    {
                                      "type": "assignment",
                                      "start": {
                                        "row": 110,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 110,
                                        "column": 48
                                      },
                                      "text": "outputs = F.transpose(outputs, axes)",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 110,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 110,
                                            "column": 19
                                          },
                                          "text": "outputs"
                                        },
                                        {
                                          "type": "=",
                                          "start": {
                                            "row": 110,
                                            "column": 20
                                          },
                                          "end": {
                                            "row": 110,
                                            "column": 21
                                          },
                                          "text": "="
                                        },
                                        {
                                          "type": "call",
                                          "start": {
                                            "row": 110,
                                            "column": 22
                                          },
                                          "end": {
                                            "row": 110,
                                            "column": 48
                                          },
                                          "text": "F.transpose(outputs, axes)",
                                          "children": [
                                            {
                                              "type": "attribute",
                                              "start": {
                                                "row": 110,
                                                "column": 22
                                              },
                                              "end": {
                                                "row": 110,
                                                "column": 33
                                              },
                                              "text": "F.transpose",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 110,
                                                    "column": 22
                                                  },
                                                  "end": {
                                                    "row": 110,
                                                    "column": 23
                                                  },
                                                  "text": "F"
                                                },
                                                {
                                                  "type": ".",
                                                  "start": {
                                                    "row": 110,
                                                    "column": 23
                                                  },
                                                  "end": {
                                                    "row": 110,
                                                    "column": 24
                                                  },
                                                  "text": "."
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 110,
                                                    "column": 24
                                                  },
                                                  "end": {
                                                    "row": 110,
                                                    "column": 33
                                                  },
                                                  "text": "transpose"
                                                }
                                              ]
                                            },
                                            {
                                              "type": "argument_list",
                                              "start": {
                                                "row": 110,
                                                "column": 33
                                              },
                                              "end": {
                                                "row": 110,
                                                "column": 48
                                              },
                                              "text": "(outputs, axes)",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 110,
                                                    "column": 33
                                                  },
                                                  "end": {
                                                    "row": 110,
                                                    "column": 34
                                                  },
                                                  "text": "("
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 110,
                                                    "column": 34
                                                  },
                                                  "end": {
                                                    "row": 110,
                                                    "column": 41
                                                  },
                                                  "text": "outputs"
                                                },
                                                {
                                                  "type": ",",
                                                  "start": {
                                                    "row": 110,
                                                    "column": 41
                                                  },
                                                  "end": {
                                                    "row": 110,
                                                    "column": 42
                                                  },
                                                  "text": ","
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 110,
                                                    "column": 43
                                                  },
                                                  "end": {
                                                    "row": 110,
                                                    "column": 47
                                                  },
                                                  "text": "axes"
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 110,
                                                    "column": 47
                                                  },
                                                  "end": {
                                                    "row": 110,
                                                    "column": 48
                                                  },
                                                  "text": ")"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "return_statement",
                          "start": {
                            "row": 111,
                            "column": 8
                          },
                          "end": {
                            "row": 111,
                            "column": 30
                          },
                          "text": "return outputs, states",
                          "children": [
                            {
                              "type": "return",
                              "start": {
                                "row": 111,
                                "column": 8
                              },
                              "end": {
                                "row": 111,
                                "column": 14
                              },
                              "text": "return"
                            },
                            {
                              "type": "expression_list",
                              "start": {
                                "row": 111,
                                "column": 15
                              },
                              "end": {
                                "row": 111,
                                "column": 30
                              },
                              "text": "outputs, states",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 111,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 111,
                                    "column": 22
                                  },
                                  "text": "outputs"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 111,
                                    "column": 22
                                  },
                                  "end": {
                                    "row": 111,
                                    "column": 23
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 111,
                                    "column": 24
                                  },
                                  "end": {
                                    "row": 111,
                                    "column": 30
                                  },
                                  "text": "states"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}