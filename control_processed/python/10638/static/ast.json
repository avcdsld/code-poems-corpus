{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 59,
    "column": 37
  },
  "text": "def get_adjustments(self,\n                        zero_qtr_data,\n                        requested_qtr_data,\n                        last_per_qtr,\n                        dates,\n                        assets,\n                        columns,\n                        **kwargs):\n        \"\"\"\n        Creates an AdjustedArray from the given estimates data for the given\n        dates.\n\n        Parameters\n        ----------\n        zero_qtr_data : pd.DataFrame\n            The 'time zero' data for each calendar date per sid.\n        requested_qtr_data : pd.DataFrame\n            The requested quarter data for each calendar date per sid.\n        last_per_qtr : pd.DataFrame\n            A DataFrame with a column MultiIndex of [self.estimates.columns,\n            normalized_quarters, sid] that allows easily getting the timeline\n            of estimates for a particular sid for a particular quarter.\n        dates : pd.DatetimeIndex\n            The calendar dates for which estimates data is requested.\n        assets : pd.Int64Index\n            An index of all the assets from the raw data.\n        columns : list of BoundColumn\n            The columns for which adjustments need to be calculated.\n        kwargs :\n            Additional keyword arguments that should be forwarded to\n            `get_adjustments_for_sid` and to be used in computing adjustments\n            for each sid.\n\n        Returns\n        -------\n        col_to_all_adjustments : dict[int -> AdjustedArray]\n            A dictionary of all adjustments that should be applied.\n        \"\"\"\n\n        zero_qtr_data.sort_index(inplace=True)\n        # Here we want to get the LAST record from each group of records\n        # corresponding to a single quarter. This is to ensure that we select\n        # the most up-to-date event date in case the event date changes.\n        quarter_shifts = zero_qtr_data.groupby(\n            level=[SID_FIELD_NAME, NORMALIZED_QUARTERS]\n        ).nth(-1)\n\n        col_to_all_adjustments = {}\n        sid_to_idx = dict(zip(assets, range(len(assets))))\n        quarter_shifts.groupby(level=SID_FIELD_NAME).apply(\n            self.get_adjustments_for_sid,\n            dates,\n            requested_qtr_data,\n            last_per_qtr,\n            sid_to_idx,\n            columns,\n            col_to_all_adjustments,\n            **kwargs\n        )\n        return col_to_all_adjustments",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 59,
        "column": 37
      },
      "text": "def get_adjustments(self,\n                        zero_qtr_data,\n                        requested_qtr_data,\n                        last_per_qtr,\n                        dates,\n                        assets,\n                        columns,\n                        **kwargs):\n        \"\"\"\n        Creates an AdjustedArray from the given estimates data for the given\n        dates.\n\n        Parameters\n        ----------\n        zero_qtr_data : pd.DataFrame\n            The 'time zero' data for each calendar date per sid.\n        requested_qtr_data : pd.DataFrame\n            The requested quarter data for each calendar date per sid.\n        last_per_qtr : pd.DataFrame\n            A DataFrame with a column MultiIndex of [self.estimates.columns,\n            normalized_quarters, sid] that allows easily getting the timeline\n            of estimates for a particular sid for a particular quarter.\n        dates : pd.DatetimeIndex\n            The calendar dates for which estimates data is requested.\n        assets : pd.Int64Index\n            An index of all the assets from the raw data.\n        columns : list of BoundColumn\n            The columns for which adjustments need to be calculated.\n        kwargs :\n            Additional keyword arguments that should be forwarded to\n            `get_adjustments_for_sid` and to be used in computing adjustments\n            for each sid.\n\n        Returns\n        -------\n        col_to_all_adjustments : dict[int -> AdjustedArray]\n            A dictionary of all adjustments that should be applied.\n        \"\"\"\n\n        zero_qtr_data.sort_index(inplace=True)\n        # Here we want to get the LAST record from each group of records\n        # corresponding to a single quarter. This is to ensure that we select\n        # the most up-to-date event date in case the event date changes.\n        quarter_shifts = zero_qtr_data.groupby(\n            level=[SID_FIELD_NAME, NORMALIZED_QUARTERS]\n        ).nth(-1)\n\n        col_to_all_adjustments = {}\n        sid_to_idx = dict(zip(assets, range(len(assets))))\n        quarter_shifts.groupby(level=SID_FIELD_NAME).apply(\n            self.get_adjustments_for_sid,\n            dates,\n            requested_qtr_data,\n            last_per_qtr,\n            sid_to_idx,\n            columns,\n            col_to_all_adjustments,\n            **kwargs\n        )\n        return col_to_all_adjustments",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 19
          },
          "text": "get_adjustments"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 19
          },
          "end": {
            "row": 7,
            "column": 33
          },
          "text": "(self,\n                        zero_qtr_data,\n                        requested_qtr_data,\n                        last_per_qtr,\n                        dates,\n                        assets,\n                        columns,\n                        **kwargs)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 19
              },
              "end": {
                "row": 0,
                "column": 20
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 20
              },
              "end": {
                "row": 0,
                "column": 24
              },
              "text": "self"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 24
              },
              "end": {
                "row": 0,
                "column": 25
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 1,
                "column": 24
              },
              "end": {
                "row": 1,
                "column": 37
              },
              "text": "zero_qtr_data"
            },
            {
              "type": ",",
              "start": {
                "row": 1,
                "column": 37
              },
              "end": {
                "row": 1,
                "column": 38
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 2,
                "column": 24
              },
              "end": {
                "row": 2,
                "column": 42
              },
              "text": "requested_qtr_data"
            },
            {
              "type": ",",
              "start": {
                "row": 2,
                "column": 42
              },
              "end": {
                "row": 2,
                "column": 43
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 3,
                "column": 24
              },
              "end": {
                "row": 3,
                "column": 36
              },
              "text": "last_per_qtr"
            },
            {
              "type": ",",
              "start": {
                "row": 3,
                "column": 36
              },
              "end": {
                "row": 3,
                "column": 37
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 4,
                "column": 24
              },
              "end": {
                "row": 4,
                "column": 29
              },
              "text": "dates"
            },
            {
              "type": ",",
              "start": {
                "row": 4,
                "column": 29
              },
              "end": {
                "row": 4,
                "column": 30
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 5,
                "column": 24
              },
              "end": {
                "row": 5,
                "column": 30
              },
              "text": "assets"
            },
            {
              "type": ",",
              "start": {
                "row": 5,
                "column": 30
              },
              "end": {
                "row": 5,
                "column": 31
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 6,
                "column": 24
              },
              "end": {
                "row": 6,
                "column": 31
              },
              "text": "columns"
            },
            {
              "type": ",",
              "start": {
                "row": 6,
                "column": 31
              },
              "end": {
                "row": 6,
                "column": 32
              },
              "text": ","
            },
            {
              "type": "dictionary_splat_pattern",
              "start": {
                "row": 7,
                "column": 24
              },
              "end": {
                "row": 7,
                "column": 32
              },
              "text": "**kwargs",
              "children": [
                {
                  "type": "**",
                  "start": {
                    "row": 7,
                    "column": 24
                  },
                  "end": {
                    "row": 7,
                    "column": 26
                  },
                  "text": "**"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 7,
                    "column": 26
                  },
                  "end": {
                    "row": 7,
                    "column": 32
                  },
                  "text": "kwargs"
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 7,
                "column": 32
              },
              "end": {
                "row": 7,
                "column": 33
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 7,
            "column": 33
          },
          "end": {
            "row": 7,
            "column": 34
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 8,
            "column": 8
          },
          "end": {
            "row": 59,
            "column": 37
          },
          "text": "\"\"\"\n        Creates an AdjustedArray from the given estimates data for the given\n        dates.\n\n        Parameters\n        ----------\n        zero_qtr_data : pd.DataFrame\n            The 'time zero' data for each calendar date per sid.\n        requested_qtr_data : pd.DataFrame\n            The requested quarter data for each calendar date per sid.\n        last_per_qtr : pd.DataFrame\n            A DataFrame with a column MultiIndex of [self.estimates.columns,\n            normalized_quarters, sid] that allows easily getting the timeline\n            of estimates for a particular sid for a particular quarter.\n        dates : pd.DatetimeIndex\n            The calendar dates for which estimates data is requested.\n        assets : pd.Int64Index\n            An index of all the assets from the raw data.\n        columns : list of BoundColumn\n            The columns for which adjustments need to be calculated.\n        kwargs :\n            Additional keyword arguments that should be forwarded to\n            `get_adjustments_for_sid` and to be used in computing adjustments\n            for each sid.\n\n        Returns\n        -------\n        col_to_all_adjustments : dict[int -> AdjustedArray]\n            A dictionary of all adjustments that should be applied.\n        \"\"\"\n\n        zero_qtr_data.sort_index(inplace=True)\n        # Here we want to get the LAST record from each group of records\n        # corresponding to a single quarter. This is to ensure that we select\n        # the most up-to-date event date in case the event date changes.\n        quarter_shifts = zero_qtr_data.groupby(\n            level=[SID_FIELD_NAME, NORMALIZED_QUARTERS]\n        ).nth(-1)\n\n        col_to_all_adjustments = {}\n        sid_to_idx = dict(zip(assets, range(len(assets))))\n        quarter_shifts.groupby(level=SID_FIELD_NAME).apply(\n            self.get_adjustments_for_sid,\n            dates,\n            requested_qtr_data,\n            last_per_qtr,\n            sid_to_idx,\n            columns,\n            col_to_all_adjustments,\n            **kwargs\n        )\n        return col_to_all_adjustments",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 8,
                "column": 8
              },
              "end": {
                "row": 37,
                "column": 11
              },
              "text": "\"\"\"\n        Creates an AdjustedArray from the given estimates data for the given\n        dates.\n\n        Parameters\n        ----------\n        zero_qtr_data : pd.DataFrame\n            The 'time zero' data for each calendar date per sid.\n        requested_qtr_data : pd.DataFrame\n            The requested quarter data for each calendar date per sid.\n        last_per_qtr : pd.DataFrame\n            A DataFrame with a column MultiIndex of [self.estimates.columns,\n            normalized_quarters, sid] that allows easily getting the timeline\n            of estimates for a particular sid for a particular quarter.\n        dates : pd.DatetimeIndex\n            The calendar dates for which estimates data is requested.\n        assets : pd.Int64Index\n            An index of all the assets from the raw data.\n        columns : list of BoundColumn\n            The columns for which adjustments need to be calculated.\n        kwargs :\n            Additional keyword arguments that should be forwarded to\n            `get_adjustments_for_sid` and to be used in computing adjustments\n            for each sid.\n\n        Returns\n        -------\n        col_to_all_adjustments : dict[int -> AdjustedArray]\n            A dictionary of all adjustments that should be applied.\n        \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 8,
                    "column": 8
                  },
                  "end": {
                    "row": 37,
                    "column": 11
                  },
                  "text": "\"\"\"\n        Creates an AdjustedArray from the given estimates data for the given\n        dates.\n\n        Parameters\n        ----------\n        zero_qtr_data : pd.DataFrame\n            The 'time zero' data for each calendar date per sid.\n        requested_qtr_data : pd.DataFrame\n            The requested quarter data for each calendar date per sid.\n        last_per_qtr : pd.DataFrame\n            A DataFrame with a column MultiIndex of [self.estimates.columns,\n            normalized_quarters, sid] that allows easily getting the timeline\n            of estimates for a particular sid for a particular quarter.\n        dates : pd.DatetimeIndex\n            The calendar dates for which estimates data is requested.\n        assets : pd.Int64Index\n            An index of all the assets from the raw data.\n        columns : list of BoundColumn\n            The columns for which adjustments need to be calculated.\n        kwargs :\n            Additional keyword arguments that should be forwarded to\n            `get_adjustments_for_sid` and to be used in computing adjustments\n            for each sid.\n\n        Returns\n        -------\n        col_to_all_adjustments : dict[int -> AdjustedArray]\n            A dictionary of all adjustments that should be applied.\n        \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 8,
                        "column": 8
                      },
                      "end": {
                        "row": 8,
                        "column": 11
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 8,
                        "column": 11
                      },
                      "end": {
                        "row": 37,
                        "column": 8
                      },
                      "text": "\n        Creates an AdjustedArray from the given estimates data for the given\n        dates.\n\n        Parameters\n        ----------\n        zero_qtr_data : pd.DataFrame\n            The 'time zero' data for each calendar date per sid.\n        requested_qtr_data : pd.DataFrame\n            The requested quarter data for each calendar date per sid.\n        last_per_qtr : pd.DataFrame\n            A DataFrame with a column MultiIndex of [self.estimates.columns,\n            normalized_quarters, sid] that allows easily getting the timeline\n            of estimates for a particular sid for a particular quarter.\n        dates : pd.DatetimeIndex\n            The calendar dates for which estimates data is requested.\n        assets : pd.Int64Index\n            An index of all the assets from the raw data.\n        columns : list of BoundColumn\n            The columns for which adjustments need to be calculated.\n        kwargs :\n            Additional keyword arguments that should be forwarded to\n            `get_adjustments_for_sid` and to be used in computing adjustments\n            for each sid.\n\n        Returns\n        -------\n        col_to_all_adjustments : dict[int -> AdjustedArray]\n            A dictionary of all adjustments that should be applied.\n        "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 37,
                        "column": 8
                      },
                      "end": {
                        "row": 37,
                        "column": 11
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 39,
                "column": 8
              },
              "end": {
                "row": 39,
                "column": 46
              },
              "text": "zero_qtr_data.sort_index(inplace=True)",
              "children": [
                {
                  "type": "call",
                  "start": {
                    "row": 39,
                    "column": 8
                  },
                  "end": {
                    "row": 39,
                    "column": 46
                  },
                  "text": "zero_qtr_data.sort_index(inplace=True)",
                  "children": [
                    {
                      "type": "attribute",
                      "start": {
                        "row": 39,
                        "column": 8
                      },
                      "end": {
                        "row": 39,
                        "column": 32
                      },
                      "text": "zero_qtr_data.sort_index",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 39,
                            "column": 8
                          },
                          "end": {
                            "row": 39,
                            "column": 21
                          },
                          "text": "zero_qtr_data"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 39,
                            "column": 21
                          },
                          "end": {
                            "row": 39,
                            "column": 22
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 39,
                            "column": 22
                          },
                          "end": {
                            "row": 39,
                            "column": 32
                          },
                          "text": "sort_index"
                        }
                      ]
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 39,
                        "column": 32
                      },
                      "end": {
                        "row": 39,
                        "column": 46
                      },
                      "text": "(inplace=True)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 39,
                            "column": 32
                          },
                          "end": {
                            "row": 39,
                            "column": 33
                          },
                          "text": "("
                        },
                        {
                          "type": "keyword_argument",
                          "start": {
                            "row": 39,
                            "column": 33
                          },
                          "end": {
                            "row": 39,
                            "column": 45
                          },
                          "text": "inplace=True",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 39,
                                "column": 33
                              },
                              "end": {
                                "row": 39,
                                "column": 40
                              },
                              "text": "inplace"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 39,
                                "column": 40
                              },
                              "end": {
                                "row": 39,
                                "column": 41
                              },
                              "text": "="
                            },
                            {
                              "type": "true",
                              "start": {
                                "row": 39,
                                "column": 41
                              },
                              "end": {
                                "row": 39,
                                "column": 45
                              },
                              "text": "True"
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 39,
                            "column": 45
                          },
                          "end": {
                            "row": 39,
                            "column": 46
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 40,
                "column": 8
              },
              "end": {
                "row": 40,
                "column": 72
              },
              "text": "# Here we want to get the LAST record from each group of records"
            },
            {
              "type": "comment",
              "start": {
                "row": 41,
                "column": 8
              },
              "end": {
                "row": 41,
                "column": 77
              },
              "text": "# corresponding to a single quarter. This is to ensure that we select"
            },
            {
              "type": "comment",
              "start": {
                "row": 42,
                "column": 8
              },
              "end": {
                "row": 42,
                "column": 72
              },
              "text": "# the most up-to-date event date in case the event date changes."
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 43,
                "column": 8
              },
              "end": {
                "row": 45,
                "column": 17
              },
              "text": "quarter_shifts = zero_qtr_data.groupby(\n            level=[SID_FIELD_NAME, NORMALIZED_QUARTERS]\n        ).nth(-1)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 43,
                    "column": 8
                  },
                  "end": {
                    "row": 45,
                    "column": 17
                  },
                  "text": "quarter_shifts = zero_qtr_data.groupby(\n            level=[SID_FIELD_NAME, NORMALIZED_QUARTERS]\n        ).nth(-1)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 43,
                        "column": 8
                      },
                      "end": {
                        "row": 43,
                        "column": 22
                      },
                      "text": "quarter_shifts"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 43,
                        "column": 23
                      },
                      "end": {
                        "row": 43,
                        "column": 24
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 43,
                        "column": 25
                      },
                      "end": {
                        "row": 45,
                        "column": 17
                      },
                      "text": "zero_qtr_data.groupby(\n            level=[SID_FIELD_NAME, NORMALIZED_QUARTERS]\n        ).nth(-1)",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 43,
                            "column": 25
                          },
                          "end": {
                            "row": 45,
                            "column": 13
                          },
                          "text": "zero_qtr_data.groupby(\n            level=[SID_FIELD_NAME, NORMALIZED_QUARTERS]\n        ).nth",
                          "children": [
                            {
                              "type": "call",
                              "start": {
                                "row": 43,
                                "column": 25
                              },
                              "end": {
                                "row": 45,
                                "column": 9
                              },
                              "text": "zero_qtr_data.groupby(\n            level=[SID_FIELD_NAME, NORMALIZED_QUARTERS]\n        )",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 43,
                                    "column": 25
                                  },
                                  "end": {
                                    "row": 43,
                                    "column": 46
                                  },
                                  "text": "zero_qtr_data.groupby",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 43,
                                        "column": 25
                                      },
                                      "end": {
                                        "row": 43,
                                        "column": 38
                                      },
                                      "text": "zero_qtr_data"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 43,
                                        "column": 38
                                      },
                                      "end": {
                                        "row": 43,
                                        "column": 39
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 43,
                                        "column": 39
                                      },
                                      "end": {
                                        "row": 43,
                                        "column": 46
                                      },
                                      "text": "groupby"
                                    }
                                  ]
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 43,
                                    "column": 46
                                  },
                                  "end": {
                                    "row": 45,
                                    "column": 9
                                  },
                                  "text": "(\n            level=[SID_FIELD_NAME, NORMALIZED_QUARTERS]\n        )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 43,
                                        "column": 46
                                      },
                                      "end": {
                                        "row": 43,
                                        "column": 47
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "keyword_argument",
                                      "start": {
                                        "row": 44,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 44,
                                        "column": 55
                                      },
                                      "text": "level=[SID_FIELD_NAME, NORMALIZED_QUARTERS]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 44,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 44,
                                            "column": 17
                                          },
                                          "text": "level"
                                        },
                                        {
                                          "type": "=",
                                          "start": {
                                            "row": 44,
                                            "column": 17
                                          },
                                          "end": {
                                            "row": 44,
                                            "column": 18
                                          },
                                          "text": "="
                                        },
                                        {
                                          "type": "list",
                                          "start": {
                                            "row": 44,
                                            "column": 18
                                          },
                                          "end": {
                                            "row": 44,
                                            "column": 55
                                          },
                                          "text": "[SID_FIELD_NAME, NORMALIZED_QUARTERS]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start": {
                                                "row": 44,
                                                "column": 18
                                              },
                                              "end": {
                                                "row": 44,
                                                "column": 19
                                              },
                                              "text": "["
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 44,
                                                "column": 19
                                              },
                                              "end": {
                                                "row": 44,
                                                "column": 33
                                              },
                                              "text": "SID_FIELD_NAME"
                                            },
                                            {
                                              "type": ",",
                                              "start": {
                                                "row": 44,
                                                "column": 33
                                              },
                                              "end": {
                                                "row": 44,
                                                "column": 34
                                              },
                                              "text": ","
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 44,
                                                "column": 35
                                              },
                                              "end": {
                                                "row": 44,
                                                "column": 54
                                              },
                                              "text": "NORMALIZED_QUARTERS"
                                            },
                                            {
                                              "type": "]",
                                              "start": {
                                                "row": 44,
                                                "column": 54
                                              },
                                              "end": {
                                                "row": 44,
                                                "column": 55
                                              },
                                              "text": "]"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 45,
                                        "column": 8
                                      },
                                      "end": {
                                        "row": 45,
                                        "column": 9
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 45,
                                "column": 9
                              },
                              "end": {
                                "row": 45,
                                "column": 10
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 45,
                                "column": 10
                              },
                              "end": {
                                "row": 45,
                                "column": 13
                              },
                              "text": "nth"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 45,
                            "column": 13
                          },
                          "end": {
                            "row": 45,
                            "column": 17
                          },
                          "text": "(-1)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 45,
                                "column": 13
                              },
                              "end": {
                                "row": 45,
                                "column": 14
                              },
                              "text": "("
                            },
                            {
                              "type": "unary_operator",
                              "start": {
                                "row": 45,
                                "column": 14
                              },
                              "end": {
                                "row": 45,
                                "column": 16
                              },
                              "text": "-1",
                              "children": [
                                {
                                  "type": "-",
                                  "start": {
                                    "row": 45,
                                    "column": 14
                                  },
                                  "end": {
                                    "row": 45,
                                    "column": 15
                                  },
                                  "text": "-"
                                },
                                {
                                  "type": "integer",
                                  "start": {
                                    "row": 45,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 45,
                                    "column": 16
                                  },
                                  "text": "1"
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 45,
                                "column": 16
                              },
                              "end": {
                                "row": 45,
                                "column": 17
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 47,
                "column": 8
              },
              "end": {
                "row": 47,
                "column": 35
              },
              "text": "col_to_all_adjustments = {}",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 47,
                    "column": 8
                  },
                  "end": {
                    "row": 47,
                    "column": 35
                  },
                  "text": "col_to_all_adjustments = {}",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 47,
                        "column": 8
                      },
                      "end": {
                        "row": 47,
                        "column": 30
                      },
                      "text": "col_to_all_adjustments"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 47,
                        "column": 31
                      },
                      "end": {
                        "row": 47,
                        "column": 32
                      },
                      "text": "="
                    },
                    {
                      "type": "dictionary",
                      "start": {
                        "row": 47,
                        "column": 33
                      },
                      "end": {
                        "row": 47,
                        "column": 35
                      },
                      "text": "{}",
                      "children": [
                        {
                          "type": "{",
                          "start": {
                            "row": 47,
                            "column": 33
                          },
                          "end": {
                            "row": 47,
                            "column": 34
                          },
                          "text": "{"
                        },
                        {
                          "type": "}",
                          "start": {
                            "row": 47,
                            "column": 34
                          },
                          "end": {
                            "row": 47,
                            "column": 35
                          },
                          "text": "}"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 48,
                "column": 8
              },
              "end": {
                "row": 48,
                "column": 58
              },
              "text": "sid_to_idx = dict(zip(assets, range(len(assets))))",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 48,
                    "column": 8
                  },
                  "end": {
                    "row": 48,
                    "column": 58
                  },
                  "text": "sid_to_idx = dict(zip(assets, range(len(assets))))",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 48,
                        "column": 8
                      },
                      "end": {
                        "row": 48,
                        "column": 18
                      },
                      "text": "sid_to_idx"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 48,
                        "column": 19
                      },
                      "end": {
                        "row": 48,
                        "column": 20
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 48,
                        "column": 21
                      },
                      "end": {
                        "row": 48,
                        "column": 58
                      },
                      "text": "dict(zip(assets, range(len(assets))))",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 48,
                            "column": 21
                          },
                          "end": {
                            "row": 48,
                            "column": 25
                          },
                          "text": "dict"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 48,
                            "column": 25
                          },
                          "end": {
                            "row": 48,
                            "column": 58
                          },
                          "text": "(zip(assets, range(len(assets))))",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 48,
                                "column": 25
                              },
                              "end": {
                                "row": 48,
                                "column": 26
                              },
                              "text": "("
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 48,
                                "column": 26
                              },
                              "end": {
                                "row": 48,
                                "column": 57
                              },
                              "text": "zip(assets, range(len(assets)))",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 48,
                                    "column": 26
                                  },
                                  "end": {
                                    "row": 48,
                                    "column": 29
                                  },
                                  "text": "zip"
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 48,
                                    "column": 29
                                  },
                                  "end": {
                                    "row": 48,
                                    "column": 57
                                  },
                                  "text": "(assets, range(len(assets)))",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 48,
                                        "column": 29
                                      },
                                      "end": {
                                        "row": 48,
                                        "column": 30
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 48,
                                        "column": 30
                                      },
                                      "end": {
                                        "row": 48,
                                        "column": 36
                                      },
                                      "text": "assets"
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 48,
                                        "column": 36
                                      },
                                      "end": {
                                        "row": 48,
                                        "column": 37
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 48,
                                        "column": 38
                                      },
                                      "end": {
                                        "row": 48,
                                        "column": 56
                                      },
                                      "text": "range(len(assets))",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 48,
                                            "column": 38
                                          },
                                          "end": {
                                            "row": 48,
                                            "column": 43
                                          },
                                          "text": "range"
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 48,
                                            "column": 43
                                          },
                                          "end": {
                                            "row": 48,
                                            "column": 56
                                          },
                                          "text": "(len(assets))",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 48,
                                                "column": 43
                                              },
                                              "end": {
                                                "row": 48,
                                                "column": 44
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "call",
                                              "start": {
                                                "row": 48,
                                                "column": 44
                                              },
                                              "end": {
                                                "row": 48,
                                                "column": 55
                                              },
                                              "text": "len(assets)",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 48,
                                                    "column": 44
                                                  },
                                                  "end": {
                                                    "row": 48,
                                                    "column": 47
                                                  },
                                                  "text": "len"
                                                },
                                                {
                                                  "type": "argument_list",
                                                  "start": {
                                                    "row": 48,
                                                    "column": 47
                                                  },
                                                  "end": {
                                                    "row": 48,
                                                    "column": 55
                                                  },
                                                  "text": "(assets)",
                                                  "children": [
                                                    {
                                                      "type": "(",
                                                      "start": {
                                                        "row": 48,
                                                        "column": 47
                                                      },
                                                      "end": {
                                                        "row": 48,
                                                        "column": 48
                                                      },
                                                      "text": "("
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 48,
                                                        "column": 48
                                                      },
                                                      "end": {
                                                        "row": 48,
                                                        "column": 54
                                                      },
                                                      "text": "assets"
                                                    },
                                                    {
                                                      "type": ")",
                                                      "start": {
                                                        "row": 48,
                                                        "column": 54
                                                      },
                                                      "end": {
                                                        "row": 48,
                                                        "column": 55
                                                      },
                                                      "text": ")"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 48,
                                                "column": 55
                                              },
                                              "end": {
                                                "row": 48,
                                                "column": 56
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 48,
                                        "column": 56
                                      },
                                      "end": {
                                        "row": 48,
                                        "column": 57
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 48,
                                "column": 57
                              },
                              "end": {
                                "row": 48,
                                "column": 58
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 49,
                "column": 8
              },
              "end": {
                "row": 58,
                "column": 9
              },
              "text": "quarter_shifts.groupby(level=SID_FIELD_NAME).apply(\n            self.get_adjustments_for_sid,\n            dates,\n            requested_qtr_data,\n            last_per_qtr,\n            sid_to_idx,\n            columns,\n            col_to_all_adjustments,\n            **kwargs\n        )",
              "children": [
                {
                  "type": "call",
                  "start": {
                    "row": 49,
                    "column": 8
                  },
                  "end": {
                    "row": 58,
                    "column": 9
                  },
                  "text": "quarter_shifts.groupby(level=SID_FIELD_NAME).apply(\n            self.get_adjustments_for_sid,\n            dates,\n            requested_qtr_data,\n            last_per_qtr,\n            sid_to_idx,\n            columns,\n            col_to_all_adjustments,\n            **kwargs\n        )",
                  "children": [
                    {
                      "type": "attribute",
                      "start": {
                        "row": 49,
                        "column": 8
                      },
                      "end": {
                        "row": 49,
                        "column": 58
                      },
                      "text": "quarter_shifts.groupby(level=SID_FIELD_NAME).apply",
                      "children": [
                        {
                          "type": "call",
                          "start": {
                            "row": 49,
                            "column": 8
                          },
                          "end": {
                            "row": 49,
                            "column": 52
                          },
                          "text": "quarter_shifts.groupby(level=SID_FIELD_NAME)",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 49,
                                "column": 8
                              },
                              "end": {
                                "row": 49,
                                "column": 30
                              },
                              "text": "quarter_shifts.groupby",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 49,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 49,
                                    "column": 22
                                  },
                                  "text": "quarter_shifts"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 49,
                                    "column": 22
                                  },
                                  "end": {
                                    "row": 49,
                                    "column": 23
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 49,
                                    "column": 23
                                  },
                                  "end": {
                                    "row": 49,
                                    "column": 30
                                  },
                                  "text": "groupby"
                                }
                              ]
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 49,
                                "column": 30
                              },
                              "end": {
                                "row": 49,
                                "column": 52
                              },
                              "text": "(level=SID_FIELD_NAME)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 49,
                                    "column": 30
                                  },
                                  "end": {
                                    "row": 49,
                                    "column": 31
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "keyword_argument",
                                  "start": {
                                    "row": 49,
                                    "column": 31
                                  },
                                  "end": {
                                    "row": 49,
                                    "column": 51
                                  },
                                  "text": "level=SID_FIELD_NAME",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 49,
                                        "column": 31
                                      },
                                      "end": {
                                        "row": 49,
                                        "column": 36
                                      },
                                      "text": "level"
                                    },
                                    {
                                      "type": "=",
                                      "start": {
                                        "row": 49,
                                        "column": 36
                                      },
                                      "end": {
                                        "row": 49,
                                        "column": 37
                                      },
                                      "text": "="
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 49,
                                        "column": 37
                                      },
                                      "end": {
                                        "row": 49,
                                        "column": 51
                                      },
                                      "text": "SID_FIELD_NAME"
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 49,
                                    "column": 51
                                  },
                                  "end": {
                                    "row": 49,
                                    "column": 52
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 49,
                            "column": 52
                          },
                          "end": {
                            "row": 49,
                            "column": 53
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 49,
                            "column": 53
                          },
                          "end": {
                            "row": 49,
                            "column": 58
                          },
                          "text": "apply"
                        }
                      ]
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 49,
                        "column": 58
                      },
                      "end": {
                        "row": 58,
                        "column": 9
                      },
                      "text": "(\n            self.get_adjustments_for_sid,\n            dates,\n            requested_qtr_data,\n            last_per_qtr,\n            sid_to_idx,\n            columns,\n            col_to_all_adjustments,\n            **kwargs\n        )",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 49,
                            "column": 58
                          },
                          "end": {
                            "row": 49,
                            "column": 59
                          },
                          "text": "("
                        },
                        {
                          "type": "attribute",
                          "start": {
                            "row": 50,
                            "column": 12
                          },
                          "end": {
                            "row": 50,
                            "column": 40
                          },
                          "text": "self.get_adjustments_for_sid",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 50,
                                "column": 12
                              },
                              "end": {
                                "row": 50,
                                "column": 16
                              },
                              "text": "self"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 50,
                                "column": 16
                              },
                              "end": {
                                "row": 50,
                                "column": 17
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 50,
                                "column": 17
                              },
                              "end": {
                                "row": 50,
                                "column": 40
                              },
                              "text": "get_adjustments_for_sid"
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 50,
                            "column": 40
                          },
                          "end": {
                            "row": 50,
                            "column": 41
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 51,
                            "column": 12
                          },
                          "end": {
                            "row": 51,
                            "column": 17
                          },
                          "text": "dates"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 51,
                            "column": 17
                          },
                          "end": {
                            "row": 51,
                            "column": 18
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 52,
                            "column": 12
                          },
                          "end": {
                            "row": 52,
                            "column": 30
                          },
                          "text": "requested_qtr_data"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 52,
                            "column": 30
                          },
                          "end": {
                            "row": 52,
                            "column": 31
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 53,
                            "column": 12
                          },
                          "end": {
                            "row": 53,
                            "column": 24
                          },
                          "text": "last_per_qtr"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 53,
                            "column": 24
                          },
                          "end": {
                            "row": 53,
                            "column": 25
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 54,
                            "column": 12
                          },
                          "end": {
                            "row": 54,
                            "column": 22
                          },
                          "text": "sid_to_idx"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 54,
                            "column": 22
                          },
                          "end": {
                            "row": 54,
                            "column": 23
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 55,
                            "column": 12
                          },
                          "end": {
                            "row": 55,
                            "column": 19
                          },
                          "text": "columns"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 55,
                            "column": 19
                          },
                          "end": {
                            "row": 55,
                            "column": 20
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 56,
                            "column": 12
                          },
                          "end": {
                            "row": 56,
                            "column": 34
                          },
                          "text": "col_to_all_adjustments"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 56,
                            "column": 34
                          },
                          "end": {
                            "row": 56,
                            "column": 35
                          },
                          "text": ","
                        },
                        {
                          "type": "dictionary_splat",
                          "start": {
                            "row": 57,
                            "column": 12
                          },
                          "end": {
                            "row": 57,
                            "column": 20
                          },
                          "text": "**kwargs",
                          "children": [
                            {
                              "type": "**",
                              "start": {
                                "row": 57,
                                "column": 12
                              },
                              "end": {
                                "row": 57,
                                "column": 14
                              },
                              "text": "**"
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 57,
                                "column": 14
                              },
                              "end": {
                                "row": 57,
                                "column": 20
                              },
                              "text": "kwargs"
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 58,
                            "column": 8
                          },
                          "end": {
                            "row": 58,
                            "column": 9
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 59,
                "column": 8
              },
              "end": {
                "row": 59,
                "column": 37
              },
              "text": "return col_to_all_adjustments",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 59,
                    "column": 8
                  },
                  "end": {
                    "row": 59,
                    "column": 14
                  },
                  "text": "return"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 59,
                    "column": 15
                  },
                  "end": {
                    "row": 59,
                    "column": 37
                  },
                  "text": "col_to_all_adjustments"
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}