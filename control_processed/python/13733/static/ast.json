{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 68,
    "column": 13
  },
  "text": "def _check_dataset(self, features, target, sample_weight=None):\n        \"\"\"Check if a dataset has a valid feature set and labels.\n\n        Parameters\n        ----------\n        features: array-like {n_samples, n_features}\n            Feature matrix\n        target: array-like {n_samples} or None\n            List of class labels for prediction\n        sample_weight: array-like {n_samples} (optional)\n            List of weights indicating relative importance\n        Returns\n        -------\n        (features, target)\n        \"\"\"\n        # Check sample_weight\n        if sample_weight is not None:\n            try: sample_weight = np.array(sample_weight).astype('float')\n            except ValueError as e:\n                raise ValueError('sample_weight could not be converted to float array: %s' % e)\n            if np.any(np.isnan(sample_weight)):\n                raise ValueError('sample_weight contained NaN values.')\n            try: check_consistent_length(sample_weight, target)\n            except ValueError as e:\n                raise ValueError('sample_weight dimensions did not match target: %s' % e)\n\n        # If features is a sparse matrix, do not apply imputation\n        if sparse.issparse(features):\n            if self.config_dict in [None, \"TPOT light\", \"TPOT MDR\"]:\n                raise ValueError(\n                    'Not all operators in {} supports sparse matrix. '\n                    'Please use \\\"TPOT sparse\\\" for sparse matrix.'.format(self.config_dict)\n                )\n            elif self.config_dict != \"TPOT sparse\":\n                print(\n                    'Warning: Since the input matrix is a sparse matrix, please makes sure all the operators in the '\n                    'customized config dictionary supports sparse matriies.'\n                )\n        else:\n            if isinstance(features, np.ndarray):\n                if np.any(np.isnan(features)):\n                    self._imputed = True\n            elif isinstance(features, DataFrame):\n                if features.isnull().values.any():\n                    self._imputed = True\n\n            if self._imputed:\n                features = self._impute_values(features)\n\n        try:\n            if target is not None:\n                X, y = check_X_y(features, target, accept_sparse=True, dtype=None)\n                if self._imputed:\n                    return X, y\n                else:\n                    return features, target\n            else:\n                X = check_array(features, accept_sparse=True, dtype=None)\n                if self._imputed:\n                    return X\n                else:\n                    return features\n        except (AssertionError, ValueError):\n            raise ValueError(\n                'Error: Input data is not in a valid format. Please confirm '\n                'that the input data is scikit-learn compatible. For example, '\n                'the features must be a 2-D array and target labels must be a '\n                '1-D array.'\n            )",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 68,
        "column": 13
      },
      "text": "def _check_dataset(self, features, target, sample_weight=None):\n        \"\"\"Check if a dataset has a valid feature set and labels.\n\n        Parameters\n        ----------\n        features: array-like {n_samples, n_features}\n            Feature matrix\n        target: array-like {n_samples} or None\n            List of class labels for prediction\n        sample_weight: array-like {n_samples} (optional)\n            List of weights indicating relative importance\n        Returns\n        -------\n        (features, target)\n        \"\"\"\n        # Check sample_weight\n        if sample_weight is not None:\n            try: sample_weight = np.array(sample_weight).astype('float')\n            except ValueError as e:\n                raise ValueError('sample_weight could not be converted to float array: %s' % e)\n            if np.any(np.isnan(sample_weight)):\n                raise ValueError('sample_weight contained NaN values.')\n            try: check_consistent_length(sample_weight, target)\n            except ValueError as e:\n                raise ValueError('sample_weight dimensions did not match target: %s' % e)\n\n        # If features is a sparse matrix, do not apply imputation\n        if sparse.issparse(features):\n            if self.config_dict in [None, \"TPOT light\", \"TPOT MDR\"]:\n                raise ValueError(\n                    'Not all operators in {} supports sparse matrix. '\n                    'Please use \\\"TPOT sparse\\\" for sparse matrix.'.format(self.config_dict)\n                )\n            elif self.config_dict != \"TPOT sparse\":\n                print(\n                    'Warning: Since the input matrix is a sparse matrix, please makes sure all the operators in the '\n                    'customized config dictionary supports sparse matriies.'\n                )\n        else:\n            if isinstance(features, np.ndarray):\n                if np.any(np.isnan(features)):\n                    self._imputed = True\n            elif isinstance(features, DataFrame):\n                if features.isnull().values.any():\n                    self._imputed = True\n\n            if self._imputed:\n                features = self._impute_values(features)\n\n        try:\n            if target is not None:\n                X, y = check_X_y(features, target, accept_sparse=True, dtype=None)\n                if self._imputed:\n                    return X, y\n                else:\n                    return features, target\n            else:\n                X = check_array(features, accept_sparse=True, dtype=None)\n                if self._imputed:\n                    return X\n                else:\n                    return features\n        except (AssertionError, ValueError):\n            raise ValueError(\n                'Error: Input data is not in a valid format. Please confirm '\n                'that the input data is scikit-learn compatible. For example, '\n                'the features must be a 2-D array and target labels must be a '\n                '1-D array.'\n            )",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 18
          },
          "text": "_check_dataset"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 18
          },
          "end": {
            "row": 0,
            "column": 62
          },
          "text": "(self, features, target, sample_weight=None)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 18
              },
              "end": {
                "row": 0,
                "column": 19
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 19
              },
              "end": {
                "row": 0,
                "column": 23
              },
              "text": "self"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 23
              },
              "end": {
                "row": 0,
                "column": 24
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 25
              },
              "end": {
                "row": 0,
                "column": 33
              },
              "text": "features"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 33
              },
              "end": {
                "row": 0,
                "column": 34
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 35
              },
              "end": {
                "row": 0,
                "column": 41
              },
              "text": "target"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 41
              },
              "end": {
                "row": 0,
                "column": 42
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 0,
                "column": 43
              },
              "end": {
                "row": 0,
                "column": 61
              },
              "text": "sample_weight=None",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 43
                  },
                  "end": {
                    "row": 0,
                    "column": 56
                  },
                  "text": "sample_weight"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 0,
                    "column": 56
                  },
                  "end": {
                    "row": 0,
                    "column": 57
                  },
                  "text": "="
                },
                {
                  "type": "none",
                  "start": {
                    "row": 0,
                    "column": 57
                  },
                  "end": {
                    "row": 0,
                    "column": 61
                  },
                  "text": "None"
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 61
              },
              "end": {
                "row": 0,
                "column": 62
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 62
          },
          "end": {
            "row": 0,
            "column": 63
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 8
          },
          "end": {
            "row": 68,
            "column": 13
          },
          "text": "\"\"\"Check if a dataset has a valid feature set and labels.\n\n        Parameters\n        ----------\n        features: array-like {n_samples, n_features}\n            Feature matrix\n        target: array-like {n_samples} or None\n            List of class labels for prediction\n        sample_weight: array-like {n_samples} (optional)\n            List of weights indicating relative importance\n        Returns\n        -------\n        (features, target)\n        \"\"\"\n        # Check sample_weight\n        if sample_weight is not None:\n            try: sample_weight = np.array(sample_weight).astype('float')\n            except ValueError as e:\n                raise ValueError('sample_weight could not be converted to float array: %s' % e)\n            if np.any(np.isnan(sample_weight)):\n                raise ValueError('sample_weight contained NaN values.')\n            try: check_consistent_length(sample_weight, target)\n            except ValueError as e:\n                raise ValueError('sample_weight dimensions did not match target: %s' % e)\n\n        # If features is a sparse matrix, do not apply imputation\n        if sparse.issparse(features):\n            if self.config_dict in [None, \"TPOT light\", \"TPOT MDR\"]:\n                raise ValueError(\n                    'Not all operators in {} supports sparse matrix. '\n                    'Please use \\\"TPOT sparse\\\" for sparse matrix.'.format(self.config_dict)\n                )\n            elif self.config_dict != \"TPOT sparse\":\n                print(\n                    'Warning: Since the input matrix is a sparse matrix, please makes sure all the operators in the '\n                    'customized config dictionary supports sparse matriies.'\n                )\n        else:\n            if isinstance(features, np.ndarray):\n                if np.any(np.isnan(features)):\n                    self._imputed = True\n            elif isinstance(features, DataFrame):\n                if features.isnull().values.any():\n                    self._imputed = True\n\n            if self._imputed:\n                features = self._impute_values(features)\n\n        try:\n            if target is not None:\n                X, y = check_X_y(features, target, accept_sparse=True, dtype=None)\n                if self._imputed:\n                    return X, y\n                else:\n                    return features, target\n            else:\n                X = check_array(features, accept_sparse=True, dtype=None)\n                if self._imputed:\n                    return X\n                else:\n                    return features\n        except (AssertionError, ValueError):\n            raise ValueError(\n                'Error: Input data is not in a valid format. Please confirm '\n                'that the input data is scikit-learn compatible. For example, '\n                'the features must be a 2-D array and target labels must be a '\n                '1-D array.'\n            )",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 8
              },
              "end": {
                "row": 14,
                "column": 11
              },
              "text": "\"\"\"Check if a dataset has a valid feature set and labels.\n\n        Parameters\n        ----------\n        features: array-like {n_samples, n_features}\n            Feature matrix\n        target: array-like {n_samples} or None\n            List of class labels for prediction\n        sample_weight: array-like {n_samples} (optional)\n            List of weights indicating relative importance\n        Returns\n        -------\n        (features, target)\n        \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 8
                  },
                  "end": {
                    "row": 14,
                    "column": 11
                  },
                  "text": "\"\"\"Check if a dataset has a valid feature set and labels.\n\n        Parameters\n        ----------\n        features: array-like {n_samples, n_features}\n            Feature matrix\n        target: array-like {n_samples} or None\n            List of class labels for prediction\n        sample_weight: array-like {n_samples} (optional)\n            List of weights indicating relative importance\n        Returns\n        -------\n        (features, target)\n        \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 8
                      },
                      "end": {
                        "row": 1,
                        "column": 11
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 11
                      },
                      "end": {
                        "row": 14,
                        "column": 8
                      },
                      "text": "Check if a dataset has a valid feature set and labels.\n\n        Parameters\n        ----------\n        features: array-like {n_samples, n_features}\n            Feature matrix\n        target: array-like {n_samples} or None\n            List of class labels for prediction\n        sample_weight: array-like {n_samples} (optional)\n            List of weights indicating relative importance\n        Returns\n        -------\n        (features, target)\n        "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 14,
                        "column": 8
                      },
                      "end": {
                        "row": 14,
                        "column": 11
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 15,
                "column": 8
              },
              "end": {
                "row": 15,
                "column": 29
              },
              "text": "# Check sample_weight"
            },
            {
              "type": "if_statement",
              "start": {
                "row": 16,
                "column": 8
              },
              "end": {
                "row": 24,
                "column": 89
              },
              "text": "if sample_weight is not None:\n            try: sample_weight = np.array(sample_weight).astype('float')\n            except ValueError as e:\n                raise ValueError('sample_weight could not be converted to float array: %s' % e)\n            if np.any(np.isnan(sample_weight)):\n                raise ValueError('sample_weight contained NaN values.')\n            try: check_consistent_length(sample_weight, target)\n            except ValueError as e:\n                raise ValueError('sample_weight dimensions did not match target: %s' % e)",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 16,
                    "column": 8
                  },
                  "end": {
                    "row": 16,
                    "column": 10
                  },
                  "text": "if"
                },
                {
                  "type": "comparison_operator",
                  "start": {
                    "row": 16,
                    "column": 11
                  },
                  "end": {
                    "row": 16,
                    "column": 36
                  },
                  "text": "sample_weight is not None",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 16,
                        "column": 11
                      },
                      "end": {
                        "row": 16,
                        "column": 24
                      },
                      "text": "sample_weight"
                    },
                    {
                      "type": "is not",
                      "start": {
                        "row": 16,
                        "column": 25
                      },
                      "end": {
                        "row": 16,
                        "column": 27
                      },
                      "text": "is"
                    },
                    {
                      "type": "is not",
                      "start": {
                        "row": 16,
                        "column": 28
                      },
                      "end": {
                        "row": 16,
                        "column": 31
                      },
                      "text": "not"
                    },
                    {
                      "type": "none",
                      "start": {
                        "row": 16,
                        "column": 32
                      },
                      "end": {
                        "row": 16,
                        "column": 36
                      },
                      "text": "None"
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 16,
                    "column": 36
                  },
                  "end": {
                    "row": 16,
                    "column": 37
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 17,
                    "column": 12
                  },
                  "end": {
                    "row": 24,
                    "column": 89
                  },
                  "text": "try: sample_weight = np.array(sample_weight).astype('float')\n            except ValueError as e:\n                raise ValueError('sample_weight could not be converted to float array: %s' % e)\n            if np.any(np.isnan(sample_weight)):\n                raise ValueError('sample_weight contained NaN values.')\n            try: check_consistent_length(sample_weight, target)\n            except ValueError as e:\n                raise ValueError('sample_weight dimensions did not match target: %s' % e)",
                  "children": [
                    {
                      "type": "try_statement",
                      "start": {
                        "row": 17,
                        "column": 12
                      },
                      "end": {
                        "row": 19,
                        "column": 95
                      },
                      "text": "try: sample_weight = np.array(sample_weight).astype('float')\n            except ValueError as e:\n                raise ValueError('sample_weight could not be converted to float array: %s' % e)",
                      "children": [
                        {
                          "type": "try",
                          "start": {
                            "row": 17,
                            "column": 12
                          },
                          "end": {
                            "row": 17,
                            "column": 15
                          },
                          "text": "try"
                        },
                        {
                          "type": ":",
                          "start": {
                            "row": 17,
                            "column": 15
                          },
                          "end": {
                            "row": 17,
                            "column": 16
                          },
                          "text": ":"
                        },
                        {
                          "type": "block",
                          "start": {
                            "row": 17,
                            "column": 17
                          },
                          "end": {
                            "row": 17,
                            "column": 72
                          },
                          "text": "sample_weight = np.array(sample_weight).astype('float')",
                          "children": [
                            {
                              "type": "expression_statement",
                              "start": {
                                "row": 17,
                                "column": 17
                              },
                              "end": {
                                "row": 17,
                                "column": 72
                              },
                              "text": "sample_weight = np.array(sample_weight).astype('float')",
                              "children": [
                                {
                                  "type": "assignment",
                                  "start": {
                                    "row": 17,
                                    "column": 17
                                  },
                                  "end": {
                                    "row": 17,
                                    "column": 72
                                  },
                                  "text": "sample_weight = np.array(sample_weight).astype('float')",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 17,
                                        "column": 17
                                      },
                                      "end": {
                                        "row": 17,
                                        "column": 30
                                      },
                                      "text": "sample_weight"
                                    },
                                    {
                                      "type": "=",
                                      "start": {
                                        "row": 17,
                                        "column": 31
                                      },
                                      "end": {
                                        "row": 17,
                                        "column": 32
                                      },
                                      "text": "="
                                    },
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 17,
                                        "column": 33
                                      },
                                      "end": {
                                        "row": 17,
                                        "column": 72
                                      },
                                      "text": "np.array(sample_weight).astype('float')",
                                      "children": [
                                        {
                                          "type": "attribute",
                                          "start": {
                                            "row": 17,
                                            "column": 33
                                          },
                                          "end": {
                                            "row": 17,
                                            "column": 63
                                          },
                                          "text": "np.array(sample_weight).astype",
                                          "children": [
                                            {
                                              "type": "call",
                                              "start": {
                                                "row": 17,
                                                "column": 33
                                              },
                                              "end": {
                                                "row": 17,
                                                "column": 56
                                              },
                                              "text": "np.array(sample_weight)",
                                              "children": [
                                                {
                                                  "type": "attribute",
                                                  "start": {
                                                    "row": 17,
                                                    "column": 33
                                                  },
                                                  "end": {
                                                    "row": 17,
                                                    "column": 41
                                                  },
                                                  "text": "np.array",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 17,
                                                        "column": 33
                                                      },
                                                      "end": {
                                                        "row": 17,
                                                        "column": 35
                                                      },
                                                      "text": "np"
                                                    },
                                                    {
                                                      "type": ".",
                                                      "start": {
                                                        "row": 17,
                                                        "column": 35
                                                      },
                                                      "end": {
                                                        "row": 17,
                                                        "column": 36
                                                      },
                                                      "text": "."
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 17,
                                                        "column": 36
                                                      },
                                                      "end": {
                                                        "row": 17,
                                                        "column": 41
                                                      },
                                                      "text": "array"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "argument_list",
                                                  "start": {
                                                    "row": 17,
                                                    "column": 41
                                                  },
                                                  "end": {
                                                    "row": 17,
                                                    "column": 56
                                                  },
                                                  "text": "(sample_weight)",
                                                  "children": [
                                                    {
                                                      "type": "(",
                                                      "start": {
                                                        "row": 17,
                                                        "column": 41
                                                      },
                                                      "end": {
                                                        "row": 17,
                                                        "column": 42
                                                      },
                                                      "text": "("
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 17,
                                                        "column": 42
                                                      },
                                                      "end": {
                                                        "row": 17,
                                                        "column": 55
                                                      },
                                                      "text": "sample_weight"
                                                    },
                                                    {
                                                      "type": ")",
                                                      "start": {
                                                        "row": 17,
                                                        "column": 55
                                                      },
                                                      "end": {
                                                        "row": 17,
                                                        "column": 56
                                                      },
                                                      "text": ")"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 17,
                                                "column": 56
                                              },
                                              "end": {
                                                "row": 17,
                                                "column": 57
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 17,
                                                "column": 57
                                              },
                                              "end": {
                                                "row": 17,
                                                "column": 63
                                              },
                                              "text": "astype"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 17,
                                            "column": 63
                                          },
                                          "end": {
                                            "row": 17,
                                            "column": 72
                                          },
                                          "text": "('float')",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 17,
                                                "column": 63
                                              },
                                              "end": {
                                                "row": 17,
                                                "column": 64
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "string",
                                              "start": {
                                                "row": 17,
                                                "column": 64
                                              },
                                              "end": {
                                                "row": 17,
                                                "column": 71
                                              },
                                              "text": "'float'",
                                              "children": [
                                                {
                                                  "type": "string_start",
                                                  "start": {
                                                    "row": 17,
                                                    "column": 64
                                                  },
                                                  "end": {
                                                    "row": 17,
                                                    "column": 65
                                                  },
                                                  "text": "'"
                                                },
                                                {
                                                  "type": "string_content",
                                                  "start": {
                                                    "row": 17,
                                                    "column": 65
                                                  },
                                                  "end": {
                                                    "row": 17,
                                                    "column": 70
                                                  },
                                                  "text": "float"
                                                },
                                                {
                                                  "type": "string_end",
                                                  "start": {
                                                    "row": 17,
                                                    "column": 70
                                                  },
                                                  "end": {
                                                    "row": 17,
                                                    "column": 71
                                                  },
                                                  "text": "'"
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 17,
                                                "column": 71
                                              },
                                              "end": {
                                                "row": 17,
                                                "column": 72
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "except_clause",
                          "start": {
                            "row": 18,
                            "column": 12
                          },
                          "end": {
                            "row": 19,
                            "column": 95
                          },
                          "text": "except ValueError as e:\n                raise ValueError('sample_weight could not be converted to float array: %s' % e)",
                          "children": [
                            {
                              "type": "except",
                              "start": {
                                "row": 18,
                                "column": 12
                              },
                              "end": {
                                "row": 18,
                                "column": 18
                              },
                              "text": "except"
                            },
                            {
                              "type": "as_pattern",
                              "start": {
                                "row": 18,
                                "column": 19
                              },
                              "end": {
                                "row": 18,
                                "column": 34
                              },
                              "text": "ValueError as e",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 18,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 18,
                                    "column": 29
                                  },
                                  "text": "ValueError"
                                },
                                {
                                  "type": "as",
                                  "start": {
                                    "row": 18,
                                    "column": 30
                                  },
                                  "end": {
                                    "row": 18,
                                    "column": 32
                                  },
                                  "text": "as"
                                },
                                {
                                  "type": "as_pattern_target",
                                  "start": {
                                    "row": 18,
                                    "column": 33
                                  },
                                  "end": {
                                    "row": 18,
                                    "column": 34
                                  },
                                  "text": "e",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 18,
                                        "column": 33
                                      },
                                      "end": {
                                        "row": 18,
                                        "column": 34
                                      },
                                      "text": "e"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ":",
                              "start": {
                                "row": 18,
                                "column": 34
                              },
                              "end": {
                                "row": 18,
                                "column": 35
                              },
                              "text": ":"
                            },
                            {
                              "type": "block",
                              "start": {
                                "row": 19,
                                "column": 16
                              },
                              "end": {
                                "row": 19,
                                "column": 95
                              },
                              "text": "raise ValueError('sample_weight could not be converted to float array: %s' % e)",
                              "children": [
                                {
                                  "type": "raise_statement",
                                  "start": {
                                    "row": 19,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 19,
                                    "column": 95
                                  },
                                  "text": "raise ValueError('sample_weight could not be converted to float array: %s' % e)",
                                  "children": [
                                    {
                                      "type": "raise",
                                      "start": {
                                        "row": 19,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 19,
                                        "column": 21
                                      },
                                      "text": "raise"
                                    },
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 19,
                                        "column": 22
                                      },
                                      "end": {
                                        "row": 19,
                                        "column": 95
                                      },
                                      "text": "ValueError('sample_weight could not be converted to float array: %s' % e)",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 19,
                                            "column": 22
                                          },
                                          "end": {
                                            "row": 19,
                                            "column": 32
                                          },
                                          "text": "ValueError"
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 19,
                                            "column": 32
                                          },
                                          "end": {
                                            "row": 19,
                                            "column": 95
                                          },
                                          "text": "('sample_weight could not be converted to float array: %s' % e)",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 19,
                                                "column": 32
                                              },
                                              "end": {
                                                "row": 19,
                                                "column": 33
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "binary_operator",
                                              "start": {
                                                "row": 19,
                                                "column": 33
                                              },
                                              "end": {
                                                "row": 19,
                                                "column": 94
                                              },
                                              "text": "'sample_weight could not be converted to float array: %s' % e",
                                              "children": [
                                                {
                                                  "type": "string",
                                                  "start": {
                                                    "row": 19,
                                                    "column": 33
                                                  },
                                                  "end": {
                                                    "row": 19,
                                                    "column": 90
                                                  },
                                                  "text": "'sample_weight could not be converted to float array: %s'",
                                                  "children": [
                                                    {
                                                      "type": "string_start",
                                                      "start": {
                                                        "row": 19,
                                                        "column": 33
                                                      },
                                                      "end": {
                                                        "row": 19,
                                                        "column": 34
                                                      },
                                                      "text": "'"
                                                    },
                                                    {
                                                      "type": "string_content",
                                                      "start": {
                                                        "row": 19,
                                                        "column": 34
                                                      },
                                                      "end": {
                                                        "row": 19,
                                                        "column": 89
                                                      },
                                                      "text": "sample_weight could not be converted to float array: %s"
                                                    },
                                                    {
                                                      "type": "string_end",
                                                      "start": {
                                                        "row": 19,
                                                        "column": 89
                                                      },
                                                      "end": {
                                                        "row": 19,
                                                        "column": 90
                                                      },
                                                      "text": "'"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "%",
                                                  "start": {
                                                    "row": 19,
                                                    "column": 91
                                                  },
                                                  "end": {
                                                    "row": 19,
                                                    "column": 92
                                                  },
                                                  "text": "%"
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 19,
                                                    "column": 93
                                                  },
                                                  "end": {
                                                    "row": 19,
                                                    "column": 94
                                                  },
                                                  "text": "e"
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 19,
                                                "column": 94
                                              },
                                              "end": {
                                                "row": 19,
                                                "column": 95
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "if_statement",
                      "start": {
                        "row": 20,
                        "column": 12
                      },
                      "end": {
                        "row": 21,
                        "column": 71
                      },
                      "text": "if np.any(np.isnan(sample_weight)):\n                raise ValueError('sample_weight contained NaN values.')",
                      "children": [
                        {
                          "type": "if",
                          "start": {
                            "row": 20,
                            "column": 12
                          },
                          "end": {
                            "row": 20,
                            "column": 14
                          },
                          "text": "if"
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 20,
                            "column": 15
                          },
                          "end": {
                            "row": 20,
                            "column": 46
                          },
                          "text": "np.any(np.isnan(sample_weight))",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 20,
                                "column": 15
                              },
                              "end": {
                                "row": 20,
                                "column": 21
                              },
                              "text": "np.any",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 20,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 20,
                                    "column": 17
                                  },
                                  "text": "np"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 20,
                                    "column": 17
                                  },
                                  "end": {
                                    "row": 20,
                                    "column": 18
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 20,
                                    "column": 18
                                  },
                                  "end": {
                                    "row": 20,
                                    "column": 21
                                  },
                                  "text": "any"
                                }
                              ]
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 20,
                                "column": 21
                              },
                              "end": {
                                "row": 20,
                                "column": 46
                              },
                              "text": "(np.isnan(sample_weight))",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 20,
                                    "column": 21
                                  },
                                  "end": {
                                    "row": 20,
                                    "column": 22
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "call",
                                  "start": {
                                    "row": 20,
                                    "column": 22
                                  },
                                  "end": {
                                    "row": 20,
                                    "column": 45
                                  },
                                  "text": "np.isnan(sample_weight)",
                                  "children": [
                                    {
                                      "type": "attribute",
                                      "start": {
                                        "row": 20,
                                        "column": 22
                                      },
                                      "end": {
                                        "row": 20,
                                        "column": 30
                                      },
                                      "text": "np.isnan",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 20,
                                            "column": 22
                                          },
                                          "end": {
                                            "row": 20,
                                            "column": 24
                                          },
                                          "text": "np"
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 20,
                                            "column": 24
                                          },
                                          "end": {
                                            "row": 20,
                                            "column": 25
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 20,
                                            "column": 25
                                          },
                                          "end": {
                                            "row": 20,
                                            "column": 30
                                          },
                                          "text": "isnan"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "argument_list",
                                      "start": {
                                        "row": 20,
                                        "column": 30
                                      },
                                      "end": {
                                        "row": 20,
                                        "column": 45
                                      },
                                      "text": "(sample_weight)",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 20,
                                            "column": 30
                                          },
                                          "end": {
                                            "row": 20,
                                            "column": 31
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 20,
                                            "column": 31
                                          },
                                          "end": {
                                            "row": 20,
                                            "column": 44
                                          },
                                          "text": "sample_weight"
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 20,
                                            "column": 44
                                          },
                                          "end": {
                                            "row": 20,
                                            "column": 45
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 20,
                                    "column": 45
                                  },
                                  "end": {
                                    "row": 20,
                                    "column": 46
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ":",
                          "start": {
                            "row": 20,
                            "column": 46
                          },
                          "end": {
                            "row": 20,
                            "column": 47
                          },
                          "text": ":"
                        },
                        {
                          "type": "block",
                          "start": {
                            "row": 21,
                            "column": 16
                          },
                          "end": {
                            "row": 21,
                            "column": 71
                          },
                          "text": "raise ValueError('sample_weight contained NaN values.')",
                          "children": [
                            {
                              "type": "raise_statement",
                              "start": {
                                "row": 21,
                                "column": 16
                              },
                              "end": {
                                "row": 21,
                                "column": 71
                              },
                              "text": "raise ValueError('sample_weight contained NaN values.')",
                              "children": [
                                {
                                  "type": "raise",
                                  "start": {
                                    "row": 21,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 21,
                                    "column": 21
                                  },
                                  "text": "raise"
                                },
                                {
                                  "type": "call",
                                  "start": {
                                    "row": 21,
                                    "column": 22
                                  },
                                  "end": {
                                    "row": 21,
                                    "column": 71
                                  },
                                  "text": "ValueError('sample_weight contained NaN values.')",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 21,
                                        "column": 22
                                      },
                                      "end": {
                                        "row": 21,
                                        "column": 32
                                      },
                                      "text": "ValueError"
                                    },
                                    {
                                      "type": "argument_list",
                                      "start": {
                                        "row": 21,
                                        "column": 32
                                      },
                                      "end": {
                                        "row": 21,
                                        "column": 71
                                      },
                                      "text": "('sample_weight contained NaN values.')",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 21,
                                            "column": 32
                                          },
                                          "end": {
                                            "row": 21,
                                            "column": 33
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "string",
                                          "start": {
                                            "row": 21,
                                            "column": 33
                                          },
                                          "end": {
                                            "row": 21,
                                            "column": 70
                                          },
                                          "text": "'sample_weight contained NaN values.'",
                                          "children": [
                                            {
                                              "type": "string_start",
                                              "start": {
                                                "row": 21,
                                                "column": 33
                                              },
                                              "end": {
                                                "row": 21,
                                                "column": 34
                                              },
                                              "text": "'"
                                            },
                                            {
                                              "type": "string_content",
                                              "start": {
                                                "row": 21,
                                                "column": 34
                                              },
                                              "end": {
                                                "row": 21,
                                                "column": 69
                                              },
                                              "text": "sample_weight contained NaN values."
                                            },
                                            {
                                              "type": "string_end",
                                              "start": {
                                                "row": 21,
                                                "column": 69
                                              },
                                              "end": {
                                                "row": 21,
                                                "column": 70
                                              },
                                              "text": "'"
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 21,
                                            "column": 70
                                          },
                                          "end": {
                                            "row": 21,
                                            "column": 71
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "try_statement",
                      "start": {
                        "row": 22,
                        "column": 12
                      },
                      "end": {
                        "row": 24,
                        "column": 89
                      },
                      "text": "try: check_consistent_length(sample_weight, target)\n            except ValueError as e:\n                raise ValueError('sample_weight dimensions did not match target: %s' % e)",
                      "children": [
                        {
                          "type": "try",
                          "start": {
                            "row": 22,
                            "column": 12
                          },
                          "end": {
                            "row": 22,
                            "column": 15
                          },
                          "text": "try"
                        },
                        {
                          "type": ":",
                          "start": {
                            "row": 22,
                            "column": 15
                          },
                          "end": {
                            "row": 22,
                            "column": 16
                          },
                          "text": ":"
                        },
                        {
                          "type": "block",
                          "start": {
                            "row": 22,
                            "column": 17
                          },
                          "end": {
                            "row": 22,
                            "column": 63
                          },
                          "text": "check_consistent_length(sample_weight, target)",
                          "children": [
                            {
                              "type": "expression_statement",
                              "start": {
                                "row": 22,
                                "column": 17
                              },
                              "end": {
                                "row": 22,
                                "column": 63
                              },
                              "text": "check_consistent_length(sample_weight, target)",
                              "children": [
                                {
                                  "type": "call",
                                  "start": {
                                    "row": 22,
                                    "column": 17
                                  },
                                  "end": {
                                    "row": 22,
                                    "column": 63
                                  },
                                  "text": "check_consistent_length(sample_weight, target)",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 22,
                                        "column": 17
                                      },
                                      "end": {
                                        "row": 22,
                                        "column": 40
                                      },
                                      "text": "check_consistent_length"
                                    },
                                    {
                                      "type": "argument_list",
                                      "start": {
                                        "row": 22,
                                        "column": 40
                                      },
                                      "end": {
                                        "row": 22,
                                        "column": 63
                                      },
                                      "text": "(sample_weight, target)",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 22,
                                            "column": 40
                                          },
                                          "end": {
                                            "row": 22,
                                            "column": 41
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 22,
                                            "column": 41
                                          },
                                          "end": {
                                            "row": 22,
                                            "column": 54
                                          },
                                          "text": "sample_weight"
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 22,
                                            "column": 54
                                          },
                                          "end": {
                                            "row": 22,
                                            "column": 55
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 22,
                                            "column": 56
                                          },
                                          "end": {
                                            "row": 22,
                                            "column": 62
                                          },
                                          "text": "target"
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 22,
                                            "column": 62
                                          },
                                          "end": {
                                            "row": 22,
                                            "column": 63
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "except_clause",
                          "start": {
                            "row": 23,
                            "column": 12
                          },
                          "end": {
                            "row": 24,
                            "column": 89
                          },
                          "text": "except ValueError as e:\n                raise ValueError('sample_weight dimensions did not match target: %s' % e)",
                          "children": [
                            {
                              "type": "except",
                              "start": {
                                "row": 23,
                                "column": 12
                              },
                              "end": {
                                "row": 23,
                                "column": 18
                              },
                              "text": "except"
                            },
                            {
                              "type": "as_pattern",
                              "start": {
                                "row": 23,
                                "column": 19
                              },
                              "end": {
                                "row": 23,
                                "column": 34
                              },
                              "text": "ValueError as e",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 23,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 23,
                                    "column": 29
                                  },
                                  "text": "ValueError"
                                },
                                {
                                  "type": "as",
                                  "start": {
                                    "row": 23,
                                    "column": 30
                                  },
                                  "end": {
                                    "row": 23,
                                    "column": 32
                                  },
                                  "text": "as"
                                },
                                {
                                  "type": "as_pattern_target",
                                  "start": {
                                    "row": 23,
                                    "column": 33
                                  },
                                  "end": {
                                    "row": 23,
                                    "column": 34
                                  },
                                  "text": "e",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 23,
                                        "column": 33
                                      },
                                      "end": {
                                        "row": 23,
                                        "column": 34
                                      },
                                      "text": "e"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ":",
                              "start": {
                                "row": 23,
                                "column": 34
                              },
                              "end": {
                                "row": 23,
                                "column": 35
                              },
                              "text": ":"
                            },
                            {
                              "type": "block",
                              "start": {
                                "row": 24,
                                "column": 16
                              },
                              "end": {
                                "row": 24,
                                "column": 89
                              },
                              "text": "raise ValueError('sample_weight dimensions did not match target: %s' % e)",
                              "children": [
                                {
                                  "type": "raise_statement",
                                  "start": {
                                    "row": 24,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 24,
                                    "column": 89
                                  },
                                  "text": "raise ValueError('sample_weight dimensions did not match target: %s' % e)",
                                  "children": [
                                    {
                                      "type": "raise",
                                      "start": {
                                        "row": 24,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 24,
                                        "column": 21
                                      },
                                      "text": "raise"
                                    },
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 24,
                                        "column": 22
                                      },
                                      "end": {
                                        "row": 24,
                                        "column": 89
                                      },
                                      "text": "ValueError('sample_weight dimensions did not match target: %s' % e)",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 24,
                                            "column": 22
                                          },
                                          "end": {
                                            "row": 24,
                                            "column": 32
                                          },
                                          "text": "ValueError"
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 24,
                                            "column": 32
                                          },
                                          "end": {
                                            "row": 24,
                                            "column": 89
                                          },
                                          "text": "('sample_weight dimensions did not match target: %s' % e)",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 24,
                                                "column": 32
                                              },
                                              "end": {
                                                "row": 24,
                                                "column": 33
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "binary_operator",
                                              "start": {
                                                "row": 24,
                                                "column": 33
                                              },
                                              "end": {
                                                "row": 24,
                                                "column": 88
                                              },
                                              "text": "'sample_weight dimensions did not match target: %s' % e",
                                              "children": [
                                                {
                                                  "type": "string",
                                                  "start": {
                                                    "row": 24,
                                                    "column": 33
                                                  },
                                                  "end": {
                                                    "row": 24,
                                                    "column": 84
                                                  },
                                                  "text": "'sample_weight dimensions did not match target: %s'",
                                                  "children": [
                                                    {
                                                      "type": "string_start",
                                                      "start": {
                                                        "row": 24,
                                                        "column": 33
                                                      },
                                                      "end": {
                                                        "row": 24,
                                                        "column": 34
                                                      },
                                                      "text": "'"
                                                    },
                                                    {
                                                      "type": "string_content",
                                                      "start": {
                                                        "row": 24,
                                                        "column": 34
                                                      },
                                                      "end": {
                                                        "row": 24,
                                                        "column": 83
                                                      },
                                                      "text": "sample_weight dimensions did not match target: %s"
                                                    },
                                                    {
                                                      "type": "string_end",
                                                      "start": {
                                                        "row": 24,
                                                        "column": 83
                                                      },
                                                      "end": {
                                                        "row": 24,
                                                        "column": 84
                                                      },
                                                      "text": "'"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "%",
                                                  "start": {
                                                    "row": 24,
                                                    "column": 85
                                                  },
                                                  "end": {
                                                    "row": 24,
                                                    "column": 86
                                                  },
                                                  "text": "%"
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 24,
                                                    "column": 87
                                                  },
                                                  "end": {
                                                    "row": 24,
                                                    "column": 88
                                                  },
                                                  "text": "e"
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 24,
                                                "column": 88
                                              },
                                              "end": {
                                                "row": 24,
                                                "column": 89
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 26,
                "column": 8
              },
              "end": {
                "row": 26,
                "column": 65
              },
              "text": "# If features is a sparse matrix, do not apply imputation"
            },
            {
              "type": "if_statement",
              "start": {
                "row": 27,
                "column": 8
              },
              "end": {
                "row": 47,
                "column": 56
              },
              "text": "if sparse.issparse(features):\n            if self.config_dict in [None, \"TPOT light\", \"TPOT MDR\"]:\n                raise ValueError(\n                    'Not all operators in {} supports sparse matrix. '\n                    'Please use \\\"TPOT sparse\\\" for sparse matrix.'.format(self.config_dict)\n                )\n            elif self.config_dict != \"TPOT sparse\":\n                print(\n                    'Warning: Since the input matrix is a sparse matrix, please makes sure all the operators in the '\n                    'customized config dictionary supports sparse matriies.'\n                )\n        else:\n            if isinstance(features, np.ndarray):\n                if np.any(np.isnan(features)):\n                    self._imputed = True\n            elif isinstance(features, DataFrame):\n                if features.isnull().values.any():\n                    self._imputed = True\n\n            if self._imputed:\n                features = self._impute_values(features)",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 27,
                    "column": 8
                  },
                  "end": {
                    "row": 27,
                    "column": 10
                  },
                  "text": "if"
                },
                {
                  "type": "call",
                  "start": {
                    "row": 27,
                    "column": 11
                  },
                  "end": {
                    "row": 27,
                    "column": 36
                  },
                  "text": "sparse.issparse(features)",
                  "children": [
                    {
                      "type": "attribute",
                      "start": {
                        "row": 27,
                        "column": 11
                      },
                      "end": {
                        "row": 27,
                        "column": 26
                      },
                      "text": "sparse.issparse",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 27,
                            "column": 11
                          },
                          "end": {
                            "row": 27,
                            "column": 17
                          },
                          "text": "sparse"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 27,
                            "column": 17
                          },
                          "end": {
                            "row": 27,
                            "column": 18
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 27,
                            "column": 18
                          },
                          "end": {
                            "row": 27,
                            "column": 26
                          },
                          "text": "issparse"
                        }
                      ]
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 27,
                        "column": 26
                      },
                      "end": {
                        "row": 27,
                        "column": 36
                      },
                      "text": "(features)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 27,
                            "column": 26
                          },
                          "end": {
                            "row": 27,
                            "column": 27
                          },
                          "text": "("
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 27,
                            "column": 27
                          },
                          "end": {
                            "row": 27,
                            "column": 35
                          },
                          "text": "features"
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 27,
                            "column": 35
                          },
                          "end": {
                            "row": 27,
                            "column": 36
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 27,
                    "column": 36
                  },
                  "end": {
                    "row": 27,
                    "column": 37
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 28,
                    "column": 12
                  },
                  "end": {
                    "row": 37,
                    "column": 17
                  },
                  "text": "if self.config_dict in [None, \"TPOT light\", \"TPOT MDR\"]:\n                raise ValueError(\n                    'Not all operators in {} supports sparse matrix. '\n                    'Please use \\\"TPOT sparse\\\" for sparse matrix.'.format(self.config_dict)\n                )\n            elif self.config_dict != \"TPOT sparse\":\n                print(\n                    'Warning: Since the input matrix is a sparse matrix, please makes sure all the operators in the '\n                    'customized config dictionary supports sparse matriies.'\n                )",
                  "children": [
                    {
                      "type": "if_statement",
                      "start": {
                        "row": 28,
                        "column": 12
                      },
                      "end": {
                        "row": 37,
                        "column": 17
                      },
                      "text": "if self.config_dict in [None, \"TPOT light\", \"TPOT MDR\"]:\n                raise ValueError(\n                    'Not all operators in {} supports sparse matrix. '\n                    'Please use \\\"TPOT sparse\\\" for sparse matrix.'.format(self.config_dict)\n                )\n            elif self.config_dict != \"TPOT sparse\":\n                print(\n                    'Warning: Since the input matrix is a sparse matrix, please makes sure all the operators in the '\n                    'customized config dictionary supports sparse matriies.'\n                )",
                      "children": [
                        {
                          "type": "if",
                          "start": {
                            "row": 28,
                            "column": 12
                          },
                          "end": {
                            "row": 28,
                            "column": 14
                          },
                          "text": "if"
                        },
                        {
                          "type": "comparison_operator",
                          "start": {
                            "row": 28,
                            "column": 15
                          },
                          "end": {
                            "row": 28,
                            "column": 67
                          },
                          "text": "self.config_dict in [None, \"TPOT light\", \"TPOT MDR\"]",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 28,
                                "column": 15
                              },
                              "end": {
                                "row": 28,
                                "column": 31
                              },
                              "text": "self.config_dict",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 28,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 28,
                                    "column": 19
                                  },
                                  "text": "self"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 28,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 28,
                                    "column": 20
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 28,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 28,
                                    "column": 31
                                  },
                                  "text": "config_dict"
                                }
                              ]
                            },
                            {
                              "type": "in",
                              "start": {
                                "row": 28,
                                "column": 32
                              },
                              "end": {
                                "row": 28,
                                "column": 34
                              },
                              "text": "in"
                            },
                            {
                              "type": "list",
                              "start": {
                                "row": 28,
                                "column": 35
                              },
                              "end": {
                                "row": 28,
                                "column": 67
                              },
                              "text": "[None, \"TPOT light\", \"TPOT MDR\"]",
                              "children": [
                                {
                                  "type": "[",
                                  "start": {
                                    "row": 28,
                                    "column": 35
                                  },
                                  "end": {
                                    "row": 28,
                                    "column": 36
                                  },
                                  "text": "["
                                },
                                {
                                  "type": "none",
                                  "start": {
                                    "row": 28,
                                    "column": 36
                                  },
                                  "end": {
                                    "row": 28,
                                    "column": 40
                                  },
                                  "text": "None"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 28,
                                    "column": 40
                                  },
                                  "end": {
                                    "row": 28,
                                    "column": 41
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "string",
                                  "start": {
                                    "row": 28,
                                    "column": 42
                                  },
                                  "end": {
                                    "row": 28,
                                    "column": 54
                                  },
                                  "text": "\"TPOT light\"",
                                  "children": [
                                    {
                                      "type": "string_start",
                                      "start": {
                                        "row": 28,
                                        "column": 42
                                      },
                                      "end": {
                                        "row": 28,
                                        "column": 43
                                      },
                                      "text": "\""
                                    },
                                    {
                                      "type": "string_content",
                                      "start": {
                                        "row": 28,
                                        "column": 43
                                      },
                                      "end": {
                                        "row": 28,
                                        "column": 53
                                      },
                                      "text": "TPOT light"
                                    },
                                    {
                                      "type": "string_end",
                                      "start": {
                                        "row": 28,
                                        "column": 53
                                      },
                                      "end": {
                                        "row": 28,
                                        "column": 54
                                      },
                                      "text": "\""
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 28,
                                    "column": 54
                                  },
                                  "end": {
                                    "row": 28,
                                    "column": 55
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "string",
                                  "start": {
                                    "row": 28,
                                    "column": 56
                                  },
                                  "end": {
                                    "row": 28,
                                    "column": 66
                                  },
                                  "text": "\"TPOT MDR\"",
                                  "children": [
                                    {
                                      "type": "string_start",
                                      "start": {
                                        "row": 28,
                                        "column": 56
                                      },
                                      "end": {
                                        "row": 28,
                                        "column": 57
                                      },
                                      "text": "\""
                                    },
                                    {
                                      "type": "string_content",
                                      "start": {
                                        "row": 28,
                                        "column": 57
                                      },
                                      "end": {
                                        "row": 28,
                                        "column": 65
                                      },
                                      "text": "TPOT MDR"
                                    },
                                    {
                                      "type": "string_end",
                                      "start": {
                                        "row": 28,
                                        "column": 65
                                      },
                                      "end": {
                                        "row": 28,
                                        "column": 66
                                      },
                                      "text": "\""
                                    }
                                  ]
                                },
                                {
                                  "type": "]",
                                  "start": {
                                    "row": 28,
                                    "column": 66
                                  },
                                  "end": {
                                    "row": 28,
                                    "column": 67
                                  },
                                  "text": "]"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ":",
                          "start": {
                            "row": 28,
                            "column": 67
                          },
                          "end": {
                            "row": 28,
                            "column": 68
                          },
                          "text": ":"
                        },
                        {
                          "type": "block",
                          "start": {
                            "row": 29,
                            "column": 16
                          },
                          "end": {
                            "row": 32,
                            "column": 17
                          },
                          "text": "raise ValueError(\n                    'Not all operators in {} supports sparse matrix. '\n                    'Please use \\\"TPOT sparse\\\" for sparse matrix.'.format(self.config_dict)\n                )",
                          "children": [
                            {
                              "type": "raise_statement",
                              "start": {
                                "row": 29,
                                "column": 16
                              },
                              "end": {
                                "row": 32,
                                "column": 17
                              },
                              "text": "raise ValueError(\n                    'Not all operators in {} supports sparse matrix. '\n                    'Please use \\\"TPOT sparse\\\" for sparse matrix.'.format(self.config_dict)\n                )",
                              "children": [
                                {
                                  "type": "raise",
                                  "start": {
                                    "row": 29,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 29,
                                    "column": 21
                                  },
                                  "text": "raise"
                                },
                                {
                                  "type": "call",
                                  "start": {
                                    "row": 29,
                                    "column": 22
                                  },
                                  "end": {
                                    "row": 32,
                                    "column": 17
                                  },
                                  "text": "ValueError(\n                    'Not all operators in {} supports sparse matrix. '\n                    'Please use \\\"TPOT sparse\\\" for sparse matrix.'.format(self.config_dict)\n                )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 29,
                                        "column": 22
                                      },
                                      "end": {
                                        "row": 29,
                                        "column": 32
                                      },
                                      "text": "ValueError"
                                    },
                                    {
                                      "type": "argument_list",
                                      "start": {
                                        "row": 29,
                                        "column": 32
                                      },
                                      "end": {
                                        "row": 32,
                                        "column": 17
                                      },
                                      "text": "(\n                    'Not all operators in {} supports sparse matrix. '\n                    'Please use \\\"TPOT sparse\\\" for sparse matrix.'.format(self.config_dict)\n                )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 29,
                                            "column": 32
                                          },
                                          "end": {
                                            "row": 29,
                                            "column": 33
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "call",
                                          "start": {
                                            "row": 30,
                                            "column": 20
                                          },
                                          "end": {
                                            "row": 31,
                                            "column": 92
                                          },
                                          "text": "'Not all operators in {} supports sparse matrix. '\n                    'Please use \\\"TPOT sparse\\\" for sparse matrix.'.format(self.config_dict)",
                                          "children": [
                                            {
                                              "type": "attribute",
                                              "start": {
                                                "row": 30,
                                                "column": 20
                                              },
                                              "end": {
                                                "row": 31,
                                                "column": 74
                                              },
                                              "text": "'Not all operators in {} supports sparse matrix. '\n                    'Please use \\\"TPOT sparse\\\" for sparse matrix.'.format",
                                              "children": [
                                                {
                                                  "type": "concatenated_string",
                                                  "start": {
                                                    "row": 30,
                                                    "column": 20
                                                  },
                                                  "end": {
                                                    "row": 31,
                                                    "column": 67
                                                  },
                                                  "text": "'Not all operators in {} supports sparse matrix. '\n                    'Please use \\\"TPOT sparse\\\" for sparse matrix.'",
                                                  "children": [
                                                    {
                                                      "type": "string",
                                                      "start": {
                                                        "row": 30,
                                                        "column": 20
                                                      },
                                                      "end": {
                                                        "row": 30,
                                                        "column": 70
                                                      },
                                                      "text": "'Not all operators in {} supports sparse matrix. '",
                                                      "children": [
                                                        {
                                                          "type": "string_start",
                                                          "start": {
                                                            "row": 30,
                                                            "column": 20
                                                          },
                                                          "end": {
                                                            "row": 30,
                                                            "column": 21
                                                          },
                                                          "text": "'"
                                                        },
                                                        {
                                                          "type": "string_content",
                                                          "start": {
                                                            "row": 30,
                                                            "column": 21
                                                          },
                                                          "end": {
                                                            "row": 30,
                                                            "column": 69
                                                          },
                                                          "text": "Not all operators in {} supports sparse matrix. "
                                                        },
                                                        {
                                                          "type": "string_end",
                                                          "start": {
                                                            "row": 30,
                                                            "column": 69
                                                          },
                                                          "end": {
                                                            "row": 30,
                                                            "column": 70
                                                          },
                                                          "text": "'"
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "string",
                                                      "start": {
                                                        "row": 31,
                                                        "column": 20
                                                      },
                                                      "end": {
                                                        "row": 31,
                                                        "column": 67
                                                      },
                                                      "text": "'Please use \\\"TPOT sparse\\\" for sparse matrix.'",
                                                      "children": [
                                                        {
                                                          "type": "string_start",
                                                          "start": {
                                                            "row": 31,
                                                            "column": 20
                                                          },
                                                          "end": {
                                                            "row": 31,
                                                            "column": 21
                                                          },
                                                          "text": "'"
                                                        },
                                                        {
                                                          "type": "string_content",
                                                          "start": {
                                                            "row": 31,
                                                            "column": 21
                                                          },
                                                          "end": {
                                                            "row": 31,
                                                            "column": 66
                                                          },
                                                          "text": "Please use \\\"TPOT sparse\\\" for sparse matrix.",
                                                          "children": [
                                                            {
                                                              "type": "escape_sequence",
                                                              "start": {
                                                                "row": 31,
                                                                "column": 32
                                                              },
                                                              "end": {
                                                                "row": 31,
                                                                "column": 34
                                                              },
                                                              "text": "\\\""
                                                            },
                                                            {
                                                              "type": "escape_sequence",
                                                              "start": {
                                                                "row": 31,
                                                                "column": 45
                                                              },
                                                              "end": {
                                                                "row": 31,
                                                                "column": 47
                                                              },
                                                              "text": "\\\""
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "string_end",
                                                          "start": {
                                                            "row": 31,
                                                            "column": 66
                                                          },
                                                          "end": {
                                                            "row": 31,
                                                            "column": 67
                                                          },
                                                          "text": "'"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ".",
                                                  "start": {
                                                    "row": 31,
                                                    "column": 67
                                                  },
                                                  "end": {
                                                    "row": 31,
                                                    "column": 68
                                                  },
                                                  "text": "."
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 31,
                                                    "column": 68
                                                  },
                                                  "end": {
                                                    "row": 31,
                                                    "column": 74
                                                  },
                                                  "text": "format"
                                                }
                                              ]
                                            },
                                            {
                                              "type": "argument_list",
                                              "start": {
                                                "row": 31,
                                                "column": 74
                                              },
                                              "end": {
                                                "row": 31,
                                                "column": 92
                                              },
                                              "text": "(self.config_dict)",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 31,
                                                    "column": 74
                                                  },
                                                  "end": {
                                                    "row": 31,
                                                    "column": 75
                                                  },
                                                  "text": "("
                                                },
                                                {
                                                  "type": "attribute",
                                                  "start": {
                                                    "row": 31,
                                                    "column": 75
                                                  },
                                                  "end": {
                                                    "row": 31,
                                                    "column": 91
                                                  },
                                                  "text": "self.config_dict",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 31,
                                                        "column": 75
                                                      },
                                                      "end": {
                                                        "row": 31,
                                                        "column": 79
                                                      },
                                                      "text": "self"
                                                    },
                                                    {
                                                      "type": ".",
                                                      "start": {
                                                        "row": 31,
                                                        "column": 79
                                                      },
                                                      "end": {
                                                        "row": 31,
                                                        "column": 80
                                                      },
                                                      "text": "."
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 31,
                                                        "column": 80
                                                      },
                                                      "end": {
                                                        "row": 31,
                                                        "column": 91
                                                      },
                                                      "text": "config_dict"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 31,
                                                    "column": 91
                                                  },
                                                  "end": {
                                                    "row": 31,
                                                    "column": 92
                                                  },
                                                  "text": ")"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 32,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 32,
                                            "column": 17
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "elif_clause",
                          "start": {
                            "row": 33,
                            "column": 12
                          },
                          "end": {
                            "row": 37,
                            "column": 17
                          },
                          "text": "elif self.config_dict != \"TPOT sparse\":\n                print(\n                    'Warning: Since the input matrix is a sparse matrix, please makes sure all the operators in the '\n                    'customized config dictionary supports sparse matriies.'\n                )",
                          "children": [
                            {
                              "type": "elif",
                              "start": {
                                "row": 33,
                                "column": 12
                              },
                              "end": {
                                "row": 33,
                                "column": 16
                              },
                              "text": "elif"
                            },
                            {
                              "type": "comparison_operator",
                              "start": {
                                "row": 33,
                                "column": 17
                              },
                              "end": {
                                "row": 33,
                                "column": 50
                              },
                              "text": "self.config_dict != \"TPOT sparse\"",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 33,
                                    "column": 17
                                  },
                                  "end": {
                                    "row": 33,
                                    "column": 33
                                  },
                                  "text": "self.config_dict",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 33,
                                        "column": 17
                                      },
                                      "end": {
                                        "row": 33,
                                        "column": 21
                                      },
                                      "text": "self"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 33,
                                        "column": 21
                                      },
                                      "end": {
                                        "row": 33,
                                        "column": 22
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 33,
                                        "column": 22
                                      },
                                      "end": {
                                        "row": 33,
                                        "column": 33
                                      },
                                      "text": "config_dict"
                                    }
                                  ]
                                },
                                {
                                  "type": "!=",
                                  "start": {
                                    "row": 33,
                                    "column": 34
                                  },
                                  "end": {
                                    "row": 33,
                                    "column": 36
                                  },
                                  "text": "!="
                                },
                                {
                                  "type": "string",
                                  "start": {
                                    "row": 33,
                                    "column": 37
                                  },
                                  "end": {
                                    "row": 33,
                                    "column": 50
                                  },
                                  "text": "\"TPOT sparse\"",
                                  "children": [
                                    {
                                      "type": "string_start",
                                      "start": {
                                        "row": 33,
                                        "column": 37
                                      },
                                      "end": {
                                        "row": 33,
                                        "column": 38
                                      },
                                      "text": "\""
                                    },
                                    {
                                      "type": "string_content",
                                      "start": {
                                        "row": 33,
                                        "column": 38
                                      },
                                      "end": {
                                        "row": 33,
                                        "column": 49
                                      },
                                      "text": "TPOT sparse"
                                    },
                                    {
                                      "type": "string_end",
                                      "start": {
                                        "row": 33,
                                        "column": 49
                                      },
                                      "end": {
                                        "row": 33,
                                        "column": 50
                                      },
                                      "text": "\""
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ":",
                              "start": {
                                "row": 33,
                                "column": 50
                              },
                              "end": {
                                "row": 33,
                                "column": 51
                              },
                              "text": ":"
                            },
                            {
                              "type": "block",
                              "start": {
                                "row": 34,
                                "column": 16
                              },
                              "end": {
                                "row": 37,
                                "column": 17
                              },
                              "text": "print(\n                    'Warning: Since the input matrix is a sparse matrix, please makes sure all the operators in the '\n                    'customized config dictionary supports sparse matriies.'\n                )",
                              "children": [
                                {
                                  "type": "expression_statement",
                                  "start": {
                                    "row": 34,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 37,
                                    "column": 17
                                  },
                                  "text": "print(\n                    'Warning: Since the input matrix is a sparse matrix, please makes sure all the operators in the '\n                    'customized config dictionary supports sparse matriies.'\n                )",
                                  "children": [
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 34,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 37,
                                        "column": 17
                                      },
                                      "text": "print(\n                    'Warning: Since the input matrix is a sparse matrix, please makes sure all the operators in the '\n                    'customized config dictionary supports sparse matriies.'\n                )",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 34,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 34,
                                            "column": 21
                                          },
                                          "text": "print"
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 34,
                                            "column": 21
                                          },
                                          "end": {
                                            "row": 37,
                                            "column": 17
                                          },
                                          "text": "(\n                    'Warning: Since the input matrix is a sparse matrix, please makes sure all the operators in the '\n                    'customized config dictionary supports sparse matriies.'\n                )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 34,
                                                "column": 21
                                              },
                                              "end": {
                                                "row": 34,
                                                "column": 22
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "concatenated_string",
                                              "start": {
                                                "row": 35,
                                                "column": 20
                                              },
                                              "end": {
                                                "row": 36,
                                                "column": 76
                                              },
                                              "text": "'Warning: Since the input matrix is a sparse matrix, please makes sure all the operators in the '\n                    'customized config dictionary supports sparse matriies.'",
                                              "children": [
                                                {
                                                  "type": "string",
                                                  "start": {
                                                    "row": 35,
                                                    "column": 20
                                                  },
                                                  "end": {
                                                    "row": 35,
                                                    "column": 117
                                                  },
                                                  "text": "'Warning: Since the input matrix is a sparse matrix, please makes sure all the operators in the '",
                                                  "children": [
                                                    {
                                                      "type": "string_start",
                                                      "start": {
                                                        "row": 35,
                                                        "column": 20
                                                      },
                                                      "end": {
                                                        "row": 35,
                                                        "column": 21
                                                      },
                                                      "text": "'"
                                                    },
                                                    {
                                                      "type": "string_content",
                                                      "start": {
                                                        "row": 35,
                                                        "column": 21
                                                      },
                                                      "end": {
                                                        "row": 35,
                                                        "column": 116
                                                      },
                                                      "text": "Warning: Since the input matrix is a sparse matrix, please makes sure all the operators in the "
                                                    },
                                                    {
                                                      "type": "string_end",
                                                      "start": {
                                                        "row": 35,
                                                        "column": 116
                                                      },
                                                      "end": {
                                                        "row": 35,
                                                        "column": 117
                                                      },
                                                      "text": "'"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "string",
                                                  "start": {
                                                    "row": 36,
                                                    "column": 20
                                                  },
                                                  "end": {
                                                    "row": 36,
                                                    "column": 76
                                                  },
                                                  "text": "'customized config dictionary supports sparse matriies.'",
                                                  "children": [
                                                    {
                                                      "type": "string_start",
                                                      "start": {
                                                        "row": 36,
                                                        "column": 20
                                                      },
                                                      "end": {
                                                        "row": 36,
                                                        "column": 21
                                                      },
                                                      "text": "'"
                                                    },
                                                    {
                                                      "type": "string_content",
                                                      "start": {
                                                        "row": 36,
                                                        "column": 21
                                                      },
                                                      "end": {
                                                        "row": 36,
                                                        "column": 75
                                                      },
                                                      "text": "customized config dictionary supports sparse matriies."
                                                    },
                                                    {
                                                      "type": "string_end",
                                                      "start": {
                                                        "row": 36,
                                                        "column": 75
                                                      },
                                                      "end": {
                                                        "row": 36,
                                                        "column": 76
                                                      },
                                                      "text": "'"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 37,
                                                "column": 16
                                              },
                                              "end": {
                                                "row": 37,
                                                "column": 17
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "else_clause",
                  "start": {
                    "row": 38,
                    "column": 8
                  },
                  "end": {
                    "row": 47,
                    "column": 56
                  },
                  "text": "else:\n            if isinstance(features, np.ndarray):\n                if np.any(np.isnan(features)):\n                    self._imputed = True\n            elif isinstance(features, DataFrame):\n                if features.isnull().values.any():\n                    self._imputed = True\n\n            if self._imputed:\n                features = self._impute_values(features)",
                  "children": [
                    {
                      "type": "else",
                      "start": {
                        "row": 38,
                        "column": 8
                      },
                      "end": {
                        "row": 38,
                        "column": 12
                      },
                      "text": "else"
                    },
                    {
                      "type": ":",
                      "start": {
                        "row": 38,
                        "column": 12
                      },
                      "end": {
                        "row": 38,
                        "column": 13
                      },
                      "text": ":"
                    },
                    {
                      "type": "block",
                      "start": {
                        "row": 39,
                        "column": 12
                      },
                      "end": {
                        "row": 47,
                        "column": 56
                      },
                      "text": "if isinstance(features, np.ndarray):\n                if np.any(np.isnan(features)):\n                    self._imputed = True\n            elif isinstance(features, DataFrame):\n                if features.isnull().values.any():\n                    self._imputed = True\n\n            if self._imputed:\n                features = self._impute_values(features)",
                      "children": [
                        {
                          "type": "if_statement",
                          "start": {
                            "row": 39,
                            "column": 12
                          },
                          "end": {
                            "row": 44,
                            "column": 40
                          },
                          "text": "if isinstance(features, np.ndarray):\n                if np.any(np.isnan(features)):\n                    self._imputed = True\n            elif isinstance(features, DataFrame):\n                if features.isnull().values.any():\n                    self._imputed = True",
                          "children": [
                            {
                              "type": "if",
                              "start": {
                                "row": 39,
                                "column": 12
                              },
                              "end": {
                                "row": 39,
                                "column": 14
                              },
                              "text": "if"
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 39,
                                "column": 15
                              },
                              "end": {
                                "row": 39,
                                "column": 47
                              },
                              "text": "isinstance(features, np.ndarray)",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 39,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 39,
                                    "column": 25
                                  },
                                  "text": "isinstance"
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 39,
                                    "column": 25
                                  },
                                  "end": {
                                    "row": 39,
                                    "column": 47
                                  },
                                  "text": "(features, np.ndarray)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 39,
                                        "column": 25
                                      },
                                      "end": {
                                        "row": 39,
                                        "column": 26
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 39,
                                        "column": 26
                                      },
                                      "end": {
                                        "row": 39,
                                        "column": 34
                                      },
                                      "text": "features"
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 39,
                                        "column": 34
                                      },
                                      "end": {
                                        "row": 39,
                                        "column": 35
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "attribute",
                                      "start": {
                                        "row": 39,
                                        "column": 36
                                      },
                                      "end": {
                                        "row": 39,
                                        "column": 46
                                      },
                                      "text": "np.ndarray",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 39,
                                            "column": 36
                                          },
                                          "end": {
                                            "row": 39,
                                            "column": 38
                                          },
                                          "text": "np"
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 39,
                                            "column": 38
                                          },
                                          "end": {
                                            "row": 39,
                                            "column": 39
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 39,
                                            "column": 39
                                          },
                                          "end": {
                                            "row": 39,
                                            "column": 46
                                          },
                                          "text": "ndarray"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 39,
                                        "column": 46
                                      },
                                      "end": {
                                        "row": 39,
                                        "column": 47
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ":",
                              "start": {
                                "row": 39,
                                "column": 47
                              },
                              "end": {
                                "row": 39,
                                "column": 48
                              },
                              "text": ":"
                            },
                            {
                              "type": "block",
                              "start": {
                                "row": 40,
                                "column": 16
                              },
                              "end": {
                                "row": 41,
                                "column": 40
                              },
                              "text": "if np.any(np.isnan(features)):\n                    self._imputed = True",
                              "children": [
                                {
                                  "type": "if_statement",
                                  "start": {
                                    "row": 40,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 41,
                                    "column": 40
                                  },
                                  "text": "if np.any(np.isnan(features)):\n                    self._imputed = True",
                                  "children": [
                                    {
                                      "type": "if",
                                      "start": {
                                        "row": 40,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 40,
                                        "column": 18
                                      },
                                      "text": "if"
                                    },
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 40,
                                        "column": 19
                                      },
                                      "end": {
                                        "row": 40,
                                        "column": 45
                                      },
                                      "text": "np.any(np.isnan(features))",
                                      "children": [
                                        {
                                          "type": "attribute",
                                          "start": {
                                            "row": 40,
                                            "column": 19
                                          },
                                          "end": {
                                            "row": 40,
                                            "column": 25
                                          },
                                          "text": "np.any",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 40,
                                                "column": 19
                                              },
                                              "end": {
                                                "row": 40,
                                                "column": 21
                                              },
                                              "text": "np"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 40,
                                                "column": 21
                                              },
                                              "end": {
                                                "row": 40,
                                                "column": 22
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 40,
                                                "column": 22
                                              },
                                              "end": {
                                                "row": 40,
                                                "column": 25
                                              },
                                              "text": "any"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 40,
                                            "column": 25
                                          },
                                          "end": {
                                            "row": 40,
                                            "column": 45
                                          },
                                          "text": "(np.isnan(features))",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 40,
                                                "column": 25
                                              },
                                              "end": {
                                                "row": 40,
                                                "column": 26
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "call",
                                              "start": {
                                                "row": 40,
                                                "column": 26
                                              },
                                              "end": {
                                                "row": 40,
                                                "column": 44
                                              },
                                              "text": "np.isnan(features)",
                                              "children": [
                                                {
                                                  "type": "attribute",
                                                  "start": {
                                                    "row": 40,
                                                    "column": 26
                                                  },
                                                  "end": {
                                                    "row": 40,
                                                    "column": 34
                                                  },
                                                  "text": "np.isnan",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 40,
                                                        "column": 26
                                                      },
                                                      "end": {
                                                        "row": 40,
                                                        "column": 28
                                                      },
                                                      "text": "np"
                                                    },
                                                    {
                                                      "type": ".",
                                                      "start": {
                                                        "row": 40,
                                                        "column": 28
                                                      },
                                                      "end": {
                                                        "row": 40,
                                                        "column": 29
                                                      },
                                                      "text": "."
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 40,
                                                        "column": 29
                                                      },
                                                      "end": {
                                                        "row": 40,
                                                        "column": 34
                                                      },
                                                      "text": "isnan"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "argument_list",
                                                  "start": {
                                                    "row": 40,
                                                    "column": 34
                                                  },
                                                  "end": {
                                                    "row": 40,
                                                    "column": 44
                                                  },
                                                  "text": "(features)",
                                                  "children": [
                                                    {
                                                      "type": "(",
                                                      "start": {
                                                        "row": 40,
                                                        "column": 34
                                                      },
                                                      "end": {
                                                        "row": 40,
                                                        "column": 35
                                                      },
                                                      "text": "("
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 40,
                                                        "column": 35
                                                      },
                                                      "end": {
                                                        "row": 40,
                                                        "column": 43
                                                      },
                                                      "text": "features"
                                                    },
                                                    {
                                                      "type": ")",
                                                      "start": {
                                                        "row": 40,
                                                        "column": 43
                                                      },
                                                      "end": {
                                                        "row": 40,
                                                        "column": 44
                                                      },
                                                      "text": ")"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 40,
                                                "column": 44
                                              },
                                              "end": {
                                                "row": 40,
                                                "column": 45
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ":",
                                      "start": {
                                        "row": 40,
                                        "column": 45
                                      },
                                      "end": {
                                        "row": 40,
                                        "column": 46
                                      },
                                      "text": ":"
                                    },
                                    {
                                      "type": "block",
                                      "start": {
                                        "row": 41,
                                        "column": 20
                                      },
                                      "end": {
                                        "row": 41,
                                        "column": 40
                                      },
                                      "text": "self._imputed = True",
                                      "children": [
                                        {
                                          "type": "expression_statement",
                                          "start": {
                                            "row": 41,
                                            "column": 20
                                          },
                                          "end": {
                                            "row": 41,
                                            "column": 40
                                          },
                                          "text": "self._imputed = True",
                                          "children": [
                                            {
                                              "type": "assignment",
                                              "start": {
                                                "row": 41,
                                                "column": 20
                                              },
                                              "end": {
                                                "row": 41,
                                                "column": 40
                                              },
                                              "text": "self._imputed = True",
                                              "children": [
                                                {
                                                  "type": "attribute",
                                                  "start": {
                                                    "row": 41,
                                                    "column": 20
                                                  },
                                                  "end": {
                                                    "row": 41,
                                                    "column": 33
                                                  },
                                                  "text": "self._imputed",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 41,
                                                        "column": 20
                                                      },
                                                      "end": {
                                                        "row": 41,
                                                        "column": 24
                                                      },
                                                      "text": "self"
                                                    },
                                                    {
                                                      "type": ".",
                                                      "start": {
                                                        "row": 41,
                                                        "column": 24
                                                      },
                                                      "end": {
                                                        "row": 41,
                                                        "column": 25
                                                      },
                                                      "text": "."
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 41,
                                                        "column": 25
                                                      },
                                                      "end": {
                                                        "row": 41,
                                                        "column": 33
                                                      },
                                                      "text": "_imputed"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "=",
                                                  "start": {
                                                    "row": 41,
                                                    "column": 34
                                                  },
                                                  "end": {
                                                    "row": 41,
                                                    "column": 35
                                                  },
                                                  "text": "="
                                                },
                                                {
                                                  "type": "true",
                                                  "start": {
                                                    "row": 41,
                                                    "column": 36
                                                  },
                                                  "end": {
                                                    "row": 41,
                                                    "column": 40
                                                  },
                                                  "text": "True"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "elif_clause",
                              "start": {
                                "row": 42,
                                "column": 12
                              },
                              "end": {
                                "row": 44,
                                "column": 40
                              },
                              "text": "elif isinstance(features, DataFrame):\n                if features.isnull().values.any():\n                    self._imputed = True",
                              "children": [
                                {
                                  "type": "elif",
                                  "start": {
                                    "row": 42,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 42,
                                    "column": 16
                                  },
                                  "text": "elif"
                                },
                                {
                                  "type": "call",
                                  "start": {
                                    "row": 42,
                                    "column": 17
                                  },
                                  "end": {
                                    "row": 42,
                                    "column": 48
                                  },
                                  "text": "isinstance(features, DataFrame)",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 42,
                                        "column": 17
                                      },
                                      "end": {
                                        "row": 42,
                                        "column": 27
                                      },
                                      "text": "isinstance"
                                    },
                                    {
                                      "type": "argument_list",
                                      "start": {
                                        "row": 42,
                                        "column": 27
                                      },
                                      "end": {
                                        "row": 42,
                                        "column": 48
                                      },
                                      "text": "(features, DataFrame)",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 42,
                                            "column": 27
                                          },
                                          "end": {
                                            "row": 42,
                                            "column": 28
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 42,
                                            "column": 28
                                          },
                                          "end": {
                                            "row": 42,
                                            "column": 36
                                          },
                                          "text": "features"
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 42,
                                            "column": 36
                                          },
                                          "end": {
                                            "row": 42,
                                            "column": 37
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 42,
                                            "column": 38
                                          },
                                          "end": {
                                            "row": 42,
                                            "column": 47
                                          },
                                          "text": "DataFrame"
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 42,
                                            "column": 47
                                          },
                                          "end": {
                                            "row": 42,
                                            "column": 48
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ":",
                                  "start": {
                                    "row": 42,
                                    "column": 48
                                  },
                                  "end": {
                                    "row": 42,
                                    "column": 49
                                  },
                                  "text": ":"
                                },
                                {
                                  "type": "block",
                                  "start": {
                                    "row": 43,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 44,
                                    "column": 40
                                  },
                                  "text": "if features.isnull().values.any():\n                    self._imputed = True",
                                  "children": [
                                    {
                                      "type": "if_statement",
                                      "start": {
                                        "row": 43,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 44,
                                        "column": 40
                                      },
                                      "text": "if features.isnull().values.any():\n                    self._imputed = True",
                                      "children": [
                                        {
                                          "type": "if",
                                          "start": {
                                            "row": 43,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 43,
                                            "column": 18
                                          },
                                          "text": "if"
                                        },
                                        {
                                          "type": "call",
                                          "start": {
                                            "row": 43,
                                            "column": 19
                                          },
                                          "end": {
                                            "row": 43,
                                            "column": 49
                                          },
                                          "text": "features.isnull().values.any()",
                                          "children": [
                                            {
                                              "type": "attribute",
                                              "start": {
                                                "row": 43,
                                                "column": 19
                                              },
                                              "end": {
                                                "row": 43,
                                                "column": 47
                                              },
                                              "text": "features.isnull().values.any",
                                              "children": [
                                                {
                                                  "type": "attribute",
                                                  "start": {
                                                    "row": 43,
                                                    "column": 19
                                                  },
                                                  "end": {
                                                    "row": 43,
                                                    "column": 43
                                                  },
                                                  "text": "features.isnull().values",
                                                  "children": [
                                                    {
                                                      "type": "call",
                                                      "start": {
                                                        "row": 43,
                                                        "column": 19
                                                      },
                                                      "end": {
                                                        "row": 43,
                                                        "column": 36
                                                      },
                                                      "text": "features.isnull()",
                                                      "children": [
                                                        {
                                                          "type": "attribute",
                                                          "start": {
                                                            "row": 43,
                                                            "column": 19
                                                          },
                                                          "end": {
                                                            "row": 43,
                                                            "column": 34
                                                          },
                                                          "text": "features.isnull",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start": {
                                                                "row": 43,
                                                                "column": 19
                                                              },
                                                              "end": {
                                                                "row": 43,
                                                                "column": 27
                                                              },
                                                              "text": "features"
                                                            },
                                                            {
                                                              "type": ".",
                                                              "start": {
                                                                "row": 43,
                                                                "column": 27
                                                              },
                                                              "end": {
                                                                "row": 43,
                                                                "column": 28
                                                              },
                                                              "text": "."
                                                            },
                                                            {
                                                              "type": "identifier",
                                                              "start": {
                                                                "row": 43,
                                                                "column": 28
                                                              },
                                                              "end": {
                                                                "row": 43,
                                                                "column": 34
                                                              },
                                                              "text": "isnull"
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "argument_list",
                                                          "start": {
                                                            "row": 43,
                                                            "column": 34
                                                          },
                                                          "end": {
                                                            "row": 43,
                                                            "column": 36
                                                          },
                                                          "text": "()",
                                                          "children": [
                                                            {
                                                              "type": "(",
                                                              "start": {
                                                                "row": 43,
                                                                "column": 34
                                                              },
                                                              "end": {
                                                                "row": 43,
                                                                "column": 35
                                                              },
                                                              "text": "("
                                                            },
                                                            {
                                                              "type": ")",
                                                              "start": {
                                                                "row": 43,
                                                                "column": 35
                                                              },
                                                              "end": {
                                                                "row": 43,
                                                                "column": 36
                                                              },
                                                              "text": ")"
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ".",
                                                      "start": {
                                                        "row": 43,
                                                        "column": 36
                                                      },
                                                      "end": {
                                                        "row": 43,
                                                        "column": 37
                                                      },
                                                      "text": "."
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 43,
                                                        "column": 37
                                                      },
                                                      "end": {
                                                        "row": 43,
                                                        "column": 43
                                                      },
                                                      "text": "values"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ".",
                                                  "start": {
                                                    "row": 43,
                                                    "column": 43
                                                  },
                                                  "end": {
                                                    "row": 43,
                                                    "column": 44
                                                  },
                                                  "text": "."
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 43,
                                                    "column": 44
                                                  },
                                                  "end": {
                                                    "row": 43,
                                                    "column": 47
                                                  },
                                                  "text": "any"
                                                }
                                              ]
                                            },
                                            {
                                              "type": "argument_list",
                                              "start": {
                                                "row": 43,
                                                "column": 47
                                              },
                                              "end": {
                                                "row": 43,
                                                "column": 49
                                              },
                                              "text": "()",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 43,
                                                    "column": 47
                                                  },
                                                  "end": {
                                                    "row": 43,
                                                    "column": 48
                                                  },
                                                  "text": "("
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 43,
                                                    "column": 48
                                                  },
                                                  "end": {
                                                    "row": 43,
                                                    "column": 49
                                                  },
                                                  "text": ")"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ":",
                                          "start": {
                                            "row": 43,
                                            "column": 49
                                          },
                                          "end": {
                                            "row": 43,
                                            "column": 50
                                          },
                                          "text": ":"
                                        },
                                        {
                                          "type": "block",
                                          "start": {
                                            "row": 44,
                                            "column": 20
                                          },
                                          "end": {
                                            "row": 44,
                                            "column": 40
                                          },
                                          "text": "self._imputed = True",
                                          "children": [
                                            {
                                              "type": "expression_statement",
                                              "start": {
                                                "row": 44,
                                                "column": 20
                                              },
                                              "end": {
                                                "row": 44,
                                                "column": 40
                                              },
                                              "text": "self._imputed = True",
                                              "children": [
                                                {
                                                  "type": "assignment",
                                                  "start": {
                                                    "row": 44,
                                                    "column": 20
                                                  },
                                                  "end": {
                                                    "row": 44,
                                                    "column": 40
                                                  },
                                                  "text": "self._imputed = True",
                                                  "children": [
                                                    {
                                                      "type": "attribute",
                                                      "start": {
                                                        "row": 44,
                                                        "column": 20
                                                      },
                                                      "end": {
                                                        "row": 44,
                                                        "column": 33
                                                      },
                                                      "text": "self._imputed",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 44,
                                                            "column": 20
                                                          },
                                                          "end": {
                                                            "row": 44,
                                                            "column": 24
                                                          },
                                                          "text": "self"
                                                        },
                                                        {
                                                          "type": ".",
                                                          "start": {
                                                            "row": 44,
                                                            "column": 24
                                                          },
                                                          "end": {
                                                            "row": 44,
                                                            "column": 25
                                                          },
                                                          "text": "."
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 44,
                                                            "column": 25
                                                          },
                                                          "end": {
                                                            "row": 44,
                                                            "column": 33
                                                          },
                                                          "text": "_imputed"
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "=",
                                                      "start": {
                                                        "row": 44,
                                                        "column": 34
                                                      },
                                                      "end": {
                                                        "row": 44,
                                                        "column": 35
                                                      },
                                                      "text": "="
                                                    },
                                                    {
                                                      "type": "true",
                                                      "start": {
                                                        "row": 44,
                                                        "column": 36
                                                      },
                                                      "end": {
                                                        "row": 44,
                                                        "column": 40
                                                      },
                                                      "text": "True"
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "if_statement",
                          "start": {
                            "row": 46,
                            "column": 12
                          },
                          "end": {
                            "row": 47,
                            "column": 56
                          },
                          "text": "if self._imputed:\n                features = self._impute_values(features)",
                          "children": [
                            {
                              "type": "if",
                              "start": {
                                "row": 46,
                                "column": 12
                              },
                              "end": {
                                "row": 46,
                                "column": 14
                              },
                              "text": "if"
                            },
                            {
                              "type": "attribute",
                              "start": {
                                "row": 46,
                                "column": 15
                              },
                              "end": {
                                "row": 46,
                                "column": 28
                              },
                              "text": "self._imputed",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 46,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 46,
                                    "column": 19
                                  },
                                  "text": "self"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 46,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 46,
                                    "column": 20
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 46,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 46,
                                    "column": 28
                                  },
                                  "text": "_imputed"
                                }
                              ]
                            },
                            {
                              "type": ":",
                              "start": {
                                "row": 46,
                                "column": 28
                              },
                              "end": {
                                "row": 46,
                                "column": 29
                              },
                              "text": ":"
                            },
                            {
                              "type": "block",
                              "start": {
                                "row": 47,
                                "column": 16
                              },
                              "end": {
                                "row": 47,
                                "column": 56
                              },
                              "text": "features = self._impute_values(features)",
                              "children": [
                                {
                                  "type": "expression_statement",
                                  "start": {
                                    "row": 47,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 47,
                                    "column": 56
                                  },
                                  "text": "features = self._impute_values(features)",
                                  "children": [
                                    {
                                      "type": "assignment",
                                      "start": {
                                        "row": 47,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 47,
                                        "column": 56
                                      },
                                      "text": "features = self._impute_values(features)",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 47,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 47,
                                            "column": 24
                                          },
                                          "text": "features"
                                        },
                                        {
                                          "type": "=",
                                          "start": {
                                            "row": 47,
                                            "column": 25
                                          },
                                          "end": {
                                            "row": 47,
                                            "column": 26
                                          },
                                          "text": "="
                                        },
                                        {
                                          "type": "call",
                                          "start": {
                                            "row": 47,
                                            "column": 27
                                          },
                                          "end": {
                                            "row": 47,
                                            "column": 56
                                          },
                                          "text": "self._impute_values(features)",
                                          "children": [
                                            {
                                              "type": "attribute",
                                              "start": {
                                                "row": 47,
                                                "column": 27
                                              },
                                              "end": {
                                                "row": 47,
                                                "column": 46
                                              },
                                              "text": "self._impute_values",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 47,
                                                    "column": 27
                                                  },
                                                  "end": {
                                                    "row": 47,
                                                    "column": 31
                                                  },
                                                  "text": "self"
                                                },
                                                {
                                                  "type": ".",
                                                  "start": {
                                                    "row": 47,
                                                    "column": 31
                                                  },
                                                  "end": {
                                                    "row": 47,
                                                    "column": 32
                                                  },
                                                  "text": "."
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 47,
                                                    "column": 32
                                                  },
                                                  "end": {
                                                    "row": 47,
                                                    "column": 46
                                                  },
                                                  "text": "_impute_values"
                                                }
                                              ]
                                            },
                                            {
                                              "type": "argument_list",
                                              "start": {
                                                "row": 47,
                                                "column": 46
                                              },
                                              "end": {
                                                "row": 47,
                                                "column": 56
                                              },
                                              "text": "(features)",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 47,
                                                    "column": 46
                                                  },
                                                  "end": {
                                                    "row": 47,
                                                    "column": 47
                                                  },
                                                  "text": "("
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 47,
                                                    "column": 47
                                                  },
                                                  "end": {
                                                    "row": 47,
                                                    "column": 55
                                                  },
                                                  "text": "features"
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 47,
                                                    "column": 55
                                                  },
                                                  "end": {
                                                    "row": 47,
                                                    "column": 56
                                                  },
                                                  "text": ")"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "try_statement",
              "start": {
                "row": 49,
                "column": 8
              },
              "end": {
                "row": 68,
                "column": 13
              },
              "text": "try:\n            if target is not None:\n                X, y = check_X_y(features, target, accept_sparse=True, dtype=None)\n                if self._imputed:\n                    return X, y\n                else:\n                    return features, target\n            else:\n                X = check_array(features, accept_sparse=True, dtype=None)\n                if self._imputed:\n                    return X\n                else:\n                    return features\n        except (AssertionError, ValueError):\n            raise ValueError(\n                'Error: Input data is not in a valid format. Please confirm '\n                'that the input data is scikit-learn compatible. For example, '\n                'the features must be a 2-D array and target labels must be a '\n                '1-D array.'\n            )",
              "children": [
                {
                  "type": "try",
                  "start": {
                    "row": 49,
                    "column": 8
                  },
                  "end": {
                    "row": 49,
                    "column": 11
                  },
                  "text": "try"
                },
                {
                  "type": ":",
                  "start": {
                    "row": 49,
                    "column": 11
                  },
                  "end": {
                    "row": 49,
                    "column": 12
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 50,
                    "column": 12
                  },
                  "end": {
                    "row": 61,
                    "column": 35
                  },
                  "text": "if target is not None:\n                X, y = check_X_y(features, target, accept_sparse=True, dtype=None)\n                if self._imputed:\n                    return X, y\n                else:\n                    return features, target\n            else:\n                X = check_array(features, accept_sparse=True, dtype=None)\n                if self._imputed:\n                    return X\n                else:\n                    return features",
                  "children": [
                    {
                      "type": "if_statement",
                      "start": {
                        "row": 50,
                        "column": 12
                      },
                      "end": {
                        "row": 61,
                        "column": 35
                      },
                      "text": "if target is not None:\n                X, y = check_X_y(features, target, accept_sparse=True, dtype=None)\n                if self._imputed:\n                    return X, y\n                else:\n                    return features, target\n            else:\n                X = check_array(features, accept_sparse=True, dtype=None)\n                if self._imputed:\n                    return X\n                else:\n                    return features",
                      "children": [
                        {
                          "type": "if",
                          "start": {
                            "row": 50,
                            "column": 12
                          },
                          "end": {
                            "row": 50,
                            "column": 14
                          },
                          "text": "if"
                        },
                        {
                          "type": "comparison_operator",
                          "start": {
                            "row": 50,
                            "column": 15
                          },
                          "end": {
                            "row": 50,
                            "column": 33
                          },
                          "text": "target is not None",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 50,
                                "column": 15
                              },
                              "end": {
                                "row": 50,
                                "column": 21
                              },
                              "text": "target"
                            },
                            {
                              "type": "is not",
                              "start": {
                                "row": 50,
                                "column": 22
                              },
                              "end": {
                                "row": 50,
                                "column": 24
                              },
                              "text": "is"
                            },
                            {
                              "type": "is not",
                              "start": {
                                "row": 50,
                                "column": 25
                              },
                              "end": {
                                "row": 50,
                                "column": 28
                              },
                              "text": "not"
                            },
                            {
                              "type": "none",
                              "start": {
                                "row": 50,
                                "column": 29
                              },
                              "end": {
                                "row": 50,
                                "column": 33
                              },
                              "text": "None"
                            }
                          ]
                        },
                        {
                          "type": ":",
                          "start": {
                            "row": 50,
                            "column": 33
                          },
                          "end": {
                            "row": 50,
                            "column": 34
                          },
                          "text": ":"
                        },
                        {
                          "type": "block",
                          "start": {
                            "row": 51,
                            "column": 16
                          },
                          "end": {
                            "row": 55,
                            "column": 43
                          },
                          "text": "X, y = check_X_y(features, target, accept_sparse=True, dtype=None)\n                if self._imputed:\n                    return X, y\n                else:\n                    return features, target",
                          "children": [
                            {
                              "type": "expression_statement",
                              "start": {
                                "row": 51,
                                "column": 16
                              },
                              "end": {
                                "row": 51,
                                "column": 82
                              },
                              "text": "X, y = check_X_y(features, target, accept_sparse=True, dtype=None)",
                              "children": [
                                {
                                  "type": "assignment",
                                  "start": {
                                    "row": 51,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 51,
                                    "column": 82
                                  },
                                  "text": "X, y = check_X_y(features, target, accept_sparse=True, dtype=None)",
                                  "children": [
                                    {
                                      "type": "pattern_list",
                                      "start": {
                                        "row": 51,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 51,
                                        "column": 20
                                      },
                                      "text": "X, y",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 51,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 51,
                                            "column": 17
                                          },
                                          "text": "X"
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 51,
                                            "column": 17
                                          },
                                          "end": {
                                            "row": 51,
                                            "column": 18
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 51,
                                            "column": 19
                                          },
                                          "end": {
                                            "row": 51,
                                            "column": 20
                                          },
                                          "text": "y"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "=",
                                      "start": {
                                        "row": 51,
                                        "column": 21
                                      },
                                      "end": {
                                        "row": 51,
                                        "column": 22
                                      },
                                      "text": "="
                                    },
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 51,
                                        "column": 23
                                      },
                                      "end": {
                                        "row": 51,
                                        "column": 82
                                      },
                                      "text": "check_X_y(features, target, accept_sparse=True, dtype=None)",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 51,
                                            "column": 23
                                          },
                                          "end": {
                                            "row": 51,
                                            "column": 32
                                          },
                                          "text": "check_X_y"
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 51,
                                            "column": 32
                                          },
                                          "end": {
                                            "row": 51,
                                            "column": 82
                                          },
                                          "text": "(features, target, accept_sparse=True, dtype=None)",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 51,
                                                "column": 32
                                              },
                                              "end": {
                                                "row": 51,
                                                "column": 33
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 51,
                                                "column": 33
                                              },
                                              "end": {
                                                "row": 51,
                                                "column": 41
                                              },
                                              "text": "features"
                                            },
                                            {
                                              "type": ",",
                                              "start": {
                                                "row": 51,
                                                "column": 41
                                              },
                                              "end": {
                                                "row": 51,
                                                "column": 42
                                              },
                                              "text": ","
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 51,
                                                "column": 43
                                              },
                                              "end": {
                                                "row": 51,
                                                "column": 49
                                              },
                                              "text": "target"
                                            },
                                            {
                                              "type": ",",
                                              "start": {
                                                "row": 51,
                                                "column": 49
                                              },
                                              "end": {
                                                "row": 51,
                                                "column": 50
                                              },
                                              "text": ","
                                            },
                                            {
                                              "type": "keyword_argument",
                                              "start": {
                                                "row": 51,
                                                "column": 51
                                              },
                                              "end": {
                                                "row": 51,
                                                "column": 69
                                              },
                                              "text": "accept_sparse=True",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 51,
                                                    "column": 51
                                                  },
                                                  "end": {
                                                    "row": 51,
                                                    "column": 64
                                                  },
                                                  "text": "accept_sparse"
                                                },
                                                {
                                                  "type": "=",
                                                  "start": {
                                                    "row": 51,
                                                    "column": 64
                                                  },
                                                  "end": {
                                                    "row": 51,
                                                    "column": 65
                                                  },
                                                  "text": "="
                                                },
                                                {
                                                  "type": "true",
                                                  "start": {
                                                    "row": 51,
                                                    "column": 65
                                                  },
                                                  "end": {
                                                    "row": 51,
                                                    "column": 69
                                                  },
                                                  "text": "True"
                                                }
                                              ]
                                            },
                                            {
                                              "type": ",",
                                              "start": {
                                                "row": 51,
                                                "column": 69
                                              },
                                              "end": {
                                                "row": 51,
                                                "column": 70
                                              },
                                              "text": ","
                                            },
                                            {
                                              "type": "keyword_argument",
                                              "start": {
                                                "row": 51,
                                                "column": 71
                                              },
                                              "end": {
                                                "row": 51,
                                                "column": 81
                                              },
                                              "text": "dtype=None",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 51,
                                                    "column": 71
                                                  },
                                                  "end": {
                                                    "row": 51,
                                                    "column": 76
                                                  },
                                                  "text": "dtype"
                                                },
                                                {
                                                  "type": "=",
                                                  "start": {
                                                    "row": 51,
                                                    "column": 76
                                                  },
                                                  "end": {
                                                    "row": 51,
                                                    "column": 77
                                                  },
                                                  "text": "="
                                                },
                                                {
                                                  "type": "none",
                                                  "start": {
                                                    "row": 51,
                                                    "column": 77
                                                  },
                                                  "end": {
                                                    "row": 51,
                                                    "column": 81
                                                  },
                                                  "text": "None"
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 51,
                                                "column": 81
                                              },
                                              "end": {
                                                "row": 51,
                                                "column": 82
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "if_statement",
                              "start": {
                                "row": 52,
                                "column": 16
                              },
                              "end": {
                                "row": 55,
                                "column": 43
                              },
                              "text": "if self._imputed:\n                    return X, y\n                else:\n                    return features, target",
                              "children": [
                                {
                                  "type": "if",
                                  "start": {
                                    "row": 52,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 52,
                                    "column": 18
                                  },
                                  "text": "if"
                                },
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 52,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 52,
                                    "column": 32
                                  },
                                  "text": "self._imputed",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 52,
                                        "column": 19
                                      },
                                      "end": {
                                        "row": 52,
                                        "column": 23
                                      },
                                      "text": "self"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 52,
                                        "column": 23
                                      },
                                      "end": {
                                        "row": 52,
                                        "column": 24
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 52,
                                        "column": 24
                                      },
                                      "end": {
                                        "row": 52,
                                        "column": 32
                                      },
                                      "text": "_imputed"
                                    }
                                  ]
                                },
                                {
                                  "type": ":",
                                  "start": {
                                    "row": 52,
                                    "column": 32
                                  },
                                  "end": {
                                    "row": 52,
                                    "column": 33
                                  },
                                  "text": ":"
                                },
                                {
                                  "type": "block",
                                  "start": {
                                    "row": 53,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 53,
                                    "column": 31
                                  },
                                  "text": "return X, y",
                                  "children": [
                                    {
                                      "type": "return_statement",
                                      "start": {
                                        "row": 53,
                                        "column": 20
                                      },
                                      "end": {
                                        "row": 53,
                                        "column": 31
                                      },
                                      "text": "return X, y",
                                      "children": [
                                        {
                                          "type": "return",
                                          "start": {
                                            "row": 53,
                                            "column": 20
                                          },
                                          "end": {
                                            "row": 53,
                                            "column": 26
                                          },
                                          "text": "return"
                                        },
                                        {
                                          "type": "expression_list",
                                          "start": {
                                            "row": 53,
                                            "column": 27
                                          },
                                          "end": {
                                            "row": 53,
                                            "column": 31
                                          },
                                          "text": "X, y",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 53,
                                                "column": 27
                                              },
                                              "end": {
                                                "row": 53,
                                                "column": 28
                                              },
                                              "text": "X"
                                            },
                                            {
                                              "type": ",",
                                              "start": {
                                                "row": 53,
                                                "column": 28
                                              },
                                              "end": {
                                                "row": 53,
                                                "column": 29
                                              },
                                              "text": ","
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 53,
                                                "column": 30
                                              },
                                              "end": {
                                                "row": 53,
                                                "column": 31
                                              },
                                              "text": "y"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "else_clause",
                                  "start": {
                                    "row": 54,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 55,
                                    "column": 43
                                  },
                                  "text": "else:\n                    return features, target",
                                  "children": [
                                    {
                                      "type": "else",
                                      "start": {
                                        "row": 54,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 54,
                                        "column": 20
                                      },
                                      "text": "else"
                                    },
                                    {
                                      "type": ":",
                                      "start": {
                                        "row": 54,
                                        "column": 20
                                      },
                                      "end": {
                                        "row": 54,
                                        "column": 21
                                      },
                                      "text": ":"
                                    },
                                    {
                                      "type": "block",
                                      "start": {
                                        "row": 55,
                                        "column": 20
                                      },
                                      "end": {
                                        "row": 55,
                                        "column": 43
                                      },
                                      "text": "return features, target",
                                      "children": [
                                        {
                                          "type": "return_statement",
                                          "start": {
                                            "row": 55,
                                            "column": 20
                                          },
                                          "end": {
                                            "row": 55,
                                            "column": 43
                                          },
                                          "text": "return features, target",
                                          "children": [
                                            {
                                              "type": "return",
                                              "start": {
                                                "row": 55,
                                                "column": 20
                                              },
                                              "end": {
                                                "row": 55,
                                                "column": 26
                                              },
                                              "text": "return"
                                            },
                                            {
                                              "type": "expression_list",
                                              "start": {
                                                "row": 55,
                                                "column": 27
                                              },
                                              "end": {
                                                "row": 55,
                                                "column": 43
                                              },
                                              "text": "features, target",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 55,
                                                    "column": 27
                                                  },
                                                  "end": {
                                                    "row": 55,
                                                    "column": 35
                                                  },
                                                  "text": "features"
                                                },
                                                {
                                                  "type": ",",
                                                  "start": {
                                                    "row": 55,
                                                    "column": 35
                                                  },
                                                  "end": {
                                                    "row": 55,
                                                    "column": 36
                                                  },
                                                  "text": ","
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 55,
                                                    "column": 37
                                                  },
                                                  "end": {
                                                    "row": 55,
                                                    "column": 43
                                                  },
                                                  "text": "target"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "else_clause",
                          "start": {
                            "row": 56,
                            "column": 12
                          },
                          "end": {
                            "row": 61,
                            "column": 35
                          },
                          "text": "else:\n                X = check_array(features, accept_sparse=True, dtype=None)\n                if self._imputed:\n                    return X\n                else:\n                    return features",
                          "children": [
                            {
                              "type": "else",
                              "start": {
                                "row": 56,
                                "column": 12
                              },
                              "end": {
                                "row": 56,
                                "column": 16
                              },
                              "text": "else"
                            },
                            {
                              "type": ":",
                              "start": {
                                "row": 56,
                                "column": 16
                              },
                              "end": {
                                "row": 56,
                                "column": 17
                              },
                              "text": ":"
                            },
                            {
                              "type": "block",
                              "start": {
                                "row": 57,
                                "column": 16
                              },
                              "end": {
                                "row": 61,
                                "column": 35
                              },
                              "text": "X = check_array(features, accept_sparse=True, dtype=None)\n                if self._imputed:\n                    return X\n                else:\n                    return features",
                              "children": [
                                {
                                  "type": "expression_statement",
                                  "start": {
                                    "row": 57,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 57,
                                    "column": 73
                                  },
                                  "text": "X = check_array(features, accept_sparse=True, dtype=None)",
                                  "children": [
                                    {
                                      "type": "assignment",
                                      "start": {
                                        "row": 57,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 57,
                                        "column": 73
                                      },
                                      "text": "X = check_array(features, accept_sparse=True, dtype=None)",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 57,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 57,
                                            "column": 17
                                          },
                                          "text": "X"
                                        },
                                        {
                                          "type": "=",
                                          "start": {
                                            "row": 57,
                                            "column": 18
                                          },
                                          "end": {
                                            "row": 57,
                                            "column": 19
                                          },
                                          "text": "="
                                        },
                                        {
                                          "type": "call",
                                          "start": {
                                            "row": 57,
                                            "column": 20
                                          },
                                          "end": {
                                            "row": 57,
                                            "column": 73
                                          },
                                          "text": "check_array(features, accept_sparse=True, dtype=None)",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 57,
                                                "column": 20
                                              },
                                              "end": {
                                                "row": 57,
                                                "column": 31
                                              },
                                              "text": "check_array"
                                            },
                                            {
                                              "type": "argument_list",
                                              "start": {
                                                "row": 57,
                                                "column": 31
                                              },
                                              "end": {
                                                "row": 57,
                                                "column": 73
                                              },
                                              "text": "(features, accept_sparse=True, dtype=None)",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 57,
                                                    "column": 31
                                                  },
                                                  "end": {
                                                    "row": 57,
                                                    "column": 32
                                                  },
                                                  "text": "("
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 57,
                                                    "column": 32
                                                  },
                                                  "end": {
                                                    "row": 57,
                                                    "column": 40
                                                  },
                                                  "text": "features"
                                                },
                                                {
                                                  "type": ",",
                                                  "start": {
                                                    "row": 57,
                                                    "column": 40
                                                  },
                                                  "end": {
                                                    "row": 57,
                                                    "column": 41
                                                  },
                                                  "text": ","
                                                },
                                                {
                                                  "type": "keyword_argument",
                                                  "start": {
                                                    "row": 57,
                                                    "column": 42
                                                  },
                                                  "end": {
                                                    "row": 57,
                                                    "column": 60
                                                  },
                                                  "text": "accept_sparse=True",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 57,
                                                        "column": 42
                                                      },
                                                      "end": {
                                                        "row": 57,
                                                        "column": 55
                                                      },
                                                      "text": "accept_sparse"
                                                    },
                                                    {
                                                      "type": "=",
                                                      "start": {
                                                        "row": 57,
                                                        "column": 55
                                                      },
                                                      "end": {
                                                        "row": 57,
                                                        "column": 56
                                                      },
                                                      "text": "="
                                                    },
                                                    {
                                                      "type": "true",
                                                      "start": {
                                                        "row": 57,
                                                        "column": 56
                                                      },
                                                      "end": {
                                                        "row": 57,
                                                        "column": 60
                                                      },
                                                      "text": "True"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ",",
                                                  "start": {
                                                    "row": 57,
                                                    "column": 60
                                                  },
                                                  "end": {
                                                    "row": 57,
                                                    "column": 61
                                                  },
                                                  "text": ","
                                                },
                                                {
                                                  "type": "keyword_argument",
                                                  "start": {
                                                    "row": 57,
                                                    "column": 62
                                                  },
                                                  "end": {
                                                    "row": 57,
                                                    "column": 72
                                                  },
                                                  "text": "dtype=None",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 57,
                                                        "column": 62
                                                      },
                                                      "end": {
                                                        "row": 57,
                                                        "column": 67
                                                      },
                                                      "text": "dtype"
                                                    },
                                                    {
                                                      "type": "=",
                                                      "start": {
                                                        "row": 57,
                                                        "column": 67
                                                      },
                                                      "end": {
                                                        "row": 57,
                                                        "column": 68
                                                      },
                                                      "text": "="
                                                    },
                                                    {
                                                      "type": "none",
                                                      "start": {
                                                        "row": 57,
                                                        "column": 68
                                                      },
                                                      "end": {
                                                        "row": 57,
                                                        "column": 72
                                                      },
                                                      "text": "None"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 57,
                                                    "column": 72
                                                  },
                                                  "end": {
                                                    "row": 57,
                                                    "column": 73
                                                  },
                                                  "text": ")"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "if_statement",
                                  "start": {
                                    "row": 58,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 61,
                                    "column": 35
                                  },
                                  "text": "if self._imputed:\n                    return X\n                else:\n                    return features",
                                  "children": [
                                    {
                                      "type": "if",
                                      "start": {
                                        "row": 58,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 58,
                                        "column": 18
                                      },
                                      "text": "if"
                                    },
                                    {
                                      "type": "attribute",
                                      "start": {
                                        "row": 58,
                                        "column": 19
                                      },
                                      "end": {
                                        "row": 58,
                                        "column": 32
                                      },
                                      "text": "self._imputed",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 58,
                                            "column": 19
                                          },
                                          "end": {
                                            "row": 58,
                                            "column": 23
                                          },
                                          "text": "self"
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 58,
                                            "column": 23
                                          },
                                          "end": {
                                            "row": 58,
                                            "column": 24
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 58,
                                            "column": 24
                                          },
                                          "end": {
                                            "row": 58,
                                            "column": 32
                                          },
                                          "text": "_imputed"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ":",
                                      "start": {
                                        "row": 58,
                                        "column": 32
                                      },
                                      "end": {
                                        "row": 58,
                                        "column": 33
                                      },
                                      "text": ":"
                                    },
                                    {
                                      "type": "block",
                                      "start": {
                                        "row": 59,
                                        "column": 20
                                      },
                                      "end": {
                                        "row": 59,
                                        "column": 28
                                      },
                                      "text": "return X",
                                      "children": [
                                        {
                                          "type": "return_statement",
                                          "start": {
                                            "row": 59,
                                            "column": 20
                                          },
                                          "end": {
                                            "row": 59,
                                            "column": 28
                                          },
                                          "text": "return X",
                                          "children": [
                                            {
                                              "type": "return",
                                              "start": {
                                                "row": 59,
                                                "column": 20
                                              },
                                              "end": {
                                                "row": 59,
                                                "column": 26
                                              },
                                              "text": "return"
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 59,
                                                "column": 27
                                              },
                                              "end": {
                                                "row": 59,
                                                "column": 28
                                              },
                                              "text": "X"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "else_clause",
                                      "start": {
                                        "row": 60,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 61,
                                        "column": 35
                                      },
                                      "text": "else:\n                    return features",
                                      "children": [
                                        {
                                          "type": "else",
                                          "start": {
                                            "row": 60,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 60,
                                            "column": 20
                                          },
                                          "text": "else"
                                        },
                                        {
                                          "type": ":",
                                          "start": {
                                            "row": 60,
                                            "column": 20
                                          },
                                          "end": {
                                            "row": 60,
                                            "column": 21
                                          },
                                          "text": ":"
                                        },
                                        {
                                          "type": "block",
                                          "start": {
                                            "row": 61,
                                            "column": 20
                                          },
                                          "end": {
                                            "row": 61,
                                            "column": 35
                                          },
                                          "text": "return features",
                                          "children": [
                                            {
                                              "type": "return_statement",
                                              "start": {
                                                "row": 61,
                                                "column": 20
                                              },
                                              "end": {
                                                "row": 61,
                                                "column": 35
                                              },
                                              "text": "return features",
                                              "children": [
                                                {
                                                  "type": "return",
                                                  "start": {
                                                    "row": 61,
                                                    "column": 20
                                                  },
                                                  "end": {
                                                    "row": 61,
                                                    "column": 26
                                                  },
                                                  "text": "return"
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 61,
                                                    "column": 27
                                                  },
                                                  "end": {
                                                    "row": 61,
                                                    "column": 35
                                                  },
                                                  "text": "features"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "except_clause",
                  "start": {
                    "row": 62,
                    "column": 8
                  },
                  "end": {
                    "row": 68,
                    "column": 13
                  },
                  "text": "except (AssertionError, ValueError):\n            raise ValueError(\n                'Error: Input data is not in a valid format. Please confirm '\n                'that the input data is scikit-learn compatible. For example, '\n                'the features must be a 2-D array and target labels must be a '\n                '1-D array.'\n            )",
                  "children": [
                    {
                      "type": "except",
                      "start": {
                        "row": 62,
                        "column": 8
                      },
                      "end": {
                        "row": 62,
                        "column": 14
                      },
                      "text": "except"
                    },
                    {
                      "type": "tuple",
                      "start": {
                        "row": 62,
                        "column": 15
                      },
                      "end": {
                        "row": 62,
                        "column": 43
                      },
                      "text": "(AssertionError, ValueError)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 62,
                            "column": 15
                          },
                          "end": {
                            "row": 62,
                            "column": 16
                          },
                          "text": "("
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 62,
                            "column": 16
                          },
                          "end": {
                            "row": 62,
                            "column": 30
                          },
                          "text": "AssertionError"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 62,
                            "column": 30
                          },
                          "end": {
                            "row": 62,
                            "column": 31
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 62,
                            "column": 32
                          },
                          "end": {
                            "row": 62,
                            "column": 42
                          },
                          "text": "ValueError"
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 62,
                            "column": 42
                          },
                          "end": {
                            "row": 62,
                            "column": 43
                          },
                          "text": ")"
                        }
                      ]
                    },
                    {
                      "type": ":",
                      "start": {
                        "row": 62,
                        "column": 43
                      },
                      "end": {
                        "row": 62,
                        "column": 44
                      },
                      "text": ":"
                    },
                    {
                      "type": "block",
                      "start": {
                        "row": 63,
                        "column": 12
                      },
                      "end": {
                        "row": 68,
                        "column": 13
                      },
                      "text": "raise ValueError(\n                'Error: Input data is not in a valid format. Please confirm '\n                'that the input data is scikit-learn compatible. For example, '\n                'the features must be a 2-D array and target labels must be a '\n                '1-D array.'\n            )",
                      "children": [
                        {
                          "type": "raise_statement",
                          "start": {
                            "row": 63,
                            "column": 12
                          },
                          "end": {
                            "row": 68,
                            "column": 13
                          },
                          "text": "raise ValueError(\n                'Error: Input data is not in a valid format. Please confirm '\n                'that the input data is scikit-learn compatible. For example, '\n                'the features must be a 2-D array and target labels must be a '\n                '1-D array.'\n            )",
                          "children": [
                            {
                              "type": "raise",
                              "start": {
                                "row": 63,
                                "column": 12
                              },
                              "end": {
                                "row": 63,
                                "column": 17
                              },
                              "text": "raise"
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 63,
                                "column": 18
                              },
                              "end": {
                                "row": 68,
                                "column": 13
                              },
                              "text": "ValueError(\n                'Error: Input data is not in a valid format. Please confirm '\n                'that the input data is scikit-learn compatible. For example, '\n                'the features must be a 2-D array and target labels must be a '\n                '1-D array.'\n            )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 63,
                                    "column": 18
                                  },
                                  "end": {
                                    "row": 63,
                                    "column": 28
                                  },
                                  "text": "ValueError"
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 63,
                                    "column": 28
                                  },
                                  "end": {
                                    "row": 68,
                                    "column": 13
                                  },
                                  "text": "(\n                'Error: Input data is not in a valid format. Please confirm '\n                'that the input data is scikit-learn compatible. For example, '\n                'the features must be a 2-D array and target labels must be a '\n                '1-D array.'\n            )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 63,
                                        "column": 28
                                      },
                                      "end": {
                                        "row": 63,
                                        "column": 29
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "concatenated_string",
                                      "start": {
                                        "row": 64,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 67,
                                        "column": 28
                                      },
                                      "text": "'Error: Input data is not in a valid format. Please confirm '\n                'that the input data is scikit-learn compatible. For example, '\n                'the features must be a 2-D array and target labels must be a '\n                '1-D array.'",
                                      "children": [
                                        {
                                          "type": "string",
                                          "start": {
                                            "row": 64,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 64,
                                            "column": 77
                                          },
                                          "text": "'Error: Input data is not in a valid format. Please confirm '",
                                          "children": [
                                            {
                                              "type": "string_start",
                                              "start": {
                                                "row": 64,
                                                "column": 16
                                              },
                                              "end": {
                                                "row": 64,
                                                "column": 17
                                              },
                                              "text": "'"
                                            },
                                            {
                                              "type": "string_content",
                                              "start": {
                                                "row": 64,
                                                "column": 17
                                              },
                                              "end": {
                                                "row": 64,
                                                "column": 76
                                              },
                                              "text": "Error: Input data is not in a valid format. Please confirm "
                                            },
                                            {
                                              "type": "string_end",
                                              "start": {
                                                "row": 64,
                                                "column": 76
                                              },
                                              "end": {
                                                "row": 64,
                                                "column": 77
                                              },
                                              "text": "'"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "string",
                                          "start": {
                                            "row": 65,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 65,
                                            "column": 79
                                          },
                                          "text": "'that the input data is scikit-learn compatible. For example, '",
                                          "children": [
                                            {
                                              "type": "string_start",
                                              "start": {
                                                "row": 65,
                                                "column": 16
                                              },
                                              "end": {
                                                "row": 65,
                                                "column": 17
                                              },
                                              "text": "'"
                                            },
                                            {
                                              "type": "string_content",
                                              "start": {
                                                "row": 65,
                                                "column": 17
                                              },
                                              "end": {
                                                "row": 65,
                                                "column": 78
                                              },
                                              "text": "that the input data is scikit-learn compatible. For example, "
                                            },
                                            {
                                              "type": "string_end",
                                              "start": {
                                                "row": 65,
                                                "column": 78
                                              },
                                              "end": {
                                                "row": 65,
                                                "column": 79
                                              },
                                              "text": "'"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "string",
                                          "start": {
                                            "row": 66,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 66,
                                            "column": 79
                                          },
                                          "text": "'the features must be a 2-D array and target labels must be a '",
                                          "children": [
                                            {
                                              "type": "string_start",
                                              "start": {
                                                "row": 66,
                                                "column": 16
                                              },
                                              "end": {
                                                "row": 66,
                                                "column": 17
                                              },
                                              "text": "'"
                                            },
                                            {
                                              "type": "string_content",
                                              "start": {
                                                "row": 66,
                                                "column": 17
                                              },
                                              "end": {
                                                "row": 66,
                                                "column": 78
                                              },
                                              "text": "the features must be a 2-D array and target labels must be a "
                                            },
                                            {
                                              "type": "string_end",
                                              "start": {
                                                "row": 66,
                                                "column": 78
                                              },
                                              "end": {
                                                "row": 66,
                                                "column": 79
                                              },
                                              "text": "'"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "string",
                                          "start": {
                                            "row": 67,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 67,
                                            "column": 28
                                          },
                                          "text": "'1-D array.'",
                                          "children": [
                                            {
                                              "type": "string_start",
                                              "start": {
                                                "row": 67,
                                                "column": 16
                                              },
                                              "end": {
                                                "row": 67,
                                                "column": 17
                                              },
                                              "text": "'"
                                            },
                                            {
                                              "type": "string_content",
                                              "start": {
                                                "row": 67,
                                                "column": 17
                                              },
                                              "end": {
                                                "row": 67,
                                                "column": 27
                                              },
                                              "text": "1-D array."
                                            },
                                            {
                                              "type": "string_end",
                                              "start": {
                                                "row": 67,
                                                "column": 27
                                              },
                                              "end": {
                                                "row": 67,
                                                "column": 28
                                              },
                                              "text": "'"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 68,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 68,
                                        "column": 13
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}