{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 13,
    "column": 40
  },
  "text": "def set_close_callback(self, callback: Optional[Callable[[], None]]) -> None:\n        \"\"\"Call the given callback when the stream is closed.\n\n        This mostly is not necessary for applications that use the\n        `.Future` interface; all outstanding ``Futures`` will resolve\n        with a `StreamClosedError` when the stream is closed. However,\n        it is still useful as a way to signal that the stream has been\n        closed while no other read or write is in progress.\n\n        Unlike other callback-based interfaces, ``set_close_callback``\n        was not removed in Tornado 6.0.\n        \"\"\"\n        self._close_callback = callback\n        self._maybe_add_error_listener()",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 13,
        "column": 40
      },
      "text": "def set_close_callback(self, callback: Optional[Callable[[], None]]) -> None:\n        \"\"\"Call the given callback when the stream is closed.\n\n        This mostly is not necessary for applications that use the\n        `.Future` interface; all outstanding ``Futures`` will resolve\n        with a `StreamClosedError` when the stream is closed. However,\n        it is still useful as a way to signal that the stream has been\n        closed while no other read or write is in progress.\n\n        Unlike other callback-based interfaces, ``set_close_callback``\n        was not removed in Tornado 6.0.\n        \"\"\"\n        self._close_callback = callback\n        self._maybe_add_error_listener()",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 22
          },
          "text": "set_close_callback"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 22
          },
          "end": {
            "row": 0,
            "column": 68
          },
          "text": "(self, callback: Optional[Callable[[], None]])",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 22
              },
              "end": {
                "row": 0,
                "column": 23
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 23
              },
              "end": {
                "row": 0,
                "column": 27
              },
              "text": "self"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 27
              },
              "end": {
                "row": 0,
                "column": 28
              },
              "text": ","
            },
            {
              "type": "typed_parameter",
              "start": {
                "row": 0,
                "column": 29
              },
              "end": {
                "row": 0,
                "column": 67
              },
              "text": "callback: Optional[Callable[[], None]]",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 29
                  },
                  "end": {
                    "row": 0,
                    "column": 37
                  },
                  "text": "callback"
                },
                {
                  "type": ":",
                  "start": {
                    "row": 0,
                    "column": 37
                  },
                  "end": {
                    "row": 0,
                    "column": 38
                  },
                  "text": ":"
                },
                {
                  "type": "type",
                  "start": {
                    "row": 0,
                    "column": 39
                  },
                  "end": {
                    "row": 0,
                    "column": 67
                  },
                  "text": "Optional[Callable[[], None]]",
                  "children": [
                    {
                      "type": "generic_type",
                      "start": {
                        "row": 0,
                        "column": 39
                      },
                      "end": {
                        "row": 0,
                        "column": 67
                      },
                      "text": "Optional[Callable[[], None]]",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 0,
                            "column": 39
                          },
                          "end": {
                            "row": 0,
                            "column": 47
                          },
                          "text": "Optional"
                        },
                        {
                          "type": "type_parameter",
                          "start": {
                            "row": 0,
                            "column": 47
                          },
                          "end": {
                            "row": 0,
                            "column": 67
                          },
                          "text": "[Callable[[], None]]",
                          "children": [
                            {
                              "type": "[",
                              "start": {
                                "row": 0,
                                "column": 47
                              },
                              "end": {
                                "row": 0,
                                "column": 48
                              },
                              "text": "["
                            },
                            {
                              "type": "type",
                              "start": {
                                "row": 0,
                                "column": 48
                              },
                              "end": {
                                "row": 0,
                                "column": 66
                              },
                              "text": "Callable[[], None]",
                              "children": [
                                {
                                  "type": "generic_type",
                                  "start": {
                                    "row": 0,
                                    "column": 48
                                  },
                                  "end": {
                                    "row": 0,
                                    "column": 66
                                  },
                                  "text": "Callable[[], None]",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 0,
                                        "column": 48
                                      },
                                      "end": {
                                        "row": 0,
                                        "column": 56
                                      },
                                      "text": "Callable"
                                    },
                                    {
                                      "type": "type_parameter",
                                      "start": {
                                        "row": 0,
                                        "column": 56
                                      },
                                      "end": {
                                        "row": 0,
                                        "column": 66
                                      },
                                      "text": "[[], None]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start": {
                                            "row": 0,
                                            "column": 56
                                          },
                                          "end": {
                                            "row": 0,
                                            "column": 57
                                          },
                                          "text": "["
                                        },
                                        {
                                          "type": "type",
                                          "start": {
                                            "row": 0,
                                            "column": 57
                                          },
                                          "end": {
                                            "row": 0,
                                            "column": 59
                                          },
                                          "text": "[]",
                                          "children": [
                                            {
                                              "type": "list",
                                              "start": {
                                                "row": 0,
                                                "column": 57
                                              },
                                              "end": {
                                                "row": 0,
                                                "column": 59
                                              },
                                              "text": "[]",
                                              "children": [
                                                {
                                                  "type": "[",
                                                  "start": {
                                                    "row": 0,
                                                    "column": 57
                                                  },
                                                  "end": {
                                                    "row": 0,
                                                    "column": 58
                                                  },
                                                  "text": "["
                                                },
                                                {
                                                  "type": "]",
                                                  "start": {
                                                    "row": 0,
                                                    "column": 58
                                                  },
                                                  "end": {
                                                    "row": 0,
                                                    "column": 59
                                                  },
                                                  "text": "]"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 0,
                                            "column": 59
                                          },
                                          "end": {
                                            "row": 0,
                                            "column": 60
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "type",
                                          "start": {
                                            "row": 0,
                                            "column": 61
                                          },
                                          "end": {
                                            "row": 0,
                                            "column": 65
                                          },
                                          "text": "None",
                                          "children": [
                                            {
                                              "type": "none",
                                              "start": {
                                                "row": 0,
                                                "column": 61
                                              },
                                              "end": {
                                                "row": 0,
                                                "column": 65
                                              },
                                              "text": "None"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "]",
                                          "start": {
                                            "row": 0,
                                            "column": 65
                                          },
                                          "end": {
                                            "row": 0,
                                            "column": 66
                                          },
                                          "text": "]"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "]",
                              "start": {
                                "row": 0,
                                "column": 66
                              },
                              "end": {
                                "row": 0,
                                "column": 67
                              },
                              "text": "]"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 67
              },
              "end": {
                "row": 0,
                "column": 68
              },
              "text": ")"
            }
          ]
        },
        {
          "type": "->",
          "start": {
            "row": 0,
            "column": 69
          },
          "end": {
            "row": 0,
            "column": 71
          },
          "text": "->"
        },
        {
          "type": "type",
          "start": {
            "row": 0,
            "column": 72
          },
          "end": {
            "row": 0,
            "column": 76
          },
          "text": "None",
          "children": [
            {
              "type": "none",
              "start": {
                "row": 0,
                "column": 72
              },
              "end": {
                "row": 0,
                "column": 76
              },
              "text": "None"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 76
          },
          "end": {
            "row": 0,
            "column": 77
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 8
          },
          "end": {
            "row": 13,
            "column": 40
          },
          "text": "\"\"\"Call the given callback when the stream is closed.\n\n        This mostly is not necessary for applications that use the\n        `.Future` interface; all outstanding ``Futures`` will resolve\n        with a `StreamClosedError` when the stream is closed. However,\n        it is still useful as a way to signal that the stream has been\n        closed while no other read or write is in progress.\n\n        Unlike other callback-based interfaces, ``set_close_callback``\n        was not removed in Tornado 6.0.\n        \"\"\"\n        self._close_callback = callback\n        self._maybe_add_error_listener()",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 8
              },
              "end": {
                "row": 11,
                "column": 11
              },
              "text": "\"\"\"Call the given callback when the stream is closed.\n\n        This mostly is not necessary for applications that use the\n        `.Future` interface; all outstanding ``Futures`` will resolve\n        with a `StreamClosedError` when the stream is closed. However,\n        it is still useful as a way to signal that the stream has been\n        closed while no other read or write is in progress.\n\n        Unlike other callback-based interfaces, ``set_close_callback``\n        was not removed in Tornado 6.0.\n        \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 8
                  },
                  "end": {
                    "row": 11,
                    "column": 11
                  },
                  "text": "\"\"\"Call the given callback when the stream is closed.\n\n        This mostly is not necessary for applications that use the\n        `.Future` interface; all outstanding ``Futures`` will resolve\n        with a `StreamClosedError` when the stream is closed. However,\n        it is still useful as a way to signal that the stream has been\n        closed while no other read or write is in progress.\n\n        Unlike other callback-based interfaces, ``set_close_callback``\n        was not removed in Tornado 6.0.\n        \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 8
                      },
                      "end": {
                        "row": 1,
                        "column": 11
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 11
                      },
                      "end": {
                        "row": 11,
                        "column": 8
                      },
                      "text": "Call the given callback when the stream is closed.\n\n        This mostly is not necessary for applications that use the\n        `.Future` interface; all outstanding ``Futures`` will resolve\n        with a `StreamClosedError` when the stream is closed. However,\n        it is still useful as a way to signal that the stream has been\n        closed while no other read or write is in progress.\n\n        Unlike other callback-based interfaces, ``set_close_callback``\n        was not removed in Tornado 6.0.\n        "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 11,
                        "column": 8
                      },
                      "end": {
                        "row": 11,
                        "column": 11
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 12,
                "column": 8
              },
              "end": {
                "row": 12,
                "column": 39
              },
              "text": "self._close_callback = callback",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 12,
                    "column": 8
                  },
                  "end": {
                    "row": 12,
                    "column": 39
                  },
                  "text": "self._close_callback = callback",
                  "children": [
                    {
                      "type": "attribute",
                      "start": {
                        "row": 12,
                        "column": 8
                      },
                      "end": {
                        "row": 12,
                        "column": 28
                      },
                      "text": "self._close_callback",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 12,
                            "column": 8
                          },
                          "end": {
                            "row": 12,
                            "column": 12
                          },
                          "text": "self"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 12,
                            "column": 12
                          },
                          "end": {
                            "row": 12,
                            "column": 13
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 12,
                            "column": 13
                          },
                          "end": {
                            "row": 12,
                            "column": 28
                          },
                          "text": "_close_callback"
                        }
                      ]
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 12,
                        "column": 29
                      },
                      "end": {
                        "row": 12,
                        "column": 30
                      },
                      "text": "="
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 12,
                        "column": 31
                      },
                      "end": {
                        "row": 12,
                        "column": 39
                      },
                      "text": "callback"
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 13,
                "column": 8
              },
              "end": {
                "row": 13,
                "column": 40
              },
              "text": "self._maybe_add_error_listener()",
              "children": [
                {
                  "type": "call",
                  "start": {
                    "row": 13,
                    "column": 8
                  },
                  "end": {
                    "row": 13,
                    "column": 40
                  },
                  "text": "self._maybe_add_error_listener()",
                  "children": [
                    {
                      "type": "attribute",
                      "start": {
                        "row": 13,
                        "column": 8
                      },
                      "end": {
                        "row": 13,
                        "column": 38
                      },
                      "text": "self._maybe_add_error_listener",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 13,
                            "column": 8
                          },
                          "end": {
                            "row": 13,
                            "column": 12
                          },
                          "text": "self"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 13,
                            "column": 12
                          },
                          "end": {
                            "row": 13,
                            "column": 13
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 13,
                            "column": 13
                          },
                          "end": {
                            "row": 13,
                            "column": 38
                          },
                          "text": "_maybe_add_error_listener"
                        }
                      ]
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 13,
                        "column": 38
                      },
                      "end": {
                        "row": 13,
                        "column": 40
                      },
                      "text": "()",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 13,
                            "column": 38
                          },
                          "end": {
                            "row": 13,
                            "column": 39
                          },
                          "text": "("
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 13,
                            "column": 39
                          },
                          "end": {
                            "row": 13,
                            "column": 40
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}