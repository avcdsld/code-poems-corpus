{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 24,
    "column": 60
  },
  "text": "def auth_gssapi_with_mic(self, username, gss_host, gss_deleg_creds):\n        \"\"\"\n        Authenticate to the Server using GSS-API / SSPI.\n\n        :param str username: The username to authenticate as\n        :param str gss_host: The target host\n        :param bool gss_deleg_creds: Delegate credentials or not\n        :return: list of auth types permissible for the next stage of\n                 authentication (normally empty)\n        :raises: `.BadAuthenticationType` -- if gssapi-with-mic isn't\n            allowed by the server (and no event was passed in)\n        :raises:\n            `.AuthenticationException` -- if the authentication failed (and no\n            event was passed in)\n        :raises: `.SSHException` -- if there was a network error\n        \"\"\"\n        if (not self.active) or (not self.initial_kex_done):\n            # we should never try to authenticate unless we're on a secure link\n            raise SSHException(\"No existing session\")\n        my_event = threading.Event()\n        self.auth_handler = AuthHandler(self)\n        self.auth_handler.auth_gssapi_with_mic(\n            username, gss_host, gss_deleg_creds, my_event\n        )\n        return self.auth_handler.wait_for_response(my_event)",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 24,
        "column": 60
      },
      "text": "def auth_gssapi_with_mic(self, username, gss_host, gss_deleg_creds):\n        \"\"\"\n        Authenticate to the Server using GSS-API / SSPI.\n\n        :param str username: The username to authenticate as\n        :param str gss_host: The target host\n        :param bool gss_deleg_creds: Delegate credentials or not\n        :return: list of auth types permissible for the next stage of\n                 authentication (normally empty)\n        :raises: `.BadAuthenticationType` -- if gssapi-with-mic isn't\n            allowed by the server (and no event was passed in)\n        :raises:\n            `.AuthenticationException` -- if the authentication failed (and no\n            event was passed in)\n        :raises: `.SSHException` -- if there was a network error\n        \"\"\"\n        if (not self.active) or (not self.initial_kex_done):\n            # we should never try to authenticate unless we're on a secure link\n            raise SSHException(\"No existing session\")\n        my_event = threading.Event()\n        self.auth_handler = AuthHandler(self)\n        self.auth_handler.auth_gssapi_with_mic(\n            username, gss_host, gss_deleg_creds, my_event\n        )\n        return self.auth_handler.wait_for_response(my_event)",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 24
          },
          "text": "auth_gssapi_with_mic"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 24
          },
          "end": {
            "row": 0,
            "column": 67
          },
          "text": "(self, username, gss_host, gss_deleg_creds)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 24
              },
              "end": {
                "row": 0,
                "column": 25
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 25
              },
              "end": {
                "row": 0,
                "column": 29
              },
              "text": "self"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 29
              },
              "end": {
                "row": 0,
                "column": 30
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 31
              },
              "end": {
                "row": 0,
                "column": 39
              },
              "text": "username"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 39
              },
              "end": {
                "row": 0,
                "column": 40
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 41
              },
              "end": {
                "row": 0,
                "column": 49
              },
              "text": "gss_host"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 49
              },
              "end": {
                "row": 0,
                "column": 50
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 51
              },
              "end": {
                "row": 0,
                "column": 66
              },
              "text": "gss_deleg_creds"
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 66
              },
              "end": {
                "row": 0,
                "column": 67
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 67
          },
          "end": {
            "row": 0,
            "column": 68
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 8
          },
          "end": {
            "row": 24,
            "column": 60
          },
          "text": "\"\"\"\n        Authenticate to the Server using GSS-API / SSPI.\n\n        :param str username: The username to authenticate as\n        :param str gss_host: The target host\n        :param bool gss_deleg_creds: Delegate credentials or not\n        :return: list of auth types permissible for the next stage of\n                 authentication (normally empty)\n        :raises: `.BadAuthenticationType` -- if gssapi-with-mic isn't\n            allowed by the server (and no event was passed in)\n        :raises:\n            `.AuthenticationException` -- if the authentication failed (and no\n            event was passed in)\n        :raises: `.SSHException` -- if there was a network error\n        \"\"\"\n        if (not self.active) or (not self.initial_kex_done):\n            # we should never try to authenticate unless we're on a secure link\n            raise SSHException(\"No existing session\")\n        my_event = threading.Event()\n        self.auth_handler = AuthHandler(self)\n        self.auth_handler.auth_gssapi_with_mic(\n            username, gss_host, gss_deleg_creds, my_event\n        )\n        return self.auth_handler.wait_for_response(my_event)",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 8
              },
              "end": {
                "row": 15,
                "column": 11
              },
              "text": "\"\"\"\n        Authenticate to the Server using GSS-API / SSPI.\n\n        :param str username: The username to authenticate as\n        :param str gss_host: The target host\n        :param bool gss_deleg_creds: Delegate credentials or not\n        :return: list of auth types permissible for the next stage of\n                 authentication (normally empty)\n        :raises: `.BadAuthenticationType` -- if gssapi-with-mic isn't\n            allowed by the server (and no event was passed in)\n        :raises:\n            `.AuthenticationException` -- if the authentication failed (and no\n            event was passed in)\n        :raises: `.SSHException` -- if there was a network error\n        \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 8
                  },
                  "end": {
                    "row": 15,
                    "column": 11
                  },
                  "text": "\"\"\"\n        Authenticate to the Server using GSS-API / SSPI.\n\n        :param str username: The username to authenticate as\n        :param str gss_host: The target host\n        :param bool gss_deleg_creds: Delegate credentials or not\n        :return: list of auth types permissible for the next stage of\n                 authentication (normally empty)\n        :raises: `.BadAuthenticationType` -- if gssapi-with-mic isn't\n            allowed by the server (and no event was passed in)\n        :raises:\n            `.AuthenticationException` -- if the authentication failed (and no\n            event was passed in)\n        :raises: `.SSHException` -- if there was a network error\n        \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 8
                      },
                      "end": {
                        "row": 1,
                        "column": 11
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 11
                      },
                      "end": {
                        "row": 15,
                        "column": 8
                      },
                      "text": "\n        Authenticate to the Server using GSS-API / SSPI.\n\n        :param str username: The username to authenticate as\n        :param str gss_host: The target host\n        :param bool gss_deleg_creds: Delegate credentials or not\n        :return: list of auth types permissible for the next stage of\n                 authentication (normally empty)\n        :raises: `.BadAuthenticationType` -- if gssapi-with-mic isn't\n            allowed by the server (and no event was passed in)\n        :raises:\n            `.AuthenticationException` -- if the authentication failed (and no\n            event was passed in)\n        :raises: `.SSHException` -- if there was a network error\n        "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 15,
                        "column": 8
                      },
                      "end": {
                        "row": 15,
                        "column": 11
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 16,
                "column": 8
              },
              "end": {
                "row": 18,
                "column": 53
              },
              "text": "if (not self.active) or (not self.initial_kex_done):\n            # we should never try to authenticate unless we're on a secure link\n            raise SSHException(\"No existing session\")",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 16,
                    "column": 8
                  },
                  "end": {
                    "row": 16,
                    "column": 10
                  },
                  "text": "if"
                },
                {
                  "type": "boolean_operator",
                  "start": {
                    "row": 16,
                    "column": 11
                  },
                  "end": {
                    "row": 16,
                    "column": 59
                  },
                  "text": "(not self.active) or (not self.initial_kex_done)",
                  "children": [
                    {
                      "type": "parenthesized_expression",
                      "start": {
                        "row": 16,
                        "column": 11
                      },
                      "end": {
                        "row": 16,
                        "column": 28
                      },
                      "text": "(not self.active)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 16,
                            "column": 11
                          },
                          "end": {
                            "row": 16,
                            "column": 12
                          },
                          "text": "("
                        },
                        {
                          "type": "not_operator",
                          "start": {
                            "row": 16,
                            "column": 12
                          },
                          "end": {
                            "row": 16,
                            "column": 27
                          },
                          "text": "not self.active",
                          "children": [
                            {
                              "type": "not",
                              "start": {
                                "row": 16,
                                "column": 12
                              },
                              "end": {
                                "row": 16,
                                "column": 15
                              },
                              "text": "not"
                            },
                            {
                              "type": "attribute",
                              "start": {
                                "row": 16,
                                "column": 16
                              },
                              "end": {
                                "row": 16,
                                "column": 27
                              },
                              "text": "self.active",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 16,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 20
                                  },
                                  "text": "self"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 16,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 21
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 16,
                                    "column": 21
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 27
                                  },
                                  "text": "active"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 16,
                            "column": 27
                          },
                          "end": {
                            "row": 16,
                            "column": 28
                          },
                          "text": ")"
                        }
                      ]
                    },
                    {
                      "type": "or",
                      "start": {
                        "row": 16,
                        "column": 29
                      },
                      "end": {
                        "row": 16,
                        "column": 31
                      },
                      "text": "or"
                    },
                    {
                      "type": "parenthesized_expression",
                      "start": {
                        "row": 16,
                        "column": 32
                      },
                      "end": {
                        "row": 16,
                        "column": 59
                      },
                      "text": "(not self.initial_kex_done)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 16,
                            "column": 32
                          },
                          "end": {
                            "row": 16,
                            "column": 33
                          },
                          "text": "("
                        },
                        {
                          "type": "not_operator",
                          "start": {
                            "row": 16,
                            "column": 33
                          },
                          "end": {
                            "row": 16,
                            "column": 58
                          },
                          "text": "not self.initial_kex_done",
                          "children": [
                            {
                              "type": "not",
                              "start": {
                                "row": 16,
                                "column": 33
                              },
                              "end": {
                                "row": 16,
                                "column": 36
                              },
                              "text": "not"
                            },
                            {
                              "type": "attribute",
                              "start": {
                                "row": 16,
                                "column": 37
                              },
                              "end": {
                                "row": 16,
                                "column": 58
                              },
                              "text": "self.initial_kex_done",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 16,
                                    "column": 37
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 41
                                  },
                                  "text": "self"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 16,
                                    "column": 41
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 42
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 16,
                                    "column": 42
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 58
                                  },
                                  "text": "initial_kex_done"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 16,
                            "column": 58
                          },
                          "end": {
                            "row": 16,
                            "column": 59
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 16,
                    "column": 59
                  },
                  "end": {
                    "row": 16,
                    "column": 60
                  },
                  "text": ":"
                },
                {
                  "type": "comment",
                  "start": {
                    "row": 17,
                    "column": 12
                  },
                  "end": {
                    "row": 17,
                    "column": 79
                  },
                  "text": "# we should never try to authenticate unless we're on a secure link"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 18,
                    "column": 12
                  },
                  "end": {
                    "row": 18,
                    "column": 53
                  },
                  "text": "raise SSHException(\"No existing session\")",
                  "children": [
                    {
                      "type": "raise_statement",
                      "start": {
                        "row": 18,
                        "column": 12
                      },
                      "end": {
                        "row": 18,
                        "column": 53
                      },
                      "text": "raise SSHException(\"No existing session\")",
                      "children": [
                        {
                          "type": "raise",
                          "start": {
                            "row": 18,
                            "column": 12
                          },
                          "end": {
                            "row": 18,
                            "column": 17
                          },
                          "text": "raise"
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 18,
                            "column": 18
                          },
                          "end": {
                            "row": 18,
                            "column": 53
                          },
                          "text": "SSHException(\"No existing session\")",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 18,
                                "column": 18
                              },
                              "end": {
                                "row": 18,
                                "column": 30
                              },
                              "text": "SSHException"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 18,
                                "column": 30
                              },
                              "end": {
                                "row": 18,
                                "column": 53
                              },
                              "text": "(\"No existing session\")",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 18,
                                    "column": 30
                                  },
                                  "end": {
                                    "row": 18,
                                    "column": 31
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "string",
                                  "start": {
                                    "row": 18,
                                    "column": 31
                                  },
                                  "end": {
                                    "row": 18,
                                    "column": 52
                                  },
                                  "text": "\"No existing session\"",
                                  "children": [
                                    {
                                      "type": "string_start",
                                      "start": {
                                        "row": 18,
                                        "column": 31
                                      },
                                      "end": {
                                        "row": 18,
                                        "column": 32
                                      },
                                      "text": "\""
                                    },
                                    {
                                      "type": "string_content",
                                      "start": {
                                        "row": 18,
                                        "column": 32
                                      },
                                      "end": {
                                        "row": 18,
                                        "column": 51
                                      },
                                      "text": "No existing session"
                                    },
                                    {
                                      "type": "string_end",
                                      "start": {
                                        "row": 18,
                                        "column": 51
                                      },
                                      "end": {
                                        "row": 18,
                                        "column": 52
                                      },
                                      "text": "\""
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 18,
                                    "column": 52
                                  },
                                  "end": {
                                    "row": 18,
                                    "column": 53
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 19,
                "column": 8
              },
              "end": {
                "row": 19,
                "column": 36
              },
              "text": "my_event = threading.Event()",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 19,
                    "column": 8
                  },
                  "end": {
                    "row": 19,
                    "column": 36
                  },
                  "text": "my_event = threading.Event()",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 19,
                        "column": 8
                      },
                      "end": {
                        "row": 19,
                        "column": 16
                      },
                      "text": "my_event"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 19,
                        "column": 17
                      },
                      "end": {
                        "row": 19,
                        "column": 18
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 19,
                        "column": 19
                      },
                      "end": {
                        "row": 19,
                        "column": 36
                      },
                      "text": "threading.Event()",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 19,
                            "column": 19
                          },
                          "end": {
                            "row": 19,
                            "column": 34
                          },
                          "text": "threading.Event",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 19,
                                "column": 19
                              },
                              "end": {
                                "row": 19,
                                "column": 28
                              },
                              "text": "threading"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 19,
                                "column": 28
                              },
                              "end": {
                                "row": 19,
                                "column": 29
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 19,
                                "column": 29
                              },
                              "end": {
                                "row": 19,
                                "column": 34
                              },
                              "text": "Event"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 19,
                            "column": 34
                          },
                          "end": {
                            "row": 19,
                            "column": 36
                          },
                          "text": "()",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 19,
                                "column": 34
                              },
                              "end": {
                                "row": 19,
                                "column": 35
                              },
                              "text": "("
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 19,
                                "column": 35
                              },
                              "end": {
                                "row": 19,
                                "column": 36
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 20,
                "column": 8
              },
              "end": {
                "row": 20,
                "column": 45
              },
              "text": "self.auth_handler = AuthHandler(self)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 20,
                    "column": 8
                  },
                  "end": {
                    "row": 20,
                    "column": 45
                  },
                  "text": "self.auth_handler = AuthHandler(self)",
                  "children": [
                    {
                      "type": "attribute",
                      "start": {
                        "row": 20,
                        "column": 8
                      },
                      "end": {
                        "row": 20,
                        "column": 25
                      },
                      "text": "self.auth_handler",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 20,
                            "column": 8
                          },
                          "end": {
                            "row": 20,
                            "column": 12
                          },
                          "text": "self"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 20,
                            "column": 12
                          },
                          "end": {
                            "row": 20,
                            "column": 13
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 20,
                            "column": 13
                          },
                          "end": {
                            "row": 20,
                            "column": 25
                          },
                          "text": "auth_handler"
                        }
                      ]
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 20,
                        "column": 26
                      },
                      "end": {
                        "row": 20,
                        "column": 27
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 20,
                        "column": 28
                      },
                      "end": {
                        "row": 20,
                        "column": 45
                      },
                      "text": "AuthHandler(self)",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 20,
                            "column": 28
                          },
                          "end": {
                            "row": 20,
                            "column": 39
                          },
                          "text": "AuthHandler"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 20,
                            "column": 39
                          },
                          "end": {
                            "row": 20,
                            "column": 45
                          },
                          "text": "(self)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 20,
                                "column": 39
                              },
                              "end": {
                                "row": 20,
                                "column": 40
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 20,
                                "column": 40
                              },
                              "end": {
                                "row": 20,
                                "column": 44
                              },
                              "text": "self"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 20,
                                "column": 44
                              },
                              "end": {
                                "row": 20,
                                "column": 45
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 21,
                "column": 8
              },
              "end": {
                "row": 23,
                "column": 9
              },
              "text": "self.auth_handler.auth_gssapi_with_mic(\n            username, gss_host, gss_deleg_creds, my_event\n        )",
              "children": [
                {
                  "type": "call",
                  "start": {
                    "row": 21,
                    "column": 8
                  },
                  "end": {
                    "row": 23,
                    "column": 9
                  },
                  "text": "self.auth_handler.auth_gssapi_with_mic(\n            username, gss_host, gss_deleg_creds, my_event\n        )",
                  "children": [
                    {
                      "type": "attribute",
                      "start": {
                        "row": 21,
                        "column": 8
                      },
                      "end": {
                        "row": 21,
                        "column": 46
                      },
                      "text": "self.auth_handler.auth_gssapi_with_mic",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 21,
                            "column": 8
                          },
                          "end": {
                            "row": 21,
                            "column": 25
                          },
                          "text": "self.auth_handler",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 21,
                                "column": 8
                              },
                              "end": {
                                "row": 21,
                                "column": 12
                              },
                              "text": "self"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 21,
                                "column": 12
                              },
                              "end": {
                                "row": 21,
                                "column": 13
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 21,
                                "column": 13
                              },
                              "end": {
                                "row": 21,
                                "column": 25
                              },
                              "text": "auth_handler"
                            }
                          ]
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 21,
                            "column": 25
                          },
                          "end": {
                            "row": 21,
                            "column": 26
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 21,
                            "column": 26
                          },
                          "end": {
                            "row": 21,
                            "column": 46
                          },
                          "text": "auth_gssapi_with_mic"
                        }
                      ]
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 21,
                        "column": 46
                      },
                      "end": {
                        "row": 23,
                        "column": 9
                      },
                      "text": "(\n            username, gss_host, gss_deleg_creds, my_event\n        )",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 21,
                            "column": 46
                          },
                          "end": {
                            "row": 21,
                            "column": 47
                          },
                          "text": "("
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 22,
                            "column": 12
                          },
                          "end": {
                            "row": 22,
                            "column": 20
                          },
                          "text": "username"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 22,
                            "column": 20
                          },
                          "end": {
                            "row": 22,
                            "column": 21
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 22,
                            "column": 22
                          },
                          "end": {
                            "row": 22,
                            "column": 30
                          },
                          "text": "gss_host"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 22,
                            "column": 30
                          },
                          "end": {
                            "row": 22,
                            "column": 31
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 22,
                            "column": 32
                          },
                          "end": {
                            "row": 22,
                            "column": 47
                          },
                          "text": "gss_deleg_creds"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 22,
                            "column": 47
                          },
                          "end": {
                            "row": 22,
                            "column": 48
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 22,
                            "column": 49
                          },
                          "end": {
                            "row": 22,
                            "column": 57
                          },
                          "text": "my_event"
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 23,
                            "column": 8
                          },
                          "end": {
                            "row": 23,
                            "column": 9
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 24,
                "column": 8
              },
              "end": {
                "row": 24,
                "column": 60
              },
              "text": "return self.auth_handler.wait_for_response(my_event)",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 24,
                    "column": 8
                  },
                  "end": {
                    "row": 24,
                    "column": 14
                  },
                  "text": "return"
                },
                {
                  "type": "call",
                  "start": {
                    "row": 24,
                    "column": 15
                  },
                  "end": {
                    "row": 24,
                    "column": 60
                  },
                  "text": "self.auth_handler.wait_for_response(my_event)",
                  "children": [
                    {
                      "type": "attribute",
                      "start": {
                        "row": 24,
                        "column": 15
                      },
                      "end": {
                        "row": 24,
                        "column": 50
                      },
                      "text": "self.auth_handler.wait_for_response",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 24,
                            "column": 15
                          },
                          "end": {
                            "row": 24,
                            "column": 32
                          },
                          "text": "self.auth_handler",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 24,
                                "column": 15
                              },
                              "end": {
                                "row": 24,
                                "column": 19
                              },
                              "text": "self"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 24,
                                "column": 19
                              },
                              "end": {
                                "row": 24,
                                "column": 20
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 24,
                                "column": 20
                              },
                              "end": {
                                "row": 24,
                                "column": 32
                              },
                              "text": "auth_handler"
                            }
                          ]
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 24,
                            "column": 32
                          },
                          "end": {
                            "row": 24,
                            "column": 33
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 24,
                            "column": 33
                          },
                          "end": {
                            "row": 24,
                            "column": 50
                          },
                          "text": "wait_for_response"
                        }
                      ]
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 24,
                        "column": 50
                      },
                      "end": {
                        "row": 24,
                        "column": 60
                      },
                      "text": "(my_event)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 24,
                            "column": 50
                          },
                          "end": {
                            "row": 24,
                            "column": 51
                          },
                          "text": "("
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 24,
                            "column": 51
                          },
                          "end": {
                            "row": 24,
                            "column": 59
                          },
                          "text": "my_event"
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 24,
                            "column": 59
                          },
                          "end": {
                            "row": 24,
                            "column": 60
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}