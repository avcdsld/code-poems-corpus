{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 37,
    "column": 20
  },
  "text": "def multi_log_probs_from_logits_and_actions(policy_logits, actions):\n    \"\"\"Computes action log-probs from policy logits and actions.\n\n  In the notation used throughout documentation and comments, T refers to the\n  time dimension ranging from 0 to T-1. B refers to the batch size and\n  ACTION_SPACE refers to the list of numbers each representing a number of\n  actions.\n\n  Args:\n    policy_logits: A list with length of ACTION_SPACE of float32\n      tensors of shapes\n      [T, B, ACTION_SPACE[0]],\n      ...,\n      [T, B, ACTION_SPACE[-1]]\n      with un-normalized log-probabilities parameterizing a softmax policy.\n    actions: A list with length of ACTION_SPACE of int32\n      tensors of shapes\n      [T, B],\n      ...,\n      [T, B]\n      with actions.\n\n  Returns:\n    A list with length of ACTION_SPACE of float32\n      tensors of shapes\n      [T, B],\n      ...,\n      [T, B]\n      corresponding to the sampling log probability\n      of the chosen action w.r.t. the policy.\n  \"\"\"\n\n    log_probs = []\n    for i in range(len(policy_logits)):\n        log_probs.append(-tf.nn.sparse_softmax_cross_entropy_with_logits(\n            logits=policy_logits[i], labels=actions[i]))\n\n    return log_probs",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 37,
        "column": 20
      },
      "text": "def multi_log_probs_from_logits_and_actions(policy_logits, actions):\n    \"\"\"Computes action log-probs from policy logits and actions.\n\n  In the notation used throughout documentation and comments, T refers to the\n  time dimension ranging from 0 to T-1. B refers to the batch size and\n  ACTION_SPACE refers to the list of numbers each representing a number of\n  actions.\n\n  Args:\n    policy_logits: A list with length of ACTION_SPACE of float32\n      tensors of shapes\n      [T, B, ACTION_SPACE[0]],\n      ...,\n      [T, B, ACTION_SPACE[-1]]\n      with un-normalized log-probabilities parameterizing a softmax policy.\n    actions: A list with length of ACTION_SPACE of int32\n      tensors of shapes\n      [T, B],\n      ...,\n      [T, B]\n      with actions.\n\n  Returns:\n    A list with length of ACTION_SPACE of float32\n      tensors of shapes\n      [T, B],\n      ...,\n      [T, B]\n      corresponding to the sampling log probability\n      of the chosen action w.r.t. the policy.\n  \"\"\"\n\n    log_probs = []\n    for i in range(len(policy_logits)):\n        log_probs.append(-tf.nn.sparse_softmax_cross_entropy_with_logits(\n            logits=policy_logits[i], labels=actions[i]))\n\n    return log_probs",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 43
          },
          "text": "multi_log_probs_from_logits_and_actions"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 43
          },
          "end": {
            "row": 0,
            "column": 67
          },
          "text": "(policy_logits, actions)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 43
              },
              "end": {
                "row": 0,
                "column": 44
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 44
              },
              "end": {
                "row": 0,
                "column": 57
              },
              "text": "policy_logits"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 57
              },
              "end": {
                "row": 0,
                "column": 58
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 59
              },
              "end": {
                "row": 0,
                "column": 66
              },
              "text": "actions"
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 66
              },
              "end": {
                "row": 0,
                "column": 67
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 67
          },
          "end": {
            "row": 0,
            "column": 68
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 4
          },
          "end": {
            "row": 37,
            "column": 20
          },
          "text": "\"\"\"Computes action log-probs from policy logits and actions.\n\n  In the notation used throughout documentation and comments, T refers to the\n  time dimension ranging from 0 to T-1. B refers to the batch size and\n  ACTION_SPACE refers to the list of numbers each representing a number of\n  actions.\n\n  Args:\n    policy_logits: A list with length of ACTION_SPACE of float32\n      tensors of shapes\n      [T, B, ACTION_SPACE[0]],\n      ...,\n      [T, B, ACTION_SPACE[-1]]\n      with un-normalized log-probabilities parameterizing a softmax policy.\n    actions: A list with length of ACTION_SPACE of int32\n      tensors of shapes\n      [T, B],\n      ...,\n      [T, B]\n      with actions.\n\n  Returns:\n    A list with length of ACTION_SPACE of float32\n      tensors of shapes\n      [T, B],\n      ...,\n      [T, B]\n      corresponding to the sampling log probability\n      of the chosen action w.r.t. the policy.\n  \"\"\"\n\n    log_probs = []\n    for i in range(len(policy_logits)):\n        log_probs.append(-tf.nn.sparse_softmax_cross_entropy_with_logits(\n            logits=policy_logits[i], labels=actions[i]))\n\n    return log_probs",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 4
              },
              "end": {
                "row": 30,
                "column": 5
              },
              "text": "\"\"\"Computes action log-probs from policy logits and actions.\n\n  In the notation used throughout documentation and comments, T refers to the\n  time dimension ranging from 0 to T-1. B refers to the batch size and\n  ACTION_SPACE refers to the list of numbers each representing a number of\n  actions.\n\n  Args:\n    policy_logits: A list with length of ACTION_SPACE of float32\n      tensors of shapes\n      [T, B, ACTION_SPACE[0]],\n      ...,\n      [T, B, ACTION_SPACE[-1]]\n      with un-normalized log-probabilities parameterizing a softmax policy.\n    actions: A list with length of ACTION_SPACE of int32\n      tensors of shapes\n      [T, B],\n      ...,\n      [T, B]\n      with actions.\n\n  Returns:\n    A list with length of ACTION_SPACE of float32\n      tensors of shapes\n      [T, B],\n      ...,\n      [T, B]\n      corresponding to the sampling log probability\n      of the chosen action w.r.t. the policy.\n  \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 4
                  },
                  "end": {
                    "row": 30,
                    "column": 5
                  },
                  "text": "\"\"\"Computes action log-probs from policy logits and actions.\n\n  In the notation used throughout documentation and comments, T refers to the\n  time dimension ranging from 0 to T-1. B refers to the batch size and\n  ACTION_SPACE refers to the list of numbers each representing a number of\n  actions.\n\n  Args:\n    policy_logits: A list with length of ACTION_SPACE of float32\n      tensors of shapes\n      [T, B, ACTION_SPACE[0]],\n      ...,\n      [T, B, ACTION_SPACE[-1]]\n      with un-normalized log-probabilities parameterizing a softmax policy.\n    actions: A list with length of ACTION_SPACE of int32\n      tensors of shapes\n      [T, B],\n      ...,\n      [T, B]\n      with actions.\n\n  Returns:\n    A list with length of ACTION_SPACE of float32\n      tensors of shapes\n      [T, B],\n      ...,\n      [T, B]\n      corresponding to the sampling log probability\n      of the chosen action w.r.t. the policy.\n  \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 4
                      },
                      "end": {
                        "row": 1,
                        "column": 7
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 7
                      },
                      "end": {
                        "row": 30,
                        "column": 2
                      },
                      "text": "Computes action log-probs from policy logits and actions.\n\n  In the notation used throughout documentation and comments, T refers to the\n  time dimension ranging from 0 to T-1. B refers to the batch size and\n  ACTION_SPACE refers to the list of numbers each representing a number of\n  actions.\n\n  Args:\n    policy_logits: A list with length of ACTION_SPACE of float32\n      tensors of shapes\n      [T, B, ACTION_SPACE[0]],\n      ...,\n      [T, B, ACTION_SPACE[-1]]\n      with un-normalized log-probabilities parameterizing a softmax policy.\n    actions: A list with length of ACTION_SPACE of int32\n      tensors of shapes\n      [T, B],\n      ...,\n      [T, B]\n      with actions.\n\n  Returns:\n    A list with length of ACTION_SPACE of float32\n      tensors of shapes\n      [T, B],\n      ...,\n      [T, B]\n      corresponding to the sampling log probability\n      of the chosen action w.r.t. the policy.\n  "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 30,
                        "column": 2
                      },
                      "end": {
                        "row": 30,
                        "column": 5
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 32,
                "column": 4
              },
              "end": {
                "row": 32,
                "column": 18
              },
              "text": "log_probs = []",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 32,
                    "column": 4
                  },
                  "end": {
                    "row": 32,
                    "column": 18
                  },
                  "text": "log_probs = []",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 32,
                        "column": 4
                      },
                      "end": {
                        "row": 32,
                        "column": 13
                      },
                      "text": "log_probs"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 32,
                        "column": 14
                      },
                      "end": {
                        "row": 32,
                        "column": 15
                      },
                      "text": "="
                    },
                    {
                      "type": "list",
                      "start": {
                        "row": 32,
                        "column": 16
                      },
                      "end": {
                        "row": 32,
                        "column": 18
                      },
                      "text": "[]",
                      "children": [
                        {
                          "type": "[",
                          "start": {
                            "row": 32,
                            "column": 16
                          },
                          "end": {
                            "row": 32,
                            "column": 17
                          },
                          "text": "["
                        },
                        {
                          "type": "]",
                          "start": {
                            "row": 32,
                            "column": 17
                          },
                          "end": {
                            "row": 32,
                            "column": 18
                          },
                          "text": "]"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "for_statement",
              "start": {
                "row": 33,
                "column": 4
              },
              "end": {
                "row": 35,
                "column": 56
              },
              "text": "for i in range(len(policy_logits)):\n        log_probs.append(-tf.nn.sparse_softmax_cross_entropy_with_logits(\n            logits=policy_logits[i], labels=actions[i]))",
              "children": [
                {
                  "type": "for",
                  "start": {
                    "row": 33,
                    "column": 4
                  },
                  "end": {
                    "row": 33,
                    "column": 7
                  },
                  "text": "for"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 33,
                    "column": 8
                  },
                  "end": {
                    "row": 33,
                    "column": 9
                  },
                  "text": "i"
                },
                {
                  "type": "in",
                  "start": {
                    "row": 33,
                    "column": 10
                  },
                  "end": {
                    "row": 33,
                    "column": 12
                  },
                  "text": "in"
                },
                {
                  "type": "call",
                  "start": {
                    "row": 33,
                    "column": 13
                  },
                  "end": {
                    "row": 33,
                    "column": 38
                  },
                  "text": "range(len(policy_logits))",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 33,
                        "column": 13
                      },
                      "end": {
                        "row": 33,
                        "column": 18
                      },
                      "text": "range"
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 33,
                        "column": 18
                      },
                      "end": {
                        "row": 33,
                        "column": 38
                      },
                      "text": "(len(policy_logits))",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 33,
                            "column": 18
                          },
                          "end": {
                            "row": 33,
                            "column": 19
                          },
                          "text": "("
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 33,
                            "column": 19
                          },
                          "end": {
                            "row": 33,
                            "column": 37
                          },
                          "text": "len(policy_logits)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 33,
                                "column": 19
                              },
                              "end": {
                                "row": 33,
                                "column": 22
                              },
                              "text": "len"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 33,
                                "column": 22
                              },
                              "end": {
                                "row": 33,
                                "column": 37
                              },
                              "text": "(policy_logits)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 33,
                                    "column": 22
                                  },
                                  "end": {
                                    "row": 33,
                                    "column": 23
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 33,
                                    "column": 23
                                  },
                                  "end": {
                                    "row": 33,
                                    "column": 36
                                  },
                                  "text": "policy_logits"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 33,
                                    "column": 36
                                  },
                                  "end": {
                                    "row": 33,
                                    "column": 37
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 33,
                            "column": 37
                          },
                          "end": {
                            "row": 33,
                            "column": 38
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 33,
                    "column": 38
                  },
                  "end": {
                    "row": 33,
                    "column": 39
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 34,
                    "column": 8
                  },
                  "end": {
                    "row": 35,
                    "column": 56
                  },
                  "text": "log_probs.append(-tf.nn.sparse_softmax_cross_entropy_with_logits(\n            logits=policy_logits[i], labels=actions[i]))",
                  "children": [
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 34,
                        "column": 8
                      },
                      "end": {
                        "row": 35,
                        "column": 56
                      },
                      "text": "log_probs.append(-tf.nn.sparse_softmax_cross_entropy_with_logits(\n            logits=policy_logits[i], labels=actions[i]))",
                      "children": [
                        {
                          "type": "call",
                          "start": {
                            "row": 34,
                            "column": 8
                          },
                          "end": {
                            "row": 35,
                            "column": 56
                          },
                          "text": "log_probs.append(-tf.nn.sparse_softmax_cross_entropy_with_logits(\n            logits=policy_logits[i], labels=actions[i]))",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 34,
                                "column": 8
                              },
                              "end": {
                                "row": 34,
                                "column": 24
                              },
                              "text": "log_probs.append",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 34,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 34,
                                    "column": 17
                                  },
                                  "text": "log_probs"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 34,
                                    "column": 17
                                  },
                                  "end": {
                                    "row": 34,
                                    "column": 18
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 34,
                                    "column": 18
                                  },
                                  "end": {
                                    "row": 34,
                                    "column": 24
                                  },
                                  "text": "append"
                                }
                              ]
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 34,
                                "column": 24
                              },
                              "end": {
                                "row": 35,
                                "column": 56
                              },
                              "text": "(-tf.nn.sparse_softmax_cross_entropy_with_logits(\n            logits=policy_logits[i], labels=actions[i]))",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 34,
                                    "column": 24
                                  },
                                  "end": {
                                    "row": 34,
                                    "column": 25
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "unary_operator",
                                  "start": {
                                    "row": 34,
                                    "column": 25
                                  },
                                  "end": {
                                    "row": 35,
                                    "column": 55
                                  },
                                  "text": "-tf.nn.sparse_softmax_cross_entropy_with_logits(\n            logits=policy_logits[i], labels=actions[i])",
                                  "children": [
                                    {
                                      "type": "-",
                                      "start": {
                                        "row": 34,
                                        "column": 25
                                      },
                                      "end": {
                                        "row": 34,
                                        "column": 26
                                      },
                                      "text": "-"
                                    },
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 34,
                                        "column": 26
                                      },
                                      "end": {
                                        "row": 35,
                                        "column": 55
                                      },
                                      "text": "tf.nn.sparse_softmax_cross_entropy_with_logits(\n            logits=policy_logits[i], labels=actions[i])",
                                      "children": [
                                        {
                                          "type": "attribute",
                                          "start": {
                                            "row": 34,
                                            "column": 26
                                          },
                                          "end": {
                                            "row": 34,
                                            "column": 72
                                          },
                                          "text": "tf.nn.sparse_softmax_cross_entropy_with_logits",
                                          "children": [
                                            {
                                              "type": "attribute",
                                              "start": {
                                                "row": 34,
                                                "column": 26
                                              },
                                              "end": {
                                                "row": 34,
                                                "column": 31
                                              },
                                              "text": "tf.nn",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 34,
                                                    "column": 26
                                                  },
                                                  "end": {
                                                    "row": 34,
                                                    "column": 28
                                                  },
                                                  "text": "tf"
                                                },
                                                {
                                                  "type": ".",
                                                  "start": {
                                                    "row": 34,
                                                    "column": 28
                                                  },
                                                  "end": {
                                                    "row": 34,
                                                    "column": 29
                                                  },
                                                  "text": "."
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 34,
                                                    "column": 29
                                                  },
                                                  "end": {
                                                    "row": 34,
                                                    "column": 31
                                                  },
                                                  "text": "nn"
                                                }
                                              ]
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 34,
                                                "column": 31
                                              },
                                              "end": {
                                                "row": 34,
                                                "column": 32
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 34,
                                                "column": 32
                                              },
                                              "end": {
                                                "row": 34,
                                                "column": 72
                                              },
                                              "text": "sparse_softmax_cross_entropy_with_logits"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 34,
                                            "column": 72
                                          },
                                          "end": {
                                            "row": 35,
                                            "column": 55
                                          },
                                          "text": "(\n            logits=policy_logits[i], labels=actions[i])",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 34,
                                                "column": 72
                                              },
                                              "end": {
                                                "row": 34,
                                                "column": 73
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "keyword_argument",
                                              "start": {
                                                "row": 35,
                                                "column": 12
                                              },
                                              "end": {
                                                "row": 35,
                                                "column": 35
                                              },
                                              "text": "logits=policy_logits[i]",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 35,
                                                    "column": 12
                                                  },
                                                  "end": {
                                                    "row": 35,
                                                    "column": 18
                                                  },
                                                  "text": "logits"
                                                },
                                                {
                                                  "type": "=",
                                                  "start": {
                                                    "row": 35,
                                                    "column": 18
                                                  },
                                                  "end": {
                                                    "row": 35,
                                                    "column": 19
                                                  },
                                                  "text": "="
                                                },
                                                {
                                                  "type": "subscript",
                                                  "start": {
                                                    "row": 35,
                                                    "column": 19
                                                  },
                                                  "end": {
                                                    "row": 35,
                                                    "column": 35
                                                  },
                                                  "text": "policy_logits[i]",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 35,
                                                        "column": 19
                                                      },
                                                      "end": {
                                                        "row": 35,
                                                        "column": 32
                                                      },
                                                      "text": "policy_logits"
                                                    },
                                                    {
                                                      "type": "[",
                                                      "start": {
                                                        "row": 35,
                                                        "column": 32
                                                      },
                                                      "end": {
                                                        "row": 35,
                                                        "column": 33
                                                      },
                                                      "text": "["
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 35,
                                                        "column": 33
                                                      },
                                                      "end": {
                                                        "row": 35,
                                                        "column": 34
                                                      },
                                                      "text": "i"
                                                    },
                                                    {
                                                      "type": "]",
                                                      "start": {
                                                        "row": 35,
                                                        "column": 34
                                                      },
                                                      "end": {
                                                        "row": 35,
                                                        "column": 35
                                                      },
                                                      "text": "]"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ",",
                                              "start": {
                                                "row": 35,
                                                "column": 35
                                              },
                                              "end": {
                                                "row": 35,
                                                "column": 36
                                              },
                                              "text": ","
                                            },
                                            {
                                              "type": "keyword_argument",
                                              "start": {
                                                "row": 35,
                                                "column": 37
                                              },
                                              "end": {
                                                "row": 35,
                                                "column": 54
                                              },
                                              "text": "labels=actions[i]",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 35,
                                                    "column": 37
                                                  },
                                                  "end": {
                                                    "row": 35,
                                                    "column": 43
                                                  },
                                                  "text": "labels"
                                                },
                                                {
                                                  "type": "=",
                                                  "start": {
                                                    "row": 35,
                                                    "column": 43
                                                  },
                                                  "end": {
                                                    "row": 35,
                                                    "column": 44
                                                  },
                                                  "text": "="
                                                },
                                                {
                                                  "type": "subscript",
                                                  "start": {
                                                    "row": 35,
                                                    "column": 44
                                                  },
                                                  "end": {
                                                    "row": 35,
                                                    "column": 54
                                                  },
                                                  "text": "actions[i]",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 35,
                                                        "column": 44
                                                      },
                                                      "end": {
                                                        "row": 35,
                                                        "column": 51
                                                      },
                                                      "text": "actions"
                                                    },
                                                    {
                                                      "type": "[",
                                                      "start": {
                                                        "row": 35,
                                                        "column": 51
                                                      },
                                                      "end": {
                                                        "row": 35,
                                                        "column": 52
                                                      },
                                                      "text": "["
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 35,
                                                        "column": 52
                                                      },
                                                      "end": {
                                                        "row": 35,
                                                        "column": 53
                                                      },
                                                      "text": "i"
                                                    },
                                                    {
                                                      "type": "]",
                                                      "start": {
                                                        "row": 35,
                                                        "column": 53
                                                      },
                                                      "end": {
                                                        "row": 35,
                                                        "column": 54
                                                      },
                                                      "text": "]"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 35,
                                                "column": 54
                                              },
                                              "end": {
                                                "row": 35,
                                                "column": 55
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 35,
                                    "column": 55
                                  },
                                  "end": {
                                    "row": 35,
                                    "column": 56
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 37,
                "column": 4
              },
              "end": {
                "row": 37,
                "column": 20
              },
              "text": "return log_probs",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 37,
                    "column": 4
                  },
                  "end": {
                    "row": 37,
                    "column": 10
                  },
                  "text": "return"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 37,
                    "column": 11
                  },
                  "end": {
                    "row": 37,
                    "column": 20
                  },
                  "text": "log_probs"
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}