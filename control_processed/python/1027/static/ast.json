{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 30,
    "column": 46
  },
  "text": "def _get_unstack_items(self, unstacker, new_columns):\n        \"\"\"\n        Get the placement, values, and mask for a Block unstack.\n\n        This is shared between ObjectBlock and ExtensionBlock. They\n        differ in that ObjectBlock passes the values, while ExtensionBlock\n        passes the dummy ndarray of positions to be used by a take\n        later.\n\n        Parameters\n        ----------\n        unstacker : pandas.core.reshape.reshape._Unstacker\n        new_columns : Index\n            All columns of the unstacked BlockManager.\n\n        Returns\n        -------\n        new_placement : ndarray[int]\n            The placement of the new columns in `new_columns`.\n        new_values : Union[ndarray, ExtensionArray]\n            The first return value from _Unstacker.get_new_values.\n        mask : ndarray[bool]\n            The second return value from _Unstacker.get_new_values.\n        \"\"\"\n        # shared with ExtensionBlock\n        new_items = unstacker.get_new_columns()\n        new_placement = new_columns.get_indexer(new_items)\n        new_values, mask = unstacker.get_new_values()\n\n        mask = mask.any(0)\n        return new_placement, new_values, mask",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 30,
        "column": 46
      },
      "text": "def _get_unstack_items(self, unstacker, new_columns):\n        \"\"\"\n        Get the placement, values, and mask for a Block unstack.\n\n        This is shared between ObjectBlock and ExtensionBlock. They\n        differ in that ObjectBlock passes the values, while ExtensionBlock\n        passes the dummy ndarray of positions to be used by a take\n        later.\n\n        Parameters\n        ----------\n        unstacker : pandas.core.reshape.reshape._Unstacker\n        new_columns : Index\n            All columns of the unstacked BlockManager.\n\n        Returns\n        -------\n        new_placement : ndarray[int]\n            The placement of the new columns in `new_columns`.\n        new_values : Union[ndarray, ExtensionArray]\n            The first return value from _Unstacker.get_new_values.\n        mask : ndarray[bool]\n            The second return value from _Unstacker.get_new_values.\n        \"\"\"\n        # shared with ExtensionBlock\n        new_items = unstacker.get_new_columns()\n        new_placement = new_columns.get_indexer(new_items)\n        new_values, mask = unstacker.get_new_values()\n\n        mask = mask.any(0)\n        return new_placement, new_values, mask",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 22
          },
          "text": "_get_unstack_items"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 22
          },
          "end": {
            "row": 0,
            "column": 52
          },
          "text": "(self, unstacker, new_columns)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 22
              },
              "end": {
                "row": 0,
                "column": 23
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 23
              },
              "end": {
                "row": 0,
                "column": 27
              },
              "text": "self"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 27
              },
              "end": {
                "row": 0,
                "column": 28
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 29
              },
              "end": {
                "row": 0,
                "column": 38
              },
              "text": "unstacker"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 38
              },
              "end": {
                "row": 0,
                "column": 39
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 40
              },
              "end": {
                "row": 0,
                "column": 51
              },
              "text": "new_columns"
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 51
              },
              "end": {
                "row": 0,
                "column": 52
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 52
          },
          "end": {
            "row": 0,
            "column": 53
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 8
          },
          "end": {
            "row": 30,
            "column": 46
          },
          "text": "\"\"\"\n        Get the placement, values, and mask for a Block unstack.\n\n        This is shared between ObjectBlock and ExtensionBlock. They\n        differ in that ObjectBlock passes the values, while ExtensionBlock\n        passes the dummy ndarray of positions to be used by a take\n        later.\n\n        Parameters\n        ----------\n        unstacker : pandas.core.reshape.reshape._Unstacker\n        new_columns : Index\n            All columns of the unstacked BlockManager.\n\n        Returns\n        -------\n        new_placement : ndarray[int]\n            The placement of the new columns in `new_columns`.\n        new_values : Union[ndarray, ExtensionArray]\n            The first return value from _Unstacker.get_new_values.\n        mask : ndarray[bool]\n            The second return value from _Unstacker.get_new_values.\n        \"\"\"\n        # shared with ExtensionBlock\n        new_items = unstacker.get_new_columns()\n        new_placement = new_columns.get_indexer(new_items)\n        new_values, mask = unstacker.get_new_values()\n\n        mask = mask.any(0)\n        return new_placement, new_values, mask",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 8
              },
              "end": {
                "row": 23,
                "column": 11
              },
              "text": "\"\"\"\n        Get the placement, values, and mask for a Block unstack.\n\n        This is shared between ObjectBlock and ExtensionBlock. They\n        differ in that ObjectBlock passes the values, while ExtensionBlock\n        passes the dummy ndarray of positions to be used by a take\n        later.\n\n        Parameters\n        ----------\n        unstacker : pandas.core.reshape.reshape._Unstacker\n        new_columns : Index\n            All columns of the unstacked BlockManager.\n\n        Returns\n        -------\n        new_placement : ndarray[int]\n            The placement of the new columns in `new_columns`.\n        new_values : Union[ndarray, ExtensionArray]\n            The first return value from _Unstacker.get_new_values.\n        mask : ndarray[bool]\n            The second return value from _Unstacker.get_new_values.\n        \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 8
                  },
                  "end": {
                    "row": 23,
                    "column": 11
                  },
                  "text": "\"\"\"\n        Get the placement, values, and mask for a Block unstack.\n\n        This is shared between ObjectBlock and ExtensionBlock. They\n        differ in that ObjectBlock passes the values, while ExtensionBlock\n        passes the dummy ndarray of positions to be used by a take\n        later.\n\n        Parameters\n        ----------\n        unstacker : pandas.core.reshape.reshape._Unstacker\n        new_columns : Index\n            All columns of the unstacked BlockManager.\n\n        Returns\n        -------\n        new_placement : ndarray[int]\n            The placement of the new columns in `new_columns`.\n        new_values : Union[ndarray, ExtensionArray]\n            The first return value from _Unstacker.get_new_values.\n        mask : ndarray[bool]\n            The second return value from _Unstacker.get_new_values.\n        \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 8
                      },
                      "end": {
                        "row": 1,
                        "column": 11
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 11
                      },
                      "end": {
                        "row": 23,
                        "column": 8
                      },
                      "text": "\n        Get the placement, values, and mask for a Block unstack.\n\n        This is shared between ObjectBlock and ExtensionBlock. They\n        differ in that ObjectBlock passes the values, while ExtensionBlock\n        passes the dummy ndarray of positions to be used by a take\n        later.\n\n        Parameters\n        ----------\n        unstacker : pandas.core.reshape.reshape._Unstacker\n        new_columns : Index\n            All columns of the unstacked BlockManager.\n\n        Returns\n        -------\n        new_placement : ndarray[int]\n            The placement of the new columns in `new_columns`.\n        new_values : Union[ndarray, ExtensionArray]\n            The first return value from _Unstacker.get_new_values.\n        mask : ndarray[bool]\n            The second return value from _Unstacker.get_new_values.\n        "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 23,
                        "column": 8
                      },
                      "end": {
                        "row": 23,
                        "column": 11
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 24,
                "column": 8
              },
              "end": {
                "row": 24,
                "column": 36
              },
              "text": "# shared with ExtensionBlock"
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 25,
                "column": 8
              },
              "end": {
                "row": 25,
                "column": 47
              },
              "text": "new_items = unstacker.get_new_columns()",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 25,
                    "column": 8
                  },
                  "end": {
                    "row": 25,
                    "column": 47
                  },
                  "text": "new_items = unstacker.get_new_columns()",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 25,
                        "column": 8
                      },
                      "end": {
                        "row": 25,
                        "column": 17
                      },
                      "text": "new_items"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 25,
                        "column": 18
                      },
                      "end": {
                        "row": 25,
                        "column": 19
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 25,
                        "column": 20
                      },
                      "end": {
                        "row": 25,
                        "column": 47
                      },
                      "text": "unstacker.get_new_columns()",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 25,
                            "column": 20
                          },
                          "end": {
                            "row": 25,
                            "column": 45
                          },
                          "text": "unstacker.get_new_columns",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 25,
                                "column": 20
                              },
                              "end": {
                                "row": 25,
                                "column": 29
                              },
                              "text": "unstacker"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 25,
                                "column": 29
                              },
                              "end": {
                                "row": 25,
                                "column": 30
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 25,
                                "column": 30
                              },
                              "end": {
                                "row": 25,
                                "column": 45
                              },
                              "text": "get_new_columns"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 25,
                            "column": 45
                          },
                          "end": {
                            "row": 25,
                            "column": 47
                          },
                          "text": "()",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 25,
                                "column": 45
                              },
                              "end": {
                                "row": 25,
                                "column": 46
                              },
                              "text": "("
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 25,
                                "column": 46
                              },
                              "end": {
                                "row": 25,
                                "column": 47
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 26,
                "column": 8
              },
              "end": {
                "row": 26,
                "column": 58
              },
              "text": "new_placement = new_columns.get_indexer(new_items)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 26,
                    "column": 8
                  },
                  "end": {
                    "row": 26,
                    "column": 58
                  },
                  "text": "new_placement = new_columns.get_indexer(new_items)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 26,
                        "column": 8
                      },
                      "end": {
                        "row": 26,
                        "column": 21
                      },
                      "text": "new_placement"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 26,
                        "column": 22
                      },
                      "end": {
                        "row": 26,
                        "column": 23
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 26,
                        "column": 24
                      },
                      "end": {
                        "row": 26,
                        "column": 58
                      },
                      "text": "new_columns.get_indexer(new_items)",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 26,
                            "column": 24
                          },
                          "end": {
                            "row": 26,
                            "column": 47
                          },
                          "text": "new_columns.get_indexer",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 26,
                                "column": 24
                              },
                              "end": {
                                "row": 26,
                                "column": 35
                              },
                              "text": "new_columns"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 26,
                                "column": 35
                              },
                              "end": {
                                "row": 26,
                                "column": 36
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 26,
                                "column": 36
                              },
                              "end": {
                                "row": 26,
                                "column": 47
                              },
                              "text": "get_indexer"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 26,
                            "column": 47
                          },
                          "end": {
                            "row": 26,
                            "column": 58
                          },
                          "text": "(new_items)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 26,
                                "column": 47
                              },
                              "end": {
                                "row": 26,
                                "column": 48
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 26,
                                "column": 48
                              },
                              "end": {
                                "row": 26,
                                "column": 57
                              },
                              "text": "new_items"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 26,
                                "column": 57
                              },
                              "end": {
                                "row": 26,
                                "column": 58
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 27,
                "column": 8
              },
              "end": {
                "row": 27,
                "column": 53
              },
              "text": "new_values, mask = unstacker.get_new_values()",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 27,
                    "column": 8
                  },
                  "end": {
                    "row": 27,
                    "column": 53
                  },
                  "text": "new_values, mask = unstacker.get_new_values()",
                  "children": [
                    {
                      "type": "pattern_list",
                      "start": {
                        "row": 27,
                        "column": 8
                      },
                      "end": {
                        "row": 27,
                        "column": 24
                      },
                      "text": "new_values, mask",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 27,
                            "column": 8
                          },
                          "end": {
                            "row": 27,
                            "column": 18
                          },
                          "text": "new_values"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 27,
                            "column": 18
                          },
                          "end": {
                            "row": 27,
                            "column": 19
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 27,
                            "column": 20
                          },
                          "end": {
                            "row": 27,
                            "column": 24
                          },
                          "text": "mask"
                        }
                      ]
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 27,
                        "column": 25
                      },
                      "end": {
                        "row": 27,
                        "column": 26
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 27,
                        "column": 27
                      },
                      "end": {
                        "row": 27,
                        "column": 53
                      },
                      "text": "unstacker.get_new_values()",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 27,
                            "column": 27
                          },
                          "end": {
                            "row": 27,
                            "column": 51
                          },
                          "text": "unstacker.get_new_values",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 27,
                                "column": 27
                              },
                              "end": {
                                "row": 27,
                                "column": 36
                              },
                              "text": "unstacker"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 27,
                                "column": 36
                              },
                              "end": {
                                "row": 27,
                                "column": 37
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 27,
                                "column": 37
                              },
                              "end": {
                                "row": 27,
                                "column": 51
                              },
                              "text": "get_new_values"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 27,
                            "column": 51
                          },
                          "end": {
                            "row": 27,
                            "column": 53
                          },
                          "text": "()",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 27,
                                "column": 51
                              },
                              "end": {
                                "row": 27,
                                "column": 52
                              },
                              "text": "("
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 27,
                                "column": 52
                              },
                              "end": {
                                "row": 27,
                                "column": 53
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 29,
                "column": 8
              },
              "end": {
                "row": 29,
                "column": 26
              },
              "text": "mask = mask.any(0)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 29,
                    "column": 8
                  },
                  "end": {
                    "row": 29,
                    "column": 26
                  },
                  "text": "mask = mask.any(0)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 29,
                        "column": 8
                      },
                      "end": {
                        "row": 29,
                        "column": 12
                      },
                      "text": "mask"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 29,
                        "column": 13
                      },
                      "end": {
                        "row": 29,
                        "column": 14
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 29,
                        "column": 15
                      },
                      "end": {
                        "row": 29,
                        "column": 26
                      },
                      "text": "mask.any(0)",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 29,
                            "column": 15
                          },
                          "end": {
                            "row": 29,
                            "column": 23
                          },
                          "text": "mask.any",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 29,
                                "column": 15
                              },
                              "end": {
                                "row": 29,
                                "column": 19
                              },
                              "text": "mask"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 29,
                                "column": 19
                              },
                              "end": {
                                "row": 29,
                                "column": 20
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 29,
                                "column": 20
                              },
                              "end": {
                                "row": 29,
                                "column": 23
                              },
                              "text": "any"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 29,
                            "column": 23
                          },
                          "end": {
                            "row": 29,
                            "column": 26
                          },
                          "text": "(0)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 29,
                                "column": 23
                              },
                              "end": {
                                "row": 29,
                                "column": 24
                              },
                              "text": "("
                            },
                            {
                              "type": "integer",
                              "start": {
                                "row": 29,
                                "column": 24
                              },
                              "end": {
                                "row": 29,
                                "column": 25
                              },
                              "text": "0"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 29,
                                "column": 25
                              },
                              "end": {
                                "row": 29,
                                "column": 26
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 30,
                "column": 8
              },
              "end": {
                "row": 30,
                "column": 46
              },
              "text": "return new_placement, new_values, mask",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 30,
                    "column": 8
                  },
                  "end": {
                    "row": 30,
                    "column": 14
                  },
                  "text": "return"
                },
                {
                  "type": "expression_list",
                  "start": {
                    "row": 30,
                    "column": 15
                  },
                  "end": {
                    "row": 30,
                    "column": 46
                  },
                  "text": "new_placement, new_values, mask",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 30,
                        "column": 15
                      },
                      "end": {
                        "row": 30,
                        "column": 28
                      },
                      "text": "new_placement"
                    },
                    {
                      "type": ",",
                      "start": {
                        "row": 30,
                        "column": 28
                      },
                      "end": {
                        "row": 30,
                        "column": 29
                      },
                      "text": ","
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 30,
                        "column": 30
                      },
                      "end": {
                        "row": 30,
                        "column": 40
                      },
                      "text": "new_values"
                    },
                    {
                      "type": ",",
                      "start": {
                        "row": 30,
                        "column": 40
                      },
                      "end": {
                        "row": 30,
                        "column": 41
                      },
                      "text": ","
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 30,
                        "column": 42
                      },
                      "end": {
                        "row": 30,
                        "column": 46
                      },
                      "text": "mask"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}