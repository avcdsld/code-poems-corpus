{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 34,
    "column": 23
  },
  "text": "def coerce(from_, to, **to_kwargs):\n    \"\"\"\n    A preprocessing decorator that coerces inputs of a given type by passing\n    them to a callable.\n\n    Parameters\n    ----------\n    from : type or tuple or types\n        Inputs types on which to call ``to``.\n    to : function\n        Coercion function to call on inputs.\n    **to_kwargs\n        Additional keywords to forward to every call to ``to``.\n\n    Examples\n    --------\n    >>> @preprocess(x=coerce(float, int), y=coerce(float, int))\n    ... def floordiff(x, y):\n    ...     return x - y\n    ...\n    >>> floordiff(3.2, 2.5)\n    1\n\n    >>> @preprocess(x=coerce(str, int, base=2), y=coerce(str, int, base=2))\n    ... def add_binary_strings(x, y):\n    ...     return bin(x + y)[2:]\n    ...\n    >>> add_binary_strings('101', '001')\n    '110'\n    \"\"\"\n    def preprocessor(func, argname, arg):\n        if isinstance(arg, from_):\n            return to(arg, **to_kwargs)\n        return arg\n    return preprocessor",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 34,
        "column": 23
      },
      "text": "def coerce(from_, to, **to_kwargs):\n    \"\"\"\n    A preprocessing decorator that coerces inputs of a given type by passing\n    them to a callable.\n\n    Parameters\n    ----------\n    from : type or tuple or types\n        Inputs types on which to call ``to``.\n    to : function\n        Coercion function to call on inputs.\n    **to_kwargs\n        Additional keywords to forward to every call to ``to``.\n\n    Examples\n    --------\n    >>> @preprocess(x=coerce(float, int), y=coerce(float, int))\n    ... def floordiff(x, y):\n    ...     return x - y\n    ...\n    >>> floordiff(3.2, 2.5)\n    1\n\n    >>> @preprocess(x=coerce(str, int, base=2), y=coerce(str, int, base=2))\n    ... def add_binary_strings(x, y):\n    ...     return bin(x + y)[2:]\n    ...\n    >>> add_binary_strings('101', '001')\n    '110'\n    \"\"\"\n    def preprocessor(func, argname, arg):\n        if isinstance(arg, from_):\n            return to(arg, **to_kwargs)\n        return arg\n    return preprocessor",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 10
          },
          "text": "coerce"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 10
          },
          "end": {
            "row": 0,
            "column": 34
          },
          "text": "(from_, to, **to_kwargs)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 10
              },
              "end": {
                "row": 0,
                "column": 11
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 11
              },
              "end": {
                "row": 0,
                "column": 16
              },
              "text": "from_"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 16
              },
              "end": {
                "row": 0,
                "column": 17
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 18
              },
              "end": {
                "row": 0,
                "column": 20
              },
              "text": "to"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 20
              },
              "end": {
                "row": 0,
                "column": 21
              },
              "text": ","
            },
            {
              "type": "dictionary_splat_pattern",
              "start": {
                "row": 0,
                "column": 22
              },
              "end": {
                "row": 0,
                "column": 33
              },
              "text": "**to_kwargs",
              "children": [
                {
                  "type": "**",
                  "start": {
                    "row": 0,
                    "column": 22
                  },
                  "end": {
                    "row": 0,
                    "column": 24
                  },
                  "text": "**"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 24
                  },
                  "end": {
                    "row": 0,
                    "column": 33
                  },
                  "text": "to_kwargs"
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 33
              },
              "end": {
                "row": 0,
                "column": 34
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 34
          },
          "end": {
            "row": 0,
            "column": 35
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 4
          },
          "end": {
            "row": 34,
            "column": 23
          },
          "text": "\"\"\"\n    A preprocessing decorator that coerces inputs of a given type by passing\n    them to a callable.\n\n    Parameters\n    ----------\n    from : type or tuple or types\n        Inputs types on which to call ``to``.\n    to : function\n        Coercion function to call on inputs.\n    **to_kwargs\n        Additional keywords to forward to every call to ``to``.\n\n    Examples\n    --------\n    >>> @preprocess(x=coerce(float, int), y=coerce(float, int))\n    ... def floordiff(x, y):\n    ...     return x - y\n    ...\n    >>> floordiff(3.2, 2.5)\n    1\n\n    >>> @preprocess(x=coerce(str, int, base=2), y=coerce(str, int, base=2))\n    ... def add_binary_strings(x, y):\n    ...     return bin(x + y)[2:]\n    ...\n    >>> add_binary_strings('101', '001')\n    '110'\n    \"\"\"\n    def preprocessor(func, argname, arg):\n        if isinstance(arg, from_):\n            return to(arg, **to_kwargs)\n        return arg\n    return preprocessor",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 4
              },
              "end": {
                "row": 29,
                "column": 7
              },
              "text": "\"\"\"\n    A preprocessing decorator that coerces inputs of a given type by passing\n    them to a callable.\n\n    Parameters\n    ----------\n    from : type or tuple or types\n        Inputs types on which to call ``to``.\n    to : function\n        Coercion function to call on inputs.\n    **to_kwargs\n        Additional keywords to forward to every call to ``to``.\n\n    Examples\n    --------\n    >>> @preprocess(x=coerce(float, int), y=coerce(float, int))\n    ... def floordiff(x, y):\n    ...     return x - y\n    ...\n    >>> floordiff(3.2, 2.5)\n    1\n\n    >>> @preprocess(x=coerce(str, int, base=2), y=coerce(str, int, base=2))\n    ... def add_binary_strings(x, y):\n    ...     return bin(x + y)[2:]\n    ...\n    >>> add_binary_strings('101', '001')\n    '110'\n    \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 4
                  },
                  "end": {
                    "row": 29,
                    "column": 7
                  },
                  "text": "\"\"\"\n    A preprocessing decorator that coerces inputs of a given type by passing\n    them to a callable.\n\n    Parameters\n    ----------\n    from : type or tuple or types\n        Inputs types on which to call ``to``.\n    to : function\n        Coercion function to call on inputs.\n    **to_kwargs\n        Additional keywords to forward to every call to ``to``.\n\n    Examples\n    --------\n    >>> @preprocess(x=coerce(float, int), y=coerce(float, int))\n    ... def floordiff(x, y):\n    ...     return x - y\n    ...\n    >>> floordiff(3.2, 2.5)\n    1\n\n    >>> @preprocess(x=coerce(str, int, base=2), y=coerce(str, int, base=2))\n    ... def add_binary_strings(x, y):\n    ...     return bin(x + y)[2:]\n    ...\n    >>> add_binary_strings('101', '001')\n    '110'\n    \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 4
                      },
                      "end": {
                        "row": 1,
                        "column": 7
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 7
                      },
                      "end": {
                        "row": 29,
                        "column": 4
                      },
                      "text": "\n    A preprocessing decorator that coerces inputs of a given type by passing\n    them to a callable.\n\n    Parameters\n    ----------\n    from : type or tuple or types\n        Inputs types on which to call ``to``.\n    to : function\n        Coercion function to call on inputs.\n    **to_kwargs\n        Additional keywords to forward to every call to ``to``.\n\n    Examples\n    --------\n    >>> @preprocess(x=coerce(float, int), y=coerce(float, int))\n    ... def floordiff(x, y):\n    ...     return x - y\n    ...\n    >>> floordiff(3.2, 2.5)\n    1\n\n    >>> @preprocess(x=coerce(str, int, base=2), y=coerce(str, int, base=2))\n    ... def add_binary_strings(x, y):\n    ...     return bin(x + y)[2:]\n    ...\n    >>> add_binary_strings('101', '001')\n    '110'\n    "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 29,
                        "column": 4
                      },
                      "end": {
                        "row": 29,
                        "column": 7
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "function_definition",
              "start": {
                "row": 30,
                "column": 4
              },
              "end": {
                "row": 33,
                "column": 18
              },
              "text": "def preprocessor(func, argname, arg):\n        if isinstance(arg, from_):\n            return to(arg, **to_kwargs)\n        return arg",
              "children": [
                {
                  "type": "def",
                  "start": {
                    "row": 30,
                    "column": 4
                  },
                  "end": {
                    "row": 30,
                    "column": 7
                  },
                  "text": "def"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 30,
                    "column": 8
                  },
                  "end": {
                    "row": 30,
                    "column": 20
                  },
                  "text": "preprocessor"
                },
                {
                  "type": "parameters",
                  "start": {
                    "row": 30,
                    "column": 20
                  },
                  "end": {
                    "row": 30,
                    "column": 40
                  },
                  "text": "(func, argname, arg)",
                  "children": [
                    {
                      "type": "(",
                      "start": {
                        "row": 30,
                        "column": 20
                      },
                      "end": {
                        "row": 30,
                        "column": 21
                      },
                      "text": "("
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 30,
                        "column": 21
                      },
                      "end": {
                        "row": 30,
                        "column": 25
                      },
                      "text": "func"
                    },
                    {
                      "type": ",",
                      "start": {
                        "row": 30,
                        "column": 25
                      },
                      "end": {
                        "row": 30,
                        "column": 26
                      },
                      "text": ","
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 30,
                        "column": 27
                      },
                      "end": {
                        "row": 30,
                        "column": 34
                      },
                      "text": "argname"
                    },
                    {
                      "type": ",",
                      "start": {
                        "row": 30,
                        "column": 34
                      },
                      "end": {
                        "row": 30,
                        "column": 35
                      },
                      "text": ","
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 30,
                        "column": 36
                      },
                      "end": {
                        "row": 30,
                        "column": 39
                      },
                      "text": "arg"
                    },
                    {
                      "type": ")",
                      "start": {
                        "row": 30,
                        "column": 39
                      },
                      "end": {
                        "row": 30,
                        "column": 40
                      },
                      "text": ")"
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 30,
                    "column": 40
                  },
                  "end": {
                    "row": 30,
                    "column": 41
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 31,
                    "column": 8
                  },
                  "end": {
                    "row": 33,
                    "column": 18
                  },
                  "text": "if isinstance(arg, from_):\n            return to(arg, **to_kwargs)\n        return arg",
                  "children": [
                    {
                      "type": "if_statement",
                      "start": {
                        "row": 31,
                        "column": 8
                      },
                      "end": {
                        "row": 32,
                        "column": 39
                      },
                      "text": "if isinstance(arg, from_):\n            return to(arg, **to_kwargs)",
                      "children": [
                        {
                          "type": "if",
                          "start": {
                            "row": 31,
                            "column": 8
                          },
                          "end": {
                            "row": 31,
                            "column": 10
                          },
                          "text": "if"
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 31,
                            "column": 11
                          },
                          "end": {
                            "row": 31,
                            "column": 33
                          },
                          "text": "isinstance(arg, from_)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 31,
                                "column": 11
                              },
                              "end": {
                                "row": 31,
                                "column": 21
                              },
                              "text": "isinstance"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 31,
                                "column": 21
                              },
                              "end": {
                                "row": 31,
                                "column": 33
                              },
                              "text": "(arg, from_)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 31,
                                    "column": 21
                                  },
                                  "end": {
                                    "row": 31,
                                    "column": 22
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 31,
                                    "column": 22
                                  },
                                  "end": {
                                    "row": 31,
                                    "column": 25
                                  },
                                  "text": "arg"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 31,
                                    "column": 25
                                  },
                                  "end": {
                                    "row": 31,
                                    "column": 26
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 31,
                                    "column": 27
                                  },
                                  "end": {
                                    "row": 31,
                                    "column": 32
                                  },
                                  "text": "from_"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 31,
                                    "column": 32
                                  },
                                  "end": {
                                    "row": 31,
                                    "column": 33
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ":",
                          "start": {
                            "row": 31,
                            "column": 33
                          },
                          "end": {
                            "row": 31,
                            "column": 34
                          },
                          "text": ":"
                        },
                        {
                          "type": "block",
                          "start": {
                            "row": 32,
                            "column": 12
                          },
                          "end": {
                            "row": 32,
                            "column": 39
                          },
                          "text": "return to(arg, **to_kwargs)",
                          "children": [
                            {
                              "type": "return_statement",
                              "start": {
                                "row": 32,
                                "column": 12
                              },
                              "end": {
                                "row": 32,
                                "column": 39
                              },
                              "text": "return to(arg, **to_kwargs)",
                              "children": [
                                {
                                  "type": "return",
                                  "start": {
                                    "row": 32,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 32,
                                    "column": 18
                                  },
                                  "text": "return"
                                },
                                {
                                  "type": "call",
                                  "start": {
                                    "row": 32,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 32,
                                    "column": 39
                                  },
                                  "text": "to(arg, **to_kwargs)",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 32,
                                        "column": 19
                                      },
                                      "end": {
                                        "row": 32,
                                        "column": 21
                                      },
                                      "text": "to"
                                    },
                                    {
                                      "type": "argument_list",
                                      "start": {
                                        "row": 32,
                                        "column": 21
                                      },
                                      "end": {
                                        "row": 32,
                                        "column": 39
                                      },
                                      "text": "(arg, **to_kwargs)",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 32,
                                            "column": 21
                                          },
                                          "end": {
                                            "row": 32,
                                            "column": 22
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 32,
                                            "column": 22
                                          },
                                          "end": {
                                            "row": 32,
                                            "column": 25
                                          },
                                          "text": "arg"
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 32,
                                            "column": 25
                                          },
                                          "end": {
                                            "row": 32,
                                            "column": 26
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "dictionary_splat",
                                          "start": {
                                            "row": 32,
                                            "column": 27
                                          },
                                          "end": {
                                            "row": 32,
                                            "column": 38
                                          },
                                          "text": "**to_kwargs",
                                          "children": [
                                            {
                                              "type": "**",
                                              "start": {
                                                "row": 32,
                                                "column": 27
                                              },
                                              "end": {
                                                "row": 32,
                                                "column": 29
                                              },
                                              "text": "**"
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 32,
                                                "column": 29
                                              },
                                              "end": {
                                                "row": 32,
                                                "column": 38
                                              },
                                              "text": "to_kwargs"
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 32,
                                            "column": 38
                                          },
                                          "end": {
                                            "row": 32,
                                            "column": 39
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "return_statement",
                      "start": {
                        "row": 33,
                        "column": 8
                      },
                      "end": {
                        "row": 33,
                        "column": 18
                      },
                      "text": "return arg",
                      "children": [
                        {
                          "type": "return",
                          "start": {
                            "row": 33,
                            "column": 8
                          },
                          "end": {
                            "row": 33,
                            "column": 14
                          },
                          "text": "return"
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 33,
                            "column": 15
                          },
                          "end": {
                            "row": 33,
                            "column": 18
                          },
                          "text": "arg"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 34,
                "column": 4
              },
              "end": {
                "row": 34,
                "column": 23
              },
              "text": "return preprocessor",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 34,
                    "column": 4
                  },
                  "end": {
                    "row": 34,
                    "column": 10
                  },
                  "text": "return"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 34,
                    "column": 11
                  },
                  "end": {
                    "row": 34,
                    "column": 23
                  },
                  "text": "preprocessor"
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}