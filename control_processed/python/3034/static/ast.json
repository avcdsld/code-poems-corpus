{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 27,
    "column": 80
  },
  "text": "def fit(self, lrs, n_cycle, wds=None, **kwargs):\n\n        \"\"\"Method gets an instance of LayerOptimizer and delegates to self.fit_gen(..)\n\n        Note that one can specify a list of learning rates which, when appropriately\n        defined, will be applied to different segments of an architecture. This seems\n        mostly relevant to ImageNet-trained models, where we want to alter the layers\n        closest to the images by much smaller amounts.\n\n        Likewise, a single or list of weight decay parameters can be specified, which\n        if appropriate for a model, will apply variable weight decay parameters to\n        different segments of the model.\n\n        Args:\n            lrs (float or list(float)): learning rate for the model\n\n            n_cycle (int): number of cycles (or iterations) to fit the model for\n\n            wds (float or list(float)): weight decay parameter(s).\n\n            kwargs: other arguments\n\n        Returns:\n            None\n        \"\"\"\n        self.sched = None\n        layer_opt = self.get_layer_opt(lrs, wds)\n        return self.fit_gen(self.model, self.data, layer_opt, n_cycle, **kwargs)",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 27,
        "column": 80
      },
      "text": "def fit(self, lrs, n_cycle, wds=None, **kwargs):\n\n        \"\"\"Method gets an instance of LayerOptimizer and delegates to self.fit_gen(..)\n\n        Note that one can specify a list of learning rates which, when appropriately\n        defined, will be applied to different segments of an architecture. This seems\n        mostly relevant to ImageNet-trained models, where we want to alter the layers\n        closest to the images by much smaller amounts.\n\n        Likewise, a single or list of weight decay parameters can be specified, which\n        if appropriate for a model, will apply variable weight decay parameters to\n        different segments of the model.\n\n        Args:\n            lrs (float or list(float)): learning rate for the model\n\n            n_cycle (int): number of cycles (or iterations) to fit the model for\n\n            wds (float or list(float)): weight decay parameter(s).\n\n            kwargs: other arguments\n\n        Returns:\n            None\n        \"\"\"\n        self.sched = None\n        layer_opt = self.get_layer_opt(lrs, wds)\n        return self.fit_gen(self.model, self.data, layer_opt, n_cycle, **kwargs)",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 7
          },
          "text": "fit"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 7
          },
          "end": {
            "row": 0,
            "column": 47
          },
          "text": "(self, lrs, n_cycle, wds=None, **kwargs)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 7
              },
              "end": {
                "row": 0,
                "column": 8
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 8
              },
              "end": {
                "row": 0,
                "column": 12
              },
              "text": "self"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 12
              },
              "end": {
                "row": 0,
                "column": 13
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 14
              },
              "end": {
                "row": 0,
                "column": 17
              },
              "text": "lrs"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 17
              },
              "end": {
                "row": 0,
                "column": 18
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 19
              },
              "end": {
                "row": 0,
                "column": 26
              },
              "text": "n_cycle"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 26
              },
              "end": {
                "row": 0,
                "column": 27
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 0,
                "column": 28
              },
              "end": {
                "row": 0,
                "column": 36
              },
              "text": "wds=None",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 28
                  },
                  "end": {
                    "row": 0,
                    "column": 31
                  },
                  "text": "wds"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 0,
                    "column": 31
                  },
                  "end": {
                    "row": 0,
                    "column": 32
                  },
                  "text": "="
                },
                {
                  "type": "none",
                  "start": {
                    "row": 0,
                    "column": 32
                  },
                  "end": {
                    "row": 0,
                    "column": 36
                  },
                  "text": "None"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 36
              },
              "end": {
                "row": 0,
                "column": 37
              },
              "text": ","
            },
            {
              "type": "dictionary_splat_pattern",
              "start": {
                "row": 0,
                "column": 38
              },
              "end": {
                "row": 0,
                "column": 46
              },
              "text": "**kwargs",
              "children": [
                {
                  "type": "**",
                  "start": {
                    "row": 0,
                    "column": 38
                  },
                  "end": {
                    "row": 0,
                    "column": 40
                  },
                  "text": "**"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 40
                  },
                  "end": {
                    "row": 0,
                    "column": 46
                  },
                  "text": "kwargs"
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 46
              },
              "end": {
                "row": 0,
                "column": 47
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 47
          },
          "end": {
            "row": 0,
            "column": 48
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 2,
            "column": 8
          },
          "end": {
            "row": 27,
            "column": 80
          },
          "text": "\"\"\"Method gets an instance of LayerOptimizer and delegates to self.fit_gen(..)\n\n        Note that one can specify a list of learning rates which, when appropriately\n        defined, will be applied to different segments of an architecture. This seems\n        mostly relevant to ImageNet-trained models, where we want to alter the layers\n        closest to the images by much smaller amounts.\n\n        Likewise, a single or list of weight decay parameters can be specified, which\n        if appropriate for a model, will apply variable weight decay parameters to\n        different segments of the model.\n\n        Args:\n            lrs (float or list(float)): learning rate for the model\n\n            n_cycle (int): number of cycles (or iterations) to fit the model for\n\n            wds (float or list(float)): weight decay parameter(s).\n\n            kwargs: other arguments\n\n        Returns:\n            None\n        \"\"\"\n        self.sched = None\n        layer_opt = self.get_layer_opt(lrs, wds)\n        return self.fit_gen(self.model, self.data, layer_opt, n_cycle, **kwargs)",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 2,
                "column": 8
              },
              "end": {
                "row": 24,
                "column": 11
              },
              "text": "\"\"\"Method gets an instance of LayerOptimizer and delegates to self.fit_gen(..)\n\n        Note that one can specify a list of learning rates which, when appropriately\n        defined, will be applied to different segments of an architecture. This seems\n        mostly relevant to ImageNet-trained models, where we want to alter the layers\n        closest to the images by much smaller amounts.\n\n        Likewise, a single or list of weight decay parameters can be specified, which\n        if appropriate for a model, will apply variable weight decay parameters to\n        different segments of the model.\n\n        Args:\n            lrs (float or list(float)): learning rate for the model\n\n            n_cycle (int): number of cycles (or iterations) to fit the model for\n\n            wds (float or list(float)): weight decay parameter(s).\n\n            kwargs: other arguments\n\n        Returns:\n            None\n        \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 2,
                    "column": 8
                  },
                  "end": {
                    "row": 24,
                    "column": 11
                  },
                  "text": "\"\"\"Method gets an instance of LayerOptimizer and delegates to self.fit_gen(..)\n\n        Note that one can specify a list of learning rates which, when appropriately\n        defined, will be applied to different segments of an architecture. This seems\n        mostly relevant to ImageNet-trained models, where we want to alter the layers\n        closest to the images by much smaller amounts.\n\n        Likewise, a single or list of weight decay parameters can be specified, which\n        if appropriate for a model, will apply variable weight decay parameters to\n        different segments of the model.\n\n        Args:\n            lrs (float or list(float)): learning rate for the model\n\n            n_cycle (int): number of cycles (or iterations) to fit the model for\n\n            wds (float or list(float)): weight decay parameter(s).\n\n            kwargs: other arguments\n\n        Returns:\n            None\n        \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 2,
                        "column": 8
                      },
                      "end": {
                        "row": 2,
                        "column": 11
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 2,
                        "column": 11
                      },
                      "end": {
                        "row": 24,
                        "column": 8
                      },
                      "text": "Method gets an instance of LayerOptimizer and delegates to self.fit_gen(..)\n\n        Note that one can specify a list of learning rates which, when appropriately\n        defined, will be applied to different segments of an architecture. This seems\n        mostly relevant to ImageNet-trained models, where we want to alter the layers\n        closest to the images by much smaller amounts.\n\n        Likewise, a single or list of weight decay parameters can be specified, which\n        if appropriate for a model, will apply variable weight decay parameters to\n        different segments of the model.\n\n        Args:\n            lrs (float or list(float)): learning rate for the model\n\n            n_cycle (int): number of cycles (or iterations) to fit the model for\n\n            wds (float or list(float)): weight decay parameter(s).\n\n            kwargs: other arguments\n\n        Returns:\n            None\n        "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 24,
                        "column": 8
                      },
                      "end": {
                        "row": 24,
                        "column": 11
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 25,
                "column": 8
              },
              "end": {
                "row": 25,
                "column": 25
              },
              "text": "self.sched = None",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 25,
                    "column": 8
                  },
                  "end": {
                    "row": 25,
                    "column": 25
                  },
                  "text": "self.sched = None",
                  "children": [
                    {
                      "type": "attribute",
                      "start": {
                        "row": 25,
                        "column": 8
                      },
                      "end": {
                        "row": 25,
                        "column": 18
                      },
                      "text": "self.sched",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 25,
                            "column": 8
                          },
                          "end": {
                            "row": 25,
                            "column": 12
                          },
                          "text": "self"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 25,
                            "column": 12
                          },
                          "end": {
                            "row": 25,
                            "column": 13
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 25,
                            "column": 13
                          },
                          "end": {
                            "row": 25,
                            "column": 18
                          },
                          "text": "sched"
                        }
                      ]
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 25,
                        "column": 19
                      },
                      "end": {
                        "row": 25,
                        "column": 20
                      },
                      "text": "="
                    },
                    {
                      "type": "none",
                      "start": {
                        "row": 25,
                        "column": 21
                      },
                      "end": {
                        "row": 25,
                        "column": 25
                      },
                      "text": "None"
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 26,
                "column": 8
              },
              "end": {
                "row": 26,
                "column": 48
              },
              "text": "layer_opt = self.get_layer_opt(lrs, wds)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 26,
                    "column": 8
                  },
                  "end": {
                    "row": 26,
                    "column": 48
                  },
                  "text": "layer_opt = self.get_layer_opt(lrs, wds)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 26,
                        "column": 8
                      },
                      "end": {
                        "row": 26,
                        "column": 17
                      },
                      "text": "layer_opt"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 26,
                        "column": 18
                      },
                      "end": {
                        "row": 26,
                        "column": 19
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 26,
                        "column": 20
                      },
                      "end": {
                        "row": 26,
                        "column": 48
                      },
                      "text": "self.get_layer_opt(lrs, wds)",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 26,
                            "column": 20
                          },
                          "end": {
                            "row": 26,
                            "column": 38
                          },
                          "text": "self.get_layer_opt",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 26,
                                "column": 20
                              },
                              "end": {
                                "row": 26,
                                "column": 24
                              },
                              "text": "self"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 26,
                                "column": 24
                              },
                              "end": {
                                "row": 26,
                                "column": 25
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 26,
                                "column": 25
                              },
                              "end": {
                                "row": 26,
                                "column": 38
                              },
                              "text": "get_layer_opt"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 26,
                            "column": 38
                          },
                          "end": {
                            "row": 26,
                            "column": 48
                          },
                          "text": "(lrs, wds)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 26,
                                "column": 38
                              },
                              "end": {
                                "row": 26,
                                "column": 39
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 26,
                                "column": 39
                              },
                              "end": {
                                "row": 26,
                                "column": 42
                              },
                              "text": "lrs"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 26,
                                "column": 42
                              },
                              "end": {
                                "row": 26,
                                "column": 43
                              },
                              "text": ","
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 26,
                                "column": 44
                              },
                              "end": {
                                "row": 26,
                                "column": 47
                              },
                              "text": "wds"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 26,
                                "column": 47
                              },
                              "end": {
                                "row": 26,
                                "column": 48
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 27,
                "column": 8
              },
              "end": {
                "row": 27,
                "column": 80
              },
              "text": "return self.fit_gen(self.model, self.data, layer_opt, n_cycle, **kwargs)",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 27,
                    "column": 8
                  },
                  "end": {
                    "row": 27,
                    "column": 14
                  },
                  "text": "return"
                },
                {
                  "type": "call",
                  "start": {
                    "row": 27,
                    "column": 15
                  },
                  "end": {
                    "row": 27,
                    "column": 80
                  },
                  "text": "self.fit_gen(self.model, self.data, layer_opt, n_cycle, **kwargs)",
                  "children": [
                    {
                      "type": "attribute",
                      "start": {
                        "row": 27,
                        "column": 15
                      },
                      "end": {
                        "row": 27,
                        "column": 27
                      },
                      "text": "self.fit_gen",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 27,
                            "column": 15
                          },
                          "end": {
                            "row": 27,
                            "column": 19
                          },
                          "text": "self"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 27,
                            "column": 19
                          },
                          "end": {
                            "row": 27,
                            "column": 20
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 27,
                            "column": 20
                          },
                          "end": {
                            "row": 27,
                            "column": 27
                          },
                          "text": "fit_gen"
                        }
                      ]
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 27,
                        "column": 27
                      },
                      "end": {
                        "row": 27,
                        "column": 80
                      },
                      "text": "(self.model, self.data, layer_opt, n_cycle, **kwargs)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 27,
                            "column": 27
                          },
                          "end": {
                            "row": 27,
                            "column": 28
                          },
                          "text": "("
                        },
                        {
                          "type": "attribute",
                          "start": {
                            "row": 27,
                            "column": 28
                          },
                          "end": {
                            "row": 27,
                            "column": 38
                          },
                          "text": "self.model",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 27,
                                "column": 28
                              },
                              "end": {
                                "row": 27,
                                "column": 32
                              },
                              "text": "self"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 27,
                                "column": 32
                              },
                              "end": {
                                "row": 27,
                                "column": 33
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 27,
                                "column": 33
                              },
                              "end": {
                                "row": 27,
                                "column": 38
                              },
                              "text": "model"
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 27,
                            "column": 38
                          },
                          "end": {
                            "row": 27,
                            "column": 39
                          },
                          "text": ","
                        },
                        {
                          "type": "attribute",
                          "start": {
                            "row": 27,
                            "column": 40
                          },
                          "end": {
                            "row": 27,
                            "column": 49
                          },
                          "text": "self.data",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 27,
                                "column": 40
                              },
                              "end": {
                                "row": 27,
                                "column": 44
                              },
                              "text": "self"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 27,
                                "column": 44
                              },
                              "end": {
                                "row": 27,
                                "column": 45
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 27,
                                "column": 45
                              },
                              "end": {
                                "row": 27,
                                "column": 49
                              },
                              "text": "data"
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 27,
                            "column": 49
                          },
                          "end": {
                            "row": 27,
                            "column": 50
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 27,
                            "column": 51
                          },
                          "end": {
                            "row": 27,
                            "column": 60
                          },
                          "text": "layer_opt"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 27,
                            "column": 60
                          },
                          "end": {
                            "row": 27,
                            "column": 61
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 27,
                            "column": 62
                          },
                          "end": {
                            "row": 27,
                            "column": 69
                          },
                          "text": "n_cycle"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 27,
                            "column": 69
                          },
                          "end": {
                            "row": 27,
                            "column": 70
                          },
                          "text": ","
                        },
                        {
                          "type": "dictionary_splat",
                          "start": {
                            "row": 27,
                            "column": 71
                          },
                          "end": {
                            "row": 27,
                            "column": 79
                          },
                          "text": "**kwargs",
                          "children": [
                            {
                              "type": "**",
                              "start": {
                                "row": 27,
                                "column": 71
                              },
                              "end": {
                                "row": 27,
                                "column": 73
                              },
                              "text": "**"
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 27,
                                "column": 73
                              },
                              "end": {
                                "row": 27,
                                "column": 79
                              },
                              "text": "kwargs"
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 27,
                            "column": 79
                          },
                          "end": {
                            "row": 27,
                            "column": 80
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}