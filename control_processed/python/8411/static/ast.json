{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 24,
    "column": 47
  },
  "text": "def add_time_dimension(padded_inputs, seq_lens):\n    \"\"\"Adds a time dimension to padded inputs.\n\n    Arguments:\n        padded_inputs (Tensor): a padded batch of sequences. That is,\n            for seq_lens=[1, 2, 2], then inputs=[A, *, B, B, C, C], where\n            A, B, C are sequence elements and * denotes padding.\n        seq_lens (Tensor): the sequence lengths within the input batch,\n            suitable for passing to tf.nn.dynamic_rnn().\n\n    Returns:\n        Reshaped tensor of shape [NUM_SEQUENCES, MAX_SEQ_LEN, ...].\n    \"\"\"\n\n    # Sequence lengths have to be specified for LSTM batch inputs. The\n    # input batch must be padded to the max seq length given here. That is,\n    # batch_size == len(seq_lens) * max(seq_lens)\n    padded_batch_size = tf.shape(padded_inputs)[0]\n    max_seq_len = padded_batch_size // tf.shape(seq_lens)[0]\n\n    # Dynamically reshape the padded batch to introduce a time dimension.\n    new_batch_size = padded_batch_size // max_seq_len\n    new_shape = ([new_batch_size, max_seq_len] +\n                 padded_inputs.get_shape().as_list()[1:])\n    return tf.reshape(padded_inputs, new_shape)",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 24,
        "column": 47
      },
      "text": "def add_time_dimension(padded_inputs, seq_lens):\n    \"\"\"Adds a time dimension to padded inputs.\n\n    Arguments:\n        padded_inputs (Tensor): a padded batch of sequences. That is,\n            for seq_lens=[1, 2, 2], then inputs=[A, *, B, B, C, C], where\n            A, B, C are sequence elements and * denotes padding.\n        seq_lens (Tensor): the sequence lengths within the input batch,\n            suitable for passing to tf.nn.dynamic_rnn().\n\n    Returns:\n        Reshaped tensor of shape [NUM_SEQUENCES, MAX_SEQ_LEN, ...].\n    \"\"\"\n\n    # Sequence lengths have to be specified for LSTM batch inputs. The\n    # input batch must be padded to the max seq length given here. That is,\n    # batch_size == len(seq_lens) * max(seq_lens)\n    padded_batch_size = tf.shape(padded_inputs)[0]\n    max_seq_len = padded_batch_size // tf.shape(seq_lens)[0]\n\n    # Dynamically reshape the padded batch to introduce a time dimension.\n    new_batch_size = padded_batch_size // max_seq_len\n    new_shape = ([new_batch_size, max_seq_len] +\n                 padded_inputs.get_shape().as_list()[1:])\n    return tf.reshape(padded_inputs, new_shape)",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 22
          },
          "text": "add_time_dimension"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 22
          },
          "end": {
            "row": 0,
            "column": 47
          },
          "text": "(padded_inputs, seq_lens)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 22
              },
              "end": {
                "row": 0,
                "column": 23
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 23
              },
              "end": {
                "row": 0,
                "column": 36
              },
              "text": "padded_inputs"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 36
              },
              "end": {
                "row": 0,
                "column": 37
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 38
              },
              "end": {
                "row": 0,
                "column": 46
              },
              "text": "seq_lens"
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 46
              },
              "end": {
                "row": 0,
                "column": 47
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 47
          },
          "end": {
            "row": 0,
            "column": 48
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 4
          },
          "end": {
            "row": 24,
            "column": 47
          },
          "text": "\"\"\"Adds a time dimension to padded inputs.\n\n    Arguments:\n        padded_inputs (Tensor): a padded batch of sequences. That is,\n            for seq_lens=[1, 2, 2], then inputs=[A, *, B, B, C, C], where\n            A, B, C are sequence elements and * denotes padding.\n        seq_lens (Tensor): the sequence lengths within the input batch,\n            suitable for passing to tf.nn.dynamic_rnn().\n\n    Returns:\n        Reshaped tensor of shape [NUM_SEQUENCES, MAX_SEQ_LEN, ...].\n    \"\"\"\n\n    # Sequence lengths have to be specified for LSTM batch inputs. The\n    # input batch must be padded to the max seq length given here. That is,\n    # batch_size == len(seq_lens) * max(seq_lens)\n    padded_batch_size = tf.shape(padded_inputs)[0]\n    max_seq_len = padded_batch_size // tf.shape(seq_lens)[0]\n\n    # Dynamically reshape the padded batch to introduce a time dimension.\n    new_batch_size = padded_batch_size // max_seq_len\n    new_shape = ([new_batch_size, max_seq_len] +\n                 padded_inputs.get_shape().as_list()[1:])\n    return tf.reshape(padded_inputs, new_shape)",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 4
              },
              "end": {
                "row": 12,
                "column": 7
              },
              "text": "\"\"\"Adds a time dimension to padded inputs.\n\n    Arguments:\n        padded_inputs (Tensor): a padded batch of sequences. That is,\n            for seq_lens=[1, 2, 2], then inputs=[A, *, B, B, C, C], where\n            A, B, C are sequence elements and * denotes padding.\n        seq_lens (Tensor): the sequence lengths within the input batch,\n            suitable for passing to tf.nn.dynamic_rnn().\n\n    Returns:\n        Reshaped tensor of shape [NUM_SEQUENCES, MAX_SEQ_LEN, ...].\n    \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 4
                  },
                  "end": {
                    "row": 12,
                    "column": 7
                  },
                  "text": "\"\"\"Adds a time dimension to padded inputs.\n\n    Arguments:\n        padded_inputs (Tensor): a padded batch of sequences. That is,\n            for seq_lens=[1, 2, 2], then inputs=[A, *, B, B, C, C], where\n            A, B, C are sequence elements and * denotes padding.\n        seq_lens (Tensor): the sequence lengths within the input batch,\n            suitable for passing to tf.nn.dynamic_rnn().\n\n    Returns:\n        Reshaped tensor of shape [NUM_SEQUENCES, MAX_SEQ_LEN, ...].\n    \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 4
                      },
                      "end": {
                        "row": 1,
                        "column": 7
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 7
                      },
                      "end": {
                        "row": 12,
                        "column": 4
                      },
                      "text": "Adds a time dimension to padded inputs.\n\n    Arguments:\n        padded_inputs (Tensor): a padded batch of sequences. That is,\n            for seq_lens=[1, 2, 2], then inputs=[A, *, B, B, C, C], where\n            A, B, C are sequence elements and * denotes padding.\n        seq_lens (Tensor): the sequence lengths within the input batch,\n            suitable for passing to tf.nn.dynamic_rnn().\n\n    Returns:\n        Reshaped tensor of shape [NUM_SEQUENCES, MAX_SEQ_LEN, ...].\n    "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 12,
                        "column": 4
                      },
                      "end": {
                        "row": 12,
                        "column": 7
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 14,
                "column": 4
              },
              "end": {
                "row": 14,
                "column": 70
              },
              "text": "# Sequence lengths have to be specified for LSTM batch inputs. The"
            },
            {
              "type": "comment",
              "start": {
                "row": 15,
                "column": 4
              },
              "end": {
                "row": 15,
                "column": 75
              },
              "text": "# input batch must be padded to the max seq length given here. That is,"
            },
            {
              "type": "comment",
              "start": {
                "row": 16,
                "column": 4
              },
              "end": {
                "row": 16,
                "column": 49
              },
              "text": "# batch_size == len(seq_lens) * max(seq_lens)"
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 17,
                "column": 4
              },
              "end": {
                "row": 17,
                "column": 50
              },
              "text": "padded_batch_size = tf.shape(padded_inputs)[0]",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 17,
                    "column": 4
                  },
                  "end": {
                    "row": 17,
                    "column": 50
                  },
                  "text": "padded_batch_size = tf.shape(padded_inputs)[0]",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 17,
                        "column": 4
                      },
                      "end": {
                        "row": 17,
                        "column": 21
                      },
                      "text": "padded_batch_size"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 17,
                        "column": 22
                      },
                      "end": {
                        "row": 17,
                        "column": 23
                      },
                      "text": "="
                    },
                    {
                      "type": "subscript",
                      "start": {
                        "row": 17,
                        "column": 24
                      },
                      "end": {
                        "row": 17,
                        "column": 50
                      },
                      "text": "tf.shape(padded_inputs)[0]",
                      "children": [
                        {
                          "type": "call",
                          "start": {
                            "row": 17,
                            "column": 24
                          },
                          "end": {
                            "row": 17,
                            "column": 47
                          },
                          "text": "tf.shape(padded_inputs)",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 17,
                                "column": 24
                              },
                              "end": {
                                "row": 17,
                                "column": 32
                              },
                              "text": "tf.shape",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 17,
                                    "column": 24
                                  },
                                  "end": {
                                    "row": 17,
                                    "column": 26
                                  },
                                  "text": "tf"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 17,
                                    "column": 26
                                  },
                                  "end": {
                                    "row": 17,
                                    "column": 27
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 17,
                                    "column": 27
                                  },
                                  "end": {
                                    "row": 17,
                                    "column": 32
                                  },
                                  "text": "shape"
                                }
                              ]
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 17,
                                "column": 32
                              },
                              "end": {
                                "row": 17,
                                "column": 47
                              },
                              "text": "(padded_inputs)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 17,
                                    "column": 32
                                  },
                                  "end": {
                                    "row": 17,
                                    "column": 33
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 17,
                                    "column": 33
                                  },
                                  "end": {
                                    "row": 17,
                                    "column": 46
                                  },
                                  "text": "padded_inputs"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 17,
                                    "column": 46
                                  },
                                  "end": {
                                    "row": 17,
                                    "column": 47
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "[",
                          "start": {
                            "row": 17,
                            "column": 47
                          },
                          "end": {
                            "row": 17,
                            "column": 48
                          },
                          "text": "["
                        },
                        {
                          "type": "integer",
                          "start": {
                            "row": 17,
                            "column": 48
                          },
                          "end": {
                            "row": 17,
                            "column": 49
                          },
                          "text": "0"
                        },
                        {
                          "type": "]",
                          "start": {
                            "row": 17,
                            "column": 49
                          },
                          "end": {
                            "row": 17,
                            "column": 50
                          },
                          "text": "]"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 18,
                "column": 4
              },
              "end": {
                "row": 18,
                "column": 60
              },
              "text": "max_seq_len = padded_batch_size // tf.shape(seq_lens)[0]",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 18,
                    "column": 4
                  },
                  "end": {
                    "row": 18,
                    "column": 60
                  },
                  "text": "max_seq_len = padded_batch_size // tf.shape(seq_lens)[0]",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 18,
                        "column": 4
                      },
                      "end": {
                        "row": 18,
                        "column": 15
                      },
                      "text": "max_seq_len"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 18,
                        "column": 16
                      },
                      "end": {
                        "row": 18,
                        "column": 17
                      },
                      "text": "="
                    },
                    {
                      "type": "binary_operator",
                      "start": {
                        "row": 18,
                        "column": 18
                      },
                      "end": {
                        "row": 18,
                        "column": 60
                      },
                      "text": "padded_batch_size // tf.shape(seq_lens)[0]",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 18,
                            "column": 18
                          },
                          "end": {
                            "row": 18,
                            "column": 35
                          },
                          "text": "padded_batch_size"
                        },
                        {
                          "type": "//",
                          "start": {
                            "row": 18,
                            "column": 36
                          },
                          "end": {
                            "row": 18,
                            "column": 38
                          },
                          "text": "//"
                        },
                        {
                          "type": "subscript",
                          "start": {
                            "row": 18,
                            "column": 39
                          },
                          "end": {
                            "row": 18,
                            "column": 60
                          },
                          "text": "tf.shape(seq_lens)[0]",
                          "children": [
                            {
                              "type": "call",
                              "start": {
                                "row": 18,
                                "column": 39
                              },
                              "end": {
                                "row": 18,
                                "column": 57
                              },
                              "text": "tf.shape(seq_lens)",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 18,
                                    "column": 39
                                  },
                                  "end": {
                                    "row": 18,
                                    "column": 47
                                  },
                                  "text": "tf.shape",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 18,
                                        "column": 39
                                      },
                                      "end": {
                                        "row": 18,
                                        "column": 41
                                      },
                                      "text": "tf"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 18,
                                        "column": 41
                                      },
                                      "end": {
                                        "row": 18,
                                        "column": 42
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 18,
                                        "column": 42
                                      },
                                      "end": {
                                        "row": 18,
                                        "column": 47
                                      },
                                      "text": "shape"
                                    }
                                  ]
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 18,
                                    "column": 47
                                  },
                                  "end": {
                                    "row": 18,
                                    "column": 57
                                  },
                                  "text": "(seq_lens)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 18,
                                        "column": 47
                                      },
                                      "end": {
                                        "row": 18,
                                        "column": 48
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 18,
                                        "column": 48
                                      },
                                      "end": {
                                        "row": 18,
                                        "column": 56
                                      },
                                      "text": "seq_lens"
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 18,
                                        "column": 56
                                      },
                                      "end": {
                                        "row": 18,
                                        "column": 57
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "[",
                              "start": {
                                "row": 18,
                                "column": 57
                              },
                              "end": {
                                "row": 18,
                                "column": 58
                              },
                              "text": "["
                            },
                            {
                              "type": "integer",
                              "start": {
                                "row": 18,
                                "column": 58
                              },
                              "end": {
                                "row": 18,
                                "column": 59
                              },
                              "text": "0"
                            },
                            {
                              "type": "]",
                              "start": {
                                "row": 18,
                                "column": 59
                              },
                              "end": {
                                "row": 18,
                                "column": 60
                              },
                              "text": "]"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 20,
                "column": 4
              },
              "end": {
                "row": 20,
                "column": 73
              },
              "text": "# Dynamically reshape the padded batch to introduce a time dimension."
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 21,
                "column": 4
              },
              "end": {
                "row": 21,
                "column": 53
              },
              "text": "new_batch_size = padded_batch_size // max_seq_len",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 21,
                    "column": 4
                  },
                  "end": {
                    "row": 21,
                    "column": 53
                  },
                  "text": "new_batch_size = padded_batch_size // max_seq_len",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 21,
                        "column": 4
                      },
                      "end": {
                        "row": 21,
                        "column": 18
                      },
                      "text": "new_batch_size"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 21,
                        "column": 19
                      },
                      "end": {
                        "row": 21,
                        "column": 20
                      },
                      "text": "="
                    },
                    {
                      "type": "binary_operator",
                      "start": {
                        "row": 21,
                        "column": 21
                      },
                      "end": {
                        "row": 21,
                        "column": 53
                      },
                      "text": "padded_batch_size // max_seq_len",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 21,
                            "column": 21
                          },
                          "end": {
                            "row": 21,
                            "column": 38
                          },
                          "text": "padded_batch_size"
                        },
                        {
                          "type": "//",
                          "start": {
                            "row": 21,
                            "column": 39
                          },
                          "end": {
                            "row": 21,
                            "column": 41
                          },
                          "text": "//"
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 21,
                            "column": 42
                          },
                          "end": {
                            "row": 21,
                            "column": 53
                          },
                          "text": "max_seq_len"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 22,
                "column": 4
              },
              "end": {
                "row": 23,
                "column": 57
              },
              "text": "new_shape = ([new_batch_size, max_seq_len] +\n                 padded_inputs.get_shape().as_list()[1:])",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 22,
                    "column": 4
                  },
                  "end": {
                    "row": 23,
                    "column": 57
                  },
                  "text": "new_shape = ([new_batch_size, max_seq_len] +\n                 padded_inputs.get_shape().as_list()[1:])",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 22,
                        "column": 4
                      },
                      "end": {
                        "row": 22,
                        "column": 13
                      },
                      "text": "new_shape"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 22,
                        "column": 14
                      },
                      "end": {
                        "row": 22,
                        "column": 15
                      },
                      "text": "="
                    },
                    {
                      "type": "parenthesized_expression",
                      "start": {
                        "row": 22,
                        "column": 16
                      },
                      "end": {
                        "row": 23,
                        "column": 57
                      },
                      "text": "([new_batch_size, max_seq_len] +\n                 padded_inputs.get_shape().as_list()[1:])",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 22,
                            "column": 16
                          },
                          "end": {
                            "row": 22,
                            "column": 17
                          },
                          "text": "("
                        },
                        {
                          "type": "binary_operator",
                          "start": {
                            "row": 22,
                            "column": 17
                          },
                          "end": {
                            "row": 23,
                            "column": 56
                          },
                          "text": "[new_batch_size, max_seq_len] +\n                 padded_inputs.get_shape().as_list()[1:]",
                          "children": [
                            {
                              "type": "list",
                              "start": {
                                "row": 22,
                                "column": 17
                              },
                              "end": {
                                "row": 22,
                                "column": 46
                              },
                              "text": "[new_batch_size, max_seq_len]",
                              "children": [
                                {
                                  "type": "[",
                                  "start": {
                                    "row": 22,
                                    "column": 17
                                  },
                                  "end": {
                                    "row": 22,
                                    "column": 18
                                  },
                                  "text": "["
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 22,
                                    "column": 18
                                  },
                                  "end": {
                                    "row": 22,
                                    "column": 32
                                  },
                                  "text": "new_batch_size"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 22,
                                    "column": 32
                                  },
                                  "end": {
                                    "row": 22,
                                    "column": 33
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 22,
                                    "column": 34
                                  },
                                  "end": {
                                    "row": 22,
                                    "column": 45
                                  },
                                  "text": "max_seq_len"
                                },
                                {
                                  "type": "]",
                                  "start": {
                                    "row": 22,
                                    "column": 45
                                  },
                                  "end": {
                                    "row": 22,
                                    "column": 46
                                  },
                                  "text": "]"
                                }
                              ]
                            },
                            {
                              "type": "+",
                              "start": {
                                "row": 22,
                                "column": 47
                              },
                              "end": {
                                "row": 22,
                                "column": 48
                              },
                              "text": "+"
                            },
                            {
                              "type": "subscript",
                              "start": {
                                "row": 23,
                                "column": 17
                              },
                              "end": {
                                "row": 23,
                                "column": 56
                              },
                              "text": "padded_inputs.get_shape().as_list()[1:]",
                              "children": [
                                {
                                  "type": "call",
                                  "start": {
                                    "row": 23,
                                    "column": 17
                                  },
                                  "end": {
                                    "row": 23,
                                    "column": 52
                                  },
                                  "text": "padded_inputs.get_shape().as_list()",
                                  "children": [
                                    {
                                      "type": "attribute",
                                      "start": {
                                        "row": 23,
                                        "column": 17
                                      },
                                      "end": {
                                        "row": 23,
                                        "column": 50
                                      },
                                      "text": "padded_inputs.get_shape().as_list",
                                      "children": [
                                        {
                                          "type": "call",
                                          "start": {
                                            "row": 23,
                                            "column": 17
                                          },
                                          "end": {
                                            "row": 23,
                                            "column": 42
                                          },
                                          "text": "padded_inputs.get_shape()",
                                          "children": [
                                            {
                                              "type": "attribute",
                                              "start": {
                                                "row": 23,
                                                "column": 17
                                              },
                                              "end": {
                                                "row": 23,
                                                "column": 40
                                              },
                                              "text": "padded_inputs.get_shape",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 23,
                                                    "column": 17
                                                  },
                                                  "end": {
                                                    "row": 23,
                                                    "column": 30
                                                  },
                                                  "text": "padded_inputs"
                                                },
                                                {
                                                  "type": ".",
                                                  "start": {
                                                    "row": 23,
                                                    "column": 30
                                                  },
                                                  "end": {
                                                    "row": 23,
                                                    "column": 31
                                                  },
                                                  "text": "."
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 23,
                                                    "column": 31
                                                  },
                                                  "end": {
                                                    "row": 23,
                                                    "column": 40
                                                  },
                                                  "text": "get_shape"
                                                }
                                              ]
                                            },
                                            {
                                              "type": "argument_list",
                                              "start": {
                                                "row": 23,
                                                "column": 40
                                              },
                                              "end": {
                                                "row": 23,
                                                "column": 42
                                              },
                                              "text": "()",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 23,
                                                    "column": 40
                                                  },
                                                  "end": {
                                                    "row": 23,
                                                    "column": 41
                                                  },
                                                  "text": "("
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 23,
                                                    "column": 41
                                                  },
                                                  "end": {
                                                    "row": 23,
                                                    "column": 42
                                                  },
                                                  "text": ")"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 23,
                                            "column": 42
                                          },
                                          "end": {
                                            "row": 23,
                                            "column": 43
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 23,
                                            "column": 43
                                          },
                                          "end": {
                                            "row": 23,
                                            "column": 50
                                          },
                                          "text": "as_list"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "argument_list",
                                      "start": {
                                        "row": 23,
                                        "column": 50
                                      },
                                      "end": {
                                        "row": 23,
                                        "column": 52
                                      },
                                      "text": "()",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 23,
                                            "column": 50
                                          },
                                          "end": {
                                            "row": 23,
                                            "column": 51
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 23,
                                            "column": 51
                                          },
                                          "end": {
                                            "row": 23,
                                            "column": 52
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "[",
                                  "start": {
                                    "row": 23,
                                    "column": 52
                                  },
                                  "end": {
                                    "row": 23,
                                    "column": 53
                                  },
                                  "text": "["
                                },
                                {
                                  "type": "slice",
                                  "start": {
                                    "row": 23,
                                    "column": 53
                                  },
                                  "end": {
                                    "row": 23,
                                    "column": 55
                                  },
                                  "text": "1:",
                                  "children": [
                                    {
                                      "type": "integer",
                                      "start": {
                                        "row": 23,
                                        "column": 53
                                      },
                                      "end": {
                                        "row": 23,
                                        "column": 54
                                      },
                                      "text": "1"
                                    },
                                    {
                                      "type": ":",
                                      "start": {
                                        "row": 23,
                                        "column": 54
                                      },
                                      "end": {
                                        "row": 23,
                                        "column": 55
                                      },
                                      "text": ":"
                                    }
                                  ]
                                },
                                {
                                  "type": "]",
                                  "start": {
                                    "row": 23,
                                    "column": 55
                                  },
                                  "end": {
                                    "row": 23,
                                    "column": 56
                                  },
                                  "text": "]"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 23,
                            "column": 56
                          },
                          "end": {
                            "row": 23,
                            "column": 57
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 24,
                "column": 4
              },
              "end": {
                "row": 24,
                "column": 47
              },
              "text": "return tf.reshape(padded_inputs, new_shape)",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 24,
                    "column": 4
                  },
                  "end": {
                    "row": 24,
                    "column": 10
                  },
                  "text": "return"
                },
                {
                  "type": "call",
                  "start": {
                    "row": 24,
                    "column": 11
                  },
                  "end": {
                    "row": 24,
                    "column": 47
                  },
                  "text": "tf.reshape(padded_inputs, new_shape)",
                  "children": [
                    {
                      "type": "attribute",
                      "start": {
                        "row": 24,
                        "column": 11
                      },
                      "end": {
                        "row": 24,
                        "column": 21
                      },
                      "text": "tf.reshape",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 24,
                            "column": 11
                          },
                          "end": {
                            "row": 24,
                            "column": 13
                          },
                          "text": "tf"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 24,
                            "column": 13
                          },
                          "end": {
                            "row": 24,
                            "column": 14
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 24,
                            "column": 14
                          },
                          "end": {
                            "row": 24,
                            "column": 21
                          },
                          "text": "reshape"
                        }
                      ]
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 24,
                        "column": 21
                      },
                      "end": {
                        "row": 24,
                        "column": 47
                      },
                      "text": "(padded_inputs, new_shape)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 24,
                            "column": 21
                          },
                          "end": {
                            "row": 24,
                            "column": 22
                          },
                          "text": "("
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 24,
                            "column": 22
                          },
                          "end": {
                            "row": 24,
                            "column": 35
                          },
                          "text": "padded_inputs"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 24,
                            "column": 35
                          },
                          "end": {
                            "row": 24,
                            "column": 36
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 24,
                            "column": 37
                          },
                          "end": {
                            "row": 24,
                            "column": 46
                          },
                          "text": "new_shape"
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 24,
                            "column": 46
                          },
                          "end": {
                            "row": 24,
                            "column": 47
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}