{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 72,
    "column": 82
  },
  "text": "def pull(self, key, out=None, priority=0, ignore_sparse=True):\n        \"\"\" Pulls a single value or a sequence of values from the store.\n\n        This function returns immediately after adding an operator to the engine.\n        Subsequent attempts to read from the `out` variable will be blocked until the\n        pull operation completes.\n\n        `pull` is executed asynchronously after all previous `pull` calls and only\n        the last `push` call for the same input key(s) are finished.\n\n        The returned values are guaranteed to be the latest values in the store.\n\n        pull with `RowSparseNDArray` is not supported for dist kvstore.\n        Please use ``row_sparse_pull`` instead.\n\n        Parameters\n        ----------\n        key : str, int, or sequence of str or int\n            Keys.\n\n        out: NDArray or list of NDArray or list of list of NDArray\n            Values corresponding to the keys.\n\n        priority : int, optional\n            The priority of the pull operation.\n            Higher priority pull operations are likely to be executed before\n            other pull actions.\n\n        ignore_sparse: bool, optional, default True\n            Whether to ignore sparse arrays in the request.\n\n        Examples\n        --------\n        >>> # pull a single key-value pair\n        >>> a = mx.nd.zeros(shape)\n        >>> kv.pull('3', out=a)\n        >>> print a.asnumpy()\n        [[ 2.  2.  2.]\n        [ 2.  2.  2.]]\n\n        >>> # pull into multiple devices\n        >>> b = [mx.nd.ones(shape, gpu) for gpu in gpus]\n        >>> kv.pull('3', out=b)\n        >>> print b[1].asnumpy()\n        [[ 2.  2.  2.]\n        [ 2.  2.  2.]]\n\n        >>> # pull a list of key-value pairs.\n        >>> # On single device\n        >>> keys = ['5', '7', '9']\n        >>> b = [mx.nd.zeros(shape)]*len(keys)\n        >>> kv.pull(keys, out=b)\n        >>> print b[1].asnumpy()\n        [[ 2.  2.  2.]\n        [ 2.  2.  2.]]\n        >>> # On multiple devices\n        >>> keys = ['6', '8', '10']\n        >>> b = [[mx.nd.ones(shape, gpu) for gpu in gpus]] * len(keys)\n        >>> kv.pull(keys, out=b)\n        >>> print b[1][1].asnumpy()\n        [[ 2.  2.  2.]\n        [ 2.  2.  2.]]\n        \"\"\"\n        assert(out is not None)\n        ckeys, cvals, use_str_keys = _ctype_key_value(key, out)\n        if use_str_keys:\n            check_call(_LIB.MXKVStorePullWithSparseEx(self.handle, mx_uint(len(ckeys)), ckeys,\n                                                      cvals, ctypes.c_int(priority),\n                                                      ctypes.c_bool(ignore_sparse)))\n        else:\n            check_call(_LIB.MXKVStorePullWithSparse(self.handle, mx_uint(len(ckeys)), ckeys,\n                                                    cvals, ctypes.c_int(priority),\n                                                    ctypes.c_bool(ignore_sparse)))",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 72,
        "column": 82
      },
      "text": "def pull(self, key, out=None, priority=0, ignore_sparse=True):\n        \"\"\" Pulls a single value or a sequence of values from the store.\n\n        This function returns immediately after adding an operator to the engine.\n        Subsequent attempts to read from the `out` variable will be blocked until the\n        pull operation completes.\n\n        `pull` is executed asynchronously after all previous `pull` calls and only\n        the last `push` call for the same input key(s) are finished.\n\n        The returned values are guaranteed to be the latest values in the store.\n\n        pull with `RowSparseNDArray` is not supported for dist kvstore.\n        Please use ``row_sparse_pull`` instead.\n\n        Parameters\n        ----------\n        key : str, int, or sequence of str or int\n            Keys.\n\n        out: NDArray or list of NDArray or list of list of NDArray\n            Values corresponding to the keys.\n\n        priority : int, optional\n            The priority of the pull operation.\n            Higher priority pull operations are likely to be executed before\n            other pull actions.\n\n        ignore_sparse: bool, optional, default True\n            Whether to ignore sparse arrays in the request.\n\n        Examples\n        --------\n        >>> # pull a single key-value pair\n        >>> a = mx.nd.zeros(shape)\n        >>> kv.pull('3', out=a)\n        >>> print a.asnumpy()\n        [[ 2.  2.  2.]\n        [ 2.  2.  2.]]\n\n        >>> # pull into multiple devices\n        >>> b = [mx.nd.ones(shape, gpu) for gpu in gpus]\n        >>> kv.pull('3', out=b)\n        >>> print b[1].asnumpy()\n        [[ 2.  2.  2.]\n        [ 2.  2.  2.]]\n\n        >>> # pull a list of key-value pairs.\n        >>> # On single device\n        >>> keys = ['5', '7', '9']\n        >>> b = [mx.nd.zeros(shape)]*len(keys)\n        >>> kv.pull(keys, out=b)\n        >>> print b[1].asnumpy()\n        [[ 2.  2.  2.]\n        [ 2.  2.  2.]]\n        >>> # On multiple devices\n        >>> keys = ['6', '8', '10']\n        >>> b = [[mx.nd.ones(shape, gpu) for gpu in gpus]] * len(keys)\n        >>> kv.pull(keys, out=b)\n        >>> print b[1][1].asnumpy()\n        [[ 2.  2.  2.]\n        [ 2.  2.  2.]]\n        \"\"\"\n        assert(out is not None)\n        ckeys, cvals, use_str_keys = _ctype_key_value(key, out)\n        if use_str_keys:\n            check_call(_LIB.MXKVStorePullWithSparseEx(self.handle, mx_uint(len(ckeys)), ckeys,\n                                                      cvals, ctypes.c_int(priority),\n                                                      ctypes.c_bool(ignore_sparse)))\n        else:\n            check_call(_LIB.MXKVStorePullWithSparse(self.handle, mx_uint(len(ckeys)), ckeys,\n                                                    cvals, ctypes.c_int(priority),\n                                                    ctypes.c_bool(ignore_sparse)))",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 8
          },
          "text": "pull"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 8
          },
          "end": {
            "row": 0,
            "column": 61
          },
          "text": "(self, key, out=None, priority=0, ignore_sparse=True)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 8
              },
              "end": {
                "row": 0,
                "column": 9
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 9
              },
              "end": {
                "row": 0,
                "column": 13
              },
              "text": "self"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 13
              },
              "end": {
                "row": 0,
                "column": 14
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 15
              },
              "end": {
                "row": 0,
                "column": 18
              },
              "text": "key"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 18
              },
              "end": {
                "row": 0,
                "column": 19
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 0,
                "column": 20
              },
              "end": {
                "row": 0,
                "column": 28
              },
              "text": "out=None",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 20
                  },
                  "end": {
                    "row": 0,
                    "column": 23
                  },
                  "text": "out"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 0,
                    "column": 23
                  },
                  "end": {
                    "row": 0,
                    "column": 24
                  },
                  "text": "="
                },
                {
                  "type": "none",
                  "start": {
                    "row": 0,
                    "column": 24
                  },
                  "end": {
                    "row": 0,
                    "column": 28
                  },
                  "text": "None"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 28
              },
              "end": {
                "row": 0,
                "column": 29
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 0,
                "column": 30
              },
              "end": {
                "row": 0,
                "column": 40
              },
              "text": "priority=0",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 30
                  },
                  "end": {
                    "row": 0,
                    "column": 38
                  },
                  "text": "priority"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 0,
                    "column": 38
                  },
                  "end": {
                    "row": 0,
                    "column": 39
                  },
                  "text": "="
                },
                {
                  "type": "integer",
                  "start": {
                    "row": 0,
                    "column": 39
                  },
                  "end": {
                    "row": 0,
                    "column": 40
                  },
                  "text": "0"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 40
              },
              "end": {
                "row": 0,
                "column": 41
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 0,
                "column": 42
              },
              "end": {
                "row": 0,
                "column": 60
              },
              "text": "ignore_sparse=True",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 42
                  },
                  "end": {
                    "row": 0,
                    "column": 55
                  },
                  "text": "ignore_sparse"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 0,
                    "column": 55
                  },
                  "end": {
                    "row": 0,
                    "column": 56
                  },
                  "text": "="
                },
                {
                  "type": "true",
                  "start": {
                    "row": 0,
                    "column": 56
                  },
                  "end": {
                    "row": 0,
                    "column": 60
                  },
                  "text": "True"
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 60
              },
              "end": {
                "row": 0,
                "column": 61
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 61
          },
          "end": {
            "row": 0,
            "column": 62
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 8
          },
          "end": {
            "row": 72,
            "column": 82
          },
          "text": "\"\"\" Pulls a single value or a sequence of values from the store.\n\n        This function returns immediately after adding an operator to the engine.\n        Subsequent attempts to read from the `out` variable will be blocked until the\n        pull operation completes.\n\n        `pull` is executed asynchronously after all previous `pull` calls and only\n        the last `push` call for the same input key(s) are finished.\n\n        The returned values are guaranteed to be the latest values in the store.\n\n        pull with `RowSparseNDArray` is not supported for dist kvstore.\n        Please use ``row_sparse_pull`` instead.\n\n        Parameters\n        ----------\n        key : str, int, or sequence of str or int\n            Keys.\n\n        out: NDArray or list of NDArray or list of list of NDArray\n            Values corresponding to the keys.\n\n        priority : int, optional\n            The priority of the pull operation.\n            Higher priority pull operations are likely to be executed before\n            other pull actions.\n\n        ignore_sparse: bool, optional, default True\n            Whether to ignore sparse arrays in the request.\n\n        Examples\n        --------\n        >>> # pull a single key-value pair\n        >>> a = mx.nd.zeros(shape)\n        >>> kv.pull('3', out=a)\n        >>> print a.asnumpy()\n        [[ 2.  2.  2.]\n        [ 2.  2.  2.]]\n\n        >>> # pull into multiple devices\n        >>> b = [mx.nd.ones(shape, gpu) for gpu in gpus]\n        >>> kv.pull('3', out=b)\n        >>> print b[1].asnumpy()\n        [[ 2.  2.  2.]\n        [ 2.  2.  2.]]\n\n        >>> # pull a list of key-value pairs.\n        >>> # On single device\n        >>> keys = ['5', '7', '9']\n        >>> b = [mx.nd.zeros(shape)]*len(keys)\n        >>> kv.pull(keys, out=b)\n        >>> print b[1].asnumpy()\n        [[ 2.  2.  2.]\n        [ 2.  2.  2.]]\n        >>> # On multiple devices\n        >>> keys = ['6', '8', '10']\n        >>> b = [[mx.nd.ones(shape, gpu) for gpu in gpus]] * len(keys)\n        >>> kv.pull(keys, out=b)\n        >>> print b[1][1].asnumpy()\n        [[ 2.  2.  2.]\n        [ 2.  2.  2.]]\n        \"\"\"\n        assert(out is not None)\n        ckeys, cvals, use_str_keys = _ctype_key_value(key, out)\n        if use_str_keys:\n            check_call(_LIB.MXKVStorePullWithSparseEx(self.handle, mx_uint(len(ckeys)), ckeys,\n                                                      cvals, ctypes.c_int(priority),\n                                                      ctypes.c_bool(ignore_sparse)))\n        else:\n            check_call(_LIB.MXKVStorePullWithSparse(self.handle, mx_uint(len(ckeys)), ckeys,\n                                                    cvals, ctypes.c_int(priority),\n                                                    ctypes.c_bool(ignore_sparse)))",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 8
              },
              "end": {
                "row": 62,
                "column": 11
              },
              "text": "\"\"\" Pulls a single value or a sequence of values from the store.\n\n        This function returns immediately after adding an operator to the engine.\n        Subsequent attempts to read from the `out` variable will be blocked until the\n        pull operation completes.\n\n        `pull` is executed asynchronously after all previous `pull` calls and only\n        the last `push` call for the same input key(s) are finished.\n\n        The returned values are guaranteed to be the latest values in the store.\n\n        pull with `RowSparseNDArray` is not supported for dist kvstore.\n        Please use ``row_sparse_pull`` instead.\n\n        Parameters\n        ----------\n        key : str, int, or sequence of str or int\n            Keys.\n\n        out: NDArray or list of NDArray or list of list of NDArray\n            Values corresponding to the keys.\n\n        priority : int, optional\n            The priority of the pull operation.\n            Higher priority pull operations are likely to be executed before\n            other pull actions.\n\n        ignore_sparse: bool, optional, default True\n            Whether to ignore sparse arrays in the request.\n\n        Examples\n        --------\n        >>> # pull a single key-value pair\n        >>> a = mx.nd.zeros(shape)\n        >>> kv.pull('3', out=a)\n        >>> print a.asnumpy()\n        [[ 2.  2.  2.]\n        [ 2.  2.  2.]]\n\n        >>> # pull into multiple devices\n        >>> b = [mx.nd.ones(shape, gpu) for gpu in gpus]\n        >>> kv.pull('3', out=b)\n        >>> print b[1].asnumpy()\n        [[ 2.  2.  2.]\n        [ 2.  2.  2.]]\n\n        >>> # pull a list of key-value pairs.\n        >>> # On single device\n        >>> keys = ['5', '7', '9']\n        >>> b = [mx.nd.zeros(shape)]*len(keys)\n        >>> kv.pull(keys, out=b)\n        >>> print b[1].asnumpy()\n        [[ 2.  2.  2.]\n        [ 2.  2.  2.]]\n        >>> # On multiple devices\n        >>> keys = ['6', '8', '10']\n        >>> b = [[mx.nd.ones(shape, gpu) for gpu in gpus]] * len(keys)\n        >>> kv.pull(keys, out=b)\n        >>> print b[1][1].asnumpy()\n        [[ 2.  2.  2.]\n        [ 2.  2.  2.]]\n        \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 8
                  },
                  "end": {
                    "row": 62,
                    "column": 11
                  },
                  "text": "\"\"\" Pulls a single value or a sequence of values from the store.\n\n        This function returns immediately after adding an operator to the engine.\n        Subsequent attempts to read from the `out` variable will be blocked until the\n        pull operation completes.\n\n        `pull` is executed asynchronously after all previous `pull` calls and only\n        the last `push` call for the same input key(s) are finished.\n\n        The returned values are guaranteed to be the latest values in the store.\n\n        pull with `RowSparseNDArray` is not supported for dist kvstore.\n        Please use ``row_sparse_pull`` instead.\n\n        Parameters\n        ----------\n        key : str, int, or sequence of str or int\n            Keys.\n\n        out: NDArray or list of NDArray or list of list of NDArray\n            Values corresponding to the keys.\n\n        priority : int, optional\n            The priority of the pull operation.\n            Higher priority pull operations are likely to be executed before\n            other pull actions.\n\n        ignore_sparse: bool, optional, default True\n            Whether to ignore sparse arrays in the request.\n\n        Examples\n        --------\n        >>> # pull a single key-value pair\n        >>> a = mx.nd.zeros(shape)\n        >>> kv.pull('3', out=a)\n        >>> print a.asnumpy()\n        [[ 2.  2.  2.]\n        [ 2.  2.  2.]]\n\n        >>> # pull into multiple devices\n        >>> b = [mx.nd.ones(shape, gpu) for gpu in gpus]\n        >>> kv.pull('3', out=b)\n        >>> print b[1].asnumpy()\n        [[ 2.  2.  2.]\n        [ 2.  2.  2.]]\n\n        >>> # pull a list of key-value pairs.\n        >>> # On single device\n        >>> keys = ['5', '7', '9']\n        >>> b = [mx.nd.zeros(shape)]*len(keys)\n        >>> kv.pull(keys, out=b)\n        >>> print b[1].asnumpy()\n        [[ 2.  2.  2.]\n        [ 2.  2.  2.]]\n        >>> # On multiple devices\n        >>> keys = ['6', '8', '10']\n        >>> b = [[mx.nd.ones(shape, gpu) for gpu in gpus]] * len(keys)\n        >>> kv.pull(keys, out=b)\n        >>> print b[1][1].asnumpy()\n        [[ 2.  2.  2.]\n        [ 2.  2.  2.]]\n        \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 8
                      },
                      "end": {
                        "row": 1,
                        "column": 11
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 11
                      },
                      "end": {
                        "row": 62,
                        "column": 8
                      },
                      "text": " Pulls a single value or a sequence of values from the store.\n\n        This function returns immediately after adding an operator to the engine.\n        Subsequent attempts to read from the `out` variable will be blocked until the\n        pull operation completes.\n\n        `pull` is executed asynchronously after all previous `pull` calls and only\n        the last `push` call for the same input key(s) are finished.\n\n        The returned values are guaranteed to be the latest values in the store.\n\n        pull with `RowSparseNDArray` is not supported for dist kvstore.\n        Please use ``row_sparse_pull`` instead.\n\n        Parameters\n        ----------\n        key : str, int, or sequence of str or int\n            Keys.\n\n        out: NDArray or list of NDArray or list of list of NDArray\n            Values corresponding to the keys.\n\n        priority : int, optional\n            The priority of the pull operation.\n            Higher priority pull operations are likely to be executed before\n            other pull actions.\n\n        ignore_sparse: bool, optional, default True\n            Whether to ignore sparse arrays in the request.\n\n        Examples\n        --------\n        >>> # pull a single key-value pair\n        >>> a = mx.nd.zeros(shape)\n        >>> kv.pull('3', out=a)\n        >>> print a.asnumpy()\n        [[ 2.  2.  2.]\n        [ 2.  2.  2.]]\n\n        >>> # pull into multiple devices\n        >>> b = [mx.nd.ones(shape, gpu) for gpu in gpus]\n        >>> kv.pull('3', out=b)\n        >>> print b[1].asnumpy()\n        [[ 2.  2.  2.]\n        [ 2.  2.  2.]]\n\n        >>> # pull a list of key-value pairs.\n        >>> # On single device\n        >>> keys = ['5', '7', '9']\n        >>> b = [mx.nd.zeros(shape)]*len(keys)\n        >>> kv.pull(keys, out=b)\n        >>> print b[1].asnumpy()\n        [[ 2.  2.  2.]\n        [ 2.  2.  2.]]\n        >>> # On multiple devices\n        >>> keys = ['6', '8', '10']\n        >>> b = [[mx.nd.ones(shape, gpu) for gpu in gpus]] * len(keys)\n        >>> kv.pull(keys, out=b)\n        >>> print b[1][1].asnumpy()\n        [[ 2.  2.  2.]\n        [ 2.  2.  2.]]\n        "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 62,
                        "column": 8
                      },
                      "end": {
                        "row": 62,
                        "column": 11
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "assert_statement",
              "start": {
                "row": 63,
                "column": 8
              },
              "end": {
                "row": 63,
                "column": 31
              },
              "text": "assert(out is not None)",
              "children": [
                {
                  "type": "assert",
                  "start": {
                    "row": 63,
                    "column": 8
                  },
                  "end": {
                    "row": 63,
                    "column": 14
                  },
                  "text": "assert"
                },
                {
                  "type": "parenthesized_expression",
                  "start": {
                    "row": 63,
                    "column": 14
                  },
                  "end": {
                    "row": 63,
                    "column": 31
                  },
                  "text": "(out is not None)",
                  "children": [
                    {
                      "type": "(",
                      "start": {
                        "row": 63,
                        "column": 14
                      },
                      "end": {
                        "row": 63,
                        "column": 15
                      },
                      "text": "("
                    },
                    {
                      "type": "comparison_operator",
                      "start": {
                        "row": 63,
                        "column": 15
                      },
                      "end": {
                        "row": 63,
                        "column": 30
                      },
                      "text": "out is not None",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 63,
                            "column": 15
                          },
                          "end": {
                            "row": 63,
                            "column": 18
                          },
                          "text": "out"
                        },
                        {
                          "type": "is not",
                          "start": {
                            "row": 63,
                            "column": 19
                          },
                          "end": {
                            "row": 63,
                            "column": 21
                          },
                          "text": "is"
                        },
                        {
                          "type": "is not",
                          "start": {
                            "row": 63,
                            "column": 22
                          },
                          "end": {
                            "row": 63,
                            "column": 25
                          },
                          "text": "not"
                        },
                        {
                          "type": "none",
                          "start": {
                            "row": 63,
                            "column": 26
                          },
                          "end": {
                            "row": 63,
                            "column": 30
                          },
                          "text": "None"
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start": {
                        "row": 63,
                        "column": 30
                      },
                      "end": {
                        "row": 63,
                        "column": 31
                      },
                      "text": ")"
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 64,
                "column": 8
              },
              "end": {
                "row": 64,
                "column": 63
              },
              "text": "ckeys, cvals, use_str_keys = _ctype_key_value(key, out)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 64,
                    "column": 8
                  },
                  "end": {
                    "row": 64,
                    "column": 63
                  },
                  "text": "ckeys, cvals, use_str_keys = _ctype_key_value(key, out)",
                  "children": [
                    {
                      "type": "pattern_list",
                      "start": {
                        "row": 64,
                        "column": 8
                      },
                      "end": {
                        "row": 64,
                        "column": 34
                      },
                      "text": "ckeys, cvals, use_str_keys",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 64,
                            "column": 8
                          },
                          "end": {
                            "row": 64,
                            "column": 13
                          },
                          "text": "ckeys"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 64,
                            "column": 13
                          },
                          "end": {
                            "row": 64,
                            "column": 14
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 64,
                            "column": 15
                          },
                          "end": {
                            "row": 64,
                            "column": 20
                          },
                          "text": "cvals"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 64,
                            "column": 20
                          },
                          "end": {
                            "row": 64,
                            "column": 21
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 64,
                            "column": 22
                          },
                          "end": {
                            "row": 64,
                            "column": 34
                          },
                          "text": "use_str_keys"
                        }
                      ]
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 64,
                        "column": 35
                      },
                      "end": {
                        "row": 64,
                        "column": 36
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 64,
                        "column": 37
                      },
                      "end": {
                        "row": 64,
                        "column": 63
                      },
                      "text": "_ctype_key_value(key, out)",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 64,
                            "column": 37
                          },
                          "end": {
                            "row": 64,
                            "column": 53
                          },
                          "text": "_ctype_key_value"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 64,
                            "column": 53
                          },
                          "end": {
                            "row": 64,
                            "column": 63
                          },
                          "text": "(key, out)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 64,
                                "column": 53
                              },
                              "end": {
                                "row": 64,
                                "column": 54
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 64,
                                "column": 54
                              },
                              "end": {
                                "row": 64,
                                "column": 57
                              },
                              "text": "key"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 64,
                                "column": 57
                              },
                              "end": {
                                "row": 64,
                                "column": 58
                              },
                              "text": ","
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 64,
                                "column": 59
                              },
                              "end": {
                                "row": 64,
                                "column": 62
                              },
                              "text": "out"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 64,
                                "column": 62
                              },
                              "end": {
                                "row": 64,
                                "column": 63
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 65,
                "column": 8
              },
              "end": {
                "row": 72,
                "column": 82
              },
              "text": "if use_str_keys:\n            check_call(_LIB.MXKVStorePullWithSparseEx(self.handle, mx_uint(len(ckeys)), ckeys,\n                                                      cvals, ctypes.c_int(priority),\n                                                      ctypes.c_bool(ignore_sparse)))\n        else:\n            check_call(_LIB.MXKVStorePullWithSparse(self.handle, mx_uint(len(ckeys)), ckeys,\n                                                    cvals, ctypes.c_int(priority),\n                                                    ctypes.c_bool(ignore_sparse)))",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 65,
                    "column": 8
                  },
                  "end": {
                    "row": 65,
                    "column": 10
                  },
                  "text": "if"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 65,
                    "column": 11
                  },
                  "end": {
                    "row": 65,
                    "column": 23
                  },
                  "text": "use_str_keys"
                },
                {
                  "type": ":",
                  "start": {
                    "row": 65,
                    "column": 23
                  },
                  "end": {
                    "row": 65,
                    "column": 24
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 66,
                    "column": 12
                  },
                  "end": {
                    "row": 68,
                    "column": 84
                  },
                  "text": "check_call(_LIB.MXKVStorePullWithSparseEx(self.handle, mx_uint(len(ckeys)), ckeys,\n                                                      cvals, ctypes.c_int(priority),\n                                                      ctypes.c_bool(ignore_sparse)))",
                  "children": [
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 66,
                        "column": 12
                      },
                      "end": {
                        "row": 68,
                        "column": 84
                      },
                      "text": "check_call(_LIB.MXKVStorePullWithSparseEx(self.handle, mx_uint(len(ckeys)), ckeys,\n                                                      cvals, ctypes.c_int(priority),\n                                                      ctypes.c_bool(ignore_sparse)))",
                      "children": [
                        {
                          "type": "call",
                          "start": {
                            "row": 66,
                            "column": 12
                          },
                          "end": {
                            "row": 68,
                            "column": 84
                          },
                          "text": "check_call(_LIB.MXKVStorePullWithSparseEx(self.handle, mx_uint(len(ckeys)), ckeys,\n                                                      cvals, ctypes.c_int(priority),\n                                                      ctypes.c_bool(ignore_sparse)))",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 66,
                                "column": 12
                              },
                              "end": {
                                "row": 66,
                                "column": 22
                              },
                              "text": "check_call"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 66,
                                "column": 22
                              },
                              "end": {
                                "row": 68,
                                "column": 84
                              },
                              "text": "(_LIB.MXKVStorePullWithSparseEx(self.handle, mx_uint(len(ckeys)), ckeys,\n                                                      cvals, ctypes.c_int(priority),\n                                                      ctypes.c_bool(ignore_sparse)))",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 66,
                                    "column": 22
                                  },
                                  "end": {
                                    "row": 66,
                                    "column": 23
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "call",
                                  "start": {
                                    "row": 66,
                                    "column": 23
                                  },
                                  "end": {
                                    "row": 68,
                                    "column": 83
                                  },
                                  "text": "_LIB.MXKVStorePullWithSparseEx(self.handle, mx_uint(len(ckeys)), ckeys,\n                                                      cvals, ctypes.c_int(priority),\n                                                      ctypes.c_bool(ignore_sparse))",
                                  "children": [
                                    {
                                      "type": "attribute",
                                      "start": {
                                        "row": 66,
                                        "column": 23
                                      },
                                      "end": {
                                        "row": 66,
                                        "column": 53
                                      },
                                      "text": "_LIB.MXKVStorePullWithSparseEx",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 66,
                                            "column": 23
                                          },
                                          "end": {
                                            "row": 66,
                                            "column": 27
                                          },
                                          "text": "_LIB"
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 66,
                                            "column": 27
                                          },
                                          "end": {
                                            "row": 66,
                                            "column": 28
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 66,
                                            "column": 28
                                          },
                                          "end": {
                                            "row": 66,
                                            "column": 53
                                          },
                                          "text": "MXKVStorePullWithSparseEx"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "argument_list",
                                      "start": {
                                        "row": 66,
                                        "column": 53
                                      },
                                      "end": {
                                        "row": 68,
                                        "column": 83
                                      },
                                      "text": "(self.handle, mx_uint(len(ckeys)), ckeys,\n                                                      cvals, ctypes.c_int(priority),\n                                                      ctypes.c_bool(ignore_sparse))",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 66,
                                            "column": 53
                                          },
                                          "end": {
                                            "row": 66,
                                            "column": 54
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "attribute",
                                          "start": {
                                            "row": 66,
                                            "column": 54
                                          },
                                          "end": {
                                            "row": 66,
                                            "column": 65
                                          },
                                          "text": "self.handle",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 66,
                                                "column": 54
                                              },
                                              "end": {
                                                "row": 66,
                                                "column": 58
                                              },
                                              "text": "self"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 66,
                                                "column": 58
                                              },
                                              "end": {
                                                "row": 66,
                                                "column": 59
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 66,
                                                "column": 59
                                              },
                                              "end": {
                                                "row": 66,
                                                "column": 65
                                              },
                                              "text": "handle"
                                            }
                                          ]
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 66,
                                            "column": 65
                                          },
                                          "end": {
                                            "row": 66,
                                            "column": 66
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "call",
                                          "start": {
                                            "row": 66,
                                            "column": 67
                                          },
                                          "end": {
                                            "row": 66,
                                            "column": 86
                                          },
                                          "text": "mx_uint(len(ckeys))",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 66,
                                                "column": 67
                                              },
                                              "end": {
                                                "row": 66,
                                                "column": 74
                                              },
                                              "text": "mx_uint"
                                            },
                                            {
                                              "type": "argument_list",
                                              "start": {
                                                "row": 66,
                                                "column": 74
                                              },
                                              "end": {
                                                "row": 66,
                                                "column": 86
                                              },
                                              "text": "(len(ckeys))",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 66,
                                                    "column": 74
                                                  },
                                                  "end": {
                                                    "row": 66,
                                                    "column": 75
                                                  },
                                                  "text": "("
                                                },
                                                {
                                                  "type": "call",
                                                  "start": {
                                                    "row": 66,
                                                    "column": 75
                                                  },
                                                  "end": {
                                                    "row": 66,
                                                    "column": 85
                                                  },
                                                  "text": "len(ckeys)",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 66,
                                                        "column": 75
                                                      },
                                                      "end": {
                                                        "row": 66,
                                                        "column": 78
                                                      },
                                                      "text": "len"
                                                    },
                                                    {
                                                      "type": "argument_list",
                                                      "start": {
                                                        "row": 66,
                                                        "column": 78
                                                      },
                                                      "end": {
                                                        "row": 66,
                                                        "column": 85
                                                      },
                                                      "text": "(ckeys)",
                                                      "children": [
                                                        {
                                                          "type": "(",
                                                          "start": {
                                                            "row": 66,
                                                            "column": 78
                                                          },
                                                          "end": {
                                                            "row": 66,
                                                            "column": 79
                                                          },
                                                          "text": "("
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 66,
                                                            "column": 79
                                                          },
                                                          "end": {
                                                            "row": 66,
                                                            "column": 84
                                                          },
                                                          "text": "ckeys"
                                                        },
                                                        {
                                                          "type": ")",
                                                          "start": {
                                                            "row": 66,
                                                            "column": 84
                                                          },
                                                          "end": {
                                                            "row": 66,
                                                            "column": 85
                                                          },
                                                          "text": ")"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 66,
                                                    "column": 85
                                                  },
                                                  "end": {
                                                    "row": 66,
                                                    "column": 86
                                                  },
                                                  "text": ")"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 66,
                                            "column": 86
                                          },
                                          "end": {
                                            "row": 66,
                                            "column": 87
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 66,
                                            "column": 88
                                          },
                                          "end": {
                                            "row": 66,
                                            "column": 93
                                          },
                                          "text": "ckeys"
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 66,
                                            "column": 93
                                          },
                                          "end": {
                                            "row": 66,
                                            "column": 94
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 67,
                                            "column": 54
                                          },
                                          "end": {
                                            "row": 67,
                                            "column": 59
                                          },
                                          "text": "cvals"
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 67,
                                            "column": 59
                                          },
                                          "end": {
                                            "row": 67,
                                            "column": 60
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "call",
                                          "start": {
                                            "row": 67,
                                            "column": 61
                                          },
                                          "end": {
                                            "row": 67,
                                            "column": 83
                                          },
                                          "text": "ctypes.c_int(priority)",
                                          "children": [
                                            {
                                              "type": "attribute",
                                              "start": {
                                                "row": 67,
                                                "column": 61
                                              },
                                              "end": {
                                                "row": 67,
                                                "column": 73
                                              },
                                              "text": "ctypes.c_int",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 67,
                                                    "column": 61
                                                  },
                                                  "end": {
                                                    "row": 67,
                                                    "column": 67
                                                  },
                                                  "text": "ctypes"
                                                },
                                                {
                                                  "type": ".",
                                                  "start": {
                                                    "row": 67,
                                                    "column": 67
                                                  },
                                                  "end": {
                                                    "row": 67,
                                                    "column": 68
                                                  },
                                                  "text": "."
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 67,
                                                    "column": 68
                                                  },
                                                  "end": {
                                                    "row": 67,
                                                    "column": 73
                                                  },
                                                  "text": "c_int"
                                                }
                                              ]
                                            },
                                            {
                                              "type": "argument_list",
                                              "start": {
                                                "row": 67,
                                                "column": 73
                                              },
                                              "end": {
                                                "row": 67,
                                                "column": 83
                                              },
                                              "text": "(priority)",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 67,
                                                    "column": 73
                                                  },
                                                  "end": {
                                                    "row": 67,
                                                    "column": 74
                                                  },
                                                  "text": "("
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 67,
                                                    "column": 74
                                                  },
                                                  "end": {
                                                    "row": 67,
                                                    "column": 82
                                                  },
                                                  "text": "priority"
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 67,
                                                    "column": 82
                                                  },
                                                  "end": {
                                                    "row": 67,
                                                    "column": 83
                                                  },
                                                  "text": ")"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 67,
                                            "column": 83
                                          },
                                          "end": {
                                            "row": 67,
                                            "column": 84
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "call",
                                          "start": {
                                            "row": 68,
                                            "column": 54
                                          },
                                          "end": {
                                            "row": 68,
                                            "column": 82
                                          },
                                          "text": "ctypes.c_bool(ignore_sparse)",
                                          "children": [
                                            {
                                              "type": "attribute",
                                              "start": {
                                                "row": 68,
                                                "column": 54
                                              },
                                              "end": {
                                                "row": 68,
                                                "column": 67
                                              },
                                              "text": "ctypes.c_bool",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 68,
                                                    "column": 54
                                                  },
                                                  "end": {
                                                    "row": 68,
                                                    "column": 60
                                                  },
                                                  "text": "ctypes"
                                                },
                                                {
                                                  "type": ".",
                                                  "start": {
                                                    "row": 68,
                                                    "column": 60
                                                  },
                                                  "end": {
                                                    "row": 68,
                                                    "column": 61
                                                  },
                                                  "text": "."
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 68,
                                                    "column": 61
                                                  },
                                                  "end": {
                                                    "row": 68,
                                                    "column": 67
                                                  },
                                                  "text": "c_bool"
                                                }
                                              ]
                                            },
                                            {
                                              "type": "argument_list",
                                              "start": {
                                                "row": 68,
                                                "column": 67
                                              },
                                              "end": {
                                                "row": 68,
                                                "column": 82
                                              },
                                              "text": "(ignore_sparse)",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 68,
                                                    "column": 67
                                                  },
                                                  "end": {
                                                    "row": 68,
                                                    "column": 68
                                                  },
                                                  "text": "("
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 68,
                                                    "column": 68
                                                  },
                                                  "end": {
                                                    "row": 68,
                                                    "column": 81
                                                  },
                                                  "text": "ignore_sparse"
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 68,
                                                    "column": 81
                                                  },
                                                  "end": {
                                                    "row": 68,
                                                    "column": 82
                                                  },
                                                  "text": ")"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 68,
                                            "column": 82
                                          },
                                          "end": {
                                            "row": 68,
                                            "column": 83
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 68,
                                    "column": 83
                                  },
                                  "end": {
                                    "row": 68,
                                    "column": 84
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "else_clause",
                  "start": {
                    "row": 69,
                    "column": 8
                  },
                  "end": {
                    "row": 72,
                    "column": 82
                  },
                  "text": "else:\n            check_call(_LIB.MXKVStorePullWithSparse(self.handle, mx_uint(len(ckeys)), ckeys,\n                                                    cvals, ctypes.c_int(priority),\n                                                    ctypes.c_bool(ignore_sparse)))",
                  "children": [
                    {
                      "type": "else",
                      "start": {
                        "row": 69,
                        "column": 8
                      },
                      "end": {
                        "row": 69,
                        "column": 12
                      },
                      "text": "else"
                    },
                    {
                      "type": ":",
                      "start": {
                        "row": 69,
                        "column": 12
                      },
                      "end": {
                        "row": 69,
                        "column": 13
                      },
                      "text": ":"
                    },
                    {
                      "type": "block",
                      "start": {
                        "row": 70,
                        "column": 12
                      },
                      "end": {
                        "row": 72,
                        "column": 82
                      },
                      "text": "check_call(_LIB.MXKVStorePullWithSparse(self.handle, mx_uint(len(ckeys)), ckeys,\n                                                    cvals, ctypes.c_int(priority),\n                                                    ctypes.c_bool(ignore_sparse)))",
                      "children": [
                        {
                          "type": "expression_statement",
                          "start": {
                            "row": 70,
                            "column": 12
                          },
                          "end": {
                            "row": 72,
                            "column": 82
                          },
                          "text": "check_call(_LIB.MXKVStorePullWithSparse(self.handle, mx_uint(len(ckeys)), ckeys,\n                                                    cvals, ctypes.c_int(priority),\n                                                    ctypes.c_bool(ignore_sparse)))",
                          "children": [
                            {
                              "type": "call",
                              "start": {
                                "row": 70,
                                "column": 12
                              },
                              "end": {
                                "row": 72,
                                "column": 82
                              },
                              "text": "check_call(_LIB.MXKVStorePullWithSparse(self.handle, mx_uint(len(ckeys)), ckeys,\n                                                    cvals, ctypes.c_int(priority),\n                                                    ctypes.c_bool(ignore_sparse)))",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 70,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 70,
                                    "column": 22
                                  },
                                  "text": "check_call"
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 70,
                                    "column": 22
                                  },
                                  "end": {
                                    "row": 72,
                                    "column": 82
                                  },
                                  "text": "(_LIB.MXKVStorePullWithSparse(self.handle, mx_uint(len(ckeys)), ckeys,\n                                                    cvals, ctypes.c_int(priority),\n                                                    ctypes.c_bool(ignore_sparse)))",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 70,
                                        "column": 22
                                      },
                                      "end": {
                                        "row": 70,
                                        "column": 23
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 70,
                                        "column": 23
                                      },
                                      "end": {
                                        "row": 72,
                                        "column": 81
                                      },
                                      "text": "_LIB.MXKVStorePullWithSparse(self.handle, mx_uint(len(ckeys)), ckeys,\n                                                    cvals, ctypes.c_int(priority),\n                                                    ctypes.c_bool(ignore_sparse))",
                                      "children": [
                                        {
                                          "type": "attribute",
                                          "start": {
                                            "row": 70,
                                            "column": 23
                                          },
                                          "end": {
                                            "row": 70,
                                            "column": 51
                                          },
                                          "text": "_LIB.MXKVStorePullWithSparse",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 70,
                                                "column": 23
                                              },
                                              "end": {
                                                "row": 70,
                                                "column": 27
                                              },
                                              "text": "_LIB"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 70,
                                                "column": 27
                                              },
                                              "end": {
                                                "row": 70,
                                                "column": 28
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 70,
                                                "column": 28
                                              },
                                              "end": {
                                                "row": 70,
                                                "column": 51
                                              },
                                              "text": "MXKVStorePullWithSparse"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 70,
                                            "column": 51
                                          },
                                          "end": {
                                            "row": 72,
                                            "column": 81
                                          },
                                          "text": "(self.handle, mx_uint(len(ckeys)), ckeys,\n                                                    cvals, ctypes.c_int(priority),\n                                                    ctypes.c_bool(ignore_sparse))",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 70,
                                                "column": 51
                                              },
                                              "end": {
                                                "row": 70,
                                                "column": 52
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "attribute",
                                              "start": {
                                                "row": 70,
                                                "column": 52
                                              },
                                              "end": {
                                                "row": 70,
                                                "column": 63
                                              },
                                              "text": "self.handle",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 70,
                                                    "column": 52
                                                  },
                                                  "end": {
                                                    "row": 70,
                                                    "column": 56
                                                  },
                                                  "text": "self"
                                                },
                                                {
                                                  "type": ".",
                                                  "start": {
                                                    "row": 70,
                                                    "column": 56
                                                  },
                                                  "end": {
                                                    "row": 70,
                                                    "column": 57
                                                  },
                                                  "text": "."
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 70,
                                                    "column": 57
                                                  },
                                                  "end": {
                                                    "row": 70,
                                                    "column": 63
                                                  },
                                                  "text": "handle"
                                                }
                                              ]
                                            },
                                            {
                                              "type": ",",
                                              "start": {
                                                "row": 70,
                                                "column": 63
                                              },
                                              "end": {
                                                "row": 70,
                                                "column": 64
                                              },
                                              "text": ","
                                            },
                                            {
                                              "type": "call",
                                              "start": {
                                                "row": 70,
                                                "column": 65
                                              },
                                              "end": {
                                                "row": 70,
                                                "column": 84
                                              },
                                              "text": "mx_uint(len(ckeys))",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 70,
                                                    "column": 65
                                                  },
                                                  "end": {
                                                    "row": 70,
                                                    "column": 72
                                                  },
                                                  "text": "mx_uint"
                                                },
                                                {
                                                  "type": "argument_list",
                                                  "start": {
                                                    "row": 70,
                                                    "column": 72
                                                  },
                                                  "end": {
                                                    "row": 70,
                                                    "column": 84
                                                  },
                                                  "text": "(len(ckeys))",
                                                  "children": [
                                                    {
                                                      "type": "(",
                                                      "start": {
                                                        "row": 70,
                                                        "column": 72
                                                      },
                                                      "end": {
                                                        "row": 70,
                                                        "column": 73
                                                      },
                                                      "text": "("
                                                    },
                                                    {
                                                      "type": "call",
                                                      "start": {
                                                        "row": 70,
                                                        "column": 73
                                                      },
                                                      "end": {
                                                        "row": 70,
                                                        "column": 83
                                                      },
                                                      "text": "len(ckeys)",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 70,
                                                            "column": 73
                                                          },
                                                          "end": {
                                                            "row": 70,
                                                            "column": 76
                                                          },
                                                          "text": "len"
                                                        },
                                                        {
                                                          "type": "argument_list",
                                                          "start": {
                                                            "row": 70,
                                                            "column": 76
                                                          },
                                                          "end": {
                                                            "row": 70,
                                                            "column": 83
                                                          },
                                                          "text": "(ckeys)",
                                                          "children": [
                                                            {
                                                              "type": "(",
                                                              "start": {
                                                                "row": 70,
                                                                "column": 76
                                                              },
                                                              "end": {
                                                                "row": 70,
                                                                "column": 77
                                                              },
                                                              "text": "("
                                                            },
                                                            {
                                                              "type": "identifier",
                                                              "start": {
                                                                "row": 70,
                                                                "column": 77
                                                              },
                                                              "end": {
                                                                "row": 70,
                                                                "column": 82
                                                              },
                                                              "text": "ckeys"
                                                            },
                                                            {
                                                              "type": ")",
                                                              "start": {
                                                                "row": 70,
                                                                "column": 82
                                                              },
                                                              "end": {
                                                                "row": 70,
                                                                "column": 83
                                                              },
                                                              "text": ")"
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ")",
                                                      "start": {
                                                        "row": 70,
                                                        "column": 83
                                                      },
                                                      "end": {
                                                        "row": 70,
                                                        "column": 84
                                                      },
                                                      "text": ")"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ",",
                                              "start": {
                                                "row": 70,
                                                "column": 84
                                              },
                                              "end": {
                                                "row": 70,
                                                "column": 85
                                              },
                                              "text": ","
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 70,
                                                "column": 86
                                              },
                                              "end": {
                                                "row": 70,
                                                "column": 91
                                              },
                                              "text": "ckeys"
                                            },
                                            {
                                              "type": ",",
                                              "start": {
                                                "row": 70,
                                                "column": 91
                                              },
                                              "end": {
                                                "row": 70,
                                                "column": 92
                                              },
                                              "text": ","
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 71,
                                                "column": 52
                                              },
                                              "end": {
                                                "row": 71,
                                                "column": 57
                                              },
                                              "text": "cvals"
                                            },
                                            {
                                              "type": ",",
                                              "start": {
                                                "row": 71,
                                                "column": 57
                                              },
                                              "end": {
                                                "row": 71,
                                                "column": 58
                                              },
                                              "text": ","
                                            },
                                            {
                                              "type": "call",
                                              "start": {
                                                "row": 71,
                                                "column": 59
                                              },
                                              "end": {
                                                "row": 71,
                                                "column": 81
                                              },
                                              "text": "ctypes.c_int(priority)",
                                              "children": [
                                                {
                                                  "type": "attribute",
                                                  "start": {
                                                    "row": 71,
                                                    "column": 59
                                                  },
                                                  "end": {
                                                    "row": 71,
                                                    "column": 71
                                                  },
                                                  "text": "ctypes.c_int",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 71,
                                                        "column": 59
                                                      },
                                                      "end": {
                                                        "row": 71,
                                                        "column": 65
                                                      },
                                                      "text": "ctypes"
                                                    },
                                                    {
                                                      "type": ".",
                                                      "start": {
                                                        "row": 71,
                                                        "column": 65
                                                      },
                                                      "end": {
                                                        "row": 71,
                                                        "column": 66
                                                      },
                                                      "text": "."
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 71,
                                                        "column": 66
                                                      },
                                                      "end": {
                                                        "row": 71,
                                                        "column": 71
                                                      },
                                                      "text": "c_int"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "argument_list",
                                                  "start": {
                                                    "row": 71,
                                                    "column": 71
                                                  },
                                                  "end": {
                                                    "row": 71,
                                                    "column": 81
                                                  },
                                                  "text": "(priority)",
                                                  "children": [
                                                    {
                                                      "type": "(",
                                                      "start": {
                                                        "row": 71,
                                                        "column": 71
                                                      },
                                                      "end": {
                                                        "row": 71,
                                                        "column": 72
                                                      },
                                                      "text": "("
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 71,
                                                        "column": 72
                                                      },
                                                      "end": {
                                                        "row": 71,
                                                        "column": 80
                                                      },
                                                      "text": "priority"
                                                    },
                                                    {
                                                      "type": ")",
                                                      "start": {
                                                        "row": 71,
                                                        "column": 80
                                                      },
                                                      "end": {
                                                        "row": 71,
                                                        "column": 81
                                                      },
                                                      "text": ")"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ",",
                                              "start": {
                                                "row": 71,
                                                "column": 81
                                              },
                                              "end": {
                                                "row": 71,
                                                "column": 82
                                              },
                                              "text": ","
                                            },
                                            {
                                              "type": "call",
                                              "start": {
                                                "row": 72,
                                                "column": 52
                                              },
                                              "end": {
                                                "row": 72,
                                                "column": 80
                                              },
                                              "text": "ctypes.c_bool(ignore_sparse)",
                                              "children": [
                                                {
                                                  "type": "attribute",
                                                  "start": {
                                                    "row": 72,
                                                    "column": 52
                                                  },
                                                  "end": {
                                                    "row": 72,
                                                    "column": 65
                                                  },
                                                  "text": "ctypes.c_bool",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 72,
                                                        "column": 52
                                                      },
                                                      "end": {
                                                        "row": 72,
                                                        "column": 58
                                                      },
                                                      "text": "ctypes"
                                                    },
                                                    {
                                                      "type": ".",
                                                      "start": {
                                                        "row": 72,
                                                        "column": 58
                                                      },
                                                      "end": {
                                                        "row": 72,
                                                        "column": 59
                                                      },
                                                      "text": "."
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 72,
                                                        "column": 59
                                                      },
                                                      "end": {
                                                        "row": 72,
                                                        "column": 65
                                                      },
                                                      "text": "c_bool"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "argument_list",
                                                  "start": {
                                                    "row": 72,
                                                    "column": 65
                                                  },
                                                  "end": {
                                                    "row": 72,
                                                    "column": 80
                                                  },
                                                  "text": "(ignore_sparse)",
                                                  "children": [
                                                    {
                                                      "type": "(",
                                                      "start": {
                                                        "row": 72,
                                                        "column": 65
                                                      },
                                                      "end": {
                                                        "row": 72,
                                                        "column": 66
                                                      },
                                                      "text": "("
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 72,
                                                        "column": 66
                                                      },
                                                      "end": {
                                                        "row": 72,
                                                        "column": 79
                                                      },
                                                      "text": "ignore_sparse"
                                                    },
                                                    {
                                                      "type": ")",
                                                      "start": {
                                                        "row": 72,
                                                        "column": 79
                                                      },
                                                      "end": {
                                                        "row": 72,
                                                        "column": 80
                                                      },
                                                      "text": ")"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 72,
                                                "column": 80
                                              },
                                              "end": {
                                                "row": 72,
                                                "column": 81
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 72,
                                        "column": 81
                                      },
                                      "end": {
                                        "row": 72,
                                        "column": 82
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}