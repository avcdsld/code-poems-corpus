{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 31,
    "column": 63
  },
  "text": "def set_value(self, label, value, takeable=False):\n        \"\"\"\n        Quickly set single value at passed label. If label is not contained, a\n        new object is created with the label placed at the end of the result\n        index\n\n        .. deprecated:: 0.21.0\n\n        Please use .at[] or .iat[] accessors.\n\n        Parameters\n        ----------\n        label : object\n            Partial indexing with MultiIndex not allowed\n        value : object\n            Scalar value\n        takeable : interpret the index as indexers, default False\n\n        Notes\n        -----\n        This method *always* returns a new object. It is not particularly\n        efficient but is provided for API compatibility with Series\n\n        Returns\n        -------\n        series : SparseSeries\n        \"\"\"\n        warnings.warn(\"set_value is deprecated and will be removed \"\n                      \"in a future release. Please use \"\n                      \".at[] or .iat[] accessors instead\", FutureWarning,\n                      stacklevel=2)\n        return self._set_value(label, value, takeable=takeable)",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 31,
        "column": 63
      },
      "text": "def set_value(self, label, value, takeable=False):\n        \"\"\"\n        Quickly set single value at passed label. If label is not contained, a\n        new object is created with the label placed at the end of the result\n        index\n\n        .. deprecated:: 0.21.0\n\n        Please use .at[] or .iat[] accessors.\n\n        Parameters\n        ----------\n        label : object\n            Partial indexing with MultiIndex not allowed\n        value : object\n            Scalar value\n        takeable : interpret the index as indexers, default False\n\n        Notes\n        -----\n        This method *always* returns a new object. It is not particularly\n        efficient but is provided for API compatibility with Series\n\n        Returns\n        -------\n        series : SparseSeries\n        \"\"\"\n        warnings.warn(\"set_value is deprecated and will be removed \"\n                      \"in a future release. Please use \"\n                      \".at[] or .iat[] accessors instead\", FutureWarning,\n                      stacklevel=2)\n        return self._set_value(label, value, takeable=takeable)",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 13
          },
          "text": "set_value"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 13
          },
          "end": {
            "row": 0,
            "column": 49
          },
          "text": "(self, label, value, takeable=False)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 13
              },
              "end": {
                "row": 0,
                "column": 14
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 14
              },
              "end": {
                "row": 0,
                "column": 18
              },
              "text": "self"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 18
              },
              "end": {
                "row": 0,
                "column": 19
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 20
              },
              "end": {
                "row": 0,
                "column": 25
              },
              "text": "label"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 25
              },
              "end": {
                "row": 0,
                "column": 26
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 27
              },
              "end": {
                "row": 0,
                "column": 32
              },
              "text": "value"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 32
              },
              "end": {
                "row": 0,
                "column": 33
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 0,
                "column": 34
              },
              "end": {
                "row": 0,
                "column": 48
              },
              "text": "takeable=False",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 34
                  },
                  "end": {
                    "row": 0,
                    "column": 42
                  },
                  "text": "takeable"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 0,
                    "column": 42
                  },
                  "end": {
                    "row": 0,
                    "column": 43
                  },
                  "text": "="
                },
                {
                  "type": "false",
                  "start": {
                    "row": 0,
                    "column": 43
                  },
                  "end": {
                    "row": 0,
                    "column": 48
                  },
                  "text": "False"
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 48
              },
              "end": {
                "row": 0,
                "column": 49
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 49
          },
          "end": {
            "row": 0,
            "column": 50
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 8
          },
          "end": {
            "row": 31,
            "column": 63
          },
          "text": "\"\"\"\n        Quickly set single value at passed label. If label is not contained, a\n        new object is created with the label placed at the end of the result\n        index\n\n        .. deprecated:: 0.21.0\n\n        Please use .at[] or .iat[] accessors.\n\n        Parameters\n        ----------\n        label : object\n            Partial indexing with MultiIndex not allowed\n        value : object\n            Scalar value\n        takeable : interpret the index as indexers, default False\n\n        Notes\n        -----\n        This method *always* returns a new object. It is not particularly\n        efficient but is provided for API compatibility with Series\n\n        Returns\n        -------\n        series : SparseSeries\n        \"\"\"\n        warnings.warn(\"set_value is deprecated and will be removed \"\n                      \"in a future release. Please use \"\n                      \".at[] or .iat[] accessors instead\", FutureWarning,\n                      stacklevel=2)\n        return self._set_value(label, value, takeable=takeable)",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 8
              },
              "end": {
                "row": 26,
                "column": 11
              },
              "text": "\"\"\"\n        Quickly set single value at passed label. If label is not contained, a\n        new object is created with the label placed at the end of the result\n        index\n\n        .. deprecated:: 0.21.0\n\n        Please use .at[] or .iat[] accessors.\n\n        Parameters\n        ----------\n        label : object\n            Partial indexing with MultiIndex not allowed\n        value : object\n            Scalar value\n        takeable : interpret the index as indexers, default False\n\n        Notes\n        -----\n        This method *always* returns a new object. It is not particularly\n        efficient but is provided for API compatibility with Series\n\n        Returns\n        -------\n        series : SparseSeries\n        \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 8
                  },
                  "end": {
                    "row": 26,
                    "column": 11
                  },
                  "text": "\"\"\"\n        Quickly set single value at passed label. If label is not contained, a\n        new object is created with the label placed at the end of the result\n        index\n\n        .. deprecated:: 0.21.0\n\n        Please use .at[] or .iat[] accessors.\n\n        Parameters\n        ----------\n        label : object\n            Partial indexing with MultiIndex not allowed\n        value : object\n            Scalar value\n        takeable : interpret the index as indexers, default False\n\n        Notes\n        -----\n        This method *always* returns a new object. It is not particularly\n        efficient but is provided for API compatibility with Series\n\n        Returns\n        -------\n        series : SparseSeries\n        \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 8
                      },
                      "end": {
                        "row": 1,
                        "column": 11
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 11
                      },
                      "end": {
                        "row": 26,
                        "column": 8
                      },
                      "text": "\n        Quickly set single value at passed label. If label is not contained, a\n        new object is created with the label placed at the end of the result\n        index\n\n        .. deprecated:: 0.21.0\n\n        Please use .at[] or .iat[] accessors.\n\n        Parameters\n        ----------\n        label : object\n            Partial indexing with MultiIndex not allowed\n        value : object\n            Scalar value\n        takeable : interpret the index as indexers, default False\n\n        Notes\n        -----\n        This method *always* returns a new object. It is not particularly\n        efficient but is provided for API compatibility with Series\n\n        Returns\n        -------\n        series : SparseSeries\n        "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 26,
                        "column": 8
                      },
                      "end": {
                        "row": 26,
                        "column": 11
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 27,
                "column": 8
              },
              "end": {
                "row": 30,
                "column": 35
              },
              "text": "warnings.warn(\"set_value is deprecated and will be removed \"\n                      \"in a future release. Please use \"\n                      \".at[] or .iat[] accessors instead\", FutureWarning,\n                      stacklevel=2)",
              "children": [
                {
                  "type": "call",
                  "start": {
                    "row": 27,
                    "column": 8
                  },
                  "end": {
                    "row": 30,
                    "column": 35
                  },
                  "text": "warnings.warn(\"set_value is deprecated and will be removed \"\n                      \"in a future release. Please use \"\n                      \".at[] or .iat[] accessors instead\", FutureWarning,\n                      stacklevel=2)",
                  "children": [
                    {
                      "type": "attribute",
                      "start": {
                        "row": 27,
                        "column": 8
                      },
                      "end": {
                        "row": 27,
                        "column": 21
                      },
                      "text": "warnings.warn",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 27,
                            "column": 8
                          },
                          "end": {
                            "row": 27,
                            "column": 16
                          },
                          "text": "warnings"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 27,
                            "column": 16
                          },
                          "end": {
                            "row": 27,
                            "column": 17
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 27,
                            "column": 17
                          },
                          "end": {
                            "row": 27,
                            "column": 21
                          },
                          "text": "warn"
                        }
                      ]
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 27,
                        "column": 21
                      },
                      "end": {
                        "row": 30,
                        "column": 35
                      },
                      "text": "(\"set_value is deprecated and will be removed \"\n                      \"in a future release. Please use \"\n                      \".at[] or .iat[] accessors instead\", FutureWarning,\n                      stacklevel=2)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 27,
                            "column": 21
                          },
                          "end": {
                            "row": 27,
                            "column": 22
                          },
                          "text": "("
                        },
                        {
                          "type": "concatenated_string",
                          "start": {
                            "row": 27,
                            "column": 22
                          },
                          "end": {
                            "row": 29,
                            "column": 57
                          },
                          "text": "\"set_value is deprecated and will be removed \"\n                      \"in a future release. Please use \"\n                      \".at[] or .iat[] accessors instead\"",
                          "children": [
                            {
                              "type": "string",
                              "start": {
                                "row": 27,
                                "column": 22
                              },
                              "end": {
                                "row": 27,
                                "column": 68
                              },
                              "text": "\"set_value is deprecated and will be removed \"",
                              "children": [
                                {
                                  "type": "string_start",
                                  "start": {
                                    "row": 27,
                                    "column": 22
                                  },
                                  "end": {
                                    "row": 27,
                                    "column": 23
                                  },
                                  "text": "\""
                                },
                                {
                                  "type": "string_content",
                                  "start": {
                                    "row": 27,
                                    "column": 23
                                  },
                                  "end": {
                                    "row": 27,
                                    "column": 67
                                  },
                                  "text": "set_value is deprecated and will be removed "
                                },
                                {
                                  "type": "string_end",
                                  "start": {
                                    "row": 27,
                                    "column": 67
                                  },
                                  "end": {
                                    "row": 27,
                                    "column": 68
                                  },
                                  "text": "\""
                                }
                              ]
                            },
                            {
                              "type": "string",
                              "start": {
                                "row": 28,
                                "column": 22
                              },
                              "end": {
                                "row": 28,
                                "column": 56
                              },
                              "text": "\"in a future release. Please use \"",
                              "children": [
                                {
                                  "type": "string_start",
                                  "start": {
                                    "row": 28,
                                    "column": 22
                                  },
                                  "end": {
                                    "row": 28,
                                    "column": 23
                                  },
                                  "text": "\""
                                },
                                {
                                  "type": "string_content",
                                  "start": {
                                    "row": 28,
                                    "column": 23
                                  },
                                  "end": {
                                    "row": 28,
                                    "column": 55
                                  },
                                  "text": "in a future release. Please use "
                                },
                                {
                                  "type": "string_end",
                                  "start": {
                                    "row": 28,
                                    "column": 55
                                  },
                                  "end": {
                                    "row": 28,
                                    "column": 56
                                  },
                                  "text": "\""
                                }
                              ]
                            },
                            {
                              "type": "string",
                              "start": {
                                "row": 29,
                                "column": 22
                              },
                              "end": {
                                "row": 29,
                                "column": 57
                              },
                              "text": "\".at[] or .iat[] accessors instead\"",
                              "children": [
                                {
                                  "type": "string_start",
                                  "start": {
                                    "row": 29,
                                    "column": 22
                                  },
                                  "end": {
                                    "row": 29,
                                    "column": 23
                                  },
                                  "text": "\""
                                },
                                {
                                  "type": "string_content",
                                  "start": {
                                    "row": 29,
                                    "column": 23
                                  },
                                  "end": {
                                    "row": 29,
                                    "column": 56
                                  },
                                  "text": ".at[] or .iat[] accessors instead"
                                },
                                {
                                  "type": "string_end",
                                  "start": {
                                    "row": 29,
                                    "column": 56
                                  },
                                  "end": {
                                    "row": 29,
                                    "column": 57
                                  },
                                  "text": "\""
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 29,
                            "column": 57
                          },
                          "end": {
                            "row": 29,
                            "column": 58
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 29,
                            "column": 59
                          },
                          "end": {
                            "row": 29,
                            "column": 72
                          },
                          "text": "FutureWarning"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 29,
                            "column": 72
                          },
                          "end": {
                            "row": 29,
                            "column": 73
                          },
                          "text": ","
                        },
                        {
                          "type": "keyword_argument",
                          "start": {
                            "row": 30,
                            "column": 22
                          },
                          "end": {
                            "row": 30,
                            "column": 34
                          },
                          "text": "stacklevel=2",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 30,
                                "column": 22
                              },
                              "end": {
                                "row": 30,
                                "column": 32
                              },
                              "text": "stacklevel"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 30,
                                "column": 32
                              },
                              "end": {
                                "row": 30,
                                "column": 33
                              },
                              "text": "="
                            },
                            {
                              "type": "integer",
                              "start": {
                                "row": 30,
                                "column": 33
                              },
                              "end": {
                                "row": 30,
                                "column": 34
                              },
                              "text": "2"
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 30,
                            "column": 34
                          },
                          "end": {
                            "row": 30,
                            "column": 35
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 31,
                "column": 8
              },
              "end": {
                "row": 31,
                "column": 63
              },
              "text": "return self._set_value(label, value, takeable=takeable)",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 31,
                    "column": 8
                  },
                  "end": {
                    "row": 31,
                    "column": 14
                  },
                  "text": "return"
                },
                {
                  "type": "call",
                  "start": {
                    "row": 31,
                    "column": 15
                  },
                  "end": {
                    "row": 31,
                    "column": 63
                  },
                  "text": "self._set_value(label, value, takeable=takeable)",
                  "children": [
                    {
                      "type": "attribute",
                      "start": {
                        "row": 31,
                        "column": 15
                      },
                      "end": {
                        "row": 31,
                        "column": 30
                      },
                      "text": "self._set_value",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 31,
                            "column": 15
                          },
                          "end": {
                            "row": 31,
                            "column": 19
                          },
                          "text": "self"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 31,
                            "column": 19
                          },
                          "end": {
                            "row": 31,
                            "column": 20
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 31,
                            "column": 20
                          },
                          "end": {
                            "row": 31,
                            "column": 30
                          },
                          "text": "_set_value"
                        }
                      ]
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 31,
                        "column": 30
                      },
                      "end": {
                        "row": 31,
                        "column": 63
                      },
                      "text": "(label, value, takeable=takeable)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 31,
                            "column": 30
                          },
                          "end": {
                            "row": 31,
                            "column": 31
                          },
                          "text": "("
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 31,
                            "column": 31
                          },
                          "end": {
                            "row": 31,
                            "column": 36
                          },
                          "text": "label"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 31,
                            "column": 36
                          },
                          "end": {
                            "row": 31,
                            "column": 37
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 31,
                            "column": 38
                          },
                          "end": {
                            "row": 31,
                            "column": 43
                          },
                          "text": "value"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 31,
                            "column": 43
                          },
                          "end": {
                            "row": 31,
                            "column": 44
                          },
                          "text": ","
                        },
                        {
                          "type": "keyword_argument",
                          "start": {
                            "row": 31,
                            "column": 45
                          },
                          "end": {
                            "row": 31,
                            "column": 62
                          },
                          "text": "takeable=takeable",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 31,
                                "column": 45
                              },
                              "end": {
                                "row": 31,
                                "column": 53
                              },
                              "text": "takeable"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 31,
                                "column": 53
                              },
                              "end": {
                                "row": 31,
                                "column": 54
                              },
                              "text": "="
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 31,
                                "column": 54
                              },
                              "end": {
                                "row": 31,
                                "column": 62
                              },
                              "text": "takeable"
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 31,
                            "column": 62
                          },
                          "end": {
                            "row": 31,
                            "column": 63
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}