{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 52,
    "column": 17
  },
  "text": "def _get_interp_method(interp, sizes=()):\n    \"\"\"Get the interpolation method for resize functions.\n    The major purpose of this function is to wrap a random interp method selection\n    and a auto-estimation method.\n\n    Parameters\n    ----------\n    interp : int\n        interpolation method for all resizing operations\n\n        Possible values:\n        0: Nearest Neighbors Interpolation.\n        1: Bilinear interpolation.\n        2: Area-based (resampling using pixel area relation). It may be a\n        preferred method for image decimation, as it gives moire-free\n        results. But when the image is zoomed, it is similar to the Nearest\n        Neighbors method. (used by default).\n        3: Bicubic interpolation over 4x4 pixel neighborhood.\n        4: Lanczos interpolation over 8x8 pixel neighborhood.\n        9: Cubic for enlarge, area for shrink, bilinear for others\n        10: Random select from interpolation method metioned above.\n        Note:\n        When shrinking an image, it will generally look best with AREA-based\n        interpolation, whereas, when enlarging an image, it will generally look best\n        with Bicubic (slow) or Bilinear (faster but still looks OK).\n        More details can be found in the documentation of OpenCV, please refer to\n        http://docs.opencv.org/master/da/d54/group__imgproc__transform.html.\n    sizes : tuple of int\n        (old_height, old_width, new_height, new_width), if None provided, auto(9)\n        will return Area(2) anyway.\n\n    Returns\n    -------\n    int\n        interp method from 0 to 4\n    \"\"\"\n    if interp == 9:\n        if sizes:\n            assert len(sizes) == 4\n            oh, ow, nh, nw = sizes\n            if nh > oh and nw > ow:\n                return 2\n            elif nh < oh and nw < ow:\n                return 3\n            else:\n                return 1\n        else:\n            return 2\n    if interp == 10:\n        return random.randint(0, 4)\n    if interp not in (0, 1, 2, 3, 4):\n        raise ValueError('Unknown interp method %d' % interp)\n    return interp",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 52,
        "column": 17
      },
      "text": "def _get_interp_method(interp, sizes=()):\n    \"\"\"Get the interpolation method for resize functions.\n    The major purpose of this function is to wrap a random interp method selection\n    and a auto-estimation method.\n\n    Parameters\n    ----------\n    interp : int\n        interpolation method for all resizing operations\n\n        Possible values:\n        0: Nearest Neighbors Interpolation.\n        1: Bilinear interpolation.\n        2: Area-based (resampling using pixel area relation). It may be a\n        preferred method for image decimation, as it gives moire-free\n        results. But when the image is zoomed, it is similar to the Nearest\n        Neighbors method. (used by default).\n        3: Bicubic interpolation over 4x4 pixel neighborhood.\n        4: Lanczos interpolation over 8x8 pixel neighborhood.\n        9: Cubic for enlarge, area for shrink, bilinear for others\n        10: Random select from interpolation method metioned above.\n        Note:\n        When shrinking an image, it will generally look best with AREA-based\n        interpolation, whereas, when enlarging an image, it will generally look best\n        with Bicubic (slow) or Bilinear (faster but still looks OK).\n        More details can be found in the documentation of OpenCV, please refer to\n        http://docs.opencv.org/master/da/d54/group__imgproc__transform.html.\n    sizes : tuple of int\n        (old_height, old_width, new_height, new_width), if None provided, auto(9)\n        will return Area(2) anyway.\n\n    Returns\n    -------\n    int\n        interp method from 0 to 4\n    \"\"\"\n    if interp == 9:\n        if sizes:\n            assert len(sizes) == 4\n            oh, ow, nh, nw = sizes\n            if nh > oh and nw > ow:\n                return 2\n            elif nh < oh and nw < ow:\n                return 3\n            else:\n                return 1\n        else:\n            return 2\n    if interp == 10:\n        return random.randint(0, 4)\n    if interp not in (0, 1, 2, 3, 4):\n        raise ValueError('Unknown interp method %d' % interp)\n    return interp",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 22
          },
          "text": "_get_interp_method"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 22
          },
          "end": {
            "row": 0,
            "column": 40
          },
          "text": "(interp, sizes=())",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 22
              },
              "end": {
                "row": 0,
                "column": 23
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 23
              },
              "end": {
                "row": 0,
                "column": 29
              },
              "text": "interp"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 29
              },
              "end": {
                "row": 0,
                "column": 30
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 0,
                "column": 31
              },
              "end": {
                "row": 0,
                "column": 39
              },
              "text": "sizes=()",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 31
                  },
                  "end": {
                    "row": 0,
                    "column": 36
                  },
                  "text": "sizes"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 0,
                    "column": 36
                  },
                  "end": {
                    "row": 0,
                    "column": 37
                  },
                  "text": "="
                },
                {
                  "type": "tuple",
                  "start": {
                    "row": 0,
                    "column": 37
                  },
                  "end": {
                    "row": 0,
                    "column": 39
                  },
                  "text": "()",
                  "children": [
                    {
                      "type": "(",
                      "start": {
                        "row": 0,
                        "column": 37
                      },
                      "end": {
                        "row": 0,
                        "column": 38
                      },
                      "text": "("
                    },
                    {
                      "type": ")",
                      "start": {
                        "row": 0,
                        "column": 38
                      },
                      "end": {
                        "row": 0,
                        "column": 39
                      },
                      "text": ")"
                    }
                  ]
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 39
              },
              "end": {
                "row": 0,
                "column": 40
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 40
          },
          "end": {
            "row": 0,
            "column": 41
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 4
          },
          "end": {
            "row": 52,
            "column": 17
          },
          "text": "\"\"\"Get the interpolation method for resize functions.\n    The major purpose of this function is to wrap a random interp method selection\n    and a auto-estimation method.\n\n    Parameters\n    ----------\n    interp : int\n        interpolation method for all resizing operations\n\n        Possible values:\n        0: Nearest Neighbors Interpolation.\n        1: Bilinear interpolation.\n        2: Area-based (resampling using pixel area relation). It may be a\n        preferred method for image decimation, as it gives moire-free\n        results. But when the image is zoomed, it is similar to the Nearest\n        Neighbors method. (used by default).\n        3: Bicubic interpolation over 4x4 pixel neighborhood.\n        4: Lanczos interpolation over 8x8 pixel neighborhood.\n        9: Cubic for enlarge, area for shrink, bilinear for others\n        10: Random select from interpolation method metioned above.\n        Note:\n        When shrinking an image, it will generally look best with AREA-based\n        interpolation, whereas, when enlarging an image, it will generally look best\n        with Bicubic (slow) or Bilinear (faster but still looks OK).\n        More details can be found in the documentation of OpenCV, please refer to\n        http://docs.opencv.org/master/da/d54/group__imgproc__transform.html.\n    sizes : tuple of int\n        (old_height, old_width, new_height, new_width), if None provided, auto(9)\n        will return Area(2) anyway.\n\n    Returns\n    -------\n    int\n        interp method from 0 to 4\n    \"\"\"\n    if interp == 9:\n        if sizes:\n            assert len(sizes) == 4\n            oh, ow, nh, nw = sizes\n            if nh > oh and nw > ow:\n                return 2\n            elif nh < oh and nw < ow:\n                return 3\n            else:\n                return 1\n        else:\n            return 2\n    if interp == 10:\n        return random.randint(0, 4)\n    if interp not in (0, 1, 2, 3, 4):\n        raise ValueError('Unknown interp method %d' % interp)\n    return interp",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 4
              },
              "end": {
                "row": 35,
                "column": 7
              },
              "text": "\"\"\"Get the interpolation method for resize functions.\n    The major purpose of this function is to wrap a random interp method selection\n    and a auto-estimation method.\n\n    Parameters\n    ----------\n    interp : int\n        interpolation method for all resizing operations\n\n        Possible values:\n        0: Nearest Neighbors Interpolation.\n        1: Bilinear interpolation.\n        2: Area-based (resampling using pixel area relation). It may be a\n        preferred method for image decimation, as it gives moire-free\n        results. But when the image is zoomed, it is similar to the Nearest\n        Neighbors method. (used by default).\n        3: Bicubic interpolation over 4x4 pixel neighborhood.\n        4: Lanczos interpolation over 8x8 pixel neighborhood.\n        9: Cubic for enlarge, area for shrink, bilinear for others\n        10: Random select from interpolation method metioned above.\n        Note:\n        When shrinking an image, it will generally look best with AREA-based\n        interpolation, whereas, when enlarging an image, it will generally look best\n        with Bicubic (slow) or Bilinear (faster but still looks OK).\n        More details can be found in the documentation of OpenCV, please refer to\n        http://docs.opencv.org/master/da/d54/group__imgproc__transform.html.\n    sizes : tuple of int\n        (old_height, old_width, new_height, new_width), if None provided, auto(9)\n        will return Area(2) anyway.\n\n    Returns\n    -------\n    int\n        interp method from 0 to 4\n    \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 4
                  },
                  "end": {
                    "row": 35,
                    "column": 7
                  },
                  "text": "\"\"\"Get the interpolation method for resize functions.\n    The major purpose of this function is to wrap a random interp method selection\n    and a auto-estimation method.\n\n    Parameters\n    ----------\n    interp : int\n        interpolation method for all resizing operations\n\n        Possible values:\n        0: Nearest Neighbors Interpolation.\n        1: Bilinear interpolation.\n        2: Area-based (resampling using pixel area relation). It may be a\n        preferred method for image decimation, as it gives moire-free\n        results. But when the image is zoomed, it is similar to the Nearest\n        Neighbors method. (used by default).\n        3: Bicubic interpolation over 4x4 pixel neighborhood.\n        4: Lanczos interpolation over 8x8 pixel neighborhood.\n        9: Cubic for enlarge, area for shrink, bilinear for others\n        10: Random select from interpolation method metioned above.\n        Note:\n        When shrinking an image, it will generally look best with AREA-based\n        interpolation, whereas, when enlarging an image, it will generally look best\n        with Bicubic (slow) or Bilinear (faster but still looks OK).\n        More details can be found in the documentation of OpenCV, please refer to\n        http://docs.opencv.org/master/da/d54/group__imgproc__transform.html.\n    sizes : tuple of int\n        (old_height, old_width, new_height, new_width), if None provided, auto(9)\n        will return Area(2) anyway.\n\n    Returns\n    -------\n    int\n        interp method from 0 to 4\n    \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 4
                      },
                      "end": {
                        "row": 1,
                        "column": 7
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 7
                      },
                      "end": {
                        "row": 35,
                        "column": 4
                      },
                      "text": "Get the interpolation method for resize functions.\n    The major purpose of this function is to wrap a random interp method selection\n    and a auto-estimation method.\n\n    Parameters\n    ----------\n    interp : int\n        interpolation method for all resizing operations\n\n        Possible values:\n        0: Nearest Neighbors Interpolation.\n        1: Bilinear interpolation.\n        2: Area-based (resampling using pixel area relation). It may be a\n        preferred method for image decimation, as it gives moire-free\n        results. But when the image is zoomed, it is similar to the Nearest\n        Neighbors method. (used by default).\n        3: Bicubic interpolation over 4x4 pixel neighborhood.\n        4: Lanczos interpolation over 8x8 pixel neighborhood.\n        9: Cubic for enlarge, area for shrink, bilinear for others\n        10: Random select from interpolation method metioned above.\n        Note:\n        When shrinking an image, it will generally look best with AREA-based\n        interpolation, whereas, when enlarging an image, it will generally look best\n        with Bicubic (slow) or Bilinear (faster but still looks OK).\n        More details can be found in the documentation of OpenCV, please refer to\n        http://docs.opencv.org/master/da/d54/group__imgproc__transform.html.\n    sizes : tuple of int\n        (old_height, old_width, new_height, new_width), if None provided, auto(9)\n        will return Area(2) anyway.\n\n    Returns\n    -------\n    int\n        interp method from 0 to 4\n    "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 35,
                        "column": 4
                      },
                      "end": {
                        "row": 35,
                        "column": 7
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 36,
                "column": 4
              },
              "end": {
                "row": 47,
                "column": 20
              },
              "text": "if interp == 9:\n        if sizes:\n            assert len(sizes) == 4\n            oh, ow, nh, nw = sizes\n            if nh > oh and nw > ow:\n                return 2\n            elif nh < oh and nw < ow:\n                return 3\n            else:\n                return 1\n        else:\n            return 2",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 36,
                    "column": 4
                  },
                  "end": {
                    "row": 36,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "comparison_operator",
                  "start": {
                    "row": 36,
                    "column": 7
                  },
                  "end": {
                    "row": 36,
                    "column": 18
                  },
                  "text": "interp == 9",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 36,
                        "column": 7
                      },
                      "end": {
                        "row": 36,
                        "column": 13
                      },
                      "text": "interp"
                    },
                    {
                      "type": "==",
                      "start": {
                        "row": 36,
                        "column": 14
                      },
                      "end": {
                        "row": 36,
                        "column": 16
                      },
                      "text": "=="
                    },
                    {
                      "type": "integer",
                      "start": {
                        "row": 36,
                        "column": 17
                      },
                      "end": {
                        "row": 36,
                        "column": 18
                      },
                      "text": "9"
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 36,
                    "column": 18
                  },
                  "end": {
                    "row": 36,
                    "column": 19
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 37,
                    "column": 8
                  },
                  "end": {
                    "row": 47,
                    "column": 20
                  },
                  "text": "if sizes:\n            assert len(sizes) == 4\n            oh, ow, nh, nw = sizes\n            if nh > oh and nw > ow:\n                return 2\n            elif nh < oh and nw < ow:\n                return 3\n            else:\n                return 1\n        else:\n            return 2",
                  "children": [
                    {
                      "type": "if_statement",
                      "start": {
                        "row": 37,
                        "column": 8
                      },
                      "end": {
                        "row": 47,
                        "column": 20
                      },
                      "text": "if sizes:\n            assert len(sizes) == 4\n            oh, ow, nh, nw = sizes\n            if nh > oh and nw > ow:\n                return 2\n            elif nh < oh and nw < ow:\n                return 3\n            else:\n                return 1\n        else:\n            return 2",
                      "children": [
                        {
                          "type": "if",
                          "start": {
                            "row": 37,
                            "column": 8
                          },
                          "end": {
                            "row": 37,
                            "column": 10
                          },
                          "text": "if"
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 37,
                            "column": 11
                          },
                          "end": {
                            "row": 37,
                            "column": 16
                          },
                          "text": "sizes"
                        },
                        {
                          "type": ":",
                          "start": {
                            "row": 37,
                            "column": 16
                          },
                          "end": {
                            "row": 37,
                            "column": 17
                          },
                          "text": ":"
                        },
                        {
                          "type": "block",
                          "start": {
                            "row": 38,
                            "column": 12
                          },
                          "end": {
                            "row": 45,
                            "column": 24
                          },
                          "text": "assert len(sizes) == 4\n            oh, ow, nh, nw = sizes\n            if nh > oh and nw > ow:\n                return 2\n            elif nh < oh and nw < ow:\n                return 3\n            else:\n                return 1",
                          "children": [
                            {
                              "type": "assert_statement",
                              "start": {
                                "row": 38,
                                "column": 12
                              },
                              "end": {
                                "row": 38,
                                "column": 34
                              },
                              "text": "assert len(sizes) == 4",
                              "children": [
                                {
                                  "type": "assert",
                                  "start": {
                                    "row": 38,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 38,
                                    "column": 18
                                  },
                                  "text": "assert"
                                },
                                {
                                  "type": "comparison_operator",
                                  "start": {
                                    "row": 38,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 38,
                                    "column": 34
                                  },
                                  "text": "len(sizes) == 4",
                                  "children": [
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 38,
                                        "column": 19
                                      },
                                      "end": {
                                        "row": 38,
                                        "column": 29
                                      },
                                      "text": "len(sizes)",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 38,
                                            "column": 19
                                          },
                                          "end": {
                                            "row": 38,
                                            "column": 22
                                          },
                                          "text": "len"
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 38,
                                            "column": 22
                                          },
                                          "end": {
                                            "row": 38,
                                            "column": 29
                                          },
                                          "text": "(sizes)",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 38,
                                                "column": 22
                                              },
                                              "end": {
                                                "row": 38,
                                                "column": 23
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 38,
                                                "column": 23
                                              },
                                              "end": {
                                                "row": 38,
                                                "column": 28
                                              },
                                              "text": "sizes"
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 38,
                                                "column": 28
                                              },
                                              "end": {
                                                "row": 38,
                                                "column": 29
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "==",
                                      "start": {
                                        "row": 38,
                                        "column": 30
                                      },
                                      "end": {
                                        "row": 38,
                                        "column": 32
                                      },
                                      "text": "=="
                                    },
                                    {
                                      "type": "integer",
                                      "start": {
                                        "row": 38,
                                        "column": 33
                                      },
                                      "end": {
                                        "row": 38,
                                        "column": 34
                                      },
                                      "text": "4"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start": {
                                "row": 39,
                                "column": 12
                              },
                              "end": {
                                "row": 39,
                                "column": 34
                              },
                              "text": "oh, ow, nh, nw = sizes",
                              "children": [
                                {
                                  "type": "assignment",
                                  "start": {
                                    "row": 39,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 39,
                                    "column": 34
                                  },
                                  "text": "oh, ow, nh, nw = sizes",
                                  "children": [
                                    {
                                      "type": "pattern_list",
                                      "start": {
                                        "row": 39,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 39,
                                        "column": 26
                                      },
                                      "text": "oh, ow, nh, nw",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 39,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 39,
                                            "column": 14
                                          },
                                          "text": "oh"
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 39,
                                            "column": 14
                                          },
                                          "end": {
                                            "row": 39,
                                            "column": 15
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 39,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 39,
                                            "column": 18
                                          },
                                          "text": "ow"
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 39,
                                            "column": 18
                                          },
                                          "end": {
                                            "row": 39,
                                            "column": 19
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 39,
                                            "column": 20
                                          },
                                          "end": {
                                            "row": 39,
                                            "column": 22
                                          },
                                          "text": "nh"
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 39,
                                            "column": 22
                                          },
                                          "end": {
                                            "row": 39,
                                            "column": 23
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 39,
                                            "column": 24
                                          },
                                          "end": {
                                            "row": 39,
                                            "column": 26
                                          },
                                          "text": "nw"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "=",
                                      "start": {
                                        "row": 39,
                                        "column": 27
                                      },
                                      "end": {
                                        "row": 39,
                                        "column": 28
                                      },
                                      "text": "="
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 39,
                                        "column": 29
                                      },
                                      "end": {
                                        "row": 39,
                                        "column": 34
                                      },
                                      "text": "sizes"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "if_statement",
                              "start": {
                                "row": 40,
                                "column": 12
                              },
                              "end": {
                                "row": 45,
                                "column": 24
                              },
                              "text": "if nh > oh and nw > ow:\n                return 2\n            elif nh < oh and nw < ow:\n                return 3\n            else:\n                return 1",
                              "children": [
                                {
                                  "type": "if",
                                  "start": {
                                    "row": 40,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 40,
                                    "column": 14
                                  },
                                  "text": "if"
                                },
                                {
                                  "type": "boolean_operator",
                                  "start": {
                                    "row": 40,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 40,
                                    "column": 34
                                  },
                                  "text": "nh > oh and nw > ow",
                                  "children": [
                                    {
                                      "type": "comparison_operator",
                                      "start": {
                                        "row": 40,
                                        "column": 15
                                      },
                                      "end": {
                                        "row": 40,
                                        "column": 22
                                      },
                                      "text": "nh > oh",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 40,
                                            "column": 15
                                          },
                                          "end": {
                                            "row": 40,
                                            "column": 17
                                          },
                                          "text": "nh"
                                        },
                                        {
                                          "type": ">",
                                          "start": {
                                            "row": 40,
                                            "column": 18
                                          },
                                          "end": {
                                            "row": 40,
                                            "column": 19
                                          },
                                          "text": ">"
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 40,
                                            "column": 20
                                          },
                                          "end": {
                                            "row": 40,
                                            "column": 22
                                          },
                                          "text": "oh"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "and",
                                      "start": {
                                        "row": 40,
                                        "column": 23
                                      },
                                      "end": {
                                        "row": 40,
                                        "column": 26
                                      },
                                      "text": "and"
                                    },
                                    {
                                      "type": "comparison_operator",
                                      "start": {
                                        "row": 40,
                                        "column": 27
                                      },
                                      "end": {
                                        "row": 40,
                                        "column": 34
                                      },
                                      "text": "nw > ow",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 40,
                                            "column": 27
                                          },
                                          "end": {
                                            "row": 40,
                                            "column": 29
                                          },
                                          "text": "nw"
                                        },
                                        {
                                          "type": ">",
                                          "start": {
                                            "row": 40,
                                            "column": 30
                                          },
                                          "end": {
                                            "row": 40,
                                            "column": 31
                                          },
                                          "text": ">"
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 40,
                                            "column": 32
                                          },
                                          "end": {
                                            "row": 40,
                                            "column": 34
                                          },
                                          "text": "ow"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ":",
                                  "start": {
                                    "row": 40,
                                    "column": 34
                                  },
                                  "end": {
                                    "row": 40,
                                    "column": 35
                                  },
                                  "text": ":"
                                },
                                {
                                  "type": "block",
                                  "start": {
                                    "row": 41,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 41,
                                    "column": 24
                                  },
                                  "text": "return 2",
                                  "children": [
                                    {
                                      "type": "return_statement",
                                      "start": {
                                        "row": 41,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 41,
                                        "column": 24
                                      },
                                      "text": "return 2",
                                      "children": [
                                        {
                                          "type": "return",
                                          "start": {
                                            "row": 41,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 41,
                                            "column": 22
                                          },
                                          "text": "return"
                                        },
                                        {
                                          "type": "integer",
                                          "start": {
                                            "row": 41,
                                            "column": 23
                                          },
                                          "end": {
                                            "row": 41,
                                            "column": 24
                                          },
                                          "text": "2"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "elif_clause",
                                  "start": {
                                    "row": 42,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 43,
                                    "column": 24
                                  },
                                  "text": "elif nh < oh and nw < ow:\n                return 3",
                                  "children": [
                                    {
                                      "type": "elif",
                                      "start": {
                                        "row": 42,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 42,
                                        "column": 16
                                      },
                                      "text": "elif"
                                    },
                                    {
                                      "type": "boolean_operator",
                                      "start": {
                                        "row": 42,
                                        "column": 17
                                      },
                                      "end": {
                                        "row": 42,
                                        "column": 36
                                      },
                                      "text": "nh < oh and nw < ow",
                                      "children": [
                                        {
                                          "type": "comparison_operator",
                                          "start": {
                                            "row": 42,
                                            "column": 17
                                          },
                                          "end": {
                                            "row": 42,
                                            "column": 24
                                          },
                                          "text": "nh < oh",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 42,
                                                "column": 17
                                              },
                                              "end": {
                                                "row": 42,
                                                "column": 19
                                              },
                                              "text": "nh"
                                            },
                                            {
                                              "type": "<",
                                              "start": {
                                                "row": 42,
                                                "column": 20
                                              },
                                              "end": {
                                                "row": 42,
                                                "column": 21
                                              },
                                              "text": "<"
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 42,
                                                "column": 22
                                              },
                                              "end": {
                                                "row": 42,
                                                "column": 24
                                              },
                                              "text": "oh"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "and",
                                          "start": {
                                            "row": 42,
                                            "column": 25
                                          },
                                          "end": {
                                            "row": 42,
                                            "column": 28
                                          },
                                          "text": "and"
                                        },
                                        {
                                          "type": "comparison_operator",
                                          "start": {
                                            "row": 42,
                                            "column": 29
                                          },
                                          "end": {
                                            "row": 42,
                                            "column": 36
                                          },
                                          "text": "nw < ow",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 42,
                                                "column": 29
                                              },
                                              "end": {
                                                "row": 42,
                                                "column": 31
                                              },
                                              "text": "nw"
                                            },
                                            {
                                              "type": "<",
                                              "start": {
                                                "row": 42,
                                                "column": 32
                                              },
                                              "end": {
                                                "row": 42,
                                                "column": 33
                                              },
                                              "text": "<"
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 42,
                                                "column": 34
                                              },
                                              "end": {
                                                "row": 42,
                                                "column": 36
                                              },
                                              "text": "ow"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ":",
                                      "start": {
                                        "row": 42,
                                        "column": 36
                                      },
                                      "end": {
                                        "row": 42,
                                        "column": 37
                                      },
                                      "text": ":"
                                    },
                                    {
                                      "type": "block",
                                      "start": {
                                        "row": 43,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 43,
                                        "column": 24
                                      },
                                      "text": "return 3",
                                      "children": [
                                        {
                                          "type": "return_statement",
                                          "start": {
                                            "row": 43,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 43,
                                            "column": 24
                                          },
                                          "text": "return 3",
                                          "children": [
                                            {
                                              "type": "return",
                                              "start": {
                                                "row": 43,
                                                "column": 16
                                              },
                                              "end": {
                                                "row": 43,
                                                "column": 22
                                              },
                                              "text": "return"
                                            },
                                            {
                                              "type": "integer",
                                              "start": {
                                                "row": 43,
                                                "column": 23
                                              },
                                              "end": {
                                                "row": 43,
                                                "column": 24
                                              },
                                              "text": "3"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "else_clause",
                                  "start": {
                                    "row": 44,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 45,
                                    "column": 24
                                  },
                                  "text": "else:\n                return 1",
                                  "children": [
                                    {
                                      "type": "else",
                                      "start": {
                                        "row": 44,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 44,
                                        "column": 16
                                      },
                                      "text": "else"
                                    },
                                    {
                                      "type": ":",
                                      "start": {
                                        "row": 44,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 44,
                                        "column": 17
                                      },
                                      "text": ":"
                                    },
                                    {
                                      "type": "block",
                                      "start": {
                                        "row": 45,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 45,
                                        "column": 24
                                      },
                                      "text": "return 1",
                                      "children": [
                                        {
                                          "type": "return_statement",
                                          "start": {
                                            "row": 45,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 45,
                                            "column": 24
                                          },
                                          "text": "return 1",
                                          "children": [
                                            {
                                              "type": "return",
                                              "start": {
                                                "row": 45,
                                                "column": 16
                                              },
                                              "end": {
                                                "row": 45,
                                                "column": 22
                                              },
                                              "text": "return"
                                            },
                                            {
                                              "type": "integer",
                                              "start": {
                                                "row": 45,
                                                "column": 23
                                              },
                                              "end": {
                                                "row": 45,
                                                "column": 24
                                              },
                                              "text": "1"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "else_clause",
                          "start": {
                            "row": 46,
                            "column": 8
                          },
                          "end": {
                            "row": 47,
                            "column": 20
                          },
                          "text": "else:\n            return 2",
                          "children": [
                            {
                              "type": "else",
                              "start": {
                                "row": 46,
                                "column": 8
                              },
                              "end": {
                                "row": 46,
                                "column": 12
                              },
                              "text": "else"
                            },
                            {
                              "type": ":",
                              "start": {
                                "row": 46,
                                "column": 12
                              },
                              "end": {
                                "row": 46,
                                "column": 13
                              },
                              "text": ":"
                            },
                            {
                              "type": "block",
                              "start": {
                                "row": 47,
                                "column": 12
                              },
                              "end": {
                                "row": 47,
                                "column": 20
                              },
                              "text": "return 2",
                              "children": [
                                {
                                  "type": "return_statement",
                                  "start": {
                                    "row": 47,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 47,
                                    "column": 20
                                  },
                                  "text": "return 2",
                                  "children": [
                                    {
                                      "type": "return",
                                      "start": {
                                        "row": 47,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 47,
                                        "column": 18
                                      },
                                      "text": "return"
                                    },
                                    {
                                      "type": "integer",
                                      "start": {
                                        "row": 47,
                                        "column": 19
                                      },
                                      "end": {
                                        "row": 47,
                                        "column": 20
                                      },
                                      "text": "2"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 48,
                "column": 4
              },
              "end": {
                "row": 49,
                "column": 35
              },
              "text": "if interp == 10:\n        return random.randint(0, 4)",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 48,
                    "column": 4
                  },
                  "end": {
                    "row": 48,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "comparison_operator",
                  "start": {
                    "row": 48,
                    "column": 7
                  },
                  "end": {
                    "row": 48,
                    "column": 19
                  },
                  "text": "interp == 10",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 48,
                        "column": 7
                      },
                      "end": {
                        "row": 48,
                        "column": 13
                      },
                      "text": "interp"
                    },
                    {
                      "type": "==",
                      "start": {
                        "row": 48,
                        "column": 14
                      },
                      "end": {
                        "row": 48,
                        "column": 16
                      },
                      "text": "=="
                    },
                    {
                      "type": "integer",
                      "start": {
                        "row": 48,
                        "column": 17
                      },
                      "end": {
                        "row": 48,
                        "column": 19
                      },
                      "text": "10"
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 48,
                    "column": 19
                  },
                  "end": {
                    "row": 48,
                    "column": 20
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 49,
                    "column": 8
                  },
                  "end": {
                    "row": 49,
                    "column": 35
                  },
                  "text": "return random.randint(0, 4)",
                  "children": [
                    {
                      "type": "return_statement",
                      "start": {
                        "row": 49,
                        "column": 8
                      },
                      "end": {
                        "row": 49,
                        "column": 35
                      },
                      "text": "return random.randint(0, 4)",
                      "children": [
                        {
                          "type": "return",
                          "start": {
                            "row": 49,
                            "column": 8
                          },
                          "end": {
                            "row": 49,
                            "column": 14
                          },
                          "text": "return"
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 49,
                            "column": 15
                          },
                          "end": {
                            "row": 49,
                            "column": 35
                          },
                          "text": "random.randint(0, 4)",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 49,
                                "column": 15
                              },
                              "end": {
                                "row": 49,
                                "column": 29
                              },
                              "text": "random.randint",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 49,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 49,
                                    "column": 21
                                  },
                                  "text": "random"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 49,
                                    "column": 21
                                  },
                                  "end": {
                                    "row": 49,
                                    "column": 22
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 49,
                                    "column": 22
                                  },
                                  "end": {
                                    "row": 49,
                                    "column": 29
                                  },
                                  "text": "randint"
                                }
                              ]
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 49,
                                "column": 29
                              },
                              "end": {
                                "row": 49,
                                "column": 35
                              },
                              "text": "(0, 4)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 49,
                                    "column": 29
                                  },
                                  "end": {
                                    "row": 49,
                                    "column": 30
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "integer",
                                  "start": {
                                    "row": 49,
                                    "column": 30
                                  },
                                  "end": {
                                    "row": 49,
                                    "column": 31
                                  },
                                  "text": "0"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 49,
                                    "column": 31
                                  },
                                  "end": {
                                    "row": 49,
                                    "column": 32
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "integer",
                                  "start": {
                                    "row": 49,
                                    "column": 33
                                  },
                                  "end": {
                                    "row": 49,
                                    "column": 34
                                  },
                                  "text": "4"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 49,
                                    "column": 34
                                  },
                                  "end": {
                                    "row": 49,
                                    "column": 35
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 50,
                "column": 4
              },
              "end": {
                "row": 51,
                "column": 61
              },
              "text": "if interp not in (0, 1, 2, 3, 4):\n        raise ValueError('Unknown interp method %d' % interp)",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 50,
                    "column": 4
                  },
                  "end": {
                    "row": 50,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "comparison_operator",
                  "start": {
                    "row": 50,
                    "column": 7
                  },
                  "end": {
                    "row": 50,
                    "column": 36
                  },
                  "text": "interp not in (0, 1, 2, 3, 4)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 50,
                        "column": 7
                      },
                      "end": {
                        "row": 50,
                        "column": 13
                      },
                      "text": "interp"
                    },
                    {
                      "type": "not in",
                      "start": {
                        "row": 50,
                        "column": 14
                      },
                      "end": {
                        "row": 50,
                        "column": 17
                      },
                      "text": "not"
                    },
                    {
                      "type": "not in",
                      "start": {
                        "row": 50,
                        "column": 18
                      },
                      "end": {
                        "row": 50,
                        "column": 20
                      },
                      "text": "in"
                    },
                    {
                      "type": "tuple",
                      "start": {
                        "row": 50,
                        "column": 21
                      },
                      "end": {
                        "row": 50,
                        "column": 36
                      },
                      "text": "(0, 1, 2, 3, 4)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 50,
                            "column": 21
                          },
                          "end": {
                            "row": 50,
                            "column": 22
                          },
                          "text": "("
                        },
                        {
                          "type": "integer",
                          "start": {
                            "row": 50,
                            "column": 22
                          },
                          "end": {
                            "row": 50,
                            "column": 23
                          },
                          "text": "0"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 50,
                            "column": 23
                          },
                          "end": {
                            "row": 50,
                            "column": 24
                          },
                          "text": ","
                        },
                        {
                          "type": "integer",
                          "start": {
                            "row": 50,
                            "column": 25
                          },
                          "end": {
                            "row": 50,
                            "column": 26
                          },
                          "text": "1"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 50,
                            "column": 26
                          },
                          "end": {
                            "row": 50,
                            "column": 27
                          },
                          "text": ","
                        },
                        {
                          "type": "integer",
                          "start": {
                            "row": 50,
                            "column": 28
                          },
                          "end": {
                            "row": 50,
                            "column": 29
                          },
                          "text": "2"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 50,
                            "column": 29
                          },
                          "end": {
                            "row": 50,
                            "column": 30
                          },
                          "text": ","
                        },
                        {
                          "type": "integer",
                          "start": {
                            "row": 50,
                            "column": 31
                          },
                          "end": {
                            "row": 50,
                            "column": 32
                          },
                          "text": "3"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 50,
                            "column": 32
                          },
                          "end": {
                            "row": 50,
                            "column": 33
                          },
                          "text": ","
                        },
                        {
                          "type": "integer",
                          "start": {
                            "row": 50,
                            "column": 34
                          },
                          "end": {
                            "row": 50,
                            "column": 35
                          },
                          "text": "4"
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 50,
                            "column": 35
                          },
                          "end": {
                            "row": 50,
                            "column": 36
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 50,
                    "column": 36
                  },
                  "end": {
                    "row": 50,
                    "column": 37
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 51,
                    "column": 8
                  },
                  "end": {
                    "row": 51,
                    "column": 61
                  },
                  "text": "raise ValueError('Unknown interp method %d' % interp)",
                  "children": [
                    {
                      "type": "raise_statement",
                      "start": {
                        "row": 51,
                        "column": 8
                      },
                      "end": {
                        "row": 51,
                        "column": 61
                      },
                      "text": "raise ValueError('Unknown interp method %d' % interp)",
                      "children": [
                        {
                          "type": "raise",
                          "start": {
                            "row": 51,
                            "column": 8
                          },
                          "end": {
                            "row": 51,
                            "column": 13
                          },
                          "text": "raise"
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 51,
                            "column": 14
                          },
                          "end": {
                            "row": 51,
                            "column": 61
                          },
                          "text": "ValueError('Unknown interp method %d' % interp)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 51,
                                "column": 14
                              },
                              "end": {
                                "row": 51,
                                "column": 24
                              },
                              "text": "ValueError"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 51,
                                "column": 24
                              },
                              "end": {
                                "row": 51,
                                "column": 61
                              },
                              "text": "('Unknown interp method %d' % interp)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 51,
                                    "column": 24
                                  },
                                  "end": {
                                    "row": 51,
                                    "column": 25
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "binary_operator",
                                  "start": {
                                    "row": 51,
                                    "column": 25
                                  },
                                  "end": {
                                    "row": 51,
                                    "column": 60
                                  },
                                  "text": "'Unknown interp method %d' % interp",
                                  "children": [
                                    {
                                      "type": "string",
                                      "start": {
                                        "row": 51,
                                        "column": 25
                                      },
                                      "end": {
                                        "row": 51,
                                        "column": 51
                                      },
                                      "text": "'Unknown interp method %d'",
                                      "children": [
                                        {
                                          "type": "string_start",
                                          "start": {
                                            "row": 51,
                                            "column": 25
                                          },
                                          "end": {
                                            "row": 51,
                                            "column": 26
                                          },
                                          "text": "'"
                                        },
                                        {
                                          "type": "string_content",
                                          "start": {
                                            "row": 51,
                                            "column": 26
                                          },
                                          "end": {
                                            "row": 51,
                                            "column": 50
                                          },
                                          "text": "Unknown interp method %d"
                                        },
                                        {
                                          "type": "string_end",
                                          "start": {
                                            "row": 51,
                                            "column": 50
                                          },
                                          "end": {
                                            "row": 51,
                                            "column": 51
                                          },
                                          "text": "'"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "%",
                                      "start": {
                                        "row": 51,
                                        "column": 52
                                      },
                                      "end": {
                                        "row": 51,
                                        "column": 53
                                      },
                                      "text": "%"
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 51,
                                        "column": 54
                                      },
                                      "end": {
                                        "row": 51,
                                        "column": 60
                                      },
                                      "text": "interp"
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 51,
                                    "column": 60
                                  },
                                  "end": {
                                    "row": 51,
                                    "column": 61
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 52,
                "column": 4
              },
              "end": {
                "row": 52,
                "column": 17
              },
              "text": "return interp",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 52,
                    "column": 4
                  },
                  "end": {
                    "row": 52,
                    "column": 10
                  },
                  "text": "return"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 52,
                    "column": 11
                  },
                  "end": {
                    "row": 52,
                    "column": 17
                  },
                  "text": "interp"
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}