{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 55,
    "column": 25
  },
  "text": "def cast_vdata(vdata=None, vtype='REG_SZ'):\n    '''\n    Cast the ``vdata` value to the appropriate data type for the registry type\n    specified in ``vtype``\n\n    Args:\n\n        vdata (str, int, list, bytes): The data to cast\n\n        vtype (str):\n            The type of data to be written to the registry. Must be one of the\n            following:\n\n                - REG_BINARY\n                - REG_DWORD\n                - REG_EXPAND_SZ\n                - REG_MULTI_SZ\n                - REG_QWORD\n                - REG_SZ\n\n    Returns:\n        The vdata cast to the appropriate type. Will be unicode string, binary,\n        list of unicode strings, or int\n\n    Usage:\n\n        .. code-block:: python\n\n            import salt.utils.win_reg\n            winreg.cast_vdata(vdata='This is the string', vtype='REG_SZ')\n    '''\n    # Check data type and cast to expected type\n    # int will automatically become long on 64bit numbers\n    # https://www.python.org/dev/peps/pep-0237/\n\n    registry = Registry()\n    vtype_value = registry.vtype[vtype]\n\n    # String Types to Unicode\n    if vtype_value in [win32con.REG_SZ, win32con.REG_EXPAND_SZ]:\n        return _to_unicode(vdata)\n    # Don't touch binary... if it's binary\n    elif vtype_value == win32con.REG_BINARY:\n        if isinstance(vdata, six.text_type):\n            # Unicode data must be encoded\n            return vdata.encode('utf-8')\n        return vdata\n    # Make sure REG_MULTI_SZ is a list of strings\n    elif vtype_value == win32con.REG_MULTI_SZ:\n        return [_to_unicode(i) for i in vdata]\n    # Make sure REG_QWORD is a 64 bit integer\n    elif vtype_value == win32con.REG_QWORD:\n        return vdata if six.PY3 else long(vdata)  # pylint: disable=incompatible-py3-code,undefined-variable\n    # Everything else is int\n    else:\n        return int(vdata)",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 55,
        "column": 25
      },
      "text": "def cast_vdata(vdata=None, vtype='REG_SZ'):\n    '''\n    Cast the ``vdata` value to the appropriate data type for the registry type\n    specified in ``vtype``\n\n    Args:\n\n        vdata (str, int, list, bytes): The data to cast\n\n        vtype (str):\n            The type of data to be written to the registry. Must be one of the\n            following:\n\n                - REG_BINARY\n                - REG_DWORD\n                - REG_EXPAND_SZ\n                - REG_MULTI_SZ\n                - REG_QWORD\n                - REG_SZ\n\n    Returns:\n        The vdata cast to the appropriate type. Will be unicode string, binary,\n        list of unicode strings, or int\n\n    Usage:\n\n        .. code-block:: python\n\n            import salt.utils.win_reg\n            winreg.cast_vdata(vdata='This is the string', vtype='REG_SZ')\n    '''\n    # Check data type and cast to expected type\n    # int will automatically become long on 64bit numbers\n    # https://www.python.org/dev/peps/pep-0237/\n\n    registry = Registry()\n    vtype_value = registry.vtype[vtype]\n\n    # String Types to Unicode\n    if vtype_value in [win32con.REG_SZ, win32con.REG_EXPAND_SZ]:\n        return _to_unicode(vdata)\n    # Don't touch binary... if it's binary\n    elif vtype_value == win32con.REG_BINARY:\n        if isinstance(vdata, six.text_type):\n            # Unicode data must be encoded\n            return vdata.encode('utf-8')\n        return vdata\n    # Make sure REG_MULTI_SZ is a list of strings\n    elif vtype_value == win32con.REG_MULTI_SZ:\n        return [_to_unicode(i) for i in vdata]\n    # Make sure REG_QWORD is a 64 bit integer\n    elif vtype_value == win32con.REG_QWORD:\n        return vdata if six.PY3 else long(vdata)  # pylint: disable=incompatible-py3-code,undefined-variable\n    # Everything else is int\n    else:\n        return int(vdata)",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 14
          },
          "text": "cast_vdata"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 14
          },
          "end": {
            "row": 0,
            "column": 42
          },
          "text": "(vdata=None, vtype='REG_SZ')",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 14
              },
              "end": {
                "row": 0,
                "column": 15
              },
              "text": "("
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 0,
                "column": 15
              },
              "end": {
                "row": 0,
                "column": 25
              },
              "text": "vdata=None",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 15
                  },
                  "end": {
                    "row": 0,
                    "column": 20
                  },
                  "text": "vdata"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 0,
                    "column": 20
                  },
                  "end": {
                    "row": 0,
                    "column": 21
                  },
                  "text": "="
                },
                {
                  "type": "none",
                  "start": {
                    "row": 0,
                    "column": 21
                  },
                  "end": {
                    "row": 0,
                    "column": 25
                  },
                  "text": "None"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 25
              },
              "end": {
                "row": 0,
                "column": 26
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 0,
                "column": 27
              },
              "end": {
                "row": 0,
                "column": 41
              },
              "text": "vtype='REG_SZ'",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 27
                  },
                  "end": {
                    "row": 0,
                    "column": 32
                  },
                  "text": "vtype"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 0,
                    "column": 32
                  },
                  "end": {
                    "row": 0,
                    "column": 33
                  },
                  "text": "="
                },
                {
                  "type": "string",
                  "start": {
                    "row": 0,
                    "column": 33
                  },
                  "end": {
                    "row": 0,
                    "column": 41
                  },
                  "text": "'REG_SZ'",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 0,
                        "column": 33
                      },
                      "end": {
                        "row": 0,
                        "column": 34
                      },
                      "text": "'"
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 0,
                        "column": 34
                      },
                      "end": {
                        "row": 0,
                        "column": 40
                      },
                      "text": "REG_SZ"
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 0,
                        "column": 40
                      },
                      "end": {
                        "row": 0,
                        "column": 41
                      },
                      "text": "'"
                    }
                  ]
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 41
              },
              "end": {
                "row": 0,
                "column": 42
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 42
          },
          "end": {
            "row": 0,
            "column": 43
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 4
          },
          "end": {
            "row": 55,
            "column": 25
          },
          "text": "'''\n    Cast the ``vdata` value to the appropriate data type for the registry type\n    specified in ``vtype``\n\n    Args:\n\n        vdata (str, int, list, bytes): The data to cast\n\n        vtype (str):\n            The type of data to be written to the registry. Must be one of the\n            following:\n\n                - REG_BINARY\n                - REG_DWORD\n                - REG_EXPAND_SZ\n                - REG_MULTI_SZ\n                - REG_QWORD\n                - REG_SZ\n\n    Returns:\n        The vdata cast to the appropriate type. Will be unicode string, binary,\n        list of unicode strings, or int\n\n    Usage:\n\n        .. code-block:: python\n\n            import salt.utils.win_reg\n            winreg.cast_vdata(vdata='This is the string', vtype='REG_SZ')\n    '''\n    # Check data type and cast to expected type\n    # int will automatically become long on 64bit numbers\n    # https://www.python.org/dev/peps/pep-0237/\n\n    registry = Registry()\n    vtype_value = registry.vtype[vtype]\n\n    # String Types to Unicode\n    if vtype_value in [win32con.REG_SZ, win32con.REG_EXPAND_SZ]:\n        return _to_unicode(vdata)\n    # Don't touch binary... if it's binary\n    elif vtype_value == win32con.REG_BINARY:\n        if isinstance(vdata, six.text_type):\n            # Unicode data must be encoded\n            return vdata.encode('utf-8')\n        return vdata\n    # Make sure REG_MULTI_SZ is a list of strings\n    elif vtype_value == win32con.REG_MULTI_SZ:\n        return [_to_unicode(i) for i in vdata]\n    # Make sure REG_QWORD is a 64 bit integer\n    elif vtype_value == win32con.REG_QWORD:\n        return vdata if six.PY3 else long(vdata)  # pylint: disable=incompatible-py3-code,undefined-variable\n    # Everything else is int\n    else:\n        return int(vdata)",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 4
              },
              "end": {
                "row": 30,
                "column": 7
              },
              "text": "'''\n    Cast the ``vdata` value to the appropriate data type for the registry type\n    specified in ``vtype``\n\n    Args:\n\n        vdata (str, int, list, bytes): The data to cast\n\n        vtype (str):\n            The type of data to be written to the registry. Must be one of the\n            following:\n\n                - REG_BINARY\n                - REG_DWORD\n                - REG_EXPAND_SZ\n                - REG_MULTI_SZ\n                - REG_QWORD\n                - REG_SZ\n\n    Returns:\n        The vdata cast to the appropriate type. Will be unicode string, binary,\n        list of unicode strings, or int\n\n    Usage:\n\n        .. code-block:: python\n\n            import salt.utils.win_reg\n            winreg.cast_vdata(vdata='This is the string', vtype='REG_SZ')\n    '''",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 4
                  },
                  "end": {
                    "row": 30,
                    "column": 7
                  },
                  "text": "'''\n    Cast the ``vdata` value to the appropriate data type for the registry type\n    specified in ``vtype``\n\n    Args:\n\n        vdata (str, int, list, bytes): The data to cast\n\n        vtype (str):\n            The type of data to be written to the registry. Must be one of the\n            following:\n\n                - REG_BINARY\n                - REG_DWORD\n                - REG_EXPAND_SZ\n                - REG_MULTI_SZ\n                - REG_QWORD\n                - REG_SZ\n\n    Returns:\n        The vdata cast to the appropriate type. Will be unicode string, binary,\n        list of unicode strings, or int\n\n    Usage:\n\n        .. code-block:: python\n\n            import salt.utils.win_reg\n            winreg.cast_vdata(vdata='This is the string', vtype='REG_SZ')\n    '''",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 4
                      },
                      "end": {
                        "row": 1,
                        "column": 7
                      },
                      "text": "'''"
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 7
                      },
                      "end": {
                        "row": 30,
                        "column": 4
                      },
                      "text": "\n    Cast the ``vdata` value to the appropriate data type for the registry type\n    specified in ``vtype``\n\n    Args:\n\n        vdata (str, int, list, bytes): The data to cast\n\n        vtype (str):\n            The type of data to be written to the registry. Must be one of the\n            following:\n\n                - REG_BINARY\n                - REG_DWORD\n                - REG_EXPAND_SZ\n                - REG_MULTI_SZ\n                - REG_QWORD\n                - REG_SZ\n\n    Returns:\n        The vdata cast to the appropriate type. Will be unicode string, binary,\n        list of unicode strings, or int\n\n    Usage:\n\n        .. code-block:: python\n\n            import salt.utils.win_reg\n            winreg.cast_vdata(vdata='This is the string', vtype='REG_SZ')\n    "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 30,
                        "column": 4
                      },
                      "end": {
                        "row": 30,
                        "column": 7
                      },
                      "text": "'''"
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 31,
                "column": 4
              },
              "end": {
                "row": 31,
                "column": 47
              },
              "text": "# Check data type and cast to expected type"
            },
            {
              "type": "comment",
              "start": {
                "row": 32,
                "column": 4
              },
              "end": {
                "row": 32,
                "column": 57
              },
              "text": "# int will automatically become long on 64bit numbers"
            },
            {
              "type": "comment",
              "start": {
                "row": 33,
                "column": 4
              },
              "end": {
                "row": 33,
                "column": 47
              },
              "text": "# https://www.python.org/dev/peps/pep-0237/"
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 35,
                "column": 4
              },
              "end": {
                "row": 35,
                "column": 25
              },
              "text": "registry = Registry()",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 35,
                    "column": 4
                  },
                  "end": {
                    "row": 35,
                    "column": 25
                  },
                  "text": "registry = Registry()",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 35,
                        "column": 4
                      },
                      "end": {
                        "row": 35,
                        "column": 12
                      },
                      "text": "registry"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 35,
                        "column": 13
                      },
                      "end": {
                        "row": 35,
                        "column": 14
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 35,
                        "column": 15
                      },
                      "end": {
                        "row": 35,
                        "column": 25
                      },
                      "text": "Registry()",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 35,
                            "column": 15
                          },
                          "end": {
                            "row": 35,
                            "column": 23
                          },
                          "text": "Registry"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 35,
                            "column": 23
                          },
                          "end": {
                            "row": 35,
                            "column": 25
                          },
                          "text": "()",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 35,
                                "column": 23
                              },
                              "end": {
                                "row": 35,
                                "column": 24
                              },
                              "text": "("
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 35,
                                "column": 24
                              },
                              "end": {
                                "row": 35,
                                "column": 25
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 36,
                "column": 4
              },
              "end": {
                "row": 36,
                "column": 39
              },
              "text": "vtype_value = registry.vtype[vtype]",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 36,
                    "column": 4
                  },
                  "end": {
                    "row": 36,
                    "column": 39
                  },
                  "text": "vtype_value = registry.vtype[vtype]",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 36,
                        "column": 4
                      },
                      "end": {
                        "row": 36,
                        "column": 15
                      },
                      "text": "vtype_value"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 36,
                        "column": 16
                      },
                      "end": {
                        "row": 36,
                        "column": 17
                      },
                      "text": "="
                    },
                    {
                      "type": "subscript",
                      "start": {
                        "row": 36,
                        "column": 18
                      },
                      "end": {
                        "row": 36,
                        "column": 39
                      },
                      "text": "registry.vtype[vtype]",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 36,
                            "column": 18
                          },
                          "end": {
                            "row": 36,
                            "column": 32
                          },
                          "text": "registry.vtype",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 36,
                                "column": 18
                              },
                              "end": {
                                "row": 36,
                                "column": 26
                              },
                              "text": "registry"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 36,
                                "column": 26
                              },
                              "end": {
                                "row": 36,
                                "column": 27
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 36,
                                "column": 27
                              },
                              "end": {
                                "row": 36,
                                "column": 32
                              },
                              "text": "vtype"
                            }
                          ]
                        },
                        {
                          "type": "[",
                          "start": {
                            "row": 36,
                            "column": 32
                          },
                          "end": {
                            "row": 36,
                            "column": 33
                          },
                          "text": "["
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 36,
                            "column": 33
                          },
                          "end": {
                            "row": 36,
                            "column": 38
                          },
                          "text": "vtype"
                        },
                        {
                          "type": "]",
                          "start": {
                            "row": 36,
                            "column": 38
                          },
                          "end": {
                            "row": 36,
                            "column": 39
                          },
                          "text": "]"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 38,
                "column": 4
              },
              "end": {
                "row": 38,
                "column": 29
              },
              "text": "# String Types to Unicode"
            },
            {
              "type": "if_statement",
              "start": {
                "row": 39,
                "column": 4
              },
              "end": {
                "row": 55,
                "column": 25
              },
              "text": "if vtype_value in [win32con.REG_SZ, win32con.REG_EXPAND_SZ]:\n        return _to_unicode(vdata)\n    # Don't touch binary... if it's binary\n    elif vtype_value == win32con.REG_BINARY:\n        if isinstance(vdata, six.text_type):\n            # Unicode data must be encoded\n            return vdata.encode('utf-8')\n        return vdata\n    # Make sure REG_MULTI_SZ is a list of strings\n    elif vtype_value == win32con.REG_MULTI_SZ:\n        return [_to_unicode(i) for i in vdata]\n    # Make sure REG_QWORD is a 64 bit integer\n    elif vtype_value == win32con.REG_QWORD:\n        return vdata if six.PY3 else long(vdata)  # pylint: disable=incompatible-py3-code,undefined-variable\n    # Everything else is int\n    else:\n        return int(vdata)",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 39,
                    "column": 4
                  },
                  "end": {
                    "row": 39,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "comparison_operator",
                  "start": {
                    "row": 39,
                    "column": 7
                  },
                  "end": {
                    "row": 39,
                    "column": 63
                  },
                  "text": "vtype_value in [win32con.REG_SZ, win32con.REG_EXPAND_SZ]",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 39,
                        "column": 7
                      },
                      "end": {
                        "row": 39,
                        "column": 18
                      },
                      "text": "vtype_value"
                    },
                    {
                      "type": "in",
                      "start": {
                        "row": 39,
                        "column": 19
                      },
                      "end": {
                        "row": 39,
                        "column": 21
                      },
                      "text": "in"
                    },
                    {
                      "type": "list",
                      "start": {
                        "row": 39,
                        "column": 22
                      },
                      "end": {
                        "row": 39,
                        "column": 63
                      },
                      "text": "[win32con.REG_SZ, win32con.REG_EXPAND_SZ]",
                      "children": [
                        {
                          "type": "[",
                          "start": {
                            "row": 39,
                            "column": 22
                          },
                          "end": {
                            "row": 39,
                            "column": 23
                          },
                          "text": "["
                        },
                        {
                          "type": "attribute",
                          "start": {
                            "row": 39,
                            "column": 23
                          },
                          "end": {
                            "row": 39,
                            "column": 38
                          },
                          "text": "win32con.REG_SZ",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 39,
                                "column": 23
                              },
                              "end": {
                                "row": 39,
                                "column": 31
                              },
                              "text": "win32con"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 39,
                                "column": 31
                              },
                              "end": {
                                "row": 39,
                                "column": 32
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 39,
                                "column": 32
                              },
                              "end": {
                                "row": 39,
                                "column": 38
                              },
                              "text": "REG_SZ"
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 39,
                            "column": 38
                          },
                          "end": {
                            "row": 39,
                            "column": 39
                          },
                          "text": ","
                        },
                        {
                          "type": "attribute",
                          "start": {
                            "row": 39,
                            "column": 40
                          },
                          "end": {
                            "row": 39,
                            "column": 62
                          },
                          "text": "win32con.REG_EXPAND_SZ",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 39,
                                "column": 40
                              },
                              "end": {
                                "row": 39,
                                "column": 48
                              },
                              "text": "win32con"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 39,
                                "column": 48
                              },
                              "end": {
                                "row": 39,
                                "column": 49
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 39,
                                "column": 49
                              },
                              "end": {
                                "row": 39,
                                "column": 62
                              },
                              "text": "REG_EXPAND_SZ"
                            }
                          ]
                        },
                        {
                          "type": "]",
                          "start": {
                            "row": 39,
                            "column": 62
                          },
                          "end": {
                            "row": 39,
                            "column": 63
                          },
                          "text": "]"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 39,
                    "column": 63
                  },
                  "end": {
                    "row": 39,
                    "column": 64
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 40,
                    "column": 8
                  },
                  "end": {
                    "row": 40,
                    "column": 33
                  },
                  "text": "return _to_unicode(vdata)",
                  "children": [
                    {
                      "type": "return_statement",
                      "start": {
                        "row": 40,
                        "column": 8
                      },
                      "end": {
                        "row": 40,
                        "column": 33
                      },
                      "text": "return _to_unicode(vdata)",
                      "children": [
                        {
                          "type": "return",
                          "start": {
                            "row": 40,
                            "column": 8
                          },
                          "end": {
                            "row": 40,
                            "column": 14
                          },
                          "text": "return"
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 40,
                            "column": 15
                          },
                          "end": {
                            "row": 40,
                            "column": 33
                          },
                          "text": "_to_unicode(vdata)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 40,
                                "column": 15
                              },
                              "end": {
                                "row": 40,
                                "column": 26
                              },
                              "text": "_to_unicode"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 40,
                                "column": 26
                              },
                              "end": {
                                "row": 40,
                                "column": 33
                              },
                              "text": "(vdata)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 40,
                                    "column": 26
                                  },
                                  "end": {
                                    "row": 40,
                                    "column": 27
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 40,
                                    "column": 27
                                  },
                                  "end": {
                                    "row": 40,
                                    "column": 32
                                  },
                                  "text": "vdata"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 40,
                                    "column": 32
                                  },
                                  "end": {
                                    "row": 40,
                                    "column": 33
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "comment",
                  "start": {
                    "row": 41,
                    "column": 4
                  },
                  "end": {
                    "row": 41,
                    "column": 42
                  },
                  "text": "# Don't touch binary... if it's binary"
                },
                {
                  "type": "elif_clause",
                  "start": {
                    "row": 42,
                    "column": 4
                  },
                  "end": {
                    "row": 46,
                    "column": 20
                  },
                  "text": "elif vtype_value == win32con.REG_BINARY:\n        if isinstance(vdata, six.text_type):\n            # Unicode data must be encoded\n            return vdata.encode('utf-8')\n        return vdata",
                  "children": [
                    {
                      "type": "elif",
                      "start": {
                        "row": 42,
                        "column": 4
                      },
                      "end": {
                        "row": 42,
                        "column": 8
                      },
                      "text": "elif"
                    },
                    {
                      "type": "comparison_operator",
                      "start": {
                        "row": 42,
                        "column": 9
                      },
                      "end": {
                        "row": 42,
                        "column": 43
                      },
                      "text": "vtype_value == win32con.REG_BINARY",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 42,
                            "column": 9
                          },
                          "end": {
                            "row": 42,
                            "column": 20
                          },
                          "text": "vtype_value"
                        },
                        {
                          "type": "==",
                          "start": {
                            "row": 42,
                            "column": 21
                          },
                          "end": {
                            "row": 42,
                            "column": 23
                          },
                          "text": "=="
                        },
                        {
                          "type": "attribute",
                          "start": {
                            "row": 42,
                            "column": 24
                          },
                          "end": {
                            "row": 42,
                            "column": 43
                          },
                          "text": "win32con.REG_BINARY",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 42,
                                "column": 24
                              },
                              "end": {
                                "row": 42,
                                "column": 32
                              },
                              "text": "win32con"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 42,
                                "column": 32
                              },
                              "end": {
                                "row": 42,
                                "column": 33
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 42,
                                "column": 33
                              },
                              "end": {
                                "row": 42,
                                "column": 43
                              },
                              "text": "REG_BINARY"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ":",
                      "start": {
                        "row": 42,
                        "column": 43
                      },
                      "end": {
                        "row": 42,
                        "column": 44
                      },
                      "text": ":"
                    },
                    {
                      "type": "block",
                      "start": {
                        "row": 43,
                        "column": 8
                      },
                      "end": {
                        "row": 46,
                        "column": 20
                      },
                      "text": "if isinstance(vdata, six.text_type):\n            # Unicode data must be encoded\n            return vdata.encode('utf-8')\n        return vdata",
                      "children": [
                        {
                          "type": "if_statement",
                          "start": {
                            "row": 43,
                            "column": 8
                          },
                          "end": {
                            "row": 45,
                            "column": 40
                          },
                          "text": "if isinstance(vdata, six.text_type):\n            # Unicode data must be encoded\n            return vdata.encode('utf-8')",
                          "children": [
                            {
                              "type": "if",
                              "start": {
                                "row": 43,
                                "column": 8
                              },
                              "end": {
                                "row": 43,
                                "column": 10
                              },
                              "text": "if"
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 43,
                                "column": 11
                              },
                              "end": {
                                "row": 43,
                                "column": 43
                              },
                              "text": "isinstance(vdata, six.text_type)",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 43,
                                    "column": 11
                                  },
                                  "end": {
                                    "row": 43,
                                    "column": 21
                                  },
                                  "text": "isinstance"
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 43,
                                    "column": 21
                                  },
                                  "end": {
                                    "row": 43,
                                    "column": 43
                                  },
                                  "text": "(vdata, six.text_type)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 43,
                                        "column": 21
                                      },
                                      "end": {
                                        "row": 43,
                                        "column": 22
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 43,
                                        "column": 22
                                      },
                                      "end": {
                                        "row": 43,
                                        "column": 27
                                      },
                                      "text": "vdata"
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 43,
                                        "column": 27
                                      },
                                      "end": {
                                        "row": 43,
                                        "column": 28
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "attribute",
                                      "start": {
                                        "row": 43,
                                        "column": 29
                                      },
                                      "end": {
                                        "row": 43,
                                        "column": 42
                                      },
                                      "text": "six.text_type",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 43,
                                            "column": 29
                                          },
                                          "end": {
                                            "row": 43,
                                            "column": 32
                                          },
                                          "text": "six"
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 43,
                                            "column": 32
                                          },
                                          "end": {
                                            "row": 43,
                                            "column": 33
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 43,
                                            "column": 33
                                          },
                                          "end": {
                                            "row": 43,
                                            "column": 42
                                          },
                                          "text": "text_type"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 43,
                                        "column": 42
                                      },
                                      "end": {
                                        "row": 43,
                                        "column": 43
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ":",
                              "start": {
                                "row": 43,
                                "column": 43
                              },
                              "end": {
                                "row": 43,
                                "column": 44
                              },
                              "text": ":"
                            },
                            {
                              "type": "comment",
                              "start": {
                                "row": 44,
                                "column": 12
                              },
                              "end": {
                                "row": 44,
                                "column": 42
                              },
                              "text": "# Unicode data must be encoded"
                            },
                            {
                              "type": "block",
                              "start": {
                                "row": 45,
                                "column": 12
                              },
                              "end": {
                                "row": 45,
                                "column": 40
                              },
                              "text": "return vdata.encode('utf-8')",
                              "children": [
                                {
                                  "type": "return_statement",
                                  "start": {
                                    "row": 45,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 45,
                                    "column": 40
                                  },
                                  "text": "return vdata.encode('utf-8')",
                                  "children": [
                                    {
                                      "type": "return",
                                      "start": {
                                        "row": 45,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 45,
                                        "column": 18
                                      },
                                      "text": "return"
                                    },
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 45,
                                        "column": 19
                                      },
                                      "end": {
                                        "row": 45,
                                        "column": 40
                                      },
                                      "text": "vdata.encode('utf-8')",
                                      "children": [
                                        {
                                          "type": "attribute",
                                          "start": {
                                            "row": 45,
                                            "column": 19
                                          },
                                          "end": {
                                            "row": 45,
                                            "column": 31
                                          },
                                          "text": "vdata.encode",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 45,
                                                "column": 19
                                              },
                                              "end": {
                                                "row": 45,
                                                "column": 24
                                              },
                                              "text": "vdata"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 45,
                                                "column": 24
                                              },
                                              "end": {
                                                "row": 45,
                                                "column": 25
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 45,
                                                "column": 25
                                              },
                                              "end": {
                                                "row": 45,
                                                "column": 31
                                              },
                                              "text": "encode"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 45,
                                            "column": 31
                                          },
                                          "end": {
                                            "row": 45,
                                            "column": 40
                                          },
                                          "text": "('utf-8')",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 45,
                                                "column": 31
                                              },
                                              "end": {
                                                "row": 45,
                                                "column": 32
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "string",
                                              "start": {
                                                "row": 45,
                                                "column": 32
                                              },
                                              "end": {
                                                "row": 45,
                                                "column": 39
                                              },
                                              "text": "'utf-8'",
                                              "children": [
                                                {
                                                  "type": "string_start",
                                                  "start": {
                                                    "row": 45,
                                                    "column": 32
                                                  },
                                                  "end": {
                                                    "row": 45,
                                                    "column": 33
                                                  },
                                                  "text": "'"
                                                },
                                                {
                                                  "type": "string_content",
                                                  "start": {
                                                    "row": 45,
                                                    "column": 33
                                                  },
                                                  "end": {
                                                    "row": 45,
                                                    "column": 38
                                                  },
                                                  "text": "utf-8"
                                                },
                                                {
                                                  "type": "string_end",
                                                  "start": {
                                                    "row": 45,
                                                    "column": 38
                                                  },
                                                  "end": {
                                                    "row": 45,
                                                    "column": 39
                                                  },
                                                  "text": "'"
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 45,
                                                "column": 39
                                              },
                                              "end": {
                                                "row": 45,
                                                "column": 40
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "return_statement",
                          "start": {
                            "row": 46,
                            "column": 8
                          },
                          "end": {
                            "row": 46,
                            "column": 20
                          },
                          "text": "return vdata",
                          "children": [
                            {
                              "type": "return",
                              "start": {
                                "row": 46,
                                "column": 8
                              },
                              "end": {
                                "row": 46,
                                "column": 14
                              },
                              "text": "return"
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 46,
                                "column": 15
                              },
                              "end": {
                                "row": 46,
                                "column": 20
                              },
                              "text": "vdata"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "comment",
                  "start": {
                    "row": 47,
                    "column": 4
                  },
                  "end": {
                    "row": 47,
                    "column": 49
                  },
                  "text": "# Make sure REG_MULTI_SZ is a list of strings"
                },
                {
                  "type": "elif_clause",
                  "start": {
                    "row": 48,
                    "column": 4
                  },
                  "end": {
                    "row": 49,
                    "column": 46
                  },
                  "text": "elif vtype_value == win32con.REG_MULTI_SZ:\n        return [_to_unicode(i) for i in vdata]",
                  "children": [
                    {
                      "type": "elif",
                      "start": {
                        "row": 48,
                        "column": 4
                      },
                      "end": {
                        "row": 48,
                        "column": 8
                      },
                      "text": "elif"
                    },
                    {
                      "type": "comparison_operator",
                      "start": {
                        "row": 48,
                        "column": 9
                      },
                      "end": {
                        "row": 48,
                        "column": 45
                      },
                      "text": "vtype_value == win32con.REG_MULTI_SZ",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 48,
                            "column": 9
                          },
                          "end": {
                            "row": 48,
                            "column": 20
                          },
                          "text": "vtype_value"
                        },
                        {
                          "type": "==",
                          "start": {
                            "row": 48,
                            "column": 21
                          },
                          "end": {
                            "row": 48,
                            "column": 23
                          },
                          "text": "=="
                        },
                        {
                          "type": "attribute",
                          "start": {
                            "row": 48,
                            "column": 24
                          },
                          "end": {
                            "row": 48,
                            "column": 45
                          },
                          "text": "win32con.REG_MULTI_SZ",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 48,
                                "column": 24
                              },
                              "end": {
                                "row": 48,
                                "column": 32
                              },
                              "text": "win32con"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 48,
                                "column": 32
                              },
                              "end": {
                                "row": 48,
                                "column": 33
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 48,
                                "column": 33
                              },
                              "end": {
                                "row": 48,
                                "column": 45
                              },
                              "text": "REG_MULTI_SZ"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ":",
                      "start": {
                        "row": 48,
                        "column": 45
                      },
                      "end": {
                        "row": 48,
                        "column": 46
                      },
                      "text": ":"
                    },
                    {
                      "type": "block",
                      "start": {
                        "row": 49,
                        "column": 8
                      },
                      "end": {
                        "row": 49,
                        "column": 46
                      },
                      "text": "return [_to_unicode(i) for i in vdata]",
                      "children": [
                        {
                          "type": "return_statement",
                          "start": {
                            "row": 49,
                            "column": 8
                          },
                          "end": {
                            "row": 49,
                            "column": 46
                          },
                          "text": "return [_to_unicode(i) for i in vdata]",
                          "children": [
                            {
                              "type": "return",
                              "start": {
                                "row": 49,
                                "column": 8
                              },
                              "end": {
                                "row": 49,
                                "column": 14
                              },
                              "text": "return"
                            },
                            {
                              "type": "list_comprehension",
                              "start": {
                                "row": 49,
                                "column": 15
                              },
                              "end": {
                                "row": 49,
                                "column": 46
                              },
                              "text": "[_to_unicode(i) for i in vdata]",
                              "children": [
                                {
                                  "type": "[",
                                  "start": {
                                    "row": 49,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 49,
                                    "column": 16
                                  },
                                  "text": "["
                                },
                                {
                                  "type": "call",
                                  "start": {
                                    "row": 49,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 49,
                                    "column": 30
                                  },
                                  "text": "_to_unicode(i)",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 49,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 49,
                                        "column": 27
                                      },
                                      "text": "_to_unicode"
                                    },
                                    {
                                      "type": "argument_list",
                                      "start": {
                                        "row": 49,
                                        "column": 27
                                      },
                                      "end": {
                                        "row": 49,
                                        "column": 30
                                      },
                                      "text": "(i)",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 49,
                                            "column": 27
                                          },
                                          "end": {
                                            "row": 49,
                                            "column": 28
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 49,
                                            "column": 28
                                          },
                                          "end": {
                                            "row": 49,
                                            "column": 29
                                          },
                                          "text": "i"
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 49,
                                            "column": 29
                                          },
                                          "end": {
                                            "row": 49,
                                            "column": 30
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "for_in_clause",
                                  "start": {
                                    "row": 49,
                                    "column": 31
                                  },
                                  "end": {
                                    "row": 49,
                                    "column": 45
                                  },
                                  "text": "for i in vdata",
                                  "children": [
                                    {
                                      "type": "for",
                                      "start": {
                                        "row": 49,
                                        "column": 31
                                      },
                                      "end": {
                                        "row": 49,
                                        "column": 34
                                      },
                                      "text": "for"
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 49,
                                        "column": 35
                                      },
                                      "end": {
                                        "row": 49,
                                        "column": 36
                                      },
                                      "text": "i"
                                    },
                                    {
                                      "type": "in",
                                      "start": {
                                        "row": 49,
                                        "column": 37
                                      },
                                      "end": {
                                        "row": 49,
                                        "column": 39
                                      },
                                      "text": "in"
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 49,
                                        "column": 40
                                      },
                                      "end": {
                                        "row": 49,
                                        "column": 45
                                      },
                                      "text": "vdata"
                                    }
                                  ]
                                },
                                {
                                  "type": "]",
                                  "start": {
                                    "row": 49,
                                    "column": 45
                                  },
                                  "end": {
                                    "row": 49,
                                    "column": 46
                                  },
                                  "text": "]"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "comment",
                  "start": {
                    "row": 50,
                    "column": 4
                  },
                  "end": {
                    "row": 50,
                    "column": 45
                  },
                  "text": "# Make sure REG_QWORD is a 64 bit integer"
                },
                {
                  "type": "elif_clause",
                  "start": {
                    "row": 51,
                    "column": 4
                  },
                  "end": {
                    "row": 52,
                    "column": 108
                  },
                  "text": "elif vtype_value == win32con.REG_QWORD:\n        return vdata if six.PY3 else long(vdata)  # pylint: disable=incompatible-py3-code,undefined-variable",
                  "children": [
                    {
                      "type": "elif",
                      "start": {
                        "row": 51,
                        "column": 4
                      },
                      "end": {
                        "row": 51,
                        "column": 8
                      },
                      "text": "elif"
                    },
                    {
                      "type": "comparison_operator",
                      "start": {
                        "row": 51,
                        "column": 9
                      },
                      "end": {
                        "row": 51,
                        "column": 42
                      },
                      "text": "vtype_value == win32con.REG_QWORD",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 51,
                            "column": 9
                          },
                          "end": {
                            "row": 51,
                            "column": 20
                          },
                          "text": "vtype_value"
                        },
                        {
                          "type": "==",
                          "start": {
                            "row": 51,
                            "column": 21
                          },
                          "end": {
                            "row": 51,
                            "column": 23
                          },
                          "text": "=="
                        },
                        {
                          "type": "attribute",
                          "start": {
                            "row": 51,
                            "column": 24
                          },
                          "end": {
                            "row": 51,
                            "column": 42
                          },
                          "text": "win32con.REG_QWORD",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 51,
                                "column": 24
                              },
                              "end": {
                                "row": 51,
                                "column": 32
                              },
                              "text": "win32con"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 51,
                                "column": 32
                              },
                              "end": {
                                "row": 51,
                                "column": 33
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 51,
                                "column": 33
                              },
                              "end": {
                                "row": 51,
                                "column": 42
                              },
                              "text": "REG_QWORD"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ":",
                      "start": {
                        "row": 51,
                        "column": 42
                      },
                      "end": {
                        "row": 51,
                        "column": 43
                      },
                      "text": ":"
                    },
                    {
                      "type": "block",
                      "start": {
                        "row": 52,
                        "column": 8
                      },
                      "end": {
                        "row": 52,
                        "column": 108
                      },
                      "text": "return vdata if six.PY3 else long(vdata)  # pylint: disable=incompatible-py3-code,undefined-variable",
                      "children": [
                        {
                          "type": "return_statement",
                          "start": {
                            "row": 52,
                            "column": 8
                          },
                          "end": {
                            "row": 52,
                            "column": 48
                          },
                          "text": "return vdata if six.PY3 else long(vdata)",
                          "children": [
                            {
                              "type": "return",
                              "start": {
                                "row": 52,
                                "column": 8
                              },
                              "end": {
                                "row": 52,
                                "column": 14
                              },
                              "text": "return"
                            },
                            {
                              "type": "conditional_expression",
                              "start": {
                                "row": 52,
                                "column": 15
                              },
                              "end": {
                                "row": 52,
                                "column": 48
                              },
                              "text": "vdata if six.PY3 else long(vdata)",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 52,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 52,
                                    "column": 20
                                  },
                                  "text": "vdata"
                                },
                                {
                                  "type": "if",
                                  "start": {
                                    "row": 52,
                                    "column": 21
                                  },
                                  "end": {
                                    "row": 52,
                                    "column": 23
                                  },
                                  "text": "if"
                                },
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 52,
                                    "column": 24
                                  },
                                  "end": {
                                    "row": 52,
                                    "column": 31
                                  },
                                  "text": "six.PY3",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 52,
                                        "column": 24
                                      },
                                      "end": {
                                        "row": 52,
                                        "column": 27
                                      },
                                      "text": "six"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 52,
                                        "column": 27
                                      },
                                      "end": {
                                        "row": 52,
                                        "column": 28
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 52,
                                        "column": 28
                                      },
                                      "end": {
                                        "row": 52,
                                        "column": 31
                                      },
                                      "text": "PY3"
                                    }
                                  ]
                                },
                                {
                                  "type": "else",
                                  "start": {
                                    "row": 52,
                                    "column": 32
                                  },
                                  "end": {
                                    "row": 52,
                                    "column": 36
                                  },
                                  "text": "else"
                                },
                                {
                                  "type": "call",
                                  "start": {
                                    "row": 52,
                                    "column": 37
                                  },
                                  "end": {
                                    "row": 52,
                                    "column": 48
                                  },
                                  "text": "long(vdata)",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 52,
                                        "column": 37
                                      },
                                      "end": {
                                        "row": 52,
                                        "column": 41
                                      },
                                      "text": "long"
                                    },
                                    {
                                      "type": "argument_list",
                                      "start": {
                                        "row": 52,
                                        "column": 41
                                      },
                                      "end": {
                                        "row": 52,
                                        "column": 48
                                      },
                                      "text": "(vdata)",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 52,
                                            "column": 41
                                          },
                                          "end": {
                                            "row": 52,
                                            "column": 42
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 52,
                                            "column": 42
                                          },
                                          "end": {
                                            "row": 52,
                                            "column": 47
                                          },
                                          "text": "vdata"
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 52,
                                            "column": 47
                                          },
                                          "end": {
                                            "row": 52,
                                            "column": 48
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "comment",
                          "start": {
                            "row": 52,
                            "column": 50
                          },
                          "end": {
                            "row": 52,
                            "column": 108
                          },
                          "text": "# pylint: disable=incompatible-py3-code,undefined-variable"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "comment",
                  "start": {
                    "row": 53,
                    "column": 4
                  },
                  "end": {
                    "row": 53,
                    "column": 28
                  },
                  "text": "# Everything else is int"
                },
                {
                  "type": "else_clause",
                  "start": {
                    "row": 54,
                    "column": 4
                  },
                  "end": {
                    "row": 55,
                    "column": 25
                  },
                  "text": "else:\n        return int(vdata)",
                  "children": [
                    {
                      "type": "else",
                      "start": {
                        "row": 54,
                        "column": 4
                      },
                      "end": {
                        "row": 54,
                        "column": 8
                      },
                      "text": "else"
                    },
                    {
                      "type": ":",
                      "start": {
                        "row": 54,
                        "column": 8
                      },
                      "end": {
                        "row": 54,
                        "column": 9
                      },
                      "text": ":"
                    },
                    {
                      "type": "block",
                      "start": {
                        "row": 55,
                        "column": 8
                      },
                      "end": {
                        "row": 55,
                        "column": 25
                      },
                      "text": "return int(vdata)",
                      "children": [
                        {
                          "type": "return_statement",
                          "start": {
                            "row": 55,
                            "column": 8
                          },
                          "end": {
                            "row": 55,
                            "column": 25
                          },
                          "text": "return int(vdata)",
                          "children": [
                            {
                              "type": "return",
                              "start": {
                                "row": 55,
                                "column": 8
                              },
                              "end": {
                                "row": 55,
                                "column": 14
                              },
                              "text": "return"
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 55,
                                "column": 15
                              },
                              "end": {
                                "row": 55,
                                "column": 25
                              },
                              "text": "int(vdata)",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 55,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 55,
                                    "column": 18
                                  },
                                  "text": "int"
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 55,
                                    "column": 18
                                  },
                                  "end": {
                                    "row": 55,
                                    "column": 25
                                  },
                                  "text": "(vdata)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 55,
                                        "column": 18
                                      },
                                      "end": {
                                        "row": 55,
                                        "column": 19
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 55,
                                        "column": 19
                                      },
                                      "end": {
                                        "row": 55,
                                        "column": 24
                                      },
                                      "text": "vdata"
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 55,
                                        "column": 24
                                      },
                                      "end": {
                                        "row": 55,
                                        "column": 25
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}