{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 22,
    "column": 72
  },
  "text": "def register_actor(name, actor_handle):\n    \"\"\"Register a named actor under a string key.\n\n   Args:\n       name: The name of the named actor.\n       actor_handle: The actor object to be associated with this name\n   \"\"\"\n    if not isinstance(name, str):\n        raise TypeError(\"The name argument must be a string.\")\n    if not isinstance(actor_handle, ray.actor.ActorHandle):\n        raise TypeError(\"The actor_handle argument must be an ActorHandle \"\n                        \"object.\")\n    actor_name = _calculate_key(name)\n    pickled_state = pickle.dumps(actor_handle)\n\n    # Add the actor to Redis if it does not already exist.\n    already_exists = _internal_kv_put(actor_name, pickled_state)\n    if already_exists:\n        # If the registration fails, then erase the new actor handle that\n        # was added when pickling the actor handle.\n        actor_handle._ray_new_actor_handles.pop()\n        raise ValueError(\n            \"Error: the actor with name={} already exists\".format(name))",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 22,
        "column": 72
      },
      "text": "def register_actor(name, actor_handle):\n    \"\"\"Register a named actor under a string key.\n\n   Args:\n       name: The name of the named actor.\n       actor_handle: The actor object to be associated with this name\n   \"\"\"\n    if not isinstance(name, str):\n        raise TypeError(\"The name argument must be a string.\")\n    if not isinstance(actor_handle, ray.actor.ActorHandle):\n        raise TypeError(\"The actor_handle argument must be an ActorHandle \"\n                        \"object.\")\n    actor_name = _calculate_key(name)\n    pickled_state = pickle.dumps(actor_handle)\n\n    # Add the actor to Redis if it does not already exist.\n    already_exists = _internal_kv_put(actor_name, pickled_state)\n    if already_exists:\n        # If the registration fails, then erase the new actor handle that\n        # was added when pickling the actor handle.\n        actor_handle._ray_new_actor_handles.pop()\n        raise ValueError(\n            \"Error: the actor with name={} already exists\".format(name))",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 18
          },
          "text": "register_actor"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 18
          },
          "end": {
            "row": 0,
            "column": 38
          },
          "text": "(name, actor_handle)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 18
              },
              "end": {
                "row": 0,
                "column": 19
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 19
              },
              "end": {
                "row": 0,
                "column": 23
              },
              "text": "name"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 23
              },
              "end": {
                "row": 0,
                "column": 24
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 25
              },
              "end": {
                "row": 0,
                "column": 37
              },
              "text": "actor_handle"
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 37
              },
              "end": {
                "row": 0,
                "column": 38
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 38
          },
          "end": {
            "row": 0,
            "column": 39
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 4
          },
          "end": {
            "row": 22,
            "column": 72
          },
          "text": "\"\"\"Register a named actor under a string key.\n\n   Args:\n       name: The name of the named actor.\n       actor_handle: The actor object to be associated with this name\n   \"\"\"\n    if not isinstance(name, str):\n        raise TypeError(\"The name argument must be a string.\")\n    if not isinstance(actor_handle, ray.actor.ActorHandle):\n        raise TypeError(\"The actor_handle argument must be an ActorHandle \"\n                        \"object.\")\n    actor_name = _calculate_key(name)\n    pickled_state = pickle.dumps(actor_handle)\n\n    # Add the actor to Redis if it does not already exist.\n    already_exists = _internal_kv_put(actor_name, pickled_state)\n    if already_exists:\n        # If the registration fails, then erase the new actor handle that\n        # was added when pickling the actor handle.\n        actor_handle._ray_new_actor_handles.pop()\n        raise ValueError(\n            \"Error: the actor with name={} already exists\".format(name))",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 4
              },
              "end": {
                "row": 6,
                "column": 6
              },
              "text": "\"\"\"Register a named actor under a string key.\n\n   Args:\n       name: The name of the named actor.\n       actor_handle: The actor object to be associated with this name\n   \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 4
                  },
                  "end": {
                    "row": 6,
                    "column": 6
                  },
                  "text": "\"\"\"Register a named actor under a string key.\n\n   Args:\n       name: The name of the named actor.\n       actor_handle: The actor object to be associated with this name\n   \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 4
                      },
                      "end": {
                        "row": 1,
                        "column": 7
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 7
                      },
                      "end": {
                        "row": 6,
                        "column": 3
                      },
                      "text": "Register a named actor under a string key.\n\n   Args:\n       name: The name of the named actor.\n       actor_handle: The actor object to be associated with this name\n   "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 6,
                        "column": 3
                      },
                      "end": {
                        "row": 6,
                        "column": 6
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 7,
                "column": 4
              },
              "end": {
                "row": 8,
                "column": 62
              },
              "text": "if not isinstance(name, str):\n        raise TypeError(\"The name argument must be a string.\")",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 7,
                    "column": 4
                  },
                  "end": {
                    "row": 7,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "not_operator",
                  "start": {
                    "row": 7,
                    "column": 7
                  },
                  "end": {
                    "row": 7,
                    "column": 32
                  },
                  "text": "not isinstance(name, str)",
                  "children": [
                    {
                      "type": "not",
                      "start": {
                        "row": 7,
                        "column": 7
                      },
                      "end": {
                        "row": 7,
                        "column": 10
                      },
                      "text": "not"
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 7,
                        "column": 11
                      },
                      "end": {
                        "row": 7,
                        "column": 32
                      },
                      "text": "isinstance(name, str)",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 7,
                            "column": 11
                          },
                          "end": {
                            "row": 7,
                            "column": 21
                          },
                          "text": "isinstance"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 7,
                            "column": 21
                          },
                          "end": {
                            "row": 7,
                            "column": 32
                          },
                          "text": "(name, str)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 7,
                                "column": 21
                              },
                              "end": {
                                "row": 7,
                                "column": 22
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 7,
                                "column": 22
                              },
                              "end": {
                                "row": 7,
                                "column": 26
                              },
                              "text": "name"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 7,
                                "column": 26
                              },
                              "end": {
                                "row": 7,
                                "column": 27
                              },
                              "text": ","
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 7,
                                "column": 28
                              },
                              "end": {
                                "row": 7,
                                "column": 31
                              },
                              "text": "str"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 7,
                                "column": 31
                              },
                              "end": {
                                "row": 7,
                                "column": 32
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 7,
                    "column": 32
                  },
                  "end": {
                    "row": 7,
                    "column": 33
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 8,
                    "column": 8
                  },
                  "end": {
                    "row": 8,
                    "column": 62
                  },
                  "text": "raise TypeError(\"The name argument must be a string.\")",
                  "children": [
                    {
                      "type": "raise_statement",
                      "start": {
                        "row": 8,
                        "column": 8
                      },
                      "end": {
                        "row": 8,
                        "column": 62
                      },
                      "text": "raise TypeError(\"The name argument must be a string.\")",
                      "children": [
                        {
                          "type": "raise",
                          "start": {
                            "row": 8,
                            "column": 8
                          },
                          "end": {
                            "row": 8,
                            "column": 13
                          },
                          "text": "raise"
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 8,
                            "column": 14
                          },
                          "end": {
                            "row": 8,
                            "column": 62
                          },
                          "text": "TypeError(\"The name argument must be a string.\")",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 8,
                                "column": 14
                              },
                              "end": {
                                "row": 8,
                                "column": 23
                              },
                              "text": "TypeError"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 8,
                                "column": 23
                              },
                              "end": {
                                "row": 8,
                                "column": 62
                              },
                              "text": "(\"The name argument must be a string.\")",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 8,
                                    "column": 23
                                  },
                                  "end": {
                                    "row": 8,
                                    "column": 24
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "string",
                                  "start": {
                                    "row": 8,
                                    "column": 24
                                  },
                                  "end": {
                                    "row": 8,
                                    "column": 61
                                  },
                                  "text": "\"The name argument must be a string.\"",
                                  "children": [
                                    {
                                      "type": "string_start",
                                      "start": {
                                        "row": 8,
                                        "column": 24
                                      },
                                      "end": {
                                        "row": 8,
                                        "column": 25
                                      },
                                      "text": "\""
                                    },
                                    {
                                      "type": "string_content",
                                      "start": {
                                        "row": 8,
                                        "column": 25
                                      },
                                      "end": {
                                        "row": 8,
                                        "column": 60
                                      },
                                      "text": "The name argument must be a string."
                                    },
                                    {
                                      "type": "string_end",
                                      "start": {
                                        "row": 8,
                                        "column": 60
                                      },
                                      "end": {
                                        "row": 8,
                                        "column": 61
                                      },
                                      "text": "\""
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 8,
                                    "column": 61
                                  },
                                  "end": {
                                    "row": 8,
                                    "column": 62
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 9,
                "column": 4
              },
              "end": {
                "row": 11,
                "column": 34
              },
              "text": "if not isinstance(actor_handle, ray.actor.ActorHandle):\n        raise TypeError(\"The actor_handle argument must be an ActorHandle \"\n                        \"object.\")",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 9,
                    "column": 4
                  },
                  "end": {
                    "row": 9,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "not_operator",
                  "start": {
                    "row": 9,
                    "column": 7
                  },
                  "end": {
                    "row": 9,
                    "column": 58
                  },
                  "text": "not isinstance(actor_handle, ray.actor.ActorHandle)",
                  "children": [
                    {
                      "type": "not",
                      "start": {
                        "row": 9,
                        "column": 7
                      },
                      "end": {
                        "row": 9,
                        "column": 10
                      },
                      "text": "not"
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 9,
                        "column": 11
                      },
                      "end": {
                        "row": 9,
                        "column": 58
                      },
                      "text": "isinstance(actor_handle, ray.actor.ActorHandle)",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 9,
                            "column": 11
                          },
                          "end": {
                            "row": 9,
                            "column": 21
                          },
                          "text": "isinstance"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 9,
                            "column": 21
                          },
                          "end": {
                            "row": 9,
                            "column": 58
                          },
                          "text": "(actor_handle, ray.actor.ActorHandle)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 9,
                                "column": 21
                              },
                              "end": {
                                "row": 9,
                                "column": 22
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 9,
                                "column": 22
                              },
                              "end": {
                                "row": 9,
                                "column": 34
                              },
                              "text": "actor_handle"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 9,
                                "column": 34
                              },
                              "end": {
                                "row": 9,
                                "column": 35
                              },
                              "text": ","
                            },
                            {
                              "type": "attribute",
                              "start": {
                                "row": 9,
                                "column": 36
                              },
                              "end": {
                                "row": 9,
                                "column": 57
                              },
                              "text": "ray.actor.ActorHandle",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 9,
                                    "column": 36
                                  },
                                  "end": {
                                    "row": 9,
                                    "column": 45
                                  },
                                  "text": "ray.actor",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 9,
                                        "column": 36
                                      },
                                      "end": {
                                        "row": 9,
                                        "column": 39
                                      },
                                      "text": "ray"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 9,
                                        "column": 39
                                      },
                                      "end": {
                                        "row": 9,
                                        "column": 40
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 9,
                                        "column": 40
                                      },
                                      "end": {
                                        "row": 9,
                                        "column": 45
                                      },
                                      "text": "actor"
                                    }
                                  ]
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 9,
                                    "column": 45
                                  },
                                  "end": {
                                    "row": 9,
                                    "column": 46
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 9,
                                    "column": 46
                                  },
                                  "end": {
                                    "row": 9,
                                    "column": 57
                                  },
                                  "text": "ActorHandle"
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 9,
                                "column": 57
                              },
                              "end": {
                                "row": 9,
                                "column": 58
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 9,
                    "column": 58
                  },
                  "end": {
                    "row": 9,
                    "column": 59
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 10,
                    "column": 8
                  },
                  "end": {
                    "row": 11,
                    "column": 34
                  },
                  "text": "raise TypeError(\"The actor_handle argument must be an ActorHandle \"\n                        \"object.\")",
                  "children": [
                    {
                      "type": "raise_statement",
                      "start": {
                        "row": 10,
                        "column": 8
                      },
                      "end": {
                        "row": 11,
                        "column": 34
                      },
                      "text": "raise TypeError(\"The actor_handle argument must be an ActorHandle \"\n                        \"object.\")",
                      "children": [
                        {
                          "type": "raise",
                          "start": {
                            "row": 10,
                            "column": 8
                          },
                          "end": {
                            "row": 10,
                            "column": 13
                          },
                          "text": "raise"
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 10,
                            "column": 14
                          },
                          "end": {
                            "row": 11,
                            "column": 34
                          },
                          "text": "TypeError(\"The actor_handle argument must be an ActorHandle \"\n                        \"object.\")",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 10,
                                "column": 14
                              },
                              "end": {
                                "row": 10,
                                "column": 23
                              },
                              "text": "TypeError"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 10,
                                "column": 23
                              },
                              "end": {
                                "row": 11,
                                "column": 34
                              },
                              "text": "(\"The actor_handle argument must be an ActorHandle \"\n                        \"object.\")",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 10,
                                    "column": 23
                                  },
                                  "end": {
                                    "row": 10,
                                    "column": 24
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "concatenated_string",
                                  "start": {
                                    "row": 10,
                                    "column": 24
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 33
                                  },
                                  "text": "\"The actor_handle argument must be an ActorHandle \"\n                        \"object.\"",
                                  "children": [
                                    {
                                      "type": "string",
                                      "start": {
                                        "row": 10,
                                        "column": 24
                                      },
                                      "end": {
                                        "row": 10,
                                        "column": 75
                                      },
                                      "text": "\"The actor_handle argument must be an ActorHandle \"",
                                      "children": [
                                        {
                                          "type": "string_start",
                                          "start": {
                                            "row": 10,
                                            "column": 24
                                          },
                                          "end": {
                                            "row": 10,
                                            "column": 25
                                          },
                                          "text": "\""
                                        },
                                        {
                                          "type": "string_content",
                                          "start": {
                                            "row": 10,
                                            "column": 25
                                          },
                                          "end": {
                                            "row": 10,
                                            "column": 74
                                          },
                                          "text": "The actor_handle argument must be an ActorHandle "
                                        },
                                        {
                                          "type": "string_end",
                                          "start": {
                                            "row": 10,
                                            "column": 74
                                          },
                                          "end": {
                                            "row": 10,
                                            "column": 75
                                          },
                                          "text": "\""
                                        }
                                      ]
                                    },
                                    {
                                      "type": "string",
                                      "start": {
                                        "row": 11,
                                        "column": 24
                                      },
                                      "end": {
                                        "row": 11,
                                        "column": 33
                                      },
                                      "text": "\"object.\"",
                                      "children": [
                                        {
                                          "type": "string_start",
                                          "start": {
                                            "row": 11,
                                            "column": 24
                                          },
                                          "end": {
                                            "row": 11,
                                            "column": 25
                                          },
                                          "text": "\""
                                        },
                                        {
                                          "type": "string_content",
                                          "start": {
                                            "row": 11,
                                            "column": 25
                                          },
                                          "end": {
                                            "row": 11,
                                            "column": 32
                                          },
                                          "text": "object."
                                        },
                                        {
                                          "type": "string_end",
                                          "start": {
                                            "row": 11,
                                            "column": 32
                                          },
                                          "end": {
                                            "row": 11,
                                            "column": 33
                                          },
                                          "text": "\""
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 11,
                                    "column": 33
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 34
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 12,
                "column": 4
              },
              "end": {
                "row": 12,
                "column": 37
              },
              "text": "actor_name = _calculate_key(name)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 12,
                    "column": 4
                  },
                  "end": {
                    "row": 12,
                    "column": 37
                  },
                  "text": "actor_name = _calculate_key(name)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 12,
                        "column": 4
                      },
                      "end": {
                        "row": 12,
                        "column": 14
                      },
                      "text": "actor_name"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 12,
                        "column": 15
                      },
                      "end": {
                        "row": 12,
                        "column": 16
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 12,
                        "column": 17
                      },
                      "end": {
                        "row": 12,
                        "column": 37
                      },
                      "text": "_calculate_key(name)",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 12,
                            "column": 17
                          },
                          "end": {
                            "row": 12,
                            "column": 31
                          },
                          "text": "_calculate_key"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 12,
                            "column": 31
                          },
                          "end": {
                            "row": 12,
                            "column": 37
                          },
                          "text": "(name)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 12,
                                "column": 31
                              },
                              "end": {
                                "row": 12,
                                "column": 32
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 12,
                                "column": 32
                              },
                              "end": {
                                "row": 12,
                                "column": 36
                              },
                              "text": "name"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 12,
                                "column": 36
                              },
                              "end": {
                                "row": 12,
                                "column": 37
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 13,
                "column": 4
              },
              "end": {
                "row": 13,
                "column": 46
              },
              "text": "pickled_state = pickle.dumps(actor_handle)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 13,
                    "column": 4
                  },
                  "end": {
                    "row": 13,
                    "column": 46
                  },
                  "text": "pickled_state = pickle.dumps(actor_handle)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 13,
                        "column": 4
                      },
                      "end": {
                        "row": 13,
                        "column": 17
                      },
                      "text": "pickled_state"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 13,
                        "column": 18
                      },
                      "end": {
                        "row": 13,
                        "column": 19
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 13,
                        "column": 20
                      },
                      "end": {
                        "row": 13,
                        "column": 46
                      },
                      "text": "pickle.dumps(actor_handle)",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 13,
                            "column": 20
                          },
                          "end": {
                            "row": 13,
                            "column": 32
                          },
                          "text": "pickle.dumps",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 13,
                                "column": 20
                              },
                              "end": {
                                "row": 13,
                                "column": 26
                              },
                              "text": "pickle"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 13,
                                "column": 26
                              },
                              "end": {
                                "row": 13,
                                "column": 27
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 13,
                                "column": 27
                              },
                              "end": {
                                "row": 13,
                                "column": 32
                              },
                              "text": "dumps"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 13,
                            "column": 32
                          },
                          "end": {
                            "row": 13,
                            "column": 46
                          },
                          "text": "(actor_handle)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 13,
                                "column": 32
                              },
                              "end": {
                                "row": 13,
                                "column": 33
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 13,
                                "column": 33
                              },
                              "end": {
                                "row": 13,
                                "column": 45
                              },
                              "text": "actor_handle"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 13,
                                "column": 45
                              },
                              "end": {
                                "row": 13,
                                "column": 46
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 15,
                "column": 4
              },
              "end": {
                "row": 15,
                "column": 58
              },
              "text": "# Add the actor to Redis if it does not already exist."
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 16,
                "column": 4
              },
              "end": {
                "row": 16,
                "column": 64
              },
              "text": "already_exists = _internal_kv_put(actor_name, pickled_state)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 16,
                    "column": 4
                  },
                  "end": {
                    "row": 16,
                    "column": 64
                  },
                  "text": "already_exists = _internal_kv_put(actor_name, pickled_state)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 16,
                        "column": 4
                      },
                      "end": {
                        "row": 16,
                        "column": 18
                      },
                      "text": "already_exists"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 16,
                        "column": 19
                      },
                      "end": {
                        "row": 16,
                        "column": 20
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 16,
                        "column": 21
                      },
                      "end": {
                        "row": 16,
                        "column": 64
                      },
                      "text": "_internal_kv_put(actor_name, pickled_state)",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 16,
                            "column": 21
                          },
                          "end": {
                            "row": 16,
                            "column": 37
                          },
                          "text": "_internal_kv_put"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 16,
                            "column": 37
                          },
                          "end": {
                            "row": 16,
                            "column": 64
                          },
                          "text": "(actor_name, pickled_state)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 16,
                                "column": 37
                              },
                              "end": {
                                "row": 16,
                                "column": 38
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 16,
                                "column": 38
                              },
                              "end": {
                                "row": 16,
                                "column": 48
                              },
                              "text": "actor_name"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 16,
                                "column": 48
                              },
                              "end": {
                                "row": 16,
                                "column": 49
                              },
                              "text": ","
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 16,
                                "column": 50
                              },
                              "end": {
                                "row": 16,
                                "column": 63
                              },
                              "text": "pickled_state"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 16,
                                "column": 63
                              },
                              "end": {
                                "row": 16,
                                "column": 64
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 17,
                "column": 4
              },
              "end": {
                "row": 22,
                "column": 72
              },
              "text": "if already_exists:\n        # If the registration fails, then erase the new actor handle that\n        # was added when pickling the actor handle.\n        actor_handle._ray_new_actor_handles.pop()\n        raise ValueError(\n            \"Error: the actor with name={} already exists\".format(name))",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 17,
                    "column": 4
                  },
                  "end": {
                    "row": 17,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 17,
                    "column": 7
                  },
                  "end": {
                    "row": 17,
                    "column": 21
                  },
                  "text": "already_exists"
                },
                {
                  "type": ":",
                  "start": {
                    "row": 17,
                    "column": 21
                  },
                  "end": {
                    "row": 17,
                    "column": 22
                  },
                  "text": ":"
                },
                {
                  "type": "comment",
                  "start": {
                    "row": 18,
                    "column": 8
                  },
                  "end": {
                    "row": 18,
                    "column": 73
                  },
                  "text": "# If the registration fails, then erase the new actor handle that"
                },
                {
                  "type": "comment",
                  "start": {
                    "row": 19,
                    "column": 8
                  },
                  "end": {
                    "row": 19,
                    "column": 51
                  },
                  "text": "# was added when pickling the actor handle."
                },
                {
                  "type": "block",
                  "start": {
                    "row": 20,
                    "column": 8
                  },
                  "end": {
                    "row": 22,
                    "column": 72
                  },
                  "text": "actor_handle._ray_new_actor_handles.pop()\n        raise ValueError(\n            \"Error: the actor with name={} already exists\".format(name))",
                  "children": [
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 20,
                        "column": 8
                      },
                      "end": {
                        "row": 20,
                        "column": 49
                      },
                      "text": "actor_handle._ray_new_actor_handles.pop()",
                      "children": [
                        {
                          "type": "call",
                          "start": {
                            "row": 20,
                            "column": 8
                          },
                          "end": {
                            "row": 20,
                            "column": 49
                          },
                          "text": "actor_handle._ray_new_actor_handles.pop()",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 20,
                                "column": 8
                              },
                              "end": {
                                "row": 20,
                                "column": 47
                              },
                              "text": "actor_handle._ray_new_actor_handles.pop",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 20,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 20,
                                    "column": 43
                                  },
                                  "text": "actor_handle._ray_new_actor_handles",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 20,
                                        "column": 8
                                      },
                                      "end": {
                                        "row": 20,
                                        "column": 20
                                      },
                                      "text": "actor_handle"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 20,
                                        "column": 20
                                      },
                                      "end": {
                                        "row": 20,
                                        "column": 21
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 20,
                                        "column": 21
                                      },
                                      "end": {
                                        "row": 20,
                                        "column": 43
                                      },
                                      "text": "_ray_new_actor_handles"
                                    }
                                  ]
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 20,
                                    "column": 43
                                  },
                                  "end": {
                                    "row": 20,
                                    "column": 44
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 20,
                                    "column": 44
                                  },
                                  "end": {
                                    "row": 20,
                                    "column": 47
                                  },
                                  "text": "pop"
                                }
                              ]
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 20,
                                "column": 47
                              },
                              "end": {
                                "row": 20,
                                "column": 49
                              },
                              "text": "()",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 20,
                                    "column": 47
                                  },
                                  "end": {
                                    "row": 20,
                                    "column": 48
                                  },
                                  "text": "("
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 20,
                                    "column": 48
                                  },
                                  "end": {
                                    "row": 20,
                                    "column": 49
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "raise_statement",
                      "start": {
                        "row": 21,
                        "column": 8
                      },
                      "end": {
                        "row": 22,
                        "column": 72
                      },
                      "text": "raise ValueError(\n            \"Error: the actor with name={} already exists\".format(name))",
                      "children": [
                        {
                          "type": "raise",
                          "start": {
                            "row": 21,
                            "column": 8
                          },
                          "end": {
                            "row": 21,
                            "column": 13
                          },
                          "text": "raise"
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 21,
                            "column": 14
                          },
                          "end": {
                            "row": 22,
                            "column": 72
                          },
                          "text": "ValueError(\n            \"Error: the actor with name={} already exists\".format(name))",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 21,
                                "column": 14
                              },
                              "end": {
                                "row": 21,
                                "column": 24
                              },
                              "text": "ValueError"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 21,
                                "column": 24
                              },
                              "end": {
                                "row": 22,
                                "column": 72
                              },
                              "text": "(\n            \"Error: the actor with name={} already exists\".format(name))",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 21,
                                    "column": 24
                                  },
                                  "end": {
                                    "row": 21,
                                    "column": 25
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "call",
                                  "start": {
                                    "row": 22,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 22,
                                    "column": 71
                                  },
                                  "text": "\"Error: the actor with name={} already exists\".format(name)",
                                  "children": [
                                    {
                                      "type": "attribute",
                                      "start": {
                                        "row": 22,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 22,
                                        "column": 65
                                      },
                                      "text": "\"Error: the actor with name={} already exists\".format",
                                      "children": [
                                        {
                                          "type": "string",
                                          "start": {
                                            "row": 22,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 22,
                                            "column": 58
                                          },
                                          "text": "\"Error: the actor with name={} already exists\"",
                                          "children": [
                                            {
                                              "type": "string_start",
                                              "start": {
                                                "row": 22,
                                                "column": 12
                                              },
                                              "end": {
                                                "row": 22,
                                                "column": 13
                                              },
                                              "text": "\""
                                            },
                                            {
                                              "type": "string_content",
                                              "start": {
                                                "row": 22,
                                                "column": 13
                                              },
                                              "end": {
                                                "row": 22,
                                                "column": 57
                                              },
                                              "text": "Error: the actor with name={} already exists"
                                            },
                                            {
                                              "type": "string_end",
                                              "start": {
                                                "row": 22,
                                                "column": 57
                                              },
                                              "end": {
                                                "row": 22,
                                                "column": 58
                                              },
                                              "text": "\""
                                            }
                                          ]
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 22,
                                            "column": 58
                                          },
                                          "end": {
                                            "row": 22,
                                            "column": 59
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 22,
                                            "column": 59
                                          },
                                          "end": {
                                            "row": 22,
                                            "column": 65
                                          },
                                          "text": "format"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "argument_list",
                                      "start": {
                                        "row": 22,
                                        "column": 65
                                      },
                                      "end": {
                                        "row": 22,
                                        "column": 71
                                      },
                                      "text": "(name)",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 22,
                                            "column": 65
                                          },
                                          "end": {
                                            "row": 22,
                                            "column": 66
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 22,
                                            "column": 66
                                          },
                                          "end": {
                                            "row": 22,
                                            "column": 70
                                          },
                                          "text": "name"
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 22,
                                            "column": 70
                                          },
                                          "end": {
                                            "row": 22,
                                            "column": 71
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 22,
                                    "column": 71
                                  },
                                  "end": {
                                    "row": 22,
                                    "column": 72
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}