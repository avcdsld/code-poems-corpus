{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 19,
    "column": 38
  },
  "text": "def num_rewards(self):\n    \"\"\"Returns the number of distinct rewards.\n\n    Returns:\n      Returns None if the reward range is infinite or the processed rewards\n      aren't discrete, otherwise returns the number of distinct rewards.\n    \"\"\"\n\n    # Pre-conditions: reward range is finite.\n    #               : processed rewards are discrete.\n    if not self.is_reward_range_finite:\n      tf.logging.error(\"Infinite reward range, `num_rewards returning None`\")\n      return None\n    if not self.is_processed_rewards_discrete:\n      tf.logging.error(\n          \"Processed rewards are not discrete, `num_rewards` returning None\")\n      return None\n\n    min_reward, max_reward = self.reward_range\n    return max_reward - min_reward + 1",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 19,
        "column": 38
      },
      "text": "def num_rewards(self):\n    \"\"\"Returns the number of distinct rewards.\n\n    Returns:\n      Returns None if the reward range is infinite or the processed rewards\n      aren't discrete, otherwise returns the number of distinct rewards.\n    \"\"\"\n\n    # Pre-conditions: reward range is finite.\n    #               : processed rewards are discrete.\n    if not self.is_reward_range_finite:\n      tf.logging.error(\"Infinite reward range, `num_rewards returning None`\")\n      return None\n    if not self.is_processed_rewards_discrete:\n      tf.logging.error(\n          \"Processed rewards are not discrete, `num_rewards` returning None\")\n      return None\n\n    min_reward, max_reward = self.reward_range\n    return max_reward - min_reward + 1",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 15
          },
          "text": "num_rewards"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 15
          },
          "end": {
            "row": 0,
            "column": 21
          },
          "text": "(self)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 15
              },
              "end": {
                "row": 0,
                "column": 16
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 16
              },
              "end": {
                "row": 0,
                "column": 20
              },
              "text": "self"
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 20
              },
              "end": {
                "row": 0,
                "column": 21
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 21
          },
          "end": {
            "row": 0,
            "column": 22
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 4
          },
          "end": {
            "row": 19,
            "column": 38
          },
          "text": "\"\"\"Returns the number of distinct rewards.\n\n    Returns:\n      Returns None if the reward range is infinite or the processed rewards\n      aren't discrete, otherwise returns the number of distinct rewards.\n    \"\"\"\n\n    # Pre-conditions: reward range is finite.\n    #               : processed rewards are discrete.\n    if not self.is_reward_range_finite:\n      tf.logging.error(\"Infinite reward range, `num_rewards returning None`\")\n      return None\n    if not self.is_processed_rewards_discrete:\n      tf.logging.error(\n          \"Processed rewards are not discrete, `num_rewards` returning None\")\n      return None\n\n    min_reward, max_reward = self.reward_range\n    return max_reward - min_reward + 1",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 4
              },
              "end": {
                "row": 6,
                "column": 7
              },
              "text": "\"\"\"Returns the number of distinct rewards.\n\n    Returns:\n      Returns None if the reward range is infinite or the processed rewards\n      aren't discrete, otherwise returns the number of distinct rewards.\n    \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 4
                  },
                  "end": {
                    "row": 6,
                    "column": 7
                  },
                  "text": "\"\"\"Returns the number of distinct rewards.\n\n    Returns:\n      Returns None if the reward range is infinite or the processed rewards\n      aren't discrete, otherwise returns the number of distinct rewards.\n    \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 4
                      },
                      "end": {
                        "row": 1,
                        "column": 7
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 7
                      },
                      "end": {
                        "row": 6,
                        "column": 4
                      },
                      "text": "Returns the number of distinct rewards.\n\n    Returns:\n      Returns None if the reward range is infinite or the processed rewards\n      aren't discrete, otherwise returns the number of distinct rewards.\n    "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 6,
                        "column": 4
                      },
                      "end": {
                        "row": 6,
                        "column": 7
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 8,
                "column": 4
              },
              "end": {
                "row": 8,
                "column": 45
              },
              "text": "# Pre-conditions: reward range is finite."
            },
            {
              "type": "comment",
              "start": {
                "row": 9,
                "column": 4
              },
              "end": {
                "row": 9,
                "column": 53
              },
              "text": "#               : processed rewards are discrete."
            },
            {
              "type": "if_statement",
              "start": {
                "row": 10,
                "column": 4
              },
              "end": {
                "row": 12,
                "column": 17
              },
              "text": "if not self.is_reward_range_finite:\n      tf.logging.error(\"Infinite reward range, `num_rewards returning None`\")\n      return None",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 10,
                    "column": 4
                  },
                  "end": {
                    "row": 10,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "not_operator",
                  "start": {
                    "row": 10,
                    "column": 7
                  },
                  "end": {
                    "row": 10,
                    "column": 38
                  },
                  "text": "not self.is_reward_range_finite",
                  "children": [
                    {
                      "type": "not",
                      "start": {
                        "row": 10,
                        "column": 7
                      },
                      "end": {
                        "row": 10,
                        "column": 10
                      },
                      "text": "not"
                    },
                    {
                      "type": "attribute",
                      "start": {
                        "row": 10,
                        "column": 11
                      },
                      "end": {
                        "row": 10,
                        "column": 38
                      },
                      "text": "self.is_reward_range_finite",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 10,
                            "column": 11
                          },
                          "end": {
                            "row": 10,
                            "column": 15
                          },
                          "text": "self"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 10,
                            "column": 15
                          },
                          "end": {
                            "row": 10,
                            "column": 16
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 10,
                            "column": 16
                          },
                          "end": {
                            "row": 10,
                            "column": 38
                          },
                          "text": "is_reward_range_finite"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 10,
                    "column": 38
                  },
                  "end": {
                    "row": 10,
                    "column": 39
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 11,
                    "column": 6
                  },
                  "end": {
                    "row": 12,
                    "column": 17
                  },
                  "text": "tf.logging.error(\"Infinite reward range, `num_rewards returning None`\")\n      return None",
                  "children": [
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 11,
                        "column": 6
                      },
                      "end": {
                        "row": 11,
                        "column": 77
                      },
                      "text": "tf.logging.error(\"Infinite reward range, `num_rewards returning None`\")",
                      "children": [
                        {
                          "type": "call",
                          "start": {
                            "row": 11,
                            "column": 6
                          },
                          "end": {
                            "row": 11,
                            "column": 77
                          },
                          "text": "tf.logging.error(\"Infinite reward range, `num_rewards returning None`\")",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 11,
                                "column": 6
                              },
                              "end": {
                                "row": 11,
                                "column": 22
                              },
                              "text": "tf.logging.error",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 11,
                                    "column": 6
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 16
                                  },
                                  "text": "tf.logging",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 11,
                                        "column": 6
                                      },
                                      "end": {
                                        "row": 11,
                                        "column": 8
                                      },
                                      "text": "tf"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 11,
                                        "column": 8
                                      },
                                      "end": {
                                        "row": 11,
                                        "column": 9
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 11,
                                        "column": 9
                                      },
                                      "end": {
                                        "row": 11,
                                        "column": 16
                                      },
                                      "text": "logging"
                                    }
                                  ]
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 11,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 17
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 11,
                                    "column": 17
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 22
                                  },
                                  "text": "error"
                                }
                              ]
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 11,
                                "column": 22
                              },
                              "end": {
                                "row": 11,
                                "column": 77
                              },
                              "text": "(\"Infinite reward range, `num_rewards returning None`\")",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 11,
                                    "column": 22
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 23
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "string",
                                  "start": {
                                    "row": 11,
                                    "column": 23
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 76
                                  },
                                  "text": "\"Infinite reward range, `num_rewards returning None`\"",
                                  "children": [
                                    {
                                      "type": "string_start",
                                      "start": {
                                        "row": 11,
                                        "column": 23
                                      },
                                      "end": {
                                        "row": 11,
                                        "column": 24
                                      },
                                      "text": "\""
                                    },
                                    {
                                      "type": "string_content",
                                      "start": {
                                        "row": 11,
                                        "column": 24
                                      },
                                      "end": {
                                        "row": 11,
                                        "column": 75
                                      },
                                      "text": "Infinite reward range, `num_rewards returning None`"
                                    },
                                    {
                                      "type": "string_end",
                                      "start": {
                                        "row": 11,
                                        "column": 75
                                      },
                                      "end": {
                                        "row": 11,
                                        "column": 76
                                      },
                                      "text": "\""
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 11,
                                    "column": 76
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 77
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "return_statement",
                      "start": {
                        "row": 12,
                        "column": 6
                      },
                      "end": {
                        "row": 12,
                        "column": 17
                      },
                      "text": "return None",
                      "children": [
                        {
                          "type": "return",
                          "start": {
                            "row": 12,
                            "column": 6
                          },
                          "end": {
                            "row": 12,
                            "column": 12
                          },
                          "text": "return"
                        },
                        {
                          "type": "none",
                          "start": {
                            "row": 12,
                            "column": 13
                          },
                          "end": {
                            "row": 12,
                            "column": 17
                          },
                          "text": "None"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 13,
                "column": 4
              },
              "end": {
                "row": 16,
                "column": 17
              },
              "text": "if not self.is_processed_rewards_discrete:\n      tf.logging.error(\n          \"Processed rewards are not discrete, `num_rewards` returning None\")\n      return None",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 13,
                    "column": 4
                  },
                  "end": {
                    "row": 13,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "not_operator",
                  "start": {
                    "row": 13,
                    "column": 7
                  },
                  "end": {
                    "row": 13,
                    "column": 45
                  },
                  "text": "not self.is_processed_rewards_discrete",
                  "children": [
                    {
                      "type": "not",
                      "start": {
                        "row": 13,
                        "column": 7
                      },
                      "end": {
                        "row": 13,
                        "column": 10
                      },
                      "text": "not"
                    },
                    {
                      "type": "attribute",
                      "start": {
                        "row": 13,
                        "column": 11
                      },
                      "end": {
                        "row": 13,
                        "column": 45
                      },
                      "text": "self.is_processed_rewards_discrete",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 13,
                            "column": 11
                          },
                          "end": {
                            "row": 13,
                            "column": 15
                          },
                          "text": "self"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 13,
                            "column": 15
                          },
                          "end": {
                            "row": 13,
                            "column": 16
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 13,
                            "column": 16
                          },
                          "end": {
                            "row": 13,
                            "column": 45
                          },
                          "text": "is_processed_rewards_discrete"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 13,
                    "column": 45
                  },
                  "end": {
                    "row": 13,
                    "column": 46
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 14,
                    "column": 6
                  },
                  "end": {
                    "row": 16,
                    "column": 17
                  },
                  "text": "tf.logging.error(\n          \"Processed rewards are not discrete, `num_rewards` returning None\")\n      return None",
                  "children": [
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 14,
                        "column": 6
                      },
                      "end": {
                        "row": 15,
                        "column": 77
                      },
                      "text": "tf.logging.error(\n          \"Processed rewards are not discrete, `num_rewards` returning None\")",
                      "children": [
                        {
                          "type": "call",
                          "start": {
                            "row": 14,
                            "column": 6
                          },
                          "end": {
                            "row": 15,
                            "column": 77
                          },
                          "text": "tf.logging.error(\n          \"Processed rewards are not discrete, `num_rewards` returning None\")",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 14,
                                "column": 6
                              },
                              "end": {
                                "row": 14,
                                "column": 22
                              },
                              "text": "tf.logging.error",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 14,
                                    "column": 6
                                  },
                                  "end": {
                                    "row": 14,
                                    "column": 16
                                  },
                                  "text": "tf.logging",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 14,
                                        "column": 6
                                      },
                                      "end": {
                                        "row": 14,
                                        "column": 8
                                      },
                                      "text": "tf"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 14,
                                        "column": 8
                                      },
                                      "end": {
                                        "row": 14,
                                        "column": 9
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 14,
                                        "column": 9
                                      },
                                      "end": {
                                        "row": 14,
                                        "column": 16
                                      },
                                      "text": "logging"
                                    }
                                  ]
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 14,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 14,
                                    "column": 17
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 14,
                                    "column": 17
                                  },
                                  "end": {
                                    "row": 14,
                                    "column": 22
                                  },
                                  "text": "error"
                                }
                              ]
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 14,
                                "column": 22
                              },
                              "end": {
                                "row": 15,
                                "column": 77
                              },
                              "text": "(\n          \"Processed rewards are not discrete, `num_rewards` returning None\")",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 14,
                                    "column": 22
                                  },
                                  "end": {
                                    "row": 14,
                                    "column": 23
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "string",
                                  "start": {
                                    "row": 15,
                                    "column": 10
                                  },
                                  "end": {
                                    "row": 15,
                                    "column": 76
                                  },
                                  "text": "\"Processed rewards are not discrete, `num_rewards` returning None\"",
                                  "children": [
                                    {
                                      "type": "string_start",
                                      "start": {
                                        "row": 15,
                                        "column": 10
                                      },
                                      "end": {
                                        "row": 15,
                                        "column": 11
                                      },
                                      "text": "\""
                                    },
                                    {
                                      "type": "string_content",
                                      "start": {
                                        "row": 15,
                                        "column": 11
                                      },
                                      "end": {
                                        "row": 15,
                                        "column": 75
                                      },
                                      "text": "Processed rewards are not discrete, `num_rewards` returning None"
                                    },
                                    {
                                      "type": "string_end",
                                      "start": {
                                        "row": 15,
                                        "column": 75
                                      },
                                      "end": {
                                        "row": 15,
                                        "column": 76
                                      },
                                      "text": "\""
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 15,
                                    "column": 76
                                  },
                                  "end": {
                                    "row": 15,
                                    "column": 77
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "return_statement",
                      "start": {
                        "row": 16,
                        "column": 6
                      },
                      "end": {
                        "row": 16,
                        "column": 17
                      },
                      "text": "return None",
                      "children": [
                        {
                          "type": "return",
                          "start": {
                            "row": 16,
                            "column": 6
                          },
                          "end": {
                            "row": 16,
                            "column": 12
                          },
                          "text": "return"
                        },
                        {
                          "type": "none",
                          "start": {
                            "row": 16,
                            "column": 13
                          },
                          "end": {
                            "row": 16,
                            "column": 17
                          },
                          "text": "None"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 18,
                "column": 4
              },
              "end": {
                "row": 18,
                "column": 46
              },
              "text": "min_reward, max_reward = self.reward_range",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 18,
                    "column": 4
                  },
                  "end": {
                    "row": 18,
                    "column": 46
                  },
                  "text": "min_reward, max_reward = self.reward_range",
                  "children": [
                    {
                      "type": "pattern_list",
                      "start": {
                        "row": 18,
                        "column": 4
                      },
                      "end": {
                        "row": 18,
                        "column": 26
                      },
                      "text": "min_reward, max_reward",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 18,
                            "column": 4
                          },
                          "end": {
                            "row": 18,
                            "column": 14
                          },
                          "text": "min_reward"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 18,
                            "column": 14
                          },
                          "end": {
                            "row": 18,
                            "column": 15
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 18,
                            "column": 16
                          },
                          "end": {
                            "row": 18,
                            "column": 26
                          },
                          "text": "max_reward"
                        }
                      ]
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 18,
                        "column": 27
                      },
                      "end": {
                        "row": 18,
                        "column": 28
                      },
                      "text": "="
                    },
                    {
                      "type": "attribute",
                      "start": {
                        "row": 18,
                        "column": 29
                      },
                      "end": {
                        "row": 18,
                        "column": 46
                      },
                      "text": "self.reward_range",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 18,
                            "column": 29
                          },
                          "end": {
                            "row": 18,
                            "column": 33
                          },
                          "text": "self"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 18,
                            "column": 33
                          },
                          "end": {
                            "row": 18,
                            "column": 34
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 18,
                            "column": 34
                          },
                          "end": {
                            "row": 18,
                            "column": 46
                          },
                          "text": "reward_range"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 19,
                "column": 4
              },
              "end": {
                "row": 19,
                "column": 38
              },
              "text": "return max_reward - min_reward + 1",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 19,
                    "column": 4
                  },
                  "end": {
                    "row": 19,
                    "column": 10
                  },
                  "text": "return"
                },
                {
                  "type": "binary_operator",
                  "start": {
                    "row": 19,
                    "column": 11
                  },
                  "end": {
                    "row": 19,
                    "column": 38
                  },
                  "text": "max_reward - min_reward + 1",
                  "children": [
                    {
                      "type": "binary_operator",
                      "start": {
                        "row": 19,
                        "column": 11
                      },
                      "end": {
                        "row": 19,
                        "column": 34
                      },
                      "text": "max_reward - min_reward",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 19,
                            "column": 11
                          },
                          "end": {
                            "row": 19,
                            "column": 21
                          },
                          "text": "max_reward"
                        },
                        {
                          "type": "-",
                          "start": {
                            "row": 19,
                            "column": 22
                          },
                          "end": {
                            "row": 19,
                            "column": 23
                          },
                          "text": "-"
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 19,
                            "column": 24
                          },
                          "end": {
                            "row": 19,
                            "column": 34
                          },
                          "text": "min_reward"
                        }
                      ]
                    },
                    {
                      "type": "+",
                      "start": {
                        "row": 19,
                        "column": 35
                      },
                      "end": {
                        "row": 19,
                        "column": 36
                      },
                      "text": "+"
                    },
                    {
                      "type": "integer",
                      "start": {
                        "row": 19,
                        "column": 37
                      },
                      "end": {
                        "row": 19,
                        "column": 38
                      },
                      "text": "1"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}