{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 22,
    "column": 53
  },
  "text": "def _get_upload_arguments(self, content_type):\n        \"\"\"Get required arguments for performing an upload.\n\n        The content type returned will be determined in order of precedence:\n\n        - The value passed in to this method (if not :data:`None`)\n        - The value stored on the current blob\n        - The default value ('application/octet-stream')\n\n        :type content_type: str\n        :param content_type: Type of content being uploaded (or :data:`None`).\n\n        :rtype: tuple\n        :returns: A triple of\n\n                  * A header dictionary\n                  * An object metadata dictionary\n                  * The ``content_type`` as a string (according to precedence)\n        \"\"\"\n        headers = _get_encryption_headers(self._encryption_key)\n        object_metadata = self._get_writable_metadata()\n        content_type = self._get_content_type(content_type)\n        return headers, object_metadata, content_type",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 22,
        "column": 53
      },
      "text": "def _get_upload_arguments(self, content_type):\n        \"\"\"Get required arguments for performing an upload.\n\n        The content type returned will be determined in order of precedence:\n\n        - The value passed in to this method (if not :data:`None`)\n        - The value stored on the current blob\n        - The default value ('application/octet-stream')\n\n        :type content_type: str\n        :param content_type: Type of content being uploaded (or :data:`None`).\n\n        :rtype: tuple\n        :returns: A triple of\n\n                  * A header dictionary\n                  * An object metadata dictionary\n                  * The ``content_type`` as a string (according to precedence)\n        \"\"\"\n        headers = _get_encryption_headers(self._encryption_key)\n        object_metadata = self._get_writable_metadata()\n        content_type = self._get_content_type(content_type)\n        return headers, object_metadata, content_type",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 25
          },
          "text": "_get_upload_arguments"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 25
          },
          "end": {
            "row": 0,
            "column": 45
          },
          "text": "(self, content_type)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 25
              },
              "end": {
                "row": 0,
                "column": 26
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 26
              },
              "end": {
                "row": 0,
                "column": 30
              },
              "text": "self"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 30
              },
              "end": {
                "row": 0,
                "column": 31
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 32
              },
              "end": {
                "row": 0,
                "column": 44
              },
              "text": "content_type"
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 44
              },
              "end": {
                "row": 0,
                "column": 45
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 45
          },
          "end": {
            "row": 0,
            "column": 46
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 8
          },
          "end": {
            "row": 22,
            "column": 53
          },
          "text": "\"\"\"Get required arguments for performing an upload.\n\n        The content type returned will be determined in order of precedence:\n\n        - The value passed in to this method (if not :data:`None`)\n        - The value stored on the current blob\n        - The default value ('application/octet-stream')\n\n        :type content_type: str\n        :param content_type: Type of content being uploaded (or :data:`None`).\n\n        :rtype: tuple\n        :returns: A triple of\n\n                  * A header dictionary\n                  * An object metadata dictionary\n                  * The ``content_type`` as a string (according to precedence)\n        \"\"\"\n        headers = _get_encryption_headers(self._encryption_key)\n        object_metadata = self._get_writable_metadata()\n        content_type = self._get_content_type(content_type)\n        return headers, object_metadata, content_type",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 8
              },
              "end": {
                "row": 18,
                "column": 11
              },
              "text": "\"\"\"Get required arguments for performing an upload.\n\n        The content type returned will be determined in order of precedence:\n\n        - The value passed in to this method (if not :data:`None`)\n        - The value stored on the current blob\n        - The default value ('application/octet-stream')\n\n        :type content_type: str\n        :param content_type: Type of content being uploaded (or :data:`None`).\n\n        :rtype: tuple\n        :returns: A triple of\n\n                  * A header dictionary\n                  * An object metadata dictionary\n                  * The ``content_type`` as a string (according to precedence)\n        \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 8
                  },
                  "end": {
                    "row": 18,
                    "column": 11
                  },
                  "text": "\"\"\"Get required arguments for performing an upload.\n\n        The content type returned will be determined in order of precedence:\n\n        - The value passed in to this method (if not :data:`None`)\n        - The value stored on the current blob\n        - The default value ('application/octet-stream')\n\n        :type content_type: str\n        :param content_type: Type of content being uploaded (or :data:`None`).\n\n        :rtype: tuple\n        :returns: A triple of\n\n                  * A header dictionary\n                  * An object metadata dictionary\n                  * The ``content_type`` as a string (according to precedence)\n        \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 8
                      },
                      "end": {
                        "row": 1,
                        "column": 11
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 11
                      },
                      "end": {
                        "row": 18,
                        "column": 8
                      },
                      "text": "Get required arguments for performing an upload.\n\n        The content type returned will be determined in order of precedence:\n\n        - The value passed in to this method (if not :data:`None`)\n        - The value stored on the current blob\n        - The default value ('application/octet-stream')\n\n        :type content_type: str\n        :param content_type: Type of content being uploaded (or :data:`None`).\n\n        :rtype: tuple\n        :returns: A triple of\n\n                  * A header dictionary\n                  * An object metadata dictionary\n                  * The ``content_type`` as a string (according to precedence)\n        "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 18,
                        "column": 8
                      },
                      "end": {
                        "row": 18,
                        "column": 11
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 19,
                "column": 8
              },
              "end": {
                "row": 19,
                "column": 63
              },
              "text": "headers = _get_encryption_headers(self._encryption_key)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 19,
                    "column": 8
                  },
                  "end": {
                    "row": 19,
                    "column": 63
                  },
                  "text": "headers = _get_encryption_headers(self._encryption_key)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 19,
                        "column": 8
                      },
                      "end": {
                        "row": 19,
                        "column": 15
                      },
                      "text": "headers"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 19,
                        "column": 16
                      },
                      "end": {
                        "row": 19,
                        "column": 17
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 19,
                        "column": 18
                      },
                      "end": {
                        "row": 19,
                        "column": 63
                      },
                      "text": "_get_encryption_headers(self._encryption_key)",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 19,
                            "column": 18
                          },
                          "end": {
                            "row": 19,
                            "column": 41
                          },
                          "text": "_get_encryption_headers"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 19,
                            "column": 41
                          },
                          "end": {
                            "row": 19,
                            "column": 63
                          },
                          "text": "(self._encryption_key)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 19,
                                "column": 41
                              },
                              "end": {
                                "row": 19,
                                "column": 42
                              },
                              "text": "("
                            },
                            {
                              "type": "attribute",
                              "start": {
                                "row": 19,
                                "column": 42
                              },
                              "end": {
                                "row": 19,
                                "column": 62
                              },
                              "text": "self._encryption_key",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 19,
                                    "column": 42
                                  },
                                  "end": {
                                    "row": 19,
                                    "column": 46
                                  },
                                  "text": "self"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 19,
                                    "column": 46
                                  },
                                  "end": {
                                    "row": 19,
                                    "column": 47
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 19,
                                    "column": 47
                                  },
                                  "end": {
                                    "row": 19,
                                    "column": 62
                                  },
                                  "text": "_encryption_key"
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 19,
                                "column": 62
                              },
                              "end": {
                                "row": 19,
                                "column": 63
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 20,
                "column": 8
              },
              "end": {
                "row": 20,
                "column": 55
              },
              "text": "object_metadata = self._get_writable_metadata()",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 20,
                    "column": 8
                  },
                  "end": {
                    "row": 20,
                    "column": 55
                  },
                  "text": "object_metadata = self._get_writable_metadata()",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 20,
                        "column": 8
                      },
                      "end": {
                        "row": 20,
                        "column": 23
                      },
                      "text": "object_metadata"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 20,
                        "column": 24
                      },
                      "end": {
                        "row": 20,
                        "column": 25
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 20,
                        "column": 26
                      },
                      "end": {
                        "row": 20,
                        "column": 55
                      },
                      "text": "self._get_writable_metadata()",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 20,
                            "column": 26
                          },
                          "end": {
                            "row": 20,
                            "column": 53
                          },
                          "text": "self._get_writable_metadata",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 20,
                                "column": 26
                              },
                              "end": {
                                "row": 20,
                                "column": 30
                              },
                              "text": "self"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 20,
                                "column": 30
                              },
                              "end": {
                                "row": 20,
                                "column": 31
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 20,
                                "column": 31
                              },
                              "end": {
                                "row": 20,
                                "column": 53
                              },
                              "text": "_get_writable_metadata"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 20,
                            "column": 53
                          },
                          "end": {
                            "row": 20,
                            "column": 55
                          },
                          "text": "()",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 20,
                                "column": 53
                              },
                              "end": {
                                "row": 20,
                                "column": 54
                              },
                              "text": "("
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 20,
                                "column": 54
                              },
                              "end": {
                                "row": 20,
                                "column": 55
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 21,
                "column": 8
              },
              "end": {
                "row": 21,
                "column": 59
              },
              "text": "content_type = self._get_content_type(content_type)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 21,
                    "column": 8
                  },
                  "end": {
                    "row": 21,
                    "column": 59
                  },
                  "text": "content_type = self._get_content_type(content_type)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 21,
                        "column": 8
                      },
                      "end": {
                        "row": 21,
                        "column": 20
                      },
                      "text": "content_type"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 21,
                        "column": 21
                      },
                      "end": {
                        "row": 21,
                        "column": 22
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 21,
                        "column": 23
                      },
                      "end": {
                        "row": 21,
                        "column": 59
                      },
                      "text": "self._get_content_type(content_type)",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 21,
                            "column": 23
                          },
                          "end": {
                            "row": 21,
                            "column": 45
                          },
                          "text": "self._get_content_type",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 21,
                                "column": 23
                              },
                              "end": {
                                "row": 21,
                                "column": 27
                              },
                              "text": "self"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 21,
                                "column": 27
                              },
                              "end": {
                                "row": 21,
                                "column": 28
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 21,
                                "column": 28
                              },
                              "end": {
                                "row": 21,
                                "column": 45
                              },
                              "text": "_get_content_type"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 21,
                            "column": 45
                          },
                          "end": {
                            "row": 21,
                            "column": 59
                          },
                          "text": "(content_type)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 21,
                                "column": 45
                              },
                              "end": {
                                "row": 21,
                                "column": 46
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 21,
                                "column": 46
                              },
                              "end": {
                                "row": 21,
                                "column": 58
                              },
                              "text": "content_type"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 21,
                                "column": 58
                              },
                              "end": {
                                "row": 21,
                                "column": 59
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 22,
                "column": 8
              },
              "end": {
                "row": 22,
                "column": 53
              },
              "text": "return headers, object_metadata, content_type",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 22,
                    "column": 8
                  },
                  "end": {
                    "row": 22,
                    "column": 14
                  },
                  "text": "return"
                },
                {
                  "type": "expression_list",
                  "start": {
                    "row": 22,
                    "column": 15
                  },
                  "end": {
                    "row": 22,
                    "column": 53
                  },
                  "text": "headers, object_metadata, content_type",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 22,
                        "column": 15
                      },
                      "end": {
                        "row": 22,
                        "column": 22
                      },
                      "text": "headers"
                    },
                    {
                      "type": ",",
                      "start": {
                        "row": 22,
                        "column": 22
                      },
                      "end": {
                        "row": 22,
                        "column": 23
                      },
                      "text": ","
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 22,
                        "column": 24
                      },
                      "end": {
                        "row": 22,
                        "column": 39
                      },
                      "text": "object_metadata"
                    },
                    {
                      "type": ",",
                      "start": {
                        "row": 22,
                        "column": 39
                      },
                      "end": {
                        "row": 22,
                        "column": 40
                      },
                      "text": ","
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 22,
                        "column": 41
                      },
                      "end": {
                        "row": 22,
                        "column": 53
                      },
                      "text": "content_type"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}